[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"awzhenyi":17,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"##Introduction"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"Duke is a interactive chatbot that helps the user keep track of the tasks he has to accomplish."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"* `help`"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"* `load`"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"* `list`"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"* `event [taskName] /at [yyyy-MM-dd] [startTime-endTime]`"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"* `deadline [taskName] /by [yyyy-MM-dd] [endTime]`"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"* `todo [taskName]`"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"* `done [taskNumber]`"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"* `delete [taskNumber]`"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"* `find [keyword]`"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"* `detect`"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"* `clean`"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"* `save`"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"* `bye`"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"### `help`"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"* Provides the user with a list of all available commands and how to use them"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"### `load`"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"* Loads the text file of saved task lists into the current run of duke"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"### `list`"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"* List all available tasks currently in the task list to the user"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"### `event [taskName] /at [yyyy-MM-dd] [startTime-endTime]`"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"* Creates a event task and adds it to the task list"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"* Example of usage: event project meeting /at 2019-12-01 2-4pm"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"### `deadline [taskName] /by [yyyy-MM-dd] [endTime]`"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"* Creates a deadline task and adds it to the task list"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"* Example of usage: deadline project meeting /by 2019-12-01 4pm"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"### `todo [taskName]`"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"* Creates a to do task and adds it to the task list"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":"* Example of usage: todo read a book"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"### `done [taskNumber]`"},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":"* Marks the task number as listed on the task list as done"},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"* Example of usage: done 3"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":"* Expected outcome: the 3rd task on the task list will be marked as done and shows a tick in the status box"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":49,"author":{"gitId":"awzhenyi"},"content":"### `delete [taskNumber]`"},{"lineNumber":50,"author":{"gitId":"awzhenyi"},"content":"* Deletes the task number as listed on the task list"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":"* Example of usage: delete 3"},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"* Expected outcome: the 3rd task will be dele ted and no longer be in the task list"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"awzhenyi"},"content":"### `find [keyword]`"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"* Searches the task list which contains the keyword input"},{"lineNumber":56,"author":{"gitId":"awzhenyi"},"content":"* Example of usage: find read"},{"lineNumber":57,"author":{"gitId":"awzhenyi"},"content":"* Expected outcome: all tasks containing read in its description will be shown, ie read a book, eat bread"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"awzhenyi"},"content":"### `detect`"},{"lineNumber":60,"author":{"gitId":"awzhenyi"},"content":"* Searches the task list for any duplicated task"},{"lineNumber":61,"author":{"gitId":"awzhenyi"},"content":"* Expected outcome: a list of all duplicated task will be shown"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"awzhenyi"},"content":"### `clean`"},{"lineNumber":64,"author":{"gitId":"awzhenyi"},"content":"* Cleans the task list and gets rid of all duplicated task"},{"lineNumber":65,"author":{"gitId":"awzhenyi"},"content":"* Expected outcome: all tasks in the task lists will now be unique"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"awzhenyi"},"content":"### `save`"},{"lineNumber":68,"author":{"gitId":"awzhenyi"},"content":"* saves the current task list into a textfile"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"awzhenyi"},"content":"### `bye`"},{"lineNumber":71,"author":{"gitId":"awzhenyi"},"content":"* exits the program"}],"authorContributionMap":{"awzhenyi":59,"-":12}},{"path":"src/main/java/duke/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"import java.util.Objects;"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":" * A deadline task is a task which has a date it has to be done by"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":" */"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"public class DeadlineTask extends Task {"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"    protected String time;"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"     * Constructor for a deadline task"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"     * @param description Describes what the task is"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"     * @param time The date that the task have to be completed by"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"    public DeadlineTask(String description, String time) {"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"        super(description);"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"        this.time \u003d time;"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"     * Converts the date in the form of mm-dd-yyyy to a more natural and readable form"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"     * @return The formatted date and time in the form of E, MMM d yyyy. eg Sun, March 12 2020, 4pm"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"    public String convertDateTime() {"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"        String[] dateTime \u003d this.time.split(\"\\\\s+\");"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"        String dateOfEvent \u003d dateTime[0];"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"        String timeOfEvent \u003d dateTime[1];"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"        LocalDate parsedDate \u003d LocalDate.parse(dateOfEvent);"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"        assert parsedDate.isAfter(LocalDate.now()) || parsedDate.isEqual(LocalDate.now());"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"        return parsedDate.format(DateTimeFormatter.ofPattern(\"E, MMM d yyyy\")) + \" \" + timeOfEvent;"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"    public boolean equals(Object o) {"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"        if (this \u003d\u003d o) {"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"            return true;"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":"        if (!(o instanceof DeadlineTask)) {"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"            return false;"},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":"        if (!super.equals(o)) {"},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"            return false;"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":"        DeadlineTask that \u003d (DeadlineTask) o;"},{"lineNumber":49,"author":{"gitId":"awzhenyi"},"content":"        return Objects.equals(time, that.time);"},{"lineNumber":50,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"awzhenyi"},"content":"    public int hashCode() {"},{"lineNumber":54,"author":{"gitId":"awzhenyi"},"content":"        return Objects.hash(super.hashCode(), time);"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":57,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"awzhenyi"},"content":"     * Displays the details of the task"},{"lineNumber":59,"author":{"gitId":"awzhenyi"},"content":"     * @return Formatted string which shows the type of task, its description and its expected completion date and time"},{"lineNumber":60,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"awzhenyi"},"content":"    @Override"},{"lineNumber":62,"author":{"gitId":"awzhenyi"},"content":"    public String toString() {"},{"lineNumber":63,"author":{"gitId":"awzhenyi"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + convertDateTime() + \")\";"},{"lineNumber":64,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":65}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"import javafx.geometry.Insets;"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"import javafx.geometry.Pos;"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.Node;"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.control.Label;"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.effect.DropShadow;"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.shape.Circle;"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"class DialogBox extends HBox {"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"    private Label text;"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"    private ImageView displayPicture;"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"    public DialogBox(Label l, ImageView iv) {"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"        text \u003d l;"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"        displayPicture \u003d iv;"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"        text.setWrapText(true);"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"        displayPicture.setFitWidth(100.0);"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"        displayPicture.setFitHeight(100);"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"        Circle circle \u003d new Circle(50, 50, 50);"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"        circle.setEffect(new DropShadow(10, Color.BLACK));"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"        displayPicture.setClip(circle);"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"        displayPicture.setSmooth(true);"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"        this.setAlignment(Pos.TOP_RIGHT);"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"        this.getChildren().addAll(text, displayPicture);"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"    private void flip() {"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":"        FXCollections.reverse(tmp);"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":"        DialogBox dBox \u003d new DialogBox(l, iv);"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":"        dBox.setBackground(new Background(new BackgroundFill(Color.LIGHTBLUE, CornerRadii.EMPTY, Insets.EMPTY)));"},{"lineNumber":49,"author":{"gitId":"awzhenyi"},"content":"        return dBox;"},{"lineNumber":50,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {"},{"lineNumber":53,"author":{"gitId":"awzhenyi"},"content":"        DialogBox db \u003d new DialogBox(l, iv);"},{"lineNumber":54,"author":{"gitId":"awzhenyi"},"content":"        db.setBackground(new Background(new BackgroundFill(Color.LIGHTCYAN, CornerRadii.EMPTY, Insets.EMPTY)));"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"        db.flip();"},{"lineNumber":56,"author":{"gitId":"awzhenyi"},"content":"        return db;"},{"lineNumber":57,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":59,"author":{"gitId":"awzhenyi"},"content":"}"},{"lineNumber":60,"author":{"gitId":"awzhenyi"},"content":""}],"authorContributionMap":{"awzhenyi":60}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":" * Duke is a chatbot that helps the user to keep track of tasks that needs to be done."},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":" */"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"     * Construct duke object with parser, storage and ui"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"    public Duke() {"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"awzhenyi":15,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":"public class DukeException extends Exception {"},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"    public DukeException(String message) {"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"        super(message);"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":6}},{"path":"src/main/java/duke/EmptyArgument.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"public class EmptyArgument extends DukeException {"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"    public EmptyArgument(String message) {"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"        super(message);"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":9}},{"path":"src/main/java/duke/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"import java.util.Objects;"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":" * A event task is a task which has a date and duration of the event"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":" */"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"public class EventTask extends Task {"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"    protected String time;"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"     * Constructor for a event task"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"     * @param description Describes what the task is"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"     * @param time The date and duration of time that the event is held"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"    public EventTask(String description, String time) {"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"        super(description);"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"        this.time \u003d time;"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"     * Converts the date in the form of mm-dd-yyyy to a more natural and readable form"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"     * @return The formatted date and time in the form of E, MMM d yyyy. eg Sun, March 12 2020, 4-6pm"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"    public String convertDateTime() {"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"        String[] dateTime \u003d time.split(\"\\\\s+\");"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"        String dateOfEvent \u003d dateTime[0];"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"        String timeOfEvent \u003d dateTime[1];"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"        LocalDate parsedDate \u003d LocalDate.parse(dateOfEvent);"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"        assert parsedDate.isAfter(LocalDate.now()) || parsedDate.isEqual(LocalDate.now());"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"        return parsedDate.format(DateTimeFormatter.ofPattern(\"E, MMM d yyyy\")) + \" \" + timeOfEvent;"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"    public boolean equals(Object o) {"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"        if (this \u003d\u003d o) {"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"            return true;"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":"        if (!(o instanceof EventTask)) {"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"            return false;"},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":"        if (!super.equals(o)) {"},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"            return false;"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":"        EventTask eventTask \u003d (EventTask) o;"},{"lineNumber":49,"author":{"gitId":"awzhenyi"},"content":"        return Objects.equals(time, eventTask.time);"},{"lineNumber":50,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"awzhenyi"},"content":"    public int hashCode() {"},{"lineNumber":54,"author":{"gitId":"awzhenyi"},"content":"        return Objects.hash(super.hashCode(), time);"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":57,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"awzhenyi"},"content":"     * Displays the details of the task"},{"lineNumber":59,"author":{"gitId":"awzhenyi"},"content":"     * @return Formatted string which shows the type, description and the date and time duration of the event"},{"lineNumber":60,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"awzhenyi"},"content":"    @Override"},{"lineNumber":62,"author":{"gitId":"awzhenyi"},"content":"    public String toString() {"},{"lineNumber":63,"author":{"gitId":"awzhenyi"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + convertDateTime() + \")\";"},{"lineNumber":64,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":65}},{"path":"src/main/java/duke/InvalidArgument.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"public class InvalidArgument extends DukeException {"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"    public InvalidArgument(String message) {"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"        super(message);"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":8}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"public class Launcher {"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import javafx.application.Platform;"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"import javafx.geometry.Insets;"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"import javafx.geometry.Pos;"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.control.Button;"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.control.Label;"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.image.Image;"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.shape.Rectangle;"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"import javafx.scene.text.Font;"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"import javafx.stage.Stage;"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"public class Main extends Application {"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"    private VBox dialogContainer;"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"    private TextField userInput;"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"    private Button sendButton;"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"    private Scene scene;"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"     * Formats how the send button will look like and its action upon clicking it"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"     * @param sendButton"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"    public void buttonSetting(Button sendButton) {"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"            userInput.clear();"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":"        });"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":49,"author":{"gitId":"awzhenyi"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":50,"author":{"gitId":"awzhenyi"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":"            userInput.clear();"},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"        });"},{"lineNumber":53,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":54,"author":{"gitId":"awzhenyi"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"            try {"},{"lineNumber":56,"author":{"gitId":"awzhenyi"},"content":"                handleUserInput();"},{"lineNumber":57,"author":{"gitId":"awzhenyi"},"content":"            } catch (Exception e) {"},{"lineNumber":58,"author":{"gitId":"awzhenyi"},"content":"                Platform.runLater(() -\u003e {"},{"lineNumber":59,"author":{"gitId":"awzhenyi"},"content":"                    dialogContainer.getChildren().addAll("},{"lineNumber":60,"author":{"gitId":"awzhenyi"},"content":"                            DialogBox.getUserDialog(new Label(userInput.getText()), new ImageView(user)),"},{"lineNumber":61,"author":{"gitId":"awzhenyi"},"content":"                            DialogBox.getDukeDialog(getDialogLabel(e.getMessage()), new ImageView(duke)));"},{"lineNumber":62,"author":{"gitId":"awzhenyi"},"content":"                    userInput.clear();"},{"lineNumber":63,"author":{"gitId":"awzhenyi"},"content":"                });"},{"lineNumber":64,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":65,"author":{"gitId":"awzhenyi"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"awzhenyi"},"content":"        });"},{"lineNumber":67,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":69,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"awzhenyi"},"content":"     * Formats how the initial portion of the gui will look like upon running duke"},{"lineNumber":71,"author":{"gitId":"awzhenyi"},"content":"     * @param dialogContainer"},{"lineNumber":72,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"awzhenyi"},"content":"    public void vBoxSetting(VBox dialogContainer) {"},{"lineNumber":74,"author":{"gitId":"awzhenyi"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":75,"author":{"gitId":"awzhenyi"},"content":"        dialogContainer.setPadding(new Insets(10, 5, 10, 5));"},{"lineNumber":76,"author":{"gitId":"awzhenyi"},"content":"        dialogContainer.setSpacing(25);"},{"lineNumber":77,"author":{"gitId":"awzhenyi"},"content":"        Label label \u003d new Label(Ui.greet());"},{"lineNumber":78,"author":{"gitId":"awzhenyi"},"content":"        label.setMinSize(500, 150);"},{"lineNumber":79,"author":{"gitId":"awzhenyi"},"content":"        label.setBackground(new Background(new BackgroundFill(Color.BEIGE, CornerRadii.EMPTY, Insets.EMPTY)));"},{"lineNumber":80,"author":{"gitId":"awzhenyi"},"content":"        Rectangle rect \u003d new Rectangle(500, 150);"},{"lineNumber":81,"author":{"gitId":"awzhenyi"},"content":"        rect.setArcHeight(120.0);"},{"lineNumber":82,"author":{"gitId":"awzhenyi"},"content":"        rect.setArcWidth(120.0);"},{"lineNumber":83,"author":{"gitId":"awzhenyi"},"content":"        label.setClip(rect);"},{"lineNumber":84,"author":{"gitId":"awzhenyi"},"content":"        label.setAlignment(Pos.CENTER);"},{"lineNumber":85,"author":{"gitId":"awzhenyi"},"content":"        label.setFont(new Font(\"Verdana Bold\", 14));"},{"lineNumber":86,"author":{"gitId":"awzhenyi"},"content":"        dialogContainer.getChildren().addAll(label);"},{"lineNumber":87,"author":{"gitId":"awzhenyi"},"content":"        dialogContainer.setAlignment(Pos.CENTER);"},{"lineNumber":88,"author":{"gitId":"awzhenyi"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":89,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":91,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"awzhenyi"},"content":"     * Formats how the the textField of the user input portion will look like"},{"lineNumber":93,"author":{"gitId":"awzhenyi"},"content":"     * @param userInput"},{"lineNumber":94,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"awzhenyi"},"content":"    public void textFieldSetting(TextField userInput) {"},{"lineNumber":96,"author":{"gitId":"awzhenyi"},"content":"        userInput.setPrefWidth(580.0);"},{"lineNumber":97,"author":{"gitId":"awzhenyi"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);"},{"lineNumber":98,"author":{"gitId":"awzhenyi"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":99,"author":{"gitId":"awzhenyi"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":100,"author":{"gitId":"awzhenyi"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"},{"lineNumber":101,"author":{"gitId":"awzhenyi"},"content":"            userInput.clear();"},{"lineNumber":102,"author":{"gitId":"awzhenyi"},"content":"        });"},{"lineNumber":103,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":104,"author":{"gitId":"awzhenyi"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":105,"author":{"gitId":"awzhenyi"},"content":"            try {"},{"lineNumber":106,"author":{"gitId":"awzhenyi"},"content":"                handleUserInput();"},{"lineNumber":107,"author":{"gitId":"awzhenyi"},"content":"            } catch (Exception e) {"},{"lineNumber":108,"author":{"gitId":"awzhenyi"},"content":"                Platform.runLater(() -\u003e {"},{"lineNumber":109,"author":{"gitId":"awzhenyi"},"content":"                    dialogContainer.getChildren().addAll("},{"lineNumber":110,"author":{"gitId":"awzhenyi"},"content":"                            DialogBox.getUserDialog(new Label(userInput.getText()), new ImageView(user)),"},{"lineNumber":111,"author":{"gitId":"awzhenyi"},"content":"                            DialogBox.getDukeDialog(getDialogLabel(e.getMessage()), new ImageView(duke)));"},{"lineNumber":112,"author":{"gitId":"awzhenyi"},"content":"                    userInput.clear();"},{"lineNumber":113,"author":{"gitId":"awzhenyi"},"content":"                });"},{"lineNumber":114,"author":{"gitId":"awzhenyi"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"awzhenyi"},"content":"        });"},{"lineNumber":116,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":118,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"awzhenyi"},"content":"     * Formats how the scroll pane behaves"},{"lineNumber":120,"author":{"gitId":"awzhenyi"},"content":"     * @param scrollPane"},{"lineNumber":121,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":122,"author":{"gitId":"awzhenyi"},"content":"    public void scrollPaneSetting(ScrollPane scrollPane) {"},{"lineNumber":123,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":124,"author":{"gitId":"awzhenyi"},"content":"        scrollPane.setPrefSize(580, 735);"},{"lineNumber":125,"author":{"gitId":"awzhenyi"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":126,"author":{"gitId":"awzhenyi"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":127,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":128,"author":{"gitId":"awzhenyi"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":129,"author":{"gitId":"awzhenyi"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":130,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":131,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":133,"author":{"gitId":"awzhenyi"},"content":"    @Override"},{"lineNumber":134,"author":{"gitId":"awzhenyi"},"content":"    public void start(Stage stage) throws DukeException, Exception {"},{"lineNumber":135,"author":{"gitId":"awzhenyi"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":136,"author":{"gitId":"awzhenyi"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":137,"author":{"gitId":"awzhenyi"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":138,"author":{"gitId":"awzhenyi"},"content":"        userInput \u003d new TextField();"},{"lineNumber":139,"author":{"gitId":"awzhenyi"},"content":"        sendButton \u003d new Button(\"Send\");"},{"lineNumber":140,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":141,"author":{"gitId":"awzhenyi"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":142,"author":{"gitId":"awzhenyi"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton, dialogContainer);"},{"lineNumber":143,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":144,"author":{"gitId":"awzhenyi"},"content":"        scene \u003d new Scene(mainLayout);"},{"lineNumber":145,"author":{"gitId":"awzhenyi"},"content":"        Color color \u003d Color.BEIGE;"},{"lineNumber":146,"author":{"gitId":"awzhenyi"},"content":"        scene.setFill(color);"},{"lineNumber":147,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":148,"author":{"gitId":"awzhenyi"},"content":"        stage.setScene(scene);"},{"lineNumber":149,"author":{"gitId":"awzhenyi"},"content":"        stage.show();"},{"lineNumber":150,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":151,"author":{"gitId":"awzhenyi"},"content":"        buttonSetting(sendButton);"},{"lineNumber":152,"author":{"gitId":"awzhenyi"},"content":"        textFieldSetting(userInput);"},{"lineNumber":153,"author":{"gitId":"awzhenyi"},"content":"        vBoxSetting(dialogContainer);"},{"lineNumber":154,"author":{"gitId":"awzhenyi"},"content":"        scrollPaneSetting(scrollPane);"},{"lineNumber":155,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":156,"author":{"gitId":"awzhenyi"},"content":"        stage.setTitle(\"Duke\");"},{"lineNumber":157,"author":{"gitId":"awzhenyi"},"content":"        stage.setResizable(false);"},{"lineNumber":158,"author":{"gitId":"awzhenyi"},"content":"        stage.setMinHeight(800);"},{"lineNumber":159,"author":{"gitId":"awzhenyi"},"content":"        stage.setMinWidth(600.0);"},{"lineNumber":160,"author":{"gitId":"awzhenyi"},"content":"        mainLayout.setPrefSize(600, 800);"},{"lineNumber":161,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":162,"author":{"gitId":"awzhenyi"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":163,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":165,"author":{"gitId":"awzhenyi"},"content":"    private Label getDialogLabel(String text) {"},{"lineNumber":166,"author":{"gitId":"awzhenyi"},"content":"        Label textToAdd \u003d new Label(text);"},{"lineNumber":167,"author":{"gitId":"awzhenyi"},"content":"        textToAdd.setWrapText(true);"},{"lineNumber":168,"author":{"gitId":"awzhenyi"},"content":"        textToAdd.setFont(new Font(\"Verdana Bold\", 14));"},{"lineNumber":169,"author":{"gitId":"awzhenyi"},"content":"        textToAdd.setTextFill(Color.RED);"},{"lineNumber":170,"author":{"gitId":"awzhenyi"},"content":"        return textToAdd;"},{"lineNumber":171,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":173,"author":{"gitId":"awzhenyi"},"content":"    private void handleUserInput() throws Exception {"},{"lineNumber":174,"author":{"gitId":"awzhenyi"},"content":"        if (userInput.getText().equals(\"bye\")) {"},{"lineNumber":175,"author":{"gitId":"awzhenyi"},"content":"            Platform.setImplicitExit(true);"},{"lineNumber":176,"author":{"gitId":"awzhenyi"},"content":"            Platform.exit();"},{"lineNumber":177,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":178,"author":{"gitId":"awzhenyi"},"content":"        Label userText \u003d new Label(userInput.getText());"},{"lineNumber":179,"author":{"gitId":"awzhenyi"},"content":"        userText.setFont(new Font(\"Verdana Bold Italic\", 14));"},{"lineNumber":180,"author":{"gitId":"awzhenyi"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));"},{"lineNumber":181,"author":{"gitId":"awzhenyi"},"content":"        dukeText.setFont(new Font(\"Verdana\", 13));"},{"lineNumber":182,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":183,"author":{"gitId":"awzhenyi"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":184,"author":{"gitId":"awzhenyi"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),"},{"lineNumber":185,"author":{"gitId":"awzhenyi"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"},{"lineNumber":186,"author":{"gitId":"awzhenyi"},"content":"        );"},{"lineNumber":187,"author":{"gitId":"awzhenyi"},"content":"        userInput.clear();"},{"lineNumber":188,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":190,"author":{"gitId":"awzhenyi"},"content":"    private String getResponse(String input) throws Exception {"},{"lineNumber":191,"author":{"gitId":"awzhenyi"},"content":"        return Parser.read(input);"},{"lineNumber":192,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":193,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":193}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"import duke.command.CreateCommand;"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"import duke.command.DetectDuplicateCommand;"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"import duke.command.FindCommand;"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"import duke.command.ReadCommand;"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"import duke.command.UpdateCommand;"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":" * Parser class which handles the parsing of user\u0027s input and delivers the expected action accordingly"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":" */"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"public class Parser {"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"    private static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"    public Parser() {"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"     * Gets the tasklist"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"     * @return the tasklist"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"    public static ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"        return taskList;"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"     * Adds a new task into the existing tasklist"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"     * @param newTask Task to be added"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"    public static String addTask(Task newTask) {"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"        taskList.add(newTask);"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"        return (\"Got it. I\u0027ve added this task:\" + \"\\n\" + newTask.toString()"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"                + \"\\n\" + \"Now you have \" + taskList.size() + \" tasks in the list.\");"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"     * Lists out all the tasks currently in the tasklist"},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"    public static String listTask() {"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":"        String output \u003d \"Here are the task in your list:\" + \"\\n\";"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); ++i) {"},{"lineNumber":49,"author":{"gitId":"awzhenyi"},"content":"            output +\u003d Integer.toString(i + 1);"},{"lineNumber":50,"author":{"gitId":"awzhenyi"},"content":"            output \u003d output + \". \" + taskList.get(i) + \"\\n\";"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"        return output;"},{"lineNumber":53,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"awzhenyi"},"content":"     * Deletes a specific task from the tasklist"},{"lineNumber":57,"author":{"gitId":"awzhenyi"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"awzhenyi"},"content":"     * @param i The numbering of the task to be deleted in chronological order"},{"lineNumber":59,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"awzhenyi"},"content":"    public static String deleteTask(int i) {"},{"lineNumber":61,"author":{"gitId":"awzhenyi"},"content":"        Task task \u003d taskList.get(i - 1);"},{"lineNumber":62,"author":{"gitId":"awzhenyi"},"content":"        taskList.remove(i - 1);"},{"lineNumber":63,"author":{"gitId":"awzhenyi"},"content":"        return (\"Noted. I\u0027ve removed this task:\" + \"\\n\" + task.toString()"},{"lineNumber":64,"author":{"gitId":"awzhenyi"},"content":"                + \"\\n\" + \"Now you have \" + taskList.size() + \" tasks in the list.\");"},{"lineNumber":65,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":67,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"awzhenyi"},"content":"     * Marks a current task on the tasklist as done"},{"lineNumber":69,"author":{"gitId":"awzhenyi"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"awzhenyi"},"content":"     * @param i The numbering of the task to be marked as done in chronological order"},{"lineNumber":71,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"awzhenyi"},"content":"    public static String markDone(int i) {"},{"lineNumber":73,"author":{"gitId":"awzhenyi"},"content":"        Task task \u003d taskList.get(i - 1);"},{"lineNumber":74,"author":{"gitId":"awzhenyi"},"content":"        task.done();"},{"lineNumber":75,"author":{"gitId":"awzhenyi"},"content":"        String output \u003d \"Nice! I\u0027ve marked this task as done: \" + \"\\n\" + task.toString();"},{"lineNumber":76,"author":{"gitId":"awzhenyi"},"content":"        return output;"},{"lineNumber":77,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":79,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"awzhenyi"},"content":"     * Reads user input and parse it accordingly so as to deliver the according action correctly"},{"lineNumber":81,"author":{"gitId":"awzhenyi"},"content":"     * @throws DukeException if user input is empty or invalid"},{"lineNumber":82,"author":{"gitId":"awzhenyi"},"content":"     * @throws Exception"},{"lineNumber":83,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"awzhenyi"},"content":"    public static String read(String input) throws DukeException, Exception {"},{"lineNumber":85,"author":{"gitId":"awzhenyi"},"content":"        if (input.equals(\"\")) {"},{"lineNumber":86,"author":{"gitId":"awzhenyi"},"content":"            throw new EmptyArgument(\"OOPS!!! The user input cannot be empty.\");"},{"lineNumber":87,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"awzhenyi"},"content":"        if (input.startsWith(\"done\")) {"},{"lineNumber":89,"author":{"gitId":"awzhenyi"},"content":"            return UpdateCommand.runCommand(input);"},{"lineNumber":90,"author":{"gitId":"awzhenyi"},"content":"        } else if (input.startsWith(\"delete\")) {"},{"lineNumber":91,"author":{"gitId":"awzhenyi"},"content":"            return DeleteCommand.runCommand(input);"},{"lineNumber":92,"author":{"gitId":"awzhenyi"},"content":"        } else if (input.startsWith(\"event\") || input.startsWith(\"deadline\") || input.startsWith(\"todo\")) {"},{"lineNumber":93,"author":{"gitId":"awzhenyi"},"content":"            return CreateCommand.runCommand(input);"},{"lineNumber":94,"author":{"gitId":"awzhenyi"},"content":"        } else if (input.equals(\"bye\")) {"},{"lineNumber":95,"author":{"gitId":"awzhenyi"},"content":"            return Ui.exit();"},{"lineNumber":96,"author":{"gitId":"awzhenyi"},"content":"        } else if (input.equals(\"list\")) {"},{"lineNumber":97,"author":{"gitId":"awzhenyi"},"content":"            return ReadCommand.runCommand();"},{"lineNumber":98,"author":{"gitId":"awzhenyi"},"content":"        } else if (input.equals(\"save\")) {"},{"lineNumber":99,"author":{"gitId":"awzhenyi"},"content":"            return Storage.saveTaskList();"},{"lineNumber":100,"author":{"gitId":"awzhenyi"},"content":"        } else if (input.equals(\"load\")) {"},{"lineNumber":101,"author":{"gitId":"awzhenyi"},"content":"            return Storage.loadTaskList();"},{"lineNumber":102,"author":{"gitId":"awzhenyi"},"content":"        } else if (input.startsWith(\"find\")) {"},{"lineNumber":103,"author":{"gitId":"awzhenyi"},"content":"            return FindCommand.runCommand(input);"},{"lineNumber":104,"author":{"gitId":"awzhenyi"},"content":"        } else if (input.equals(\"detect\")) {"},{"lineNumber":105,"author":{"gitId":"awzhenyi"},"content":"            return DetectDuplicateCommand.runCommand();"},{"lineNumber":106,"author":{"gitId":"awzhenyi"},"content":"        } else if (input.equals(\"clean\")) {"},{"lineNumber":107,"author":{"gitId":"awzhenyi"},"content":"            return DetectDuplicateCommand.cleanDuplicates();"},{"lineNumber":108,"author":{"gitId":"awzhenyi"},"content":"        } else if (input.equals(\"help\")) {"},{"lineNumber":109,"author":{"gitId":"awzhenyi"},"content":"            return Ui.helpGuide();"},{"lineNumber":110,"author":{"gitId":"awzhenyi"},"content":"        } else {"},{"lineNumber":111,"author":{"gitId":"awzhenyi"},"content":"            throw new InvalidArgument(\"Your input is invalid, Please try again\");"},{"lineNumber":112,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":115,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":115}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import duke.command.LoadCommand;"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":" * Storage class which handles the saving and laoding of tasklist to and from a text file"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":" */"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"    public Storage() {"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"     * Saves the existing tasks in the tasklist to a textfile"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"     * @throws IOException when the filename does not exist"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"    public static String saveTaskList() throws IOException {"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"            File file \u003d new File(\"src/main/java/duke/duke.txt\");"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"            FileWriter fw \u003d new FileWriter(file);"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"            for (int i \u003d 0; i \u003c Parser.getTaskList().size(); ++i) {"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"                fw.write(Parser.getTaskList().get(i).toString() + \"\\n\");"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"            }"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"            fw.close();"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"        } catch (Exception ex) {"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"            System.out.println(\"error\" + ex.getMessage());"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"        return (\"Your tasks are saved\");"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"     * Loads the tasks from the text file back into the task list array"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"     * @throws FileNotFoundException if the specified file does not exist"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"    public static String loadTaskList() throws FileNotFoundException {"},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":"            LoadCommand.runCommand();"},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"        } catch (Exception ex) {"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":"            ex.printStackTrace();"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"awzhenyi"},"content":"        return (\"Your tasks are loaded\");"},{"lineNumber":50,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":51}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import java.util.Objects;"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":" * A task"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":" */"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"public class Task {"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"    protected String description;"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"    protected Boolean isDone;"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"     * Constructor for a task"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"     * @param description Details of the task"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"    public Task(String description) {"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"        this.description \u003d description;"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"        this.isDone \u003d false;"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"    public String getDescription() {"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"        return this.description;"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"     * Marks the task as done"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"    public void done() {"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"        this.isDone \u003d true;"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"    public boolean equals(Object o) {"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"        if (this \u003d\u003d o) {"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"            return true;"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"        if (!(o instanceof Task)) {"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"            return false;"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"        Task task \u003d (Task) o;"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"        return getDescription().equals(task.getDescription());"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":"    public int hashCode() {"},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"        return Objects.hash(getDescription());"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":49,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"awzhenyi"},"content":"     * Displays the details of the task"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":"     * @return Formatted string which shows the description and status of the task"},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"awzhenyi"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"awzhenyi"},"content":"    public String toString() {"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"        String done \u003d this.isDone ? \"\\u2713\" : \"X\";"},{"lineNumber":56,"author":{"gitId":"awzhenyi"},"content":"        return \"[\" + done + \"] \" + this.description;"},{"lineNumber":57,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":58}},{"path":"src/main/java/duke/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":" * A to-do task is a task which is expected to be done sometime in the future but does not have a set deadline"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":" */"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"public class ToDoTask extends Task {"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"     * Constructor for a to-do task"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"     * @param description Details of the task"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"    public ToDoTask(String description) {"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"     * Displays the details of the task"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"     * @return Formatted string which shows the type, description and status of the task"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":24}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":" * Handles the welcome and exit portions of the chatbot"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":" */"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"    private static final String logo \u003d \" ____        _        \\n\""},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"    public Ui() {"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"     * Greets the user when the chatbot is ran"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"    public static String greet() {"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"        return \"Hello from\\n\" + logo + \"Hello! I\u0027m Duke\" + \"\\n\" + \"Type help to get started!\";"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"     * Show instructions to the user on how to use duke"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"     * @return a list of command and how they work"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"    public static String helpGuide() {"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"        sb.append(\"These are the available commands: \\n\");"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"        sb.append(\"event TASKNAME /at yyyy-MM-dd start time-end time\""},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"                + \"eg: event project meeting /at 2019-12-01 2-4pm) \\n\");"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"        sb.append(\"deadline TASKNAME /by yyyy-MM-dd expected end time \""},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"                + \"(eg: deadline project meeting /by 2019-12-01 4pm) \\n\");"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"        sb.append(\"todo TASKNAME (eg: todo read book) \\n\");"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"        sb.append(\"done + taskNumber (eg: done 1) \\n\");"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"        sb.append(\"delete + taskNumber (eg: delete 1) \\n\");"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"        sb.append(\"list : list all your existing task \\n\");"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"        sb.append(\"save : save your current tasks \\n\");"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"        sb.append(\"load : load your existing tasks \\n\");"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":"        sb.append(\"bye : exit the program \\n\");"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"        return sb.toString();"},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":"     * Displays exit message when user exits the chatbot"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"awzhenyi"},"content":"    public static String exit() {"},{"lineNumber":50,"author":{"gitId":"awzhenyi"},"content":"        return \"Bye. Hope to see you again soon!\";"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":52}},{"path":"src/main/java/duke/command/CreateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import duke.DeadlineTask;"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import duke.EventTask;"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"import duke.Parser;"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"import duke.ToDoTask;"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":" * handles the creation of the different task objects"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":" */"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"public class CreateCommand {"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"     * Creates a event task based on the information the user entered"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"     * @param inputArray the tokenized input that the user entered"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"     * @return the event task"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"    public static EventTask createEvent(String[] inputArray) {"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"        String description \u003d \"\";"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"        String time \u003d \"\";"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"        int divider \u003d 0;"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"        for (int i \u003d 1; i \u003c inputArray.length; ++i) {"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"            if (inputArray[i].equals(\"/at\")) {"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"                divider \u003d i + 1;"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"                break;"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"            description \u003d description + \" \" + inputArray[i];"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"        for (int i \u003d divider; i \u003c inputArray.length; ++i) {"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"            time \u003d time + \" \" + inputArray[i];"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"        description \u003d description.trim();"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"        time \u003d time.trim();"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"        return new EventTask(description, time);"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"     * Creates a deadline task based on the information the user entered"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"     * @param inputArray the tokenized input that the user entered"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"     * @return the deadline task created"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":"    public static DeadlineTask createDeadline(String[] inputArray) {"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"        String description \u003d \"\";"},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"        String time \u003d \"\";"},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":"        int divider \u003d 0;"},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"        for (int i \u003d 1; i \u003c inputArray.length; ++i) {"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":"            if (inputArray[i].equals(\"/by\")) {"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":"                divider \u003d i + 1;"},{"lineNumber":49,"author":{"gitId":"awzhenyi"},"content":"                break;"},{"lineNumber":50,"author":{"gitId":"awzhenyi"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":"            description \u003d description + \" \" + inputArray[i];"},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"awzhenyi"},"content":"        for (int i \u003d divider; i \u003c inputArray.length; ++i) {"},{"lineNumber":54,"author":{"gitId":"awzhenyi"},"content":"            time \u003d time + \" \" + inputArray[i];"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"awzhenyi"},"content":"        description \u003d description.trim();"},{"lineNumber":57,"author":{"gitId":"awzhenyi"},"content":"        time \u003d time.trim();"},{"lineNumber":58,"author":{"gitId":"awzhenyi"},"content":"        return new DeadlineTask(description, time);"},{"lineNumber":59,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":61,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"awzhenyi"},"content":"     * Creates a to do task based on the information the user entered"},{"lineNumber":63,"author":{"gitId":"awzhenyi"},"content":"     * @param inputArray the tokenized input that the user entered"},{"lineNumber":64,"author":{"gitId":"awzhenyi"},"content":"     * @return the to do task created"},{"lineNumber":65,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"awzhenyi"},"content":"    public static ToDoTask createToDo(String[] inputArray) {"},{"lineNumber":67,"author":{"gitId":"awzhenyi"},"content":"        String description \u003d \"\";"},{"lineNumber":68,"author":{"gitId":"awzhenyi"},"content":"        for (int i \u003d 1; i \u003c inputArray.length; ++i) {"},{"lineNumber":69,"author":{"gitId":"awzhenyi"},"content":"            description \u003d description + \" \" + inputArray[i];"},{"lineNumber":70,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"awzhenyi"},"content":"        description \u003d description.trim();"},{"lineNumber":72,"author":{"gitId":"awzhenyi"},"content":"        return new ToDoTask(description);"},{"lineNumber":73,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":75,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"awzhenyi"},"content":"     * handles the user input and decides which type of task to create"},{"lineNumber":77,"author":{"gitId":"awzhenyi"},"content":"     * @param input user input"},{"lineNumber":78,"author":{"gitId":"awzhenyi"},"content":"     * @return the response string upon successfully creating and adding the task into the task list"},{"lineNumber":79,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"awzhenyi"},"content":"    public static String runCommand(String input) {"},{"lineNumber":81,"author":{"gitId":"awzhenyi"},"content":"        String[] spiltInput \u003d input.split(\"\\\\s+\");"},{"lineNumber":82,"author":{"gitId":"awzhenyi"},"content":"        String typeOfEvent \u003d spiltInput[0];"},{"lineNumber":83,"author":{"gitId":"awzhenyi"},"content":"        switch(typeOfEvent) {"},{"lineNumber":84,"author":{"gitId":"awzhenyi"},"content":"        case \"deadline\":"},{"lineNumber":85,"author":{"gitId":"awzhenyi"},"content":"            return Parser.addTask(createDeadline(spiltInput));"},{"lineNumber":86,"author":{"gitId":"awzhenyi"},"content":"        case \"todo\":"},{"lineNumber":87,"author":{"gitId":"awzhenyi"},"content":"            return Parser.addTask(createToDo(spiltInput));"},{"lineNumber":88,"author":{"gitId":"awzhenyi"},"content":"        case \"event\":"},{"lineNumber":89,"author":{"gitId":"awzhenyi"},"content":"            return Parser.addTask(createEvent(spiltInput));"},{"lineNumber":90,"author":{"gitId":"awzhenyi"},"content":"        default:"},{"lineNumber":91,"author":{"gitId":"awzhenyi"},"content":"            return \"\";"},{"lineNumber":92,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":94}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import duke.Parser;"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"public class DeleteCommand {"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"     * Handles the user input and deletes the appropriate task accordingly"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"     * @param input user input"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"     * @return the response string upon successfully deleting a task"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"    public static String runCommand(String input) {"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"        String[] spiltInput \u003d input.split(\"\\\\s+\");"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"        int taskNumber \u003d Integer.parseInt(spiltInput[1]);"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"        return Parser.deleteTask(taskNumber);"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":16}},{"path":"src/main/java/duke/command/DetectDuplicateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import java.util.HashSet;"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"import java.util.Set;"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"import duke.Parser;"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"import duke.Task;"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":" * handles the detection of duplicate tasks"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":" */"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"public class DetectDuplicateCommand {"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"     * finds duplicates of the task list"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"     * @param taskList the list of all tasks currently stored"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"     * @param \u003cTask\u003e Task"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"     * @return A set of duplicated tasks"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"    public static \u003cTask\u003e Set\u003cTask\u003e findDuplicates(ArrayList\u003cTask\u003e taskList) {"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"        Set\u003cTask\u003e duplicates \u003d new HashSet\u003c\u003e();"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"        Set\u003cTask\u003e uniques \u003d new HashSet\u003c\u003e();"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"        for (Task t : taskList) {"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"            if (!uniques.add(t)) {"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"                duplicates.add(t);"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"        return duplicates;"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"     * finds the unique tasks of the task list"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"     * @param taskList the list of all tasks currently stored"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"     * @param \u003cTask\u003e Task"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"     * @return A set of unique tasks"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"    public static \u003cTask\u003e Set\u003cTask\u003e findUniques(ArrayList\u003cTask\u003e taskList) {"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"        Set\u003cTask\u003e uniques \u003d new HashSet\u003c\u003e();"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":"        for (Task t : taskList) {"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"            uniques.add(t);"},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":"        return uniques;"},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"awzhenyi"},"content":"     * Deletes all the duplicated tasks"},{"lineNumber":50,"author":{"gitId":"awzhenyi"},"content":"     * @return response string to the user upon deletion of all duplicated tasks"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"    public static String cleanDuplicates() {"},{"lineNumber":53,"author":{"gitId":"awzhenyi"},"content":"        ArrayList\u003cTask\u003e taskList \u003d Parser.getTaskList();"},{"lineNumber":54,"author":{"gitId":"awzhenyi"},"content":"        Set\u003cTask\u003e uniques \u003d findUniques(taskList);"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"        taskList.clear();"},{"lineNumber":56,"author":{"gitId":"awzhenyi"},"content":"        taskList.addAll(uniques);"},{"lineNumber":57,"author":{"gitId":"awzhenyi"},"content":"        return \"your duplicated tasks have been removed\";"},{"lineNumber":58,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":60,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"awzhenyi"},"content":"     * runs a duplication check when the user requests so"},{"lineNumber":62,"author":{"gitId":"awzhenyi"},"content":"     * @return response string to user upon detection of duplicates"},{"lineNumber":63,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"awzhenyi"},"content":"    public static String runCommand() {"},{"lineNumber":65,"author":{"gitId":"awzhenyi"},"content":"        Set\u003cTask\u003e duplicates \u003d findDuplicates(Parser.getTaskList());"},{"lineNumber":66,"author":{"gitId":"awzhenyi"},"content":"        String output \u003d \"These are the duplicated tasks:\" + \"\\n\";"},{"lineNumber":67,"author":{"gitId":"awzhenyi"},"content":"        for (Task t : duplicates) {"},{"lineNumber":68,"author":{"gitId":"awzhenyi"},"content":"            output \u003d output + t.toString() + \"\\n\";"},{"lineNumber":69,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"awzhenyi"},"content":"        output \u003d output + \"\\n\" + \"Enter clean to remove duplicates\" + \"\\n\";"},{"lineNumber":71,"author":{"gitId":"awzhenyi"},"content":"        return output;"},{"lineNumber":72,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":74,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":74}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import duke.Parser;"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import duke.Task;"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"public class FindCommand {"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"     * Searches the task list for tasks containing the keyword the user inputted"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"     * @param input user input of keyword he wants to search for"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"     * @return List of all tasks that matches his keyword"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"    public static String runCommand(String input) {"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"        String[] splitInput \u003d input.split(\"\\\\s+\");"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"        String toSearch \u003d \"\";"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"        for (int i \u003d 1; i \u003c splitInput.length; ++i) {"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"            toSearch +\u003d splitInput[i];"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"        toSearch \u003d toSearch.trim();"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"        boolean hasFound \u003d false;"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"        for (Task t : Parser.getTaskList()) {"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"            if (t.getDescription().contains(toSearch)) {"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"                hasFound \u003d true;"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"                sb.append(t.toString() + \"\\n\");"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"        if (hasFound) {"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"            return sb.toString();"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"        } else {"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"            return \"no tasks found that matches your input!\";"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":34}},{"path":"src/main/java/duke/command/LoadCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import java.io.FileReader;"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"import duke.DeadlineTask;"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"import duke.EventTask;"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"import duke.Parser;"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"import duke.ToDoTask;"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"public class LoadCommand {"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"     * deciphers which part of the line is the task description and which part is the time and correctly formats it"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"     * @param inputArray tokenized line of the text file"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"     * @return a string array containing description of the task and the time of the task"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"    public static String[] descriptionAndDateTimeFormatter(String[] inputArray) {"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"        String desc \u003d \"\";"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"        String date \u003d \"\";"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"        int start \u003d 0;"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"        for (int i \u003d 1; i \u003c inputArray.length; ++i) {"},{"lineNumber":25,"author":{"gitId":"awzhenyi"},"content":"            if (inputArray[i].equals(\"(by:\") || inputArray[i].equals(\"(at:\")) {"},{"lineNumber":26,"author":{"gitId":"awzhenyi"},"content":"                start \u003d i + 1;"},{"lineNumber":27,"author":{"gitId":"awzhenyi"},"content":"                break;"},{"lineNumber":28,"author":{"gitId":"awzhenyi"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"awzhenyi"},"content":"            desc \u003d desc + \" \" + inputArray[i];"},{"lineNumber":30,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"awzhenyi"},"content":"        desc \u003d desc.trim();"},{"lineNumber":32,"author":{"gitId":"awzhenyi"},"content":"        for (int i \u003d start; i \u003c inputArray.length - 1; ++i) {"},{"lineNumber":33,"author":{"gitId":"awzhenyi"},"content":"            date \u003d date + \" \" + inputArray[i];"},{"lineNumber":34,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"awzhenyi"},"content":"        date \u003d date.trim();"},{"lineNumber":36,"author":{"gitId":"awzhenyi"},"content":"        DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"E, MMM d yyyy\");"},{"lineNumber":37,"author":{"gitId":"awzhenyi"},"content":"        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":38,"author":{"gitId":"awzhenyi"},"content":"        date \u003d LocalDate.parse(date, inputFormat).format(outputFormat);"},{"lineNumber":39,"author":{"gitId":"awzhenyi"},"content":"        String time \u003d inputArray[inputArray.length - 1].substring(0, inputArray[inputArray.length - 1]"},{"lineNumber":40,"author":{"gitId":"awzhenyi"},"content":"                .length() - 1);"},{"lineNumber":41,"author":{"gitId":"awzhenyi"},"content":"        String dateTime \u003d date + \" \" + time;"},{"lineNumber":42,"author":{"gitId":"awzhenyi"},"content":"        String[] descDateTime \u003d {desc , dateTime};"},{"lineNumber":43,"author":{"gitId":"awzhenyi"},"content":"        return descDateTime;"},{"lineNumber":44,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":46,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"awzhenyi"},"content":"     * handles the interpretation of text file to create the appropriate tasks objects and storing it in task list"},{"lineNumber":48,"author":{"gitId":"awzhenyi"},"content":"     * @throws IOException Missing text file"},{"lineNumber":49,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"awzhenyi"},"content":"    public static void runCommand() throws IOException {"},{"lineNumber":51,"author":{"gitId":"awzhenyi"},"content":"        String line \u003d null;"},{"lineNumber":52,"author":{"gitId":"awzhenyi"},"content":"        BufferedReader br \u003d new BufferedReader(new FileReader(\"src/main/java/duke/duke.txt\"));"},{"lineNumber":53,"author":{"gitId":"awzhenyi"},"content":"        while ((line \u003d br.readLine()) !\u003d null) {"},{"lineNumber":54,"author":{"gitId":"awzhenyi"},"content":"            String[] spiltLine \u003d line.split(\"\\\\s+\");"},{"lineNumber":55,"author":{"gitId":"awzhenyi"},"content":"            char typeOfEvent \u003d spiltLine[0].charAt(1);"},{"lineNumber":56,"author":{"gitId":"awzhenyi"},"content":"            String desc \u003d descriptionAndDateTimeFormatter(spiltLine)[0];"},{"lineNumber":57,"author":{"gitId":"awzhenyi"},"content":"            String dateTime \u003d descriptionAndDateTimeFormatter(spiltLine)[1];"},{"lineNumber":58,"author":{"gitId":"awzhenyi"},"content":"            switch (typeOfEvent) {"},{"lineNumber":59,"author":{"gitId":"awzhenyi"},"content":"            case \u0027D\u0027: {"},{"lineNumber":60,"author":{"gitId":"awzhenyi"},"content":"                DeadlineTask task \u003d new DeadlineTask(desc, dateTime);"},{"lineNumber":61,"author":{"gitId":"awzhenyi"},"content":"                Parser.getTaskList().add(task);"},{"lineNumber":62,"author":{"gitId":"awzhenyi"},"content":"                break;"},{"lineNumber":63,"author":{"gitId":"awzhenyi"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"awzhenyi"},"content":"            case \u0027E\u0027: {"},{"lineNumber":65,"author":{"gitId":"awzhenyi"},"content":"                EventTask task \u003d new EventTask(desc, dateTime);"},{"lineNumber":66,"author":{"gitId":"awzhenyi"},"content":"                Parser.getTaskList().add(task);"},{"lineNumber":67,"author":{"gitId":"awzhenyi"},"content":"                break;"},{"lineNumber":68,"author":{"gitId":"awzhenyi"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"awzhenyi"},"content":"            case \u0027T\u0027: {"},{"lineNumber":70,"author":{"gitId":"awzhenyi"},"content":"                ToDoTask task \u003d new ToDoTask(desc);"},{"lineNumber":71,"author":{"gitId":"awzhenyi"},"content":"                Parser.getTaskList().add(task);"},{"lineNumber":72,"author":{"gitId":"awzhenyi"},"content":"                break;"},{"lineNumber":73,"author":{"gitId":"awzhenyi"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"awzhenyi"},"content":"            default:"},{"lineNumber":75,"author":{"gitId":"awzhenyi"},"content":"                break;"},{"lineNumber":76,"author":{"gitId":"awzhenyi"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"awzhenyi"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":79}},{"path":"src/main/java/duke/command/ReadCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import duke.Parser;"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"public class ReadCommand {"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"     * lists all the task currently in the task list"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"     * @return all the tasks in the list"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"    public static String runCommand() {"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"        return Parser.listTask();"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":13}},{"path":"src/main/java/duke/command/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import duke.Parser;"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"public class UpdateCommand {"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"     * handles the user input to mark the appropriate task as done"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"     * @param input user input of the task that is meant to be marked done"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"     * @return response string to user when marking tasks as done"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"    public static String runCommand(String input) {"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"        String[] spiltInput \u003d input.split(\"\\\\s+\");"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"        int taskNumber \u003d Integer.parseInt(spiltInput[1]);"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"        return Parser.markDone(taskNumber);"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":17}},{"path":"src/main/java/duke/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"[E][X] play games (at: Sat, Oct 5 2019 6-8pm)"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":"[E][X] project meeting (at: Sun, Dec 1 2019 2-4pm)"},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"[D][X] project meeting (by: Sun, Dec 1 2019 4pm)"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"[E][X] play games (at: Sat, Oct 5 2019 4-8pm)"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"[E][X] play games (at: Sat, Oct 5 2019 6-8pm)"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"[E][X] project meeting (at: Sun, Dec 1 2019 2-4pm)"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"[D][X] project meeting (by: Sun, Dec 1 2019 4pm)"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"[E][X] play games (at: Sat, Oct 5 2019 4-8pm)"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"[E][X] play games (at: Sat, Oct 5 2019 6-8pm)"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"[E][X] project meeting (at: Sun, Dec 1 2019 2-4pm)"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"[D][X] project meeting (by: Sun, Dec 1 2019 4pm)"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"[E][X] play games (at: Sat, Oct 5 2019 4-8pm)"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":"[E][X] play games (at: Sat, Oct 5 2019 6-8pm)"},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"[E][X] project meeting (at: Sun, Dec 1 2019 2-4pm)"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"[D][X] project meeting (by: Sun, Dec 1 2019 4pm)"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"[E][X] play games (at: Sat, Oct 5 2019 4-8pm)"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"[E][X] play games (at: Sat, Oct 5 2019 6-8pm)"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"[E][X] project meeting (at: Sun, Dec 1 2019 2-4pm)"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"[D][X] project meeting (by: Sun, Dec 1 2019 4pm)"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"[E][X] play games (at: Sat, Oct 5 2019 4-8pm)"},{"lineNumber":21,"author":{"gitId":"awzhenyi"},"content":"[E][X] play games (at: Sat, Oct 5 2019 6-8pm)"},{"lineNumber":22,"author":{"gitId":"awzhenyi"},"content":"[E][X] project meeting (at: Sun, Dec 1 2019 2-4pm)"},{"lineNumber":23,"author":{"gitId":"awzhenyi"},"content":"[D][X] project meeting (by: Sun, Dec 1 2019 4pm)"},{"lineNumber":24,"author":{"gitId":"awzhenyi"},"content":"[E][X] play games (at: Sat, Oct 5 2019 4-8pm)"}],"authorContributionMap":{"awzhenyi":24}},{"path":"src/test/java/duke/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"public class DeadlineTaskTest {"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"    public void TimeTest() {"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"        DeadlineTask newTask \u003d new DeadlineTask(\"deadline project meeting\", \"2019-12-01 4pm\");"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"        assertEquals(\"2019-12-01 4pm\", newTask.time);"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"    public void CorrectTimeConversionTest() {"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"        DeadlineTask newTask \u003d new DeadlineTask(\"deadline project meeting\", \"2019-12-01 4pm\");"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"        String convertedTime \u003d newTask.convertDateTime();"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"        assertEquals(\"Sun, Dec 1 2019 4pm\", convertedTime);"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":20}},{"path":"src/test/java/duke/ToDoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"public class ToDoTaskTest {"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":"    public void descriptionTest() {"},{"lineNumber":10,"author":{"gitId":"awzhenyi"},"content":"        ToDoTask newTask \u003d new ToDoTask(\"read a book\");"},{"lineNumber":11,"author":{"gitId":"awzhenyi"},"content":"        assertEquals(\"read a book\", newTask.description);"},{"lineNumber":12,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":14,"author":{"gitId":"awzhenyi"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"awzhenyi"},"content":"    public void isDoneTest() {"},{"lineNumber":16,"author":{"gitId":"awzhenyi"},"content":"        ToDoTask newTask \u003d new ToDoTask(\"read a book\");"},{"lineNumber":17,"author":{"gitId":"awzhenyi"},"content":"        assertEquals(false, newTask.isDone);"},{"lineNumber":18,"author":{"gitId":"awzhenyi"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"awzhenyi"},"content":""},{"lineNumber":20,"author":{"gitId":"awzhenyi"},"content":"}"}],"authorContributionMap":{"awzhenyi":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"awzhenyi"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"awzhenyi"},"content":"deadline project meeting /by 2019-12-01 4pm"},{"lineNumber":3,"author":{"gitId":"awzhenyi"},"content":"event project meeting /at 2019-12-01 2-4pm"},{"lineNumber":4,"author":{"gitId":"awzhenyi"},"content":"event play games /at 2019-10-05 4-8pm"},{"lineNumber":5,"author":{"gitId":"awzhenyi"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"awzhenyi"},"content":"delete 1"},{"lineNumber":7,"author":{"gitId":"awzhenyi"},"content":"list"},{"lineNumber":8,"author":{"gitId":"awzhenyi"},"content":"bye"},{"lineNumber":9,"author":{"gitId":"awzhenyi"},"content":""}],"authorContributionMap":{"awzhenyi":9}}]
