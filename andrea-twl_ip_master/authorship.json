[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"andrea-twl"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"andrea-twl"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"andrea-twl"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"andrea-twl"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"andrea-twl"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"andrea-twl"},"content":"}"},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":8,"author":{"gitId":"andrea-twl"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"andrea-twl"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"andrea-twl"},"content":"}"},{"lineNumber":11,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":12,"author":{"gitId":"andrea-twl"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"andrea-twl"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"andrea-twl"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":16,"author":{"gitId":"andrea-twl"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":18,"author":{"gitId":"andrea-twl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"andrea-twl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"andrea-twl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"andrea-twl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"andrea-twl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"andrea-twl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"andrea-twl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"andrea-twl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"andrea-twl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"andrea-twl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"andrea-twl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"andrea-twl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"andrea-twl"},"content":"}"},{"lineNumber":31,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":32,"author":{"gitId":"andrea-twl"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"andrea-twl"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":35,"author":{"gitId":"andrea-twl"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"andrea-twl"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":38,"author":{"gitId":"andrea-twl"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"andrea-twl"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"andrea-twl"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"andrea-twl"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"andrea-twl"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"andrea-twl"},"content":"}"},{"lineNumber":45,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":46,"author":{"gitId":"andrea-twl"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"andrea-twl"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":48,"author":{"gitId":"andrea-twl"},"content":"}"},{"lineNumber":49,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":50,"author":{"gitId":"andrea-twl"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"andrea-twl"},"content":"    archiveBaseName \u003d \"blue\""},{"lineNumber":52,"author":{"gitId":"andrea-twl"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"andrea-twl"},"content":"}"},{"lineNumber":54,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":55,"author":{"gitId":"andrea-twl"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"andrea-twl"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"andrea-twl"},"content":"}"},{"lineNumber":58,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":59,"author":{"gitId":"andrea-twl"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"andrea-twl"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"andrea-twl"},"content":"}"}],"authorContributionMap":{"andrea-twl":61}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"andrea-twl"},"content":"TODO[X] watch lecture"},{"lineNumber":2,"author":{"gitId":"andrea-twl"},"content":"TODO[X] eat dinner"},{"lineNumber":3,"author":{"gitId":"andrea-twl"},"content":"DDLN[ ] assignment (by: 2021-02-23)"},{"lineNumber":4,"author":{"gitId":"andrea-twl"},"content":"TODO[ ] buy groceries"},{"lineNumber":5,"author":{"gitId":"andrea-twl"},"content":"EVNT[ ] ice skating (at: 2022-03-15)"},{"lineNumber":6,"author":{"gitId":"andrea-twl"},"content":"DDLN[ ] lecture quiz (by: 2021-04-01)"},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":"TODO[X] complete homework"},{"lineNumber":8,"author":{"gitId":"andrea-twl"},"content":"TODO[ ] som"}],"authorContributionMap":{"andrea-twl":8}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"andrea-twl"},"content":"Duke is a Command Line Interface (CLI) style desktop task "},{"lineNumber":4,"author":{"gitId":"andrea-twl"},"content":"list application for managing your tasks, events and deadlines."},{"lineNumber":5,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":"+ Viewing help : `help`"},{"lineNumber":8,"author":{"gitId":"andrea-twl"},"content":"+ Adding a to do task : `todo`"},{"lineNumber":9,"author":{"gitId":"andrea-twl"},"content":"+ Adding a deadline : `deadline`"},{"lineNumber":10,"author":{"gitId":"andrea-twl"},"content":"+ Adding an event : `event`"},{"lineNumber":11,"author":{"gitId":"andrea-twl"},"content":"+ Listing all tasks : `list`"},{"lineNumber":12,"author":{"gitId":"andrea-twl"},"content":"+ Completing a task : `done`"},{"lineNumber":13,"author":{"gitId":"andrea-twl"},"content":"+ Deleting a task : `delete`"},{"lineNumber":14,"author":{"gitId":"andrea-twl"},"content":"+ Sorting task list : `sort`"},{"lineNumber":15,"author":{"gitId":"andrea-twl"},"content":"+ Locating a task : `find`"},{"lineNumber":16,"author":{"gitId":"andrea-twl"},"content":"+ Exiting the program : `bye`"},{"lineNumber":17,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":18,"author":{"gitId":"andrea-twl"},"content":"## Viewing help : `help`"},{"lineNumber":19,"author":{"gitId":"andrea-twl"},"content":"Shows complete list of commands."},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"andrea-twl"},"content":"### Usage"},{"lineNumber":22,"author":{"gitId":"andrea-twl"},"content":"Format: `help`"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"andrea-twl"},"content":"## Adding a to do task : `todo`"},{"lineNumber":26,"author":{"gitId":"andrea-twl"},"content":"Adds a generic to do task to the task list."},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"andrea-twl"},"content":"### Usage"},{"lineNumber":29,"author":{"gitId":"andrea-twl"},"content":"Format: `todo {TASK_NAME}` "},{"lineNumber":30,"author":{"gitId":"andrea-twl"},"content":"+ adds`TASK_NAME` to the task list as a to do task."},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"andrea-twl"},"content":"`todo watch lecture videos`"},{"lineNumber":35,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":36,"author":{"gitId":"andrea-twl"},"content":"Expected outcome: "},{"lineNumber":37,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":38,"author":{"gitId":"andrea-twl"},"content":"`TODO[ ] watch lecture videos` will be added to the task list. "},{"lineNumber":39,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":40,"author":{"gitId":"andrea-twl"},"content":"## Adding a deadline : `deadline`"},{"lineNumber":41,"author":{"gitId":"andrea-twl"},"content":"Adds a deadline to the task list."},{"lineNumber":42,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":43,"author":{"gitId":"andrea-twl"},"content":"### Usage"},{"lineNumber":44,"author":{"gitId":"andrea-twl"},"content":"Format: `deadline {DEADLINE_NAME} /by {YYYY-MM-DD}`"},{"lineNumber":45,"author":{"gitId":"andrea-twl"},"content":"+ adds`DEADLINE_NAME` to the task list as a deadline."},{"lineNumber":46,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":47,"author":{"gitId":"andrea-twl"},"content":"Example of usage:"},{"lineNumber":48,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":49,"author":{"gitId":"andrea-twl"},"content":"`deadline assignment /by 2021-02-20`"},{"lineNumber":50,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":51,"author":{"gitId":"andrea-twl"},"content":"Expected outcome:"},{"lineNumber":52,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":53,"author":{"gitId":"andrea-twl"},"content":"`DDLN[ ] assignment (by: Feb 20 2021)` will be added to the task list. "},{"lineNumber":54,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":55,"author":{"gitId":"andrea-twl"},"content":"## Adding a event : `event`"},{"lineNumber":56,"author":{"gitId":"andrea-twl"},"content":"Adds an event to the task list."},{"lineNumber":57,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":58,"author":{"gitId":"andrea-twl"},"content":"### Usage"},{"lineNumber":59,"author":{"gitId":"andrea-twl"},"content":"Format: `event {EVENT_NAME} /at {YYYY-MM-DD}`"},{"lineNumber":60,"author":{"gitId":"andrea-twl"},"content":"+ adds`EVENT_NAME` to the task list as an event."},{"lineNumber":61,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":62,"author":{"gitId":"andrea-twl"},"content":"Example of usage:"},{"lineNumber":63,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":64,"author":{"gitId":"andrea-twl"},"content":"`event career fair /at 2021-04-02`"},{"lineNumber":65,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":66,"author":{"gitId":"andrea-twl"},"content":"Expected outcome:"},{"lineNumber":67,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":68,"author":{"gitId":"andrea-twl"},"content":"`EVNT[ ] career fair (at: Apr 2 2021)` will be added to the task list. "},{"lineNumber":69,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":70,"author":{"gitId":"andrea-twl"},"content":"## Listing all tasks : `list`"},{"lineNumber":71,"author":{"gitId":"andrea-twl"},"content":"Displays all tasks in the task list."},{"lineNumber":72,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":73,"author":{"gitId":"andrea-twl"},"content":"### Usage"},{"lineNumber":74,"author":{"gitId":"andrea-twl"},"content":"Format: `list`"},{"lineNumber":75,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":76,"author":{"gitId":"andrea-twl"},"content":"Example of usage:"},{"lineNumber":77,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":78,"author":{"gitId":"andrea-twl"},"content":"`list`"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"andrea-twl"},"content":"    1. TODO[ ] watch lecture videos"},{"lineNumber":83,"author":{"gitId":"andrea-twl"},"content":"    2. DDLN[ ] assignment (by: Feb 20 2021)"},{"lineNumber":84,"author":{"gitId":"andrea-twl"},"content":"    3. EVNT[ ] career fair (at: Apr 2 2021)"},{"lineNumber":85,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":86,"author":{"gitId":"andrea-twl"},"content":"## Completing a task : `done`"},{"lineNumber":87,"author":{"gitId":"andrea-twl"},"content":"Marks a task as done."},{"lineNumber":88,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":89,"author":{"gitId":"andrea-twl"},"content":"### Usage"},{"lineNumber":90,"author":{"gitId":"andrea-twl"},"content":"Format: `done {INDEX}`"},{"lineNumber":91,"author":{"gitId":"andrea-twl"},"content":"+ Marks the task corresponding to INDEX according to "},{"lineNumber":92,"author":{"gitId":"andrea-twl"},"content":"  the list as done. "},{"lineNumber":93,"author":{"gitId":"andrea-twl"},"content":"+ List can be accessed with `list` command."},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"andrea-twl"},"content":"Example of usage:"},{"lineNumber":96,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":97,"author":{"gitId":"andrea-twl"},"content":"`list`"},{"lineNumber":98,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":99,"author":{"gitId":"andrea-twl"},"content":"    1. TODO[ ] watch lecture videos"},{"lineNumber":100,"author":{"gitId":"andrea-twl"},"content":"    2. DDLN[ ] assignment (by: Feb 20 2021)"},{"lineNumber":101,"author":{"gitId":"andrea-twl"},"content":"    3. EVNT[ ] career fair (at: Apr 2 2021) "},{"lineNumber":102,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":103,"author":{"gitId":"andrea-twl"},"content":"`done 2`"},{"lineNumber":104,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":105,"author":{"gitId":"andrea-twl"},"content":"Expected outcome:"},{"lineNumber":106,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":107,"author":{"gitId":"andrea-twl"},"content":"`list`"},{"lineNumber":108,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":109,"author":{"gitId":"andrea-twl"},"content":"    1. TODO[ ] watch lecture videos"},{"lineNumber":110,"author":{"gitId":"andrea-twl"},"content":"    2. DDLN[X] assignment (by: Feb 20 2021)"},{"lineNumber":111,"author":{"gitId":"andrea-twl"},"content":"    3. EVNT[ ] career fair (at: Apr 2 2021) "},{"lineNumber":112,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":113,"author":{"gitId":"andrea-twl"},"content":"The second task on the list `2. DDLN[X] assignment (by: Feb 20 2021)` "},{"lineNumber":114,"author":{"gitId":"andrea-twl"},"content":"will be marked as done."},{"lineNumber":115,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":116,"author":{"gitId":"andrea-twl"},"content":"## + Deleting a task : `delete`"},{"lineNumber":117,"author":{"gitId":"andrea-twl"},"content":"Deletes a task from the list."},{"lineNumber":118,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":119,"author":{"gitId":"andrea-twl"},"content":"### Usage"},{"lineNumber":120,"author":{"gitId":"andrea-twl"},"content":"Format: `delete {INDEX}`"},{"lineNumber":121,"author":{"gitId":"andrea-twl"},"content":"+ Deletes the task corresponding to INDEX according to"},{"lineNumber":122,"author":{"gitId":"andrea-twl"},"content":"  the list"},{"lineNumber":123,"author":{"gitId":"andrea-twl"},"content":"+ List can be accessed with `list` command."},{"lineNumber":124,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":125,"author":{"gitId":"andrea-twl"},"content":"Example of usage:"},{"lineNumber":126,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":127,"author":{"gitId":"andrea-twl"},"content":"`list`"},{"lineNumber":128,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":129,"author":{"gitId":"andrea-twl"},"content":"    1. TODO[ ] watch lecture videos"},{"lineNumber":130,"author":{"gitId":"andrea-twl"},"content":"    2. DDLN[X] assignment (by: Feb 20 2021)"},{"lineNumber":131,"author":{"gitId":"andrea-twl"},"content":"    3. EVNT[ ] career fair (at: Apr 2 2021) "},{"lineNumber":132,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":133,"author":{"gitId":"andrea-twl"},"content":"`delete 2`"},{"lineNumber":134,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":135,"author":{"gitId":"andrea-twl"},"content":"Expected outcome:"},{"lineNumber":136,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":137,"author":{"gitId":"andrea-twl"},"content":"    1. TODO[ ] watch lecture videos"},{"lineNumber":138,"author":{"gitId":"andrea-twl"},"content":"    2. EVNT[ ] career fair (at: Apr 2 2021) "},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"andrea-twl"},"content":"`DDLN[X] assignment (by: Feb 20 2021)` has been deleted "},{"lineNumber":141,"author":{"gitId":"andrea-twl"},"content":"permanently from the task list."},{"lineNumber":142,"author":{"gitId":"andrea-twl"},"content":"## Sorting task list : `sort`"},{"lineNumber":143,"author":{"gitId":"andrea-twl"},"content":"Sorts the task list by date."},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"andrea-twl"},"content":"### Usage"},{"lineNumber":146,"author":{"gitId":"andrea-twl"},"content":"Format: `sort`"},{"lineNumber":147,"author":{"gitId":"andrea-twl"},"content":"+ Tasks are sorted by date."},{"lineNumber":148,"author":{"gitId":"andrea-twl"},"content":"+ Deadlines and events will be displayed in order of"},{"lineNumber":149,"author":{"gitId":"andrea-twl"},"content":"  increasing due date."},{"lineNumber":150,"author":{"gitId":"andrea-twl"},"content":"+ To do tasks without dates will be arranged below "},{"lineNumber":151,"author":{"gitId":"andrea-twl"},"content":"  deadlines and events"},{"lineNumber":152,"author":{"gitId":"andrea-twl"},"content":"+ Sorting is for viewing only; the new indices of the "},{"lineNumber":153,"author":{"gitId":"andrea-twl"},"content":"  tasks will not apply when using `done` and `delete` "},{"lineNumber":154,"author":{"gitId":"andrea-twl"},"content":"  commands"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"andrea-twl"},"content":"Example of usage:"},{"lineNumber":157,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":158,"author":{"gitId":"andrea-twl"},"content":"`list`"},{"lineNumber":159,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":160,"author":{"gitId":"andrea-twl"},"content":"    1. TODO[ ] watch lecture videos"},{"lineNumber":161,"author":{"gitId":"andrea-twl"},"content":"    2. DDLN[X] assignment (by: Feb 20 2021)"},{"lineNumber":162,"author":{"gitId":"andrea-twl"},"content":"    3. EVNT[ ] career fair (at: Apr 2 2021) "},{"lineNumber":163,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":164,"author":{"gitId":"andrea-twl"},"content":"`sort`"},{"lineNumber":165,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":166,"author":{"gitId":"andrea-twl"},"content":"Expected outcome:"},{"lineNumber":167,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":168,"author":{"gitId":"andrea-twl"},"content":"`list`"},{"lineNumber":169,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":170,"author":{"gitId":"andrea-twl"},"content":"    1. DDLN[X] assignment (by: Feb 20 2021)"},{"lineNumber":171,"author":{"gitId":"andrea-twl"},"content":"    2. EVNT[ ] career fair (at: Apr 2 2021) "},{"lineNumber":172,"author":{"gitId":"andrea-twl"},"content":"    3. TODO[ ] watch lecture videos"},{"lineNumber":173,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":174,"author":{"gitId":"andrea-twl"},"content":"`1. DDLN[X] assignment (by: Feb 20 2021)` and "},{"lineNumber":175,"author":{"gitId":"andrea-twl"},"content":"`2. EVNT[ ] career fair (at: Apr 2 2021)`are sorted by date, while "},{"lineNumber":176,"author":{"gitId":"andrea-twl"},"content":"`3. TODO[ ] watch lecture videos` has no date, and is sorted to"},{"lineNumber":177,"author":{"gitId":"andrea-twl"},"content":"the bottom by default."},{"lineNumber":178,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":179,"author":{"gitId":"andrea-twl"},"content":"## Locating a task : `find`"},{"lineNumber":180,"author":{"gitId":"andrea-twl"},"content":"Searches and displays tasks."},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"andrea-twl"},"content":"### Usage"},{"lineNumber":183,"author":{"gitId":"andrea-twl"},"content":"Format: `find {KEYWORD}`"},{"lineNumber":184,"author":{"gitId":"andrea-twl"},"content":"+ Tasks in the list that contain words that match the "},{"lineNumber":185,"author":{"gitId":"andrea-twl"},"content":"  KEYWORD will be displayed. "},{"lineNumber":186,"author":{"gitId":"andrea-twl"},"content":"+ Task names or descriptions, types of task or dates can "},{"lineNumber":187,"author":{"gitId":"andrea-twl"},"content":"all be used as keywords."},{"lineNumber":188,"author":{"gitId":"andrea-twl"},"content":"+ Keywords are case-sensitive and need to match the way the "},{"lineNumber":189,"author":{"gitId":"andrea-twl"},"content":"  list displays tasks, or the right results may not be retrieved."},{"lineNumber":190,"author":{"gitId":"andrea-twl"},"content":"+ Indices displayed in the results list are for viewing only,"},{"lineNumber":191,"author":{"gitId":"andrea-twl"},"content":"  and will not apply when using `done` and `delete`"},{"lineNumber":192,"author":{"gitId":"andrea-twl"},"content":"  commands"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":194,"author":{"gitId":"-"},"content":""},{"lineNumber":195,"author":{"gitId":"andrea-twl"},"content":"`list`"},{"lineNumber":196,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":197,"author":{"gitId":"andrea-twl"},"content":"    1. TODO[ ] watch lecture videos"},{"lineNumber":198,"author":{"gitId":"andrea-twl"},"content":"    2. DDLN[X] assignment (by: Feb 20 2021)"},{"lineNumber":199,"author":{"gitId":"andrea-twl"},"content":"    3. EVNT[ ] career fair (at: Apr 2 2021) "},{"lineNumber":200,"author":{"gitId":"andrea-twl"},"content":"    4. DDLN[ ] study for quiz (by: Mar 15 2021)"},{"lineNumber":201,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":202,"author":{"gitId":"andrea-twl"},"content":"`find DDLN`"},{"lineNumber":203,"author":{"gitId":"-"},"content":""},{"lineNumber":204,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":205,"author":{"gitId":"-"},"content":""},{"lineNumber":206,"author":{"gitId":"andrea-twl"},"content":"    Here are the matching tasks in your list:"},{"lineNumber":207,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":208,"author":{"gitId":"andrea-twl"},"content":"        1. DDLN[X] assignment (by: Feb 20 2021)"},{"lineNumber":209,"author":{"gitId":"andrea-twl"},"content":"        2. DDLN[ ] study for quiz (by: Mar 15 2021)"},{"lineNumber":210,"author":{"gitId":"andrea-twl"},"content":"    "},{"lineNumber":211,"author":{"gitId":"andrea-twl"},"content":"    Found 2 result(s)."},{"lineNumber":212,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":213,"author":{"gitId":"andrea-twl"},"content":"All tasks with `DDLN` in the list will be displayed."},{"lineNumber":214,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":215,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":216,"author":{"gitId":"andrea-twl"},"content":"## Exiting the program : `bye`"},{"lineNumber":217,"author":{"gitId":"andrea-twl"},"content":"Exits program."},{"lineNumber":218,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":219,"author":{"gitId":"andrea-twl"},"content":"### Usage"},{"lineNumber":220,"author":{"gitId":"andrea-twl"},"content":"Format: `bye`"},{"lineNumber":221,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":222,"author":{"gitId":"andrea-twl"},"content":"## Acknowledgements"},{"lineNumber":223,"author":{"gitId":"andrea-twl"},"content":"### External Libraries used:"},{"lineNumber":224,"author":{"gitId":"andrea-twl"},"content":"+ javafx-sdk-11.0.2"}],"authorContributionMap":{"-":23,"andrea-twl":201}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"andrea-twl"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"andrea-twl"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"andrea-twl"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"andrea-twl"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"andrea-twl"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"andrea-twl"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"andrea-twl"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"andrea-twl"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"andrea-twl"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"andrea-twl"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"andrea-twl"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"andrea-twl"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"andrea-twl"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"andrea-twl"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":17,"author":{"gitId":"andrea-twl"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"andrea-twl"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"andrea-twl"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"andrea-twl"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"andrea-twl"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"andrea-twl"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":24,"author":{"gitId":"andrea-twl"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"andrea-twl"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":27,"author":{"gitId":"andrea-twl"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"andrea-twl"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"andrea-twl"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"andrea-twl"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":32,"author":{"gitId":"andrea-twl"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"andrea-twl"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":35,"author":{"gitId":"andrea-twl"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"andrea-twl"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":38,"author":{"gitId":"andrea-twl"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"andrea-twl"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":41,"author":{"gitId":"andrea-twl"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"andrea-twl"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"andrea-twl"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":44,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":45,"author":{"gitId":"andrea-twl"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"andrea-twl"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"andrea-twl"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"andrea-twl"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"andrea-twl"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":51,"author":{"gitId":"andrea-twl"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":53,"author":{"gitId":"andrea-twl"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"andrea-twl"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"andrea-twl"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":57,"author":{"gitId":"andrea-twl"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":58,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":59,"author":{"gitId":"andrea-twl"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"andrea-twl"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"andrea-twl"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"andrea-twl"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"andrea-twl"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":65,"author":{"gitId":"andrea-twl"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":67,"author":{"gitId":"andrea-twl"},"content":":init"},{"lineNumber":68,"author":{"gitId":"andrea-twl"},"content":"@rem Get command-line arguments, handling Windows variants"},{"lineNumber":69,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":70,"author":{"gitId":"andrea-twl"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":71,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":72,"author":{"gitId":"andrea-twl"},"content":":win9xME_args"},{"lineNumber":73,"author":{"gitId":"andrea-twl"},"content":"@rem Slurp the command line arguments."},{"lineNumber":74,"author":{"gitId":"andrea-twl"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":75,"author":{"gitId":"andrea-twl"},"content":"set _SKIP\u003d2"},{"lineNumber":76,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":77,"author":{"gitId":"andrea-twl"},"content":":win9xME_args_slurp"},{"lineNumber":78,"author":{"gitId":"andrea-twl"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":79,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":80,"author":{"gitId":"andrea-twl"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":81,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":82,"author":{"gitId":"andrea-twl"},"content":":execute"},{"lineNumber":83,"author":{"gitId":"andrea-twl"},"content":"@rem Setup the command line"},{"lineNumber":84,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":85,"author":{"gitId":"andrea-twl"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":86,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":87,"author":{"gitId":"andrea-twl"},"content":"@rem Execute Gradle"},{"lineNumber":88,"author":{"gitId":"andrea-twl"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"},{"lineNumber":89,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":90,"author":{"gitId":"andrea-twl"},"content":":end"},{"lineNumber":91,"author":{"gitId":"andrea-twl"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":92,"author":{"gitId":"andrea-twl"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":93,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":94,"author":{"gitId":"andrea-twl"},"content":":fail"},{"lineNumber":95,"author":{"gitId":"andrea-twl"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":96,"author":{"gitId":"andrea-twl"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":97,"author":{"gitId":"andrea-twl"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":98,"author":{"gitId":"andrea-twl"},"content":"exit /b 1"},{"lineNumber":99,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":100,"author":{"gitId":"andrea-twl"},"content":":mainEnd"},{"lineNumber":101,"author":{"gitId":"andrea-twl"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":102,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":103,"author":{"gitId":"andrea-twl"},"content":":omega"}],"authorContributionMap":{"andrea-twl":103}},{"path":"src/main/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"andrea-twl"},"content":"TODO[ ] rea"},{"lineNumber":2,"author":{"gitId":"andrea-twl"},"content":"EVNT[ ] play with bingrae (at: 2000-09-08)"},{"lineNumber":3,"author":{"gitId":"andrea-twl"},"content":"TODO[ ] yoz"},{"lineNumber":4,"author":{"gitId":"andrea-twl"},"content":"DDLN[ ] deadline hello (by: 2000-09-08)"},{"lineNumber":5,"author":{"gitId":"andrea-twl"},"content":"EVNT[ ] event y (at: 2003-08-15)"},{"lineNumber":6,"author":{"gitId":"andrea-twl"},"content":"TODO[X] yellow"},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":"TODO[ ] check check"},{"lineNumber":8,"author":{"gitId":"andrea-twl"},"content":"EVNT[X] event yoooz (at: 2000-04-03)"},{"lineNumber":9,"author":{"gitId":"andrea-twl"},"content":"DDLN[X] shit (by: 2021-03-09)"}],"authorContributionMap":{"andrea-twl":9}},{"path":"src/main/java/Blue.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrea-twl"},"content":"//package duke;"},{"lineNumber":2,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":3,"author":{"gitId":"andrea-twl"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"andrea-twl"},"content":"import javafx.scene.Scene;"},{"lineNumber":5,"author":{"gitId":"andrea-twl"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"andrea-twl"},"content":"import javafx.scene.control.Label;"},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":8,"author":{"gitId":"andrea-twl"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":9,"author":{"gitId":"andrea-twl"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"andrea-twl"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":11,"author":{"gitId":"andrea-twl"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":12,"author":{"gitId":"andrea-twl"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":13,"author":{"gitId":"andrea-twl"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":14,"author":{"gitId":"andrea-twl"},"content":"import javafx.stage.Stage;"},{"lineNumber":15,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":16,"author":{"gitId":"andrea-twl"},"content":"import java.util.Scanner;"},{"lineNumber":17,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":18,"author":{"gitId":"andrea-twl"},"content":"public class Blue extends Application {"},{"lineNumber":19,"author":{"gitId":"andrea-twl"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":20,"author":{"gitId":"andrea-twl"},"content":"    private VBox dialogContainer;"},{"lineNumber":21,"author":{"gitId":"andrea-twl"},"content":"    private TextField userInput;"},{"lineNumber":22,"author":{"gitId":"andrea-twl"},"content":"    private Button sendButton;"},{"lineNumber":23,"author":{"gitId":"andrea-twl"},"content":"    private Scene scene;"},{"lineNumber":24,"author":{"gitId":"andrea-twl"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":25,"author":{"gitId":"andrea-twl"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":26,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":27,"author":{"gitId":"andrea-twl"},"content":"    public static void main(String[] args) {"},{"lineNumber":28,"author":{"gitId":"andrea-twl"},"content":"        Parser parser \u003d createParser();"},{"lineNumber":29,"author":{"gitId":"andrea-twl"},"content":"        Ui.printWelcome();"},{"lineNumber":30,"author":{"gitId":"andrea-twl"},"content":"        parser.parseAll();"},{"lineNumber":31,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":33,"author":{"gitId":"andrea-twl"},"content":"    static Parser createParser() {"},{"lineNumber":34,"author":{"gitId":"andrea-twl"},"content":"        // Set up data files"},{"lineNumber":35,"author":{"gitId":"andrea-twl"},"content":"        String path \u003d \"./data/duke.txt\";"},{"lineNumber":36,"author":{"gitId":"andrea-twl"},"content":"        String directory \u003d \"./data\";"},{"lineNumber":37,"author":{"gitId":"andrea-twl"},"content":"        Storage storage \u003d new Storage(path, directory);"},{"lineNumber":38,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":39,"author":{"gitId":"andrea-twl"},"content":"        // Initialise TaskList from file"},{"lineNumber":40,"author":{"gitId":"andrea-twl"},"content":"        TaskList taskList \u003d new TaskList(storage);"},{"lineNumber":41,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":42,"author":{"gitId":"andrea-twl"},"content":"        // Parse input"},{"lineNumber":43,"author":{"gitId":"andrea-twl"},"content":"        Parser parser \u003d new Parser(taskList);"},{"lineNumber":44,"author":{"gitId":"andrea-twl"},"content":"        return parser;"},{"lineNumber":45,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":47,"author":{"gitId":"andrea-twl"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"andrea-twl"},"content":"    public void start(Stage stage) {"},{"lineNumber":49,"author":{"gitId":"andrea-twl"},"content":"        //Step 1. Setting up required components"},{"lineNumber":50,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":51,"author":{"gitId":"andrea-twl"},"content":"        //The container for the content of the chat to scroll."},{"lineNumber":52,"author":{"gitId":"andrea-twl"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":53,"author":{"gitId":"andrea-twl"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":54,"author":{"gitId":"andrea-twl"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":55,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":56,"author":{"gitId":"andrea-twl"},"content":"        userInput \u003d new TextField();"},{"lineNumber":57,"author":{"gitId":"andrea-twl"},"content":"        sendButton \u003d new Button(\"Send\");"},{"lineNumber":58,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":59,"author":{"gitId":"andrea-twl"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":60,"author":{"gitId":"andrea-twl"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":61,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":62,"author":{"gitId":"andrea-twl"},"content":"        scene \u003d new Scene(mainLayout);"},{"lineNumber":63,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":64,"author":{"gitId":"andrea-twl"},"content":"        stage.setScene(scene);"},{"lineNumber":65,"author":{"gitId":"andrea-twl"},"content":"        stage.show();"},{"lineNumber":66,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":67,"author":{"gitId":"andrea-twl"},"content":"        // more code to be added here later"},{"lineNumber":68,"author":{"gitId":"andrea-twl"},"content":"        //Step 2. Formatting the window to look as expected"},{"lineNumber":69,"author":{"gitId":"andrea-twl"},"content":"        stage.setTitle(\"Duke\");"},{"lineNumber":70,"author":{"gitId":"andrea-twl"},"content":"        stage.setResizable(false);"},{"lineNumber":71,"author":{"gitId":"andrea-twl"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":72,"author":{"gitId":"andrea-twl"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":73,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":74,"author":{"gitId":"andrea-twl"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":75,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":76,"author":{"gitId":"andrea-twl"},"content":"        scrollPane.setPrefSize(385, 535);"},{"lineNumber":77,"author":{"gitId":"andrea-twl"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":78,"author":{"gitId":"andrea-twl"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":79,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":80,"author":{"gitId":"andrea-twl"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":81,"author":{"gitId":"andrea-twl"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":82,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":83,"author":{"gitId":"andrea-twl"},"content":"        // You will need to import `javafx.scene.layout.Region` for this."},{"lineNumber":84,"author":{"gitId":"andrea-twl"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":85,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":86,"author":{"gitId":"andrea-twl"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":87,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":88,"author":{"gitId":"andrea-twl"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":89,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":90,"author":{"gitId":"andrea-twl"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":91,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":92,"author":{"gitId":"andrea-twl"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":93,"author":{"gitId":"andrea-twl"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":94,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":95,"author":{"gitId":"andrea-twl"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);"},{"lineNumber":96,"author":{"gitId":"andrea-twl"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":97,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":98,"author":{"gitId":"andrea-twl"},"content":"        Label introText \u003d new Label(Ui.welcomeString());"},{"lineNumber":99,"author":{"gitId":"andrea-twl"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":100,"author":{"gitId":"andrea-twl"},"content":"                DialogBox.getDukeDialog(introText, new ImageView(duke))"},{"lineNumber":101,"author":{"gitId":"andrea-twl"},"content":"        );"},{"lineNumber":102,"author":{"gitId":"andrea-twl"},"content":"        userInput.clear();"},{"lineNumber":103,"author":{"gitId":"andrea-twl"},"content":"        // more code to be added here later"},{"lineNumber":104,"author":{"gitId":"andrea-twl"},"content":"        //Step 3. Add functionality to handle user input."},{"lineNumber":105,"author":{"gitId":"andrea-twl"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":106,"author":{"gitId":"andrea-twl"},"content":"            handleUserInput();"},{"lineNumber":107,"author":{"gitId":"andrea-twl"},"content":"        });"},{"lineNumber":108,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":109,"author":{"gitId":"andrea-twl"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":110,"author":{"gitId":"andrea-twl"},"content":"            handleUserInput();"},{"lineNumber":111,"author":{"gitId":"andrea-twl"},"content":"        });"},{"lineNumber":112,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":113,"author":{"gitId":"andrea-twl"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes."},{"lineNumber":114,"author":{"gitId":"andrea-twl"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":115,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"andrea-twl"},"content":"     * Iteration 1:"},{"lineNumber":118,"author":{"gitId":"andrea-twl"},"content":"     * Creates a label with the specified text and adds it to the dialog container."},{"lineNumber":119,"author":{"gitId":"andrea-twl"},"content":"     * @param text String containing text to add"},{"lineNumber":120,"author":{"gitId":"andrea-twl"},"content":"     * @return a label with the specified text that has word wrap enabled."},{"lineNumber":121,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":122,"author":{"gitId":"andrea-twl"},"content":"    private Label getDialogLabel(String text) {"},{"lineNumber":123,"author":{"gitId":"andrea-twl"},"content":"        // You will need to import `javafx.scene.control.Label`."},{"lineNumber":124,"author":{"gitId":"andrea-twl"},"content":"        Label textToAdd \u003d new Label(text);"},{"lineNumber":125,"author":{"gitId":"andrea-twl"},"content":"        textToAdd.setWrapText(true);"},{"lineNumber":126,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":127,"author":{"gitId":"andrea-twl"},"content":"        return textToAdd;"},{"lineNumber":128,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":130,"author":{"gitId":"andrea-twl"},"content":"     * Iteration 2:"},{"lineNumber":131,"author":{"gitId":"andrea-twl"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":132,"author":{"gitId":"andrea-twl"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":133,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":134,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":135,"author":{"gitId":"andrea-twl"},"content":"    private void handleUserInput() {"},{"lineNumber":136,"author":{"gitId":"andrea-twl"},"content":"        Label userText \u003d new Label(userInput.getText());"},{"lineNumber":137,"author":{"gitId":"andrea-twl"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));"},{"lineNumber":138,"author":{"gitId":"andrea-twl"},"content":"        assert user !\u003d null : \"Error: User image does not exist\";"},{"lineNumber":139,"author":{"gitId":"andrea-twl"},"content":"        assert duke !\u003d null : \"Error: Duke image does not exist\";"},{"lineNumber":140,"author":{"gitId":"andrea-twl"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":141,"author":{"gitId":"andrea-twl"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),"},{"lineNumber":142,"author":{"gitId":"andrea-twl"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"},{"lineNumber":143,"author":{"gitId":"andrea-twl"},"content":"        );"},{"lineNumber":144,"author":{"gitId":"andrea-twl"},"content":"        userInput.clear();"},{"lineNumber":145,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"andrea-twl"},"content":"    /*"},{"lineNumber":147,"author":{"gitId":"andrea-twl"},"content":"    private void handleUserInput() {"},{"lineNumber":148,"author":{"gitId":"andrea-twl"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":149,"author":{"gitId":"andrea-twl"},"content":"        String response \u003d getResponse(input);"},{"lineNumber":150,"author":{"gitId":"andrea-twl"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":151,"author":{"gitId":"andrea-twl"},"content":"                DialogBox.getUserDialog(input, user),"},{"lineNumber":152,"author":{"gitId":"andrea-twl"},"content":"                DialogBox.getDukeDialog(response, duke)"},{"lineNumber":153,"author":{"gitId":"andrea-twl"},"content":"        );"},{"lineNumber":154,"author":{"gitId":"andrea-twl"},"content":"        userInput.clear();"},{"lineNumber":155,"author":{"gitId":"andrea-twl"},"content":"    }*/"},{"lineNumber":156,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":157,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":158,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":159,"author":{"gitId":"andrea-twl"},"content":"     * You should have your own function to generate a response to user input."},{"lineNumber":160,"author":{"gitId":"andrea-twl"},"content":"     * Replace this stub with your completed method."},{"lineNumber":161,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":162,"author":{"gitId":"andrea-twl"},"content":"    public String getResponse(String input) {"},{"lineNumber":163,"author":{"gitId":"andrea-twl"},"content":"        Parser parser \u003d createParser();"},{"lineNumber":164,"author":{"gitId":"andrea-twl"},"content":"        if (!input.equals(\"bye\")) {"},{"lineNumber":165,"author":{"gitId":"andrea-twl"},"content":"            return parser.parseLine(input);"},{"lineNumber":166,"author":{"gitId":"andrea-twl"},"content":"        } else {"},{"lineNumber":167,"author":{"gitId":"andrea-twl"},"content":"            System.exit(0);"},{"lineNumber":168,"author":{"gitId":"andrea-twl"},"content":"            return Ui.byeString();"},{"lineNumber":169,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":170,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"andrea-twl"},"content":"}"},{"lineNumber":172,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":173,"author":{"gitId":"andrea-twl"},"content":""}],"authorContributionMap":{"andrea-twl":173}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrea-twl"},"content":"//package duke;"},{"lineNumber":2,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":3,"author":{"gitId":"andrea-twl"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"andrea-twl"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"andrea-twl"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":"public class Deadline extends TimedTask {"},{"lineNumber":8,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":9,"author":{"gitId":"andrea-twl"},"content":"    Deadline() {"},{"lineNumber":10,"author":{"gitId":"andrea-twl"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":13,"author":{"gitId":"andrea-twl"},"content":"    static Deadline parseInput(String input) throws DukeIncompleteCommandException,"},{"lineNumber":14,"author":{"gitId":"andrea-twl"},"content":"            DateTimeParseException {"},{"lineNumber":15,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":16,"author":{"gitId":"andrea-twl"},"content":"        Deadline deadline \u003d new Deadline();"},{"lineNumber":17,"author":{"gitId":"andrea-twl"},"content":"        input \u003d input.substring(8).trim();"},{"lineNumber":18,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":19,"author":{"gitId":"andrea-twl"},"content":"        if (input.equals(\"\")) {"},{"lineNumber":20,"author":{"gitId":"andrea-twl"},"content":"            throw new DukeIncompleteCommandException();"},{"lineNumber":21,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":23,"author":{"gitId":"andrea-twl"},"content":"        String[] inputs \u003d input.split(\"/by\");"},{"lineNumber":24,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":25,"author":{"gitId":"andrea-twl"},"content":"        if (!input.contains(\"/by\") || inputs.length \u003c 2) {"},{"lineNumber":26,"author":{"gitId":"andrea-twl"},"content":"            throw new DukeIncompleteCommandException(\"Oh no! Please enter an due date. :P\\n\");"},{"lineNumber":27,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"andrea-twl"},"content":"        deadline.task \u003d inputs[0].trim();"},{"lineNumber":29,"author":{"gitId":"andrea-twl"},"content":"        deadline.isDone \u003d false;"},{"lineNumber":30,"author":{"gitId":"andrea-twl"},"content":"        deadline.date \u003d LocalDate.parse(inputs[1].trim());"},{"lineNumber":31,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":32,"author":{"gitId":"andrea-twl"},"content":"        return deadline;"},{"lineNumber":33,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":35,"author":{"gitId":"andrea-twl"},"content":"    static Deadline fileReader(String line) {"},{"lineNumber":36,"author":{"gitId":"andrea-twl"},"content":"        Deadline deadline \u003d new Deadline();"},{"lineNumber":37,"author":{"gitId":"andrea-twl"},"content":"        if (line.charAt(5) \u003d\u003d \u0027X\u0027) {"},{"lineNumber":38,"author":{"gitId":"andrea-twl"},"content":"            deadline.isDone \u003d true;"},{"lineNumber":39,"author":{"gitId":"andrea-twl"},"content":"        } else {"},{"lineNumber":40,"author":{"gitId":"andrea-twl"},"content":"            deadline.isDone \u003d false;"},{"lineNumber":41,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"andrea-twl"},"content":"        String[] lines \u003d line.substring(7).trim().split(\"by: \");"},{"lineNumber":43,"author":{"gitId":"andrea-twl"},"content":"        deadline.task \u003d lines[0].substring(0, lines[0].length() - 2).trim();"},{"lineNumber":44,"author":{"gitId":"andrea-twl"},"content":"        String dateString \u003d lines[1].substring(0, lines[1].length() - 1);"},{"lineNumber":45,"author":{"gitId":"andrea-twl"},"content":"        deadline.date \u003d LocalDate.parse(dateString.subSequence(0, dateString.length()));"},{"lineNumber":46,"author":{"gitId":"andrea-twl"},"content":"        return deadline;"},{"lineNumber":47,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":49,"author":{"gitId":"andrea-twl"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"andrea-twl"},"content":"    public String toString() {"},{"lineNumber":51,"author":{"gitId":"andrea-twl"},"content":"        return String.format(\"DDLN%s (by: %s)\", super.toString(),"},{"lineNumber":52,"author":{"gitId":"andrea-twl"},"content":"                date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"},{"lineNumber":53,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":55,"author":{"gitId":"andrea-twl"},"content":"    public String toFileString() {"},{"lineNumber":56,"author":{"gitId":"andrea-twl"},"content":"        return String.format(\"DDLN%s (by: %s)\", super.toString(), date);"},{"lineNumber":57,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"andrea-twl"},"content":"}"}],"authorContributionMap":{"andrea-twl":58}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrea-twl"},"content":"//package duke;"},{"lineNumber":2,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":3,"author":{"gitId":"andrea-twl"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"andrea-twl"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":6,"author":{"gitId":"andrea-twl"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"andrea-twl"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"andrea-twl"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"andrea-twl"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"andrea-twl"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"andrea-twl"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"andrea-twl"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"andrea-twl"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"andrea-twl"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":17,"author":{"gitId":"andrea-twl"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"andrea-twl"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"andrea-twl"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"andrea-twl"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"andrea-twl"},"content":" */"},{"lineNumber":22,"author":{"gitId":"andrea-twl"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"andrea-twl"},"content":"    private Label text;"},{"lineNumber":24,"author":{"gitId":"andrea-twl"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":26,"author":{"gitId":"andrea-twl"},"content":"    public DialogBox(Label l, ImageView iv) {"},{"lineNumber":27,"author":{"gitId":"andrea-twl"},"content":"        text \u003d l;"},{"lineNumber":28,"author":{"gitId":"andrea-twl"},"content":"        displayPicture \u003d iv;"},{"lineNumber":29,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":30,"author":{"gitId":"andrea-twl"},"content":"        text.setWrapText(true);"},{"lineNumber":31,"author":{"gitId":"andrea-twl"},"content":"        displayPicture.setFitWidth(100.0);"},{"lineNumber":32,"author":{"gitId":"andrea-twl"},"content":"        displayPicture.setFitHeight(100.0);"},{"lineNumber":33,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":34,"author":{"gitId":"andrea-twl"},"content":"        this.setAlignment(Pos.TOP_RIGHT);"},{"lineNumber":35,"author":{"gitId":"andrea-twl"},"content":"        this.getChildren().addAll(text, displayPicture);"},{"lineNumber":36,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":38,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"andrea-twl"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":40,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"andrea-twl"},"content":"    private void flip() {"},{"lineNumber":42,"author":{"gitId":"andrea-twl"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":43,"author":{"gitId":"andrea-twl"},"content":"        Collections.reverse(tmp);"},{"lineNumber":44,"author":{"gitId":"andrea-twl"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":45,"author":{"gitId":"andrea-twl"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":46,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"andrea-twl"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {"},{"lineNumber":48,"author":{"gitId":"andrea-twl"},"content":"        return new DialogBox(l, iv);"},{"lineNumber":49,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":51,"author":{"gitId":"andrea-twl"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {"},{"lineNumber":52,"author":{"gitId":"andrea-twl"},"content":"        var db \u003d new DialogBox(l, iv);"},{"lineNumber":53,"author":{"gitId":"andrea-twl"},"content":"        db.flip();"},{"lineNumber":54,"author":{"gitId":"andrea-twl"},"content":"        return db;"},{"lineNumber":55,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"andrea-twl"},"content":"}"}],"authorContributionMap":{"andrea-twl":56}},{"path":"src/main/java/DukeIncompleteCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrea-twl"},"content":"//package duke;"},{"lineNumber":2,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":3,"author":{"gitId":"andrea-twl"},"content":"public class DukeIncompleteCommandException extends Exception {"},{"lineNumber":4,"author":{"gitId":"andrea-twl"},"content":"    public String message;"},{"lineNumber":5,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":6,"author":{"gitId":"andrea-twl"},"content":"    DukeIncompleteCommandException() {"},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":"        this.message \u003d \"Oh no! Task cannot be empty. ):\\n\";"},{"lineNumber":8,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":10,"author":{"gitId":"andrea-twl"},"content":"    DukeIncompleteCommandException(String message) {"},{"lineNumber":11,"author":{"gitId":"andrea-twl"},"content":"        this.message \u003d message;"},{"lineNumber":12,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"andrea-twl"},"content":"     * Returns an incomplete command error message."},{"lineNumber":15,"author":{"gitId":"andrea-twl"},"content":"     * @return Error message in the form of a string."},{"lineNumber":16,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"andrea-twl"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"andrea-twl"},"content":"    public String getMessage() {"},{"lineNumber":19,"author":{"gitId":"andrea-twl"},"content":"        return message;"},{"lineNumber":20,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":22,"author":{"gitId":"andrea-twl"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"andrea-twl"},"content":"        return message;"},{"lineNumber":24,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"andrea-twl"},"content":"}"}],"authorContributionMap":{"andrea-twl":25}},{"path":"src/main/java/DukeInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrea-twl"},"content":"//package duke;"},{"lineNumber":2,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":3,"author":{"gitId":"andrea-twl"},"content":"public class DukeInvalidCommandException extends Exception {"},{"lineNumber":4,"author":{"gitId":"andrea-twl"},"content":"    public String message \u003d \"Oh no! I don\u0027t know what that means. ):\\nType \u0027help\u0027 for more details.\";"},{"lineNumber":5,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":6,"author":{"gitId":"andrea-twl"},"content":"    DukeInvalidCommandException() {"},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":9,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"andrea-twl"},"content":"     * Returns an invalid command error message."},{"lineNumber":11,"author":{"gitId":"andrea-twl"},"content":"     * @return Error message in the form of a string."},{"lineNumber":12,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"andrea-twl"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"andrea-twl"},"content":"    public String getMessage() {"},{"lineNumber":15,"author":{"gitId":"andrea-twl"},"content":"        return message;"},{"lineNumber":16,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":18,"author":{"gitId":"andrea-twl"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitId":"andrea-twl"},"content":"        return message;"},{"lineNumber":20,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"andrea-twl"},"content":"}"}],"authorContributionMap":{"andrea-twl":21}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrea-twl"},"content":"//package duke;"},{"lineNumber":2,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":3,"author":{"gitId":"andrea-twl"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":5,"author":{"gitId":"andrea-twl"},"content":"public class Event extends TimedTask {"},{"lineNumber":6,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":"    public Event() {"},{"lineNumber":8,"author":{"gitId":"andrea-twl"},"content":"        this.isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":11,"author":{"gitId":"andrea-twl"},"content":"    /*"},{"lineNumber":12,"author":{"gitId":"andrea-twl"},"content":"    static Event parseInput(String input) throws DukeIncompleteCommandException,"},{"lineNumber":13,"author":{"gitId":"andrea-twl"},"content":"            DateTimeParseException {"},{"lineNumber":14,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":15,"author":{"gitId":"andrea-twl"},"content":"        Event event \u003d new Event();"},{"lineNumber":16,"author":{"gitId":"andrea-twl"},"content":"        input \u003d input.substring(5).trim();"},{"lineNumber":17,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":18,"author":{"gitId":"andrea-twl"},"content":"        if (input.equals(\"\")) {"},{"lineNumber":19,"author":{"gitId":"andrea-twl"},"content":"            throw new DukeIncompleteCommandException();"},{"lineNumber":20,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":22,"author":{"gitId":"andrea-twl"},"content":"        String[] inputs \u003d input.split(\"/at\");"},{"lineNumber":23,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":24,"author":{"gitId":"andrea-twl"},"content":"        if (!input.contains(\"/at\") || inputs.length \u003c 2) {"},{"lineNumber":25,"author":{"gitId":"andrea-twl"},"content":"            throw new DukeIncompleteCommandException(\"Oh no! Please enter an event date. :P\\n\");"},{"lineNumber":26,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":28,"author":{"gitId":"andrea-twl"},"content":"        event.task \u003d inputs[0].trim();"},{"lineNumber":29,"author":{"gitId":"andrea-twl"},"content":"        event.isDone \u003d false;"},{"lineNumber":30,"author":{"gitId":"andrea-twl"},"content":"        event.date \u003d LocalDate.parse(inputs[1].trim());"},{"lineNumber":31,"author":{"gitId":"andrea-twl"},"content":"        return event;"},{"lineNumber":32,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":34,"author":{"gitId":"andrea-twl"},"content":"    static Event fileReader(String line) {"},{"lineNumber":35,"author":{"gitId":"andrea-twl"},"content":"        Event event \u003d new Event();"},{"lineNumber":36,"author":{"gitId":"andrea-twl"},"content":"        if (line.charAt(5) \u003d\u003d \u0027X\u0027) {"},{"lineNumber":37,"author":{"gitId":"andrea-twl"},"content":"            event.isDone \u003d true;"},{"lineNumber":38,"author":{"gitId":"andrea-twl"},"content":"        } else {"},{"lineNumber":39,"author":{"gitId":"andrea-twl"},"content":"            event.isDone \u003d false;"},{"lineNumber":40,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"andrea-twl"},"content":"        String[] lines \u003d line.substring(7).trim().split(\"at: \");"},{"lineNumber":42,"author":{"gitId":"andrea-twl"},"content":"        event.task \u003d lines[0].substring(0, lines[0].length() - 2).trim();"},{"lineNumber":43,"author":{"gitId":"andrea-twl"},"content":"        String dateString \u003d lines[1].substring(0, lines[1].length() - 1);"},{"lineNumber":44,"author":{"gitId":"andrea-twl"},"content":"        event.date \u003d LocalDate.parse(dateString.subSequence(0, dateString.length()));"},{"lineNumber":45,"author":{"gitId":"andrea-twl"},"content":"        return event;"},{"lineNumber":46,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":48,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"andrea-twl"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"andrea-twl"},"content":"    public String toString() {"},{"lineNumber":51,"author":{"gitId":"andrea-twl"},"content":"        return String.format(\"EVNT%s (at: %s)\", super.toString(),"},{"lineNumber":52,"author":{"gitId":"andrea-twl"},"content":"                date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"},{"lineNumber":53,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"andrea-twl"},"content":"     * Creates a string for saving in the file."},{"lineNumber":56,"author":{"gitId":"andrea-twl"},"content":"     * @return String to be saved in file."},{"lineNumber":57,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"andrea-twl"},"content":"    @Override"},{"lineNumber":59,"author":{"gitId":"andrea-twl"},"content":"    public String toFileString() {"},{"lineNumber":60,"author":{"gitId":"andrea-twl"},"content":"        return String.format(\"EVNT%s (at: %s)\", super.toString(), date);"},{"lineNumber":61,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"andrea-twl"},"content":"}"}],"authorContributionMap":{"andrea-twl":62}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrea-twl"},"content":"//package duke;"},{"lineNumber":2,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":3,"author":{"gitId":"andrea-twl"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":5,"author":{"gitId":"andrea-twl"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"andrea-twl"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":" */"},{"lineNumber":8,"author":{"gitId":"andrea-twl"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"andrea-twl"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"andrea-twl"},"content":"        Application.launch(Blue.class, args);"},{"lineNumber":11,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"andrea-twl"},"content":"}"},{"lineNumber":13,"author":{"gitId":"andrea-twl"},"content":""}],"authorContributionMap":{"andrea-twl":13}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrea-twl"},"content":"public class MainWindow {"},{"lineNumber":2,"author":{"gitId":"andrea-twl"},"content":"import javafx.fxml.FXML;"},{"lineNumber":3,"author":{"gitId":"andrea-twl"},"content":"import javafx.scene.control.Button;"},{"lineNumber":4,"author":{"gitId":"andrea-twl"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":5,"author":{"gitId":"andrea-twl"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":6,"author":{"gitId":"andrea-twl"},"content":"import javafx.scene.image.Image;"},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"andrea-twl"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":9,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"andrea-twl"},"content":"     * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":11,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"andrea-twl"},"content":"    public class MainWindow extends AnchorPane {"},{"lineNumber":13,"author":{"gitId":"andrea-twl"},"content":"        @FXML"},{"lineNumber":14,"author":{"gitId":"andrea-twl"},"content":"        private ScrollPane scrollPane;"},{"lineNumber":15,"author":{"gitId":"andrea-twl"},"content":"        @FXML"},{"lineNumber":16,"author":{"gitId":"andrea-twl"},"content":"        private VBox dialogContainer;"},{"lineNumber":17,"author":{"gitId":"andrea-twl"},"content":"        @FXML"},{"lineNumber":18,"author":{"gitId":"andrea-twl"},"content":"        private TextField userInput;"},{"lineNumber":19,"author":{"gitId":"andrea-twl"},"content":"        @FXML"},{"lineNumber":20,"author":{"gitId":"andrea-twl"},"content":"        private Button sendButton;"},{"lineNumber":21,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":22,"author":{"gitId":"andrea-twl"},"content":"        private Duke duke;"},{"lineNumber":23,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":24,"author":{"gitId":"andrea-twl"},"content":"        private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":25,"author":{"gitId":"andrea-twl"},"content":"        private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":26,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":27,"author":{"gitId":"andrea-twl"},"content":"        @FXML"},{"lineNumber":28,"author":{"gitId":"andrea-twl"},"content":"        public void initialize() {"},{"lineNumber":29,"author":{"gitId":"andrea-twl"},"content":"            scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":30,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":32,"author":{"gitId":"andrea-twl"},"content":"        public void setDuke(Duke d) {"},{"lineNumber":33,"author":{"gitId":"andrea-twl"},"content":"            duke \u003d d;"},{"lineNumber":34,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":36,"author":{"gitId":"andrea-twl"},"content":"        /**"},{"lineNumber":37,"author":{"gitId":"andrea-twl"},"content":"         * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":38,"author":{"gitId":"andrea-twl"},"content":"         * the dialog container. Clears the user input after processing."},{"lineNumber":39,"author":{"gitId":"andrea-twl"},"content":"         */"},{"lineNumber":40,"author":{"gitId":"andrea-twl"},"content":"        @FXML"},{"lineNumber":41,"author":{"gitId":"andrea-twl"},"content":"        private void handleUserInput() {"},{"lineNumber":42,"author":{"gitId":"andrea-twl"},"content":"            String input \u003d userInput.getText();"},{"lineNumber":43,"author":{"gitId":"andrea-twl"},"content":"            String response \u003d duke.getResponse(input);"},{"lineNumber":44,"author":{"gitId":"andrea-twl"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":45,"author":{"gitId":"andrea-twl"},"content":"                    DialogBox.getUserDialog(input, userImage),"},{"lineNumber":46,"author":{"gitId":"andrea-twl"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":47,"author":{"gitId":"andrea-twl"},"content":"            );"},{"lineNumber":48,"author":{"gitId":"andrea-twl"},"content":"            userInput.clear();"},{"lineNumber":49,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"andrea-twl"},"content":"}"}],"authorContributionMap":{"andrea-twl":51}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrea-twl"},"content":"//package duke;"},{"lineNumber":2,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":3,"author":{"gitId":"andrea-twl"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"andrea-twl"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"andrea-twl"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"andrea-twl"},"content":" * Class containing methods for parsing user input and"},{"lineNumber":9,"author":{"gitId":"andrea-twl"},"content":" * file contents."},{"lineNumber":10,"author":{"gitId":"andrea-twl"},"content":" */"},{"lineNumber":11,"author":{"gitId":"andrea-twl"},"content":"public class Parser {"},{"lineNumber":12,"author":{"gitId":"andrea-twl"},"content":"    TaskList taskList;"},{"lineNumber":13,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":14,"author":{"gitId":"andrea-twl"},"content":"    Parser(TaskList taskList) {"},{"lineNumber":15,"author":{"gitId":"andrea-twl"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":16,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":18,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"andrea-twl"},"content":"     * Parses all user input and processes each line and"},{"lineNumber":20,"author":{"gitId":"andrea-twl"},"content":"     * command."},{"lineNumber":21,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":23,"author":{"gitId":"andrea-twl"},"content":"    void parseAll() {"},{"lineNumber":24,"author":{"gitId":"andrea-twl"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":25,"author":{"gitId":"andrea-twl"},"content":"        String line \u003d sc.nextLine();"},{"lineNumber":26,"author":{"gitId":"andrea-twl"},"content":"        while (!line.equals(\"bye\")) {"},{"lineNumber":27,"author":{"gitId":"andrea-twl"},"content":"            System.out.println(parseLine(line));"},{"lineNumber":28,"author":{"gitId":"andrea-twl"},"content":"            line \u003d sc.nextLine();"},{"lineNumber":29,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"andrea-twl"},"content":"        System.exit(0);"},{"lineNumber":31,"author":{"gitId":"andrea-twl"},"content":"        sc.close();"},{"lineNumber":32,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":34,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"andrea-twl"},"content":"     * Parses each line of user input and determines if it"},{"lineNumber":36,"author":{"gitId":"andrea-twl"},"content":"     * is a general command or a command for adding tasks."},{"lineNumber":37,"author":{"gitId":"andrea-twl"},"content":"     * @param input Each line of user input"},{"lineNumber":38,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"andrea-twl"},"content":"    String parseLine(String input) {"},{"lineNumber":40,"author":{"gitId":"andrea-twl"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"andrea-twl"},"content":"            if (input.equals(\"list\") || input.contains(\"done\")"},{"lineNumber":42,"author":{"gitId":"andrea-twl"},"content":"                    || input.contains(\"delete\") || input.contains(\"find\")"},{"lineNumber":43,"author":{"gitId":"andrea-twl"},"content":"                    || input.equals(\"sort\") || input.equals(\"help\")) {"},{"lineNumber":44,"author":{"gitId":"andrea-twl"},"content":"                return parseGeneralCommand(input);"},{"lineNumber":45,"author":{"gitId":"andrea-twl"},"content":"            } else if (input.contains(\"todo\") ||"},{"lineNumber":46,"author":{"gitId":"andrea-twl"},"content":"                    input.contains(\"deadline\") ||"},{"lineNumber":47,"author":{"gitId":"andrea-twl"},"content":"                    input.contains(\"event\")) {"},{"lineNumber":48,"author":{"gitId":"andrea-twl"},"content":"                return taskList.add(parseAddTaskCommand(input));"},{"lineNumber":49,"author":{"gitId":"andrea-twl"},"content":"            } else {"},{"lineNumber":50,"author":{"gitId":"andrea-twl"},"content":"                throw new DukeInvalidCommandException();"},{"lineNumber":51,"author":{"gitId":"andrea-twl"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"andrea-twl"},"content":"        } catch (DukeInvalidCommandException e) {"},{"lineNumber":53,"author":{"gitId":"andrea-twl"},"content":"            return (e.getMessage());"},{"lineNumber":54,"author":{"gitId":"andrea-twl"},"content":"        } catch (DukeIncompleteCommandException e) {"},{"lineNumber":55,"author":{"gitId":"andrea-twl"},"content":"            return e.getMessage();"},{"lineNumber":56,"author":{"gitId":"andrea-twl"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":57,"author":{"gitId":"andrea-twl"},"content":"            return Ui.dateFormatErrorString();"},{"lineNumber":58,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":61,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"andrea-twl"},"content":"     * Parses commands like \"list\", \"done\" and \"delete\"."},{"lineNumber":63,"author":{"gitId":"andrea-twl"},"content":"     * @param input User input that are general commands."},{"lineNumber":64,"author":{"gitId":"andrea-twl"},"content":"     * @throws DukeIncompleteCommandException If \"done\" or \"delete\""},{"lineNumber":65,"author":{"gitId":"andrea-twl"},"content":"     * commands do not state an index."},{"lineNumber":66,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":68,"author":{"gitId":"andrea-twl"},"content":"    String parseGeneralCommand(String input) throws DukeIncompleteCommandException {"},{"lineNumber":69,"author":{"gitId":"andrea-twl"},"content":"        String[] inputs;"},{"lineNumber":70,"author":{"gitId":"andrea-twl"},"content":"        int index;"},{"lineNumber":71,"author":{"gitId":"andrea-twl"},"content":"        if (input.equals(\"list\")) {"},{"lineNumber":72,"author":{"gitId":"andrea-twl"},"content":"            return taskList.listString();"},{"lineNumber":73,"author":{"gitId":"andrea-twl"},"content":"        } else if (input.contains(\"done\")) {"},{"lineNumber":74,"author":{"gitId":"andrea-twl"},"content":"            inputs \u003d input.split(\" \");"},{"lineNumber":75,"author":{"gitId":"andrea-twl"},"content":"            assert (inputs[1] !\u003d \"\") : \"No index found!\";"},{"lineNumber":76,"author":{"gitId":"andrea-twl"},"content":"            index \u003d Integer.parseInt(inputs[1]) - 1;"},{"lineNumber":77,"author":{"gitId":"andrea-twl"},"content":"            return taskList.markDone(index);"},{"lineNumber":78,"author":{"gitId":"andrea-twl"},"content":"        } else if (input.contains(\"delete\")) {"},{"lineNumber":79,"author":{"gitId":"andrea-twl"},"content":"            inputs \u003d input.split(\" \");"},{"lineNumber":80,"author":{"gitId":"andrea-twl"},"content":"            assert (inputs[1] !\u003d \"\") : \"No index found!\";"},{"lineNumber":81,"author":{"gitId":"andrea-twl"},"content":"            index \u003d Integer.parseInt(inputs[1]) - 1;"},{"lineNumber":82,"author":{"gitId":"andrea-twl"},"content":"            return taskList.delete(index);"},{"lineNumber":83,"author":{"gitId":"andrea-twl"},"content":"        } else if (input.contains(\"find\")) {"},{"lineNumber":84,"author":{"gitId":"andrea-twl"},"content":"            inputs \u003d input.split(\" \");"},{"lineNumber":85,"author":{"gitId":"andrea-twl"},"content":"            assert (inputs[1] !\u003d \"\") : \"No index found!\";"},{"lineNumber":86,"author":{"gitId":"andrea-twl"},"content":"            String keyword \u003d inputs[1];"},{"lineNumber":87,"author":{"gitId":"andrea-twl"},"content":"            return taskList.find(keyword);"},{"lineNumber":88,"author":{"gitId":"andrea-twl"},"content":"        } else if (input.equals(\"sort\")) {"},{"lineNumber":89,"author":{"gitId":"andrea-twl"},"content":"            return taskList.sortByDate();"},{"lineNumber":90,"author":{"gitId":"andrea-twl"},"content":"        } else {"},{"lineNumber":91,"author":{"gitId":"andrea-twl"},"content":"            return Ui.helpString();"},{"lineNumber":92,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":95,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"andrea-twl"},"content":"     * Parses commands for adding tasks like \"todo\", \"event\" and \"deadline\"."},{"lineNumber":97,"author":{"gitId":"andrea-twl"},"content":"     * @param input User input that are task adding commands."},{"lineNumber":98,"author":{"gitId":"andrea-twl"},"content":"     * @return Task that corresponds to the input."},{"lineNumber":99,"author":{"gitId":"andrea-twl"},"content":"     * @throws DukeIncompleteCommandException If no task has been specified."},{"lineNumber":100,"author":{"gitId":"andrea-twl"},"content":"     * @throws DateTimeParseException If date is not in the YYYY-MM-DD format."},{"lineNumber":101,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"andrea-twl"},"content":"    public static Task parseAddTaskCommand(String input) throws DukeIncompleteCommandException,"},{"lineNumber":103,"author":{"gitId":"andrea-twl"},"content":"            DateTimeParseException {"},{"lineNumber":104,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":105,"author":{"gitId":"andrea-twl"},"content":"        if (input.contains(\"todo\")) {"},{"lineNumber":106,"author":{"gitId":"andrea-twl"},"content":"            return parseAddToDoCommand(input);"},{"lineNumber":107,"author":{"gitId":"andrea-twl"},"content":"        } else {"},{"lineNumber":108,"author":{"gitId":"andrea-twl"},"content":"            return parseAddTimedTaskCommand(input);"},{"lineNumber":109,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"andrea-twl"},"content":"     * Parses commands for adding todo tasks."},{"lineNumber":113,"author":{"gitId":"andrea-twl"},"content":"     * @param input User input that are task adding commands."},{"lineNumber":114,"author":{"gitId":"andrea-twl"},"content":"     * @return Task that corresponds to the input."},{"lineNumber":115,"author":{"gitId":"andrea-twl"},"content":"     * @throws DukeIncompleteCommandException If no task has been specified."},{"lineNumber":116,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"andrea-twl"},"content":"    public static Task parseAddToDoCommand(String input) throws DukeIncompleteCommandException {"},{"lineNumber":118,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":119,"author":{"gitId":"andrea-twl"},"content":"        assert (input.contains(\" \")) : \"Space between command and task needed!\";"},{"lineNumber":120,"author":{"gitId":"andrea-twl"},"content":"        String editedInput \u003d input.substring(4).trim();"},{"lineNumber":121,"author":{"gitId":"andrea-twl"},"content":"        // Catch incomplete commands"},{"lineNumber":122,"author":{"gitId":"andrea-twl"},"content":"        if (editedInput.equals(\"\")) {"},{"lineNumber":123,"author":{"gitId":"andrea-twl"},"content":"            throw new DukeIncompleteCommandException();"},{"lineNumber":124,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"andrea-twl"},"content":"        Task task \u003d new ToDo(editedInput);"},{"lineNumber":126,"author":{"gitId":"andrea-twl"},"content":"        return task;"},{"lineNumber":127,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"andrea-twl"},"content":"     * Parses commands for adding timed tasks like events and deadlines."},{"lineNumber":130,"author":{"gitId":"andrea-twl"},"content":"     * @param input User input that are task adding commands."},{"lineNumber":131,"author":{"gitId":"andrea-twl"},"content":"     * @return Task that corresponds to the input."},{"lineNumber":132,"author":{"gitId":"andrea-twl"},"content":"     * @throws DukeIncompleteCommandException If no task has been specified."},{"lineNumber":133,"author":{"gitId":"andrea-twl"},"content":"     * @throws DateTimeParseException If date is not in the YYYY-MM-DD format."},{"lineNumber":134,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":135,"author":{"gitId":"andrea-twl"},"content":"    public static Task parseAddTimedTaskCommand(String input) throws DukeIncompleteCommandException,"},{"lineNumber":136,"author":{"gitId":"andrea-twl"},"content":"            DateTimeParseException {"},{"lineNumber":137,"author":{"gitId":"andrea-twl"},"content":"        // Get rid of command string and get date regex"},{"lineNumber":138,"author":{"gitId":"andrea-twl"},"content":"        assert (input.contains(\" \")): \"Space between command and task needed!\";"},{"lineNumber":139,"author":{"gitId":"andrea-twl"},"content":"        TimedTask timedTask \u003d new TimedTask();"},{"lineNumber":140,"author":{"gitId":"andrea-twl"},"content":"        String editedInput;"},{"lineNumber":141,"author":{"gitId":"andrea-twl"},"content":"        String regex;"},{"lineNumber":142,"author":{"gitId":"andrea-twl"},"content":"        if (input.contains(\"deadline\")) {"},{"lineNumber":143,"author":{"gitId":"andrea-twl"},"content":"            editedInput \u003d input.substring(8).trim();"},{"lineNumber":144,"author":{"gitId":"andrea-twl"},"content":"            regex \u003d \"/by\";"},{"lineNumber":145,"author":{"gitId":"andrea-twl"},"content":"            timedTask \u003d new Deadline();"},{"lineNumber":146,"author":{"gitId":"andrea-twl"},"content":"        } else {"},{"lineNumber":147,"author":{"gitId":"andrea-twl"},"content":"            editedInput \u003d input.substring(5).trim();"},{"lineNumber":148,"author":{"gitId":"andrea-twl"},"content":"            regex \u003d \"/at\";"},{"lineNumber":149,"author":{"gitId":"andrea-twl"},"content":"            timedTask \u003d new Event();"},{"lineNumber":150,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"andrea-twl"},"content":"        // Catch incomplete commands"},{"lineNumber":152,"author":{"gitId":"andrea-twl"},"content":"        if (editedInput.equals(\"\")) {"},{"lineNumber":153,"author":{"gitId":"andrea-twl"},"content":"            throw new DukeIncompleteCommandException();"},{"lineNumber":154,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"andrea-twl"},"content":"        String[] editedInputs \u003d editedInput.split(regex);"},{"lineNumber":156,"author":{"gitId":"andrea-twl"},"content":"        timedTask.task \u003d editedInputs[0].trim();"},{"lineNumber":157,"author":{"gitId":"andrea-twl"},"content":"        try {"},{"lineNumber":158,"author":{"gitId":"andrea-twl"},"content":"            timedTask.date \u003d LocalDate.parse(editedInputs[1].trim());"},{"lineNumber":159,"author":{"gitId":"andrea-twl"},"content":"            return timedTask;"},{"lineNumber":160,"author":{"gitId":"andrea-twl"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":161,"author":{"gitId":"andrea-twl"},"content":"            throw e;"},{"lineNumber":162,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":165,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":166,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":167,"author":{"gitId":"andrea-twl"},"content":"     * Parses data stored in file."},{"lineNumber":168,"author":{"gitId":"andrea-twl"},"content":"     * @param line Each line stored in data.txt."},{"lineNumber":169,"author":{"gitId":"andrea-twl"},"content":"     * @return Task that corresponds to each line in data.txt."},{"lineNumber":170,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":171,"author":{"gitId":"andrea-twl"},"content":"    static Task parseFile(String line) {"},{"lineNumber":172,"author":{"gitId":"andrea-twl"},"content":"        if (line.contains(\"TODO\")) {"},{"lineNumber":173,"author":{"gitId":"andrea-twl"},"content":"            Task task \u003d new ToDo();"},{"lineNumber":174,"author":{"gitId":"andrea-twl"},"content":"            if (line.charAt(5) \u003d\u003d \u0027X\u0027) {"},{"lineNumber":175,"author":{"gitId":"andrea-twl"},"content":"                task.isDone \u003d true;"},{"lineNumber":176,"author":{"gitId":"andrea-twl"},"content":"            } else {"},{"lineNumber":177,"author":{"gitId":"andrea-twl"},"content":"                task.isDone \u003d false;"},{"lineNumber":178,"author":{"gitId":"andrea-twl"},"content":"            }"},{"lineNumber":179,"author":{"gitId":"andrea-twl"},"content":"            task.task \u003d line.substring(7).trim();"},{"lineNumber":180,"author":{"gitId":"andrea-twl"},"content":"            return task;"},{"lineNumber":181,"author":{"gitId":"andrea-twl"},"content":"        } else {"},{"lineNumber":182,"author":{"gitId":"andrea-twl"},"content":"            TimedTask timedTask;"},{"lineNumber":183,"author":{"gitId":"andrea-twl"},"content":"            String regex;"},{"lineNumber":184,"author":{"gitId":"andrea-twl"},"content":"            if (line.contains(\"DDLN\")) {"},{"lineNumber":185,"author":{"gitId":"andrea-twl"},"content":"                timedTask \u003d new Deadline();"},{"lineNumber":186,"author":{"gitId":"andrea-twl"},"content":"                regex \u003d \"by: \";"},{"lineNumber":187,"author":{"gitId":"andrea-twl"},"content":"            } else {"},{"lineNumber":188,"author":{"gitId":"andrea-twl"},"content":"                timedTask \u003d new Event();"},{"lineNumber":189,"author":{"gitId":"andrea-twl"},"content":"                regex \u003d \"at: \";"},{"lineNumber":190,"author":{"gitId":"andrea-twl"},"content":"            }"},{"lineNumber":191,"author":{"gitId":"andrea-twl"},"content":"            if (line.charAt(5) \u003d\u003d \u0027X\u0027) {"},{"lineNumber":192,"author":{"gitId":"andrea-twl"},"content":"                timedTask.isDone \u003d true;"},{"lineNumber":193,"author":{"gitId":"andrea-twl"},"content":"            } else {"},{"lineNumber":194,"author":{"gitId":"andrea-twl"},"content":"                timedTask.isDone \u003d false;"},{"lineNumber":195,"author":{"gitId":"andrea-twl"},"content":"            }"},{"lineNumber":196,"author":{"gitId":"andrea-twl"},"content":"            String[] lines \u003d line.substring(7).trim().split(regex);"},{"lineNumber":197,"author":{"gitId":"andrea-twl"},"content":"            timedTask.task \u003d lines[0].substring(0, lines[0].length() - 2).trim();"},{"lineNumber":198,"author":{"gitId":"andrea-twl"},"content":"            String dateString \u003d lines[1].substring(0, lines[1].length() - 1);"},{"lineNumber":199,"author":{"gitId":"andrea-twl"},"content":"            timedTask.date \u003d LocalDate.parse(dateString.subSequence(0, dateString.length()));"},{"lineNumber":200,"author":{"gitId":"andrea-twl"},"content":"            return timedTask;"},{"lineNumber":201,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":202,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":203,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":204,"author":{"gitId":"andrea-twl"},"content":"}"},{"lineNumber":205,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":206,"author":{"gitId":"andrea-twl"},"content":""}],"authorContributionMap":{"andrea-twl":206}},{"path":"src/main/java/Printer.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrea-twl"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":3,"author":{"gitId":"andrea-twl"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"andrea-twl"},"content":" * Class containing methods for printing different messages"},{"lineNumber":5,"author":{"gitId":"andrea-twl"},"content":" * according to the situation."},{"lineNumber":6,"author":{"gitId":"andrea-twl"},"content":" */"},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":"public class Printer {"},{"lineNumber":8,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"andrea-twl"},"content":"     * Prints welcome message."},{"lineNumber":10,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"andrea-twl"},"content":"    static void printWelcome() {"},{"lineNumber":12,"author":{"gitId":"andrea-twl"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":13,"author":{"gitId":"andrea-twl"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":14,"author":{"gitId":"andrea-twl"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":15,"author":{"gitId":"andrea-twl"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":16,"author":{"gitId":"andrea-twl"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":17,"author":{"gitId":"andrea-twl"},"content":"        System.out.println(logo);"},{"lineNumber":18,"author":{"gitId":"andrea-twl"},"content":"        System.out.println(\"Hello! I\u0027m Duke! \\n\" +"},{"lineNumber":19,"author":{"gitId":"andrea-twl"},"content":"                \"What would you like to do today? \\n\" +"},{"lineNumber":20,"author":{"gitId":"andrea-twl"},"content":"                \"***********************************\");"},{"lineNumber":21,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":23,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"andrea-twl"},"content":"     * Prints farewell message upon exit."},{"lineNumber":25,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"andrea-twl"},"content":"    static void printBye() {"},{"lineNumber":27,"author":{"gitId":"andrea-twl"},"content":"        System.out.println(\"Bye! Stay on task!\");"},{"lineNumber":28,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":30,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"andrea-twl"},"content":"     * Prints text accompanying a \"done\" command."},{"lineNumber":32,"author":{"gitId":"andrea-twl"},"content":"     * @param task Task that has been marked as done."},{"lineNumber":33,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"andrea-twl"},"content":"    static void printDone(Task task) {"},{"lineNumber":35,"author":{"gitId":"andrea-twl"},"content":"        System.out.println(\"Good job! I\u0027ve marked this task as done:\\n    \" +"},{"lineNumber":36,"author":{"gitId":"andrea-twl"},"content":"                task + \"\\n\");"},{"lineNumber":37,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":39,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"andrea-twl"},"content":"     * Prints text accompanying a \"delete\" command."},{"lineNumber":41,"author":{"gitId":"andrea-twl"},"content":"     * @param task Task that has been deleted."},{"lineNumber":42,"author":{"gitId":"andrea-twl"},"content":"     * @param size Size of remaining taskList."},{"lineNumber":43,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"andrea-twl"},"content":"    static void printDelete(Task task, int size) {"},{"lineNumber":45,"author":{"gitId":"andrea-twl"},"content":"        System.out.println(\"Alright, I\u0027ve deleted this task:\\n    \" +"},{"lineNumber":46,"author":{"gitId":"andrea-twl"},"content":"                task);"},{"lineNumber":47,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":48,"author":{"gitId":"andrea-twl"},"content":"        System.out.println(\"Now you have \" + size +"},{"lineNumber":49,"author":{"gitId":"andrea-twl"},"content":"                \" task(s) in the list. \\n\");"},{"lineNumber":50,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":52,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"andrea-twl"},"content":"     * Prints text accompanying \"add\" command."},{"lineNumber":54,"author":{"gitId":"andrea-twl"},"content":"     * @param task Task that has been added."},{"lineNumber":55,"author":{"gitId":"andrea-twl"},"content":"     * @param size Size of new taskList."},{"lineNumber":56,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":58,"author":{"gitId":"andrea-twl"},"content":"    static void printAdd(Task task, int size) {"},{"lineNumber":59,"author":{"gitId":"andrea-twl"},"content":"        System.out.println(\"Alright! I\u0027ve added this task: \\n   \" +"},{"lineNumber":60,"author":{"gitId":"andrea-twl"},"content":"                task + \"\\nNow you have \" + size +"},{"lineNumber":61,"author":{"gitId":"andrea-twl"},"content":"                \" task(s) in the list. \\n\");"},{"lineNumber":62,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":64,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"andrea-twl"},"content":"     * Prints error message for IndexOutOfBoundsExceptions"},{"lineNumber":66,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"andrea-twl"},"content":"    static void printIndexError() {"},{"lineNumber":68,"author":{"gitId":"andrea-twl"},"content":"        System.out.println(\"Oh no! This task does not exist. D:\\n\");"},{"lineNumber":69,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":71,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"andrea-twl"},"content":"     * Prints error message when date is typed in the wrong format."},{"lineNumber":73,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"andrea-twl"},"content":"    static void printDateFormatError() {"},{"lineNumber":75,"author":{"gitId":"andrea-twl"},"content":"        System.out.println(\"Oh no! \" +"},{"lineNumber":76,"author":{"gitId":"andrea-twl"},"content":"                \" Please key in the date in the format YYYY-MM-DD.\\n\");"},{"lineNumber":77,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"andrea-twl"},"content":"    static void printFind(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":79,"author":{"gitId":"andrea-twl"},"content":"        System.out.println(\"Here are the matching tasks in your list:\\n\");"},{"lineNumber":80,"author":{"gitId":"andrea-twl"},"content":"        TaskList.displayTabbedList(tasks);"},{"lineNumber":81,"author":{"gitId":"andrea-twl"},"content":"        System.out.println(\"Found \" + tasks.size() + \" result(s).\\n\");"},{"lineNumber":82,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"andrea-twl"},"content":"}"},{"lineNumber":84,"author":{"gitId":"andrea-twl"},"content":""}],"authorContributionMap":{"andrea-twl":84}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrea-twl"},"content":"//package duke;"},{"lineNumber":2,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":3,"author":{"gitId":"andrea-twl"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"andrea-twl"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"andrea-twl"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"andrea-twl"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":9,"author":{"gitId":"andrea-twl"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"andrea-twl"},"content":" * Class with methods for saving and loading files."},{"lineNumber":11,"author":{"gitId":"andrea-twl"},"content":" */"},{"lineNumber":12,"author":{"gitId":"andrea-twl"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"andrea-twl"},"content":"    String path;"},{"lineNumber":14,"author":{"gitId":"andrea-twl"},"content":"    String directory;"},{"lineNumber":15,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":16,"author":{"gitId":"andrea-twl"},"content":"    Storage() {"},{"lineNumber":17,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":19,"author":{"gitId":"andrea-twl"},"content":"    Storage(String path, String directory) {"},{"lineNumber":20,"author":{"gitId":"andrea-twl"},"content":"        this.path \u003d path;"},{"lineNumber":21,"author":{"gitId":"andrea-twl"},"content":"        this.directory \u003d directory;"},{"lineNumber":22,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":24,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"andrea-twl"},"content":"     * Loads data from files if there is data to load."},{"lineNumber":26,"author":{"gitId":"andrea-twl"},"content":"     * @return A list of tasks according to the saved data."},{"lineNumber":27,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"andrea-twl"},"content":"    ArrayList\u003cTask\u003e loadFile() {"},{"lineNumber":29,"author":{"gitId":"andrea-twl"},"content":"        // String path \u003d \"./data/duke.txt\";"},{"lineNumber":30,"author":{"gitId":"andrea-twl"},"content":"        // String directory \u003d \"./data\";"},{"lineNumber":31,"author":{"gitId":"andrea-twl"},"content":"        File d \u003d new File(directory);"},{"lineNumber":32,"author":{"gitId":"andrea-twl"},"content":"        File f \u003d new File(path);"},{"lineNumber":33,"author":{"gitId":"andrea-twl"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":34,"author":{"gitId":"andrea-twl"},"content":"        if (!d.exists()) {"},{"lineNumber":35,"author":{"gitId":"andrea-twl"},"content":"            d.mkdirs();"},{"lineNumber":36,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"andrea-twl"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"andrea-twl"},"content":"            f.createNewFile();"},{"lineNumber":39,"author":{"gitId":"andrea-twl"},"content":"            Scanner sc \u003d new Scanner(f);"},{"lineNumber":40,"author":{"gitId":"andrea-twl"},"content":"            while (sc.hasNext()) {"},{"lineNumber":41,"author":{"gitId":"andrea-twl"},"content":"                try {"},{"lineNumber":42,"author":{"gitId":"andrea-twl"},"content":"                    String line \u003d sc.nextLine();"},{"lineNumber":43,"author":{"gitId":"andrea-twl"},"content":"                    Task task \u003d Parser.parseFile(line);"},{"lineNumber":44,"author":{"gitId":"andrea-twl"},"content":"                    list.add(task);"},{"lineNumber":45,"author":{"gitId":"andrea-twl"},"content":"                } catch (Exception e) {"},{"lineNumber":46,"author":{"gitId":"andrea-twl"},"content":"                }"},{"lineNumber":47,"author":{"gitId":"andrea-twl"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"andrea-twl"},"content":"        } catch (IOException e) {"},{"lineNumber":49,"author":{"gitId":"andrea-twl"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":50,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"andrea-twl"},"content":"        return list;"},{"lineNumber":52,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":54,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"andrea-twl"},"content":"     * Saves individual tasks to the existing data file."},{"lineNumber":56,"author":{"gitId":"andrea-twl"},"content":"     * @param input String to be stored in the file."},{"lineNumber":57,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"andrea-twl"},"content":"    void saveFile(String input) {"},{"lineNumber":59,"author":{"gitId":"andrea-twl"},"content":"        // String path \u003d \"./data/duke.txt\";"},{"lineNumber":60,"author":{"gitId":"andrea-twl"},"content":"        try {"},{"lineNumber":61,"author":{"gitId":"andrea-twl"},"content":"            FileWriter fw \u003d new FileWriter(path, true);"},{"lineNumber":62,"author":{"gitId":"andrea-twl"},"content":"            fw.write(input + System.lineSeparator());"},{"lineNumber":63,"author":{"gitId":"andrea-twl"},"content":"            fw.close();"},{"lineNumber":64,"author":{"gitId":"andrea-twl"},"content":"        } catch (IOException e) {"},{"lineNumber":65,"author":{"gitId":"andrea-twl"},"content":"            System.out.println(\"An error has occurred, unable to save.\");"},{"lineNumber":66,"author":{"gitId":"andrea-twl"},"content":"            e.getMessage();"},{"lineNumber":67,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":70,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"andrea-twl"},"content":"     * Overwrites file with new list of task if changes are made to the list."},{"lineNumber":72,"author":{"gitId":"andrea-twl"},"content":"     * @param list New list of tasks to be saved."},{"lineNumber":73,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"andrea-twl"},"content":"    void saveFile(ArrayList\u003cTask\u003e list) {"},{"lineNumber":75,"author":{"gitId":"andrea-twl"},"content":"        // String path \u003d \"./data/duke.txt\";"},{"lineNumber":76,"author":{"gitId":"andrea-twl"},"content":"        try {"},{"lineNumber":77,"author":{"gitId":"andrea-twl"},"content":"            FileWriter fw \u003d new FileWriter(path);"},{"lineNumber":78,"author":{"gitId":"andrea-twl"},"content":"            for (Task t : list) {"},{"lineNumber":79,"author":{"gitId":"andrea-twl"},"content":"                fw.write(t.toFileString() + System.lineSeparator());"},{"lineNumber":80,"author":{"gitId":"andrea-twl"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"andrea-twl"},"content":"            fw.close();"},{"lineNumber":82,"author":{"gitId":"andrea-twl"},"content":"        } catch (Exception e) {"},{"lineNumber":83,"author":{"gitId":"andrea-twl"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":84,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"andrea-twl"},"content":"}"}],"authorContributionMap":{"andrea-twl":86}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrea-twl"},"content":"//package duke;"},{"lineNumber":2,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":3,"author":{"gitId":"andrea-twl"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"andrea-twl"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"andrea-twl"},"content":"    String task;"},{"lineNumber":6,"author":{"gitId":"andrea-twl"},"content":"    boolean isDone;"},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":"    LocalDate date;"},{"lineNumber":8,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":9,"author":{"gitId":"andrea-twl"},"content":"    Task() {"},{"lineNumber":10,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":12,"author":{"gitId":"andrea-twl"},"content":"    Task(String task) {"},{"lineNumber":13,"author":{"gitId":"andrea-twl"},"content":"        this.task \u003d task.trim();"},{"lineNumber":14,"author":{"gitId":"andrea-twl"},"content":"        isDone \u003d false;"},{"lineNumber":15,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":17,"author":{"gitId":"andrea-twl"},"content":"    boolean isTimedTask() {"},{"lineNumber":18,"author":{"gitId":"andrea-twl"},"content":"        return false;"},{"lineNumber":19,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":21,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"andrea-twl"},"content":"     * Marks task as done."},{"lineNumber":23,"author":{"gitId":"andrea-twl"},"content":"     * @return Task that has been marked as done."},{"lineNumber":24,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"andrea-twl"},"content":"    public Task markDone() {"},{"lineNumber":26,"author":{"gitId":"andrea-twl"},"content":"        isDone \u003d true;"},{"lineNumber":27,"author":{"gitId":"andrea-twl"},"content":"        return this;"},{"lineNumber":28,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":30,"author":{"gitId":"andrea-twl"},"content":"    /*"},{"lineNumber":31,"author":{"gitId":"andrea-twl"},"content":"    static Task parseInput(String input) throws DukeIncompleteCommandException {"},{"lineNumber":32,"author":{"gitId":"andrea-twl"},"content":"        Task task;"},{"lineNumber":33,"author":{"gitId":"andrea-twl"},"content":"        if (input.contains(\"todo\")) {"},{"lineNumber":34,"author":{"gitId":"andrea-twl"},"content":"            task \u003d ToDo.parseInput(input);"},{"lineNumber":35,"author":{"gitId":"andrea-twl"},"content":"        } else if (input.contains(\"deadline\")) {"},{"lineNumber":36,"author":{"gitId":"andrea-twl"},"content":"            task \u003d Deadline.parseInput(input);"},{"lineNumber":37,"author":{"gitId":"andrea-twl"},"content":"        } else {"},{"lineNumber":38,"author":{"gitId":"andrea-twl"},"content":"            task \u003d Event.parseInput(input);"},{"lineNumber":39,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"andrea-twl"},"content":"        return task;"},{"lineNumber":41,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"andrea-twl"},"content":"    */"},{"lineNumber":43,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":44,"author":{"gitId":"andrea-twl"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"andrea-twl"},"content":"    public String toString() {"},{"lineNumber":46,"author":{"gitId":"andrea-twl"},"content":"        if (isDone) {"},{"lineNumber":47,"author":{"gitId":"andrea-twl"},"content":"            return \"[X] \" + task;"},{"lineNumber":48,"author":{"gitId":"andrea-twl"},"content":"        } else {"},{"lineNumber":49,"author":{"gitId":"andrea-twl"},"content":"            return \"[ ] \" + task;"},{"lineNumber":50,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":53,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"andrea-twl"},"content":"     * Creates a string for saving in the file."},{"lineNumber":55,"author":{"gitId":"andrea-twl"},"content":"     * @return String to be saved in file."},{"lineNumber":56,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"andrea-twl"},"content":"    public String toFileString() {"},{"lineNumber":58,"author":{"gitId":"andrea-twl"},"content":"        return toString();"},{"lineNumber":59,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"andrea-twl"},"content":"}"}],"authorContributionMap":{"andrea-twl":60}},{"path":"src/main/java/TaskComparator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrea-twl"},"content":"import java.util.Comparator;"},{"lineNumber":2,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":3,"author":{"gitId":"andrea-twl"},"content":"public class TaskComparator implements Comparator\u003cTask\u003e {"},{"lineNumber":4,"author":{"gitId":"andrea-twl"},"content":"    @Override"},{"lineNumber":5,"author":{"gitId":"andrea-twl"},"content":"    public int compare(Task t1, Task t2) {"},{"lineNumber":6,"author":{"gitId":"andrea-twl"},"content":"        if (t1.isTimedTask() \u0026\u0026 !t2.isTimedTask()) {"},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":"            return -1;"},{"lineNumber":8,"author":{"gitId":"andrea-twl"},"content":"        } else if (!t1.isTimedTask() \u0026\u0026 t2.isTimedTask()) {"},{"lineNumber":9,"author":{"gitId":"andrea-twl"},"content":"            return 1;"},{"lineNumber":10,"author":{"gitId":"andrea-twl"},"content":"        } else if (t1.isTimedTask() \u0026\u0026 t1.isTimedTask()) {"},{"lineNumber":11,"author":{"gitId":"andrea-twl"},"content":"            return t1.date.compareTo(t2.date);"},{"lineNumber":12,"author":{"gitId":"andrea-twl"},"content":"        } else {"},{"lineNumber":13,"author":{"gitId":"andrea-twl"},"content":"            return 0;"},{"lineNumber":14,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"andrea-twl"},"content":"}"}],"authorContributionMap":{"andrea-twl":16}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrea-twl"},"content":"//package duke;"},{"lineNumber":2,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":3,"author":{"gitId":"andrea-twl"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":5,"author":{"gitId":"andrea-twl"},"content":"public class TaskList {"},{"lineNumber":6,"author":{"gitId":"andrea-twl"},"content":"    ArrayList\u003cTask\u003e list;"},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":"    Storage storage;"},{"lineNumber":8,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":9,"author":{"gitId":"andrea-twl"},"content":"    TaskList(Storage storage) {"},{"lineNumber":10,"author":{"gitId":"andrea-twl"},"content":"        this.storage \u003d storage;"},{"lineNumber":11,"author":{"gitId":"andrea-twl"},"content":"        this.list \u003d this.storage.loadFile();"},{"lineNumber":12,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":14,"author":{"gitId":"andrea-twl"},"content":"    TaskList(ArrayList\u003cTask\u003e list, Storage storage) {"},{"lineNumber":15,"author":{"gitId":"andrea-twl"},"content":"        this.list \u003d list;"},{"lineNumber":16,"author":{"gitId":"andrea-twl"},"content":"        this.storage \u003d storage;"},{"lineNumber":17,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":19,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"andrea-twl"},"content":"     * Loads saved data into list attribute."},{"lineNumber":21,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"andrea-twl"},"content":"    void loadList() {"},{"lineNumber":23,"author":{"gitId":"andrea-twl"},"content":"        this.list \u003d this.storage.loadFile();"},{"lineNumber":24,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":26,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"andrea-twl"},"content":"     * Prints out task list."},{"lineNumber":28,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"andrea-twl"},"content":"    void displayList() {"},{"lineNumber":30,"author":{"gitId":"andrea-twl"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":31,"author":{"gitId":"andrea-twl"},"content":"            System.out.printf(\"%d. %s%n\", i + 1, list.get(i).toString());"},{"lineNumber":32,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"andrea-twl"},"content":"        System.out.println(\"\\n\");"},{"lineNumber":34,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"andrea-twl"},"content":"    static void displayTabbedList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":36,"author":{"gitId":"andrea-twl"},"content":"        for(int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":37,"author":{"gitId":"andrea-twl"},"content":"            System.out.printf(\"    %d. %s%n\",i + 1, tasks.get(i).toString());"},{"lineNumber":38,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"andrea-twl"},"content":"        System.out.println(\"\\n\");"},{"lineNumber":40,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"andrea-twl"},"content":"    public String listString() {"},{"lineNumber":42,"author":{"gitId":"andrea-twl"},"content":"        String listString \u003d \"\";"},{"lineNumber":43,"author":{"gitId":"andrea-twl"},"content":"        for(int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":44,"author":{"gitId":"andrea-twl"},"content":"            listString +\u003d String.format(\"%d. %s%n\",i + 1, list.get(i).toString());"},{"lineNumber":45,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"andrea-twl"},"content":"        return listString;"},{"lineNumber":47,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"andrea-twl"},"content":"    static String tabbedListString(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":49,"author":{"gitId":"andrea-twl"},"content":"        String tabbedList \u003d \"\";"},{"lineNumber":50,"author":{"gitId":"andrea-twl"},"content":"        for(int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":51,"author":{"gitId":"andrea-twl"},"content":"            tabbedList +\u003d String.format(\"    %d. %s%n\",i + 1, tasks.get(i).toString());"},{"lineNumber":52,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"andrea-twl"},"content":"        return tabbedList;"},{"lineNumber":54,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"andrea-twl"},"content":"     * Marks the task specified as done."},{"lineNumber":57,"author":{"gitId":"andrea-twl"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"andrea-twl"},"content":"     * @param index Index of task to mark."},{"lineNumber":59,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"andrea-twl"},"content":"    String markDone(int index) {"},{"lineNumber":61,"author":{"gitId":"andrea-twl"},"content":"        try {"},{"lineNumber":62,"author":{"gitId":"andrea-twl"},"content":"            Task task \u003d list.get(index);"},{"lineNumber":63,"author":{"gitId":"andrea-twl"},"content":"            task.markDone();"},{"lineNumber":64,"author":{"gitId":"andrea-twl"},"content":"            storage.saveFile(list);"},{"lineNumber":65,"author":{"gitId":"andrea-twl"},"content":"            return Ui.doneString(task);"},{"lineNumber":66,"author":{"gitId":"andrea-twl"},"content":"            // Ui.printDone(task);"},{"lineNumber":67,"author":{"gitId":"andrea-twl"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":68,"author":{"gitId":"andrea-twl"},"content":"            return Ui.indexErrorString();"},{"lineNumber":69,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":72,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"andrea-twl"},"content":"     * Deletes the task specified."},{"lineNumber":74,"author":{"gitId":"andrea-twl"},"content":"     * @param index Index of task to delete."},{"lineNumber":75,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"andrea-twl"},"content":"    String delete(int index) {"},{"lineNumber":77,"author":{"gitId":"andrea-twl"},"content":"        try {"},{"lineNumber":78,"author":{"gitId":"andrea-twl"},"content":"            Task task \u003d list.get(index);"},{"lineNumber":79,"author":{"gitId":"andrea-twl"},"content":"            list.remove(index);"},{"lineNumber":80,"author":{"gitId":"andrea-twl"},"content":"            storage.saveFile(list);"},{"lineNumber":81,"author":{"gitId":"andrea-twl"},"content":"            return Ui.deleteString(task, list.size());"},{"lineNumber":82,"author":{"gitId":"andrea-twl"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":83,"author":{"gitId":"andrea-twl"},"content":"            return Ui.indexErrorString();"},{"lineNumber":84,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":86,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":88,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"andrea-twl"},"content":"     * Adds the task specified to the list."},{"lineNumber":90,"author":{"gitId":"andrea-twl"},"content":"     * @param task Task to be added to list."},{"lineNumber":91,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"andrea-twl"},"content":"    String add(Task task) {"},{"lineNumber":93,"author":{"gitId":"andrea-twl"},"content":"        list.add(task);"},{"lineNumber":94,"author":{"gitId":"andrea-twl"},"content":"        storage.saveFile(task.toFileString());"},{"lineNumber":95,"author":{"gitId":"andrea-twl"},"content":"        return Ui.addString(task, list.size());"},{"lineNumber":96,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":98,"author":{"gitId":"andrea-twl"},"content":"    String find(String keyword) {"},{"lineNumber":99,"author":{"gitId":"andrea-twl"},"content":"        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":100,"author":{"gitId":"andrea-twl"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":101,"author":{"gitId":"andrea-twl"},"content":"            String taskString \u003d list.get(i).toString();"},{"lineNumber":102,"author":{"gitId":"andrea-twl"},"content":"            if (taskString.contains(keyword)) {"},{"lineNumber":103,"author":{"gitId":"andrea-twl"},"content":"                newList.add(list.get(i));"},{"lineNumber":104,"author":{"gitId":"andrea-twl"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"andrea-twl"},"content":"        return Ui.findString(newList);"},{"lineNumber":107,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":109,"author":{"gitId":"andrea-twl"},"content":"    String sortByDate() {"},{"lineNumber":110,"author":{"gitId":"andrea-twl"},"content":"        ArrayList\u003cTask\u003e sortedList \u003d new ArrayList\u003c\u003e(list);"},{"lineNumber":111,"author":{"gitId":"andrea-twl"},"content":"        sortedList.sort(new TaskComparator());"},{"lineNumber":112,"author":{"gitId":"andrea-twl"},"content":"        return Ui.sortString(sortedList);"},{"lineNumber":113,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":115,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":116,"author":{"gitId":"andrea-twl"},"content":"}"}],"authorContributionMap":{"andrea-twl":116}},{"path":"src/main/java/TimedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrea-twl"},"content":"//package duke;"},{"lineNumber":2,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":3,"author":{"gitId":"andrea-twl"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":5,"author":{"gitId":"andrea-twl"},"content":"public class TimedTask extends Task {"},{"lineNumber":6,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":"    TimedTask() {"},{"lineNumber":8,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":10,"author":{"gitId":"andrea-twl"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"andrea-twl"},"content":"    boolean isTimedTask() {"},{"lineNumber":12,"author":{"gitId":"andrea-twl"},"content":"        return true;"},{"lineNumber":13,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"andrea-twl"},"content":"    /*"},{"lineNumber":15,"author":{"gitId":"andrea-twl"},"content":"    static \u003cT\u003e T fileReader(String line, String regex) {"},{"lineNumber":16,"author":{"gitId":"andrea-twl"},"content":"        TimedTask\u003cT\u003e t \u003d new T\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"andrea-twl"},"content":"        if (line.charAt(5) \u003d\u003d \u0027X\u0027) {"},{"lineNumber":18,"author":{"gitId":"andrea-twl"},"content":"            t.isDone \u003d true;"},{"lineNumber":19,"author":{"gitId":"andrea-twl"},"content":"        } else {"},{"lineNumber":20,"author":{"gitId":"andrea-twl"},"content":"            t.isDone \u003d false;"},{"lineNumber":21,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"andrea-twl"},"content":"        String[] lines \u003d line.substring(7).trim().split(regex);"},{"lineNumber":23,"author":{"gitId":"andrea-twl"},"content":"        t.task \u003d lines[0].substring(0, lines[0].length() - 2).trim();"},{"lineNumber":24,"author":{"gitId":"andrea-twl"},"content":"        t.date \u003d lines[1].substring(0, lines[1].length() - 1);"},{"lineNumber":25,"author":{"gitId":"andrea-twl"},"content":"        return t;"},{"lineNumber":26,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"andrea-twl"},"content":"    */"},{"lineNumber":28,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":29,"author":{"gitId":"andrea-twl"},"content":"}"}],"authorContributionMap":{"andrea-twl":29}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrea-twl"},"content":"//package duke;"},{"lineNumber":2,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":3,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":4,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":5,"author":{"gitId":"andrea-twl"},"content":"public class ToDo extends Task {"},{"lineNumber":6,"author":{"gitId":"andrea-twl"},"content":"    ToDo() {"},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":9,"author":{"gitId":"andrea-twl"},"content":"    public ToDo(String task) {"},{"lineNumber":10,"author":{"gitId":"andrea-twl"},"content":"        super(task);"},{"lineNumber":11,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":13,"author":{"gitId":"andrea-twl"},"content":"    /*"},{"lineNumber":14,"author":{"gitId":"andrea-twl"},"content":"    static ToDo parseInput(String input) throws DukeIncompleteCommandException {"},{"lineNumber":15,"author":{"gitId":"andrea-twl"},"content":"        ToDo todo \u003d new ToDo();"},{"lineNumber":16,"author":{"gitId":"andrea-twl"},"content":"        input \u003d input.substring(4).trim();"},{"lineNumber":17,"author":{"gitId":"andrea-twl"},"content":"        if (input.equals(\"\")) {"},{"lineNumber":18,"author":{"gitId":"andrea-twl"},"content":"            throw new DukeIncompleteCommandException();"},{"lineNumber":19,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"andrea-twl"},"content":"        todo.task \u003d input.trim();"},{"lineNumber":21,"author":{"gitId":"andrea-twl"},"content":"        todo.isDone \u003d false;"},{"lineNumber":22,"author":{"gitId":"andrea-twl"},"content":"        return todo;"},{"lineNumber":23,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":25,"author":{"gitId":"andrea-twl"},"content":"    static ToDo fileReader(String line) {"},{"lineNumber":26,"author":{"gitId":"andrea-twl"},"content":"        ToDo todo \u003d new ToDo();"},{"lineNumber":27,"author":{"gitId":"andrea-twl"},"content":"        if (line.charAt(5) \u003d\u003d \u0027X\u0027) {"},{"lineNumber":28,"author":{"gitId":"andrea-twl"},"content":"            todo.isDone \u003d true;"},{"lineNumber":29,"author":{"gitId":"andrea-twl"},"content":"        } else {"},{"lineNumber":30,"author":{"gitId":"andrea-twl"},"content":"            todo.isDone \u003d false;"},{"lineNumber":31,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"andrea-twl"},"content":"        todo.task \u003d line.substring(7).trim();"},{"lineNumber":33,"author":{"gitId":"andrea-twl"},"content":"        return todo;"},{"lineNumber":34,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"andrea-twl"},"content":"    */"},{"lineNumber":36,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":37,"author":{"gitId":"andrea-twl"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"andrea-twl"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"andrea-twl"},"content":"        return \"TODO\" + super.toString();"},{"lineNumber":40,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"andrea-twl"},"content":"}"}],"authorContributionMap":{"andrea-twl":41}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrea-twl"},"content":"//package duke;"},{"lineNumber":2,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":3,"author":{"gitId":"andrea-twl"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":5,"author":{"gitId":"andrea-twl"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"andrea-twl"},"content":" * Class containing methods for printing different messages"},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":" * according to the situation."},{"lineNumber":8,"author":{"gitId":"andrea-twl"},"content":" */"},{"lineNumber":9,"author":{"gitId":"andrea-twl"},"content":"public class Ui {"},{"lineNumber":10,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"andrea-twl"},"content":"     * Prints welcome message."},{"lineNumber":12,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"andrea-twl"},"content":"    static void printWelcome() {"},{"lineNumber":14,"author":{"gitId":"andrea-twl"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":15,"author":{"gitId":"andrea-twl"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":16,"author":{"gitId":"andrea-twl"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":17,"author":{"gitId":"andrea-twl"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":18,"author":{"gitId":"andrea-twl"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":19,"author":{"gitId":"andrea-twl"},"content":"        System.out.println(logo);"},{"lineNumber":20,"author":{"gitId":"andrea-twl"},"content":"        System.out.println(\"Hello! I\u0027m Blue! \\n\""},{"lineNumber":21,"author":{"gitId":"andrea-twl"},"content":"                + \"What would you like to do today? \\n\""},{"lineNumber":22,"author":{"gitId":"andrea-twl"},"content":"                + \"***********************************\");"},{"lineNumber":23,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"andrea-twl"},"content":"    static String welcomeString() {"},{"lineNumber":25,"author":{"gitId":"andrea-twl"},"content":"        return \"Hello! I\u0027m Blue! \\n\""},{"lineNumber":26,"author":{"gitId":"andrea-twl"},"content":"                + \"What would you like to do today? \\n\""},{"lineNumber":27,"author":{"gitId":"andrea-twl"},"content":"                + \"Type \u0027help\u0027 to view the list of commands.\";"},{"lineNumber":28,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":30,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"andrea-twl"},"content":"     * Returns farewell message upon exit."},{"lineNumber":32,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"andrea-twl"},"content":"    static String byeString() {"},{"lineNumber":34,"author":{"gitId":"andrea-twl"},"content":"        return (\"Bye! Stay on task!\");"},{"lineNumber":35,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":37,"author":{"gitId":"andrea-twl"},"content":"    static String helpString() {"},{"lineNumber":38,"author":{"gitId":"andrea-twl"},"content":"        return  \"List of commands: \\n\\n\""},{"lineNumber":39,"author":{"gitId":"andrea-twl"},"content":"                + \"Viewing help : help\\n\""},{"lineNumber":40,"author":{"gitId":"andrea-twl"},"content":"                + \"Adding a to do task : todo {TASK_NAME}\\n\""},{"lineNumber":41,"author":{"gitId":"andrea-twl"},"content":"                + \"Adding a deadline : deadline {DEADLINE_NAME} /by {YYYY-MM-DD}\u0027\\n\""},{"lineNumber":42,"author":{"gitId":"andrea-twl"},"content":"                + \"Adding a event : event {EVENT_NAME} /at {YYYY-MM-DD}\u0027\\n\""},{"lineNumber":43,"author":{"gitId":"andrea-twl"},"content":"                + \"Listing all tasks : list\\n\""},{"lineNumber":44,"author":{"gitId":"andrea-twl"},"content":"                + \"Completing a task : done {INDEX}\\n\""},{"lineNumber":45,"author":{"gitId":"andrea-twl"},"content":"                + \"Deleting a task : delete {INDEX}\\n\""},{"lineNumber":46,"author":{"gitId":"andrea-twl"},"content":"                + \"Sorting task list : sort\\n\""},{"lineNumber":47,"author":{"gitId":"andrea-twl"},"content":"                + \"Locating a task : find {KEYWORD}\\n\""},{"lineNumber":48,"author":{"gitId":"andrea-twl"},"content":"                + \"Exiting the program : bye\\n\\n\""},{"lineNumber":49,"author":{"gitId":"andrea-twl"},"content":"                + \"Visit the user guide (https://andrea-twl.github.io/ip/) for more details.\\n\";"},{"lineNumber":50,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"andrea-twl"},"content":"     * Returns String accompanying a \"done\" command."},{"lineNumber":53,"author":{"gitId":"andrea-twl"},"content":"     * @param task Task that has been marked as done."},{"lineNumber":54,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"andrea-twl"},"content":"    static String doneString(Task task) {"},{"lineNumber":56,"author":{"gitId":"andrea-twl"},"content":"        return (\"Good job! I\u0027ve marked this task as done:\\n    \" + task + \"\\n\");"},{"lineNumber":57,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":59,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"andrea-twl"},"content":"     * Prints text accompanying a \"delete\" command."},{"lineNumber":61,"author":{"gitId":"andrea-twl"},"content":"     * @param task Task that has been deleted."},{"lineNumber":62,"author":{"gitId":"andrea-twl"},"content":"     * @param size Size of remaining taskList."},{"lineNumber":63,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"andrea-twl"},"content":"    static String deleteString(Task task, int size) {"},{"lineNumber":65,"author":{"gitId":"andrea-twl"},"content":"        return (\"Alright, I\u0027ve deleted this task:\\n    \""},{"lineNumber":66,"author":{"gitId":"andrea-twl"},"content":"                + task"},{"lineNumber":67,"author":{"gitId":"andrea-twl"},"content":"                + \"\\nNow you have \"  + size + \" task(s) in the list.\\n\");"},{"lineNumber":68,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":70,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"andrea-twl"},"content":"     * Prints text accompanying \"add\" command."},{"lineNumber":72,"author":{"gitId":"andrea-twl"},"content":"     * @param task Task that has been added."},{"lineNumber":73,"author":{"gitId":"andrea-twl"},"content":"     * @param size Size of new taskList."},{"lineNumber":74,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"andrea-twl"},"content":"    static String addString(Task task, int size) {"},{"lineNumber":76,"author":{"gitId":"andrea-twl"},"content":"        return (\"Alright! I\u0027ve added this task: \\n   \""},{"lineNumber":77,"author":{"gitId":"andrea-twl"},"content":"                + task"},{"lineNumber":78,"author":{"gitId":"andrea-twl"},"content":"                + \"\\nNow you have \" + size + \" task(s) in the list. \\n\");"},{"lineNumber":79,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":81,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"andrea-twl"},"content":"     * Prints error message for IndexOutOfBoundsExceptions"},{"lineNumber":83,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"andrea-twl"},"content":"    static String indexErrorString() {"},{"lineNumber":85,"author":{"gitId":"andrea-twl"},"content":"        return (\"Oh no! This task does not exist. D:\\n\");"},{"lineNumber":86,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":88,"author":{"gitId":"andrea-twl"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"andrea-twl"},"content":"     * Prints error message when date is typed in the wrong format."},{"lineNumber":90,"author":{"gitId":"andrea-twl"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"andrea-twl"},"content":"    static String dateFormatErrorString() {"},{"lineNumber":92,"author":{"gitId":"andrea-twl"},"content":"        return (\"Oh no! Please key in the date in the format YYYY-MM-DD.\\n\");"},{"lineNumber":93,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"andrea-twl"},"content":"    static String findString(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":95,"author":{"gitId":"andrea-twl"},"content":"        return \"Here are the matching tasks in your list:\\n\""},{"lineNumber":96,"author":{"gitId":"andrea-twl"},"content":"                + TaskList.tabbedListString(tasks) +"},{"lineNumber":97,"author":{"gitId":"andrea-twl"},"content":"                \"Found \" + tasks.size() + \" result(s).\\n\";"},{"lineNumber":98,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"andrea-twl"},"content":"    static String sortString(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":100,"author":{"gitId":"andrea-twl"},"content":"        return \"I\u0027ve sorted your list by date:\\n\" + TaskList.tabbedListString(tasks);"},{"lineNumber":101,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"andrea-twl"},"content":"}"}],"authorContributionMap":{"andrea-twl":102}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"andrea-twl"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":3,"author":{"gitId":"andrea-twl"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"andrea-twl"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"andrea-twl"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"andrea-twl"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":8,"author":{"gitId":"andrea-twl"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"andrea-twl"},"content":"  \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"andrea-twl"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"andrea-twl"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"andrea-twl"},"content":"  \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"andrea-twl"},"content":"  \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"andrea-twl"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"andrea-twl"},"content":"  \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"andrea-twl"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"andrea-twl":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"andrea-twl"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":3,"author":{"gitId":"andrea-twl"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"andrea-twl"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"andrea-twl"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"andrea-twl"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":9,"author":{"gitId":"andrea-twl"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"andrea-twl"},"content":"  \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"andrea-twl"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"andrea-twl"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"andrea-twl"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"andrea-twl"},"content":"      \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"andrea-twl"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"andrea-twl"},"content":"      \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"andrea-twl"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"andrea-twl"},"content":"  \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"andrea-twl"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"andrea-twl":19}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrea-twl"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"andrea-twl"},"content":"import org.testng.annotations.Test;"},{"lineNumber":3,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":4,"author":{"gitId":"andrea-twl"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":5,"author":{"gitId":"andrea-twl"},"content":"import java.io.PrintStream;"},{"lineNumber":6,"author":{"gitId":"andrea-twl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":8,"author":{"gitId":"andrea-twl"},"content":"public class DukeTest {"},{"lineNumber":9,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":10,"author":{"gitId":"andrea-twl"},"content":" */"},{"lineNumber":11,"author":{"gitId":"andrea-twl"},"content":"    /*"},{"lineNumber":12,"author":{"gitId":"andrea-twl"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"},{"lineNumber":13,"author":{"gitId":"andrea-twl"},"content":"    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();"},{"lineNumber":14,"author":{"gitId":"andrea-twl"},"content":"    private final PrintStream originalOut \u003d System.out;"},{"lineNumber":15,"author":{"gitId":"andrea-twl"},"content":"    private final PrintStream originalErr \u003d System.err;"},{"lineNumber":16,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":17,"author":{"gitId":"andrea-twl"},"content":"    @Before"},{"lineNumber":18,"author":{"gitId":"andrea-twl"},"content":"    public void setUpStreams() {"},{"lineNumber":19,"author":{"gitId":"andrea-twl"},"content":"        System.setOut(new PrintStream(outContent));"},{"lineNumber":20,"author":{"gitId":"andrea-twl"},"content":"        System.setErr(new PrintStream(errContent));"},{"lineNumber":21,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":23,"author":{"gitId":"andrea-twl"},"content":"    @After"},{"lineNumber":24,"author":{"gitId":"andrea-twl"},"content":"    public void restoreStreams() {"},{"lineNumber":25,"author":{"gitId":"andrea-twl"},"content":"        System.setOut(originalOut);"},{"lineNumber":26,"author":{"gitId":"andrea-twl"},"content":"        System.setErr(originalErr);"},{"lineNumber":27,"author":{"gitId":"andrea-twl"},"content":"    } */"},{"lineNumber":28,"author":{"gitId":"andrea-twl"},"content":"//}"}],"authorContributionMap":{"andrea-twl":28}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrea-twl"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"andrea-twl"},"content":"import duke.Task;"},{"lineNumber":3,"author":{"gitId":"andrea-twl"},"content":"import duke.Parser;"},{"lineNumber":4,"author":{"gitId":"andrea-twl"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":6,"author":{"gitId":"andrea-twl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":8,"author":{"gitId":"andrea-twl"},"content":"public class ParserTest {"},{"lineNumber":9,"author":{"gitId":"andrea-twl"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"andrea-twl"},"content":"    public void parseAddTaskCommand_correctInput_success() {"},{"lineNumber":11,"author":{"gitId":"andrea-twl"},"content":"        try {"},{"lineNumber":12,"author":{"gitId":"andrea-twl"},"content":"            Task todo \u003d Parser.parseAddTaskCommand(\"todo junit test\");"},{"lineNumber":13,"author":{"gitId":"andrea-twl"},"content":"            assertEquals(todo.toString(), \"TODO[ ] junit test\");"},{"lineNumber":14,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":15,"author":{"gitId":"andrea-twl"},"content":"            Task event \u003d Parser.parseAddTaskCommand(\"event junit test /at 2021-02-14\");"},{"lineNumber":16,"author":{"gitId":"andrea-twl"},"content":"            assertEquals(event.toFileString(), \"EVNT[ ] junit test (at: 2021-02-14)\");"},{"lineNumber":17,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":18,"author":{"gitId":"andrea-twl"},"content":"            Task deadline \u003d Parser.parseAddTaskCommand(\"deadline junit test /by 2021-02-14\");"},{"lineNumber":19,"author":{"gitId":"andrea-twl"},"content":"            assertEquals(deadline.toFileString(), \"DDLN[ ] junit test (by: 2021-02-14)\");"},{"lineNumber":20,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":21,"author":{"gitId":"andrea-twl"},"content":"        } catch (Exception e) {"},{"lineNumber":22,"author":{"gitId":"andrea-twl"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":23,"author":{"gitId":"andrea-twl"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"andrea-twl"},"content":"}"},{"lineNumber":26,"author":{"gitId":"andrea-twl"},"content":"*/"}],"authorContributionMap":{"andrea-twl":26}},{"path":"src/test/java/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"andrea-twl"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"andrea-twl"},"content":"import duke.ToDo;"},{"lineNumber":3,"author":{"gitId":"andrea-twl"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":5,"author":{"gitId":"andrea-twl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"andrea-twl"},"content":""},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":"public class ToDoTest {"},{"lineNumber":8,"author":{"gitId":"andrea-twl"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"andrea-twl"},"content":"    public void toFileString_void_success() {"},{"lineNumber":10,"author":{"gitId":"andrea-twl"},"content":"        ToDo todo \u003d new ToDo(\"junit test\");"},{"lineNumber":11,"author":{"gitId":"andrea-twl"},"content":"        assertEquals(todo.toFileString(),"},{"lineNumber":12,"author":{"gitId":"andrea-twl"},"content":"                \"TODO[ ] junit test\");"},{"lineNumber":13,"author":{"gitId":"andrea-twl"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"andrea-twl"},"content":"}"},{"lineNumber":15,"author":{"gitId":"andrea-twl"},"content":"*/"}],"authorContributionMap":{"andrea-twl":15}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"andrea-twl"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"andrea-twl"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"-":19,"andrea-twl":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"andrea-twl"},"content":"if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"-":37,"andrea-twl":1}}]
