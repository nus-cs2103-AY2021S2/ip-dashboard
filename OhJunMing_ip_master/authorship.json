[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"# duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"1. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"OhJunMing":2,"-":21}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"},{"lineNumber":63,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":64,"author":{"gitId":"OhJunMing"},"content":"run {"},{"lineNumber":65,"author":{"gitId":"OhJunMing"},"content":"    enableAssertions \u003d true"},{"lineNumber":66,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":21,"-":45}},{"path":"data/Baron.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"T|DONE|read book"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":"T|DONE|join sports club"},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"T|DONE|borrow book"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"E|DONE|project debrief |03-04-2021 22:11"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"T|PENDING|read book"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"D|PENDING|return book |06-08-2021 12:00"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"E|PENDING|project meeting |01-04-2021 23:59"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"T|PENDING|join sports club"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"T|PENDING|borrow book"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"E|PENDING|project debrief |03-04-2021 22:11"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"T|DONE|eat sushi"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"T|PENDING|read book"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"D|DONE|burn book |01-02-2023 22:34"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"T|PENDING|fish book"}],"authorContributionMap":{"OhJunMing":14}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"import duke.exception.EmptyDescription;"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"import duke.exception.InvalidTypeOfTask;"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"import duke.storage.Storage;"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"import duke.task.TaskList;"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"import duke.ui.Ui;"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":" * Duke program maintains a taskList for user to track tasks."},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":" * Reads user input tasks(todo, event, deadline)."},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":" * Able to perform add, delete, markasDone tasks."},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"    private Storage storage;"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"    private Ui ui;"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"    private TaskList taskList;"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"     * Initialise Duke chatbot."},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"    public Duke() {"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"        ui \u003d new Ui();"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"        storage \u003d new Storage();"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"            taskList \u003d storage.load();"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"        } catch (IOException e) {"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"            System.out.println(\"file not found\");"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"     * Start Duke chat services."},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":"    public void execute() {"},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":"        ui.greet();"},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":"        Boolean shouldExit \u003d false;"},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":"        Scanner s \u003d new Scanner(System.in);"},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"        while (!shouldExit \u0026\u0026 s.hasNextLine()) {"},{"lineNumber":45,"author":{"gitId":"OhJunMing"},"content":"            try {"},{"lineNumber":46,"author":{"gitId":"OhJunMing"},"content":"                taskList \u003d storage.load();"},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"                taskList \u003d ui.readCommand(taskList, s);"},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"                shouldExit \u003d ui.getExit();"},{"lineNumber":49,"author":{"gitId":"OhJunMing"},"content":"                storage.save(taskList.getTasks());"},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"            } catch (EmptyDescription e) {"},{"lineNumber":51,"author":{"gitId":"OhJunMing"},"content":"                ui.enclose(e.toString());"},{"lineNumber":52,"author":{"gitId":"OhJunMing"},"content":"            } catch (InvalidTypeOfTask e) {"},{"lineNumber":53,"author":{"gitId":"OhJunMing"},"content":"                ui.enclose(e.toString());"},{"lineNumber":54,"author":{"gitId":"OhJunMing"},"content":"            } catch (IOException e) {"},{"lineNumber":55,"author":{"gitId":"OhJunMing"},"content":"                System.out.println(\"exception\");"},{"lineNumber":56,"author":{"gitId":"OhJunMing"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"OhJunMing"},"content":"        ui.exit();"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":61,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"OhJunMing"},"content":"     * Initialise scanner."},{"lineNumber":63,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"OhJunMing"},"content":"     * @param args"},{"lineNumber":65,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"OhJunMing"},"content":"    public static void main(String[] args) {"},{"lineNumber":67,"author":{"gitId":"OhJunMing"},"content":"        Duke duke \u003d new Duke();"},{"lineNumber":68,"author":{"gitId":"OhJunMing"},"content":"        duke.execute();"},{"lineNumber":69,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":71,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"OhJunMing"},"content":"     * You should have your own function to generate a response to user input."},{"lineNumber":73,"author":{"gitId":"OhJunMing"},"content":"     * Replace this stub with your completed method."},{"lineNumber":74,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"OhJunMing"},"content":"    public String getResponse(String input) {"},{"lineNumber":76,"author":{"gitId":"OhJunMing"},"content":"        return \"Duke heard: \" + input;"},{"lineNumber":77,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"OhJunMing":75,"-":3}},{"path":"src/main/java/Duke/common/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.common;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":" * Stores all generic string responses back to user."},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":" *"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":" * @author Oh Jun Ming"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":" * @version 1.0"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"public enum Response {"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"    GREET(\"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\"),"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"    EXIT(\"Bye. Hope to see you again soon!\\n\"),"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"    ADD(\"Got it. I \u0027ve added this task:\\n\"),"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"    DELETE(\"Noted. I\u0027ve removed this task:\\n\"),"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"    DONE(\"Nice! I \u0027ve marked this task as done\\n\"),"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"    LIST(\"Here are the tasks in your list:\\n\");"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"    private final String s;"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"    /** Returns a Response message."},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"     * @param s generic message."},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"     * @return Response"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"    Response(String s) {"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"        this.s \u003d s;"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"     * Returns a String that contain generic response."},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"        return s;"},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":37}},{"path":"src/main/java/Duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":" * Represent exceptions arising from the Duke program."},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":" *"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":" * @author Oh Jun Ming"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":" * @version 1.0"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"public class DukeException extends Exception{"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":10}},{"path":"src/main/java/Duke/exception/EmptyDescription.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":" * Represent a empty task description parsed from user input."},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":" *"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":" * @author Oh Jun Ming"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":" * @version 1.0"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"public class EmptyDescription extends DukeException {"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"    private String typeOfTask;"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"     * Returns EmptyDescription."},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"     * @param typeOfTask"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"     * @return EmptyDescription"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"    public EmptyDescription(String typeOfTask) {"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"        this.typeOfTask \u003d typeOfTask;"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"     * Returns String that produces error exception message to user."},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"        return \"OOPS!!! The description of a \" + this.typeOfTask + \" cannot be empty.\\n\";"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":31}},{"path":"src/main/java/Duke/exception/InvalidTypeOfTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":" * Represent a invalid TypeOfTask parsed from user input."},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":" *"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":" * @author Oh Jun Ming"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":" * @version 1.0"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"public class InvalidTypeOfTask extends DukeException {"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"     * Returns String that produces error exception message to user."},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(\\n\";"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":19}},{"path":"src/main/java/Duke/parser/ListParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":" * Parses hard disk String input."},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":" *"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":" * @author Oh Jun Ming"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":" * @version 1.0"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"public class ListParser {"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"    private String typeOfTask;"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"    private Boolean isDone;"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"    private String description;"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"    private LocalDateTime time;"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"     * Return ListParser."},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"    public ListParser() {"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"        this.typeOfTask \u003d \"\";"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"        this.isDone \u003d null;"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"        this.description \u003d \"\";"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"        this.time \u003d null;"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"     * Return ListParser."},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"     * @param typeOfTask typeOfTask todo, event, deadline"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"     * @param isDone Boolean of task completion status"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"     * @param description"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"     * @param time"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"    ListParser(String typeOfTask, Boolean isDone, String description, LocalDateTime time) {"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"        this.typeOfTask \u003d typeOfTask;"},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":"        this.description \u003d description;"},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":"        this.time \u003d time;"},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"     * Parses the String in Hard Disk line by line."},{"lineNumber":45,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"OhJunMing"},"content":"     * @param input"},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"     * @return ListParser"},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"OhJunMing"},"content":"    public ListParser parse(String input) {"},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"        String[] inputSplit \u003d input.split(\"\\\\|\");"},{"lineNumber":51,"author":{"gitId":"OhJunMing"},"content":"        typeOfTask \u003d inputSplit[0];"},{"lineNumber":52,"author":{"gitId":"OhJunMing"},"content":"        String status \u003d inputSplit[1];"},{"lineNumber":53,"author":{"gitId":"OhJunMing"},"content":"        Boolean isDone;"},{"lineNumber":54,"author":{"gitId":"OhJunMing"},"content":"        description \u003d inputSplit[2];"},{"lineNumber":55,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":56,"author":{"gitId":"OhJunMing"},"content":"        if (status.equals(\"DONE\")) {"},{"lineNumber":57,"author":{"gitId":"OhJunMing"},"content":"            isDone \u003d true;"},{"lineNumber":58,"author":{"gitId":"OhJunMing"},"content":"        } else { //status \"PENDING\""},{"lineNumber":59,"author":{"gitId":"OhJunMing"},"content":"            isDone \u003d false;"},{"lineNumber":60,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":62,"author":{"gitId":"OhJunMing"},"content":"        if (inputSplit.length \u003d\u003d 4) {"},{"lineNumber":63,"author":{"gitId":"OhJunMing"},"content":"            TimeParser timeParser \u003d new TimeParser();"},{"lineNumber":64,"author":{"gitId":"OhJunMing"},"content":"            time \u003d timeParser.parse(inputSplit[3]);"},{"lineNumber":65,"author":{"gitId":"OhJunMing"},"content":"        } else {"},{"lineNumber":66,"author":{"gitId":"OhJunMing"},"content":"            time \u003d null;"},{"lineNumber":67,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"OhJunMing"},"content":"        // T|DONE|MSG|TIME"},{"lineNumber":69,"author":{"gitId":"OhJunMing"},"content":"        return new ListParser(typeOfTask, isDone, description, time);"},{"lineNumber":70,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":72,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"OhJunMing"},"content":"     * Returns typeOfTask attribute."},{"lineNumber":74,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"OhJunMing"},"content":"     * @return typeOfTask"},{"lineNumber":76,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"OhJunMing"},"content":"    public String getTypeOfTask() {"},{"lineNumber":78,"author":{"gitId":"OhJunMing"},"content":"        return typeOfTask;"},{"lineNumber":79,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":81,"author":{"gitId":"OhJunMing"},"content":"    public Boolean getIsDone() {"},{"lineNumber":82,"author":{"gitId":"OhJunMing"},"content":"        return isDone;"},{"lineNumber":83,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":85,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"OhJunMing"},"content":"     * Returns description attribute."},{"lineNumber":87,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"OhJunMing"},"content":"     * @return description"},{"lineNumber":89,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"OhJunMing"},"content":"    public String getDescription() {"},{"lineNumber":91,"author":{"gitId":"OhJunMing"},"content":"        return description;"},{"lineNumber":92,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":94,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"OhJunMing"},"content":"     * Returns time attribute."},{"lineNumber":96,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"OhJunMing"},"content":"     * @return time"},{"lineNumber":98,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"OhJunMing"},"content":"    public LocalDateTime getTime() {"},{"lineNumber":100,"author":{"gitId":"OhJunMing"},"content":"        return time;"},{"lineNumber":101,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":103,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":104,"author":{"gitId":"OhJunMing"},"content":"    public String toString() {"},{"lineNumber":105,"author":{"gitId":"OhJunMing"},"content":"        return \"|\" + typeOfTask + \"|\" + isDone + \"|\" + description + \"|\" + time + \"|\";"},{"lineNumber":106,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":107}},{"path":"src/main/java/Duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":" * Parses user input into typeOfTask, description, time."},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":" *"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":" * @author Oh Jun Ming"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":" * @version 1.0"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"public class Parser {"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"    private String typeOfTask;"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"    private String description;"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"    private LocalDateTime time;"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"     * Returns Parser."},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"     * @return Parser"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"    public Parser() {"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"        this.typeOfTask \u003d \"\";"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"        this.description \u003d \"\";"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"        this.time \u003d null;"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"     * Returns Parser."},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"     * @param typeOfTask Type of task : Todo, Deadline, Event."},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"     * @param description Task description."},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"     * @param time time of task."},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"     * @return Parser"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"    Parser(String typeOfTask, String description, LocalDateTime time) {"},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"        this.typeOfTask \u003d typeOfTask;"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"        this.description \u003d description;"},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":"        this.time \u003d time;"},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"     * Returns a Parser that represent the parsed user input."},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"     * Parses user input into typeOfTask, description, time."},{"lineNumber":45,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"OhJunMing"},"content":"     * @param input user input."},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"     * @return Parser"},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"OhJunMing"},"content":"    public Parser parse(String input) {"},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"        String[] inputSplit \u003d input.split(\" \", 2);"},{"lineNumber":51,"author":{"gitId":"OhJunMing"},"content":"        typeOfTask \u003d inputSplit[0];"},{"lineNumber":52,"author":{"gitId":"OhJunMing"},"content":"        if (inputSplit.length \u003e\u003d 2) {"},{"lineNumber":53,"author":{"gitId":"OhJunMing"},"content":"            if (inputSplit[1].equals(\"\")) {"},{"lineNumber":54,"author":{"gitId":"OhJunMing"},"content":"            } else {"},{"lineNumber":55,"author":{"gitId":"OhJunMing"},"content":"                TimeParser timeParser \u003d new TimeParser();"},{"lineNumber":56,"author":{"gitId":"OhJunMing"},"content":"                if (inputSplit[1].split(\"/by\").length \u003d\u003d 2) {"},{"lineNumber":57,"author":{"gitId":"OhJunMing"},"content":"                    String[] descSplit \u003d inputSplit[1].split(\"/by \");"},{"lineNumber":58,"author":{"gitId":"OhJunMing"},"content":"                    description \u003d descSplit[0];"},{"lineNumber":59,"author":{"gitId":"OhJunMing"},"content":"                    time \u003d timeParser.parse(descSplit[1]);"},{"lineNumber":60,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":61,"author":{"gitId":"OhJunMing"},"content":"                } else if (inputSplit[1].split(\"/at\").length \u003d\u003d 2) {"},{"lineNumber":62,"author":{"gitId":"OhJunMing"},"content":"                    String[] descSplit \u003d inputSplit[1].split(\"/at \");"},{"lineNumber":63,"author":{"gitId":"OhJunMing"},"content":"                    description \u003d descSplit[0];"},{"lineNumber":64,"author":{"gitId":"OhJunMing"},"content":"                    time \u003d timeParser.parse(descSplit[1]);"},{"lineNumber":65,"author":{"gitId":"OhJunMing"},"content":"                } else {"},{"lineNumber":66,"author":{"gitId":"OhJunMing"},"content":"                    description \u003d inputSplit[1];"},{"lineNumber":67,"author":{"gitId":"OhJunMing"},"content":"                }"},{"lineNumber":68,"author":{"gitId":"OhJunMing"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"OhJunMing"},"content":"        return new Parser(typeOfTask, description, time);"},{"lineNumber":71,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":73,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"OhJunMing"},"content":"     * Returns typeOfTask attribute."},{"lineNumber":75,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"OhJunMing"},"content":"     * @return typeOfTask"},{"lineNumber":77,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"OhJunMing"},"content":"    public String getTypeOfTask() {"},{"lineNumber":79,"author":{"gitId":"OhJunMing"},"content":"        return typeOfTask;"},{"lineNumber":80,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":82,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"OhJunMing"},"content":"     * Returns description attribute."},{"lineNumber":84,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"OhJunMing"},"content":"     * @return description"},{"lineNumber":86,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"OhJunMing"},"content":"    public String getDescription() {"},{"lineNumber":88,"author":{"gitId":"OhJunMing"},"content":"        return description;"},{"lineNumber":89,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":91,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"OhJunMing"},"content":"     * Returns time attribute."},{"lineNumber":93,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":94,"author":{"gitId":"OhJunMing"},"content":"     * @return time"},{"lineNumber":95,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"OhJunMing"},"content":"    public LocalDateTime getTime() {"},{"lineNumber":97,"author":{"gitId":"OhJunMing"},"content":"        return time;"},{"lineNumber":98,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":100,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"OhJunMing"},"content":"     * Returns String of parsed user input."},{"lineNumber":102,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":103,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":104,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":106,"author":{"gitId":"OhJunMing"},"content":"    public String toString() {"},{"lineNumber":107,"author":{"gitId":"OhJunMing"},"content":"        return \"|\" + typeOfTask + \"|\" + description + \"|\" + time + \"|\";"},{"lineNumber":108,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":109}},{"path":"src/main/java/Duke/parser/TimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":" * Parses string time into LocalDateTime object."},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":" *"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":" * @author Oh Jun Ming"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":" * @version 1.0"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"public class TimeParser {"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"    private LocalDateTime time;"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"    TimeParser() {"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"    TimeParser(LocalDateTime time) {"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"        this.time \u003d time;"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"     * Returns LocalDateTime from String input."},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"     * @param input"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"     * @return LocalDataTime"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"    public LocalDateTime parse(String input) {"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"        LocalDateTime time \u003d LocalDateTime.parse(input, formatter);"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"        return time;"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":34}},{"path":"src/main/java/Duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"import java.nio.charset.StandardCharsets;"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"import java.nio.file.Files;"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"import java.nio.file.Path;"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"import duke.parser.ListParser;"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"import duke.task.Task;"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"import duke.task.TaskList;"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"public class Storage {"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"    private static Path filePath;"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"     * Retrieves file path of stored data."},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"    public void retrieveFilePath() {"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"            String home \u003d System.getProperty(\"user.home\");"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"            Path directoryPath \u003d Paths.get(home.toString(), \"Desktop\", \"repo\", \"ip\", \"data\");"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"            Boolean directoryExists \u003d Files.exists(directoryPath);"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"            if (directoryExists.equals(false)) {"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"                Files.createDirectory(directoryPath);"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"            Path file \u003d Paths.get(directoryPath.toString(), \"Baron.txt\");"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"            Boolean fileExists \u003d Files.exists(file);"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"            if (fileExists.equals(false)) {"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"                Files.createFile(file);"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"            filePath \u003d file;"},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"            System.out.println(\"directory/file is already created.\");"},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":"     * Saves taskList into Storage."},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"     * @param taskList"},{"lineNumber":45,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"OhJunMing"},"content":"    public void save(ArrayList\u003cTask\u003e taskList) {"},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"        try {"},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"            String data \u003d \"\";"},{"lineNumber":49,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":51,"author":{"gitId":"OhJunMing"},"content":"                data \u003d data + taskList.get(i).encode() + \"\\n\";"},{"lineNumber":52,"author":{"gitId":"OhJunMing"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"OhJunMing"},"content":"            Files.write(filePath, data.getBytes(StandardCharsets.UTF_8));"},{"lineNumber":54,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":55,"author":{"gitId":"OhJunMing"},"content":"        } catch (IOException e) {"},{"lineNumber":56,"author":{"gitId":"OhJunMing"},"content":"            System.out.println(\"save error\");"},{"lineNumber":57,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":58,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":61,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"OhJunMing"},"content":"     * Loads taskList from text file into Storage."},{"lineNumber":63,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"OhJunMing"},"content":"     * @return TaskList"},{"lineNumber":65,"author":{"gitId":"OhJunMing"},"content":"     * @throws IOException"},{"lineNumber":66,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"OhJunMing"},"content":"    public TaskList load() throws IOException {"},{"lineNumber":68,"author":{"gitId":"OhJunMing"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":69,"author":{"gitId":"OhJunMing"},"content":"        retrieveFilePath();"},{"lineNumber":70,"author":{"gitId":"OhJunMing"},"content":"        List\u003cString\u003e s \u003d Files.readAllLines(filePath);"},{"lineNumber":71,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":72,"author":{"gitId":"OhJunMing"},"content":"        for (int i \u003d 0; i \u003c s.size(); i++) {"},{"lineNumber":73,"author":{"gitId":"OhJunMing"},"content":"            ListParser p \u003d new ListParser();"},{"lineNumber":74,"author":{"gitId":"OhJunMing"},"content":"            p \u003d p.parse(s.get(i));"},{"lineNumber":75,"author":{"gitId":"OhJunMing"},"content":"            taskList.populate(p);"},{"lineNumber":76,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"OhJunMing"},"content":"        return taskList;"},{"lineNumber":78,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":79}},{"path":"src/main/java/Duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":" * Represents a Deadline."},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":" * Sub-class of Task."},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":" *"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":" * @author Oh Jun Ming"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":" * @version 1.0"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"public class Deadline extends Task {"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"    protected LocalDateTime by;"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"     * Returns a Deadline."},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"     * @param msg description of Deadline."},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"     * @return Deadline"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"    Deadline(String msg, LocalDateTime by) {"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"        super(msg);"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"        this.by \u003d by;"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"     * Returns a Deadline."},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"     * @param msg description of Deadline."},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"     * @param isDone boolean that tracks whether Deadline is completed."},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"     * @param by time of deadline."},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"     * @return Deadline"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"    Deadline(String msg, Boolean isDone, LocalDateTime by) {"},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"        super(msg, isDone);"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"        this.by \u003d by;"},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":"     * Returns a Deadline that set boolean isDone as true."},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"     * @return Deadline marked as done."},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"OhJunMing"},"content":"    public Deadline setDone() {"},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"        return new Deadline(this.msg, true, this.by);"},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"OhJunMing"},"content":"     * Encodes Task to string format for storage."},{"lineNumber":52,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":54,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"OhJunMing"},"content":"    public String encode() {"},{"lineNumber":56,"author":{"gitId":"OhJunMing"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"},{"lineNumber":57,"author":{"gitId":"OhJunMing"},"content":"        return \"D\" + \"|\" + super.encode() + \"|\" + by.format(formatter);"},{"lineNumber":58,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":60,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":61,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"OhJunMing"},"content":"     * Returns a String that describes Deadline."},{"lineNumber":63,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":65,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"OhJunMing"},"content":"    public String toString() {"},{"lineNumber":68,"author":{"gitId":"OhJunMing"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\");"},{"lineNumber":69,"author":{"gitId":"OhJunMing"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by.format(formatter) + \")\";"},{"lineNumber":70,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":71}},{"path":"src/main/java/Duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":" * Represents an Event."},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":" * Sub-class of Task."},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":" *"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":" * @author Oh Jun Ming"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":" * @version 1.0"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"public class Event extends Task {"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"    protected LocalDateTime time;"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"     * Returns an Event."},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"     * @param msg description of Event."},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"     * @param time time of Event."},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"     * @return Event"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"    Event(String msg, LocalDateTime time) {"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"        super(msg);"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"        this.time \u003d time;"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"     * Returns an Event."},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"     * @param msg description of Event."},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"     * @param isDone boolean that tracks whether Event is completed."},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"     * @param time time of Event."},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"     * @return Event"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"    Event(String msg, Boolean isDone, LocalDateTime time) {"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"        super(msg, isDone);"},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":"        this.time \u003d time;"},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":"     * Returns an Event that set boolean isDone as true."},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"     * @return Event marked as done."},{"lineNumber":45,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"    public Event setDone() {"},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"        return new Event(this.msg, true, this.time);"},{"lineNumber":49,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":51,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"OhJunMing"},"content":"     * Encodes Task to string format for storage."},{"lineNumber":53,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":55,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"OhJunMing"},"content":"    public String encode() {"},{"lineNumber":57,"author":{"gitId":"OhJunMing"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"},{"lineNumber":58,"author":{"gitId":"OhJunMing"},"content":"        return \"E\" + \"|\" + super.encode() + \"|\" + time.format(formatter);"},{"lineNumber":59,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":61,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"OhJunMing"},"content":"     * Returns a String that describes Event."},{"lineNumber":63,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":65,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"OhJunMing"},"content":"    public String toString() {"},{"lineNumber":68,"author":{"gitId":"OhJunMing"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\");"},{"lineNumber":69,"author":{"gitId":"OhJunMing"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + time.format(formatter) + \")\";"},{"lineNumber":70,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":71}},{"path":"src/main/java/Duke/task/SearchList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"import duke.common.Response;"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"public class SearchList {"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"    SearchList() {"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"        tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"    public void add(Task task) {"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"        tasks.add(task);"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"     * Prints taskList."},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"    public void list() {"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"        String msg \u003d \"\";"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"            msg +\u003d (i + 1) + \".\" + tasks.get(i) + \"\\n\";"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"        enclose(Response.LIST.toString() + msg);"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"     * Prints output to user in generic format."},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"    public void enclose(String reply) {"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"        System.out.println(\"---------------------------------------\");"},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"        System.out.println(reply);"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"        System.out.println(\"---------------------------------------\\n\");"},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":"    public String status() {"},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":"        return \"Now you have \" + tasks.size() + \" tasks in the list.\\n\";"},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"}"},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":""}],"authorContributionMap":{"OhJunMing":44}},{"path":"src/main/java/Duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":" * Represents a Task."},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":" *"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":" * @author Oh Jun Ming"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":" * @version 1.0"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"public class Task {"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"    protected String msg;"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"    protected Boolean isDone;"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"     * Returns a Task."},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"     * @param msg description of task."},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"     * @return Task"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"    Task(String msg) {"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"        this.msg \u003d msg;"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"        this.isDone \u003d false;"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"     * Returns a Task."},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"     * @param msg description of task."},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"     * @param isDone boolean that tracks whether task is completed."},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"     * @return Task"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"    Task(String msg, Boolean isDone) {"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"        this.msg \u003d msg;"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"     * Returns a Task that set boolean isDone as true."},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":"     * @return Task Marks Task as done."},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":"    public Task setDone() {"},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":"        return new Task(this.msg, true);"},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":45,"author":{"gitId":"OhJunMing"},"content":"    public String getMsg() {"},{"lineNumber":46,"author":{"gitId":"OhJunMing"},"content":"        return msg;"},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":49,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"     * Encodes Task to string format for storage."},{"lineNumber":51,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":53,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"OhJunMing"},"content":"    public String encode() {"},{"lineNumber":55,"author":{"gitId":"OhJunMing"},"content":"        if (isDone.equals(true)) {"},{"lineNumber":56,"author":{"gitId":"OhJunMing"},"content":"            return \"DONE\" + \"|\" + this.msg;"},{"lineNumber":57,"author":{"gitId":"OhJunMing"},"content":"        } else {"},{"lineNumber":58,"author":{"gitId":"OhJunMing"},"content":"            return \"PENDING\" + \"|\" + this.msg;"},{"lineNumber":59,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":62,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":63,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"OhJunMing"},"content":"     * Returns a String that describes Task."},{"lineNumber":65,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":67,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":69,"author":{"gitId":"OhJunMing"},"content":"    public String toString() {"},{"lineNumber":70,"author":{"gitId":"OhJunMing"},"content":"        if (isDone.equals(true)) {"},{"lineNumber":71,"author":{"gitId":"OhJunMing"},"content":"            return \"[\" + \"DONE\" + \"] \" + msg;"},{"lineNumber":72,"author":{"gitId":"OhJunMing"},"content":"        } else {"},{"lineNumber":73,"author":{"gitId":"OhJunMing"},"content":"            return \"[ ] \" + msg;"},{"lineNumber":74,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":76}},{"path":"src/main/java/Duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"import duke.common.Response;"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"import duke.exception.EmptyDescription;"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"import duke.parser.ListParser;"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"import duke.parser.Parser;"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"public class TaskList {"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"    public TaskList() {"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"        return tasks;"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"     * Adds task from storage to tasklist."},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"     * @param p"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"    public void populate(ListParser p) {"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"        String typeOfTask \u003d p.getTypeOfTask();"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"        Boolean isDone \u003d p.getIsDone();"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"        String description \u003d p.getDescription();"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"        LocalDateTime time \u003d p.getTime();"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"        switch(typeOfTask) {"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"        case \"T\":"},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"            tasks.add(new Todo(description, isDone));"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"            break;"},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":"        case \"D\":"},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":"            tasks.add(new Deadline(description, isDone, time));"},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":"            break;"},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":"        case \"E\":"},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":"            tasks.add(new Event(description, isDone, time));"},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"            break;"},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"        default:"},{"lineNumber":45,"author":{"gitId":"OhJunMing"},"content":"            System.out.println(\"wrong typeOfTask\");"},{"lineNumber":46,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":49,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"     * Adds task to tasklist."},{"lineNumber":51,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"OhJunMing"},"content":"     * @param p"},{"lineNumber":53,"author":{"gitId":"OhJunMing"},"content":"     * @throws EmptyDescription"},{"lineNumber":54,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"OhJunMing"},"content":"    public void add(Parser p) throws EmptyDescription {"},{"lineNumber":56,"author":{"gitId":"OhJunMing"},"content":"        String typeOfTask \u003d p.getTypeOfTask();"},{"lineNumber":57,"author":{"gitId":"OhJunMing"},"content":"        String description \u003d p.getDescription();"},{"lineNumber":58,"author":{"gitId":"OhJunMing"},"content":"        if (description.equals(\"\")) {"},{"lineNumber":59,"author":{"gitId":"OhJunMing"},"content":"            throw new EmptyDescription(typeOfTask);"},{"lineNumber":60,"author":{"gitId":"OhJunMing"},"content":"        } else {"},{"lineNumber":61,"author":{"gitId":"OhJunMing"},"content":"            LocalDateTime time \u003d p.getTime();"},{"lineNumber":62,"author":{"gitId":"OhJunMing"},"content":"            Task newTask;"},{"lineNumber":63,"author":{"gitId":"OhJunMing"},"content":"            if (typeOfTask.equals(\"todo\")) {"},{"lineNumber":64,"author":{"gitId":"OhJunMing"},"content":"                newTask \u003d new Todo(description);"},{"lineNumber":65,"author":{"gitId":"OhJunMing"},"content":"            } else if (typeOfTask.equals(\"deadline\")) {"},{"lineNumber":66,"author":{"gitId":"OhJunMing"},"content":"                newTask \u003d new Deadline(description, time);"},{"lineNumber":67,"author":{"gitId":"OhJunMing"},"content":"            } else {"},{"lineNumber":68,"author":{"gitId":"OhJunMing"},"content":"                newTask \u003d new Event(description, time);"},{"lineNumber":69,"author":{"gitId":"OhJunMing"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"OhJunMing"},"content":"            tasks.add(newTask);"},{"lineNumber":71,"author":{"gitId":"OhJunMing"},"content":"            String instructions \u003d Response.ADD.toString() + newTask + \"\\n\" + this.status();"},{"lineNumber":72,"author":{"gitId":"OhJunMing"},"content":"            enclose(instructions);"},{"lineNumber":73,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":76,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"OhJunMing"},"content":"     * Removes task from taskList."},{"lineNumber":78,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"OhJunMing"},"content":"     * @param p"},{"lineNumber":80,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"OhJunMing"},"content":"    public void delete(Parser p) {"},{"lineNumber":82,"author":{"gitId":"OhJunMing"},"content":"        int i \u003d Integer.parseInt(p.getDescription()) - 1;"},{"lineNumber":83,"author":{"gitId":"OhJunMing"},"content":"        Task task \u003d tasks.get(i);"},{"lineNumber":84,"author":{"gitId":"OhJunMing"},"content":"        tasks.remove(i);"},{"lineNumber":85,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":86,"author":{"gitId":"OhJunMing"},"content":"        String instructions \u003d Response.DELETE.toString() + task + \"\\n\" + this.status();"},{"lineNumber":87,"author":{"gitId":"OhJunMing"},"content":"        enclose(instructions);"},{"lineNumber":88,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":90,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"OhJunMing"},"content":"     * Marks task as DONE."},{"lineNumber":92,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"OhJunMing"},"content":"     * @param p"},{"lineNumber":94,"author":{"gitId":"OhJunMing"},"content":"     * @throws EmptyDescription"},{"lineNumber":95,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"OhJunMing"},"content":"    public void markAsDone(Parser p) throws EmptyDescription {"},{"lineNumber":97,"author":{"gitId":"OhJunMing"},"content":"        if (p.getDescription().equals(\"\")) {"},{"lineNumber":98,"author":{"gitId":"OhJunMing"},"content":"            throw new EmptyDescription(p.getTypeOfTask());"},{"lineNumber":99,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"OhJunMing"},"content":"        int i \u003d Integer.parseInt(p.getDescription()) - 1;"},{"lineNumber":101,"author":{"gitId":"OhJunMing"},"content":"        tasks.set(i, tasks.get(i).setDone());"},{"lineNumber":102,"author":{"gitId":"OhJunMing"},"content":"        enclose(Response.DONE.toString() + tasks.get(i) + \"\\n\");"},{"lineNumber":103,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":105,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"OhJunMing"},"content":"     * Locates tasks matched with keyword."},{"lineNumber":107,"author":{"gitId":"OhJunMing"},"content":"     * @param parser"},{"lineNumber":108,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"OhJunMing"},"content":"    public void find(Parser parser) {"},{"lineNumber":110,"author":{"gitId":"OhJunMing"},"content":"        String keyword \u003d parser.getDescription();"},{"lineNumber":111,"author":{"gitId":"OhJunMing"},"content":"        System.out.println(keyword);"},{"lineNumber":112,"author":{"gitId":"OhJunMing"},"content":"        SearchList searchList \u003d new SearchList();"},{"lineNumber":113,"author":{"gitId":"OhJunMing"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":114,"author":{"gitId":"OhJunMing"},"content":"            String description \u003d tasks.get(i).getMsg();"},{"lineNumber":115,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":116,"author":{"gitId":"OhJunMing"},"content":"            if (description.contains(keyword)) {"},{"lineNumber":117,"author":{"gitId":"OhJunMing"},"content":"                searchList.add(tasks.get(i));"},{"lineNumber":118,"author":{"gitId":"OhJunMing"},"content":"            }"},{"lineNumber":119,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"OhJunMing"},"content":"        searchList.list();"},{"lineNumber":121,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":123,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"OhJunMing"},"content":"     * Prints list."},{"lineNumber":125,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"OhJunMing"},"content":"    public void list() {"},{"lineNumber":127,"author":{"gitId":"OhJunMing"},"content":"        String msg \u003d \"\";"},{"lineNumber":128,"author":{"gitId":"OhJunMing"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":129,"author":{"gitId":"OhJunMing"},"content":"            msg +\u003d (i + 1) + \".\" + tasks.get(i) + \"\\n\";"},{"lineNumber":130,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"OhJunMing"},"content":"        enclose(Response.LIST.toString() + msg);"},{"lineNumber":132,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":134,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"OhJunMing"},"content":"     * Prints output to user in generic format."},{"lineNumber":136,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":137,"author":{"gitId":"OhJunMing"},"content":"    public void enclose(String reply) {"},{"lineNumber":138,"author":{"gitId":"OhJunMing"},"content":"        System.out.println(\"---------------------------------------\");"},{"lineNumber":139,"author":{"gitId":"OhJunMing"},"content":"        System.out.println(reply);"},{"lineNumber":140,"author":{"gitId":"OhJunMing"},"content":"        System.out.println(\"---------------------------------------\\n\");"},{"lineNumber":141,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":143,"author":{"gitId":"OhJunMing"},"content":"    public String status() {"},{"lineNumber":144,"author":{"gitId":"OhJunMing"},"content":"        return \"Now you have \" + tasks.size() + \" tasks in the list.\\n\";"},{"lineNumber":145,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":146}},{"path":"src/main/java/Duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":" * Represents a Todo."},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":" * Sub-class of Task."},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":" *"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":" * @author Oh Jun Ming"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":" * @version 1.0"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"public class Todo extends Task {"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"     * Returns a Todo."},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"     * @param msg description of Todo."},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"     * @return Todo"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"    Todo(String msg) {"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"        super(msg);"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"     * Returns a Todo."},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"     * @param msg description of Todo."},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"     * @param isDone boolean that tracks whether Todo is completed."},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"     * @return Todo"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"    Todo(String msg, Boolean isDone) {"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"        super(msg, isDone);"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"     * Returns a Todo object that set boolean isDone as true."},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"     * @return Todo Marks Todo as done."},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":"    public Todo setDone() {"},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":"        return new Todo(this.msg, true);"},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":"    public String encode() {"},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"        return \"T\" + \"|\" + super.encode();"},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":46,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"     * Returns a String that describes Todo."},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"OhJunMing"},"content":"    public String toString() {"},{"lineNumber":53,"author":{"gitId":"OhJunMing"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":54,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":55}},{"path":"src/main/java/Duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"OhJunMing"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"OhJunMing"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"OhJunMing"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":52,"author":{"gitId":"OhJunMing"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"OhJunMing"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":56,"author":{"gitId":"OhJunMing"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"OhJunMing"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"OhJunMing"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"OhJunMing"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":61}},{"path":"src/main/java/Duke/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":12}},{"path":"src/main/java/Duke/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"import duke.Duke;"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"import javafx.application.Application;"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"import javafx.scene.Scene;"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":" * A GUI for Duke using FXML."},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"public class Main extends Application {"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"    public void start(Stage stage) {"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"            stage.setScene(scene);"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"            stage.show();"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":33}},{"path":"src/main/java/Duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"    private VBox dialogContainer;"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"    private TextField userInput;"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"    private Button sendButton;"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"    private Duke duke;"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaTiger.png\"));"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaRocket.png\"));"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"    public void initialize() {"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"        duke \u003d d;"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"    @FXML"},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"    private void handleUserInput() {"},{"lineNumber":45,"author":{"gitId":"OhJunMing"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":46,"author":{"gitId":"OhJunMing"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":49,"author":{"gitId":"OhJunMing"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"        );"},{"lineNumber":51,"author":{"gitId":"OhJunMing"},"content":"        userInput.clear();"},{"lineNumber":52,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":53}},{"path":"src/main/java/Duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"import duke.common.Response;"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"import duke.exception.EmptyDescription;"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"import duke.exception.InvalidTypeOfTask;"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"import duke.parser.Parser;"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"import duke.task.TaskList;"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"public class Ui {"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"    private Boolean shouldExit \u003d false;"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"    public Ui() {"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"     * Reads command user input."},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"     * @param taskList1"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"     * @param s"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"     * @return TaskList"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"     * @throws InvalidTypeOfTask"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"     * @throws EmptyDescription"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"    public TaskList readCommand(TaskList taskList1, Scanner s) throws InvalidTypeOfTask, EmptyDescription {"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"        String input \u003d s.nextLine();"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"        Parser p \u003d new Parser();"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"        p \u003d p.parse(input);"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"        String typeofTask \u003d p.getTypeOfTask();"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"        TaskList taskList \u003d taskList1;"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"        switch (typeofTask) {"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"        case \"bye\":"},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":"            shouldExit \u003d true;"},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":"            break;"},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":"        case \"list\":"},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":"            taskList.list();"},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":"            break;"},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"        case \"find\":"},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"            ////////////////"},{"lineNumber":45,"author":{"gitId":"OhJunMing"},"content":"            taskList.find(p);"},{"lineNumber":46,"author":{"gitId":"OhJunMing"},"content":"            break;"},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"        case \"done\":"},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"            taskList.markAsDone(p);"},{"lineNumber":49,"author":{"gitId":"OhJunMing"},"content":"            break;"},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"        case \"delete\":"},{"lineNumber":51,"author":{"gitId":"OhJunMing"},"content":"            taskList.delete(p);"},{"lineNumber":52,"author":{"gitId":"OhJunMing"},"content":"            break;"},{"lineNumber":53,"author":{"gitId":"OhJunMing"},"content":"        case \"todo\":"},{"lineNumber":54,"author":{"gitId":"OhJunMing"},"content":"        case \"deadline\":"},{"lineNumber":55,"author":{"gitId":"OhJunMing"},"content":"        case \"event\":"},{"lineNumber":56,"author":{"gitId":"OhJunMing"},"content":"            taskList.add(p);"},{"lineNumber":57,"author":{"gitId":"OhJunMing"},"content":"            break;"},{"lineNumber":58,"author":{"gitId":"OhJunMing"},"content":"        default:"},{"lineNumber":59,"author":{"gitId":"OhJunMing"},"content":"            throw new InvalidTypeOfTask();"},{"lineNumber":60,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"OhJunMing"},"content":"        return taskList;"},{"lineNumber":62,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":64,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":65,"author":{"gitId":"OhJunMing"},"content":"    public Boolean getExit() {"},{"lineNumber":66,"author":{"gitId":"OhJunMing"},"content":"        return shouldExit;"},{"lineNumber":67,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":69,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":70,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"OhJunMing"},"content":"     * Greets user."},{"lineNumber":72,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"OhJunMing"},"content":"    public void greet() {"},{"lineNumber":74,"author":{"gitId":"OhJunMing"},"content":"        enclose(Response.GREET.toString());"},{"lineNumber":75,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":77,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"OhJunMing"},"content":"     * Echo user input."},{"lineNumber":79,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"OhJunMing"},"content":"    public void echo(String msg) {"},{"lineNumber":81,"author":{"gitId":"OhJunMing"},"content":"        enclose(msg + \"\\n\");"},{"lineNumber":82,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":84,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"OhJunMing"},"content":"     * Say bye bye"},{"lineNumber":86,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"OhJunMing"},"content":"    public void exit() {"},{"lineNumber":88,"author":{"gitId":"OhJunMing"},"content":"        enclose(Response.EXIT.toString());"},{"lineNumber":89,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":91,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"OhJunMing"},"content":"     * Prints output to user in generic format."},{"lineNumber":93,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"OhJunMing"},"content":"    public void enclose(String reply) {"},{"lineNumber":95,"author":{"gitId":"OhJunMing"},"content":"        System.out.println(\"---------------------------------------\");"},{"lineNumber":96,"author":{"gitId":"OhJunMing"},"content":"        System.out.println(reply);"},{"lineNumber":97,"author":{"gitId":"OhJunMing"},"content":"        System.out.println(\"---------------------------------------\\n\");"},{"lineNumber":98,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":99}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"OhJunMing":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"OhJunMing":19}},{"path":"src/test/java/duke/parser/TimeParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"class TimeParserTest {"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"    private String msg \u003d \"01-02-2023 22:34\";"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"    void parse() {"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"        TimeParser timeParser \u003d new TimeParser();"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"        System.out.println(timeParser.parse(msg));"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"        assertEquals(\"2023-02-01T22:34\", timeParser.parse(msg).toString());"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":18}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"class TodoTest {"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"    void setDone() {"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"        Todo todo \u003d new Todo(\"random\", false);"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"        assertEquals(true, todo.setDone().isDone);"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"    void encode() {"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"        Todo todo \u003d new Todo(\"random\", false);"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"        String expected \u003d \"T\" + \"|\" + \"PENDING\" + \"|\" + todo.msg;"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"        assertEquals(expected, todo.encode());"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"    void testToString() {"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"        Todo todo \u003d new Todo(\"random\", false);"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"        String expected \u003d \"[T]\" + \"[ ] \" + todo.msg;"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"        assertEquals(expected, todo.toString());"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":"deadline return book /by 06-08-2021 12:00"},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"event project meeting /at 01-04-2021 23:59"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"todo borrow book"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"deadline burn book /by 01-02-2023 22:34"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"event project debrief /at 03-04-2021 22:11"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"list"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"done 1"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"done 4"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"done 2"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"done 3"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"list"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"bye"}],"authorContributionMap":{"OhJunMing":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"pause"}],"authorContributionMap":{"OhJunMing":3,"-":20}}]
