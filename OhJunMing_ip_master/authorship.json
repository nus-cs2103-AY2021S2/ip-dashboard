[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"# duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"1. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"OhJunMing":2,"-":21}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"    mainClassName \u003d \"duke.ui.Launcher\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}"},{"lineNumber":64,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":65,"author":{"gitId":"OhJunMing"},"content":"run {"},{"lineNumber":66,"author":{"gitId":"OhJunMing"},"content":"    enableAssertions \u003d true"},{"lineNumber":67,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":22,"-":45}},{"path":"data/Baron.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"D|DONE|return book|06-08-2021 12:00"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":"T|PENDING|join sports club"},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"T|PENDING|borrow book"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"D|PENDING|burn book|01-02-2023 22:34"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"E|DONE|project debrief|03-04-2021 22:11"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"T|PENDING|burn book"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"T|DONE|burn book"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"T|PENDING|burn book"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"T|PENDING|burn book"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"E|PENDING|project debrief|03-04-2021 22:11"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"T|PENDING|buy food"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"T|PENDING|buy fooddd"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"T|PENDING|read ns"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"T|DONE|study"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"E|PENDING|project debrief|03-04-2021 22:01"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"T|PENDING|read shit"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"T|PENDING|buy book"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"D|DONE|return book|06-08-2021 12:00"}],"authorContributionMap":{"OhJunMing":18}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":"Duke is a program build to record tasks.\u003cbr\u003e"},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"Input your wishes and they will be saved.\u003cbr\u003e"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"ENJOY! \u003cbr\u003e"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"### Adding tasks"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"Add a Todo, Event or Event"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"#### * Todo"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"Format : `todo/description`\u003cbr\u003e"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"Input : `todo/buy book` \u003cbr\u003e"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"Output : "},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"\u003cbr\u003e`Got it.I \u0027ve added this task:`\u003cbr\u003e"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"`[T][ ] buy book`\u003cbr\u003e"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"`Now you have 1 tasks in the list.`"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"#### * Deadline"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"Format: `deadline/description/dd-mm-yyyy hh:mm`\u003cbr\u003e"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"Input : `deadline/return book/06-08-2021 12:00`\u003cbr\u003e"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"Output :"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"\u003cbr\u003e`Got it.I \u0027ve added this task:`\u003cbr\u003e"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"`[D][ ] return book(by:06 Aug 2021 12:00PM)`\u003cbr\u003e"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"`Now you have 1 tasks in the list.`"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"#### * Event"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"Format : `event/description/dd-mm-yyyy hh:mm`\u003cbr\u003e"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"Input : `event/project meeting/01-04-2021 23:59`\u003cbr\u003e"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"Output : "},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"\u003cbr\u003e`[E][] project meeting(at:01 Apr 2021 11.59PM)`\u003cbr\u003e"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"`Now you have 1 tasks in the list.`"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"### List"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"Lists the current tasks in your list. \u003cbr\u003e"},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"Format : `list`\u003cbr\u003e"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"Input : list\u003cbr\u003e"},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":"Output : "},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":"\u003cbr\u003e`Here are the tasks in your list:`\u003cbr\u003e"},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":"`1.[D][] buy book (by:01 Feb 2023 10.34PM)`\u003cbr\u003e"},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":"`2.[D][] buy book (by:01 Feb 2023 10.34PM)`"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"### Done"},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"Mark a Task as done by its index.\u003cbr /\u003e"},{"lineNumber":45,"author":{"gitId":"OhJunMing"},"content":"Format : `done/index` \u003cbr\u003e"},{"lineNumber":46,"author":{"gitId":"OhJunMing"},"content":"Input : `done/3` \u003cbr\u003e"},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"Output : "},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"\u003cbr\u003e`Nice! I \u0027ve marked this task as done`\u003cbr\u003e"},{"lineNumber":49,"author":{"gitId":"OhJunMing"},"content":"`3.[D][DONE] buy book (by:01 Feb 2023 10.34PM)`"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"OhJunMing"},"content":"### Delete"},{"lineNumber":52,"author":{"gitId":"OhJunMing"},"content":"Delete a Task by its index \u003cbr\u003e"},{"lineNumber":53,"author":{"gitId":"OhJunMing"},"content":"Format : `delete/index`\u003cbr\u003e"},{"lineNumber":54,"author":{"gitId":"OhJunMing"},"content":"Input : `delete/5` \u003cbr\u003e"},{"lineNumber":55,"author":{"gitId":"OhJunMing"},"content":"Output : "},{"lineNumber":56,"author":{"gitId":"OhJunMing"},"content":"\u003cbr\u003e`Noted.I\u0027have removed this task:`\u003cbr\u003e"},{"lineNumber":57,"author":{"gitId":"OhJunMing"},"content":"`[T][] burn book`\u003cbr\u003e"},{"lineNumber":58,"author":{"gitId":"OhJunMing"},"content":"`Now you have 4 tasks in the list.`"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"OhJunMing"},"content":"### Exit"},{"lineNumber":61,"author":{"gitId":"OhJunMing"},"content":"Duke says bye and thank you.\u003cbr\u003e"},{"lineNumber":62,"author":{"gitId":"OhJunMing"},"content":"Format : `bye`\u003cbr\u003e"},{"lineNumber":63,"author":{"gitId":"OhJunMing"},"content":"Input : `bye`\u003cbr\u003e"},{"lineNumber":64,"author":{"gitId":"OhJunMing"},"content":"Output : `Bye.Hope to see you again soon!`"},{"lineNumber":65,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":66,"author":{"gitId":"OhJunMing"},"content":"### Find"},{"lineNumber":67,"author":{"gitId":"OhJunMing"},"content":"Find specific tasks with a keyword. Duke will return matched tasks. \u003cbr\u003e"},{"lineNumber":68,"author":{"gitId":"OhJunMing"},"content":"Format: `find/keyword`\u003cbr\u003e"},{"lineNumber":69,"author":{"gitId":"OhJunMing"},"content":"Input : `find/book`\u003cbr\u003e"},{"lineNumber":70,"author":{"gitId":"OhJunMing"},"content":"Output : `Here are the tasks in your list:`\u003cbr\u003e"},{"lineNumber":71,"author":{"gitId":"OhJunMing"},"content":"`1.[D][] burn book (by:01 Feb 2023 10.34PM)`\u003cbr\u003e"},{"lineNumber":72,"author":{"gitId":"OhJunMing"},"content":"`2.[T][DONE] borrow book`"}],"authorContributionMap":{"OhJunMing":61,"-":11}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"import duke.common.Command;"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"import duke.common.Response;"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"import duke.exception.DuplicateTask;"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"import duke.exception.EmptyDescription;"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"import duke.exception.InvalidTaskNumber;"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"import duke.exception.InvalidTypeOfTask;"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"import duke.parser.Parser;"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"import duke.storage.Storage;"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"import duke.task.Deadline;"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"import duke.task.Event;"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"import duke.task.Task;"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"import duke.task.TaskList;"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"import duke.task.Todo;"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"import duke.ui.Ui;"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":" * Duke program maintains storage for user to track tasks."},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":" * Able to perform add, delete, markasDone, list, find tasks."},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"    private Storage storage;"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"    private TaskList taskList;"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"     * Initialise Duke program."},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"    public Duke() {"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"        storage \u003d new Storage();"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"        taskList \u003d storage.load();"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"     * Saves taskList changes to Storage."},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":"    public void save() {"},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":"        storage.save(taskList.getTasks());"},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"     * Adds task to taskList."},{"lineNumber":45,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"OhJunMing"},"content":"     * @param p Parser object."},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"     * @throws EmptyDescription"},{"lineNumber":49,"author":{"gitId":"OhJunMing"},"content":"     * @throws InvalidTypeOfTask"},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"     * @throws DuplicateTask"},{"lineNumber":51,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"OhJunMing"},"content":"    public String addTask(Parser p) throws EmptyDescription, InvalidTypeOfTask, DuplicateTask {"},{"lineNumber":53,"author":{"gitId":"OhJunMing"},"content":"        String reply \u003d \"\";"},{"lineNumber":54,"author":{"gitId":"OhJunMing"},"content":"        Command command \u003d p.getCommand();"},{"lineNumber":55,"author":{"gitId":"OhJunMing"},"content":"        String description \u003d p.getDescription();"},{"lineNumber":56,"author":{"gitId":"OhJunMing"},"content":"        if (description.equals(\"\")) {"},{"lineNumber":57,"author":{"gitId":"OhJunMing"},"content":"            throw new EmptyDescription(p.getTypeOfTask());"},{"lineNumber":58,"author":{"gitId":"OhJunMing"},"content":"        } else {"},{"lineNumber":59,"author":{"gitId":"OhJunMing"},"content":"            LocalDateTime time \u003d p.getTime();"},{"lineNumber":60,"author":{"gitId":"OhJunMing"},"content":"            Task newTask;"},{"lineNumber":61,"author":{"gitId":"OhJunMing"},"content":"            switch (command) {"},{"lineNumber":62,"author":{"gitId":"OhJunMing"},"content":"            case TODO:"},{"lineNumber":63,"author":{"gitId":"OhJunMing"},"content":"                newTask \u003d new Todo(description);"},{"lineNumber":64,"author":{"gitId":"OhJunMing"},"content":"                break;"},{"lineNumber":65,"author":{"gitId":"OhJunMing"},"content":"            case DEADLINE:"},{"lineNumber":66,"author":{"gitId":"OhJunMing"},"content":"                newTask \u003d new Deadline(description, time);"},{"lineNumber":67,"author":{"gitId":"OhJunMing"},"content":"                break;"},{"lineNumber":68,"author":{"gitId":"OhJunMing"},"content":"            case EVENT:"},{"lineNumber":69,"author":{"gitId":"OhJunMing"},"content":"                newTask \u003d new Event(description, time);"},{"lineNumber":70,"author":{"gitId":"OhJunMing"},"content":"                break;"},{"lineNumber":71,"author":{"gitId":"OhJunMing"},"content":"            default:"},{"lineNumber":72,"author":{"gitId":"OhJunMing"},"content":"                throw new InvalidTypeOfTask();"},{"lineNumber":73,"author":{"gitId":"OhJunMing"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"OhJunMing"},"content":"            if (taskList.detectDuplicates(newTask)) {"},{"lineNumber":75,"author":{"gitId":"OhJunMing"},"content":"                throw new DuplicateTask();"},{"lineNumber":76,"author":{"gitId":"OhJunMing"},"content":"            } else if (!taskList.detectDuplicates(newTask)) {"},{"lineNumber":77,"author":{"gitId":"OhJunMing"},"content":"                taskList.add(newTask);"},{"lineNumber":78,"author":{"gitId":"OhJunMing"},"content":"                String instructions \u003d Response.ADD.toString() + newTask + \"\\n\" + this.status();"},{"lineNumber":79,"author":{"gitId":"OhJunMing"},"content":"                reply \u003d instructions;"},{"lineNumber":80,"author":{"gitId":"OhJunMing"},"content":"            } else {"},{"lineNumber":81,"author":{"gitId":"OhJunMing"},"content":"                throw new DuplicateTask();"},{"lineNumber":82,"author":{"gitId":"OhJunMing"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"OhJunMing"},"content":"        return reply;"},{"lineNumber":85,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"OhJunMing"},"content":"     * Marks task as DONE."},{"lineNumber":88,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"OhJunMing"},"content":"     * @param p"},{"lineNumber":90,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":91,"author":{"gitId":"OhJunMing"},"content":"     * @throws InvalidTaskNumber"},{"lineNumber":92,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"OhJunMing"},"content":"    public String markAsDone(Parser p) throws InvalidTaskNumber {"},{"lineNumber":94,"author":{"gitId":"OhJunMing"},"content":"        String reply \u003d \"\";"},{"lineNumber":95,"author":{"gitId":"OhJunMing"},"content":"        try {"},{"lineNumber":96,"author":{"gitId":"OhJunMing"},"content":"            if (p.getDescription().equals(\"\")) {"},{"lineNumber":97,"author":{"gitId":"OhJunMing"},"content":"                throw new EmptyDescription(p.getTypeOfTask());"},{"lineNumber":98,"author":{"gitId":"OhJunMing"},"content":"            }"},{"lineNumber":99,"author":{"gitId":"OhJunMing"},"content":"            int i \u003d Integer.parseInt(p.getDescription()) - 1;"},{"lineNumber":100,"author":{"gitId":"OhJunMing"},"content":"            reply \u003d taskList.markAsDone(i);"},{"lineNumber":101,"author":{"gitId":"OhJunMing"},"content":"        } catch (EmptyDescription e) {"},{"lineNumber":102,"author":{"gitId":"OhJunMing"},"content":"            System.out.println(e.toString());"},{"lineNumber":103,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"OhJunMing"},"content":"        return reply;"},{"lineNumber":105,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"OhJunMing"},"content":"     * Delete Task from list."},{"lineNumber":108,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":109,"author":{"gitId":"OhJunMing"},"content":"     * @param p"},{"lineNumber":110,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":111,"author":{"gitId":"OhJunMing"},"content":"     * @throws InvalidTaskNumber"},{"lineNumber":112,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":113,"author":{"gitId":"OhJunMing"},"content":"    public String deleteTask(Parser p) throws InvalidTaskNumber {"},{"lineNumber":114,"author":{"gitId":"OhJunMing"},"content":"        int i \u003d Integer.parseInt(p.getDescription()) - 1;"},{"lineNumber":115,"author":{"gitId":"OhJunMing"},"content":"        return taskList.delete(i);"},{"lineNumber":116,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":118,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"OhJunMing"},"content":"     * Prints list."},{"lineNumber":120,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":121,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":122,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"OhJunMing"},"content":"    public String list() {"},{"lineNumber":124,"author":{"gitId":"OhJunMing"},"content":"        return taskList.list();"},{"lineNumber":125,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":127,"author":{"gitId":"OhJunMing"},"content":"     * Locates tasks matched with keyword."},{"lineNumber":128,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":129,"author":{"gitId":"OhJunMing"},"content":"     * @param parser"},{"lineNumber":130,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":131,"author":{"gitId":"OhJunMing"},"content":"    public String find(Parser parser) {"},{"lineNumber":132,"author":{"gitId":"OhJunMing"},"content":"        String keyword \u003d parser.getDescription();"},{"lineNumber":133,"author":{"gitId":"OhJunMing"},"content":"        return taskList.find(keyword);"},{"lineNumber":134,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":136,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":137,"author":{"gitId":"OhJunMing"},"content":"     * Return current number of tasks."},{"lineNumber":138,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":139,"author":{"gitId":"OhJunMing"},"content":"     * @return string"},{"lineNumber":140,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":141,"author":{"gitId":"OhJunMing"},"content":"    public String status() {"},{"lineNumber":142,"author":{"gitId":"OhJunMing"},"content":"        return \"Now you have \" + taskList.getNumberOfTasks() + \" tasks in the list.\\n\";"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":145,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":146,"author":{"gitId":"OhJunMing"},"content":"     * Generate a response to user input on duke chat GUI."},{"lineNumber":147,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":148,"author":{"gitId":"OhJunMing"},"content":"     * @param input"},{"lineNumber":149,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":150,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":151,"author":{"gitId":"OhJunMing"},"content":"    public String getResponse(String input) {"},{"lineNumber":152,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":153,"author":{"gitId":"OhJunMing"},"content":"        Ui ui \u003d new Ui(this);"},{"lineNumber":154,"author":{"gitId":"OhJunMing"},"content":"        String response \u003d ui.readCommand(input);"},{"lineNumber":155,"author":{"gitId":"OhJunMing"},"content":"        return response;"},{"lineNumber":156,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":158,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":159,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":160,"author":{"gitId":"OhJunMing"},"content":"     * Greets user."},{"lineNumber":161,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":162,"author":{"gitId":"OhJunMing"},"content":"    public String greet() {"},{"lineNumber":163,"author":{"gitId":"OhJunMing"},"content":"        return Response.GREET.toString();"},{"lineNumber":164,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":166,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":167,"author":{"gitId":"OhJunMing"},"content":"     * Say bye bye"},{"lineNumber":168,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":169,"author":{"gitId":"OhJunMing"},"content":"    public String exit() {"},{"lineNumber":170,"author":{"gitId":"OhJunMing"},"content":"        return Response.EXIT.toString();"},{"lineNumber":171,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"OhJunMing":169,"-":3}},{"path":"src/main/java/Duke/common/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.common;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":" * Enum class for user commands."},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"public enum Command {"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"    BYE, LIST, FIND, DONE, DELETE, TODO, DEADLINE, EVENT;"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":8}},{"path":"src/main/java/Duke/common/Response.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.common;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":" * Stores all generic string reply to user."},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"public enum Response {"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"    GREET(\"Welcome to Duke\\nWhat can I do for you?\\n\"),"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"    EXIT(\"Bye. Hope to see you again soon!\\n\"),"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"    ADD(\"Got it. I \u0027ve added this task:\\n\"),"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"    DELETE(\"Noted. I\u0027ve removed this task:\\n\"),"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"    DONE(\"Nice! I \u0027ve marked this task as done\\n\"),"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"    LIST(\"Here are the tasks in your list:\\n\");"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"    private final String s;"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"    /** Returns a Response message."},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"     * @param s generic message."},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"     * @return Response"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"    Response(String s) {"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"        this.s \u003d s;"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"     * Returns a String that contain generic response."},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"     * @return String of response message."},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"        return s;"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":34}},{"path":"src/main/java/Duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":" * Represent exceptions arising from the Duke program."},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"public class DukeException extends Exception{"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":7}},{"path":"src/main/java/Duke/exception/DuplicateTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":" * Represents a duplicateTask exception from duplicate user input."},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"public class DuplicateTask extends DukeException {"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"    public DuplicateTask() {"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"     * Returns String of error message."},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"        return \"OOPS!!! Task already exists. Please try again.\\n\";"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":21}},{"path":"src/main/java/Duke/exception/EmptyDescription.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":" * Represent a empty task description parsed from user input."},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"public class EmptyDescription extends DukeException {"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"    private String typeOfTask;"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"     * Returns EmptyDescription."},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"     * @param typeOfTask"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"     * @return EmptyDescription"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"    public EmptyDescription(String typeOfTask) {"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"        this.typeOfTask \u003d typeOfTask;"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"     * Returns String that produces error exception message to user."},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"        return \"OOPS!!! The description of a \" + this.typeOfTask + \" cannot be empty.\\n\";"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":28}},{"path":"src/main/java/Duke/exception/InvalidTaskNumber.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":" * Represents a invalid task index number exception."},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"public class InvalidTaskNumber extends DukeException {"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"    private int numberOfTasks;"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"     * Constructor for InvalidTaskNumber."},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"     * @param numberOfTasks size of current task list."},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"    public InvalidTaskNumber(int numberOfTasks) {"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"        this.numberOfTasks \u003d numberOfTasks;"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"     * Returns String that produces error exception message to user."},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"        return \"OOPS!!! Input task number from 1 to \" + numberOfTasks + \"\\n\";"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":26}},{"path":"src/main/java/Duke/exception/InvalidTypeOfTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":" * Represent a invalid TypeOfTask parsed from user input."},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"public class InvalidTypeOfTask extends DukeException {"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"     * Returns String that produces error exception message to user."},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"        return \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(\\n\";"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":16}},{"path":"src/main/java/Duke/parser/ListParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":" * Parses string input saved in hard disk."},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"public class ListParser {"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"    private String typeOfTask;"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"    private Boolean isDone;"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"    private String description;"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"    private LocalDateTime time;"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"     * ListParser constructor."},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"    public ListParser() {"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"        this.typeOfTask \u003d \"\";"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"        this.isDone \u003d null;"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"        this.description \u003d \"\";"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"        this.time \u003d null;"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"     * Return ListParser."},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"     * @param typeOfTask typeOfTask todo, event, deadline"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"     * @param isDone Boolean of task completion status"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"     * @param description"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"     * @param time"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"    public ListParser(String typeOfTask, Boolean isDone, String description, LocalDateTime time) {"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"        this.typeOfTask \u003d typeOfTask;"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"        this.description \u003d description;"},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"        this.time \u003d time;"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":"     * Parses the String in Hard Disk line by line."},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":"     * @param input"},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"     * @return ListParser"},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"OhJunMing"},"content":"    public ListParser parse(String input) {"},{"lineNumber":46,"author":{"gitId":"OhJunMing"},"content":"        String[] inputSplit \u003d input.split(\"\\\\|\");"},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"        typeOfTask \u003d inputSplit[0];"},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"        String status \u003d inputSplit[1];"},{"lineNumber":49,"author":{"gitId":"OhJunMing"},"content":"        Boolean isDone;"},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"        description \u003d inputSplit[2];"},{"lineNumber":51,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":52,"author":{"gitId":"OhJunMing"},"content":"        if (status.equals(\"DONE\")) {"},{"lineNumber":53,"author":{"gitId":"OhJunMing"},"content":"            isDone \u003d true;"},{"lineNumber":54,"author":{"gitId":"OhJunMing"},"content":"        } else { //status \"PENDING\""},{"lineNumber":55,"author":{"gitId":"OhJunMing"},"content":"            isDone \u003d false;"},{"lineNumber":56,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"OhJunMing"},"content":"        if (inputSplit.length \u003d\u003d 4) {"},{"lineNumber":58,"author":{"gitId":"OhJunMing"},"content":"            TimeParser timeParser \u003d new TimeParser();"},{"lineNumber":59,"author":{"gitId":"OhJunMing"},"content":"            time \u003d timeParser.parse(inputSplit[3]);"},{"lineNumber":60,"author":{"gitId":"OhJunMing"},"content":"        } else {"},{"lineNumber":61,"author":{"gitId":"OhJunMing"},"content":"            time \u003d null;"},{"lineNumber":62,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"OhJunMing"},"content":"        return new ListParser(typeOfTask, isDone, description, time);"},{"lineNumber":64,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":66,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"OhJunMing"},"content":"     * Returns typeOfTask attribute."},{"lineNumber":68,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"OhJunMing"},"content":"     * @return typeOfTask"},{"lineNumber":70,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"OhJunMing"},"content":"    public String getTypeOfTask() {"},{"lineNumber":72,"author":{"gitId":"OhJunMing"},"content":"        return typeOfTask;"},{"lineNumber":73,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":75,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"OhJunMing"},"content":"     * Returns isDone attribute."},{"lineNumber":77,"author":{"gitId":"OhJunMing"},"content":"     * @return isDone"},{"lineNumber":78,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"OhJunMing"},"content":"    public Boolean getIsDone() {"},{"lineNumber":80,"author":{"gitId":"OhJunMing"},"content":"        return isDone;"},{"lineNumber":81,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":83,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"OhJunMing"},"content":"     * Returns description attribute."},{"lineNumber":85,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"OhJunMing"},"content":"     * @return description"},{"lineNumber":87,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"OhJunMing"},"content":"    public String getDescription() {"},{"lineNumber":89,"author":{"gitId":"OhJunMing"},"content":"        return description;"},{"lineNumber":90,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":92,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"OhJunMing"},"content":"     * Returns time attribute."},{"lineNumber":94,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":95,"author":{"gitId":"OhJunMing"},"content":"     * @return time"},{"lineNumber":96,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"OhJunMing"},"content":"    public LocalDateTime getTime() {"},{"lineNumber":98,"author":{"gitId":"OhJunMing"},"content":"        return time;"},{"lineNumber":99,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":101,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":102,"author":{"gitId":"OhJunMing"},"content":"    public String toString() {"},{"lineNumber":103,"author":{"gitId":"OhJunMing"},"content":"        return \"|\" + typeOfTask + \"|\" + isDone + \"|\" + description + \"|\" + time + \"|\";"},{"lineNumber":104,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":105}},{"path":"src/main/java/Duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"import duke.common.Command;"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":" * Parses user input into typeOfTask, description, time."},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"public class Parser {"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"    private String typeOfTask;"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"    private String description;"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"    private LocalDateTime time;"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"     * Returns Parser."},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"     * @return Parser"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"    public Parser() {"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"        this.typeOfTask \u003d \"\";"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"        this.description \u003d \"\";"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"        this.time \u003d null;"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"     * Returns Parser."},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"     * @param typeOfTask Type of task : Todo, Deadline, Event."},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"     * @param description Task description."},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"     * @param time time of task."},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"     * @return Parser"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"    Parser(String typeOfTask, String description, LocalDateTime time) {"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"        this.typeOfTask \u003d typeOfTask;"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"        this.description \u003d description;"},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"        this.time \u003d time;"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":"     * Returns a Parser that represent the parsed user input."},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":"     * Parses user input into typeOfTask, description, time."},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"     * @param input user input."},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"     * @return Parser"},{"lineNumber":45,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"OhJunMing"},"content":"    public Parser parse(String input) {"},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"        String[] inputSplit \u003d input.split(\"/\");"},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"        typeOfTask \u003d inputSplit[0].replaceAll(\"\\\\s+\", \"\");"},{"lineNumber":49,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"        if (inputSplit.length \u003d\u003d 2) {"},{"lineNumber":51,"author":{"gitId":"OhJunMing"},"content":"            description \u003d inputSplit[1];"},{"lineNumber":52,"author":{"gitId":"OhJunMing"},"content":"        } else if (inputSplit.length \u003d\u003d 3) {"},{"lineNumber":53,"author":{"gitId":"OhJunMing"},"content":"            description \u003d inputSplit[1];"},{"lineNumber":54,"author":{"gitId":"OhJunMing"},"content":"            TimeParser timeParser \u003d new TimeParser();"},{"lineNumber":55,"author":{"gitId":"OhJunMing"},"content":"            time \u003d timeParser.parse(inputSplit[2]);"},{"lineNumber":56,"author":{"gitId":"OhJunMing"},"content":"        } else {"},{"lineNumber":57,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"OhJunMing"},"content":"        return new Parser(typeOfTask, description, time);"},{"lineNumber":59,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"OhJunMing"},"content":"     * Convert typeOfTask string into command."},{"lineNumber":62,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"OhJunMing"},"content":"     * @return Command"},{"lineNumber":64,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"OhJunMing"},"content":"    public Command getCommand() throws IllegalArgumentException {"},{"lineNumber":66,"author":{"gitId":"OhJunMing"},"content":"        return Command.valueOf(typeOfTask.toUpperCase());"},{"lineNumber":67,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"OhJunMing"},"content":"     * Returns typeOfTask attribute."},{"lineNumber":70,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"OhJunMing"},"content":"     * @return typeOfTask"},{"lineNumber":72,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"OhJunMing"},"content":"    public String getTypeOfTask() {"},{"lineNumber":74,"author":{"gitId":"OhJunMing"},"content":"        return typeOfTask;"},{"lineNumber":75,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"OhJunMing"},"content":"     * Returns description attribute."},{"lineNumber":78,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"OhJunMing"},"content":"     * @return description"},{"lineNumber":80,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"OhJunMing"},"content":"    public String getDescription() {"},{"lineNumber":82,"author":{"gitId":"OhJunMing"},"content":"        return description;"},{"lineNumber":83,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":85,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"OhJunMing"},"content":"     * Returns time attribute."},{"lineNumber":87,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"OhJunMing"},"content":"     * @return time"},{"lineNumber":89,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"OhJunMing"},"content":"    public LocalDateTime getTime() {"},{"lineNumber":91,"author":{"gitId":"OhJunMing"},"content":"        return time;"},{"lineNumber":92,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":94,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"OhJunMing"},"content":"     * Returns String of parsed user input."},{"lineNumber":96,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":98,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":100,"author":{"gitId":"OhJunMing"},"content":"    public String toString() {"},{"lineNumber":101,"author":{"gitId":"OhJunMing"},"content":"        return \"|\" + typeOfTask + \"|\" + description + \"|\" + time + \"|\";"},{"lineNumber":102,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":103}},{"path":"src/main/java/Duke/parser/TimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":" * Parses string time into LocalDateTime object."},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"public class TimeParser {"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"    private LocalDateTime time;"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"     * Returns LocalDateTime from String input."},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"     * @param input"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"     * @return LocalDataTime"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"    public LocalDateTime parse(String input) {"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"        LocalDateTime time \u003d LocalDateTime.parse(input, formatter);"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"        return time;"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":22}},{"path":"src/main/java/Duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"import java.nio.charset.StandardCharsets;"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"import java.nio.file.Files;"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"import java.nio.file.Path;"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"import duke.parser.ListParser;"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"import duke.task.Task;"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"import duke.task.TaskList;"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"public class Storage {"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"    private static Path filePath;"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"     * Retrieves file path of stored data."},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"    public void retrieveFilePath() {"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"            String home \u003d System.getProperty(\"user.dir\");"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"            Path directoryPath \u003d Paths.get(home.toString(), \"data\");"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"            Boolean directoryExists \u003d Files.exists(directoryPath);"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"            if (directoryExists.equals(false)) {"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"                Files.createDirectory(directoryPath);"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"            Path file \u003d Paths.get(directoryPath.toString(), \"Baron.txt\");"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"            Boolean fileExists \u003d Files.exists(file);"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"            if (fileExists.equals(false)) {"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"                Files.createFile(file);"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"            filePath \u003d file;"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"        } catch (IOException e) {"},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"            System.out.println(\"directory or file is already created.\");"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":"     * Saves taskList into Storage."},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"     * @param taskList"},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"OhJunMing"},"content":"    public void save(ArrayList\u003cTask\u003e taskList) {"},{"lineNumber":46,"author":{"gitId":"OhJunMing"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"            String data \u003d \"\";"},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":49,"author":{"gitId":"OhJunMing"},"content":"                data \u003d data + taskList.get(i).encode() + \"\\n\";"},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"OhJunMing"},"content":"            Files.write(filePath, data.getBytes(StandardCharsets.UTF_8));"},{"lineNumber":52,"author":{"gitId":"OhJunMing"},"content":"        } catch (IOException e) {"},{"lineNumber":53,"author":{"gitId":"OhJunMing"},"content":"            System.out.println(\"save error\");"},{"lineNumber":54,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":57,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"OhJunMing"},"content":"     * Loads taskList from text file into Storage."},{"lineNumber":59,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"OhJunMing"},"content":"     * @return TaskList"},{"lineNumber":61,"author":{"gitId":"OhJunMing"},"content":"     * @throws IOException"},{"lineNumber":62,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"OhJunMing"},"content":"    public TaskList load() {"},{"lineNumber":64,"author":{"gitId":"OhJunMing"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":65,"author":{"gitId":"OhJunMing"},"content":"        try {"},{"lineNumber":66,"author":{"gitId":"OhJunMing"},"content":"            retrieveFilePath();"},{"lineNumber":67,"author":{"gitId":"OhJunMing"},"content":"            List\u003cString\u003e s \u003d Files.readAllLines(filePath);"},{"lineNumber":68,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":69,"author":{"gitId":"OhJunMing"},"content":"            for (int i \u003d 0; i \u003c s.size(); i++) {"},{"lineNumber":70,"author":{"gitId":"OhJunMing"},"content":"                ListParser p \u003d new ListParser();"},{"lineNumber":71,"author":{"gitId":"OhJunMing"},"content":"                p \u003d p.parse(s.get(i));"},{"lineNumber":72,"author":{"gitId":"OhJunMing"},"content":"                taskList.populate(p);"},{"lineNumber":73,"author":{"gitId":"OhJunMing"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"OhJunMing"},"content":"        } catch (IOException e) {"},{"lineNumber":75,"author":{"gitId":"OhJunMing"},"content":"            System.out.println(\"Cannot load file\");"},{"lineNumber":76,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"OhJunMing"},"content":"        return taskList;"},{"lineNumber":78,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":79}},{"path":"src/main/java/Duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":" * Represents a Deadline."},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":" * Sub-class of Task."},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"public class Deadline extends Task {"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"    protected LocalDateTime by;"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"     * Returns a Deadline."},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"     * @param msg description of Deadline."},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"     * @param by LocalDateTime object."},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"     * @return Deadline"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"    public Deadline(String msg, LocalDateTime by) {"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"        super(msg);"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"        this.by \u003d by;"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"     * Returns a Deadline."},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"     * @param msg description of Deadline."},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"     * @param isDone boolean that tracks whether Deadline is completed."},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"     * @param by time of deadline."},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"     * @return Deadline"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"    Deadline(String msg, Boolean isDone, LocalDateTime by) {"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"        super(msg, isDone);"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"        this.by \u003d by;"},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":"     * Returns time deadline of Deadline."},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":"     * @return LocalDateTime"},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"    public LocalDateTime getTime() {"},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"        return by;"},{"lineNumber":45,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"     * Compare Deadlines."},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"OhJunMing"},"content":"     * @param task"},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"     * @return"},{"lineNumber":51,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"OhJunMing"},"content":"    public boolean equals(Task task) {"},{"lineNumber":54,"author":{"gitId":"OhJunMing"},"content":"        if (task instanceof Deadline) {"},{"lineNumber":55,"author":{"gitId":"OhJunMing"},"content":"            Deadline deadline \u003d (Deadline) task;"},{"lineNumber":56,"author":{"gitId":"OhJunMing"},"content":"            boolean a \u003d this.isDone.equals(deadline.getDone());"},{"lineNumber":57,"author":{"gitId":"OhJunMing"},"content":"            boolean b \u003d this.msg.equals(deadline.getMsg());"},{"lineNumber":58,"author":{"gitId":"OhJunMing"},"content":"            boolean c \u003d this.getTime().equals(deadline.getTime());"},{"lineNumber":59,"author":{"gitId":"OhJunMing"},"content":"            return a \u0026\u0026 b \u0026\u0026 c;"},{"lineNumber":60,"author":{"gitId":"OhJunMing"},"content":"        } else {"},{"lineNumber":61,"author":{"gitId":"OhJunMing"},"content":"            return false;"},{"lineNumber":62,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"OhJunMing"},"content":"     * Returns a Deadline that set boolean isDone as true."},{"lineNumber":66,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"OhJunMing"},"content":"     * @return Deadline marked as done."},{"lineNumber":68,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":70,"author":{"gitId":"OhJunMing"},"content":"    public Deadline setDone() {"},{"lineNumber":71,"author":{"gitId":"OhJunMing"},"content":"        System.out.println(\"deadline set done\");"},{"lineNumber":72,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":73,"author":{"gitId":"OhJunMing"},"content":"        return new Deadline(this.msg, true, this.by);"},{"lineNumber":74,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":76,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"OhJunMing"},"content":"     * Encodes Task to string format for storage."},{"lineNumber":78,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":80,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":82,"author":{"gitId":"OhJunMing"},"content":"    public String encode() {"},{"lineNumber":83,"author":{"gitId":"OhJunMing"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"},{"lineNumber":84,"author":{"gitId":"OhJunMing"},"content":"        return \"D\" + \"|\" + super.encode() + \"|\" + by.format(formatter);"},{"lineNumber":85,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":87,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":88,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"OhJunMing"},"content":"     * Returns a String that describes Deadline."},{"lineNumber":90,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":92,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":94,"author":{"gitId":"OhJunMing"},"content":"    public String toString() {"},{"lineNumber":95,"author":{"gitId":"OhJunMing"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\");"},{"lineNumber":96,"author":{"gitId":"OhJunMing"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by.format(formatter) + \")\";"},{"lineNumber":97,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":98}},{"path":"src/main/java/Duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":" * Represents an Event."},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":" * Sub-class of Task."},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"public class Event extends Task {"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"    protected LocalDateTime time;"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"     * Returns an Event."},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"     * @param msg description of Event."},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"     * @param time time of Event."},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"     * @return Event"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"    public Event(String msg, LocalDateTime time) {"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"        super(msg);"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"        this.time \u003d time;"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"     * Returns an Event."},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"     * @param msg description of Event."},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"     * @param isDone boolean that tracks whether Event is completed."},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"     * @param time time of Event."},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"     * @return Event"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"    Event(String msg, Boolean isDone, LocalDateTime time) {"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"        super(msg, isDone);"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"        this.time \u003d time;"},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":"    public LocalDateTime getTime() {"},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":"        return time;"},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"     * Compare Events."},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"OhJunMing"},"content":"     * @param task"},{"lineNumber":46,"author":{"gitId":"OhJunMing"},"content":"     * @return"},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"OhJunMing"},"content":"    public boolean equals(Task task) {"},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"        if (task instanceof Event) {"},{"lineNumber":51,"author":{"gitId":"OhJunMing"},"content":"            Event event \u003d (Event) task;"},{"lineNumber":52,"author":{"gitId":"OhJunMing"},"content":"            boolean a \u003d this.isDone.equals(event.getDone());"},{"lineNumber":53,"author":{"gitId":"OhJunMing"},"content":"            boolean b \u003d this.msg.equals(event.getMsg());"},{"lineNumber":54,"author":{"gitId":"OhJunMing"},"content":"            boolean c \u003d this.getTime().equals(event.getTime());"},{"lineNumber":55,"author":{"gitId":"OhJunMing"},"content":"            return a \u0026\u0026 b \u0026\u0026 c;"},{"lineNumber":56,"author":{"gitId":"OhJunMing"},"content":"        } else {"},{"lineNumber":57,"author":{"gitId":"OhJunMing"},"content":"            return false;"},{"lineNumber":58,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":61,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":62,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"OhJunMing"},"content":"     * Returns an Event that set boolean isDone as true."},{"lineNumber":64,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"OhJunMing"},"content":"     * @return Event marked as done."},{"lineNumber":66,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":68,"author":{"gitId":"OhJunMing"},"content":"    public Event setDone() {"},{"lineNumber":69,"author":{"gitId":"OhJunMing"},"content":"        System.out.println(\"event set done\");"},{"lineNumber":70,"author":{"gitId":"OhJunMing"},"content":"        return new Event(this.msg, true, this.time);"},{"lineNumber":71,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":73,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"OhJunMing"},"content":"     * Encodes Task to string format for storage."},{"lineNumber":75,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":77,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":79,"author":{"gitId":"OhJunMing"},"content":"    public String encode() {"},{"lineNumber":80,"author":{"gitId":"OhJunMing"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");"},{"lineNumber":81,"author":{"gitId":"OhJunMing"},"content":"        return \"E\" + \"|\" + super.encode() + \"|\" + time.format(formatter);"},{"lineNumber":82,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":84,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"OhJunMing"},"content":"     * Returns a String that describes Event."},{"lineNumber":86,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":88,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":90,"author":{"gitId":"OhJunMing"},"content":"    public String toString() {"},{"lineNumber":91,"author":{"gitId":"OhJunMing"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy hh:mm a\");"},{"lineNumber":92,"author":{"gitId":"OhJunMing"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + time.format(formatter) + \")\";"},{"lineNumber":93,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":94}},{"path":"src/main/java/Duke/task/SearchList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"import duke.common.Response;"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":" * List to record search results from find user command of keyword."},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"public class SearchList {"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"    SearchList() {"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"        tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"     * Adds matched task to taskList."},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"     * @param task"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"    public void add(Task task) {"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"        tasks.add(task);"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"     * Prints taskList."},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"    public String list() {"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"        String msg \u003d \"\";"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"            msg +\u003d (i + 1) + \".\" + tasks.get(i) + \"\\n\";"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"        return Response.LIST.toString() + msg;"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"}"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":""}],"authorContributionMap":{"OhJunMing":37}},{"path":"src/main/java/Duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":" * Represents a Task."},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"    protected String msg;"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"    protected Boolean isDone;"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"     * Returns a Task."},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"     * @param msg description of task."},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"     * @return Task"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"    Task(String msg) {"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"        this.msg \u003d msg;"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"        this.isDone \u003d false;"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"     * Returns a Task."},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"     * @param msg description of task."},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"     * @param isDone boolean that tracks whether task is completed."},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"     * @return Task"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"    Task(String msg, Boolean isDone) {"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"        this.msg \u003d msg;"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"     * @param task"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"     * @return boolean"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"    public boolean equals(Task task) {"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"        boolean a \u003d this.isDone.equals(task.getDone());"},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":"        boolean b \u003d this.msg.equals(task.getMsg());"},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":"        return a \u0026\u0026 b;"},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"     * Returns a Task that set boolean isDone as true."},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"OhJunMing"},"content":"     * @return Task Marks Task as done."},{"lineNumber":46,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"    public Task setDone() {"},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"        System.out.println(\"task set done\");"},{"lineNumber":49,"author":{"gitId":"OhJunMing"},"content":"        return new Task(this.msg, true);"},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":52,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"OhJunMing"},"content":"     * Gets Message description."},{"lineNumber":54,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":56,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"OhJunMing"},"content":"    public String getMsg() {"},{"lineNumber":58,"author":{"gitId":"OhJunMing"},"content":"        return msg;"},{"lineNumber":59,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":61,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"OhJunMing"},"content":"     * Gets Boolean of task completion status."},{"lineNumber":63,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"OhJunMing"},"content":"     * @return Boolean"},{"lineNumber":65,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"OhJunMing"},"content":"    public Boolean getDone() {"},{"lineNumber":67,"author":{"gitId":"OhJunMing"},"content":"        return isDone;"},{"lineNumber":68,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"OhJunMing"},"content":"     * Encodes Task to string format for storage."},{"lineNumber":71,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":73,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"OhJunMing"},"content":"    public String encode() {"},{"lineNumber":75,"author":{"gitId":"OhJunMing"},"content":"        if (isDone.equals(true)) {"},{"lineNumber":76,"author":{"gitId":"OhJunMing"},"content":"            return \"DONE\" + \"|\" + this.msg;"},{"lineNumber":77,"author":{"gitId":"OhJunMing"},"content":"        } else {"},{"lineNumber":78,"author":{"gitId":"OhJunMing"},"content":"            return \"PENDING\" + \"|\" + this.msg;"},{"lineNumber":79,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":82,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":83,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"OhJunMing"},"content":"     * Returns a String that describes Task."},{"lineNumber":85,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":87,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":89,"author":{"gitId":"OhJunMing"},"content":"    public String toString() {"},{"lineNumber":90,"author":{"gitId":"OhJunMing"},"content":"        if (isDone.equals(true)) {"},{"lineNumber":91,"author":{"gitId":"OhJunMing"},"content":"            return \"[\" + \"DONE\" + \"] \" + msg;"},{"lineNumber":92,"author":{"gitId":"OhJunMing"},"content":"        } else {"},{"lineNumber":93,"author":{"gitId":"OhJunMing"},"content":"            return \"[ ] \" + msg;"},{"lineNumber":94,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":96}},{"path":"src/main/java/Duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"import duke.common.Response;"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"import duke.exception.InvalidTaskNumber;"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"import duke.parser.ListParser;"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":" * Represents a list of task objects."},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"public class TaskList {"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"    public TaskList() {"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"     * Getter for arraylist of tasks."},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"        return tasks;"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"     * Returns number of tasks in taskList."},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"     * @return int"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"    public int getNumberOfTasks() {"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"        return tasks.size();"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"     * Adds task from storage to tasklist."},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":"     * @param p ListParser."},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":"    public void populate(ListParser p) {"},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":"        String typeOfTask \u003d p.getTypeOfTask();"},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":"        Boolean isDone \u003d p.getIsDone();"},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"        String description \u003d p.getDescription();"},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"        LocalDateTime time \u003d p.getTime();"},{"lineNumber":45,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":46,"author":{"gitId":"OhJunMing"},"content":"        switch(typeOfTask) {"},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"        case \"T\":"},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"            tasks.add(new Todo(description, isDone));"},{"lineNumber":49,"author":{"gitId":"OhJunMing"},"content":"            break;"},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"        case \"D\":"},{"lineNumber":51,"author":{"gitId":"OhJunMing"},"content":"            tasks.add(new Deadline(description, isDone, time));"},{"lineNumber":52,"author":{"gitId":"OhJunMing"},"content":"            break;"},{"lineNumber":53,"author":{"gitId":"OhJunMing"},"content":"        case \"E\":"},{"lineNumber":54,"author":{"gitId":"OhJunMing"},"content":"            tasks.add(new Event(description, isDone, time));"},{"lineNumber":55,"author":{"gitId":"OhJunMing"},"content":"            break;"},{"lineNumber":56,"author":{"gitId":"OhJunMing"},"content":"        default:"},{"lineNumber":57,"author":{"gitId":"OhJunMing"},"content":"            System.out.println(\"wrong typeOfTask\");"},{"lineNumber":58,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":61,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"OhJunMing"},"content":"     * Adds task to taskList."},{"lineNumber":63,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"OhJunMing"},"content":"     * @param task"},{"lineNumber":65,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"OhJunMing"},"content":"    public void add(Task task) {"},{"lineNumber":67,"author":{"gitId":"OhJunMing"},"content":"        tasks.add(task);"},{"lineNumber":68,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":70,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"OhJunMing"},"content":"     * Checks for duplicate task input."},{"lineNumber":72,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"OhJunMing"},"content":"     * @param newTask"},{"lineNumber":74,"author":{"gitId":"OhJunMing"},"content":"     * @return isDuplicate Boolean."},{"lineNumber":75,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"OhJunMing"},"content":"    public Boolean detectDuplicates(Task newTask) {"},{"lineNumber":77,"author":{"gitId":"OhJunMing"},"content":"        Boolean isDuplicate \u003d false;"},{"lineNumber":78,"author":{"gitId":"OhJunMing"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":79,"author":{"gitId":"OhJunMing"},"content":"            if (tasks.get(i).equals(newTask)) {"},{"lineNumber":80,"author":{"gitId":"OhJunMing"},"content":"                isDuplicate \u003d true;"},{"lineNumber":81,"author":{"gitId":"OhJunMing"},"content":"                break;"},{"lineNumber":82,"author":{"gitId":"OhJunMing"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"OhJunMing"},"content":"        return isDuplicate;"},{"lineNumber":85,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":87,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"OhJunMing"},"content":"     * Deletes task from taskList."},{"lineNumber":89,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"OhJunMing"},"content":"     * @param i"},{"lineNumber":91,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":92,"author":{"gitId":"OhJunMing"},"content":"     * @throws InvalidTaskNumber"},{"lineNumber":93,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"OhJunMing"},"content":"    public String delete(int i) throws InvalidTaskNumber {"},{"lineNumber":95,"author":{"gitId":"OhJunMing"},"content":"        if (i \u003e\u003d tasks.size() || i \u003c 0) {"},{"lineNumber":96,"author":{"gitId":"OhJunMing"},"content":"            throw new InvalidTaskNumber(tasks.size());"},{"lineNumber":97,"author":{"gitId":"OhJunMing"},"content":"        } else {"},{"lineNumber":98,"author":{"gitId":"OhJunMing"},"content":"            Task task \u003d tasks.get(i);"},{"lineNumber":99,"author":{"gitId":"OhJunMing"},"content":"            assert task !\u003d null : \"task should not be empty\";"},{"lineNumber":100,"author":{"gitId":"OhJunMing"},"content":"            tasks.remove(i);"},{"lineNumber":101,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":102,"author":{"gitId":"OhJunMing"},"content":"            String reply \u003d Response.DELETE.toString() + task + \"\\n\" + this.status();"},{"lineNumber":103,"author":{"gitId":"OhJunMing"},"content":"            return reply;"},{"lineNumber":104,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":107,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":108,"author":{"gitId":"OhJunMing"},"content":"     * Marks Task as done."},{"lineNumber":109,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":110,"author":{"gitId":"OhJunMing"},"content":"     * @param i"},{"lineNumber":111,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":112,"author":{"gitId":"OhJunMing"},"content":"     * @throws InvalidTaskNumber"},{"lineNumber":113,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"OhJunMing"},"content":"    public String markAsDone(int i) throws InvalidTaskNumber {"},{"lineNumber":115,"author":{"gitId":"OhJunMing"},"content":"        String reply \u003d \"\";"},{"lineNumber":116,"author":{"gitId":"OhJunMing"},"content":"        if (i \u003e\u003d tasks.size() || i \u003c 0) {"},{"lineNumber":117,"author":{"gitId":"OhJunMing"},"content":"            throw new InvalidTaskNumber(tasks.size());"},{"lineNumber":118,"author":{"gitId":"OhJunMing"},"content":"        } else {"},{"lineNumber":119,"author":{"gitId":"OhJunMing"},"content":"            tasks.set(i, tasks.get(i).setDone());"},{"lineNumber":120,"author":{"gitId":"OhJunMing"},"content":"            reply \u003d Response.DONE.toString() + tasks.get(i) + \"\\n\";"},{"lineNumber":121,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"OhJunMing"},"content":"        return reply;"},{"lineNumber":123,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"OhJunMing"},"content":"     * Locates tasks matched with keyword."},{"lineNumber":126,"author":{"gitId":"OhJunMing"},"content":"     * @param keyword"},{"lineNumber":127,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":128,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":129,"author":{"gitId":"OhJunMing"},"content":"    public String find(String keyword) {"},{"lineNumber":130,"author":{"gitId":"OhJunMing"},"content":"        SearchList searchList \u003d new SearchList();"},{"lineNumber":131,"author":{"gitId":"OhJunMing"},"content":"        String reply \u003d \"\";"},{"lineNumber":132,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":133,"author":{"gitId":"OhJunMing"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":134,"author":{"gitId":"OhJunMing"},"content":"            String description \u003d tasks.get(i).getMsg();"},{"lineNumber":135,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":136,"author":{"gitId":"OhJunMing"},"content":"            if (description.contains(keyword)) {"},{"lineNumber":137,"author":{"gitId":"OhJunMing"},"content":"                searchList.add(tasks.get(i));"},{"lineNumber":138,"author":{"gitId":"OhJunMing"},"content":"            }"},{"lineNumber":139,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"OhJunMing"},"content":"        if (searchList.list().equals(\"\")) {"},{"lineNumber":141,"author":{"gitId":"OhJunMing"},"content":"            reply \u003d \"Keyword cannot be found in tasklist\";"},{"lineNumber":142,"author":{"gitId":"OhJunMing"},"content":"        } else {"},{"lineNumber":143,"author":{"gitId":"OhJunMing"},"content":"            reply \u003d searchList.list();"},{"lineNumber":144,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":145,"author":{"gitId":"OhJunMing"},"content":"        return reply;"},{"lineNumber":146,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":148,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":149,"author":{"gitId":"OhJunMing"},"content":"     * Prints list."},{"lineNumber":150,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":151,"author":{"gitId":"OhJunMing"},"content":"    public String list() {"},{"lineNumber":152,"author":{"gitId":"OhJunMing"},"content":"        String msg \u003d \"\";"},{"lineNumber":153,"author":{"gitId":"OhJunMing"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":154,"author":{"gitId":"OhJunMing"},"content":"            msg +\u003d (i + 1) + \".\" + tasks.get(i) + \"\\n\";"},{"lineNumber":155,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"OhJunMing"},"content":"        return Response.LIST.toString() + msg;"},{"lineNumber":157,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":158,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":159,"author":{"gitId":"OhJunMing"},"content":"    public String status() {"},{"lineNumber":160,"author":{"gitId":"OhJunMing"},"content":"        return \"Now you have \" + tasks.size() + \" tasks in the list.\\n\";"},{"lineNumber":161,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":162}},{"path":"src/main/java/Duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":" * Represents a Todo."},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":" * Sub-class of Task."},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":" *"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":" * @author Oh Jun Ming"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":" * @version 1.0"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"public class Todo extends Task {"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"     * Returns a Todo."},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"     * @param msg description of Todo."},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"     * @return Todo"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"    public Todo(String msg) {"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"        super(msg);"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"     * Returns a Todo."},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"     * @param msg description of Todo."},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"     * @param isDone boolean that tracks whether Todo is completed."},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"     * @return Todo"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"    Todo(String msg, Boolean isDone) {"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"        super(msg, isDone);"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"     * Returns a Todo object that set boolean isDone as true."},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"     * @return Todo Marks Todo as done."},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":"    public Todo setDone() {"},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":"        System.out.println(\"Todo set done\");"},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":"        return new Todo(this.msg, true);"},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"     * Encode format for save to storage."},{"lineNumber":45,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"OhJunMing"},"content":"     * @return"},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"OhJunMing"},"content":"    public String encode() {"},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"        return \"T\" + \"|\" + super.encode();"},{"lineNumber":51,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"OhJunMing"},"content":"     * Compare Todo."},{"lineNumber":54,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"OhJunMing"},"content":"     * @param task"},{"lineNumber":56,"author":{"gitId":"OhJunMing"},"content":"     * @return"},{"lineNumber":57,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":59,"author":{"gitId":"OhJunMing"},"content":"    public boolean equals(Task task) {"},{"lineNumber":60,"author":{"gitId":"OhJunMing"},"content":"        if (task instanceof Todo) {"},{"lineNumber":61,"author":{"gitId":"OhJunMing"},"content":"            Todo todo \u003d (Todo) task;"},{"lineNumber":62,"author":{"gitId":"OhJunMing"},"content":"            boolean a \u003d this.isDone.equals(todo.getDone());"},{"lineNumber":63,"author":{"gitId":"OhJunMing"},"content":"            boolean b \u003d this.msg.equals(todo.getMsg());"},{"lineNumber":64,"author":{"gitId":"OhJunMing"},"content":"            return a \u0026\u0026 b;"},{"lineNumber":65,"author":{"gitId":"OhJunMing"},"content":"        } else {"},{"lineNumber":66,"author":{"gitId":"OhJunMing"},"content":"            return false;"},{"lineNumber":67,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"OhJunMing"},"content":"     * Returns a String that describes Todo."},{"lineNumber":71,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"OhJunMing"},"content":"     * @return String"},{"lineNumber":73,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":75,"author":{"gitId":"OhJunMing"},"content":"    public String toString() {"},{"lineNumber":76,"author":{"gitId":"OhJunMing"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":77,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":78}},{"path":"src/main/java/Duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"OhJunMing"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"OhJunMing"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"OhJunMing"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":52,"author":{"gitId":"OhJunMing"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"OhJunMing"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":56,"author":{"gitId":"OhJunMing"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"OhJunMing"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"OhJunMing"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"OhJunMing"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":61}},{"path":"src/main/java/Duke/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":12}},{"path":"src/main/java/Duke/ui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"import duke.Duke;"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":" * A GUI for Duke using FXML."},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"            stage.show();"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"            stage.show();"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"            String greet \u003d duke.greet();"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"            stage.setTitle(greet);"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"        } catch (IOException e) {"},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"            e.printStackTrace();"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":35}},{"path":"src/main/java/Duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"import javafx.fxml.FXML;"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"    private VBox dialogContainer;"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"    private TextField userInput;"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"    private Button sendButton;"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"    private Duke duke;"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"     * Included custom images: Rocket, Tiger"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaTiger.png\"));"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaRocket.png\"));"},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"    public void initialize() {"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":"        duke \u003d d;"},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"OhJunMing"},"content":"    @FXML"},{"lineNumber":46,"author":{"gitId":"OhJunMing"},"content":"    private void handleUserInput() {"},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":49,"author":{"gitId":"OhJunMing"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":51,"author":{"gitId":"OhJunMing"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":52,"author":{"gitId":"OhJunMing"},"content":"        );"},{"lineNumber":53,"author":{"gitId":"OhJunMing"},"content":"        userInput.clear();"},{"lineNumber":54,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":55}},{"path":"src/main/java/Duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"import duke.common.Command;"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"import duke.exception.DuplicateTask;"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"import duke.exception.EmptyDescription;"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"import duke.exception.InvalidTaskNumber;"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"import duke.exception.InvalidTypeOfTask;"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"import duke.parser.Parser;"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":" *"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":" */"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"public class Ui {"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"    private Boolean shouldExit \u003d false;"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"    private Duke duke;"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"     * Ui constructor."},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"     * @param duke"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"    public Ui(Duke duke) {"},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"        this.duke \u003d duke;"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"     * Returns Duke response to user input."},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"     * @param input user command line input."},{"lineNumber":31,"author":{"gitId":"OhJunMing"},"content":"     * @return String Duke response."},{"lineNumber":32,"author":{"gitId":"OhJunMing"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"OhJunMing"},"content":"    public String readCommand(String input) {"},{"lineNumber":34,"author":{"gitId":"OhJunMing"},"content":"        String response \u003d \"\";"},{"lineNumber":35,"author":{"gitId":"OhJunMing"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"OhJunMing"},"content":"            assert shouldExit \u003d\u003d true : \"shouldExit boolean false\";"},{"lineNumber":37,"author":{"gitId":"OhJunMing"},"content":"            Parser p \u003d new Parser();"},{"lineNumber":38,"author":{"gitId":"OhJunMing"},"content":"            p \u003d p.parse(input);"},{"lineNumber":39,"author":{"gitId":"OhJunMing"},"content":"            Command command \u003d p.getCommand();"},{"lineNumber":40,"author":{"gitId":"OhJunMing"},"content":"            switch (command) {"},{"lineNumber":41,"author":{"gitId":"OhJunMing"},"content":"            case BYE:"},{"lineNumber":42,"author":{"gitId":"OhJunMing"},"content":"                shouldExit \u003d true;"},{"lineNumber":43,"author":{"gitId":"OhJunMing"},"content":"                response \u003d duke.exit();"},{"lineNumber":44,"author":{"gitId":"OhJunMing"},"content":"                break;"},{"lineNumber":45,"author":{"gitId":"OhJunMing"},"content":"            case LIST:"},{"lineNumber":46,"author":{"gitId":"OhJunMing"},"content":"                response \u003d duke.list();"},{"lineNumber":47,"author":{"gitId":"OhJunMing"},"content":"                break;"},{"lineNumber":48,"author":{"gitId":"OhJunMing"},"content":"            case FIND:"},{"lineNumber":49,"author":{"gitId":"OhJunMing"},"content":"                response \u003d duke.find(p);"},{"lineNumber":50,"author":{"gitId":"OhJunMing"},"content":"                break;"},{"lineNumber":51,"author":{"gitId":"OhJunMing"},"content":"            case DONE:"},{"lineNumber":52,"author":{"gitId":"OhJunMing"},"content":"                response \u003d duke.markAsDone(p);"},{"lineNumber":53,"author":{"gitId":"OhJunMing"},"content":"                break;"},{"lineNumber":54,"author":{"gitId":"OhJunMing"},"content":"            case DELETE:"},{"lineNumber":55,"author":{"gitId":"OhJunMing"},"content":"                response \u003d duke.deleteTask(p);"},{"lineNumber":56,"author":{"gitId":"OhJunMing"},"content":"                break;"},{"lineNumber":57,"author":{"gitId":"OhJunMing"},"content":"            case TODO:"},{"lineNumber":58,"author":{"gitId":"OhJunMing"},"content":"            case DEADLINE:"},{"lineNumber":59,"author":{"gitId":"OhJunMing"},"content":"            case EVENT:"},{"lineNumber":60,"author":{"gitId":"OhJunMing"},"content":"                response \u003d duke.addTask(p);"},{"lineNumber":61,"author":{"gitId":"OhJunMing"},"content":"                break;"},{"lineNumber":62,"author":{"gitId":"OhJunMing"},"content":"            default:"},{"lineNumber":63,"author":{"gitId":"OhJunMing"},"content":"                throw new InvalidTypeOfTask();"},{"lineNumber":64,"author":{"gitId":"OhJunMing"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"OhJunMing"},"content":"            duke.save();"},{"lineNumber":66,"author":{"gitId":"OhJunMing"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":67,"author":{"gitId":"OhJunMing"},"content":"            InvalidTypeOfTask error \u003d new InvalidTypeOfTask();"},{"lineNumber":68,"author":{"gitId":"OhJunMing"},"content":"            response \u003d error.toString();"},{"lineNumber":69,"author":{"gitId":"OhJunMing"},"content":"        } catch (InvalidTypeOfTask e) {"},{"lineNumber":70,"author":{"gitId":"OhJunMing"},"content":"            response \u003d e.toString();"},{"lineNumber":71,"author":{"gitId":"OhJunMing"},"content":"        } catch (EmptyDescription e) {"},{"lineNumber":72,"author":{"gitId":"OhJunMing"},"content":"            response \u003d e.toString();"},{"lineNumber":73,"author":{"gitId":"OhJunMing"},"content":"        } catch (InvalidTaskNumber e) {"},{"lineNumber":74,"author":{"gitId":"OhJunMing"},"content":"            response \u003d e.toString();"},{"lineNumber":75,"author":{"gitId":"OhJunMing"},"content":"        } catch (DuplicateTask e) {"},{"lineNumber":76,"author":{"gitId":"OhJunMing"},"content":"            response \u003d e.toString();"},{"lineNumber":77,"author":{"gitId":"OhJunMing"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"OhJunMing"},"content":"        return response;"},{"lineNumber":79,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":80}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"195.0\" prefWidth\u003d\"464.0\" style\u003d\"-fx-background-color: green;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"83.0\" fitWidth\u003d\"81.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"OhJunMing":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"OhJunMing":19}},{"path":"src/test/java/duke/parser/TimeParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"class TimeParserTest {"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"    private String msg \u003d \"01-02-2023 22:34\";"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"    void parse() {"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"        TimeParser timeParser \u003d new TimeParser();"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"        System.out.println(timeParser.parse(msg));"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":"        assertEquals(\"2023-02-01T22:34\", timeParser.parse(msg).toString());"},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":18}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"class TodoTest {"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"    void setDone() {"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"        Todo todo \u003d new Todo(\"random\", false);"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"        assertEquals(true, todo.setDone().isDone);"},{"lineNumber":15,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":17,"author":{"gitId":"OhJunMing"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"    void encode() {"},{"lineNumber":19,"author":{"gitId":"OhJunMing"},"content":"        Todo todo \u003d new Todo(\"random\", false);"},{"lineNumber":20,"author":{"gitId":"OhJunMing"},"content":"        String expected \u003d \"T\" + \"|\" + \"PENDING\" + \"|\" + todo.msg;"},{"lineNumber":21,"author":{"gitId":"OhJunMing"},"content":"        assertEquals(expected, todo.encode());"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":24,"author":{"gitId":"OhJunMing"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"OhJunMing"},"content":"    void testToString() {"},{"lineNumber":26,"author":{"gitId":"OhJunMing"},"content":"        Todo todo \u003d new Todo(\"random\", false);"},{"lineNumber":27,"author":{"gitId":"OhJunMing"},"content":"        String expected \u003d \"[T]\" + \"[ ] \" + todo.msg;"},{"lineNumber":28,"author":{"gitId":"OhJunMing"},"content":"        assertEquals(expected, todo.toString());"},{"lineNumber":29,"author":{"gitId":"OhJunMing"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"OhJunMing"},"content":"}"}],"authorContributionMap":{"OhJunMing":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"OhJunMing"},"content":"todo/read book"},{"lineNumber":2,"author":{"gitId":"OhJunMing"},"content":"deadline/return book/06-08-2021 12:00"},{"lineNumber":3,"author":{"gitId":"OhJunMing"},"content":"event/project meeting/01-04-2021 23:59"},{"lineNumber":4,"author":{"gitId":"OhJunMing"},"content":"todo/join sports club"},{"lineNumber":5,"author":{"gitId":"OhJunMing"},"content":"todo/borrow book"},{"lineNumber":6,"author":{"gitId":"OhJunMing"},"content":"deadline/burn book/01-02-2023 22:34"},{"lineNumber":7,"author":{"gitId":"OhJunMing"},"content":"event/project debrief/03-04-2021 22:11"},{"lineNumber":8,"author":{"gitId":"OhJunMing"},"content":"list"},{"lineNumber":9,"author":{"gitId":"OhJunMing"},"content":"done/1"},{"lineNumber":10,"author":{"gitId":"OhJunMing"},"content":"done/4"},{"lineNumber":11,"author":{"gitId":"OhJunMing"},"content":"done/2"},{"lineNumber":12,"author":{"gitId":"OhJunMing"},"content":"done/3"},{"lineNumber":13,"author":{"gitId":"OhJunMing"},"content":"list"},{"lineNumber":14,"author":{"gitId":"OhJunMing"},"content":"bye"}],"authorContributionMap":{"OhJunMing":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"OhJunMing"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":22,"author":{"gitId":"OhJunMing"},"content":""},{"lineNumber":23,"author":{"gitId":"OhJunMing"},"content":"pause"}],"authorContributionMap":{"OhJunMing":3,"-":20}}]
