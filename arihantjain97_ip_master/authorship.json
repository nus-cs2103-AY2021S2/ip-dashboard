[{"path":"data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"To be or not to be?"}],"authorContributionMap":{"arihantjain97":1}},{"path":"src/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"D | 0 | deadtest | 2020-02-01"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"E | 0 | tasktest | 2020-02-01 0800-0900"}],"authorContributionMap":{"arihantjain97":2}},{"path":"src/main/java/BaseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"public abstract class BaseException extends Exception{"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"    public String message;"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"    public BaseException(String message) {"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"        this.message \u003d message;"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"    public String getMessage() {"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"        return message;"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":11}},{"path":"src/main/java/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"public class ByeCommand extends Command{"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"        //System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"        ui.byeMsg();"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"    public Boolean isExit() {"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"        return true;"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":12}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"abstract class Command {"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException.EmptyTaskListError, DukeException.TaskOutOfBoundsError, DukeException.NoMatchFound, DukeException.FileLoadError;"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"    public abstract Boolean isExit();"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":4}},{"path":"src/main/java/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":" * Represents a Deadline Task."},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":" * @author Arihant Jain"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":" */"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"public class Deadlines extends Task {"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"     * The By."},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"    private String by;"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"     * The Date."},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"    private LocalDate date;"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"     * Instantiates a new Deadlines."},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"     * @param description the task description"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"     * @param by          the by"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":"    @SuppressWarnings(\"checkstyle:HiddenField\")"},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"    public Deadlines(String description, String by) {"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"        super(description);"},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":"        this.by \u003d by;"},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":"        setDate(this.by);"},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":"     * Sets date."},{"lineNumber":34,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"arihantjain97"},"content":"     * @param by the by String"},{"lineNumber":36,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"arihantjain97"},"content":"    public void setDate(String by) {"},{"lineNumber":38,"author":{"gitId":"arihantjain97"},"content":"        String[] byArr \u003d by.split(\"-\");"},{"lineNumber":39,"author":{"gitId":"arihantjain97"},"content":"        this.date \u003d LocalDate.of(Integer.parseInt(byArr[0]),"},{"lineNumber":40,"author":{"gitId":"arihantjain97"},"content":"                Integer.parseInt(byArr[1]),"},{"lineNumber":41,"author":{"gitId":"arihantjain97"},"content":"                Integer.parseInt(byArr[2]));"},{"lineNumber":42,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":44,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"arihantjain97"},"content":"     * Get date string."},{"lineNumber":46,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"arihantjain97"},"content":"     * @return the string"},{"lineNumber":48,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"arihantjain97"},"content":"    public String getDate() {"},{"lineNumber":50,"author":{"gitId":"arihantjain97"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy\");"},{"lineNumber":51,"author":{"gitId":"arihantjain97"},"content":"        return this.date.format(format);"},{"lineNumber":52,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":54,"author":{"gitId":"arihantjain97"},"content":"    public String getBy() {"},{"lineNumber":55,"author":{"gitId":"arihantjain97"},"content":"        return this.by;"},{"lineNumber":56,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":58,"author":{"gitId":"arihantjain97"},"content":"    public String getDescription() {"},{"lineNumber":59,"author":{"gitId":"arihantjain97"},"content":"        return this.description;"},{"lineNumber":60,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":62,"author":{"gitId":"arihantjain97"},"content":"    /***"},{"lineNumber":63,"author":{"gitId":"arihantjain97"},"content":"     * Get list variation Deadline Task String."},{"lineNumber":64,"author":{"gitId":"arihantjain97"},"content":"     * @return String Deadline Task String"},{"lineNumber":65,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"arihantjain97"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"arihantjain97"},"content":"    public String toString() {"},{"lineNumber":68,"author":{"gitId":"arihantjain97"},"content":"        return \"[D]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description"},{"lineNumber":69,"author":{"gitId":"arihantjain97"},"content":"                + \" (by: \" + this.getDate() + \")\";"},{"lineNumber":70,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":71}},{"path":"src/main/java/DeadlinesCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"public class DeadlinesCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"    private String fullCommand;"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"    public DeadlinesCommand(String fullCommand) {"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException.FileLoadError {"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"        taskList.addTask(new Deadlines(fullCommand.substring(9, fullCommand.indexOf(\u0027/\u0027) - 1),"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"                fullCommand.substring(fullCommand.indexOf(\u0027/\u0027) + 4)));"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"        ui.taskAddMsg(taskList);"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"        storage.save(taskList);"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"        /* System.out.println(\"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"                + taskList.getTasksList().get(taskList.getTasksCount() - 1)"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"                + \"\\nNow you have \" + taskList.getTasksCount() + \" tasks in the list.\");"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"         */"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"    public Boolean isExit() {"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"        return false;"},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"}"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":""}],"authorContributionMap":{"arihantjain97":23}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"    private String fullCommand;"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"    private int delTaskNum;"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"    public DeleteCommand(String fullCommand) {"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"        this.delTaskNum \u003d Integer.parseInt(fullCommand.replaceAll(\"[^0-9]\", \"\"));"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException.TaskOutOfBoundsError, DukeException.FileLoadError {"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"        //check whether within range"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"        int numOfTasks \u003d taskList.getTasksCount();"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"        if (this.delTaskNum \u003e 0 \u0026\u0026 this.delTaskNum \u003c\u003d numOfTasks) {"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"            ui.taskDelMsg(taskList, delTaskNum);"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"            taskList.delTask(delTaskNum - 1);"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"            storage.save(taskList);"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"            /*"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\\n\""},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"                    + taskList.getTasksList().get(delTaskNum - 1).toString() + \"\\n\""},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"                    + \"Now you have \" + (numOfTasks - 1) + \" tasks in the list.\");"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"            taskList.delTask(delTaskNum - 1);"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"             */"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"        } else {"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":"            throw new DukeException.TaskOutOfBoundsError(\"Task number out of bounds\");"},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":"    public Boolean isExit() {"},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"        return false;"},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":32}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"public class DoneCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"    private String fullCommand;"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"    private int doneTaskNum;"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"    public DoneCommand(String fullCommand) {"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"        this.doneTaskNum \u003d Integer.parseInt(fullCommand.replaceAll(\"[^0-9]\", \"\"));"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException.TaskOutOfBoundsError, DukeException.FileLoadError {"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"        //check whether within range"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"        int numOfTasks \u003d taskList.getTasksCount();"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"        if (this.doneTaskNum \u003e 0 \u0026\u0026 this.doneTaskNum \u003c\u003d numOfTasks) {"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"            taskList.getTasksList().get(doneTaskNum - 1).markAsDone();"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"            ui.taskDoneMsg(taskList, doneTaskNum);"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"            storage.save(taskList);"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"            /*"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\""},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"                    + taskList.getTasksList().get(doneTaskNum - 1).toString());"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"             */"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"        } else {"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"            throw new DukeException.TaskOutOfBoundsError(\"Task number out of bounds\");"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"    public Boolean isExit() {"},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":"        return false;"},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":30}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"import java.util.regex.Matcher;"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"import java.util.regex.Pattern;"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"    private Storage storage;"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"    private TaskList tasks;"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"    private Ui ui;"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"    public Duke(String filePath) {"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"        ui \u003d new Ui();"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"        try {"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"        } catch (BaseException e) {"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"            ui.showError(e.toString());"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"    public void run() {"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"        ui.showWelcome();"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"        boolean isExit \u003d false;"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":"        while (!isExit) {"},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"            try {"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"                String fullCommmand \u003d ui.readCommand();"},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":"                ui.showLine();"},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":"                Command c \u003d Parser.parse(fullCommmand);"},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"                c.execute(tasks, ui, storage);"},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":"            } catch (BaseException e) {"},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":"                ui.showError(e.getMessage());"},{"lineNumber":34,"author":{"gitId":"arihantjain97"},"content":"            } finally {"},{"lineNumber":35,"author":{"gitId":"arihantjain97"},"content":"                ui.showLine();"},{"lineNumber":36,"author":{"gitId":"arihantjain97"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":40,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":42,"author":{"gitId":"arihantjain97"},"content":"        new Duke(\"src/data.txt\").run();"},{"lineNumber":43,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"arihantjain97":41,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"public class DukeException {"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"    /*"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"    //error for todo"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"    public static class TodoEmpty extends BaseException{"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"        public TodoEmpty(String message){"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"            super(message);"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"    //error for Invalid command"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"    public static class InvalidCommand extends BaseException{"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"        public InvalidCommand(String message){"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"            super(message);"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"    public static class TaskOutOfBoundsError extends BaseException {"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"        public TaskOutOfBoundsError(String message) {"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"            super(message);"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"    public static class EmptyTaskListError extends BaseException {"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"        public EmptyTaskListError(String message) {"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":"            super(message);"},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":"    public static class TaskFormatError extends BaseException {"},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"        public TaskFormatError(String message) {"},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":"            super(message);"},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":35,"author":{"gitId":"arihantjain97"},"content":"    public static class NoMatchFound extends BaseException {"},{"lineNumber":36,"author":{"gitId":"arihantjain97"},"content":"        public NoMatchFound(String message) {"},{"lineNumber":37,"author":{"gitId":"arihantjain97"},"content":"            super(message);"},{"lineNumber":38,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":41,"author":{"gitId":"arihantjain97"},"content":"    public static class FileLoadError extends BaseException {"},{"lineNumber":42,"author":{"gitId":"arihantjain97"},"content":"        public FileLoadError(String message) {"},{"lineNumber":43,"author":{"gitId":"arihantjain97"},"content":"            super(message);"},{"lineNumber":44,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":47,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":48,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":48}},{"path":"src/main/java/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":" * Represents an Event Task."},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":" * @author Arihant Jain"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":" */"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"public class Events extends Task {"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"     * The at."},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"    private String at;"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"     * The Date."},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"    private LocalDate date;"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"     * The Start time."},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"    private LocalTime startTime;"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"     * The End time."},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"    private LocalTime endTime;"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":"     * Instantiates a new Events."},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":"     * @param description the task description"},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":"     * @param at          the at"},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"arihantjain97"},"content":"//by is the time/date simple string"},{"lineNumber":35,"author":{"gitId":"arihantjain97"},"content":"    public Events(String description, String at) {"},{"lineNumber":36,"author":{"gitId":"arihantjain97"},"content":"        super(description);"},{"lineNumber":37,"author":{"gitId":"arihantjain97"},"content":"        this.at \u003d at;"},{"lineNumber":38,"author":{"gitId":"arihantjain97"},"content":"        setDateTime(this.at);"},{"lineNumber":39,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":41,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"arihantjain97"},"content":"     * Set date time."},{"lineNumber":43,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"arihantjain97"},"content":"     * @param at Date and Time information"},{"lineNumber":45,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"arihantjain97"},"content":"    public void setDateTime(String at) {"},{"lineNumber":47,"author":{"gitId":"arihantjain97"},"content":"        String atDate \u003d at.substring(0, 10);"},{"lineNumber":48,"author":{"gitId":"arihantjain97"},"content":"        String atTime \u003d at.substring(11);"},{"lineNumber":49,"author":{"gitId":"arihantjain97"},"content":"        String[] atDateArr \u003d atDate.split(\"-\");"},{"lineNumber":50,"author":{"gitId":"arihantjain97"},"content":"        String[] atTimeArr \u003d atTime.split(\"-\");"},{"lineNumber":51,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":52,"author":{"gitId":"arihantjain97"},"content":"        this.date \u003d LocalDate.of(Integer.parseInt(atDateArr[0]),"},{"lineNumber":53,"author":{"gitId":"arihantjain97"},"content":"                Integer.parseInt(atDateArr[1]),"},{"lineNumber":54,"author":{"gitId":"arihantjain97"},"content":"                Integer.parseInt(atDateArr[2]));"},{"lineNumber":55,"author":{"gitId":"arihantjain97"},"content":"        this.startTime \u003d LocalTime.of("},{"lineNumber":56,"author":{"gitId":"arihantjain97"},"content":"                Integer.parseInt(atTimeArr[0].substring(0, 2)),"},{"lineNumber":57,"author":{"gitId":"arihantjain97"},"content":"                Integer.parseInt(atTimeArr[0].substring(2)));"},{"lineNumber":58,"author":{"gitId":"arihantjain97"},"content":"        this.endTime \u003d LocalTime.of("},{"lineNumber":59,"author":{"gitId":"arihantjain97"},"content":"                Integer.parseInt(atTimeArr[1].substring(0, 2)),"},{"lineNumber":60,"author":{"gitId":"arihantjain97"},"content":"                Integer.parseInt(atTimeArr[1].substring(2)));"},{"lineNumber":61,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":63,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"arihantjain97"},"content":"     * Get date string."},{"lineNumber":65,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"arihantjain97"},"content":"     * @return the string"},{"lineNumber":67,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"arihantjain97"},"content":"    public String getDate() {"},{"lineNumber":69,"author":{"gitId":"arihantjain97"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy\");"},{"lineNumber":70,"author":{"gitId":"arihantjain97"},"content":"        return this.date.format(format);"},{"lineNumber":71,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":73,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"arihantjain97"},"content":"     * Get start time string."},{"lineNumber":75,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"arihantjain97"},"content":"     * @return the string"},{"lineNumber":77,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"arihantjain97"},"content":"    public String getStartTime() {"},{"lineNumber":79,"author":{"gitId":"arihantjain97"},"content":"        return this.startTime.toString();"},{"lineNumber":80,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":82,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"arihantjain97"},"content":"     * Get end time string."},{"lineNumber":84,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"arihantjain97"},"content":"     * @return the string"},{"lineNumber":86,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"arihantjain97"},"content":"    public String getEndTime() {"},{"lineNumber":88,"author":{"gitId":"arihantjain97"},"content":"        return this.endTime.toString();"},{"lineNumber":89,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":91,"author":{"gitId":"arihantjain97"},"content":"    public String getAt() {"},{"lineNumber":92,"author":{"gitId":"arihantjain97"},"content":"        return this.at;"},{"lineNumber":93,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":95,"author":{"gitId":"arihantjain97"},"content":"    public String getDescription(){"},{"lineNumber":96,"author":{"gitId":"arihantjain97"},"content":"        return this.description;"},{"lineNumber":97,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"arihantjain97"},"content":"    /***"},{"lineNumber":99,"author":{"gitId":"arihantjain97"},"content":"     * Get list variation Deadline Task String."},{"lineNumber":100,"author":{"gitId":"arihantjain97"},"content":"     * @return String Deadline Task String"},{"lineNumber":101,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":103,"author":{"gitId":"arihantjain97"},"content":"    @Override"},{"lineNumber":104,"author":{"gitId":"arihantjain97"},"content":"    public String toString() {"},{"lineNumber":105,"author":{"gitId":"arihantjain97"},"content":"        return \"[E]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description"},{"lineNumber":106,"author":{"gitId":"arihantjain97"},"content":"                + \" (at: \" + this.getDate()"},{"lineNumber":107,"author":{"gitId":"arihantjain97"},"content":"                + \" \" + this.getStartTime()"},{"lineNumber":108,"author":{"gitId":"arihantjain97"},"content":"                + \"-\" + this.getEndTime() + \")\";"},{"lineNumber":109,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"arihantjain97"},"content":"}"},{"lineNumber":111,"author":{"gitId":"arihantjain97"},"content":""}],"authorContributionMap":{"arihantjain97":111}},{"path":"src/main/java/EventsCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"public class EventsCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"    private String fullCommand;"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"    public EventsCommand(String fullCommand) {"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException.FileLoadError {"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"        taskList.addTask(new Events(fullCommand.substring(6, fullCommand.indexOf(\u0027/\u0027) - 1),"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"                fullCommand.substring(fullCommand.indexOf(\u0027/\u0027) + 4)));"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"        ui.taskAddMsg(taskList);"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"        storage.save(taskList);"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"        /*"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"                + taskList.getTasksList().get(taskList.getTasksCount() - 1)"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"                + \"\\nNow you have \" + taskList.getTasksCount() + \" tasks in the list.\");"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"         */"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"    public Boolean isExit() {"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"        return false;"},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":22}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"public class FindCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"    private String fullCommand;"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"    public FindCommand(String fullCommand) {"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException.EmptyTaskListError, DukeException.NoMatchFound {"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"        //find the keyword in taskList"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"        if (taskList.getTasksCount() \u003d\u003d 0) {"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"            throw new DukeException.EmptyTaskListError(\"No Tasks were added\");"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"        } else {"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"            String keyWord \u003d fullCommand.substring(5);"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"            ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"            for (int i \u003d 0; i \u003c taskList.getTasksCount(); i++) {"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"                if (taskList.getTasksList().get(i).description.contains(keyWord)) {"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"                    foundTasks.add(taskList.getTasksList().get(i));"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"                }"},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"            }"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"            if (!foundTasks.isEmpty()) {"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"                TaskList foundTaskList \u003d new TaskList(foundTasks);"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"                //System.out.println(foundTaskList.toString());"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":"                ui.foundMsg(foundTaskList);"},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"            } else {"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"                //System.out.println(\"No Task Found containing \u0027\" + keyWord + \"\u0027\");"},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":"                throw new DukeException.NoMatchFound(\"No Task Found containing \u0027\" + keyWord + \"\u0027\");"},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":"    public Boolean isExit() {"},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":"        return false;"},{"lineNumber":34,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":35}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"public class ListCommand extends Command{"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException.EmptyTaskListError {"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"        if (taskList.getTasksCount() \u003d\u003d 0) {"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"            throw new DukeException.EmptyTaskListError(\"No Tasks were added\");"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"        } else {"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"            //System.out.println(taskList.toString());"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"            ui.listMsg(taskList);"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"    public Boolean isExit() {"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"        return false;"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":14}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"import java.util.regex.Matcher;"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"import java.util.regex.Pattern;"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"public class Parser {"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"    //make sense of commands"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"    //outputs command object"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"    public static final Pattern DONE_COMMAND_FORMAT \u003d Pattern.compile(\"done\\\\s\\\\d+\");"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"    public static final Pattern DELETE_COMMAND_FORMAT \u003d Pattern.compile(\"delete\\\\s+\\\\d+\");"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"    public static final Pattern FIND_COMMAND_FORMAT \u003d Pattern.compile(\"find(\\\\s([A-Za-z])+)+\");"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"    public static final Pattern TODO_COMMAND_FORMAT \u003d"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"            Pattern.compile(\"todo(\\\\s([A-Za-z])+)+\");"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"    public static final Pattern DEADLINES_COMMAND_FORMAT \u003d"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"            Pattern.compile(\"deadline(\\\\s([A-Za-z])+)\""},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"                    + \"+\\\\s/by\\\\s\\\\d\\\\d\\\\d\\\\d-\\\\d\\\\d-\\\\d\\\\d\");"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"    public static final Pattern EVENTS_COMMAND_FORMAT \u003d"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"            Pattern.compile(\"event(\\\\s([A-Za-z])+)\""},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"                    + \"+\\\\s/at\\\\s\\\\d\\\\d\\\\d\\\\d-\\\\d\\\\d-\\\\d\\\\d\\\\s\\\\d\\\\d\\\\d\\\\d-\\\\d\\\\d\\\\d\\\\d\");"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"    public Parser() {"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":"    public static Command parse(String fullCommand) throws DukeException.TaskFormatError {"},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"        //this.fullCommand \u003d fullCommand;"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"        String ret \u003d \"\";"},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":"        //sort out fullCommand type"},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":"        Command retCommand;"},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"        if (fullCommand.equals(\"bye\")) {"},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":"            //create byeCommand"},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":"            return new ByeCommand();"},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":"        } else if (fullCommand.equals(\"list\")) {"},{"lineNumber":34,"author":{"gitId":"arihantjain97"},"content":"            //create listCommand"},{"lineNumber":35,"author":{"gitId":"arihantjain97"},"content":"            return new ListCommand();"},{"lineNumber":36,"author":{"gitId":"arihantjain97"},"content":"        } else {"},{"lineNumber":37,"author":{"gitId":"arihantjain97"},"content":"            final Matcher doneMatcher \u003d DONE_COMMAND_FORMAT.matcher(fullCommand);"},{"lineNumber":38,"author":{"gitId":"arihantjain97"},"content":"            final Matcher deleteMatcher \u003d DELETE_COMMAND_FORMAT.matcher(fullCommand);"},{"lineNumber":39,"author":{"gitId":"arihantjain97"},"content":"            final Matcher todoMatcher \u003d TODO_COMMAND_FORMAT.matcher(fullCommand);"},{"lineNumber":40,"author":{"gitId":"arihantjain97"},"content":"            final Matcher deadlinesMatcher \u003d DEADLINES_COMMAND_FORMAT.matcher(fullCommand);"},{"lineNumber":41,"author":{"gitId":"arihantjain97"},"content":"            final Matcher eventsMatcher \u003d EVENTS_COMMAND_FORMAT.matcher(fullCommand);"},{"lineNumber":42,"author":{"gitId":"arihantjain97"},"content":"            final Matcher findMatcher \u003d FIND_COMMAND_FORMAT.matcher(fullCommand);"},{"lineNumber":43,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":44,"author":{"gitId":"arihantjain97"},"content":"            if (doneMatcher.matches()) {"},{"lineNumber":45,"author":{"gitId":"arihantjain97"},"content":"                //create done command"},{"lineNumber":46,"author":{"gitId":"arihantjain97"},"content":"                return new DoneCommand(fullCommand);"},{"lineNumber":47,"author":{"gitId":"arihantjain97"},"content":"            } else if (deleteMatcher.matches()) {"},{"lineNumber":48,"author":{"gitId":"arihantjain97"},"content":"                //create delete command"},{"lineNumber":49,"author":{"gitId":"arihantjain97"},"content":"                return new DeleteCommand(fullCommand);"},{"lineNumber":50,"author":{"gitId":"arihantjain97"},"content":"            } else if (todoMatcher.matches()) {"},{"lineNumber":51,"author":{"gitId":"arihantjain97"},"content":"                //create todo command"},{"lineNumber":52,"author":{"gitId":"arihantjain97"},"content":"                return new TodoCommand(fullCommand);"},{"lineNumber":53,"author":{"gitId":"arihantjain97"},"content":"            } else if (deadlinesMatcher.matches()) {"},{"lineNumber":54,"author":{"gitId":"arihantjain97"},"content":"                //create deadline command"},{"lineNumber":55,"author":{"gitId":"arihantjain97"},"content":"                return new DeadlinesCommand(fullCommand);"},{"lineNumber":56,"author":{"gitId":"arihantjain97"},"content":"            } else if (eventsMatcher.matches()) {"},{"lineNumber":57,"author":{"gitId":"arihantjain97"},"content":"                //create events command"},{"lineNumber":58,"author":{"gitId":"arihantjain97"},"content":"                return new EventsCommand(fullCommand);"},{"lineNumber":59,"author":{"gitId":"arihantjain97"},"content":"            } else if (findMatcher.matches()) {"},{"lineNumber":60,"author":{"gitId":"arihantjain97"},"content":"                //create match command"},{"lineNumber":61,"author":{"gitId":"arihantjain97"},"content":"                return new FindCommand(fullCommand);"},{"lineNumber":62,"author":{"gitId":"arihantjain97"},"content":"            } else {"},{"lineNumber":63,"author":{"gitId":"arihantjain97"},"content":"                //***NO COMMAND MATCH (THROW ERROR)"},{"lineNumber":64,"author":{"gitId":"arihantjain97"},"content":"                throw new DukeException.TaskFormatError(\"Task is of incorrect format\");"},{"lineNumber":65,"author":{"gitId":"arihantjain97"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":67,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":68,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":70,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":72,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":72}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"import java.nio.charset.StandardCharsets;"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"import java.nio.file.Files;"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"import java.nio.file.Path;"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":" * Represents a Storage Object."},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":" * @author Arihant Jain"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":" */"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"public class Storage {"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"    private String filePath;"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"     * Instantiates a new Storage object"},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"     * @param filePath the file path of text file we are reading and writing to"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"    public Storage(String filePath) {"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":"     * Create file."},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":"     * @param path the path"},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":"     * @throws DukeException.FileLoadError the file load error"},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"arihantjain97"},"content":"    public static void createFile(Path path) throws DukeException.FileLoadError {"},{"lineNumber":35,"author":{"gitId":"arihantjain97"},"content":"        File newFile \u003d new File(path.toString());"},{"lineNumber":36,"author":{"gitId":"arihantjain97"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"arihantjain97"},"content":"            newFile.createNewFile();"},{"lineNumber":38,"author":{"gitId":"arihantjain97"},"content":"        } catch (IOException e) {"},{"lineNumber":39,"author":{"gitId":"arihantjain97"},"content":"            throw new DukeException.FileLoadError(\"File at: \" + path.toString() + \" cannot be created\");"},{"lineNumber":40,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":42,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":44,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"arihantjain97"},"content":"     * Load array list."},{"lineNumber":46,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"arihantjain97"},"content":"     * @return the array list of tasks loaded from text file"},{"lineNumber":48,"author":{"gitId":"arihantjain97"},"content":"     * @throws DukeException.FileLoadError the file load error"},{"lineNumber":49,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"arihantjain97"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException.FileLoadError {"},{"lineNumber":51,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":52,"author":{"gitId":"arihantjain97"},"content":"        ArrayList\u003cTask\u003e loadTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":53,"author":{"gitId":"arihantjain97"},"content":"        //check whether file exists"},{"lineNumber":54,"author":{"gitId":"arihantjain97"},"content":"        File file \u003d new File(this.filePath);"},{"lineNumber":55,"author":{"gitId":"arihantjain97"},"content":"        Path path \u003d Paths.get(this.filePath);"},{"lineNumber":56,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":57,"author":{"gitId":"arihantjain97"},"content":"        if (!file.isFile()) {"},{"lineNumber":58,"author":{"gitId":"arihantjain97"},"content":"            createFile(path);"},{"lineNumber":59,"author":{"gitId":"arihantjain97"},"content":"            this.load();"},{"lineNumber":60,"author":{"gitId":"arihantjain97"},"content":"        } else {"},{"lineNumber":61,"author":{"gitId":"arihantjain97"},"content":"            try {"},{"lineNumber":62,"author":{"gitId":"arihantjain97"},"content":"                Scanner sc \u003d new Scanner(new File(path.toString()));"},{"lineNumber":63,"author":{"gitId":"arihantjain97"},"content":"                while (sc.hasNextLine()) {"},{"lineNumber":64,"author":{"gitId":"arihantjain97"},"content":"                    String fileLine \u003d sc.nextLine().trim();"},{"lineNumber":65,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":66,"author":{"gitId":"arihantjain97"},"content":"                    if (fileLine.charAt(0) \u003d\u003d \u0027T\u0027) {"},{"lineNumber":67,"author":{"gitId":"arihantjain97"},"content":"                        Todo newTask \u003d new Todo(fileLine.substring(8));"},{"lineNumber":68,"author":{"gitId":"arihantjain97"},"content":"                        if (fileLine.charAt(4) \u003d\u003d \u00271\u0027) {"},{"lineNumber":69,"author":{"gitId":"arihantjain97"},"content":"                            newTask.markAsDone();"},{"lineNumber":70,"author":{"gitId":"arihantjain97"},"content":"                        }"},{"lineNumber":71,"author":{"gitId":"arihantjain97"},"content":"                        loadTasks.add(newTask);"},{"lineNumber":72,"author":{"gitId":"arihantjain97"},"content":"                    } else if (fileLine.charAt(0) \u003d\u003d \u0027D\u0027) {"},{"lineNumber":73,"author":{"gitId":"arihantjain97"},"content":"                        //index of last \"|\""},{"lineNumber":74,"author":{"gitId":"arihantjain97"},"content":"                        int idx \u003d fileLine.lastIndexOf(\"|\");"},{"lineNumber":75,"author":{"gitId":"arihantjain97"},"content":"                        Deadlines newTask \u003d new Deadlines(fileLine.substring(8, idx - 1),"},{"lineNumber":76,"author":{"gitId":"arihantjain97"},"content":"                                fileLine.substring(idx + 2));"},{"lineNumber":77,"author":{"gitId":"arihantjain97"},"content":"                        if (fileLine.charAt(4) \u003d\u003d \u00271\u0027) {"},{"lineNumber":78,"author":{"gitId":"arihantjain97"},"content":"                            newTask.markAsDone();"},{"lineNumber":79,"author":{"gitId":"arihantjain97"},"content":"                        }"},{"lineNumber":80,"author":{"gitId":"arihantjain97"},"content":"                        loadTasks.add(newTask);"},{"lineNumber":81,"author":{"gitId":"arihantjain97"},"content":"                    } else if (fileLine.charAt(0) \u003d\u003d \u0027E\u0027) {"},{"lineNumber":82,"author":{"gitId":"arihantjain97"},"content":"                        int idx \u003d fileLine.lastIndexOf(\"|\");"},{"lineNumber":83,"author":{"gitId":"arihantjain97"},"content":"                        Events newTask \u003d new Events(fileLine.substring(8, idx - 1),"},{"lineNumber":84,"author":{"gitId":"arihantjain97"},"content":"                                fileLine.substring(idx + 2));"},{"lineNumber":85,"author":{"gitId":"arihantjain97"},"content":"                        if (fileLine.charAt(4) \u003d\u003d \u00271\u0027) {"},{"lineNumber":86,"author":{"gitId":"arihantjain97"},"content":"                            newTask.markAsDone();"},{"lineNumber":87,"author":{"gitId":"arihantjain97"},"content":"                        }"},{"lineNumber":88,"author":{"gitId":"arihantjain97"},"content":"                        loadTasks.add(newTask);"},{"lineNumber":89,"author":{"gitId":"arihantjain97"},"content":"                    }"},{"lineNumber":90,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":91,"author":{"gitId":"arihantjain97"},"content":"                }"},{"lineNumber":92,"author":{"gitId":"arihantjain97"},"content":"            } catch (FileNotFoundException e) {"},{"lineNumber":93,"author":{"gitId":"arihantjain97"},"content":"                throw new DukeException.FileLoadError(\"File at: \" + path.toString() + \" cannot be read\");"},{"lineNumber":94,"author":{"gitId":"arihantjain97"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"arihantjain97"},"content":"        return loadTasks;"},{"lineNumber":97,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":99,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"arihantjain97"},"content":"     * Save."},{"lineNumber":101,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"arihantjain97"},"content":"     * @param taskList the tasks that will be saved to the text file"},{"lineNumber":103,"author":{"gitId":"arihantjain97"},"content":"     * @throws DukeException.FileLoadError the file load error"},{"lineNumber":104,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"arihantjain97"},"content":"    public void save(TaskList taskList) throws DukeException.FileLoadError {"},{"lineNumber":106,"author":{"gitId":"arihantjain97"},"content":"        Path path \u003d Paths.get(this.filePath);"},{"lineNumber":107,"author":{"gitId":"arihantjain97"},"content":"        String strOut \u003d \"\";"},{"lineNumber":108,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":109,"author":{"gitId":"arihantjain97"},"content":"        // type | 1-\u003e done / 0-\u003e not done | description | date \u0026 time"},{"lineNumber":110,"author":{"gitId":"arihantjain97"},"content":"        for (int i \u003d 0; i \u003c taskList.getTasksCount(); i++) {"},{"lineNumber":111,"author":{"gitId":"arihantjain97"},"content":"            //String stat \u003d \"\";"},{"lineNumber":112,"author":{"gitId":"arihantjain97"},"content":"            String str \u003d \"\";"},{"lineNumber":113,"author":{"gitId":"arihantjain97"},"content":"            if (taskList.getTasksList().get(i).getStatusIcon().equals(\" \")) {"},{"lineNumber":114,"author":{"gitId":"arihantjain97"},"content":"                str \u003d str + \"0\";"},{"lineNumber":115,"author":{"gitId":"arihantjain97"},"content":"            } else {"},{"lineNumber":116,"author":{"gitId":"arihantjain97"},"content":"                str \u003d str + \"1\";"},{"lineNumber":117,"author":{"gitId":"arihantjain97"},"content":"            }"},{"lineNumber":118,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":119,"author":{"gitId":"arihantjain97"},"content":"            str \u003d \"| \" + str + \" | \" + taskList.getTasksList().get(i).description;"},{"lineNumber":120,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":121,"author":{"gitId":"arihantjain97"},"content":"            if (taskList.getTasksList().get(i) instanceof Deadlines) {"},{"lineNumber":122,"author":{"gitId":"arihantjain97"},"content":"                str \u003d \"D \" + str + \" | \" + ((Deadlines) taskList.getTasksList().get(i)).getBy();"},{"lineNumber":123,"author":{"gitId":"arihantjain97"},"content":"            } else if (taskList.getTasksList().get(i) instanceof Events) {"},{"lineNumber":124,"author":{"gitId":"arihantjain97"},"content":"                str \u003d \"E \" + str + \" | \" + ((Events) taskList.getTasksList().get(i)).getAt();"},{"lineNumber":125,"author":{"gitId":"arihantjain97"},"content":"            } else {"},{"lineNumber":126,"author":{"gitId":"arihantjain97"},"content":"                str \u003d \"T \" + str;"},{"lineNumber":127,"author":{"gitId":"arihantjain97"},"content":"            }"},{"lineNumber":128,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":129,"author":{"gitId":"arihantjain97"},"content":"            if (i !\u003d taskList.getTasksList().size() - 1) {"},{"lineNumber":130,"author":{"gitId":"arihantjain97"},"content":"                strOut \u003d strOut + str + \"\\n\";"},{"lineNumber":131,"author":{"gitId":"arihantjain97"},"content":"            } else {"},{"lineNumber":132,"author":{"gitId":"arihantjain97"},"content":"                strOut \u003d strOut + str;"},{"lineNumber":133,"author":{"gitId":"arihantjain97"},"content":"            }"},{"lineNumber":134,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":136,"author":{"gitId":"arihantjain97"},"content":"        try {"},{"lineNumber":137,"author":{"gitId":"arihantjain97"},"content":"            Files.write(path, strOut.getBytes(StandardCharsets.UTF_8));"},{"lineNumber":138,"author":{"gitId":"arihantjain97"},"content":"        } catch (IOException e) {"},{"lineNumber":139,"author":{"gitId":"arihantjain97"},"content":"            try {"},{"lineNumber":140,"author":{"gitId":"arihantjain97"},"content":"                createFile(path);"},{"lineNumber":141,"author":{"gitId":"arihantjain97"},"content":"                this.save(taskList);"},{"lineNumber":142,"author":{"gitId":"arihantjain97"},"content":"            } catch (BaseException err) {"},{"lineNumber":143,"author":{"gitId":"arihantjain97"},"content":"                throw new DukeException.FileLoadError(\"File at: \" + path.toString() + \" cannot be written\");"},{"lineNumber":144,"author":{"gitId":"arihantjain97"},"content":"            }"},{"lineNumber":145,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":146,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":148,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":149,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":150,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":151,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":152}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":" * Represents a Deadline Task."},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":" * @author Arihant Jain"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":" */"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"public class Task {"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"     * The Task Description."},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"    protected String description;"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"     * The boolean indicating if Task is completed."},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"    protected boolean isDone;"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"     * Instantiates a new Task."},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"     * @param description the task description"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"    @SuppressWarnings({\"checkstyle:HiddenField\", \"checkstyle:FinalParameters\"})"},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"    public Task(String description) {"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"        this.description \u003d description;"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"        this.isDone \u003d false;"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"     * Gets completion status icon."},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":"     * @return the status icon"},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":"    public String getStatusIcon() {"},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":"        return (isDone ? \"X\" : \" \"); //return tick or X symbols"},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":35,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"arihantjain97"},"content":"     * Mark Task as completed."},{"lineNumber":37,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"arihantjain97"},"content":"    public void markAsDone() {"},{"lineNumber":39,"author":{"gitId":"arihantjain97"},"content":"        this.isDone \u003d true;"},{"lineNumber":40,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":42,"author":{"gitId":"arihantjain97"},"content":"    /***"},{"lineNumber":43,"author":{"gitId":"arihantjain97"},"content":"     * Get list variation Task String."},{"lineNumber":44,"author":{"gitId":"arihantjain97"},"content":"     * @return String Task String"},{"lineNumber":45,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"arihantjain97"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"arihantjain97"},"content":"    public String toString() {"},{"lineNumber":48,"author":{"gitId":"arihantjain97"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;"},{"lineNumber":49,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":50}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":" * The type Task list."},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":" */"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"public class TaskList {"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"    /***"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"     * Arraylist of Tasks (Todo, Deadline, Event)."},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"    private ArrayList\u003cTask\u003e tasksList;"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"     * Instantiates a new Task list."},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"    public TaskList() {"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"        this.tasksList \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"     * Instantiates a new Task list."},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"     * @param loadTasksList the load tasks list"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"    public TaskList(ArrayList\u003cTask\u003e loadTasksList) {"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"            this.tasksList \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"            this.tasksList.addAll(loadTasksList);"},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":"    public ArrayList\u003cTask\u003e getTasksList() {"},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":"        return this.tasksList;"},{"lineNumber":34,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":36,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"arihantjain97"},"content":"     * Gets tasks count."},{"lineNumber":38,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"arihantjain97"},"content":"     * @return the tasks count"},{"lineNumber":40,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"arihantjain97"},"content":"    public int getTasksCount() {"},{"lineNumber":42,"author":{"gitId":"arihantjain97"},"content":"        return this.tasksList.size();"},{"lineNumber":43,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":45,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"arihantjain97"},"content":"     * Adds a new Task to the Task list."},{"lineNumber":47,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"arihantjain97"},"content":"     * @param task the task"},{"lineNumber":49,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"arihantjain97"},"content":"    public void addTask(Task task) {"},{"lineNumber":51,"author":{"gitId":"arihantjain97"},"content":"        //System.out.println(\"i reached addTask\");"},{"lineNumber":52,"author":{"gitId":"arihantjain97"},"content":"        this.tasksList.add(task);"},{"lineNumber":53,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":55,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"arihantjain97"},"content":"     * Deletes a Task in Task List based on index"},{"lineNumber":57,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"arihantjain97"},"content":"     * @param index the task index"},{"lineNumber":59,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"arihantjain97"},"content":"    public void delTask(int index) {"},{"lineNumber":61,"author":{"gitId":"arihantjain97"},"content":"        this.tasksList.remove(index);"},{"lineNumber":62,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":64,"author":{"gitId":"arihantjain97"},"content":"    /***"},{"lineNumber":65,"author":{"gitId":"arihantjain97"},"content":"     * Provides the complete current list of Tasks."},{"lineNumber":66,"author":{"gitId":"arihantjain97"},"content":"     * @return String of current list of Tasks"},{"lineNumber":67,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"arihantjain97"},"content":"    @Override"},{"lineNumber":69,"author":{"gitId":"arihantjain97"},"content":"    public String toString() {"},{"lineNumber":70,"author":{"gitId":"arihantjain97"},"content":"        //List Tasks"},{"lineNumber":71,"author":{"gitId":"arihantjain97"},"content":"        String tasksListStr \u003d \"\";"},{"lineNumber":72,"author":{"gitId":"arihantjain97"},"content":"        for (int i \u003d 0; i \u003c this.tasksList.size(); i++) {"},{"lineNumber":73,"author":{"gitId":"arihantjain97"},"content":"            tasksListStr \u003d tasksListStr + (i + 1) + \". \""},{"lineNumber":74,"author":{"gitId":"arihantjain97"},"content":"                    + this.tasksList.get(i).toString();"},{"lineNumber":75,"author":{"gitId":"arihantjain97"},"content":"            if (i !\u003d this.tasksList.size() - 1) {"},{"lineNumber":76,"author":{"gitId":"arihantjain97"},"content":"                tasksListStr \u003d tasksListStr + \"\\n\";"},{"lineNumber":77,"author":{"gitId":"arihantjain97"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"arihantjain97"},"content":"        return tasksListStr;"},{"lineNumber":80,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":81}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":" * Represents a Todo Task."},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":" * @author Arihant Jain"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":" */"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"public class Todo extends Task {"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"     * Instantiates a new Todo."},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"     * @param description the task description"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"    public Todo(String description) {"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"    public String getDescription() {"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"        return this.description;"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"    /***"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"     * Get list variation Todo Task String."},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"     * @return String Todo Task String"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":27}},{"path":"src/main/java/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"public class TodoCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"    private String fullCommand;"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"    public TodoCommand(String fullCommand) {"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException.FileLoadError {"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"        //System.out.println(this.fullCommand);"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"        taskList.addTask(new Todo(this.fullCommand.substring(5)));"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"        /*"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"                + taskList.getTasksList().get(taskList.getTasksCount() - 1)"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"                + \"\\nNow you have \" + taskList.getTasksCount() + \" tasks in the list.\");"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"         */"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"        storage.save(taskList);"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"        //System.out.println(\"i think i saved\");"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"        ui.taskAddMsg(taskList);"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"    public Boolean isExit() {"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"        return false;"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":24}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"import java.io.InputStream;"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"import java.io.PrintStream;"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"public class Ui {"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"    private final Scanner in;"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"    private final PrintStream out;"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"    private static final String DIVIDER_LINE \u003d \"____________________________________________________________\\n\";"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"    private static final String LIST_MESSAGE \u003d \"Here are the tasks in your list:\";"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"    private static final String DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\";"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"    private static final String TASK_ADD_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"    private static final String TASK_COUNT_MESSAGE \u003d \"Tasks in list:\";"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"    private static final String TASK_DELETE_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\";"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"    private static final String TASK_FOUND_MESSAGE \u003d \"Matched Tasks:\";"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"    private static final String LOADING_ERROR_MESSAGE \u003d \"Error in loading tasks from text file\";"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"    private static final String GOODBYE_MESSAGE \u003d \"GOODBYE! Thanks for using DUKE\";"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Hello from\\n\""},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"            + \" ____        _        \\n\""},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\""},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"            + \"\\nHello! I\u0027m Duke\""},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"            + \"\\nWhat can I do for you?\";"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"    public Ui(){"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"        this(System.in, System.out);"},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"    public Ui(InputStream in, PrintStream out) {"},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":"        this.in \u003d new Scanner(in);"},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":"        this.out \u003d out;"},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":35,"author":{"gitId":"arihantjain97"},"content":"    public String readCommand() {"},{"lineNumber":36,"author":{"gitId":"arihantjain97"},"content":"        String fullInputLine \u003d in.nextLine();"},{"lineNumber":37,"author":{"gitId":"arihantjain97"},"content":"        return fullInputLine;"},{"lineNumber":38,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":40,"author":{"gitId":"arihantjain97"},"content":"    public void showToUser(String... stringToUser) {"},{"lineNumber":41,"author":{"gitId":"arihantjain97"},"content":"        for (String s : stringToUser) {"},{"lineNumber":42,"author":{"gitId":"arihantjain97"},"content":"            out.println(s.replace(\"\\n\", System.lineSeparator()));"},{"lineNumber":43,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":46,"author":{"gitId":"arihantjain97"},"content":"    public void showWelcome() {"},{"lineNumber":47,"author":{"gitId":"arihantjain97"},"content":"        showToUser(WELCOME_MESSAGE);"},{"lineNumber":48,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":50,"author":{"gitId":"arihantjain97"},"content":"    public void byeMsg() {"},{"lineNumber":51,"author":{"gitId":"arihantjain97"},"content":"        showToUser(GOODBYE_MESSAGE);"},{"lineNumber":52,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":54,"author":{"gitId":"arihantjain97"},"content":"    public void showLoadingError() {"},{"lineNumber":55,"author":{"gitId":"arihantjain97"},"content":"        showToUser(LOADING_ERROR_MESSAGE);"},{"lineNumber":56,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":58,"author":{"gitId":"arihantjain97"},"content":"    public void showLine() {"},{"lineNumber":59,"author":{"gitId":"arihantjain97"},"content":"        showToUser(DIVIDER_LINE);"},{"lineNumber":60,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":62,"author":{"gitId":"arihantjain97"},"content":"    public void taskAddMsg(TaskList taskList) {"},{"lineNumber":63,"author":{"gitId":"arihantjain97"},"content":"        String printStr \u003d TASK_ADD_MESSAGE + \"\\n\""},{"lineNumber":64,"author":{"gitId":"arihantjain97"},"content":"                + taskList.getTasksList().get(taskList.getTasksCount() - 1).toString() + \"\\n\""},{"lineNumber":65,"author":{"gitId":"arihantjain97"},"content":"                + TASK_COUNT_MESSAGE"},{"lineNumber":66,"author":{"gitId":"arihantjain97"},"content":"                + Integer.toString(taskList.getTasksCount());"},{"lineNumber":67,"author":{"gitId":"arihantjain97"},"content":"        showToUser(printStr);"},{"lineNumber":68,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":70,"author":{"gitId":"arihantjain97"},"content":"    public void taskDelMsg(TaskList taskList, int delTaskNum) {"},{"lineNumber":71,"author":{"gitId":"arihantjain97"},"content":"        String printStr \u003d TASK_DELETE_MESSAGE + \"\\n\""},{"lineNumber":72,"author":{"gitId":"arihantjain97"},"content":"                + taskList.getTasksList().get(delTaskNum - 1).toString() + \"\\n\""},{"lineNumber":73,"author":{"gitId":"arihantjain97"},"content":"                + TASK_COUNT_MESSAGE"},{"lineNumber":74,"author":{"gitId":"arihantjain97"},"content":"                + Integer.toString(taskList.getTasksCount() - 1);"},{"lineNumber":75,"author":{"gitId":"arihantjain97"},"content":"        showToUser(printStr);"},{"lineNumber":76,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":78,"author":{"gitId":"arihantjain97"},"content":"    public void taskDoneMsg(TaskList taskList, int doneTaskNum) {"},{"lineNumber":79,"author":{"gitId":"arihantjain97"},"content":"        String printStr \u003d DONE_MESSAGE + \"\\n\""},{"lineNumber":80,"author":{"gitId":"arihantjain97"},"content":"                + taskList.getTasksList().get(doneTaskNum - 1).toString();"},{"lineNumber":81,"author":{"gitId":"arihantjain97"},"content":"        showToUser(printStr);"},{"lineNumber":82,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":84,"author":{"gitId":"arihantjain97"},"content":"    public void listMsg(TaskList taskList) {"},{"lineNumber":85,"author":{"gitId":"arihantjain97"},"content":"        String printStr \u003d LIST_MESSAGE + \"\\n\""},{"lineNumber":86,"author":{"gitId":"arihantjain97"},"content":"                + taskList.toString();"},{"lineNumber":87,"author":{"gitId":"arihantjain97"},"content":"        showToUser(printStr);"},{"lineNumber":88,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":90,"author":{"gitId":"arihantjain97"},"content":"    public void foundMsg(TaskList taskList) {"},{"lineNumber":91,"author":{"gitId":"arihantjain97"},"content":"        String printStr \u003d TASK_FOUND_MESSAGE + \"\\n\""},{"lineNumber":92,"author":{"gitId":"arihantjain97"},"content":"                + taskList.toString();"},{"lineNumber":93,"author":{"gitId":"arihantjain97"},"content":"        showToUser(printStr);"},{"lineNumber":94,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":96,"author":{"gitId":"arihantjain97"},"content":"    public void showError(String errorMsg) {"},{"lineNumber":97,"author":{"gitId":"arihantjain97"},"content":"        showToUser(errorMsg);"},{"lineNumber":98,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":100,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":101,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":102,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":103,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":104,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":105,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":105}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"public class DukeTest {"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"    @Test"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"    public void deadlineTaskString(){"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"        assertEquals(\"[D][ ] tasktest (by: 01 February 2020)\","},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"                new Deadlines(\"tasktest\", \"2020-02-01\").toString());"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"    public void eventsTaskString(){"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"        assertEquals(\"[E][ ] tasktest (at: 01 February 2020 08:00-09:00)\","},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"                new Events(\"tasktest\", \"2020-02-01 0800-0900\").toString());"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"list"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"event project meeting /at Mon 2-4pm"}],"authorContributionMap":{"arihantjain97":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"javac  -cp C:\\repos\\CS2103T\\duke\\src\\main\\java -Xlint:none -d ..\\bin C:\\repos\\CS2103T\\duke\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"arihantjain97":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"//if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"if ! javac -cp C:/repos/CS2103T/duke/src/main/java -Xlint:none -d ../bin C:/repos/CS2103T/duke/src/main/java/*.java"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"arihantjain97":2,"-":37}}]
