[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"}"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"}"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"}"},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":35,"author":{"gitId":"arihantjain97"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"arihantjain97"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":38,"author":{"gitId":"arihantjain97"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"arihantjain97"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"arihantjain97"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"arihantjain97"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"arihantjain97"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"arihantjain97"},"content":"}"},{"lineNumber":45,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":46,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":47,"author":{"gitId":"arihantjain97"},"content":"application {"},{"lineNumber":48,"author":{"gitId":"arihantjain97"},"content":"    //mainClassName \u003d \"seedu.duke.Duke\""},{"lineNumber":49,"author":{"gitId":"arihantjain97"},"content":"    //mainClassName \u003d \"Duke\""},{"lineNumber":50,"author":{"gitId":"arihantjain97"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":51,"author":{"gitId":"arihantjain97"},"content":"    //build/classes/java/main/Duke.class"},{"lineNumber":52,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":53,"author":{"gitId":"arihantjain97"},"content":"}"},{"lineNumber":54,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":55,"author":{"gitId":"arihantjain97"},"content":"task fatJar(type: Jar) {"},{"lineNumber":56,"author":{"gitId":"arihantjain97"},"content":"    manifest {"},{"lineNumber":57,"author":{"gitId":"arihantjain97"},"content":"        attributes \u0027Main-Class\u0027: \u0027Launcher\u0027"},{"lineNumber":58,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"arihantjain97"},"content":"    archiveClassifier \u003d \"all\""},{"lineNumber":60,"author":{"gitId":"arihantjain97"},"content":"    from {"},{"lineNumber":61,"author":{"gitId":"arihantjain97"},"content":"        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }"},{"lineNumber":62,"author":{"gitId":"arihantjain97"},"content":"        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }"},{"lineNumber":63,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"arihantjain97"},"content":"    with jar"},{"lineNumber":65,"author":{"gitId":"arihantjain97"},"content":"}"},{"lineNumber":66,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":67,"author":{"gitId":"arihantjain97"},"content":"shadowJar {"},{"lineNumber":68,"author":{"gitId":"arihantjain97"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":69,"author":{"gitId":"arihantjain97"},"content":"    archiveClassifier \u003d null"},{"lineNumber":70,"author":{"gitId":"arihantjain97"},"content":"}"},{"lineNumber":71,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":72,"author":{"gitId":"arihantjain97"},"content":"checkstyle {"},{"lineNumber":73,"author":{"gitId":"arihantjain97"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":74,"author":{"gitId":"arihantjain97"},"content":"}"},{"lineNumber":75,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":76,"author":{"gitId":"arihantjain97"},"content":"run{"},{"lineNumber":77,"author":{"gitId":"arihantjain97"},"content":"    standardInput \u003d System.in"},{"lineNumber":78,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":78}},{"path":"data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"T | 0 |  not to be?"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"T | 0 | hello"}],"authorContributionMap":{"arihantjain97":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"# Duke User Guide"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"By: `@arihantjain97`      Since: `Feb 2021`      Licence: `MIT`"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"## 1. Introduction"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"Duke is a versatile organiser for those who wish to keep track of different types"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"of tasks. Duke also offers a Graphical User Interface, which allows for the user to "},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"see the tasks entered at a glance."},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"## 2. Quick Start"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"1. Ensure you have Java 11 or above installed in your Computer."},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"2. Download the latest duke.jar [here](https://github.com/arihantjain97/ip/releases/tag/A-Jar)."},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"3. Copy the file to the folder you want to use as the home folder for your Duke application."},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"4. Double-click the file to start the app. The GUI should appear in a few seconds."},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"   "},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"  ![Welcome Screen](https://github.com/arihantjain97/ip/blob/master/docs/WelcomeScreen.png?raw\u003dtrue)"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"5. After pressing the start button, you will be taken to the main page"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"  ![Welcome Screen](https://github.com/arihantjain97/ip/blob/master/docs/Ui.png?raw\u003dtrue)"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":"6. Type in the command in the command box and press enter, or the send button, to execute it."},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"      "},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"   e.g. typing `list` and pressing enter, or the send button, will show the current list of tasks."},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":"7. Some example commands you can try:"},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"   "},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":"   * list: lists all current tasks"},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":"   * delete 1: deletes the first indexed task in duke"},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":"   * bye: exits the app"},{"lineNumber":34,"author":{"gitId":"arihantjain97"},"content":"   "},{"lineNumber":35,"author":{"gitId":"arihantjain97"},"content":"8. Refer to Section 3, \"Features\" for details of each command"},{"lineNumber":36,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":37,"author":{"gitId":"arihantjain97"},"content":"## 3. Features"},{"lineNumber":38,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":39,"author":{"gitId":"arihantjain97"},"content":"### 3.1. Show all Tasks: `list`"},{"lineNumber":40,"author":{"gitId":"arihantjain97"},"content":"* Format: `list`"},{"lineNumber":41,"author":{"gitId":"arihantjain97"},"content":"* Example: `list`"},{"lineNumber":42,"author":{"gitId":"arihantjain97"},"content":"* Expected Outcome:"},{"lineNumber":43,"author":{"gitId":"arihantjain97"},"content":"   "},{"lineNumber":44,"author":{"gitId":"arihantjain97"},"content":"   `Here are the tasks in your list:`"},{"lineNumber":45,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":46,"author":{"gitId":"arihantjain97"},"content":"   `1.[T][] drink enough water`"},{"lineNumber":47,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":48,"author":{"gitId":"arihantjain97"},"content":"   `2.[D][] finish homework (by: 01 March 2020)`"},{"lineNumber":49,"author":{"gitId":"arihantjain97"},"content":"   "},{"lineNumber":50,"author":{"gitId":"arihantjain97"},"content":"   `3.[E][] class (at: 01 January 2020 0900-1000)`"},{"lineNumber":51,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":52,"author":{"gitId":"arihantjain97"},"content":"### 3.2. Add a \"Todo\" Task: `todo`"},{"lineNumber":53,"author":{"gitId":"arihantjain97"},"content":"* Format: `todo DESCRIPTION` "},{"lineNumber":54,"author":{"gitId":"arihantjain97"},"content":"* Example: `todo drink enough water`"},{"lineNumber":55,"author":{"gitId":"arihantjain97"},"content":"* Expected Outcome:"},{"lineNumber":56,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":57,"author":{"gitId":"arihantjain97"},"content":"   `Got it. I\u0027ve added this task:`"},{"lineNumber":58,"author":{"gitId":"arihantjain97"},"content":"   "},{"lineNumber":59,"author":{"gitId":"arihantjain97"},"content":"   `[T][] drink enough water`"},{"lineNumber":60,"author":{"gitId":"arihantjain97"},"content":"   "},{"lineNumber":61,"author":{"gitId":"arihantjain97"},"content":"   `Tasks in list: 1`"},{"lineNumber":62,"author":{"gitId":"arihantjain97"},"content":"### 3.3. Add a \"Deadline\" Task: `deadline`"},{"lineNumber":63,"author":{"gitId":"arihantjain97"},"content":"* Format: `deadline DESCRIPTION /by DATE`"},{"lineNumber":64,"author":{"gitId":"arihantjain97"},"content":"  "},{"lineNumber":65,"author":{"gitId":"arihantjain97"},"content":"   the date format is in `yyyy-mm-dd`"},{"lineNumber":66,"author":{"gitId":"arihantjain97"},"content":"* Example: `deadline finish homework /by 2020-03-01`"},{"lineNumber":67,"author":{"gitId":"arihantjain97"},"content":"* Expected Outcome:"},{"lineNumber":68,"author":{"gitId":"arihantjain97"},"content":"  "},{"lineNumber":69,"author":{"gitId":"arihantjain97"},"content":"  `Got it. I\u0027ve added this task:`"},{"lineNumber":70,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":71,"author":{"gitId":"arihantjain97"},"content":"  `[D][] finish homework (by: 01 March 2020)`"},{"lineNumber":72,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":73,"author":{"gitId":"arihantjain97"},"content":"  `Tasks in list: 2`"},{"lineNumber":74,"author":{"gitId":"arihantjain97"},"content":"### 3.4. Add an \"Event\" Task: `event`"},{"lineNumber":75,"author":{"gitId":"arihantjain97"},"content":"* Format: `event DESCRIPTION /at DATE TIME`"},{"lineNumber":76,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":77,"author":{"gitId":"arihantjain97"},"content":"  the date format is: `yyyy-mm-dd`"},{"lineNumber":78,"author":{"gitId":"arihantjain97"},"content":"  "},{"lineNumber":79,"author":{"gitId":"arihantjain97"},"content":"  the time format is: `HHmm-HHmm`"},{"lineNumber":80,"author":{"gitId":"arihantjain97"},"content":"* Example: `event class /at 2020-01-01 0900-1000`"},{"lineNumber":81,"author":{"gitId":"arihantjain97"},"content":"* Expected Outcome:"},{"lineNumber":82,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":83,"author":{"gitId":"arihantjain97"},"content":"  `Got it. I\u0027ve added this task:`"},{"lineNumber":84,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":85,"author":{"gitId":"arihantjain97"},"content":"  `[E][] class (at: 01 January 2020 09:00-10:00)`"},{"lineNumber":86,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":87,"author":{"gitId":"arihantjain97"},"content":"  `Tasks in list: 3`"},{"lineNumber":88,"author":{"gitId":"arihantjain97"},"content":"### 3.5. Mark a task when completed: `done`"},{"lineNumber":89,"author":{"gitId":"arihantjain97"},"content":"* Format: `done INDEX`"},{"lineNumber":90,"author":{"gitId":"arihantjain97"},"content":"* Example: `done 3`"},{"lineNumber":91,"author":{"gitId":"arihantjain97"},"content":"  "},{"lineNumber":92,"author":{"gitId":"arihantjain97"},"content":"   Index is based on `list` produced task listing"},{"lineNumber":93,"author":{"gitId":"arihantjain97"},"content":"* Expected Outcome:"},{"lineNumber":94,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":95,"author":{"gitId":"arihantjain97"},"content":"  `Nice! I\u0027ve marked this task as done:`"},{"lineNumber":96,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":97,"author":{"gitId":"arihantjain97"},"content":"  `[E][X] class (at: 01 January 2020 09:00-10:00)`"},{"lineNumber":98,"author":{"gitId":"arihantjain97"},"content":"### 3.6. Delete a task: `delete`"},{"lineNumber":99,"author":{"gitId":"arihantjain97"},"content":"* Format: `delete INDEX`"},{"lineNumber":100,"author":{"gitId":"arihantjain97"},"content":"* Example: `delete 1`"},{"lineNumber":101,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":102,"author":{"gitId":"arihantjain97"},"content":"  Index is based on `list` produced task listing"},{"lineNumber":103,"author":{"gitId":"arihantjain97"},"content":"* Expected Outcome:"},{"lineNumber":104,"author":{"gitId":"arihantjain97"},"content":"  "},{"lineNumber":105,"author":{"gitId":"arihantjain97"},"content":"  `Noted. I\u0027ve removed this task:`"},{"lineNumber":106,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":107,"author":{"gitId":"arihantjain97"},"content":"  `[T][] drink enough water`"},{"lineNumber":108,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":109,"author":{"gitId":"arihantjain97"},"content":"  `Tasks in list: 2`"},{"lineNumber":110,"author":{"gitId":"arihantjain97"},"content":"### 3.7. Find task via a keyword: `find`"},{"lineNumber":111,"author":{"gitId":"arihantjain97"},"content":"* Format: find KEYWORD"},{"lineNumber":112,"author":{"gitId":"arihantjain97"},"content":"* Example: `find class`"},{"lineNumber":113,"author":{"gitId":"arihantjain97"},"content":"  "},{"lineNumber":114,"author":{"gitId":"arihantjain97"},"content":"   keyword should be a matching word or letter in description of tasks"},{"lineNumber":115,"author":{"gitId":"arihantjain97"},"content":"* Expected Outcome:"},{"lineNumber":116,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":117,"author":{"gitId":"arihantjain97"},"content":"  `Matched Tasks:`"},{"lineNumber":118,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":119,"author":{"gitId":"arihantjain97"},"content":"  `1.[E][X] class (at: 01 January 2020 09:00-10:00)`"},{"lineNumber":120,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":121,"author":{"gitId":"arihantjain97"},"content":"  `Tasks in list: 2`"},{"lineNumber":122,"author":{"gitId":"arihantjain97"},"content":"### 3.8. Sorting tasks chronologically: `sort`"},{"lineNumber":123,"author":{"gitId":"arihantjain97"},"content":"* Format: `sort`"},{"lineNumber":124,"author":{"gitId":"arihantjain97"},"content":"* Example: `sort`"},{"lineNumber":125,"author":{"gitId":"arihantjain97"},"content":"* Expected Outcome:"},{"lineNumber":126,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":127,"author":{"gitId":"arihantjain97"},"content":"  `Here are the tasks in your list:`"},{"lineNumber":128,"author":{"gitId":"arihantjain97"},"content":"  "},{"lineNumber":129,"author":{"gitId":"arihantjain97"},"content":"  `1.[E][X] class (at: 01 January 2020 0900-1000)`"},{"lineNumber":130,"author":{"gitId":"arihantjain97"},"content":"  "},{"lineNumber":131,"author":{"gitId":"arihantjain97"},"content":"  `2.[D][] finish homework (by: 01 March 2020)`"},{"lineNumber":132,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":133,"author":{"gitId":"arihantjain97"},"content":"  "},{"lineNumber":134,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":135,"author":{"gitId":"arihantjain97"},"content":"### 3.9. Exiting the program: `bye`"},{"lineNumber":136,"author":{"gitId":"arihantjain97"},"content":"* Format: `bye`"},{"lineNumber":137,"author":{"gitId":"arihantjain97"},"content":"* Example: `bye`"},{"lineNumber":138,"author":{"gitId":"arihantjain97"},"content":"* Expected Outcome: the program terminates"},{"lineNumber":139,"author":{"gitId":"arihantjain97"},"content":"### 3.10. Saving the data"},{"lineNumber":140,"author":{"gitId":"arihantjain97"},"content":"* Duke automatically saves your data."},{"lineNumber":141,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":142,"author":{"gitId":"arihantjain97"},"content":"## 4. FAQ"},{"lineNumber":143,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":144,"author":{"gitId":"arihantjain97"},"content":"Q:  How do I transfer my data to another Computer?"},{"lineNumber":145,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":146,"author":{"gitId":"arihantjain97"},"content":"A: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Duke folder."},{"lineNumber":147,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":148,"author":{"gitId":"arihantjain97"},"content":"## 5. Command Summary"},{"lineNumber":149,"author":{"gitId":"arihantjain97"},"content":"* list: `list`"},{"lineNumber":150,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":151,"author":{"gitId":"arihantjain97"},"content":"* todo: `todo DESCRIPTION`"},{"lineNumber":152,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":153,"author":{"gitId":"arihantjain97"},"content":"* deadline: `deadline DESCRIPTION /by DATE`"},{"lineNumber":154,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":155,"author":{"gitId":"arihantjain97"},"content":"* event: `event DESCRIPTION /at DATE TIME`"},{"lineNumber":156,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":157,"author":{"gitId":"arihantjain97"},"content":"* done: `done INDEX`"},{"lineNumber":158,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":159,"author":{"gitId":"arihantjain97"},"content":"* delete: `delete INDEX`"},{"lineNumber":160,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":161,"author":{"gitId":"arihantjain97"},"content":"* find: `find KEYWORD`"},{"lineNumber":162,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":163,"author":{"gitId":"arihantjain97"},"content":"* sort: `sort`"},{"lineNumber":164,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":165,"author":{"gitId":"arihantjain97"},"content":"* exit: `bye`"},{"lineNumber":166,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":167,"author":{"gitId":"arihantjain97"},"content":"User guide format above adapted from [addressbook level 3](https://github.com/nus-cs2103-AY1920S2/addressbook-level3/blob/master/docs/UserGuide.adoc#Features)"}],"authorContributionMap":{"arihantjain97":157,"-":10}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":35,"author":{"gitId":"arihantjain97"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"arihantjain97"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":38,"author":{"gitId":"arihantjain97"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"arihantjain97"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":41,"author":{"gitId":"arihantjain97"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"arihantjain97"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"arihantjain97"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":44,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":45,"author":{"gitId":"arihantjain97"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"arihantjain97"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"arihantjain97"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"arihantjain97"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"arihantjain97"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":51,"author":{"gitId":"arihantjain97"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":53,"author":{"gitId":"arihantjain97"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"arihantjain97"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"arihantjain97"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":57,"author":{"gitId":"arihantjain97"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":58,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":59,"author":{"gitId":"arihantjain97"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"arihantjain97"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"arihantjain97"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"arihantjain97"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"arihantjain97"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":65,"author":{"gitId":"arihantjain97"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":67,"author":{"gitId":"arihantjain97"},"content":":init"},{"lineNumber":68,"author":{"gitId":"arihantjain97"},"content":"@rem Get command-line arguments, handling Windows variants"},{"lineNumber":69,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":70,"author":{"gitId":"arihantjain97"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":71,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":72,"author":{"gitId":"arihantjain97"},"content":":win9xME_args"},{"lineNumber":73,"author":{"gitId":"arihantjain97"},"content":"@rem Slurp the command line arguments."},{"lineNumber":74,"author":{"gitId":"arihantjain97"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":75,"author":{"gitId":"arihantjain97"},"content":"set _SKIP\u003d2"},{"lineNumber":76,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":77,"author":{"gitId":"arihantjain97"},"content":":win9xME_args_slurp"},{"lineNumber":78,"author":{"gitId":"arihantjain97"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":79,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":80,"author":{"gitId":"arihantjain97"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":81,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":82,"author":{"gitId":"arihantjain97"},"content":":execute"},{"lineNumber":83,"author":{"gitId":"arihantjain97"},"content":"@rem Setup the command line"},{"lineNumber":84,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":85,"author":{"gitId":"arihantjain97"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":86,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":87,"author":{"gitId":"arihantjain97"},"content":"@rem Execute Gradle"},{"lineNumber":88,"author":{"gitId":"arihantjain97"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"},{"lineNumber":89,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":90,"author":{"gitId":"arihantjain97"},"content":":end"},{"lineNumber":91,"author":{"gitId":"arihantjain97"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":92,"author":{"gitId":"arihantjain97"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":93,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":94,"author":{"gitId":"arihantjain97"},"content":":fail"},{"lineNumber":95,"author":{"gitId":"arihantjain97"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":96,"author":{"gitId":"arihantjain97"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":97,"author":{"gitId":"arihantjain97"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":98,"author":{"gitId":"arihantjain97"},"content":"exit /b 1"},{"lineNumber":99,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":100,"author":{"gitId":"arihantjain97"},"content":":mainEnd"},{"lineNumber":101,"author":{"gitId":"arihantjain97"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":102,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":103,"author":{"gitId":"arihantjain97"},"content":":omega"}],"authorContributionMap":{"arihantjain97":103}},{"path":"src/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"D | 0 | deadtest | 2020-02-01"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"E | 0 | tasktest | 2020-02-01 0800-0900"}],"authorContributionMap":{"arihantjain97":2}},{"path":"src/main/java/BaseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":" * The type Base exception."},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":" */"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"public abstract class BaseException extends Exception {"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"     * The Message."},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"    public String message;"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"     * Instantiates a new Base exception."},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"     * @param message the message"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"    public BaseException(String message) {"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"        this.message \u003d message;"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"     * Returns error message."},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"     * @return  message the error message"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"    public String getMessage() {"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":"        return message;"},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":27}},{"path":"src/main/java/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":" * The type Bye command."},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":" */"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"public class ByeCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"        ui.byeMsg();"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"    public Boolean isExit() {"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"        return true;"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":14}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"abstract class Command {"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage)"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"            throws DukeException.EmptyTaskListError, DukeException.TaskOutOfBoundsError,"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"            DukeException.NoMatchFound, DukeException.FileLoadError;"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"    public abstract Boolean isExit();"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":6}},{"path":"src/main/java/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":" * Represents a Deadline Task."},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":" * @author Arihant Jain"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":" */"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"public class Deadlines extends Task {"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"     * The By."},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"    private final String by;"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"     * The Date."},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"    private LocalDate date;"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"     * Instantiates a new Deadlines."},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"     * @param description the task description"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"     * @param by          the by"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":"    @SuppressWarnings(\"checkstyle:HiddenField\")"},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"    public Deadlines(String description, String by) {"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"        super(description);"},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":"        this.by \u003d by;"},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":"        setDate(this.by);"},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":"     * Sets date."},{"lineNumber":34,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"arihantjain97"},"content":"     * @param by the by String"},{"lineNumber":36,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"arihantjain97"},"content":"    public void setDate(String by) {"},{"lineNumber":38,"author":{"gitId":"arihantjain97"},"content":"        String[] byArr \u003d by.split(\"-\");"},{"lineNumber":39,"author":{"gitId":"arihantjain97"},"content":"        this.date \u003d LocalDate.of(Integer.parseInt(byArr[0]),"},{"lineNumber":40,"author":{"gitId":"arihantjain97"},"content":"                Integer.parseInt(byArr[1]),"},{"lineNumber":41,"author":{"gitId":"arihantjain97"},"content":"                Integer.parseInt(byArr[2]));"},{"lineNumber":42,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":44,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"arihantjain97"},"content":"     * Get date string."},{"lineNumber":46,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"arihantjain97"},"content":"     * @return the string"},{"lineNumber":48,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"arihantjain97"},"content":"    public String getDate() {"},{"lineNumber":50,"author":{"gitId":"arihantjain97"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy\");"},{"lineNumber":51,"author":{"gitId":"arihantjain97"},"content":"        return this.date.format(format);"},{"lineNumber":52,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":54,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"arihantjain97"},"content":"     * Get by string."},{"lineNumber":56,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"arihantjain97"},"content":"     * @return the string"},{"lineNumber":58,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"arihantjain97"},"content":"    public String getBy() {"},{"lineNumber":60,"author":{"gitId":"arihantjain97"},"content":"        return this.by;"},{"lineNumber":61,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":63,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"arihantjain97"},"content":"     * Get description string."},{"lineNumber":65,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"arihantjain97"},"content":"     * @return the string"},{"lineNumber":67,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"arihantjain97"},"content":"    public String getDescription() {"},{"lineNumber":69,"author":{"gitId":"arihantjain97"},"content":"        return this.description;"},{"lineNumber":70,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":72,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"arihantjain97"},"content":"     * Get LocalDate object."},{"lineNumber":74,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"arihantjain97"},"content":"     * @return the LocalDate object."},{"lineNumber":76,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"arihantjain97"},"content":"    public LocalDate getDateObj() {"},{"lineNumber":78,"author":{"gitId":"arihantjain97"},"content":"        return this.date;"},{"lineNumber":79,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":81,"author":{"gitId":"arihantjain97"},"content":"    /***"},{"lineNumber":82,"author":{"gitId":"arihantjain97"},"content":"     * Get list variation Deadline Task String."},{"lineNumber":83,"author":{"gitId":"arihantjain97"},"content":"     * @return String Deadline Task String"},{"lineNumber":84,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"arihantjain97"},"content":"    @Override"},{"lineNumber":86,"author":{"gitId":"arihantjain97"},"content":"    public String toString() {"},{"lineNumber":87,"author":{"gitId":"arihantjain97"},"content":"        return \"[D]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description"},{"lineNumber":88,"author":{"gitId":"arihantjain97"},"content":"                + \" (by: \" + this.getDate() + \")\";"},{"lineNumber":89,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":90}},{"path":"src/main/java/DeadlinesCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":" * The type Deadlines command."},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":" */"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"public class DeadlinesCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"    private final String fullCommand;"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"    private final int DES_IDX \u003d 9;"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"    private final int BY_IDX \u003d 4;"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"     * Instantiates a new Deadlines command."},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"     * @param fullCommand the full command"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"    public DeadlinesCommand(String fullCommand) {"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage)"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"            throws DukeException.FileLoadError {"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"                String description \u003d"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"                        fullCommand.substring("},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"                                DES_IDX, fullCommand.indexOf(\u0027/\u0027) - 1);"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"                String by \u003d fullCommand.substring("},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"                        fullCommand.indexOf(\u0027/\u0027) + BY_IDX);"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"                Deadlines deadline \u003d new Deadlines(description, by);"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":"                taskList.addTask(deadline);"},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"                ui.taskAddMsg(taskList);"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"                storage.save(taskList);"},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":"    public Boolean isExit() {"},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"        return false;"},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":"}"},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":""}],"authorContributionMap":{"arihantjain97":33}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":" * The type Delete command."},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":" */"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"    private final int delTaskNum;"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"     * Instantiates a new Delete command."},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"     * @param fullCommand the full command"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"    public DeleteCommand(String fullCommand) {"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"        this.delTaskNum \u003d Integer.parseInt("},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"                fullCommand.replaceAll(\"[^0-9]\", \"\"));"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage)"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"            throws DukeException.TaskOutOfBoundsError,"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"            DukeException.FileLoadError {"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"                int numOfTasks \u003d taskList.getTasksCount();"},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"                if (this.delTaskNum \u003e 0 \u0026\u0026 this.delTaskNum \u003c\u003d numOfTasks) {"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"                    ui.taskDelMsg(taskList, delTaskNum);"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"                    taskList.delTask(delTaskNum - 1);"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"                    storage.save(taskList);"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":"                } else {"},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"                    throw new DukeException.TaskOutOfBoundsError("},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"                            \"Task number out of bounds\");"},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":"                }"},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":"    public Boolean isExit() {"},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":"        return false;"},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":34}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"import javafx.geometry.Pos;"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"import javafx.scene.Node;"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"import javafx.scene.control.Label;"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"public class DialogBox extends HBox {"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"    private final Label text;"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"    private final ImageView displayPicture;"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"    public DialogBox(Label l, ImageView iv) {"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"        text \u003d l;"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"        displayPicture \u003d iv;"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"        text.setWrapText(true);"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"        displayPicture.setFitWidth(100.0);"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"        displayPicture.setFitHeight(100.0);"},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"        this.setAlignment(Pos.TOP_RIGHT);"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"        this.getChildren().addAll(text, displayPicture);"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"    private void flip() {"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":"        FXCollections.reverse(tmp);"},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {"},{"lineNumber":34,"author":{"gitId":"arihantjain97"},"content":"        return new DialogBox(l, iv);"},{"lineNumber":35,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":37,"author":{"gitId":"arihantjain97"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {"},{"lineNumber":38,"author":{"gitId":"arihantjain97"},"content":"        var db \u003d new DialogBox(l, iv);"},{"lineNumber":39,"author":{"gitId":"arihantjain97"},"content":"        db.flip();"},{"lineNumber":40,"author":{"gitId":"arihantjain97"},"content":"        return db;"},{"lineNumber":41,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":42}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"public class DoneCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"    private final int doneTaskNum;"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"    public DoneCommand(String fullCommand) {"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"        this.doneTaskNum \u003d Integer.parseInt("},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"                fullCommand.replaceAll(\"[^0-9]\", \"\"));"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage)"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"            throws DukeException.TaskOutOfBoundsError, DukeException.FileLoadError {"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"                //check whether within range"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"                int numOfTasks \u003d taskList.getTasksCount();"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"                if (this.doneTaskNum \u003e 0 \u0026\u0026 this.doneTaskNum \u003c\u003d numOfTasks) {"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"                    taskList.getTasksList().get(doneTaskNum - 1).markAsDone();"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"                    ui.taskDoneMsg(taskList, doneTaskNum);"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"                    storage.save(taskList);"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"                } else {"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"                    throw new DukeException.TaskOutOfBoundsError(\"Task number \" +"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"                            \"out of bounds\");"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"                }"},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"    public Boolean isExit() {"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"        return false;"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":26}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"    private final Storage storage;"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"    private final TaskList tasks;"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"    private final Ui ui;"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"    //this is where all the collected output will be stored"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"    private ArrayList\u003cString\u003e outList;"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"    private String currentCommand;"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"    private boolean hasError;"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"    public Duke(String filePath) {"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"        TaskList tasks1;"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"        //new UI is created"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"        ui \u003d new Ui();"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"        this.hasError \u003d false;"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"        //Storage created via filePath"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"        //try to load tasks if not catch the error in UI"},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"            tasks1 \u003d new TaskList(storage.load());"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"            this.hasError \u003d true;"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"        } catch (BaseException e) {"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":"            ui.showError(e.toString());"},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"            tasks1 \u003d new TaskList();"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":"        //create outList;"},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":"        tasks \u003d tasks1;"},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"        this.outList \u003d ui.outList;"},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":"        this.currentCommand \u003d \"\";"},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":"        this.ui.showWelcome();"},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":35,"author":{"gitId":"arihantjain97"},"content":"    public boolean getHasError(){"},{"lineNumber":36,"author":{"gitId":"arihantjain97"},"content":"        return this.hasError;"},{"lineNumber":37,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":39,"author":{"gitId":"arihantjain97"},"content":"    public void setCurrentCommand(String currentCommand) {"},{"lineNumber":40,"author":{"gitId":"arihantjain97"},"content":"        this.currentCommand \u003d currentCommand;"},{"lineNumber":41,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":43,"author":{"gitId":"arihantjain97"},"content":"    public String getCurrentCommand(){"},{"lineNumber":44,"author":{"gitId":"arihantjain97"},"content":"        return this.currentCommand;"},{"lineNumber":45,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":47,"author":{"gitId":"arihantjain97"},"content":"    public String lastOutListElement(){"},{"lineNumber":48,"author":{"gitId":"arihantjain97"},"content":"        if(this.outList.size() \u003e 0) {"},{"lineNumber":49,"author":{"gitId":"arihantjain97"},"content":"            return this.outList.get(this.outList.size() - 1);"},{"lineNumber":50,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"arihantjain97"},"content":"        else{"},{"lineNumber":52,"author":{"gitId":"arihantjain97"},"content":"            return \"error\";"},{"lineNumber":53,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":56,"author":{"gitId":"arihantjain97"},"content":"    public String returnOutput(){"},{"lineNumber":57,"author":{"gitId":"arihantjain97"},"content":"        try {"},{"lineNumber":58,"author":{"gitId":"arihantjain97"},"content":"            Command c \u003d Parser.parse(this.currentCommand);"},{"lineNumber":59,"author":{"gitId":"arihantjain97"},"content":"            c.execute(tasks, ui, storage);"},{"lineNumber":60,"author":{"gitId":"arihantjain97"},"content":"            this.outList \u003d ui.outList;"},{"lineNumber":61,"author":{"gitId":"arihantjain97"},"content":"            String ret \u003d this.outList.get(this.outList.size() - 1);"},{"lineNumber":62,"author":{"gitId":"arihantjain97"},"content":"            this.hasError \u003d false;"},{"lineNumber":63,"author":{"gitId":"arihantjain97"},"content":"            return ret;"},{"lineNumber":64,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"arihantjain97"},"content":"        catch (BaseException e){"},{"lineNumber":66,"author":{"gitId":"arihantjain97"},"content":"            this.hasError \u003d true;"},{"lineNumber":67,"author":{"gitId":"arihantjain97"},"content":"            return e.getMessage();"},{"lineNumber":68,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"arihantjain97":67,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"public class DukeException {"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"    public static class TaskOutOfBoundsError extends BaseException {"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"        public TaskOutOfBoundsError(String message) {"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"            super(message);"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"    public static class EmptyTaskListError extends BaseException {"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"        public EmptyTaskListError(String message) {"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"            super(message);"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"    public static class TaskFormatError extends BaseException {"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"        public TaskFormatError(String message) {"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"            super(message);"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"    public static class NoMatchFound extends BaseException {"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"        public NoMatchFound(String message) {"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"            super(message);"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"    public static class FileLoadError extends BaseException {"},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":"        public FileLoadError(String message) {"},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":"            super(message);"},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":34,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":34}},{"path":"src/main/java/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":" * Represents an Event Task."},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":" *"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":" * @author Arihant Jain"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":" */"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"public class Events extends Task {"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"     * The at."},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"    private final String at;"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"     * The Date."},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"    private LocalDate date;"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"     * The Start time."},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"    private LocalTime startTime;"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":"     * The End time."},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"    private LocalTime endTime;"},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"     * Instantiates a new Events."},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":"     * @param description the task description"},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":"     * @param at          the at"},{"lineNumber":34,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"arihantjain97"},"content":"    public Events(String description, String at) {"},{"lineNumber":36,"author":{"gitId":"arihantjain97"},"content":"        super(description);"},{"lineNumber":37,"author":{"gitId":"arihantjain97"},"content":"        this.at \u003d at;"},{"lineNumber":38,"author":{"gitId":"arihantjain97"},"content":"        setDateTime(this.at);"},{"lineNumber":39,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":41,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"arihantjain97"},"content":"     * Set date time."},{"lineNumber":43,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"arihantjain97"},"content":"     * @param at Date and Time information"},{"lineNumber":45,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"arihantjain97"},"content":"    public void setDateTime(String at) {"},{"lineNumber":47,"author":{"gitId":"arihantjain97"},"content":"        String atDate \u003d at.substring(0, 10);"},{"lineNumber":48,"author":{"gitId":"arihantjain97"},"content":"        String atTime \u003d at.substring(11);"},{"lineNumber":49,"author":{"gitId":"arihantjain97"},"content":"        String[] atDateArr \u003d atDate.split(\"-\");"},{"lineNumber":50,"author":{"gitId":"arihantjain97"},"content":"        String[] atTimeArr \u003d atTime.split(\"-\");"},{"lineNumber":51,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":52,"author":{"gitId":"arihantjain97"},"content":"        this.date \u003d LocalDate.of(Integer.parseInt(atDateArr[0]),"},{"lineNumber":53,"author":{"gitId":"arihantjain97"},"content":"                Integer.parseInt(atDateArr[1]),"},{"lineNumber":54,"author":{"gitId":"arihantjain97"},"content":"                Integer.parseInt(atDateArr[2]));"},{"lineNumber":55,"author":{"gitId":"arihantjain97"},"content":"        this.startTime \u003d LocalTime.of("},{"lineNumber":56,"author":{"gitId":"arihantjain97"},"content":"                Integer.parseInt(atTimeArr[0].substring(0, 2)),"},{"lineNumber":57,"author":{"gitId":"arihantjain97"},"content":"                Integer.parseInt(atTimeArr[0].substring(2)));"},{"lineNumber":58,"author":{"gitId":"arihantjain97"},"content":"        this.endTime \u003d LocalTime.of("},{"lineNumber":59,"author":{"gitId":"arihantjain97"},"content":"                Integer.parseInt(atTimeArr[1].substring(0, 2)),"},{"lineNumber":60,"author":{"gitId":"arihantjain97"},"content":"                Integer.parseInt(atTimeArr[1].substring(2)));"},{"lineNumber":61,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":63,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"arihantjain97"},"content":"     * Get date string."},{"lineNumber":65,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"arihantjain97"},"content":"     * @return the string"},{"lineNumber":67,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"arihantjain97"},"content":"    public String getDate() {"},{"lineNumber":69,"author":{"gitId":"arihantjain97"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy\");"},{"lineNumber":70,"author":{"gitId":"arihantjain97"},"content":"        return this.date.format(format);"},{"lineNumber":71,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":73,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"arihantjain97"},"content":"     * Get start time string."},{"lineNumber":75,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"arihantjain97"},"content":"     * @return the string"},{"lineNumber":77,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"arihantjain97"},"content":"    public String getStartTime() {"},{"lineNumber":79,"author":{"gitId":"arihantjain97"},"content":"        return this.startTime.toString();"},{"lineNumber":80,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":82,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"arihantjain97"},"content":"     * Get end time string."},{"lineNumber":84,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"arihantjain97"},"content":"     * @return the string"},{"lineNumber":86,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"arihantjain97"},"content":"    public String getEndTime() {"},{"lineNumber":88,"author":{"gitId":"arihantjain97"},"content":"        return this.endTime.toString();"},{"lineNumber":89,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":91,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"arihantjain97"},"content":"     * Gets at."},{"lineNumber":93,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":94,"author":{"gitId":"arihantjain97"},"content":"     * @return the at"},{"lineNumber":95,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"arihantjain97"},"content":"    public String getAt() {"},{"lineNumber":97,"author":{"gitId":"arihantjain97"},"content":"        return this.at;"},{"lineNumber":98,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":100,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"arihantjain97"},"content":"     * Get date object."},{"lineNumber":102,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":103,"author":{"gitId":"arihantjain97"},"content":"     * @return the local date."},{"lineNumber":104,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"arihantjain97"},"content":"    public LocalDate getDateObj(){"},{"lineNumber":106,"author":{"gitId":"arihantjain97"},"content":"        return this.date;"},{"lineNumber":107,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":109,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"arihantjain97"},"content":"     * Get start time object."},{"lineNumber":111,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":112,"author":{"gitId":"arihantjain97"},"content":"     * @return the local time"},{"lineNumber":113,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"arihantjain97"},"content":"    public LocalTime getStartTimeObj(){"},{"lineNumber":115,"author":{"gitId":"arihantjain97"},"content":"        return this.startTime;"},{"lineNumber":116,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":118,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"arihantjain97"},"content":"     * Get end time object."},{"lineNumber":120,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":121,"author":{"gitId":"arihantjain97"},"content":"     * @return the local time"},{"lineNumber":122,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"arihantjain97"},"content":"    public LocalTime getEndTimeObj(){"},{"lineNumber":124,"author":{"gitId":"arihantjain97"},"content":"        return this.endTime;"},{"lineNumber":125,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":127,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":128,"author":{"gitId":"arihantjain97"},"content":"     * Gets description."},{"lineNumber":129,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":130,"author":{"gitId":"arihantjain97"},"content":"     * @return the description"},{"lineNumber":131,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"arihantjain97"},"content":"    public String getDescription() {"},{"lineNumber":133,"author":{"gitId":"arihantjain97"},"content":"        return this.description;"},{"lineNumber":134,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"arihantjain97"},"content":"    /***"},{"lineNumber":136,"author":{"gitId":"arihantjain97"},"content":"     * Get list variation Deadline Task String."},{"lineNumber":137,"author":{"gitId":"arihantjain97"},"content":"     * @return String Deadline Task String"},{"lineNumber":138,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":140,"author":{"gitId":"arihantjain97"},"content":"    @Override"},{"lineNumber":141,"author":{"gitId":"arihantjain97"},"content":"    public String toString() {"},{"lineNumber":142,"author":{"gitId":"arihantjain97"},"content":"        return \"[E]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description"},{"lineNumber":143,"author":{"gitId":"arihantjain97"},"content":"                + \" (at: \" + this.getDate()"},{"lineNumber":144,"author":{"gitId":"arihantjain97"},"content":"                + \" \" + this.getStartTime()"},{"lineNumber":145,"author":{"gitId":"arihantjain97"},"content":"                + \"-\" + this.getEndTime() + \")\";"},{"lineNumber":146,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"arihantjain97"},"content":"}"},{"lineNumber":148,"author":{"gitId":"arihantjain97"},"content":""}],"authorContributionMap":{"arihantjain97":148}},{"path":"src/main/java/EventsCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":" * The type Events command."},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":" */"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"public class EventsCommand extends Command {"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"    private final String fullCommand;"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"     * Instantiates a new Events command."},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"     * @param fullCommand the full command"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"    public EventsCommand(String fullCommand) {"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage)"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"            throws DukeException.FileLoadError {"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"        taskList.addTask("},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"                new Events(fullCommand.substring(6, fullCommand.indexOf(\u0027/\u0027) - 1),"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"                fullCommand.substring(fullCommand.indexOf(\u0027/\u0027) + 4)));"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"        ui.taskAddMsg(taskList);"},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"        storage.save(taskList);"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"    public Boolean isExit() {"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"        return false;"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":26}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":" * The type Find command."},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":" */"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"public class FindCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"    private final String fullCommand;"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"     * Instantiates a new Find command."},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"     * @param fullCommand the full command"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"    public FindCommand(String fullCommand) {"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage)"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"            throws DukeException.EmptyTaskListError, DukeException.NoMatchFound {"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"                //find the keyword in taskList"},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"                if (taskList.getTasksCount() \u003d\u003d 0) {"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"                    throw new DukeException.EmptyTaskListError(\"No Tasks were added\");"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"                } else {"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"                    String keyWord \u003d fullCommand.substring(5);"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":"                    ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"                    for (int i \u003d 0; i \u003c taskList.getTasksCount(); i++) {"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"                        if (taskList.getTasksList().get(i).description.contains(keyWord)) {"},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":"                            foundTasks.add(taskList.getTasksList().get(i));"},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":"                        }"},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"                    }"},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":"                    if (!foundTasks.isEmpty()) {"},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":"                        TaskList foundTaskList \u003d new TaskList(foundTasks);"},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":"                        ui.foundMsg(foundTaskList);"},{"lineNumber":34,"author":{"gitId":"arihantjain97"},"content":"                    } else {"},{"lineNumber":35,"author":{"gitId":"arihantjain97"},"content":"                        throw new DukeException.NoMatchFound(\"No Task Found containing \u0027\""},{"lineNumber":36,"author":{"gitId":"arihantjain97"},"content":"                                + keyWord + \"\u0027\");"},{"lineNumber":37,"author":{"gitId":"arihantjain97"},"content":"                    }"},{"lineNumber":38,"author":{"gitId":"arihantjain97"},"content":"                }"},{"lineNumber":39,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"arihantjain97"},"content":"    public Boolean isExit() {"},{"lineNumber":41,"author":{"gitId":"arihantjain97"},"content":"        return false;"},{"lineNumber":42,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":43}},{"path":"src/main/java/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"import javafx.application.Platform;"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"import javafx.scene.Scene;"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"import javafx.scene.control.Label;"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"import javafx.scene.image.Image;"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"import java.io.File;"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"import java.io.IOException;"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"import java.util.HashMap;"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":" * The type Gui."},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":" */"},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"public class Gui extends Application {"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"    private HashMap\u003cString, Image\u003e imageMap;"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"    private Scene welcomeScene;"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"    private Scene dukeRunScene;"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":"    private Button startButton;"},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"    private Button sendButton;"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"    private TextField userInput;"},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":"    private Stage primaryStage;"},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":"    private VBox dialogContainer;"},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"    private Image user;"},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":"    private Image bot;"},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"arihantjain97"},"content":"     * Load resources from resources folder."},{"lineNumber":35,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"arihantjain97"},"content":"    public void loadResources() {"},{"lineNumber":37,"author":{"gitId":"arihantjain97"},"content":"        assert ((new File(\"src/main/resources/images/botDead.png\")).exists()"},{"lineNumber":38,"author":{"gitId":"arihantjain97"},"content":"            \u0026\u0026 (new File(\"src/main/resources/images/botHappy.png\")).exists()"},{"lineNumber":39,"author":{"gitId":"arihantjain97"},"content":"            \u0026\u0026 (new File(\"src/main/resources/images/botNormal.png\")).exists())"},{"lineNumber":40,"author":{"gitId":"arihantjain97"},"content":"                : \"image files for bot do not exist\";"},{"lineNumber":41,"author":{"gitId":"arihantjain97"},"content":"        assert (new File(\"src/main/resources/images/userNormal.png\")).exists()"},{"lineNumber":42,"author":{"gitId":"arihantjain97"},"content":"                : \"image file for user does not exist\";"},{"lineNumber":43,"author":{"gitId":"arihantjain97"},"content":"        assert (new File(\"src/main/resources/images/welcomeScreen.png\")).exists()"},{"lineNumber":44,"author":{"gitId":"arihantjain97"},"content":"                : \"image file for welcome screen does not exist\";"},{"lineNumber":45,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":46,"author":{"gitId":"arihantjain97"},"content":"        this.imageMap \u003d new HashMap\u003c\u003e();"},{"lineNumber":47,"author":{"gitId":"arihantjain97"},"content":"        this.imageMap.put(\"botDead\", new Image(this.getClass().getResourceAsStream("},{"lineNumber":48,"author":{"gitId":"arihantjain97"},"content":"                \"/images/botDead.png\")));"},{"lineNumber":49,"author":{"gitId":"arihantjain97"},"content":"        this.imageMap.put(\"botHappy\", new Image(this.getClass().getResourceAsStream("},{"lineNumber":50,"author":{"gitId":"arihantjain97"},"content":"                \"/images/botHappy.png\")));"},{"lineNumber":51,"author":{"gitId":"arihantjain97"},"content":"        this.imageMap.put(\"botNormal\", new Image(this.getClass().getResourceAsStream("},{"lineNumber":52,"author":{"gitId":"arihantjain97"},"content":"                \"/images/botNormal.png\")));"},{"lineNumber":53,"author":{"gitId":"arihantjain97"},"content":"        this.imageMap.put(\"userNormal\", new Image(this.getClass().getResourceAsStream("},{"lineNumber":54,"author":{"gitId":"arihantjain97"},"content":"                \"/images/userNormal.png\")));"},{"lineNumber":55,"author":{"gitId":"arihantjain97"},"content":"        this.imageMap.put(\"welcomeScreen\", new Image(this.getClass().getResourceAsStream("},{"lineNumber":56,"author":{"gitId":"arihantjain97"},"content":"                \"/images/welcomeScreen.png\")));"},{"lineNumber":57,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":58,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":60,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"arihantjain97"},"content":"     * Create welcome screen scene."},{"lineNumber":62,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"arihantjain97"},"content":"     * @return the scene"},{"lineNumber":64,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"arihantjain97"},"content":"    public Scene welcomeCreate() {"},{"lineNumber":66,"author":{"gitId":"arihantjain97"},"content":"        ScrollPane scrollPane \u003d new ScrollPane();"},{"lineNumber":67,"author":{"gitId":"arihantjain97"},"content":"        VBox dialogContainer \u003d new VBox();"},{"lineNumber":68,"author":{"gitId":"arihantjain97"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":69,"author":{"gitId":"arihantjain97"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":70,"author":{"gitId":"arihantjain97"},"content":"        this.startButton \u003d new Button(\"start\");"},{"lineNumber":71,"author":{"gitId":"arihantjain97"},"content":"        scrollPane.setPrefSize(385, 535);"},{"lineNumber":72,"author":{"gitId":"arihantjain97"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":73,"author":{"gitId":"arihantjain97"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":74,"author":{"gitId":"arihantjain97"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":75,"author":{"gitId":"arihantjain97"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":76,"author":{"gitId":"arihantjain97"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":77,"author":{"gitId":"arihantjain97"},"content":"        startButton.setPrefWidth(55.0);"},{"lineNumber":78,"author":{"gitId":"arihantjain97"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":79,"author":{"gitId":"arihantjain97"},"content":"        AnchorPane.setBottomAnchor(startButton, 1.0);"},{"lineNumber":80,"author":{"gitId":"arihantjain97"},"content":"        AnchorPane.setRightAnchor(startButton, 175.0);"},{"lineNumber":81,"author":{"gitId":"arihantjain97"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":82,"author":{"gitId":"arihantjain97"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":83,"author":{"gitId":"arihantjain97"},"content":"        ImageView imageView \u003d new ImageView(imageMap.get(\"welcomeScreen\"));"},{"lineNumber":84,"author":{"gitId":"arihantjain97"},"content":"        imageView.setFitHeight(550.0);"},{"lineNumber":85,"author":{"gitId":"arihantjain97"},"content":"        imageView.setPreserveRatio(true);"},{"lineNumber":86,"author":{"gitId":"arihantjain97"},"content":"        mainLayout.getChildren().addAll(scrollPane, startButton, imageView);"},{"lineNumber":87,"author":{"gitId":"arihantjain97"},"content":"        return new Scene(mainLayout);"},{"lineNumber":88,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":89,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":90,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":92,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"arihantjain97"},"content":"     * Create duke main screen scene."},{"lineNumber":94,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":95,"author":{"gitId":"arihantjain97"},"content":"     * @return the scene"},{"lineNumber":96,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"arihantjain97"},"content":"    public Scene dukeRunCreate() {"},{"lineNumber":98,"author":{"gitId":"arihantjain97"},"content":"        ScrollPane scrollPane \u003d new ScrollPane();"},{"lineNumber":99,"author":{"gitId":"arihantjain97"},"content":"        this.dialogContainer \u003d new VBox();"},{"lineNumber":100,"author":{"gitId":"arihantjain97"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":101,"author":{"gitId":"arihantjain97"},"content":"        this.userInput \u003d new TextField();"},{"lineNumber":102,"author":{"gitId":"arihantjain97"},"content":"        this.sendButton \u003d new Button(\"send\");"},{"lineNumber":103,"author":{"gitId":"arihantjain97"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":104,"author":{"gitId":"arihantjain97"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":105,"author":{"gitId":"arihantjain97"},"content":"        scrollPane.setPrefSize(385, 535);"},{"lineNumber":106,"author":{"gitId":"arihantjain97"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":107,"author":{"gitId":"arihantjain97"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":108,"author":{"gitId":"arihantjain97"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":109,"author":{"gitId":"arihantjain97"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":110,"author":{"gitId":"arihantjain97"},"content":"        // You will need to import `javafx.scene.layout.Region` for this."},{"lineNumber":111,"author":{"gitId":"arihantjain97"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":112,"author":{"gitId":"arihantjain97"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":113,"author":{"gitId":"arihantjain97"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":114,"author":{"gitId":"arihantjain97"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":115,"author":{"gitId":"arihantjain97"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":116,"author":{"gitId":"arihantjain97"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":117,"author":{"gitId":"arihantjain97"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);"},{"lineNumber":118,"author":{"gitId":"arihantjain97"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":119,"author":{"gitId":"arihantjain97"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":120,"author":{"gitId":"arihantjain97"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":121,"author":{"gitId":"arihantjain97"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":122,"author":{"gitId":"arihantjain97"},"content":"        this.bot \u003d this.imageMap.get(\"botHappy\");"},{"lineNumber":123,"author":{"gitId":"arihantjain97"},"content":"        return new Scene(mainLayout);"},{"lineNumber":124,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":125,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":127,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":128,"author":{"gitId":"arihantjain97"},"content":"     * Stage set."},{"lineNumber":129,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":130,"author":{"gitId":"arihantjain97"},"content":"     * @param scene the scene"},{"lineNumber":131,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"arihantjain97"},"content":"    public void stageSet(Scene scene) {"},{"lineNumber":133,"author":{"gitId":"arihantjain97"},"content":"        this.primaryStage.setScene(scene);"},{"lineNumber":134,"author":{"gitId":"arihantjain97"},"content":"        this.primaryStage.setTitle(\"Duke\");"},{"lineNumber":135,"author":{"gitId":"arihantjain97"},"content":"        this.primaryStage.setResizable(false);"},{"lineNumber":136,"author":{"gitId":"arihantjain97"},"content":"        this.primaryStage.setMinHeight(600.0);"},{"lineNumber":137,"author":{"gitId":"arihantjain97"},"content":"        this.primaryStage.setMinWidth(400.0);"},{"lineNumber":138,"author":{"gitId":"arihantjain97"},"content":"        this.primaryStage.show();"},{"lineNumber":139,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":141,"author":{"gitId":"arihantjain97"},"content":"    private String getResponse(String userTest, Duke duke) {"},{"lineNumber":142,"author":{"gitId":"arihantjain97"},"content":"        duke.setCurrentCommand(userTest);"},{"lineNumber":143,"author":{"gitId":"arihantjain97"},"content":"        return duke.returnOutput();"},{"lineNumber":144,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":146,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"arihantjain97"},"content":"     * Handle user input."},{"lineNumber":148,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":149,"author":{"gitId":"arihantjain97"},"content":"     * @param duke the duke"},{"lineNumber":150,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":151,"author":{"gitId":"arihantjain97"},"content":"    public void handleUserInput(Duke duke) {"},{"lineNumber":152,"author":{"gitId":"arihantjain97"},"content":"        String userCommand \u003d userInput.getText();"},{"lineNumber":153,"author":{"gitId":"arihantjain97"},"content":"        Label userText \u003d new Label(userCommand);"},{"lineNumber":154,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":155,"author":{"gitId":"arihantjain97"},"content":"        String responseText \u003d getResponse(userCommand, duke);"},{"lineNumber":156,"author":{"gitId":"arihantjain97"},"content":"        Label dukeText \u003d new Label(responseText);"},{"lineNumber":157,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":158,"author":{"gitId":"arihantjain97"},"content":"        this.user \u003d this.imageMap.get(\"userNormal\");"},{"lineNumber":159,"author":{"gitId":"arihantjain97"},"content":"        this.bot \u003d this.imageMap.get(\"botNormal\");"},{"lineNumber":160,"author":{"gitId":"arihantjain97"},"content":"        if (duke.getHasError()) {"},{"lineNumber":161,"author":{"gitId":"arihantjain97"},"content":"            this.bot \u003d this.imageMap.get(\"botDead\");"},{"lineNumber":162,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":164,"author":{"gitId":"arihantjain97"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":165,"author":{"gitId":"arihantjain97"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),"},{"lineNumber":166,"author":{"gitId":"arihantjain97"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(bot))"},{"lineNumber":167,"author":{"gitId":"arihantjain97"},"content":"        );"},{"lineNumber":168,"author":{"gitId":"arihantjain97"},"content":"        if (userCommand.equals(\"bye\")) {"},{"lineNumber":169,"author":{"gitId":"arihantjain97"},"content":"            Platform.exit();"},{"lineNumber":170,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"arihantjain97"},"content":"        userInput.clear();"},{"lineNumber":172,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":174,"author":{"gitId":"arihantjain97"},"content":"    @Override"},{"lineNumber":175,"author":{"gitId":"arihantjain97"},"content":"    public void start(Stage stage) throws IOException {"},{"lineNumber":176,"author":{"gitId":"arihantjain97"},"content":"        loadResources();"},{"lineNumber":177,"author":{"gitId":"arihantjain97"},"content":"        this.primaryStage \u003d stage;"},{"lineNumber":178,"author":{"gitId":"arihantjain97"},"content":"        this.welcomeScene \u003d welcomeCreate();"},{"lineNumber":179,"author":{"gitId":"arihantjain97"},"content":"        this.dukeRunScene \u003d dukeRunCreate();"},{"lineNumber":180,"author":{"gitId":"arihantjain97"},"content":"            //String filePath \u003d new File(\".\").getCanonicalPath();"},{"lineNumber":181,"author":{"gitId":"arihantjain97"},"content":"            //filePath.concat(\"/data.txt\");"},{"lineNumber":182,"author":{"gitId":"arihantjain97"},"content":"            Duke duke \u003d new Duke(\"data.txt\");"},{"lineNumber":183,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":184,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":185,"author":{"gitId":"arihantjain97"},"content":"        //Duke duke \u003d new Duke(\"src/main/java/data.txt\");"},{"lineNumber":186,"author":{"gitId":"arihantjain97"},"content":"        stageSet(this.welcomeScene);"},{"lineNumber":187,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":188,"author":{"gitId":"arihantjain97"},"content":"        this.startButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":189,"author":{"gitId":"arihantjain97"},"content":"            stageSet(this.dukeRunScene);"},{"lineNumber":190,"author":{"gitId":"arihantjain97"},"content":"        });"},{"lineNumber":191,"author":{"gitId":"arihantjain97"},"content":"        this.userInput.setOnAction((event) -\u003e {"},{"lineNumber":192,"author":{"gitId":"arihantjain97"},"content":"            handleUserInput(duke);"},{"lineNumber":193,"author":{"gitId":"arihantjain97"},"content":"        });"},{"lineNumber":194,"author":{"gitId":"arihantjain97"},"content":"        this.sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":195,"author":{"gitId":"arihantjain97"},"content":"            handleUserInput(duke);"},{"lineNumber":196,"author":{"gitId":"arihantjain97"},"content":"        });"},{"lineNumber":197,"author":{"gitId":"arihantjain97"},"content":"        this.dialogContainer.getChildren().addAll("},{"lineNumber":198,"author":{"gitId":"arihantjain97"},"content":"                DialogBox.getDukeDialog(new Label(duke.lastOutListElement()),"},{"lineNumber":199,"author":{"gitId":"arihantjain97"},"content":"                        new ImageView(this.bot))"},{"lineNumber":200,"author":{"gitId":"arihantjain97"},"content":"        );"},{"lineNumber":201,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":202,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":203,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":204,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":205,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":205}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":" */"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"        Application.launch(Gui.class, args);"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":10}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"public class ListCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage)"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"            throws DukeException.EmptyTaskListError {"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"                if (taskList.getTasksCount() \u003d\u003d 0) {"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"                    throw new DukeException.EmptyTaskListError(\"No Tasks were added\");"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"                } else {"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"                    //System.out.println(taskList.toString());"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"                    ui.listMsg(taskList);"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"                }"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"    public Boolean isExit() {"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"        return false;"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":15}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"import java.util.regex.Matcher;"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"import java.util.regex.Pattern;"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"public class Parser {"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"    //make sense of commands"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"    //outputs command object"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"    public static final Pattern"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"            DONE_COMMAND_FORMAT \u003d Pattern.compile(\"done\\\\s\\\\d+\");"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"    public static final Pattern"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"            DELETE_COMMAND_FORMAT \u003d Pattern.compile(\"delete\\\\s+\\\\d+\");"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"    public static final Pattern"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"            FIND_COMMAND_FORMAT \u003d Pattern.compile(\"find(\\\\s([A-Za-z])+)+\");"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"    public static final Pattern TODO_COMMAND_FORMAT \u003d"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"            Pattern.compile(\"todo(\\\\s([A-Za-z])+)+\");"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"    public static final Pattern DEADLINES_COMMAND_FORMAT \u003d"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"            Pattern.compile(\"deadline(\\\\s([A-Za-z])+)\""},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"                    + \"+\\\\s/by\\\\s\\\\d\\\\d\\\\d\\\\d-\\\\d\\\\d-\\\\d\\\\d\");"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"    public static final Pattern EVENTS_COMMAND_FORMAT \u003d"},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"            Pattern.compile(\"event(\\\\s([A-Za-z])+)\""},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"                    + \"+\\\\s/at\\\\s\\\\d\\\\d\\\\d\\\\d-\\\\d\\\\d\" +"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"                    \"-\\\\d\\\\d\\\\s\\\\d\\\\d\\\\d\\\\d-\\\\d\\\\d\\\\d\\\\d\");"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"    public Parser() {"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":"    public static Command parse(String fullCommand)"},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"            throws DukeException.TaskFormatError {"},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":"                //this.fullCommand \u003d fullCommand;"},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":"                String ret \u003d \"\";"},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":"                //sort out fullCommand type"},{"lineNumber":34,"author":{"gitId":"arihantjain97"},"content":"                Command retCommand;"},{"lineNumber":35,"author":{"gitId":"arihantjain97"},"content":"                if (fullCommand.equals(\"bye\")) {"},{"lineNumber":36,"author":{"gitId":"arihantjain97"},"content":"                    //create byeCommand"},{"lineNumber":37,"author":{"gitId":"arihantjain97"},"content":"                    return new ByeCommand();"},{"lineNumber":38,"author":{"gitId":"arihantjain97"},"content":"                } else if (fullCommand.equals(\"list\")) {"},{"lineNumber":39,"author":{"gitId":"arihantjain97"},"content":"                    //create listCommand"},{"lineNumber":40,"author":{"gitId":"arihantjain97"},"content":"                    return new ListCommand();"},{"lineNumber":41,"author":{"gitId":"arihantjain97"},"content":"                } else if (fullCommand.equals(\"sort\")) {"},{"lineNumber":42,"author":{"gitId":"arihantjain97"},"content":"                    return new SortCommand();"},{"lineNumber":43,"author":{"gitId":"arihantjain97"},"content":"                } else {"},{"lineNumber":44,"author":{"gitId":"arihantjain97"},"content":"                    final Matcher doneMatcher \u003d"},{"lineNumber":45,"author":{"gitId":"arihantjain97"},"content":"                            DONE_COMMAND_FORMAT.matcher(fullCommand);"},{"lineNumber":46,"author":{"gitId":"arihantjain97"},"content":"                    final Matcher deleteMatcher \u003d"},{"lineNumber":47,"author":{"gitId":"arihantjain97"},"content":"                            DELETE_COMMAND_FORMAT.matcher(fullCommand);"},{"lineNumber":48,"author":{"gitId":"arihantjain97"},"content":"                    final Matcher todoMatcher \u003d"},{"lineNumber":49,"author":{"gitId":"arihantjain97"},"content":"                            TODO_COMMAND_FORMAT.matcher(fullCommand);"},{"lineNumber":50,"author":{"gitId":"arihantjain97"},"content":"                    final Matcher deadlinesMatcher \u003d"},{"lineNumber":51,"author":{"gitId":"arihantjain97"},"content":"                            DEADLINES_COMMAND_FORMAT.matcher(fullCommand);"},{"lineNumber":52,"author":{"gitId":"arihantjain97"},"content":"                    final Matcher eventsMatcher \u003d"},{"lineNumber":53,"author":{"gitId":"arihantjain97"},"content":"                            EVENTS_COMMAND_FORMAT.matcher(fullCommand);"},{"lineNumber":54,"author":{"gitId":"arihantjain97"},"content":"                    final Matcher findMatcher \u003d"},{"lineNumber":55,"author":{"gitId":"arihantjain97"},"content":"                            FIND_COMMAND_FORMAT.matcher(fullCommand);"},{"lineNumber":56,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":57,"author":{"gitId":"arihantjain97"},"content":"                    if (doneMatcher.matches()) {"},{"lineNumber":58,"author":{"gitId":"arihantjain97"},"content":"                        //create done command"},{"lineNumber":59,"author":{"gitId":"arihantjain97"},"content":"                        return new DoneCommand(fullCommand);"},{"lineNumber":60,"author":{"gitId":"arihantjain97"},"content":"                    } else if (deleteMatcher.matches()) {"},{"lineNumber":61,"author":{"gitId":"arihantjain97"},"content":"                        //create delete command"},{"lineNumber":62,"author":{"gitId":"arihantjain97"},"content":"                        return new DeleteCommand(fullCommand);"},{"lineNumber":63,"author":{"gitId":"arihantjain97"},"content":"                    } else if (todoMatcher.matches()) {"},{"lineNumber":64,"author":{"gitId":"arihantjain97"},"content":"                        //create todo command"},{"lineNumber":65,"author":{"gitId":"arihantjain97"},"content":"                        return new TodoCommand(fullCommand);"},{"lineNumber":66,"author":{"gitId":"arihantjain97"},"content":"                    } else if (deadlinesMatcher.matches()) {"},{"lineNumber":67,"author":{"gitId":"arihantjain97"},"content":"                        //create deadline command"},{"lineNumber":68,"author":{"gitId":"arihantjain97"},"content":"                        return new DeadlinesCommand(fullCommand);"},{"lineNumber":69,"author":{"gitId":"arihantjain97"},"content":"                    } else if (eventsMatcher.matches()) {"},{"lineNumber":70,"author":{"gitId":"arihantjain97"},"content":"                        //create events command"},{"lineNumber":71,"author":{"gitId":"arihantjain97"},"content":"                        return new EventsCommand(fullCommand);"},{"lineNumber":72,"author":{"gitId":"arihantjain97"},"content":"                    } else if (findMatcher.matches()) {"},{"lineNumber":73,"author":{"gitId":"arihantjain97"},"content":"                        //create match command"},{"lineNumber":74,"author":{"gitId":"arihantjain97"},"content":"                        return new FindCommand(fullCommand);"},{"lineNumber":75,"author":{"gitId":"arihantjain97"},"content":"                    } else {"},{"lineNumber":76,"author":{"gitId":"arihantjain97"},"content":"                        //***NO COMMAND MATCH (THROW ERROR)"},{"lineNumber":77,"author":{"gitId":"arihantjain97"},"content":"                        throw new DukeException.TaskFormatError(\"Task is of incorrect format\");"},{"lineNumber":78,"author":{"gitId":"arihantjain97"},"content":"                    }"},{"lineNumber":79,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":80,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":81,"author":{"gitId":"arihantjain97"},"content":"                }"},{"lineNumber":82,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":83,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":85,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":85}},{"path":"src/main/java/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"public class SortCommand extends Command{"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"    @Override"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage)"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"        throws DukeException.EmptyTaskListError {"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"            if (taskList.getTasksCount() \u003d\u003d 0) {"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"                throw new DukeException.EmptyTaskListError(\"No Tasks were added\");"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"            } else {"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"                TaskList sortedTL \u003d taskList.dateSort();"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"                ui.listMsg(sortedTL);"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"            }"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"    public Boolean isExit() {"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"        return null;"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":19}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"import java.nio.charset.StandardCharsets;"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"import java.nio.file.Files;"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"import java.nio.file.Path;"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":" * Represents a Storage Object."},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":" * @author Arihant Jain"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":" */"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"public class Storage {"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"    private final String filePath;"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"     * Instantiates a new Storage object."},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"     * @param filePath the file path of text file we are reading and writing to"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"    public Storage(String filePath) {"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":"     * Create file."},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":"     * @param path the path"},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":"     * @throws DukeException.FileLoadError the file load error"},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"arihantjain97"},"content":"    public static void createFile(Path path)"},{"lineNumber":35,"author":{"gitId":"arihantjain97"},"content":"            throws DukeException.FileLoadError {"},{"lineNumber":36,"author":{"gitId":"arihantjain97"},"content":"                File newFile \u003d new File(path.toString());"},{"lineNumber":37,"author":{"gitId":"arihantjain97"},"content":"                try {"},{"lineNumber":38,"author":{"gitId":"arihantjain97"},"content":"                    newFile.createNewFile();"},{"lineNumber":39,"author":{"gitId":"arihantjain97"},"content":"                } catch (IOException e) {"},{"lineNumber":40,"author":{"gitId":"arihantjain97"},"content":"                    throw new DukeException.FileLoadError(\"File at: \" +"},{"lineNumber":41,"author":{"gitId":"arihantjain97"},"content":"                            path.toString() + \" cannot be created\");"},{"lineNumber":42,"author":{"gitId":"arihantjain97"},"content":"                }"},{"lineNumber":43,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":44,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":46,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"arihantjain97"},"content":"     * Load array list."},{"lineNumber":48,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"arihantjain97"},"content":"     * @return the array list of tasks loaded from text file"},{"lineNumber":50,"author":{"gitId":"arihantjain97"},"content":"     * @throws DukeException.FileLoadError the file load error"},{"lineNumber":51,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"arihantjain97"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException.FileLoadError {"},{"lineNumber":53,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":54,"author":{"gitId":"arihantjain97"},"content":"        ArrayList\u003cTask\u003e loadTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":55,"author":{"gitId":"arihantjain97"},"content":"        //check whether file exists"},{"lineNumber":56,"author":{"gitId":"arihantjain97"},"content":"        File file \u003d new File(this.filePath);"},{"lineNumber":57,"author":{"gitId":"arihantjain97"},"content":"        Path path \u003d Paths.get(this.filePath);"},{"lineNumber":58,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":59,"author":{"gitId":"arihantjain97"},"content":"        if (!file.isFile()) {"},{"lineNumber":60,"author":{"gitId":"arihantjain97"},"content":"            createFile(path);"},{"lineNumber":61,"author":{"gitId":"arihantjain97"},"content":"            this.load();"},{"lineNumber":62,"author":{"gitId":"arihantjain97"},"content":"        } else {"},{"lineNumber":63,"author":{"gitId":"arihantjain97"},"content":"            try {"},{"lineNumber":64,"author":{"gitId":"arihantjain97"},"content":"                Scanner sc \u003d new Scanner(new File(path.toString()));"},{"lineNumber":65,"author":{"gitId":"arihantjain97"},"content":"                while (sc.hasNextLine()) {"},{"lineNumber":66,"author":{"gitId":"arihantjain97"},"content":"                    String fileLine \u003d sc.nextLine().trim();"},{"lineNumber":67,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":68,"author":{"gitId":"arihantjain97"},"content":"                    if (fileLine.charAt(0) \u003d\u003d \u0027T\u0027) {"},{"lineNumber":69,"author":{"gitId":"arihantjain97"},"content":"                        Todo newTask \u003d new Todo(fileLine.substring(8));"},{"lineNumber":70,"author":{"gitId":"arihantjain97"},"content":"                        if (fileLine.charAt(4) \u003d\u003d \u00271\u0027) {"},{"lineNumber":71,"author":{"gitId":"arihantjain97"},"content":"                            newTask.markAsDone();"},{"lineNumber":72,"author":{"gitId":"arihantjain97"},"content":"                        }"},{"lineNumber":73,"author":{"gitId":"arihantjain97"},"content":"                        loadTasks.add(newTask);"},{"lineNumber":74,"author":{"gitId":"arihantjain97"},"content":"                    } else if (fileLine.charAt(0) \u003d\u003d \u0027D\u0027) {"},{"lineNumber":75,"author":{"gitId":"arihantjain97"},"content":"                        //index of last \"|\""},{"lineNumber":76,"author":{"gitId":"arihantjain97"},"content":"                        int idx \u003d fileLine.lastIndexOf(\"|\");"},{"lineNumber":77,"author":{"gitId":"arihantjain97"},"content":"                        Deadlines newTask \u003d new Deadlines(fileLine.substring(8, idx - 1),"},{"lineNumber":78,"author":{"gitId":"arihantjain97"},"content":"                                fileLine.substring(idx + 2));"},{"lineNumber":79,"author":{"gitId":"arihantjain97"},"content":"                        if (fileLine.charAt(4) \u003d\u003d \u00271\u0027) {"},{"lineNumber":80,"author":{"gitId":"arihantjain97"},"content":"                            newTask.markAsDone();"},{"lineNumber":81,"author":{"gitId":"arihantjain97"},"content":"                        }"},{"lineNumber":82,"author":{"gitId":"arihantjain97"},"content":"                        loadTasks.add(newTask);"},{"lineNumber":83,"author":{"gitId":"arihantjain97"},"content":"                    } else if (fileLine.charAt(0) \u003d\u003d \u0027E\u0027) {"},{"lineNumber":84,"author":{"gitId":"arihantjain97"},"content":"                        int idx \u003d fileLine.lastIndexOf(\"|\");"},{"lineNumber":85,"author":{"gitId":"arihantjain97"},"content":"                        Events newTask \u003d"},{"lineNumber":86,"author":{"gitId":"arihantjain97"},"content":"                                new Events(fileLine.substring(8, idx - 1),"},{"lineNumber":87,"author":{"gitId":"arihantjain97"},"content":"                                fileLine.substring(idx + 2));"},{"lineNumber":88,"author":{"gitId":"arihantjain97"},"content":"                        if (fileLine.charAt(4) \u003d\u003d \u00271\u0027) {"},{"lineNumber":89,"author":{"gitId":"arihantjain97"},"content":"                            newTask.markAsDone();"},{"lineNumber":90,"author":{"gitId":"arihantjain97"},"content":"                        }"},{"lineNumber":91,"author":{"gitId":"arihantjain97"},"content":"                        loadTasks.add(newTask);"},{"lineNumber":92,"author":{"gitId":"arihantjain97"},"content":"                    }"},{"lineNumber":93,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":94,"author":{"gitId":"arihantjain97"},"content":"                }"},{"lineNumber":95,"author":{"gitId":"arihantjain97"},"content":"            } catch (FileNotFoundException e) {"},{"lineNumber":96,"author":{"gitId":"arihantjain97"},"content":"                throw new DukeException.FileLoadError(\"File at: \""},{"lineNumber":97,"author":{"gitId":"arihantjain97"},"content":"                        + path.toString() + \" cannot be read\");"},{"lineNumber":98,"author":{"gitId":"arihantjain97"},"content":"            }"},{"lineNumber":99,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"arihantjain97"},"content":"        return loadTasks;"},{"lineNumber":101,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":103,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"arihantjain97"},"content":"     * Save."},{"lineNumber":105,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":106,"author":{"gitId":"arihantjain97"},"content":"     * @param taskList the tasks that will be saved to the text file"},{"lineNumber":107,"author":{"gitId":"arihantjain97"},"content":"     * @throws DukeException.FileLoadError the file load error"},{"lineNumber":108,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"arihantjain97"},"content":"    public void save(TaskList taskList) throws DukeException.FileLoadError {"},{"lineNumber":110,"author":{"gitId":"arihantjain97"},"content":"        Path path \u003d Paths.get(this.filePath);"},{"lineNumber":111,"author":{"gitId":"arihantjain97"},"content":"        String strOut \u003d \"\";"},{"lineNumber":112,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":113,"author":{"gitId":"arihantjain97"},"content":"        // type | 1-\u003e done / 0-\u003e not done | description | date \u0026 time"},{"lineNumber":114,"author":{"gitId":"arihantjain97"},"content":"        for (int i \u003d 0; i \u003c taskList.getTasksCount(); i++) {"},{"lineNumber":115,"author":{"gitId":"arihantjain97"},"content":"            //String stat \u003d \"\";"},{"lineNumber":116,"author":{"gitId":"arihantjain97"},"content":"            String str \u003d \"\";"},{"lineNumber":117,"author":{"gitId":"arihantjain97"},"content":"            if (taskList.getTasksList().get(i).getStatusIcon().equals(\" \")) {"},{"lineNumber":118,"author":{"gitId":"arihantjain97"},"content":"                str \u003d str + \"0\";"},{"lineNumber":119,"author":{"gitId":"arihantjain97"},"content":"            } else {"},{"lineNumber":120,"author":{"gitId":"arihantjain97"},"content":"                str \u003d str + \"1\";"},{"lineNumber":121,"author":{"gitId":"arihantjain97"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":123,"author":{"gitId":"arihantjain97"},"content":"            str \u003d \"| \" + str + \" | \" +"},{"lineNumber":124,"author":{"gitId":"arihantjain97"},"content":"                    taskList.getTasksList().get(i).description;"},{"lineNumber":125,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":126,"author":{"gitId":"arihantjain97"},"content":"            if (taskList.getTasksList().get(i) instanceof Deadlines) {"},{"lineNumber":127,"author":{"gitId":"arihantjain97"},"content":"                str \u003d \"D \" + str + \" | \" +"},{"lineNumber":128,"author":{"gitId":"arihantjain97"},"content":"                        ((Deadlines) taskList.getTasksList().get(i)).getBy();"},{"lineNumber":129,"author":{"gitId":"arihantjain97"},"content":"            } else if (taskList.getTasksList().get(i) instanceof Events) {"},{"lineNumber":130,"author":{"gitId":"arihantjain97"},"content":"                str \u003d \"E \" + str + \" | \" +"},{"lineNumber":131,"author":{"gitId":"arihantjain97"},"content":"                        ((Events) taskList.getTasksList().get(i)).getAt();"},{"lineNumber":132,"author":{"gitId":"arihantjain97"},"content":"            } else {"},{"lineNumber":133,"author":{"gitId":"arihantjain97"},"content":"                str \u003d \"T \" + str;"},{"lineNumber":134,"author":{"gitId":"arihantjain97"},"content":"            }"},{"lineNumber":135,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":136,"author":{"gitId":"arihantjain97"},"content":"            if (i !\u003d taskList.getTasksList().size() - 1) {"},{"lineNumber":137,"author":{"gitId":"arihantjain97"},"content":"                strOut \u003d strOut + str + \"\\n\";"},{"lineNumber":138,"author":{"gitId":"arihantjain97"},"content":"            } else {"},{"lineNumber":139,"author":{"gitId":"arihantjain97"},"content":"                strOut \u003d strOut + str;"},{"lineNumber":140,"author":{"gitId":"arihantjain97"},"content":"            }"},{"lineNumber":141,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":143,"author":{"gitId":"arihantjain97"},"content":"        try {"},{"lineNumber":144,"author":{"gitId":"arihantjain97"},"content":"            Files.write(path,"},{"lineNumber":145,"author":{"gitId":"arihantjain97"},"content":"                    strOut.getBytes(StandardCharsets.UTF_8));"},{"lineNumber":146,"author":{"gitId":"arihantjain97"},"content":"        } catch (IOException e) {"},{"lineNumber":147,"author":{"gitId":"arihantjain97"},"content":"            try {"},{"lineNumber":148,"author":{"gitId":"arihantjain97"},"content":"                createFile(path);"},{"lineNumber":149,"author":{"gitId":"arihantjain97"},"content":"                this.save(taskList);"},{"lineNumber":150,"author":{"gitId":"arihantjain97"},"content":"            } catch (BaseException err) {"},{"lineNumber":151,"author":{"gitId":"arihantjain97"},"content":"                throw new DukeException.FileLoadError(\"File at: \" + path.toString() + \" cannot be written\");"},{"lineNumber":152,"author":{"gitId":"arihantjain97"},"content":"            }"},{"lineNumber":153,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":154,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":156,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":157,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":158,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":159,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":160}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":" * Represents a Deadline Task."},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":" * @author Arihant Jain"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":" */"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"public class Task {"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"     * The Task Description."},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"    protected String description;"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"     * The boolean indicating if Task is completed."},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"    protected boolean isDone;"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"     * Instantiates a new Task."},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"     * @param description the task description"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"    @SuppressWarnings({\"checkstyle:HiddenField\", \"checkstyle:FinalParameters\"})"},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"    public Task(String description) {"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"        this.description \u003d description;"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"        this.isDone \u003d false;"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":"     * Gets completion status icon."},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"     * @return the status icon"},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":"    public String getStatusIcon() {"},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":"        return (isDone ? \"X\" : \" \"); //return tick or X symbols"},{"lineNumber":34,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":36,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"arihantjain97"},"content":"     * Mark Task as completed."},{"lineNumber":38,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"arihantjain97"},"content":"    public void markAsDone() {"},{"lineNumber":40,"author":{"gitId":"arihantjain97"},"content":"        this.isDone \u003d true;"},{"lineNumber":41,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":43,"author":{"gitId":"arihantjain97"},"content":"    /***"},{"lineNumber":44,"author":{"gitId":"arihantjain97"},"content":"     * Get list variation Task String."},{"lineNumber":45,"author":{"gitId":"arihantjain97"},"content":"     * @return String Task String"},{"lineNumber":46,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"arihantjain97"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"arihantjain97"},"content":"    public String toString() {"},{"lineNumber":49,"author":{"gitId":"arihantjain97"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + description;"},{"lineNumber":50,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":51}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":" * The type Task list."},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":" */"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"public class TaskList {"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"    /***"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"     * Arraylist of Tasks (Todo, Deadline, Event)."},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"    private final ArrayList\u003cTask\u003e tasksList;"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"     * Instantiates a new Task list."},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"    public TaskList() {"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"        this.tasksList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"     * Instantiates a new Task list."},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"     * @param loadTasksList the load tasks list"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":"    public TaskList(ArrayList\u003cTask\u003e loadTasksList) {"},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"            this.tasksList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"            this.tasksList.addAll(loadTasksList);"},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"    public ArrayList\u003cTask\u003e getTasksList() {"},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":"        return this.tasksList;"},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":34,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"arihantjain97"},"content":"     * Gets tasks count."},{"lineNumber":36,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"arihantjain97"},"content":"     * @return the tasks count"},{"lineNumber":38,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"arihantjain97"},"content":"    public int getTasksCount() {"},{"lineNumber":40,"author":{"gitId":"arihantjain97"},"content":"        return this.tasksList.size();"},{"lineNumber":41,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":43,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"arihantjain97"},"content":"     * Adds a new Task to the Task list."},{"lineNumber":45,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"arihantjain97"},"content":"     * @param task the task"},{"lineNumber":47,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"arihantjain97"},"content":"    public void addTask(Task task) {"},{"lineNumber":49,"author":{"gitId":"arihantjain97"},"content":"        //System.out.println(\"i reached addTask\");"},{"lineNumber":50,"author":{"gitId":"arihantjain97"},"content":"        this.tasksList.add(task);"},{"lineNumber":51,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":53,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"arihantjain97"},"content":"     * Deletes a Task in Task List based on index."},{"lineNumber":55,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"arihantjain97"},"content":"     * @param index the task index"},{"lineNumber":57,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"arihantjain97"},"content":"    public void delTask(int index) {"},{"lineNumber":59,"author":{"gitId":"arihantjain97"},"content":"        this.tasksList.remove(index);"},{"lineNumber":60,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"arihantjain97"},"content":"     * Sorts Tasks in Task List chronologically."},{"lineNumber":63,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"arihantjain97"},"content":"     * @return  Sorted Task List"},{"lineNumber":65,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"arihantjain97"},"content":"    public TaskList dateSort() {"},{"lineNumber":67,"author":{"gitId":"arihantjain97"},"content":"        ArrayList\u003cTimeTask\u003e sortedTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":68,"author":{"gitId":"arihantjain97"},"content":"        ArrayList\u003cTask\u003e nonSortedTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":69,"author":{"gitId":"arihantjain97"},"content":"        ArrayList\u003cTask\u003e chronoTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":70,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":71,"author":{"gitId":"arihantjain97"},"content":"        for (int i \u003d 0; i \u003c this.getTasksCount(); i++) {"},{"lineNumber":72,"author":{"gitId":"arihantjain97"},"content":"            if (this.getTasksList().get(i) instanceof Todo) {"},{"lineNumber":73,"author":{"gitId":"arihantjain97"},"content":"                nonSortedTasks.add(this.getTasksList().get(i));"},{"lineNumber":74,"author":{"gitId":"arihantjain97"},"content":"            } else if (this.getTasksList().get(i) instanceof Deadlines) {"},{"lineNumber":75,"author":{"gitId":"arihantjain97"},"content":"                sortedTasks.add("},{"lineNumber":76,"author":{"gitId":"arihantjain97"},"content":"                        new TimeTask((Deadlines) this.getTasksList().get(i)));"},{"lineNumber":77,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":78,"author":{"gitId":"arihantjain97"},"content":"            } else {"},{"lineNumber":79,"author":{"gitId":"arihantjain97"},"content":"                assert (this.getTasksList().get(i) instanceof Events)"},{"lineNumber":80,"author":{"gitId":"arihantjain97"},"content":"                        : \"dateSort() error\";"},{"lineNumber":81,"author":{"gitId":"arihantjain97"},"content":"                sortedTasks.add("},{"lineNumber":82,"author":{"gitId":"arihantjain97"},"content":"                        new TimeTask((Events) this.getTasksList().get(i)));"},{"lineNumber":83,"author":{"gitId":"arihantjain97"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"arihantjain97"},"content":"        Collections.sort(sortedTasks, Collections.reverseOrder());"},{"lineNumber":86,"author":{"gitId":"arihantjain97"},"content":"        //Collections.sort(sortedTasks);"},{"lineNumber":87,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":88,"author":{"gitId":"arihantjain97"},"content":"        for (int i \u003d 0; i \u003c sortedTasks.size(); i++) {"},{"lineNumber":89,"author":{"gitId":"arihantjain97"},"content":"            chronoTasks.add(sortedTasks.get(i).getTask());"},{"lineNumber":90,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"arihantjain97"},"content":"        chronoTasks.addAll(0,nonSortedTasks);"},{"lineNumber":92,"author":{"gitId":"arihantjain97"},"content":"        //chronoTasks.addAll(nonSortedTasks);"},{"lineNumber":93,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":94,"author":{"gitId":"arihantjain97"},"content":"        return new TaskList(chronoTasks);"},{"lineNumber":95,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":96,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":98,"author":{"gitId":"arihantjain97"},"content":"    /***"},{"lineNumber":99,"author":{"gitId":"arihantjain97"},"content":"     * Provides the complete current list of Tasks."},{"lineNumber":100,"author":{"gitId":"arihantjain97"},"content":"     * @return String of current list of Tasks"},{"lineNumber":101,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":103,"author":{"gitId":"arihantjain97"},"content":"    @Override"},{"lineNumber":104,"author":{"gitId":"arihantjain97"},"content":"    public String toString() {"},{"lineNumber":105,"author":{"gitId":"arihantjain97"},"content":"        //List Tasks"},{"lineNumber":106,"author":{"gitId":"arihantjain97"},"content":"        String tasksListStr \u003d \"\";"},{"lineNumber":107,"author":{"gitId":"arihantjain97"},"content":"        for (int i \u003d 0; i \u003c this.tasksList.size(); i++) {"},{"lineNumber":108,"author":{"gitId":"arihantjain97"},"content":"            tasksListStr \u003d tasksListStr + (i + 1) + \". \""},{"lineNumber":109,"author":{"gitId":"arihantjain97"},"content":"                    + this.tasksList.get(i).toString();"},{"lineNumber":110,"author":{"gitId":"arihantjain97"},"content":"            if (i !\u003d this.tasksList.size() - 1) {"},{"lineNumber":111,"author":{"gitId":"arihantjain97"},"content":"                tasksListStr \u003d tasksListStr + \"\\n\";"},{"lineNumber":112,"author":{"gitId":"arihantjain97"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"arihantjain97"},"content":"        return tasksListStr;"},{"lineNumber":115,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":116}},{"path":"src/main/java/TimeTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":" * The type Time task."},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":" */"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"public class TimeTask implements Comparable\u003cTimeTask\u003e {"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"    private LocalDate date;"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"    private LocalTime startTime;"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"    private LocalTime endTime;"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"    private Task task;"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"     * Instantiates a new Time task."},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"     * @param deadline the deadline"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"    public TimeTask(Deadlines deadline) {"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"        this.date \u003d deadline.getDateObj();"},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"        this.startTime \u003d LocalTime.of(0, 0);"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"        this.endTime \u003d LocalTime.of(0, 0);"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"        this.task \u003d deadline;"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"     * Instantiates a new Time task."},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":"     * @param event the event"},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":"    public TimeTask(Events event) {"},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":"        this.date \u003d event.getDateObj();"},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":"        this.startTime \u003d event.getStartTimeObj();"},{"lineNumber":34,"author":{"gitId":"arihantjain97"},"content":"        this.endTime \u003d event.getEndTimeObj();"},{"lineNumber":35,"author":{"gitId":"arihantjain97"},"content":"        this.task \u003d event;"},{"lineNumber":36,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":38,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"arihantjain97"},"content":"     * Gets task."},{"lineNumber":40,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"arihantjain97"},"content":"     * @return the task"},{"lineNumber":42,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"arihantjain97"},"content":"    public Task getTask() {"},{"lineNumber":44,"author":{"gitId":"arihantjain97"},"content":"        return task;"},{"lineNumber":45,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":47,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"arihantjain97"},"content":"     * Gets date."},{"lineNumber":49,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"arihantjain97"},"content":"     * @return the date"},{"lineNumber":51,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"arihantjain97"},"content":"    public LocalDate getDate() {"},{"lineNumber":53,"author":{"gitId":"arihantjain97"},"content":"        return date;"},{"lineNumber":54,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":56,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"arihantjain97"},"content":"     * Gets end time."},{"lineNumber":58,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"arihantjain97"},"content":"     * @return the end time"},{"lineNumber":60,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"arihantjain97"},"content":"    public LocalTime getEndTime() {"},{"lineNumber":62,"author":{"gitId":"arihantjain97"},"content":"        return endTime;"},{"lineNumber":63,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":65,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"arihantjain97"},"content":"     * Gets start time."},{"lineNumber":67,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"arihantjain97"},"content":"     * @return the start time"},{"lineNumber":69,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"arihantjain97"},"content":"    public LocalTime getStartTime() {"},{"lineNumber":71,"author":{"gitId":"arihantjain97"},"content":"        return startTime;"},{"lineNumber":72,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":74,"author":{"gitId":"arihantjain97"},"content":"    @Override"},{"lineNumber":75,"author":{"gitId":"arihantjain97"},"content":"    public String toString() {"},{"lineNumber":76,"author":{"gitId":"arihantjain97"},"content":"        return this.task.toString();"},{"lineNumber":77,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":79,"author":{"gitId":"arihantjain97"},"content":"    @Override"},{"lineNumber":80,"author":{"gitId":"arihantjain97"},"content":"    public int compareTo(TimeTask o) {"},{"lineNumber":81,"author":{"gitId":"arihantjain97"},"content":"        if (this.date.isBefore(o.getDate())) {"},{"lineNumber":82,"author":{"gitId":"arihantjain97"},"content":"            return 1;"},{"lineNumber":83,"author":{"gitId":"arihantjain97"},"content":"        } else if (this.date.isEqual(o.getDate())) {"},{"lineNumber":84,"author":{"gitId":"arihantjain97"},"content":"            if (this.startTime.isBefore(o.getStartTime())) {"},{"lineNumber":85,"author":{"gitId":"arihantjain97"},"content":"                return 1;"},{"lineNumber":86,"author":{"gitId":"arihantjain97"},"content":"            } else if (this.startTime.equals(o.getStartTime())) {"},{"lineNumber":87,"author":{"gitId":"arihantjain97"},"content":"                return 0;"},{"lineNumber":88,"author":{"gitId":"arihantjain97"},"content":"            } else {"},{"lineNumber":89,"author":{"gitId":"arihantjain97"},"content":"                return -1;"},{"lineNumber":90,"author":{"gitId":"arihantjain97"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"arihantjain97"},"content":"        } else {"},{"lineNumber":92,"author":{"gitId":"arihantjain97"},"content":"            return -1;"},{"lineNumber":93,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":95}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":" * Represents a Todo Task."},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":" * @author Arihant Jain"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":" */"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"public class Todo extends Task {"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"     * Instantiates a new Todo."},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"     * @param description the task description"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"    public Todo(String description) {"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"    public String getDescription() {"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"        return this.description;"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"    /***"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"     * Get list variation Todo Task String."},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"     * @return String Todo Task String"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":27}},{"path":"src/main/java/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"public class TodoCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"    private final String fullCommand;"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"    public TodoCommand(String fullCommand) {"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"        this.fullCommand \u003d fullCommand;"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage)"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"            throws DukeException.FileLoadError {"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"                //System.out.println(this.fullCommand);"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"                taskList.addTask(new Todo(this.fullCommand.substring(5)));"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"                storage.save(taskList);"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"                //System.out.println(\"i think i saved\");"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"                ui.taskAddMsg(taskList);"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"    public Boolean isExit() {"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"        return false;"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":20}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":" * The type Ui."},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":" */"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"     * The Out list."},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"    public ArrayList\u003cString\u003e outList;"},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"    private static final String DIVIDER_LINE"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"            \u003d \"____________________________________________________________\\n\";"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"    private static final String LIST_MESSAGE"},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"            \u003d \"Here are the tasks in your list:\";"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"    private static final String DONE_MESSAGE"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"            \u003d \"Nice! I\u0027ve marked this task as done:\";"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"    private static final String TASK_ADD_MESSAGE"},{"lineNumber":18,"author":{"gitId":"arihantjain97"},"content":"            \u003d \"Got it. I\u0027ve added this task:\";"},{"lineNumber":19,"author":{"gitId":"arihantjain97"},"content":"    private static final String TASK_COUNT_MESSAGE"},{"lineNumber":20,"author":{"gitId":"arihantjain97"},"content":"            \u003d \"Tasks in list:\";"},{"lineNumber":21,"author":{"gitId":"arihantjain97"},"content":"    private static final String TASK_DELETE_MESSAGE"},{"lineNumber":22,"author":{"gitId":"arihantjain97"},"content":"            \u003d \"Noted. I\u0027ve removed this task:\";"},{"lineNumber":23,"author":{"gitId":"arihantjain97"},"content":"    private static final String TASK_FOUND_MESSAGE"},{"lineNumber":24,"author":{"gitId":"arihantjain97"},"content":"            \u003d \"Matched Tasks:\";"},{"lineNumber":25,"author":{"gitId":"arihantjain97"},"content":"    private static final String LOADING_ERROR_MESSAGE"},{"lineNumber":26,"author":{"gitId":"arihantjain97"},"content":"            \u003d \"Error in loading tasks from text file\";"},{"lineNumber":27,"author":{"gitId":"arihantjain97"},"content":"    private static final String GOODBYE_MESSAGE"},{"lineNumber":28,"author":{"gitId":"arihantjain97"},"content":"            \u003d \"GOODBYE! Thanks for using DUKE\";"},{"lineNumber":29,"author":{"gitId":"arihantjain97"},"content":"    private static final String WELCOME_MESSAGE"},{"lineNumber":30,"author":{"gitId":"arihantjain97"},"content":"            \u003d \"Hello from\\n\""},{"lineNumber":31,"author":{"gitId":"arihantjain97"},"content":"            + \" ____        _        \\n\""},{"lineNumber":32,"author":{"gitId":"arihantjain97"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":33,"author":{"gitId":"arihantjain97"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":34,"author":{"gitId":"arihantjain97"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":35,"author":{"gitId":"arihantjain97"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\""},{"lineNumber":36,"author":{"gitId":"arihantjain97"},"content":"            + \"\\nHello! I\u0027m Duke\""},{"lineNumber":37,"author":{"gitId":"arihantjain97"},"content":"            + \"\\nWhat can I do for you?\";"},{"lineNumber":38,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":39,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"arihantjain97"},"content":"     * Instantiates a new Ui."},{"lineNumber":41,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"arihantjain97"},"content":"    public Ui() {"},{"lineNumber":43,"author":{"gitId":"arihantjain97"},"content":"        this.outList \u003d new ArrayList\u003cString\u003e();"},{"lineNumber":44,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":46,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"arihantjain97"},"content":"     * Show to user."},{"lineNumber":48,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"arihantjain97"},"content":"     * @param stringToUser the string to user"},{"lineNumber":50,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"arihantjain97"},"content":"    public void showToUser(String... stringToUser) {"},{"lineNumber":52,"author":{"gitId":"arihantjain97"},"content":"        String printStr \u003d \"\";"},{"lineNumber":53,"author":{"gitId":"arihantjain97"},"content":"        for (String s : stringToUser) {"},{"lineNumber":54,"author":{"gitId":"arihantjain97"},"content":"            printStr \u003d printStr + s.replace(\"\\n\", System.lineSeparator());"},{"lineNumber":55,"author":{"gitId":"arihantjain97"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"arihantjain97"},"content":"        this.outList.add(printStr);"},{"lineNumber":57,"author":{"gitId":"arihantjain97"},"content":"        //return printStr;"},{"lineNumber":58,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":60,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"arihantjain97"},"content":"     * Show welcome."},{"lineNumber":62,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"arihantjain97"},"content":"    public void showWelcome() {"},{"lineNumber":64,"author":{"gitId":"arihantjain97"},"content":"        showToUser(WELCOME_MESSAGE);"},{"lineNumber":65,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":67,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"arihantjain97"},"content":"     * Bye msg."},{"lineNumber":69,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"arihantjain97"},"content":"    public void byeMsg() {"},{"lineNumber":71,"author":{"gitId":"arihantjain97"},"content":"        showToUser(GOODBYE_MESSAGE);"},{"lineNumber":72,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":74,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"arihantjain97"},"content":"     * Show loading error."},{"lineNumber":76,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"arihantjain97"},"content":"    public void showLoadingError() {"},{"lineNumber":78,"author":{"gitId":"arihantjain97"},"content":"        showToUser(LOADING_ERROR_MESSAGE);"},{"lineNumber":79,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":81,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"arihantjain97"},"content":"     * Show line."},{"lineNumber":83,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"arihantjain97"},"content":"    public void showLine() {"},{"lineNumber":85,"author":{"gitId":"arihantjain97"},"content":"        showToUser(DIVIDER_LINE);"},{"lineNumber":86,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":88,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"arihantjain97"},"content":"     * Task add msg."},{"lineNumber":90,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"arihantjain97"},"content":"     * @param taskList the task list"},{"lineNumber":92,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"arihantjain97"},"content":"    public void taskAddMsg(TaskList taskList) {"},{"lineNumber":94,"author":{"gitId":"arihantjain97"},"content":"        String printStr \u003d TASK_ADD_MESSAGE + \"\\n\""},{"lineNumber":95,"author":{"gitId":"arihantjain97"},"content":"                + taskList.getTasksList().get("},{"lineNumber":96,"author":{"gitId":"arihantjain97"},"content":"                        taskList.getTasksCount() - 1).toString()"},{"lineNumber":97,"author":{"gitId":"arihantjain97"},"content":"                + \"\\n\""},{"lineNumber":98,"author":{"gitId":"arihantjain97"},"content":"                + TASK_COUNT_MESSAGE"},{"lineNumber":99,"author":{"gitId":"arihantjain97"},"content":"                + Integer.toString(taskList.getTasksCount());"},{"lineNumber":100,"author":{"gitId":"arihantjain97"},"content":"        showToUser(printStr);"},{"lineNumber":101,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":103,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"arihantjain97"},"content":"     * Task del msg."},{"lineNumber":105,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":106,"author":{"gitId":"arihantjain97"},"content":"     * @param taskList   the task list"},{"lineNumber":107,"author":{"gitId":"arihantjain97"},"content":"     * @param delTaskNum the del task num"},{"lineNumber":108,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"arihantjain97"},"content":"    public void taskDelMsg(TaskList taskList, int delTaskNum) {"},{"lineNumber":110,"author":{"gitId":"arihantjain97"},"content":"        String printStr \u003d TASK_DELETE_MESSAGE + \"\\n\""},{"lineNumber":111,"author":{"gitId":"arihantjain97"},"content":"                + taskList.getTasksList().get(delTaskNum - 1).toString() + \"\\n\""},{"lineNumber":112,"author":{"gitId":"arihantjain97"},"content":"                + TASK_COUNT_MESSAGE"},{"lineNumber":113,"author":{"gitId":"arihantjain97"},"content":"                + Integer.toString(taskList.getTasksCount() - 1);"},{"lineNumber":114,"author":{"gitId":"arihantjain97"},"content":"        showToUser(printStr);"},{"lineNumber":115,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":117,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":118,"author":{"gitId":"arihantjain97"},"content":"     * Task done msg."},{"lineNumber":119,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":120,"author":{"gitId":"arihantjain97"},"content":"     * @param taskList    the task list"},{"lineNumber":121,"author":{"gitId":"arihantjain97"},"content":"     * @param doneTaskNum the done task num"},{"lineNumber":122,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"arihantjain97"},"content":"    public void taskDoneMsg(TaskList taskList, int doneTaskNum) {"},{"lineNumber":124,"author":{"gitId":"arihantjain97"},"content":"        String printStr \u003d DONE_MESSAGE + \"\\n\""},{"lineNumber":125,"author":{"gitId":"arihantjain97"},"content":"                + taskList.getTasksList().get(doneTaskNum - 1).toString();"},{"lineNumber":126,"author":{"gitId":"arihantjain97"},"content":"        showToUser(printStr);"},{"lineNumber":127,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":129,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":130,"author":{"gitId":"arihantjain97"},"content":"     * List msg."},{"lineNumber":131,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":132,"author":{"gitId":"arihantjain97"},"content":"     * @param taskList the task list"},{"lineNumber":133,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":134,"author":{"gitId":"arihantjain97"},"content":"    public void listMsg(TaskList taskList) {"},{"lineNumber":135,"author":{"gitId":"arihantjain97"},"content":"        String printStr \u003d LIST_MESSAGE + \"\\n\""},{"lineNumber":136,"author":{"gitId":"arihantjain97"},"content":"                + taskList.toString();"},{"lineNumber":137,"author":{"gitId":"arihantjain97"},"content":"        showToUser(printStr);"},{"lineNumber":138,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":140,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":141,"author":{"gitId":"arihantjain97"},"content":"     * Found msg."},{"lineNumber":142,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":143,"author":{"gitId":"arihantjain97"},"content":"     * @param taskList the task list"},{"lineNumber":144,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":145,"author":{"gitId":"arihantjain97"},"content":"    public void foundMsg(TaskList taskList) {"},{"lineNumber":146,"author":{"gitId":"arihantjain97"},"content":"        String printStr \u003d TASK_FOUND_MESSAGE + \"\\n\""},{"lineNumber":147,"author":{"gitId":"arihantjain97"},"content":"                + taskList.toString();"},{"lineNumber":148,"author":{"gitId":"arihantjain97"},"content":"        showToUser(printStr);"},{"lineNumber":149,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":151,"author":{"gitId":"arihantjain97"},"content":"    /**"},{"lineNumber":152,"author":{"gitId":"arihantjain97"},"content":"     * Show error."},{"lineNumber":153,"author":{"gitId":"arihantjain97"},"content":"     *"},{"lineNumber":154,"author":{"gitId":"arihantjain97"},"content":"     * @param errorMsg the error msg"},{"lineNumber":155,"author":{"gitId":"arihantjain97"},"content":"     */"},{"lineNumber":156,"author":{"gitId":"arihantjain97"},"content":"    public void showError(String errorMsg) {"},{"lineNumber":157,"author":{"gitId":"arihantjain97"},"content":"        showToUser(errorMsg);"},{"lineNumber":158,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":160,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":161,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":162,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":163,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":164,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":165,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":165}},{"path":"src/main/java/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"D | 0 | finish homework | 2020-03-01"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"E | 1 | class | 2020-01-01 0900-1000"}],"authorContributionMap":{"arihantjain97":2}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"public class DukeTest {"},{"lineNumber":5,"author":{"gitId":"arihantjain97"},"content":"    @Test"},{"lineNumber":6,"author":{"gitId":"arihantjain97"},"content":"    public void deadlineTaskString(){"},{"lineNumber":7,"author":{"gitId":"arihantjain97"},"content":"        assertEquals(\"[D][ ] tasktest (by: 01 February 2020)\","},{"lineNumber":8,"author":{"gitId":"arihantjain97"},"content":"                new Deadlines(\"tasktest\", \"2020-02-01\").toString());"},{"lineNumber":9,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":11,"author":{"gitId":"arihantjain97"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"arihantjain97"},"content":"    public void eventsTaskString(){"},{"lineNumber":13,"author":{"gitId":"arihantjain97"},"content":"        assertEquals(\"[E][ ] tasktest (at: 01 February 2020 08:00-09:00)\","},{"lineNumber":14,"author":{"gitId":"arihantjain97"},"content":"                new Events(\"tasktest\", \"2020-02-01 0800-0900\").toString());"},{"lineNumber":15,"author":{"gitId":"arihantjain97"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":""},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"}"}],"authorContributionMap":{"arihantjain97":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"arihantjain97"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"arihantjain97"},"content":"list"},{"lineNumber":3,"author":{"gitId":"arihantjain97"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"arihantjain97"},"content":"event project meeting /at Mon 2-4pm"}],"authorContributionMap":{"arihantjain97":4}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"arihantjain97"},"content":"javac  -cp C:\\repos\\CS2103T\\duke\\src\\main\\java -Xlint:none -d ..\\bin C:\\repos\\CS2103T\\duke\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"arihantjain97":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"arihantjain97"},"content":"//if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"arihantjain97"},"content":"if ! javac -cp C:/repos/CS2103T/duke/src/main/java -Xlint:none -d ../bin C:/repos/CS2103T/duke/src/main/java/*.java"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"arihantjain97":2,"-":37}}]
