[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"JayChenYJ":15,"-":46}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":" * A Deadline task that inherits Task."},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":" */"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"public class Deadline extends Task{"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"    /** Date/Timing information for task to be completed by. */"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"    protected String by;"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"    public Deadline(String description, String by, boolean isDone, boolean existing) {"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"        super(description, isDone);"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"        if (existing) {"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"            this.by \u003d by;"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"        } else {"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"            LocalDate date \u003d LocalDate.parse(by);"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"            this.by \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"     * A toString unique for Deadline Task."},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"     * @return Label for Deadline - \"D\", the description of the task, followed by the deadline."},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":31}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import javafx.geometry.Insets;"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import javafx.geometry.Pos;"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.Node;"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.control.Label;"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.shape.Rectangle;"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.text.Font;"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"import java.io.IOException;"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"import java.util.Collections;"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":" * An example of a custom control using FXML."},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":" * containing text from the speaker."},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":" */"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"public class DialogBox extends HBox {"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"    private Label dialog;"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"    private ImageView displayPicture;"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"            fxmlLoader.load();"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"        } catch (IOException e) {"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"            e.printStackTrace();"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"        dialog.setText(text);"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"        dialog.setFont(new Font(\"Arial\", 15));"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"        displayPicture.setImage(img);"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"        displayPicture.setFitWidth(100.0);"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"        displayPicture.setFitHeight(100.0);"},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"        Rectangle clip \u003d new Rectangle("},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"                displayPicture.getFitWidth(), displayPicture.getFitHeight()"},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"        );"},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"        clip.setArcWidth(100);"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"        clip.setArcHeight(100);"},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"        displayPicture.setClip(clip);"},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"        dialog.setPadding(new Insets(0,10,0,10));"},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":"        this.setBackground(new Background(new BackgroundFill(Color.LIGHTBLUE, new CornerRadii(20), Insets.EMPTY)));"},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"JayChenYJ"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":61,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"JayChenYJ"},"content":"    private void flip() {"},{"lineNumber":63,"author":{"gitId":"JayChenYJ"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":64,"author":{"gitId":"JayChenYJ"},"content":"        Collections.reverse(tmp);"},{"lineNumber":65,"author":{"gitId":"JayChenYJ"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":66,"author":{"gitId":"JayChenYJ"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":67,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":69,"author":{"gitId":"JayChenYJ"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":70,"author":{"gitId":"JayChenYJ"},"content":"        return new DialogBox(text, img);"},{"lineNumber":71,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":73,"author":{"gitId":"JayChenYJ"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":74,"author":{"gitId":"JayChenYJ"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":75,"author":{"gitId":"JayChenYJ"},"content":"        db.flip();"},{"lineNumber":76,"author":{"gitId":"JayChenYJ"},"content":"        return db;"},{"lineNumber":77,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":78}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":" * The Duke project."},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":" */"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"    private final Ui ui;"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"    private final Storage storage;"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"    private final Parser parser;"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"    public Duke() throws IOException {"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"        ui \u003d new Ui();"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"        storage \u003d new Storage();"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"        parser \u003d new Parser();"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"        storage.readOrCreateFile();"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"     * Generates a response to user input."},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"     * @param input The user input."},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"     * @return Return the correct output from the given input."},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"     * @throws FileNotFoundException Exception thrown when the file does not exist, should not happen."},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"    String getResponse(String input) throws FileNotFoundException {"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"        String result \u003d parser.processInput(input, storage.tasks, ui);"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"        storage.writeListIntoFile();"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"        return result;"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":""}],"authorContributionMap":{"JayChenYJ":29,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":" * Custom exception class for Duke project."},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"public class DukeException extends Exception{"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"    public DukeException(String message) {"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"        super(message);"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":9}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":" * An Event task that inherits Task."},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":" */"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"public class Event extends Task{"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"    /** Date/Timing information for task to be carried out at. */"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"    protected String at;"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"    public Event(String description, String at, boolean isDone, boolean existing) {"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"        super(description, isDone);"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"        if (existing) {"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"            this.at \u003d at;"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"        } else {"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"            LocalDate date \u003d LocalDate.parse(at);"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"            this.at \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"     * A toString uniquely for Event Task."},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"     * @return Label for Event - \"E\", the description of the task, followed by the timing."},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":31}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":" */"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.Scene;"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import javafx.stage.Stage;"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":" */"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"    private final Duke duke \u003d new Duke();"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"    public Main() throws IOException {"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"            stage.show();"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"            e.printStackTrace();"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":32}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"import javafx.geometry.Insets;"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.control.Button;"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.image.Image;"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.layout.*;"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":" */"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"    private VBox dialogContainer;"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"    private TextField userInput;"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"    private Button sendButton;"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"    private Duke duke;"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"    private final Ui ui \u003d new Ui();"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"    public void initialize() {"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"        dialogContainer.setPadding(new Insets(10,0,0,10));"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"        dialogContainer.setSpacing(10);"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"                DialogBox.getDukeDialog(ui.showWelcomeMsg(), dukeImage)"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"        );"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"        duke \u003d d;"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"    @FXML"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"    private void handleUserInput() throws FileNotFoundException {"},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":"        );"},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":"        userInput.clear();"},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":58}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"import javafx.application.Platform;"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"public class Parser {"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"    /** The number of tasks at the start of the program. */"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"    public static int totalTasks \u003d 0;"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"     * Process the user input to make sense for the system."},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"     * @param nextInput The user input."},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks The Task Arraylist containing user tasks in sequence."},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"     * @param ui UI structure to show the user correct message."},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"     * @return Return the correct logic and GUI output."},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"    public String processInput(String nextInput, TaskList tasks, Ui ui) {"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"        String command \u003d nextInput.contains(\" \") ? nextInput.split(\" \")[0] : nextInput;"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"            switch (command) {"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"                case \"todo\":"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"                    return todo(nextInput, tasks, ui);"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"                case \"deadline\":"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"                    return deadline(nextInput, tasks, ui);"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"                case \"event\":"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"                    return event(nextInput, tasks, ui);"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"                case \"done\":"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"                    return done(nextInput, tasks, totalTasks, ui);"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"                case \"delete\":"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"                    return delete(nextInput, tasks, totalTasks, ui);"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"                case \"list\":"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"                    return list(tasks, ui);"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"                case \"find\":"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"                    return find(nextInput, tasks, ui);"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"                case \"exit\":"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"                    return exitCommand();"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"                default:"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"                    return wrongCommand();"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"        } catch (DukeException e) {"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"            return e.getMessage();"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"     * Increase the total number of tasks in the list by 1."},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"    public static void taskAdded() {"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"        totalTasks++;"},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"     * Decrease the total number of tasks in the list by 1."},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"    public static void taskDeleted() {"},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"        totalTasks--;"},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":"     * Adds a Todo task."},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":"     * @param nextInput The description of the task."},{"lineNumber":60,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks The Task Arraylist containing user tasks in sequence."},{"lineNumber":61,"author":{"gitId":"JayChenYJ"},"content":"     * @param ui UI structure to show the user correct message."},{"lineNumber":62,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":63,"author":{"gitId":"JayChenYJ"},"content":"     * @throws DukeException Exception thrown if the command given is invalid."},{"lineNumber":64,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"JayChenYJ"},"content":"    public String todo(String nextInput, TaskList tasks, Ui ui) throws DukeException{"},{"lineNumber":66,"author":{"gitId":"JayChenYJ"},"content":"        if (nextInput.length() \u003c 6) {"},{"lineNumber":67,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":68,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"JayChenYJ"},"content":"        String command \u003d nextInput.substring(5);"},{"lineNumber":70,"author":{"gitId":"JayChenYJ"},"content":"        tasks.add(new Todo(command, false));"},{"lineNumber":71,"author":{"gitId":"JayChenYJ"},"content":"        taskAdded();"},{"lineNumber":72,"author":{"gitId":"JayChenYJ"},"content":"        return ui.showTodoMsg(tasks, totalTasks);"},{"lineNumber":73,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":75,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"JayChenYJ"},"content":"     * Adds a Deadline task."},{"lineNumber":77,"author":{"gitId":"JayChenYJ"},"content":"     * @param nextInput The description of the task."},{"lineNumber":78,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks The Task Arraylist containing user tasks in sequence."},{"lineNumber":79,"author":{"gitId":"JayChenYJ"},"content":"     * @param ui UI structure to show the user correct message."},{"lineNumber":80,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":81,"author":{"gitId":"JayChenYJ"},"content":"     * @throws DukeException Exception thrown if the command given is invalid."},{"lineNumber":82,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"JayChenYJ"},"content":"    public String deadline(String nextInput, TaskList tasks, Ui ui) throws DukeException{"},{"lineNumber":84,"author":{"gitId":"JayChenYJ"},"content":"        if (nextInput.length() \u003c 10) {"},{"lineNumber":85,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":86,"author":{"gitId":"JayChenYJ"},"content":"        } else if (!nextInput.contains(\"/\")){"},{"lineNumber":87,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"OOPS!!! The date information of a deadline cannot be empty.\");"},{"lineNumber":88,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"JayChenYJ"},"content":"        String command \u003d nextInput.substring(9, nextInput.indexOf(\"/\") - 1);"},{"lineNumber":90,"author":{"gitId":"JayChenYJ"},"content":"        String dateInfo \u003d nextInput.substring(nextInput.indexOf(\"/\") + 4);"},{"lineNumber":91,"author":{"gitId":"JayChenYJ"},"content":"        tasks.add(new Deadline(command, dateInfo, false, false));"},{"lineNumber":92,"author":{"gitId":"JayChenYJ"},"content":"        taskAdded();"},{"lineNumber":93,"author":{"gitId":"JayChenYJ"},"content":"        return ui.showDeadlineMsg(tasks, totalTasks);"},{"lineNumber":94,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":96,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"JayChenYJ"},"content":"     * Adds a Event task."},{"lineNumber":98,"author":{"gitId":"JayChenYJ"},"content":"     * @param nextInput The description of the task."},{"lineNumber":99,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks The Task Arraylist containing user tasks in sequence."},{"lineNumber":100,"author":{"gitId":"JayChenYJ"},"content":"     * @param ui UI structure to show the user correct message."},{"lineNumber":101,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":102,"author":{"gitId":"JayChenYJ"},"content":"     * @throws DukeException Exception thrown if the command given is invalid."},{"lineNumber":103,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"JayChenYJ"},"content":"    public String event(String nextInput, TaskList tasks, Ui ui) throws DukeException{"},{"lineNumber":105,"author":{"gitId":"JayChenYJ"},"content":"        if (nextInput.length() \u003c 7) {"},{"lineNumber":106,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");"},{"lineNumber":107,"author":{"gitId":"JayChenYJ"},"content":"        } else if (!nextInput.contains(\"/\")) {"},{"lineNumber":108,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"OOPS!!! The date information of an event cannot be empty.\");"},{"lineNumber":109,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"JayChenYJ"},"content":"        String command \u003d nextInput.substring(6, nextInput.indexOf(\"/\") - 1);"},{"lineNumber":111,"author":{"gitId":"JayChenYJ"},"content":"        String dateInfo \u003d nextInput.substring(nextInput.indexOf(\"/\") + 4);"},{"lineNumber":112,"author":{"gitId":"JayChenYJ"},"content":"        tasks.add(new Event(command, dateInfo, false, false));"},{"lineNumber":113,"author":{"gitId":"JayChenYJ"},"content":"        taskAdded();"},{"lineNumber":114,"author":{"gitId":"JayChenYJ"},"content":"        return ui.showEventMsg(tasks, totalTasks);"},{"lineNumber":115,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":117,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":118,"author":{"gitId":"JayChenYJ"},"content":"     * Mark the task in the given task number as done."},{"lineNumber":119,"author":{"gitId":"JayChenYJ"},"content":"     * @param command The command given by user input."},{"lineNumber":120,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks The Task Arraylist containing user tasks in sequence."},{"lineNumber":121,"author":{"gitId":"JayChenYJ"},"content":"     * @param count The current number of tasks stored inside the Task Arraylist."},{"lineNumber":122,"author":{"gitId":"JayChenYJ"},"content":"     * @param ui UI structure to show the user correct message."},{"lineNumber":123,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":124,"author":{"gitId":"JayChenYJ"},"content":"     * @throws DukeException Exception thrown if the number given is out of range."},{"lineNumber":125,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"JayChenYJ"},"content":"    public String done(String command, TaskList tasks, int count, Ui ui) throws DukeException{"},{"lineNumber":127,"author":{"gitId":"JayChenYJ"},"content":"        if (command.length() \u003c 6) {"},{"lineNumber":128,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"OOPS!!! The item number cannot be empty.\");"},{"lineNumber":129,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"JayChenYJ"},"content":"        String[] commandToWords \u003d command.split(\" \");"},{"lineNumber":131,"author":{"gitId":"JayChenYJ"},"content":"        int itemNum \u003d Integer.parseInt(commandToWords[1]);"},{"lineNumber":132,"author":{"gitId":"JayChenYJ"},"content":"        if (itemNum \u003e count || itemNum \u003c 1) {"},{"lineNumber":133,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"Item number selected is out of range.\");"},{"lineNumber":134,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"JayChenYJ"},"content":"        tasks.getTaskList().get(itemNum - 1).makeDone();"},{"lineNumber":136,"author":{"gitId":"JayChenYJ"},"content":"        return ui.showDoneMsg(tasks, itemNum);"},{"lineNumber":137,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":139,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":140,"author":{"gitId":"JayChenYJ"},"content":"     * Delete the task corresponding to the number input by the user."},{"lineNumber":141,"author":{"gitId":"JayChenYJ"},"content":"     * @param command The command given by user input."},{"lineNumber":142,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks The Task Arraylist containing user tasks in sequence."},{"lineNumber":143,"author":{"gitId":"JayChenYJ"},"content":"     * @param count The current number of tasks stored inside the Task Arraylist."},{"lineNumber":144,"author":{"gitId":"JayChenYJ"},"content":"     * @param ui UI structure to show the user correct message."},{"lineNumber":145,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":146,"author":{"gitId":"JayChenYJ"},"content":"     * @throws DukeException Exception thrown if the number given is out of range."},{"lineNumber":147,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":148,"author":{"gitId":"JayChenYJ"},"content":"    public String delete(String command, TaskList tasks, int count, Ui ui) throws DukeException {"},{"lineNumber":149,"author":{"gitId":"JayChenYJ"},"content":"        if (command.length() \u003c 8) {"},{"lineNumber":150,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"OOPS!!! The item number cannot be empty.\");"},{"lineNumber":151,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"JayChenYJ"},"content":"        String[] commandToWords \u003d command.split(\" \");"},{"lineNumber":153,"author":{"gitId":"JayChenYJ"},"content":"        int itemNum \u003d Integer.parseInt(commandToWords[1]);"},{"lineNumber":154,"author":{"gitId":"JayChenYJ"},"content":"        if (itemNum \u003e count || itemNum \u003c 1) {"},{"lineNumber":155,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"Item number selected is out of range.\");"},{"lineNumber":156,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":157,"author":{"gitId":"JayChenYJ"},"content":"        String taskRemoved \u003d tasks.getTaskList().get(itemNum - 1).toString();"},{"lineNumber":158,"author":{"gitId":"JayChenYJ"},"content":"        tasks.getTaskList().remove(itemNum - 1);"},{"lineNumber":159,"author":{"gitId":"JayChenYJ"},"content":"        taskDeleted();"},{"lineNumber":160,"author":{"gitId":"JayChenYJ"},"content":"        return ui.showDeleteMsg(taskRemoved, totalTasks);"},{"lineNumber":161,"author":{"gitId":"JayChenYJ"},"content":"   }"},{"lineNumber":162,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":163,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":164,"author":{"gitId":"JayChenYJ"},"content":"     * List out all user inputs in sequence."},{"lineNumber":165,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks The Task Arraylist containing user tasks in sequence."},{"lineNumber":166,"author":{"gitId":"JayChenYJ"},"content":"     * @param ui UI structure to show the user correct message."},{"lineNumber":167,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":168,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":169,"author":{"gitId":"JayChenYJ"},"content":"    public String list(TaskList tasks, Ui ui) {"},{"lineNumber":170,"author":{"gitId":"JayChenYJ"},"content":"        return ui.showListMsg(tasks);"},{"lineNumber":171,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":173,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":174,"author":{"gitId":"JayChenYJ"},"content":"     * Find tasks matching the keyword in the command given by the user."},{"lineNumber":175,"author":{"gitId":"JayChenYJ"},"content":"     * @param command The command given by user input."},{"lineNumber":176,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks The Task Arraylist containing user tasks in sequence."},{"lineNumber":177,"author":{"gitId":"JayChenYJ"},"content":"     * @param ui UI structure to show the user correct message."},{"lineNumber":178,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":179,"author":{"gitId":"JayChenYJ"},"content":"     * @throws DukeException Exception thrown if the user input is invalid."},{"lineNumber":180,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":181,"author":{"gitId":"JayChenYJ"},"content":"    public String find(String command, TaskList tasks, Ui ui) throws DukeException {"},{"lineNumber":182,"author":{"gitId":"JayChenYJ"},"content":"        if (command.length() \u003c 6) {"},{"lineNumber":183,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"OOPS!!! The keyword cannot be empty.\");"},{"lineNumber":184,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":185,"author":{"gitId":"JayChenYJ"},"content":"        String keyword \u003d command.split(\" \")[1];"},{"lineNumber":186,"author":{"gitId":"JayChenYJ"},"content":"        return ui.showFindMsg(keyword, tasks);"},{"lineNumber":187,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":189,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":190,"author":{"gitId":"JayChenYJ"},"content":"     * Tells the user that the input given is invalid."},{"lineNumber":191,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":192,"author":{"gitId":"JayChenYJ"},"content":"     * @throws DukeException Exception thrown if the user input is invalid."},{"lineNumber":193,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":194,"author":{"gitId":"JayChenYJ"},"content":"    public String wrongCommand() throws DukeException {"},{"lineNumber":195,"author":{"gitId":"JayChenYJ"},"content":"        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":196,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":198,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":199,"author":{"gitId":"JayChenYJ"},"content":"     * Terminate the GUI when the user decides to."},{"lineNumber":200,"author":{"gitId":"JayChenYJ"},"content":"     * @return Nothing since this command will close the GUI."},{"lineNumber":201,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":202,"author":{"gitId":"JayChenYJ"},"content":"    public String exitCommand() {"},{"lineNumber":203,"author":{"gitId":"JayChenYJ"},"content":"        Platform.exit();"},{"lineNumber":204,"author":{"gitId":"JayChenYJ"},"content":"        return null;"},{"lineNumber":205,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":206,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":206}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import java.io.PrintWriter;"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import java.nio.charset.StandardCharsets;"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import java.nio.file.Files;"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import java.util.Collections;"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"    /** Default path to store the user tasks. */"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"    public static final String DEFAULT_STORAGE_FILEPATH \u003d \"duke.txt\";"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"    public TaskList tasks;"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"    public Storage() {"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"     * Read file if it exist, else will create a new file with the name."},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"     * @throws IOException Throw IO exception."},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"    public void readOrCreateFile() throws IOException {"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"        File myObj \u003d new File(DEFAULT_STORAGE_FILEPATH);"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"        if (myObj.exists()) {"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"            readFileIntoList(DEFAULT_STORAGE_FILEPATH, tasks);"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"        } else {"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"            //noinspection ResultOfMethodCallIgnored"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"            myObj.createNewFile();"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"     * Read the existing task file and create the list of tasks when the program is run."},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"     * @param file The name of the file."},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks The Task Arraylist containing user tasks in sequence."},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"    public void readFileIntoList(String file, TaskList tasks) {"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"        List\u003cString\u003e lines \u003d Collections.emptyList();"},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"            lines \u003d Files.readAllLines(Paths.get(file), StandardCharsets.UTF_8);"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"        } catch (IOException e) {"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"            e.printStackTrace();"},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"        for (String object: lines) {"},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"            if (object.charAt(1) \u003d\u003d \u0027T\u0027) {"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"                if (object.charAt(4) \u003d\u003d \u0027-\u0027) {"},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"                    tasks.add(new Todo(object.substring(7), true));"},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"                } else {"},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":"                    tasks.add(new Todo(object.substring(7), false));"},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":"                }"},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"            } else {"},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":"                String dateInfo \u003d object.substring(object.indexOf(\"(\") + 5, object.indexOf(\")\"));"},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":"                if (object.charAt(1) \u003d\u003d \u0027D\u0027) {"},{"lineNumber":60,"author":{"gitId":"JayChenYJ"},"content":"                    if (object.charAt(4) \u003d\u003d \u0027-\u0027) {"},{"lineNumber":61,"author":{"gitId":"JayChenYJ"},"content":"                        tasks.add(new Deadline(object.substring(7, object.indexOf(\"(\") - 1), dateInfo, true, true));"},{"lineNumber":62,"author":{"gitId":"JayChenYJ"},"content":"                    } else {"},{"lineNumber":63,"author":{"gitId":"JayChenYJ"},"content":"                        tasks.add(new Deadline(object.substring(7, object.indexOf(\"(\") - 1), dateInfo, false, true));"},{"lineNumber":64,"author":{"gitId":"JayChenYJ"},"content":"                    }"},{"lineNumber":65,"author":{"gitId":"JayChenYJ"},"content":"                } else if (object.charAt(1) \u003d\u003d \u0027E\u0027) {"},{"lineNumber":66,"author":{"gitId":"JayChenYJ"},"content":"                    if (object.charAt(4) \u003d\u003d \u0027-\u0027) {"},{"lineNumber":67,"author":{"gitId":"JayChenYJ"},"content":"                        tasks.add(new Event(object.substring(7, object.indexOf(\"(\") - 1), dateInfo, true, true));"},{"lineNumber":68,"author":{"gitId":"JayChenYJ"},"content":"                    } else {"},{"lineNumber":69,"author":{"gitId":"JayChenYJ"},"content":"                        tasks.add(new Event(object.substring(7, object.indexOf(\"(\") - 1), dateInfo, false, true));"},{"lineNumber":70,"author":{"gitId":"JayChenYJ"},"content":"                    }"},{"lineNumber":71,"author":{"gitId":"JayChenYJ"},"content":"                }"},{"lineNumber":72,"author":{"gitId":"JayChenYJ"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"JayChenYJ"},"content":"            Parser.taskAdded();"},{"lineNumber":74,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":77,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"JayChenYJ"},"content":"     * Update the tasks into the file at the end of the program."},{"lineNumber":79,"author":{"gitId":"JayChenYJ"},"content":"     * @throws FileNotFoundException Throw exception if file does not exist, should not happen."},{"lineNumber":80,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"JayChenYJ"},"content":"    public void writeListIntoFile() throws FileNotFoundException {"},{"lineNumber":82,"author":{"gitId":"JayChenYJ"},"content":"        PrintWriter writer \u003d new PrintWriter(DEFAULT_STORAGE_FILEPATH);"},{"lineNumber":83,"author":{"gitId":"JayChenYJ"},"content":"        ArrayList\u003cTask\u003e items \u003d tasks.getTaskList();"},{"lineNumber":84,"author":{"gitId":"JayChenYJ"},"content":"        for (Task item: items) {"},{"lineNumber":85,"author":{"gitId":"JayChenYJ"},"content":"            writer.println(item.toString());"},{"lineNumber":86,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"JayChenYJ"},"content":"        writer.close();"},{"lineNumber":88,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":89}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":" * Represent a task added by a user."},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"     * The content of the task."},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"    protected String description;"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"     * A boolean deciding whether a task has been completed."},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"     * Task completion is triggered by the user."},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"    protected boolean isDone;"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"     * Creates a new task with a given input by the user."},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"     * Task is initially not done at creation."},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"     * @param description The input description for the task."},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"     * @param isDone The input to see if the task has been completed."},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"        this.description \u003d description;"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"     * Get the status icon of the task."},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"     * @return Return an icon, cross if done, empty space if not done."},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"    public String getStatusIcon() {"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"        return (isDone ? \"-\" : \" \");"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"     * Change the status of the the task completion to true when the task has been completed."},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"    public void makeDone() {"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"        this.isDone \u003d true;"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"     * A toString to show the task information."},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"     * @return Show the status of the task, together with its description."},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"    public String toString() {"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"            return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":51}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"public class TaskList {"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"    private final ArrayList\u003cTask\u003e taskList;"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"     * Initialise Task List with new taskList."},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"    public TaskList() {"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"     * Initialise Task List with existing taskList."},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"     * @param taskList The task list that was loaded from Storage."},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"     * Return size of taskList."},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"     * @return Size of task list."},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"    public int getSize() {"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"        if (taskList.isEmpty()) {"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"            return 0;"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"        } else {"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"            return taskList.size();"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"     * Get task List."},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"     * @return Task List."},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"        return taskList;"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"     * Add task to task List."},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"     * @param task The task to be added."},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"    public void add(Task task) {"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"        taskList.add(task);"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"     * Search through all the tasks to see which ones contains the given keyword."},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"     * @param keyword The keyword to be searched."},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"     * @return The task list that contains only the relevant tasks."},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"    public ArrayList\u003cTask\u003e search(String keyword) {"},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":"        ArrayList\u003cTask\u003etaskListToPrint \u003d new ArrayList\u003c\u003e();"},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":"        for (Task task: taskList) {"},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"            if (task.toString().contains(keyword)) {"},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":"                taskListToPrint.add(task);"},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"JayChenYJ"},"content":"        return taskListToPrint;"},{"lineNumber":62,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":64,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"JayChenYJ"},"content":"     * A toString method to display all the tasks in the task list."},{"lineNumber":66,"author":{"gitId":"JayChenYJ"},"content":"     * @return return a string containing all the tasks in the task list."},{"lineNumber":67,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"JayChenYJ"},"content":"    @Override"},{"lineNumber":69,"author":{"gitId":"JayChenYJ"},"content":"    public String toString() {"},{"lineNumber":70,"author":{"gitId":"JayChenYJ"},"content":"        StringBuilder result \u003d new StringBuilder();"},{"lineNumber":71,"author":{"gitId":"JayChenYJ"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"},{"lineNumber":72,"author":{"gitId":"JayChenYJ"},"content":"            if (i \u003d\u003d taskList.size()) {"},{"lineNumber":73,"author":{"gitId":"JayChenYJ"},"content":"                result.append(i).append(\". \").append(taskList.get(i - 1));"},{"lineNumber":74,"author":{"gitId":"JayChenYJ"},"content":"            } else {"},{"lineNumber":75,"author":{"gitId":"JayChenYJ"},"content":"                result.append(i).append(\". \").append(taskList.get(i - 1)).append(\"\\n\");"},{"lineNumber":76,"author":{"gitId":"JayChenYJ"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"JayChenYJ"},"content":"        return result.toString();"},{"lineNumber":79,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":80}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":" * A Todo task that inherits Task."},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"public class Todo extends Task{"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"    public Todo(String description, boolean isDone) {"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"        super(description, isDone);"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"     * A toString uniquely for Todo Task."},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"     * @return Label for Todo - \"T\" and the description of the task."},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":18}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"     * Greets the user when the Duke is launched."},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"    public String showWelcomeMsg() {"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"        return \"Hello! I\u0027m Jay!\\n\" + \"What can I do for you?\";"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"     * Show the user that a todo task has been added."},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks The Task Arraylist containing user tasks in sequence."},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"     * @param totalTasks Total number of tasks in the list."},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"    public String showTodoMsg(TaskList tasks, int totalTasks) {"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + \"    \" + tasks.getTaskList().get(totalTasks - 1).toString() + \"\\n\""},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"                + \"Now you have \" + tasks.getSize() + \" tasks in the list.\";"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"     * Show the user that a deadline task has been added."},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks The Task Arraylist containing user tasks in sequence."},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"     * @param totalTasks Total number of tasks in the list."},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"    public String showDeadlineMsg(TaskList tasks, int totalTasks) {"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + \"    \" + tasks.getTaskList().get(totalTasks - 1).toString() + \"\\n\""},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"                + \"Now you have \" + totalTasks + \" tasks in the list.\";"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"     * Show the user that a event task has been added."},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks The Task Arraylist containing user tasks in sequence."},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"     * @param totalTasks Total number of tasks in the list."},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"    public String showEventMsg(TaskList tasks, int totalTasks) {"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + \"    \" + tasks.getTaskList().get(totalTasks - 1).toString() + \"\\n\""},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"                + \"Now you have \" + totalTasks + \" tasks in the list.\";"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"     * Show the user that a task of choice has been deleted."},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"     * @param taskRemoved The description of the task deleted."},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"     * @param totalTasks Total number of tasks in the list."},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"    public String showDeleteMsg(String taskRemoved, int totalTasks) {"},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + \"    \" + taskRemoved + \"\\n\""},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"                + \"Now you have \" + totalTasks + \" tasks in the list.\";"},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":"     * Show the user that a task has been marked done."},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks The Task Arraylist containing user tasks in sequence."},{"lineNumber":60,"author":{"gitId":"JayChenYJ"},"content":"     * @param itemNum The item number that is marked done."},{"lineNumber":61,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":62,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"JayChenYJ"},"content":"    public String showDoneMsg(TaskList tasks, int itemNum) {"},{"lineNumber":64,"author":{"gitId":"JayChenYJ"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + \"    \" + tasks.getTaskList().get(itemNum - 1).toString();"},{"lineNumber":65,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":67,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"JayChenYJ"},"content":"     * Show the user the list of tasks."},{"lineNumber":69,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks The Task Arraylist containing user tasks in sequence."},{"lineNumber":70,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":71,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"JayChenYJ"},"content":"    public String showListMsg(TaskList tasks) {"},{"lineNumber":73,"author":{"gitId":"JayChenYJ"},"content":"        return \"Here are the tasks in your list:\" + \"\\n\" + tasks.toString();"},{"lineNumber":74,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":76,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"JayChenYJ"},"content":"     * Show the user the list of tasks with matching keyword."},{"lineNumber":78,"author":{"gitId":"JayChenYJ"},"content":"     * @param keyword The keyword to search for match."},{"lineNumber":79,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks The Task Arraylist containing user tasks in sequence."},{"lineNumber":80,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":81,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"JayChenYJ"},"content":"    public String showFindMsg(String keyword, TaskList tasks) {"},{"lineNumber":83,"author":{"gitId":"JayChenYJ"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.search(keyword);"},{"lineNumber":84,"author":{"gitId":"JayChenYJ"},"content":"        TaskList matchedTasks \u003d new TaskList(matchingTasks);"},{"lineNumber":85,"author":{"gitId":"JayChenYJ"},"content":"        return \"Here are the matching tasks in your list:\" + \"\\n\" + matchedTasks.toString();"},{"lineNumber":86,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":87}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"JayChenYJ":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"JayChenYJ":19}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"public class DukeTest {"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"    public void dummyTest(){"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"        assertEquals(2, 2);"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"    public void createNewTodoTask() {"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"        Task task \u003d new Todo(\"read book\", false);"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"        assertEquals(\"[T][ ] read book\", task.toString());"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"    public void createNewDeadlineTask() {"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"        Task task \u003d new Deadline(\"return book\", \"2020-02-04\", false, false);"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"        assertEquals(\"[D][ ] return book (by: Feb 4 2020)\", task.toString() );"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"    public void createNewEventTask() {"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"        Task task \u003d new Event(\"project meeting\", \"2020-02-05\", false, false);"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"        assertEquals(\"[E][ ] project meeting (at: Feb 5 2020)\", task.toString());"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"Gordon"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"todo"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"todo borrow book"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"deadline"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"deadline return book"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"deadline return book /by Sunday"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"event"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"event project meeting"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"list"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"done 1"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"done 3"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"list"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"delete 3"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"delete 3"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"list"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"blah"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"bye"}],"authorContributionMap":{"JayChenYJ":18}}]
