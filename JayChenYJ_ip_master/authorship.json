[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"    compile group: \u0027com.joestelmach\u0027, name: \u0027natty\u0027, version: \u00270.6\u0027"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"    archiveBaseName \u003d \"jaybot\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"JayChenYJ"},"content":"    enableAssertions \u003d true"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"JayChenYJ":19,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"### Feature 1"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"Choose to see tasks or contacts."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"### `tasks/contacts` - Key in `tasks` or `contacts`"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"Example of usage:"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"`taks` `contacts`"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"An expected outcome:"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"If `tasks` is entered, the task list will be used."},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"If `contacts` is entered, the contact list will be used."},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"### Feature 2"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"Add a todo task."},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"## Usage"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"### `todo` - Key in `todo [task description] `"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"Example of usage:"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"`todo borrow book`"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"An expected outcome:"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"A todo task is added into the task list."},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"### Feature 3"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"Add a deadline task."},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"## Usage"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"### `deadline` - Key in `deadline [task description] /by [date]`"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"Take note that date should be in yyyy-mm-dd format."},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"Example of usage:"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"`deadline return book /by 2020-02-20`"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"An expected outcome:"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"A deadline task is added into the task list."},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"### Feature 4"},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"Add an event task."},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":"## Usage"},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"### `event` - Key in `event [task description] /at [date]`"},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":"Take note that date should be in yyyy-mm-dd format."},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":60,"author":{"gitId":"JayChenYJ"},"content":"Example of usage:"},{"lineNumber":61,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":62,"author":{"gitId":"JayChenYJ"},"content":"`event project meeting /at 2020-02-25`"},{"lineNumber":63,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":64,"author":{"gitId":"JayChenYJ"},"content":"An expected outcome:"},{"lineNumber":65,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":66,"author":{"gitId":"JayChenYJ"},"content":"An event task is added into the task list."},{"lineNumber":67,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":68,"author":{"gitId":"JayChenYJ"},"content":"### Feature 5"},{"lineNumber":69,"author":{"gitId":"JayChenYJ"},"content":"See the list of tasks."},{"lineNumber":70,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":71,"author":{"gitId":"JayChenYJ"},"content":"## Usage"},{"lineNumber":72,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":73,"author":{"gitId":"JayChenYJ"},"content":"### `list` - Key in `list`"},{"lineNumber":74,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":75,"author":{"gitId":"JayChenYJ"},"content":"An expected outcome:"},{"lineNumber":76,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":77,"author":{"gitId":"JayChenYJ"},"content":"The task list is displayed."},{"lineNumber":78,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":79,"author":{"gitId":"JayChenYJ"},"content":"### Feature 6"},{"lineNumber":80,"author":{"gitId":"JayChenYJ"},"content":"Mark a task as done."},{"lineNumber":81,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":82,"author":{"gitId":"JayChenYJ"},"content":"## Usage"},{"lineNumber":83,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":84,"author":{"gitId":"JayChenYJ"},"content":"### `done` - Key in `done [item number according to the task list]`"},{"lineNumber":85,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":86,"author":{"gitId":"JayChenYJ"},"content":"Example of usage:"},{"lineNumber":87,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":88,"author":{"gitId":"JayChenYJ"},"content":"`done 2`"},{"lineNumber":89,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":90,"author":{"gitId":"JayChenYJ"},"content":"An expected outcome:"},{"lineNumber":91,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":92,"author":{"gitId":"JayChenYJ"},"content":"The second item in the task list will be marked as done."},{"lineNumber":93,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":94,"author":{"gitId":"JayChenYJ"},"content":"### Feature 7"},{"lineNumber":95,"author":{"gitId":"JayChenYJ"},"content":"delete a task from the task list."},{"lineNumber":96,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":97,"author":{"gitId":"JayChenYJ"},"content":"## Usage"},{"lineNumber":98,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":99,"author":{"gitId":"JayChenYJ"},"content":"### `delete` - Key in `delete [item number according to the task list]`"},{"lineNumber":100,"author":{"gitId":"-"},"content":""},{"lineNumber":101,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":102,"author":{"gitId":"-"},"content":""},{"lineNumber":103,"author":{"gitId":"JayChenYJ"},"content":"`delete 2`"},{"lineNumber":104,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":105,"author":{"gitId":"JayChenYJ"},"content":"An expected outcome:"},{"lineNumber":106,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":107,"author":{"gitId":"JayChenYJ"},"content":"The second item in the task list will be deleted."},{"lineNumber":108,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":109,"author":{"gitId":"JayChenYJ"},"content":"### Feature 8"},{"lineNumber":110,"author":{"gitId":"JayChenYJ"},"content":"Find tasks with specific keyword"},{"lineNumber":111,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":112,"author":{"gitId":"JayChenYJ"},"content":"## Usage"},{"lineNumber":113,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":114,"author":{"gitId":"JayChenYJ"},"content":"### `find` - Key in `find [keyword]`"},{"lineNumber":115,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":116,"author":{"gitId":"JayChenYJ"},"content":"Example of usage:"},{"lineNumber":117,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":118,"author":{"gitId":"JayChenYJ"},"content":"`find book`"},{"lineNumber":119,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":120,"author":{"gitId":"JayChenYJ"},"content":"An expected outcome:"},{"lineNumber":121,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":122,"author":{"gitId":"JayChenYJ"},"content":"The tasks with the keyword book will be displayed."},{"lineNumber":123,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":124,"author":{"gitId":"JayChenYJ"},"content":"### Feature 9"},{"lineNumber":125,"author":{"gitId":"JayChenYJ"},"content":"Add a contact into the contact list."},{"lineNumber":126,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":127,"author":{"gitId":"JayChenYJ"},"content":"## Usage"},{"lineNumber":128,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":129,"author":{"gitId":"JayChenYJ"},"content":"### `add` - Key in `add [name] [number]`"},{"lineNumber":130,"author":{"gitId":"JayChenYJ"},"content":"Note that name must be one single word."},{"lineNumber":131,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":132,"author":{"gitId":"JayChenYJ"},"content":"Example of usage:"},{"lineNumber":133,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":134,"author":{"gitId":"JayChenYJ"},"content":"`add JayChen 91060000`"},{"lineNumber":135,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":136,"author":{"gitId":"JayChenYJ"},"content":"An expected outcome:"},{"lineNumber":137,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":138,"author":{"gitId":"JayChenYJ"},"content":"The contact will be added to the contact list."},{"lineNumber":139,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":140,"author":{"gitId":"JayChenYJ"},"content":"### Feature 10"},{"lineNumber":141,"author":{"gitId":"JayChenYJ"},"content":"List the contacts in the contact list."},{"lineNumber":142,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":143,"author":{"gitId":"JayChenYJ"},"content":"## Usage"},{"lineNumber":144,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":145,"author":{"gitId":"JayChenYJ"},"content":"### `list` - Key in `list`"},{"lineNumber":146,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":147,"author":{"gitId":"JayChenYJ"},"content":"An expected outcome:"},{"lineNumber":148,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":149,"author":{"gitId":"JayChenYJ"},"content":"The contact list will be displayed."},{"lineNumber":150,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":151,"author":{"gitId":"JayChenYJ"},"content":"### Feature 11"},{"lineNumber":152,"author":{"gitId":"JayChenYJ"},"content":"Delete a contact from the contact list."},{"lineNumber":153,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":154,"author":{"gitId":"JayChenYJ"},"content":"## Usage"},{"lineNumber":155,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":156,"author":{"gitId":"JayChenYJ"},"content":"### `delete` - Key in `delete [item number in the contact list]`"},{"lineNumber":157,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":158,"author":{"gitId":"JayChenYJ"},"content":"Example of usage:"},{"lineNumber":159,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":160,"author":{"gitId":"JayChenYJ"},"content":"`delete 2`"},{"lineNumber":161,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":162,"author":{"gitId":"JayChenYJ"},"content":"An expected outcome:"},{"lineNumber":163,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":164,"author":{"gitId":"JayChenYJ"},"content":"The second contact in the contact list will be deleted."},{"lineNumber":165,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":166,"author":{"gitId":"JayChenYJ"},"content":"### Feature 12"},{"lineNumber":167,"author":{"gitId":"JayChenYJ"},"content":"update a contact in the contact list."},{"lineNumber":168,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":169,"author":{"gitId":"JayChenYJ"},"content":"## Usage"},{"lineNumber":170,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":171,"author":{"gitId":"JayChenYJ"},"content":"### `update` - Key in `update [item number in the contact list] [new name] [new number]`"},{"lineNumber":172,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":173,"author":{"gitId":"JayChenYJ"},"content":"Example of usage:"},{"lineNumber":174,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":175,"author":{"gitId":"JayChenYJ"},"content":"`update 2 Vivien 82990000`"},{"lineNumber":176,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":177,"author":{"gitId":"JayChenYJ"},"content":"An expected outcome:"},{"lineNumber":178,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":179,"author":{"gitId":"JayChenYJ"},"content":"The second contact in the contact list will be updated with the new information."},{"lineNumber":180,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":181,"author":{"gitId":"JayChenYJ"},"content":"### Feature 13"},{"lineNumber":182,"author":{"gitId":"JayChenYJ"},"content":"Exit the program."},{"lineNumber":183,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":184,"author":{"gitId":"JayChenYJ"},"content":"## Usage"},{"lineNumber":185,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":186,"author":{"gitId":"JayChenYJ"},"content":"### `exit` - Key in `exit`"},{"lineNumber":187,"author":{"gitId":"-"},"content":""},{"lineNumber":188,"author":{"gitId":"JayChenYJ"},"content":"An expected outcome:"},{"lineNumber":189,"author":{"gitId":"-"},"content":""},{"lineNumber":190,"author":{"gitId":"JayChenYJ"},"content":"The program will be closed."}],"authorContributionMap":{"JayChenYJ":172,"-":18}},{"path":"src/main/java/Contact.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"public class Contact {"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"     * The name of the contact."},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"    protected String name;"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"     * The phone number of the contact."},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"    protected String phoneNumber;"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"     * Creates a new contact with a given input by the user."},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"     * @param name        The name of the contact."},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"     * @param phoneNumber the phone number of the contact."},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"    public Contact(String name, String phoneNumber) {"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"        this.name \u003d name;"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"        this.phoneNumber \u003d phoneNumber;"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"     * A toString to show the contact information."},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"     * @return Show the name, followed by the phone number."},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"        return this.name + \": \" + this.phoneNumber;"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":32}},{"path":"src/main/java/ContactList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"public class ContactList {"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"    private final ArrayList\u003cContact\u003e contactList;"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"     * Initialise Contact List with new arrayList."},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"    public ContactList() {"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"        this.contactList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"     * Get size of the list."},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"     * @return The size of the list."},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"    public int getSize() {"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"        if (contactList.isEmpty()) {"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"            return 0;"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"        } else {"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"            return contactList.size();"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"     * Get task list."},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"     * @return Task List."},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"    public ArrayList\u003cContact\u003e getContactList() {"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"        return contactList;"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"     * Add contact to the list."},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"     * @param contact The contact to be added to the list."},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"    public void add(Contact contact) {"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"        contactList.add(contact);"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"     * Delete contact from the list."},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"     * @param itemNum The item number corresponding to the contact to be deleted."},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"    public void delete(int itemNum) {"},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"        contactList.remove(itemNum);"},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"     * A toString method to display all the contacts in the contact list."},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string containing all the contacts in the contact list."},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":"    @Override"},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":"    public String toString() {"},{"lineNumber":60,"author":{"gitId":"JayChenYJ"},"content":"        StringBuilder result \u003d new StringBuilder();"},{"lineNumber":61,"author":{"gitId":"JayChenYJ"},"content":"        for (int i \u003d 1; i \u003c\u003d contactList.size(); i++) {"},{"lineNumber":62,"author":{"gitId":"JayChenYJ"},"content":"            if (i \u003d\u003d contactList.size()) {"},{"lineNumber":63,"author":{"gitId":"JayChenYJ"},"content":"                result.append(i).append(\". \").append(contactList.get(i - 1));"},{"lineNumber":64,"author":{"gitId":"JayChenYJ"},"content":"            } else {"},{"lineNumber":65,"author":{"gitId":"JayChenYJ"},"content":"                result.append(i).append(\". \").append(contactList.get(i - 1)).append(\"\\n\");"},{"lineNumber":66,"author":{"gitId":"JayChenYJ"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"JayChenYJ"},"content":"        return result.toString();"},{"lineNumber":69,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":70}},{"path":"src/main/java/ContactParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"import javafx.application.Platform;"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"public class ContactParser {"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"     * Process the user input to make sense for the system."},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"     * @param nextInput The input given by user."},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"     * @param contacts  The Contact Arraylist containing user contacts in sequence."},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"     * @param ui        UI structure to show the user correct message."},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"     * @return Return the correct logic and GUI output."},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"    public String processInput(String nextInput, ContactList contacts, Ui ui) {"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"        String command \u003d nextInput.contains(\" \") ? nextInput.split(\" \")[0] : nextInput;"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"        try {"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"            switch (command.toLowerCase()) {"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"            case \"add\":"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"                return addContact(nextInput, contacts, ui);"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"            case \"delete\":"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"                return deleteContact(nextInput, contacts, ui);"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"            case \"update\":"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"                return updateContact(nextInput, contacts, ui);"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"            case \"list\":"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"                return listContacts(contacts, ui);"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"            case \"exit\":"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"                return exitCommand();"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"            default:"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"                return wrongCommand();"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"        } catch (DukeException e) {"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"            return e.getMessage();"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"     * Add a contact."},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"     * @param userInput The input given by user."},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"     * @param contacts  The Contact Arraylist containing user contacts in sequence."},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"     * @param ui        UI structure to show the user correct message."},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"     * @throws DukeException Exception thrown if the user input is invalid."},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"    public String addContact(String userInput, ContactList contacts, Ui ui) throws DukeException {"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"        if (userInput.length() \u003c 14) {"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"OOPS!!! Please fill in the full detail of the contact.\");"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"        String name \u003d userInput.split(\" \")[1];"},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"        String number \u003d userInput.split(\" \")[2];"},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"        contacts.add(new Contact(name, number));"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"        return ui.showAddContactMsg(contacts);"},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"     * Delete a contact."},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":"     * @param userInput The input given by user."},{"lineNumber":60,"author":{"gitId":"JayChenYJ"},"content":"     * @param contacts  The Contact Arraylist containing user contacts in sequence."},{"lineNumber":61,"author":{"gitId":"JayChenYJ"},"content":"     * @param ui        UI structure to show the user correct message."},{"lineNumber":62,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":63,"author":{"gitId":"JayChenYJ"},"content":"     * @throws DukeException Exception thrown if the user input is invalid."},{"lineNumber":64,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"JayChenYJ"},"content":"    public String deleteContact(String userInput, ContactList contacts, Ui ui) throws DukeException {"},{"lineNumber":66,"author":{"gitId":"JayChenYJ"},"content":"        if (userInput.length() \u003c 8) {"},{"lineNumber":67,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"OOPS!!! The item number cannot be empty.\");"},{"lineNumber":68,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":70,"author":{"gitId":"JayChenYJ"},"content":"        String[] commandToWords \u003d userInput.split(\" \");"},{"lineNumber":71,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":72,"author":{"gitId":"JayChenYJ"},"content":"        int itemNum \u003d Integer.parseInt(commandToWords[1]);"},{"lineNumber":73,"author":{"gitId":"JayChenYJ"},"content":"        if (itemNum \u003e contacts.getSize() || itemNum \u003c 1) {"},{"lineNumber":74,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"Item number selected is out of range.\");"},{"lineNumber":75,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":77,"author":{"gitId":"JayChenYJ"},"content":"        String taskRemoved \u003d contacts.getContactList().get(itemNum - 1).toString();"},{"lineNumber":78,"author":{"gitId":"JayChenYJ"},"content":"        contacts.getContactList().remove(itemNum - 1);"},{"lineNumber":79,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":80,"author":{"gitId":"JayChenYJ"},"content":"        return ui.showDeleteContactMsg(taskRemoved, contacts.getSize());"},{"lineNumber":81,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":83,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"JayChenYJ"},"content":"     * Update an old contact to a new version."},{"lineNumber":85,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"JayChenYJ"},"content":"     * @param userInput The input given by user."},{"lineNumber":87,"author":{"gitId":"JayChenYJ"},"content":"     * @param contacts  The Contact Arraylist containing user contacts in sequence."},{"lineNumber":88,"author":{"gitId":"JayChenYJ"},"content":"     * @param ui        UI structure to show the user correct message."},{"lineNumber":89,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":90,"author":{"gitId":"JayChenYJ"},"content":"     * @throws DukeException Exception thrown if the user input is invalid."},{"lineNumber":91,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"JayChenYJ"},"content":"    public String updateContact(String userInput, ContactList contacts, Ui ui) throws DukeException {"},{"lineNumber":93,"author":{"gitId":"JayChenYJ"},"content":"        if (userInput.length() \u003c 16) {"},{"lineNumber":94,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"OOPS!!! Please fill in the full detail of the contact\");"},{"lineNumber":95,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":97,"author":{"gitId":"JayChenYJ"},"content":"        String itemNumStr \u003d userInput.split(\" \")[1];"},{"lineNumber":98,"author":{"gitId":"JayChenYJ"},"content":"        int itemNum \u003d Integer.parseInt(itemNumStr);"},{"lineNumber":99,"author":{"gitId":"JayChenYJ"},"content":"        if (itemNum \u003e contacts.getSize() || itemNum \u003c 1) {"},{"lineNumber":100,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"Item number selected is out of range.\");"},{"lineNumber":101,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"JayChenYJ"},"content":"        contacts.delete(itemNum - 1);"},{"lineNumber":103,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":104,"author":{"gitId":"JayChenYJ"},"content":"        String name \u003d userInput.split(\" \")[2];"},{"lineNumber":105,"author":{"gitId":"JayChenYJ"},"content":"        String number \u003d userInput.split(\" \")[3];"},{"lineNumber":106,"author":{"gitId":"JayChenYJ"},"content":"        contacts.add(new Contact(name, number));"},{"lineNumber":107,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":108,"author":{"gitId":"JayChenYJ"},"content":"        return ui.showUpdateContactMsg(contacts);"},{"lineNumber":109,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":111,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"JayChenYJ"},"content":"     * List out all user inputs in sequence."},{"lineNumber":113,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":114,"author":{"gitId":"JayChenYJ"},"content":"     * @param contacts The Contact Arraylist containing user contacts in sequence."},{"lineNumber":115,"author":{"gitId":"JayChenYJ"},"content":"     * @param ui       UI structure to show the user correct message."},{"lineNumber":116,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":117,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"JayChenYJ"},"content":"    public String listContacts(ContactList contacts, Ui ui) {"},{"lineNumber":119,"author":{"gitId":"JayChenYJ"},"content":"        return ui.showContactListMsg(contacts);"},{"lineNumber":120,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":122,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"JayChenYJ"},"content":"     * Tells the user that the input given is invalid."},{"lineNumber":124,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":125,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":126,"author":{"gitId":"JayChenYJ"},"content":"     * @throws DukeException Exception thrown if the user input is invalid."},{"lineNumber":127,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"JayChenYJ"},"content":"    public String wrongCommand() throws DukeException {"},{"lineNumber":129,"author":{"gitId":"JayChenYJ"},"content":"        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":130,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":132,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"JayChenYJ"},"content":"     * Terminate the GUI when the user decides to."},{"lineNumber":134,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":135,"author":{"gitId":"JayChenYJ"},"content":"     * @return Nothing since this command will close the GUI."},{"lineNumber":136,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":137,"author":{"gitId":"JayChenYJ"},"content":"    public String exitCommand() {"},{"lineNumber":138,"author":{"gitId":"JayChenYJ"},"content":"        Platform.exit();"},{"lineNumber":139,"author":{"gitId":"JayChenYJ"},"content":"        return null;"},{"lineNumber":140,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":141}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":" * A Deadline task that inherits Task."},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":" */"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"     * Date/Timing information for task to be completed by."},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"    protected String dueDate;"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"     * Constructor for Deadline."},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"     * @param description The description of the task."},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"     * @param dueDate     Date for the task to be completed."},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"     * @param isDone      Indicator for whether the task has been completed."},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"     * @param taskExists  Indicator for whether the task is already in the task list."},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"    public Deadline(String description, String dueDate, boolean isDone, boolean taskExists) {"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"        super(description, isDone);"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"        if (taskExists) {"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"            this.dueDate \u003d dueDate;"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"        } else {"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"            LocalDate date \u003d LocalDate.parse(dueDate);"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"            this.dueDate \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"     * A toString unique for Deadline Task."},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"     * @return Label for Deadline - \"D\", the description of the task, followed by the deadline."},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"    public String toString() {"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.dueDate + \")\";"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":42}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import javafx.geometry.Insets;"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import javafx.geometry.Pos;"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.Node;"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.control.Label;"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.image.Image;"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.shape.Rectangle;"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.text.Font;"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":" * An example of a custom control using FXML."},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":" * containing text from the speaker."},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":" */"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"public class DialogBox extends HBox {"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"    private Label dialog;"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"    private ImageView displayPicture;"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"            fxmlLoader.load();"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"        } catch (IOException e) {"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"            e.printStackTrace();"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"        dialog.setText(text);"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"        dialog.setFont(new Font(\"Arial\", 15));"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"        displayPicture.setImage(img);"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"        displayPicture.setFitWidth(100.0);"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"        displayPicture.setFitHeight(100.0);"},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"        Rectangle clip \u003d new Rectangle("},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"                displayPicture.getFitWidth(), displayPicture.getFitHeight()"},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"        );"},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"        clip.setArcWidth(100);"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"        clip.setArcHeight(100);"},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"        displayPicture.setClip(clip);"},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"        dialog.setPadding(new Insets(0, 10, 0, 10));"},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":"        this.setBackground(new Background(new BackgroundFill(Color.LIGHTBLUE, new CornerRadii(20), Insets.EMPTY)));"},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"JayChenYJ"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":61,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"JayChenYJ"},"content":"    private void flip() {"},{"lineNumber":63,"author":{"gitId":"JayChenYJ"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":64,"author":{"gitId":"JayChenYJ"},"content":"        Collections.reverse(tmp);"},{"lineNumber":65,"author":{"gitId":"JayChenYJ"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":66,"author":{"gitId":"JayChenYJ"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":67,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":69,"author":{"gitId":"JayChenYJ"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":70,"author":{"gitId":"JayChenYJ"},"content":"        return new DialogBox(text, img);"},{"lineNumber":71,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":73,"author":{"gitId":"JayChenYJ"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":74,"author":{"gitId":"JayChenYJ"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":75,"author":{"gitId":"JayChenYJ"},"content":"        db.flip();"},{"lineNumber":76,"author":{"gitId":"JayChenYJ"},"content":"        return db;"},{"lineNumber":77,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":78}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":" * The Duke project."},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":" */"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"    private final Ui ui;"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"    private final Storage storage;"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"    private final TaskParser taskParser;"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"    private final ContactParser contactParser;"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"    private int listType \u003d 3;"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"     * Constructor for Duke"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"     * @throws IOException Throw exception."},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"    public Duke() throws IOException {"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"        ui \u003d new Ui();"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"        storage \u003d new Storage();"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"        taskParser \u003d new TaskParser();"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"        contactParser \u003d new ContactParser();"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"        storage.readOrCreateFile();"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"     * Generates a response to user input."},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"     * @param input The user input."},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"     * @return Return the correct output from the given input."},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"     * @throws FileNotFoundException Exception thrown when the file does not exist, should not happen."},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"    String getResponse(String input) throws FileNotFoundException {"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"        if (input.equalsIgnoreCase(\"tasks\")) {"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"            listType \u003d 0;"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"            return \"I got you!\";"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"        } else if (input.equalsIgnoreCase(\"contacts\")) {"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"            listType \u003d 1;"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"            return \"I got you!\";"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"        } else {"},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"            String result;"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"            if (listType \u003d\u003d 0) {"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"                result \u003d taskParser.processInput(input, storage.getTaskList(), ui);"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"                storage.writeTaskListIntoFile();"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"            } else if (listType \u003d\u003d 1) {"},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"                result \u003d contactParser.processInput(input, storage.getContactList(), ui);"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"                storage.writeContactListIntoFile();"},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"            } else {"},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"                result \u003d \"Please select to go into tasks or contacts first!\";"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"            return result;"},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":""}],"authorContributionMap":{"JayChenYJ":54,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":" * Custom exception class for Duke project."},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"public class DukeException extends Exception {"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"    public DukeException(String message) {"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"        super(message);"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":9}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":" * An Event task that inherits Task."},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":" */"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"     * Date/Timing information for task to be carried out at."},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"    protected String eventDate;"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"     * Constructor for Event."},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"     * @param description The description of the task."},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"     * @param eventDate   Date of the task."},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"     * @param isDone      Indicator for whether the task has been completed."},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"     * @param taskExists  Indicator for whether the task is already in the task list."},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"    public Event(String description, String eventDate, boolean isDone, boolean taskExists) {"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"        super(description, isDone);"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"        if (taskExists) {"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"            this.eventDate \u003d eventDate;"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"        } else {"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"            LocalDate date \u003d LocalDate.parse(eventDate);"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"            this.eventDate \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"     * A toString uniquely for Event Task."},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"     * @return Label for Event - \"E\", the description of the task, followed by the timing."},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"    public String toString() {"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + eventDate + \")\";"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":42}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":" */"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":" */"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"    private final Duke duke \u003d new Duke();"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"    public Main() throws IOException {"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"            stage.setTitle(\"JayBot\");"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"            stage.show();"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":33}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import javafx.geometry.Insets;"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":" */"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"    private VBox dialogContainer;"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"    private TextField userInput;"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"    private Button sendButton;"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"    private Duke duke;"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"    private final Ui ui \u003d new Ui();"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"     * Initialises the Main Window."},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"    @FXML"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"    public void initialize() {"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"        dialogContainer.setPadding(new Insets(10, 10, 0, 10));"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"        dialogContainer.setSpacing(10);"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"                DialogBox.getDukeDialog(ui.showWelcomeMsg(), dukeImage)"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"        );"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"        duke \u003d d;"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"    @FXML"},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"    private void handleUserInput() throws FileNotFoundException {"},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":"        );"},{"lineNumber":60,"author":{"gitId":"JayChenYJ"},"content":"        userInput.clear();"},{"lineNumber":61,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":62}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"import java.io.PrintWriter;"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"import java.nio.charset.StandardCharsets;"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"import java.nio.file.Files;"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"import java.util.Collections;"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"     * Default path to store the user tasks."},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"    public static final String DEFAULT_TASKS_STORAGE_FILEPATH \u003d \"tasks.txt\";"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"     * Default path to store the user contacts."},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"    public static final String DEFAULT_CONTACTS_STORAGE_FILEPATH \u003d \"contacts.txt\";"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"    private TaskList tasks;"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"    private ContactList contacts;"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"     * Constructor for Storage."},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"    public Storage() {"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"        contacts \u003d new ContactList();"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"     * Read file if it exist, else will create a new file with the name."},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"     * @throws IOException Throw IO exception."},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"    public void readOrCreateFile() throws IOException {"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"        File tasksObj \u003d new File(DEFAULT_TASKS_STORAGE_FILEPATH);"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"        File contactsObj \u003d new File(DEFAULT_CONTACTS_STORAGE_FILEPATH);"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"        if (tasksObj.exists()) {"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"            readTaskFileIntoList(tasks);"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"        } else {"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"            //noinspection ResultOfMethodCallIgnored"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"            tasksObj.createNewFile();"},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"        if (contactsObj.exists()) {"},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"            readContactsFileIntoList(contacts);"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"        } else {"},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"            //noinspection ResultOfMethodCallIgnored"},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"            contactsObj.createNewFile();"},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":"     * Read the existing contacts file and create the list of contacts when the program is run."},{"lineNumber":60,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"JayChenYJ"},"content":"     * @param contacts The Contact Arraylist containing user contacts in sequence."},{"lineNumber":62,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"JayChenYJ"},"content":"    private void readContactsFileIntoList(ContactList contacts) {"},{"lineNumber":64,"author":{"gitId":"JayChenYJ"},"content":"        List\u003cString\u003e lines \u003d Collections.emptyList();"},{"lineNumber":65,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":66,"author":{"gitId":"JayChenYJ"},"content":"        try {"},{"lineNumber":67,"author":{"gitId":"JayChenYJ"},"content":"            lines \u003d Files.readAllLines(Paths.get(Storage.DEFAULT_CONTACTS_STORAGE_FILEPATH), StandardCharsets.UTF_8);"},{"lineNumber":68,"author":{"gitId":"JayChenYJ"},"content":"        } catch (IOException e) {"},{"lineNumber":69,"author":{"gitId":"JayChenYJ"},"content":"            e.printStackTrace();"},{"lineNumber":70,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":72,"author":{"gitId":"JayChenYJ"},"content":"        for (String object : lines) {"},{"lineNumber":73,"author":{"gitId":"JayChenYJ"},"content":"            String[] fullDetails \u003d object.split(\":\");"},{"lineNumber":74,"author":{"gitId":"JayChenYJ"},"content":"            String name \u003d fullDetails[0];"},{"lineNumber":75,"author":{"gitId":"JayChenYJ"},"content":"            String number \u003d fullDetails[1].substring(1);"},{"lineNumber":76,"author":{"gitId":"JayChenYJ"},"content":"            contacts.add(new Contact(name, number));"},{"lineNumber":77,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":80,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"JayChenYJ"},"content":"     * Read the existing task file and create the list of tasks when the program is run."},{"lineNumber":82,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks The Task Arraylist containing user tasks in sequence."},{"lineNumber":84,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"JayChenYJ"},"content":"    private void readTaskFileIntoList(TaskList tasks) {"},{"lineNumber":86,"author":{"gitId":"JayChenYJ"},"content":"        List\u003cString\u003e lines \u003d Collections.emptyList();"},{"lineNumber":87,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":88,"author":{"gitId":"JayChenYJ"},"content":"        try {"},{"lineNumber":89,"author":{"gitId":"JayChenYJ"},"content":"            lines \u003d Files.readAllLines(Paths.get(Storage.DEFAULT_TASKS_STORAGE_FILEPATH), StandardCharsets.UTF_8);"},{"lineNumber":90,"author":{"gitId":"JayChenYJ"},"content":"        } catch (IOException e) {"},{"lineNumber":91,"author":{"gitId":"JayChenYJ"},"content":"            e.printStackTrace();"},{"lineNumber":92,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":94,"author":{"gitId":"JayChenYJ"},"content":"        for (String object : lines) {"},{"lineNumber":95,"author":{"gitId":"JayChenYJ"},"content":"            if (object.charAt(1) \u003d\u003d \u0027T\u0027) {"},{"lineNumber":96,"author":{"gitId":"JayChenYJ"},"content":"                if (object.charAt(4) \u003d\u003d \u0027-\u0027) {"},{"lineNumber":97,"author":{"gitId":"JayChenYJ"},"content":"                    tasks.add(new Todo(object.substring(7), true));"},{"lineNumber":98,"author":{"gitId":"JayChenYJ"},"content":"                } else {"},{"lineNumber":99,"author":{"gitId":"JayChenYJ"},"content":"                    tasks.add(new Todo(object.substring(7), false));"},{"lineNumber":100,"author":{"gitId":"JayChenYJ"},"content":"                }"},{"lineNumber":101,"author":{"gitId":"JayChenYJ"},"content":"            } else {"},{"lineNumber":102,"author":{"gitId":"JayChenYJ"},"content":"                String dateInfo \u003d object.substring(object.indexOf(\"(\") + 5, object.indexOf(\")\"));"},{"lineNumber":103,"author":{"gitId":"JayChenYJ"},"content":"                if (object.charAt(1) \u003d\u003d \u0027D\u0027) {"},{"lineNumber":104,"author":{"gitId":"JayChenYJ"},"content":"                    if (object.charAt(4) \u003d\u003d \u0027-\u0027) {"},{"lineNumber":105,"author":{"gitId":"JayChenYJ"},"content":"                        tasks.add(new Deadline(object.substring(7, object.indexOf(\"(\") - 1), dateInfo, true, true));"},{"lineNumber":106,"author":{"gitId":"JayChenYJ"},"content":"                    } else {"},{"lineNumber":107,"author":{"gitId":"JayChenYJ"},"content":"                        tasks.add(new Deadline(object.substring(7, object.indexOf(\"(\") - 1), dateInfo, false, true));"},{"lineNumber":108,"author":{"gitId":"JayChenYJ"},"content":"                    }"},{"lineNumber":109,"author":{"gitId":"JayChenYJ"},"content":"                } else if (object.charAt(1) \u003d\u003d \u0027E\u0027) {"},{"lineNumber":110,"author":{"gitId":"JayChenYJ"},"content":"                    if (object.charAt(4) \u003d\u003d \u0027-\u0027) {"},{"lineNumber":111,"author":{"gitId":"JayChenYJ"},"content":"                        tasks.add(new Event(object.substring(7, object.indexOf(\"(\") - 1), dateInfo, true, true));"},{"lineNumber":112,"author":{"gitId":"JayChenYJ"},"content":"                    } else {"},{"lineNumber":113,"author":{"gitId":"JayChenYJ"},"content":"                        tasks.add(new Event(object.substring(7, object.indexOf(\"(\") - 1), dateInfo, false, true));"},{"lineNumber":114,"author":{"gitId":"JayChenYJ"},"content":"                    }"},{"lineNumber":115,"author":{"gitId":"JayChenYJ"},"content":"                }"},{"lineNumber":116,"author":{"gitId":"JayChenYJ"},"content":"            }"},{"lineNumber":117,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":120,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":121,"author":{"gitId":"JayChenYJ"},"content":"     * Update the tasks into the file after each user input."},{"lineNumber":122,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":123,"author":{"gitId":"JayChenYJ"},"content":"     * @throws FileNotFoundException Throw exception if file does not exist, should not happen."},{"lineNumber":124,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":125,"author":{"gitId":"JayChenYJ"},"content":"    public void writeTaskListIntoFile() throws FileNotFoundException {"},{"lineNumber":126,"author":{"gitId":"JayChenYJ"},"content":"        PrintWriter writer \u003d new PrintWriter(DEFAULT_TASKS_STORAGE_FILEPATH);"},{"lineNumber":127,"author":{"gitId":"JayChenYJ"},"content":"        ArrayList\u003cTask\u003e items \u003d tasks.getTaskList();"},{"lineNumber":128,"author":{"gitId":"JayChenYJ"},"content":"        for (Task item : items) {"},{"lineNumber":129,"author":{"gitId":"JayChenYJ"},"content":"            writer.println(item.toString());"},{"lineNumber":130,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"JayChenYJ"},"content":"        writer.close();"},{"lineNumber":132,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":134,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"JayChenYJ"},"content":"     * Update the contacts into the file after each user input."},{"lineNumber":136,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":137,"author":{"gitId":"JayChenYJ"},"content":"     * @throws FileNotFoundException Throw exception if file does not exist, should not happen."},{"lineNumber":138,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"JayChenYJ"},"content":"    public void writeContactListIntoFile() throws FileNotFoundException {"},{"lineNumber":140,"author":{"gitId":"JayChenYJ"},"content":"        PrintWriter writer \u003d new PrintWriter(DEFAULT_CONTACTS_STORAGE_FILEPATH);"},{"lineNumber":141,"author":{"gitId":"JayChenYJ"},"content":"        ArrayList\u003cContact\u003e items \u003d contacts.getContactList();"},{"lineNumber":142,"author":{"gitId":"JayChenYJ"},"content":"        for (Contact item : items) {"},{"lineNumber":143,"author":{"gitId":"JayChenYJ"},"content":"            writer.println(item.toString());"},{"lineNumber":144,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":145,"author":{"gitId":"JayChenYJ"},"content":"        writer.close();"},{"lineNumber":146,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":148,"author":{"gitId":"JayChenYJ"},"content":"    public TaskList getTaskList() {"},{"lineNumber":149,"author":{"gitId":"JayChenYJ"},"content":"        return this.tasks;"},{"lineNumber":150,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":152,"author":{"gitId":"JayChenYJ"},"content":"    public ContactList getContactList() {"},{"lineNumber":153,"author":{"gitId":"JayChenYJ"},"content":"        return this.contacts;"},{"lineNumber":154,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":155}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":" * Represent a task added by a user."},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"     * The content of the task."},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"    protected String description;"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"     * A boolean deciding whether a task has been completed."},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"     * Task completion is triggered by the user."},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"    protected boolean isDone;"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"     * Creates a new task with a given input by the user."},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"     * Task is initially not done at creation."},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"     * @param description The input description for the task."},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"     * @param isDone      The input to see if the task has been completed."},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"        this.description \u003d description;"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"     * Get the status icon of the task."},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"     * @return Return an icon, cross if done, empty space if not done."},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"    public String getStatusIcon() {"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"        return (isDone ? \"-\" : \" \");"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"     * Change the status of the the task completion to true when the task has been completed."},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"    public void makeDone() {"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"        this.isDone \u003d true;"},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"     * A toString to show the task information."},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"     * @return Show the status of the task, together with its description."},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"    public String toString() {"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":54}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"public class TaskList {"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"    private final ArrayList\u003cTask\u003e taskList;"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"     * Initialise Task List with new arrayList."},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"    public TaskList() {"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"     * Initialise Task List with existing taskList."},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"     * @param taskList The task list that was loaded from Storage."},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"     * Get size of taskList."},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"     * @return Size of task list."},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"    public int getSize() {"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"        if (taskList.isEmpty()) {"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"            return 0;"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"        } else {"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"            return taskList.size();"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"     * Get task List."},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"     * @return Task List."},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"        return taskList;"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"     * Add task to task List."},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"     * @param task The task to be added."},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"    public void add(Task task) {"},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"        taskList.add(task);"},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"    public void delete(int itemNum) {"},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"        taskList.remove(itemNum);"},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":"     * Search through all the tasks to see which ones contains the given keyword."},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"JayChenYJ"},"content":"     * @param keyword The keyword to be searched."},{"lineNumber":61,"author":{"gitId":"JayChenYJ"},"content":"     * @return The task list that contains only the relevant tasks."},{"lineNumber":62,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"JayChenYJ"},"content":"    public ArrayList\u003cTask\u003e search(String keyword) {"},{"lineNumber":64,"author":{"gitId":"JayChenYJ"},"content":"        ArrayList\u003cTask\u003e taskListToPrint \u003d new ArrayList\u003c\u003e();"},{"lineNumber":65,"author":{"gitId":"JayChenYJ"},"content":"        for (Task task : taskList) {"},{"lineNumber":66,"author":{"gitId":"JayChenYJ"},"content":"            if (task.toString().contains(keyword)) {"},{"lineNumber":67,"author":{"gitId":"JayChenYJ"},"content":"                taskListToPrint.add(task);"},{"lineNumber":68,"author":{"gitId":"JayChenYJ"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"JayChenYJ"},"content":"        return taskListToPrint;"},{"lineNumber":71,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":73,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"JayChenYJ"},"content":"     * A toString method to display all the tasks in the task list."},{"lineNumber":75,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string containing all the tasks in the task list."},{"lineNumber":77,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"JayChenYJ"},"content":"    @Override"},{"lineNumber":79,"author":{"gitId":"JayChenYJ"},"content":"    public String toString() {"},{"lineNumber":80,"author":{"gitId":"JayChenYJ"},"content":"        StringBuilder result \u003d new StringBuilder();"},{"lineNumber":81,"author":{"gitId":"JayChenYJ"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"},{"lineNumber":82,"author":{"gitId":"JayChenYJ"},"content":"            if (i \u003d\u003d taskList.size()) {"},{"lineNumber":83,"author":{"gitId":"JayChenYJ"},"content":"                result.append(i).append(\". \").append(taskList.get(i - 1));"},{"lineNumber":84,"author":{"gitId":"JayChenYJ"},"content":"            } else {"},{"lineNumber":85,"author":{"gitId":"JayChenYJ"},"content":"                result.append(i).append(\". \").append(taskList.get(i - 1)).append(\"\\n\");"},{"lineNumber":86,"author":{"gitId":"JayChenYJ"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"JayChenYJ"},"content":"        return result.toString();"},{"lineNumber":89,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":90}},{"path":"src/main/java/TaskParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"import javafx.application.Platform;"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"public class TaskParser {"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"     * Process the user input to make sense for the system."},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"     * @param nextInput The user input."},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks     The Task Arraylist containing user tasks in sequence."},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"     * @param ui        UI structure to show the user correct message."},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"     * @return Return the correct logic and GUI output."},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"    public String processInput(String nextInput, TaskList tasks, Ui ui) {"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"        String command \u003d nextInput.contains(\" \") ? nextInput.split(\" \")[0] : nextInput;"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"        try {"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"            switch (command.toLowerCase()) {"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"            case \"todo\":"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"                return todo(nextInput, tasks, ui);"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"            case \"deadline\":"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"                return deadline(nextInput, tasks, ui);"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"            case \"event\":"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"                return event(nextInput, tasks, ui);"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"            case \"done\":"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"                return done(nextInput, tasks, ui);"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"            case \"delete\":"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"                return delete(nextInput, tasks, ui);"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"            case \"list\":"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"                return list(tasks, ui);"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"            case \"find\":"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"                return find(nextInput, tasks, ui);"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"            case \"exit\":"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"                return exitCommand();"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"            default:"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"                return wrongCommand();"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"        } catch (DukeException e) {"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"            return e.getMessage();"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"     * Adds a Todo task."},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"     * @param nextInput The description of the task."},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks     The Task Arraylist containing user tasks in sequence."},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"     * @param ui        UI structure to show the user correct message."},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"     * @throws DukeException Exception thrown if the command given is invalid."},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"    public String todo(String nextInput, TaskList tasks, Ui ui) throws DukeException {"},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"        if (nextInput.length() \u003c 6) {"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"        String command \u003d nextInput.substring(5);"},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":"        tasks.add(new Todo(command, false));"},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":"        return ui.showTodoMsg(tasks);"},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"JayChenYJ"},"content":"     * Adds a Deadline task."},{"lineNumber":61,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"JayChenYJ"},"content":"     * @param nextInput The description of the task."},{"lineNumber":63,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks     The Task Arraylist containing user tasks in sequence."},{"lineNumber":64,"author":{"gitId":"JayChenYJ"},"content":"     * @param ui        UI structure to show the user correct message."},{"lineNumber":65,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":66,"author":{"gitId":"JayChenYJ"},"content":"     * @throws DukeException Exception thrown if the command given is invalid."},{"lineNumber":67,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"JayChenYJ"},"content":"    public String deadline(String nextInput, TaskList tasks, Ui ui) throws DukeException {"},{"lineNumber":69,"author":{"gitId":"JayChenYJ"},"content":"        if (nextInput.length() \u003c 10) {"},{"lineNumber":70,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":71,"author":{"gitId":"JayChenYJ"},"content":"        } else if (!nextInput.contains(\"/\")) {"},{"lineNumber":72,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"OOPS!!! The date information of a deadline cannot be empty.\");"},{"lineNumber":73,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"JayChenYJ"},"content":"        String command \u003d nextInput.substring(9, nextInput.indexOf(\"/\") - 1);"},{"lineNumber":75,"author":{"gitId":"JayChenYJ"},"content":"        String dateInfo \u003d nextInput.substring(nextInput.indexOf(\"/\") + 4);"},{"lineNumber":76,"author":{"gitId":"JayChenYJ"},"content":"        tasks.add(new Deadline(command, dateInfo, false, false));"},{"lineNumber":77,"author":{"gitId":"JayChenYJ"},"content":"        return ui.showDeadlineMsg(tasks);"},{"lineNumber":78,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":80,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"JayChenYJ"},"content":"     * Adds a Event task."},{"lineNumber":82,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"JayChenYJ"},"content":"     * @param nextInput The description of the task."},{"lineNumber":84,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks     The Task Arraylist containing user tasks in sequence."},{"lineNumber":85,"author":{"gitId":"JayChenYJ"},"content":"     * @param ui        UI structure to show the user correct message."},{"lineNumber":86,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":87,"author":{"gitId":"JayChenYJ"},"content":"     * @throws DukeException Exception thrown if the command given is invalid."},{"lineNumber":88,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"JayChenYJ"},"content":"    public String event(String nextInput, TaskList tasks, Ui ui) throws DukeException {"},{"lineNumber":90,"author":{"gitId":"JayChenYJ"},"content":"        if (nextInput.length() \u003c 7) {"},{"lineNumber":91,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");"},{"lineNumber":92,"author":{"gitId":"JayChenYJ"},"content":"        } else if (!nextInput.contains(\"/\")) {"},{"lineNumber":93,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"OOPS!!! The date information of an event cannot be empty.\");"},{"lineNumber":94,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"JayChenYJ"},"content":"        String command \u003d nextInput.substring(6, nextInput.indexOf(\"/\") - 1);"},{"lineNumber":96,"author":{"gitId":"JayChenYJ"},"content":"        String dateInfo \u003d nextInput.substring(nextInput.indexOf(\"/\") + 4);"},{"lineNumber":97,"author":{"gitId":"JayChenYJ"},"content":"        tasks.add(new Event(command, dateInfo, false, false));"},{"lineNumber":98,"author":{"gitId":"JayChenYJ"},"content":"        return ui.showEventMsg(tasks);"},{"lineNumber":99,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":101,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"JayChenYJ"},"content":"     * Mark the task in the given task number as done."},{"lineNumber":103,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":104,"author":{"gitId":"JayChenYJ"},"content":"     * @param command The command given by user input."},{"lineNumber":105,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks   The Task Arraylist containing user tasks in sequence."},{"lineNumber":106,"author":{"gitId":"JayChenYJ"},"content":"     * @param ui      UI structure to show the user correct message."},{"lineNumber":107,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":108,"author":{"gitId":"JayChenYJ"},"content":"     * @throws DukeException Exception thrown if the number given is out of range."},{"lineNumber":109,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"JayChenYJ"},"content":"    public String done(String command, TaskList tasks, Ui ui) throws DukeException {"},{"lineNumber":111,"author":{"gitId":"JayChenYJ"},"content":"        if (command.length() \u003c 6) {"},{"lineNumber":112,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"OOPS!!! The item number cannot be empty.\");"},{"lineNumber":113,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"JayChenYJ"},"content":"        String[] commandToWords \u003d command.split(\" \");"},{"lineNumber":115,"author":{"gitId":"JayChenYJ"},"content":"        int itemNum \u003d Integer.parseInt(commandToWords[1]);"},{"lineNumber":116,"author":{"gitId":"JayChenYJ"},"content":"        if (itemNum \u003e tasks.getSize() || itemNum \u003c 1) {"},{"lineNumber":117,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"Item number selected is out of range.\");"},{"lineNumber":118,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"JayChenYJ"},"content":"        tasks.getTaskList().get(itemNum - 1).makeDone();"},{"lineNumber":120,"author":{"gitId":"JayChenYJ"},"content":"        assert tasks.getTaskList().get(itemNum - 1).isDone : tasks.getTaskList().get(itemNum - 1).description;"},{"lineNumber":121,"author":{"gitId":"JayChenYJ"},"content":"        return ui.showDoneMsg(tasks, itemNum);"},{"lineNumber":122,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":124,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"JayChenYJ"},"content":"     * Delete the task corresponding to the number input by the user."},{"lineNumber":126,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":127,"author":{"gitId":"JayChenYJ"},"content":"     * @param command The command given by user input."},{"lineNumber":128,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks   The Task Arraylist containing user tasks in sequence."},{"lineNumber":129,"author":{"gitId":"JayChenYJ"},"content":"     * @param ui      UI structure to show the user correct message."},{"lineNumber":130,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":131,"author":{"gitId":"JayChenYJ"},"content":"     * @throws DukeException Exception thrown if the number given is out of range."},{"lineNumber":132,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":133,"author":{"gitId":"JayChenYJ"},"content":"    public String delete(String command, TaskList tasks, Ui ui) throws DukeException {"},{"lineNumber":134,"author":{"gitId":"JayChenYJ"},"content":"        if (command.length() \u003c 8) {"},{"lineNumber":135,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"OOPS!!! The item number cannot be empty.\");"},{"lineNumber":136,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"JayChenYJ"},"content":"        String[] commandToWords \u003d command.split(\" \");"},{"lineNumber":138,"author":{"gitId":"JayChenYJ"},"content":"        int itemNum \u003d Integer.parseInt(commandToWords[1]);"},{"lineNumber":139,"author":{"gitId":"JayChenYJ"},"content":"        if (itemNum \u003e tasks.getSize() || itemNum \u003c 1) {"},{"lineNumber":140,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"Item number selected is out of range.\");"},{"lineNumber":141,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"JayChenYJ"},"content":"        String taskRemoved \u003d tasks.getTaskList().get(itemNum - 1).toString();"},{"lineNumber":143,"author":{"gitId":"JayChenYJ"},"content":"        tasks.delete(itemNum - 1);"},{"lineNumber":144,"author":{"gitId":"JayChenYJ"},"content":"        return ui.showDeleteTaskMsg(taskRemoved, tasks.getSize());"},{"lineNumber":145,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":147,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":148,"author":{"gitId":"JayChenYJ"},"content":"     * List out all user inputs in sequence."},{"lineNumber":149,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":150,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks The Task Arraylist containing user tasks in sequence."},{"lineNumber":151,"author":{"gitId":"JayChenYJ"},"content":"     * @param ui    UI structure to show the user correct message."},{"lineNumber":152,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":153,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":154,"author":{"gitId":"JayChenYJ"},"content":"    public String list(TaskList tasks, Ui ui) {"},{"lineNumber":155,"author":{"gitId":"JayChenYJ"},"content":"        return ui.showTaskListMsg(tasks);"},{"lineNumber":156,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":158,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":159,"author":{"gitId":"JayChenYJ"},"content":"     * Find tasks matching the keyword in the command given by the user."},{"lineNumber":160,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":161,"author":{"gitId":"JayChenYJ"},"content":"     * @param command The command given by user input."},{"lineNumber":162,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks   The Task Arraylist containing user tasks in sequence."},{"lineNumber":163,"author":{"gitId":"JayChenYJ"},"content":"     * @param ui      UI structure to show the user correct message."},{"lineNumber":164,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":165,"author":{"gitId":"JayChenYJ"},"content":"     * @throws DukeException Exception thrown if the user input is invalid."},{"lineNumber":166,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":167,"author":{"gitId":"JayChenYJ"},"content":"    public String find(String command, TaskList tasks, Ui ui) throws DukeException {"},{"lineNumber":168,"author":{"gitId":"JayChenYJ"},"content":"        if (command.length() \u003c 6) {"},{"lineNumber":169,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"OOPS!!! The keyword cannot be empty.\");"},{"lineNumber":170,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"JayChenYJ"},"content":"        String keyword \u003d command.split(\" \")[1];"},{"lineNumber":172,"author":{"gitId":"JayChenYJ"},"content":"        return ui.showFindMsg(keyword, tasks);"},{"lineNumber":173,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":175,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":176,"author":{"gitId":"JayChenYJ"},"content":"     * Tells the user that the input given is invalid."},{"lineNumber":177,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":178,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":179,"author":{"gitId":"JayChenYJ"},"content":"     * @throws DukeException Exception thrown if the user input is invalid."},{"lineNumber":180,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":181,"author":{"gitId":"JayChenYJ"},"content":"    public String wrongCommand() throws DukeException {"},{"lineNumber":182,"author":{"gitId":"JayChenYJ"},"content":"        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":183,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":185,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":186,"author":{"gitId":"JayChenYJ"},"content":"     * Terminate the GUI when the user decides to."},{"lineNumber":187,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":188,"author":{"gitId":"JayChenYJ"},"content":"     * @return Nothing since this command will close the GUI."},{"lineNumber":189,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":190,"author":{"gitId":"JayChenYJ"},"content":"    public String exitCommand() {"},{"lineNumber":191,"author":{"gitId":"JayChenYJ"},"content":"        Platform.exit();"},{"lineNumber":192,"author":{"gitId":"JayChenYJ"},"content":"        return null;"},{"lineNumber":193,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":194}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":" * A Todo task that inherits Task."},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"public class Todo extends Task {"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"    public Todo(String description, boolean isDone) {"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"        super(description, isDone);"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"     * A toString uniquely for Todo Task."},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"     * @return Label for Todo - \"T\" and the description of the task."},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":19}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"     * Greets the user when the Duke is launched."},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"    public String showWelcomeMsg() {"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"        return \"Hello! I\u0027m Jay!\\n\" + \"What can I do for you?\";"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"     * Show the user that a todo task has been added."},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks The Task Arraylist containing user tasks in sequence."},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"    public String showTodoMsg(TaskList tasks) {"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"        assert tasks.getSize() \u003e\u003d 0 : tasks.getSize();"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + \"    \" + tasks.getTaskList().get(tasks.getSize() - 1).toString()"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"                + \"\\n\" + \"Now you have \" + tasks.getSize() + \" tasks in the list.\";"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"     * Show the user that a deadline task has been added."},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks The Task Arraylist containing user tasks in sequence."},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"    public String showDeadlineMsg(TaskList tasks) {"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + \"    \" + tasks.getTaskList().get(tasks.getSize() - 1).toString()"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"                + \"\\n\" + \"Now you have \" + tasks.getSize() + \" tasks in the list.\";"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"     * Show the user that a event task has been added."},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks The Task Arraylist containing user tasks in sequence."},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"    public String showEventMsg(TaskList tasks) {"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + \"    \" + tasks.getTaskList().get(tasks.getSize() - 1).toString()"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"                + \"\\n\" + \"Now you have \" + tasks.getSize() + \" tasks in the list.\";"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"     * Show the user that a task of choice has been deleted."},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"     * @param taskRemoved The description of the task deleted."},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":"     * @param totalTasks  Total number of tasks in the list."},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":"    public String showDeleteTaskMsg(String taskRemoved, int totalTasks) {"},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + \"    \" + taskRemoved + \"\\n\""},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"                + \"Now you have \" + totalTasks + \" tasks in the list.\";"},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":60,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"JayChenYJ"},"content":"     * Show the user that a task has been marked done."},{"lineNumber":62,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks   The Task Arraylist containing user tasks in sequence."},{"lineNumber":64,"author":{"gitId":"JayChenYJ"},"content":"     * @param itemNum The item number that is marked done."},{"lineNumber":65,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":66,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"JayChenYJ"},"content":"    public String showDoneMsg(TaskList tasks, int itemNum) {"},{"lineNumber":68,"author":{"gitId":"JayChenYJ"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + \"    \" + tasks.getTaskList().get(itemNum - 1).toString();"},{"lineNumber":69,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":71,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"JayChenYJ"},"content":"     * Show the user the list of tasks."},{"lineNumber":73,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":74,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks The Task Arraylist containing user tasks in sequence."},{"lineNumber":75,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":76,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"JayChenYJ"},"content":"    public String showTaskListMsg(TaskList tasks) {"},{"lineNumber":78,"author":{"gitId":"JayChenYJ"},"content":"        return \"Here are the tasks in your list:\" + \"\\n\" + tasks.toString();"},{"lineNumber":79,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":81,"author":{"gitId":"JayChenYJ"},"content":"    public String showContactListMsg(ContactList contacts) {"},{"lineNumber":82,"author":{"gitId":"JayChenYJ"},"content":"        return \"Here are the contacts in your list:\" + \"\\n\" + contacts.toString();"},{"lineNumber":83,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":85,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"JayChenYJ"},"content":"     * Show the user the list of tasks with matching keyword."},{"lineNumber":87,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"JayChenYJ"},"content":"     * @param keyword The keyword to search for match."},{"lineNumber":89,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks   The Task Arraylist containing user tasks in sequence."},{"lineNumber":90,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing correct GUI output."},{"lineNumber":91,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"JayChenYJ"},"content":"    public String showFindMsg(String keyword, TaskList tasks) {"},{"lineNumber":93,"author":{"gitId":"JayChenYJ"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.search(keyword);"},{"lineNumber":94,"author":{"gitId":"JayChenYJ"},"content":"        TaskList matchedTasks \u003d new TaskList(matchingTasks);"},{"lineNumber":95,"author":{"gitId":"JayChenYJ"},"content":"        return \"Here are the matching tasks in your list:\" + \"\\n\" + matchedTasks.toString();"},{"lineNumber":96,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":98,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"JayChenYJ"},"content":"     * Show the user that a contact has been added to the list."},{"lineNumber":100,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":101,"author":{"gitId":"JayChenYJ"},"content":"     * @param contacts The Contact Arraylist containing user contacts in sequence."},{"lineNumber":102,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing the correct GUI output."},{"lineNumber":103,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"JayChenYJ"},"content":"    public String showAddContactMsg(ContactList contacts) {"},{"lineNumber":105,"author":{"gitId":"JayChenYJ"},"content":"        return \"Got it. I\u0027ve added this contact:\\n\" + \"    \""},{"lineNumber":106,"author":{"gitId":"JayChenYJ"},"content":"                + contacts.getContactList().get(contacts.getSize() - 1).toString() + \"\\n\" + \"Now you have \""},{"lineNumber":107,"author":{"gitId":"JayChenYJ"},"content":"                + contacts.getSize() + \" contacts in the list.\";"},{"lineNumber":108,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":110,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"JayChenYJ"},"content":"     * Show the user that a contact has been deleted from the list."},{"lineNumber":112,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":113,"author":{"gitId":"JayChenYJ"},"content":"     * @param contactRemoved The detail of the contact deleted."},{"lineNumber":114,"author":{"gitId":"JayChenYJ"},"content":"     * @param totalContacts  The total number of contacts in the list."},{"lineNumber":115,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing the correct GUI output."},{"lineNumber":116,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"JayChenYJ"},"content":"    public String showDeleteContactMsg(String contactRemoved, int totalContacts) {"},{"lineNumber":118,"author":{"gitId":"JayChenYJ"},"content":"        return \"Noted. I\u0027ve removed this contact:\\n\" + \"    \" + contactRemoved + \"\\n\" + \"Now you have \""},{"lineNumber":119,"author":{"gitId":"JayChenYJ"},"content":"                + totalContacts + \" contacts in the list.\";"},{"lineNumber":120,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":122,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"JayChenYJ"},"content":"     * Show the uer that a contact has been updated."},{"lineNumber":124,"author":{"gitId":"JayChenYJ"},"content":"     *"},{"lineNumber":125,"author":{"gitId":"JayChenYJ"},"content":"     * @param contacts The Contact Arraylist containing user contacts in sequence."},{"lineNumber":126,"author":{"gitId":"JayChenYJ"},"content":"     * @return A string showing the correct GUI output."},{"lineNumber":127,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"JayChenYJ"},"content":"    public String showUpdateContactMsg(ContactList contacts) {"},{"lineNumber":129,"author":{"gitId":"JayChenYJ"},"content":"        return \"Got it. I\u0027ve updated this contact:\\n\" + \"    \""},{"lineNumber":130,"author":{"gitId":"JayChenYJ"},"content":"                + contacts.getContactList().get(contacts.getSize() - 1).toString();"},{"lineNumber":131,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":132}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\""},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"    \u003cpadding\u003e"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\"/\u003e"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"    \u003c/padding\u003e"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"JayChenYJ":14}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\""},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"            prefHeight\u003d\"800.0\""},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"            prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\""},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"            fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"59.0\" prefWidth\u003d\"400.0\""},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"               AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"400.0\" layoutY\u003d\"740.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"            prefHeight\u003d\"59.0\" prefWidth\u003d\"100.0\" text\u003d\"Send\"/\u003e"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" vbarPolicy\u003d\"ALWAYS\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"740.0\""},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"                prefWidth\u003d\"500.0\""},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"                vvalue\u003d\"1.0\"\u003e"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"480.0\" maxHeight\u003d\"Infinity\"/\u003e"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"JayChenYJ":21}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"public class DukeTest {"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"    public void dummyTest() {"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"        assertEquals(2, 2);"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"    public void createNewTodoTask() {"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"        Task task \u003d new Todo(\"read book\", false);"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"        assertEquals(\"[T][ ] read book\", task.toString());"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"    public void createNewDeadlineTask() {"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"        Task task \u003d new Deadline(\"return book\", \"2020-02-04\", false, false);"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"        assertEquals(\"[D][ ] return book (by: Feb 4 2020)\", task.toString());"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"    public void createNewEventTask() {"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"        Task task \u003d new Event(\"project meeting\", \"2020-02-05\", false, false);"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"        assertEquals(\"[E][ ] project meeting (at: Feb 5 2020)\", task.toString());"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"Gordon"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"todo"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"todo borrow book"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"deadline"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"deadline return book"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"deadline return book /by Sunday"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"event"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"event project meeting"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"list"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"done 1"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"done 3"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"list"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"delete 3"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"delete 3"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"list"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"blah"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"bye"}],"authorContributionMap":{"JayChenYJ":18}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"JayChenYJ":1,"-":37}}]
