[{"path":"src/main/java/CommandEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"public enum CommandEnum {"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"    TODO (\"todo\"),"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"    DEADLINE (\"deadline\"),"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"    EVENT (\"event\"),"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"    DONE (\"done\"),"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"    DELETE (\"delete\"),"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"    LIST (\"list\"),"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"    BYE (\"bye\");"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"    private final String command;"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"    CommandEnum(String command) {"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"        this.command \u003d command;"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":15}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":" * A Deadline task that inherits Task."},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"public class Deadline extends Task{"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"    protected String by;"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"        this.by \u003d by;"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"     * A toString uniquely for Deadline Task"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"     * @return Label for Deadline - \"D\", the description of the task, followed by the deadline."},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":20}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":" * The Duke project"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":" */"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"    static int totalTasks \u003d 0;"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"    static boolean endOfCycle \u003d false;"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"        greet();"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"        String username \u003d sc.nextLine();"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"        nextGreet(username);"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"        while(!endOfCycle) {"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"            System.out.print(username + \": \");"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"            String nextInput \u003d sc.nextLine();"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":"            String command \u003d nextInput.contains(\" \") ? nextInput.split(\" \")[0] : nextInput;"},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"            try {"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"                switch (command) {"},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"                    case \"todo\" -\u003e todo(nextInput, tasks);"},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"                    case \"deadline\" -\u003e deadline(nextInput, tasks);"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"                    case \"event\" -\u003e event(nextInput, tasks);"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"                    case \"done\" -\u003e done(nextInput, tasks, totalTasks);"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"                    case \"delete\" -\u003e delete(nextInput, tasks, totalTasks);"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":"                    case \"list\" -\u003e list(tasks, totalTasks);"},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"                    case \"bye\" -\u003e bye(username);"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"                    default -\u003e wrongCommand();"},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"                }"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"            } catch (DukeException e) {"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"                //noinspection ThrowablePrintedToSystemOut"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"                System.out.println(e);"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"        sc.close();"},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"     * Signal termination of the conversation."},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"    public static void setEndOfCycle() {"},{"lineNumber":50,"author":{"gitId":"JayChenYJ"},"content":"        endOfCycle \u003d true;"},{"lineNumber":51,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":53,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"JayChenYJ"},"content":"     * Increase the total number of tasks in the list by 1."},{"lineNumber":55,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"JayChenYJ"},"content":"    public static void taskAdded() {"},{"lineNumber":57,"author":{"gitId":"JayChenYJ"},"content":"        totalTasks++;"},{"lineNumber":58,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":60,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"JayChenYJ"},"content":"     * Decrease the total number of tasks in the list by 1."},{"lineNumber":62,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"JayChenYJ"},"content":"    public static void taskDeleted() {"},{"lineNumber":64,"author":{"gitId":"JayChenYJ"},"content":"        totalTasks--;"},{"lineNumber":65,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":67,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"JayChenYJ"},"content":"     * Greets the user when the Duke is launched."},{"lineNumber":69,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"JayChenYJ"},"content":"    public static void greet() {"},{"lineNumber":71,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"----------------------------------------------------------------------------------------\");"},{"lineNumber":72,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"Hello! I\u0027m Jay!\\n\" + \"What is your name!\");"},{"lineNumber":73,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"----------------------------------------------------------------------------------------\");"},{"lineNumber":74,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":76,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"JayChenYJ"},"content":"     * Greets the user again after knowing the user\u0027s name."},{"lineNumber":78,"author":{"gitId":"JayChenYJ"},"content":"     * @param username The name of the user."},{"lineNumber":79,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"JayChenYJ"},"content":"    public static void nextGreet(String username) {"},{"lineNumber":81,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"----------------------------------------------------------------------------------------\");"},{"lineNumber":82,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"Hi \" + username + \"!\");"},{"lineNumber":83,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":84,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"----------------------------------------------------------------------------------------\");"},{"lineNumber":85,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":87,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"JayChenYJ"},"content":"     * Adds a Todo task."},{"lineNumber":89,"author":{"gitId":"JayChenYJ"},"content":"     * @param nextInput The description of the task."},{"lineNumber":90,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks The Task Arraylist containing user tasks in sequence."},{"lineNumber":91,"author":{"gitId":"JayChenYJ"},"content":"     * @throws DukeException Exception thrown if the command given is invalid."},{"lineNumber":92,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"JayChenYJ"},"content":"    public static void todo(String nextInput, ArrayList\u003cTask\u003e tasks) throws DukeException{"},{"lineNumber":94,"author":{"gitId":"JayChenYJ"},"content":"        if (nextInput.length() \u003c 6) {"},{"lineNumber":95,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":96,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"JayChenYJ"},"content":"        String command \u003d nextInput.substring(5);"},{"lineNumber":98,"author":{"gitId":"JayChenYJ"},"content":"        tasks.add(new Todo(command));"},{"lineNumber":99,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"----------------------------------------------------------------------------------------\");"},{"lineNumber":100,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + \"    \" + tasks.get(totalTasks).toString());"},{"lineNumber":101,"author":{"gitId":"JayChenYJ"},"content":"        taskAdded();"},{"lineNumber":102,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"Now you have \" + totalTasks + \" tasks in the list.\");"},{"lineNumber":103,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"----------------------------------------------------------------------------------------\");"},{"lineNumber":104,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":106,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"JayChenYJ"},"content":"     * Adds a Deadline task."},{"lineNumber":108,"author":{"gitId":"JayChenYJ"},"content":"     * @param nextInput The description of the task."},{"lineNumber":109,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks The Task Arraylist containing user tasks in sequence."},{"lineNumber":110,"author":{"gitId":"JayChenYJ"},"content":"     * @throws DukeException Exception thrown if the command given is invalid."},{"lineNumber":111,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"JayChenYJ"},"content":"    public static void deadline(String nextInput, ArrayList\u003cTask\u003e tasks) throws DukeException{"},{"lineNumber":113,"author":{"gitId":"JayChenYJ"},"content":"        if (nextInput.length() \u003c 10) {"},{"lineNumber":114,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":115,"author":{"gitId":"JayChenYJ"},"content":"        } else if (!nextInput.contains(\"/\")){"},{"lineNumber":116,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"OOPS!!! The date information of a deadline cannot be empty.\");"},{"lineNumber":117,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"JayChenYJ"},"content":"        String command \u003d nextInput.substring(9, nextInput.indexOf(\"/\") - 1);"},{"lineNumber":119,"author":{"gitId":"JayChenYJ"},"content":"        String dateInfo \u003d nextInput.substring(nextInput.indexOf(\"/\") + 4);"},{"lineNumber":120,"author":{"gitId":"JayChenYJ"},"content":"        tasks.add(new Deadline(command, dateInfo));"},{"lineNumber":121,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"----------------------------------------------------------------------------------------\");"},{"lineNumber":122,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + \"    \" + tasks.get(totalTasks).toString());"},{"lineNumber":123,"author":{"gitId":"JayChenYJ"},"content":"        taskAdded();"},{"lineNumber":124,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"Now you have \" + totalTasks + \" tasks in the list.\");"},{"lineNumber":125,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"----------------------------------------------------------------------------------------\");"},{"lineNumber":126,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":128,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"JayChenYJ"},"content":"     * Adds an Event task."},{"lineNumber":130,"author":{"gitId":"JayChenYJ"},"content":"     * @param nextInput The description of the task."},{"lineNumber":131,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks The Task Arraylist containing user tasks in sequence."},{"lineNumber":132,"author":{"gitId":"JayChenYJ"},"content":"     * @throws DukeException Exception thrown if the command given is invalid."},{"lineNumber":133,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":134,"author":{"gitId":"JayChenYJ"},"content":"    public static void event(String nextInput, ArrayList\u003cTask\u003e tasks) throws DukeException{"},{"lineNumber":135,"author":{"gitId":"JayChenYJ"},"content":"        if (nextInput.length() \u003c 7) {"},{"lineNumber":136,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");"},{"lineNumber":137,"author":{"gitId":"JayChenYJ"},"content":"        } else if (!nextInput.contains(\"/\")) {"},{"lineNumber":138,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"OOPS!!! The date information of an event cannot be empty.\");"},{"lineNumber":139,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"JayChenYJ"},"content":"        String command \u003d nextInput.substring(6, nextInput.indexOf(\"/\") - 1);"},{"lineNumber":141,"author":{"gitId":"JayChenYJ"},"content":"        String dateInfo \u003d nextInput.substring(nextInput.indexOf(\"/\") + 4);"},{"lineNumber":142,"author":{"gitId":"JayChenYJ"},"content":"        tasks.add(new Event(command, dateInfo));"},{"lineNumber":143,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"----------------------------------------------------------------------------------------\");"},{"lineNumber":144,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + \"    \" + tasks.get(totalTasks).toString());"},{"lineNumber":145,"author":{"gitId":"JayChenYJ"},"content":"        taskAdded();"},{"lineNumber":146,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"Now you have \" + totalTasks + \" tasks in the list.\");"},{"lineNumber":147,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"----------------------------------------------------------------------------------------\");"},{"lineNumber":148,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":150,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":151,"author":{"gitId":"JayChenYJ"},"content":"     * Mark the task in the given task number as done."},{"lineNumber":152,"author":{"gitId":"JayChenYJ"},"content":"     * @param command The command given by user input."},{"lineNumber":153,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks The Task Arraylist containing user tasks in sequence."},{"lineNumber":154,"author":{"gitId":"JayChenYJ"},"content":"     * @param count The current number of tasks stored inside the Task Arraylist."},{"lineNumber":155,"author":{"gitId":"JayChenYJ"},"content":"     * @throws DukeException Exception thrown if the number given is out of range."},{"lineNumber":156,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":157,"author":{"gitId":"JayChenYJ"},"content":"    public static void done(String command, ArrayList\u003cTask\u003e tasks, int count) throws DukeException{"},{"lineNumber":158,"author":{"gitId":"JayChenYJ"},"content":"        String[] commandToWords \u003d command.split(\" \");"},{"lineNumber":159,"author":{"gitId":"JayChenYJ"},"content":"        int itemNum \u003d Integer.parseInt(commandToWords[1]);"},{"lineNumber":160,"author":{"gitId":"JayChenYJ"},"content":"        if (itemNum \u003e count || itemNum \u003c 1) {"},{"lineNumber":161,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"Item number selected is out of range.\");"},{"lineNumber":162,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"JayChenYJ"},"content":"        tasks.get(itemNum - 1).makeDone();"},{"lineNumber":164,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"----------------------------------------------------------------------------------------\");"},{"lineNumber":165,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + tasks.get(itemNum - 1).toString());"},{"lineNumber":166,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"----------------------------------------------------------------------------------------\");"},{"lineNumber":167,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":169,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":170,"author":{"gitId":"JayChenYJ"},"content":"     * Delete the task corresponding to the number input by the user."},{"lineNumber":171,"author":{"gitId":"JayChenYJ"},"content":"     * @param command The command given by user input."},{"lineNumber":172,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks The Task Arraylist containing user tasks in sequence."},{"lineNumber":173,"author":{"gitId":"JayChenYJ"},"content":"     * @param count The current number of tasks stored inside the Task Arraylist."},{"lineNumber":174,"author":{"gitId":"JayChenYJ"},"content":"     * @throws DukeException Exception thrown if the number given is out of range."},{"lineNumber":175,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":176,"author":{"gitId":"JayChenYJ"},"content":"    public static void delete(String command, ArrayList\u003cTask\u003e tasks, int count) throws DukeException {"},{"lineNumber":177,"author":{"gitId":"JayChenYJ"},"content":"        String[] commandToWords \u003d command.split(\" \");"},{"lineNumber":178,"author":{"gitId":"JayChenYJ"},"content":"        int itemNum \u003d Integer.parseInt(commandToWords[1]);"},{"lineNumber":179,"author":{"gitId":"JayChenYJ"},"content":"        if (itemNum \u003e count || itemNum \u003c 1) {"},{"lineNumber":180,"author":{"gitId":"JayChenYJ"},"content":"            throw new DukeException(\"Item number selected is out of range.\");"},{"lineNumber":181,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":182,"author":{"gitId":"JayChenYJ"},"content":"        String taskRemoved \u003d tasks.get(itemNum - 1).toString();"},{"lineNumber":183,"author":{"gitId":"JayChenYJ"},"content":"        tasks.remove(itemNum - 1);"},{"lineNumber":184,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"----------------------------------------------------------------------------------------\");"},{"lineNumber":185,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + \"    \" + taskRemoved);"},{"lineNumber":186,"author":{"gitId":"JayChenYJ"},"content":"        taskDeleted();"},{"lineNumber":187,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"Now you have \" + totalTasks + \" tasks in the list.\");"},{"lineNumber":188,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"----------------------------------------------------------------------------------------\");"},{"lineNumber":189,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":190,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":191,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":192,"author":{"gitId":"JayChenYJ"},"content":"     * List out all user inputs in sequence."},{"lineNumber":193,"author":{"gitId":"JayChenYJ"},"content":"     * @param tasks The Task Arraylist containing user tasks in sequence."},{"lineNumber":194,"author":{"gitId":"JayChenYJ"},"content":"     * @param count The current number of tasks stored inside the Task Arraylist."},{"lineNumber":195,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":196,"author":{"gitId":"JayChenYJ"},"content":"    public static void list(ArrayList\u003cTask\u003e tasks, int count) {"},{"lineNumber":197,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"----------------------------------------------------------------------------------------\");"},{"lineNumber":198,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":199,"author":{"gitId":"JayChenYJ"},"content":"        for (int i \u003d 0; i \u003c count; i++){"},{"lineNumber":200,"author":{"gitId":"JayChenYJ"},"content":"            int listNum \u003d i + 1;"},{"lineNumber":201,"author":{"gitId":"JayChenYJ"},"content":"            System.out.println(listNum + \". \" + tasks.get(i).toString());"},{"lineNumber":202,"author":{"gitId":"JayChenYJ"},"content":"        }"},{"lineNumber":203,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"----------------------------------------------------------------------------------------\");"},{"lineNumber":204,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":205,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":206,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":207,"author":{"gitId":"JayChenYJ"},"content":"     * Tells the user that the input given is invalid."},{"lineNumber":208,"author":{"gitId":"JayChenYJ"},"content":"     * @throws DukeException Exception thrown if the user input is invalid."},{"lineNumber":209,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":210,"author":{"gitId":"JayChenYJ"},"content":"    public static void wrongCommand() throws  DukeException{"},{"lineNumber":211,"author":{"gitId":"JayChenYJ"},"content":"        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":212,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":213,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":214,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":215,"author":{"gitId":"JayChenYJ"},"content":"     * Saying bye to the user when the user decides to quit."},{"lineNumber":216,"author":{"gitId":"JayChenYJ"},"content":"     * @param username The name of the user."},{"lineNumber":217,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":218,"author":{"gitId":"JayChenYJ"},"content":"    public static void bye(String username) {"},{"lineNumber":219,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"----------------------------------------------------------------------------------------\");"},{"lineNumber":220,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"Bye \" + username + \"! Hope to see you again soon!\");"},{"lineNumber":221,"author":{"gitId":"JayChenYJ"},"content":"        System.out.println(\"----------------------------------------------------------------------------------------\");"},{"lineNumber":222,"author":{"gitId":"JayChenYJ"},"content":"        setEndOfCycle();"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}"},{"lineNumber":225,"author":{"gitId":"JayChenYJ"},"content":""}],"authorContributionMap":{"JayChenYJ":219,"-":6}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":" * Custom exception class for Duke project."},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"public class DukeException extends Exception{"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"    public DukeException(String message) {"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"        super(message);"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":9}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":" * An Event task that inherits Task."},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"public class Event extends Task{"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"    protected String at;"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"    public Event(String description, String at) {"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"        this.at \u003d at;"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"     * A toString uniquely for Event Task"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"     * @return Label for Event - \"E\", the description of the task, followed by the timing."},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":20}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":" * Represent a task added by a user."},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"     * The content of the task."},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"    protected String description;"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"     * A boolean deciding whether a task has been completed."},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"     * Task completion is triggered by the user."},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"    protected boolean isDone;"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"     * Creates a new task with a given input by the user."},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"     * Task is initially not done at creation."},{"lineNumber":19,"author":{"gitId":"JayChenYJ"},"content":"     * @param description The input given by the user."},{"lineNumber":20,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"JayChenYJ"},"content":"    public Task(String description) {"},{"lineNumber":22,"author":{"gitId":"JayChenYJ"},"content":"        this.description \u003d description;"},{"lineNumber":23,"author":{"gitId":"JayChenYJ"},"content":"        this.isDone \u003d false;"},{"lineNumber":24,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":26,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"JayChenYJ"},"content":"     * Get the status icon of the task."},{"lineNumber":28,"author":{"gitId":"JayChenYJ"},"content":"     * @return Return an icon, cross if done, empty space if not done."},{"lineNumber":29,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"JayChenYJ"},"content":"    public String getStatusIcon() {"},{"lineNumber":31,"author":{"gitId":"JayChenYJ"},"content":"        return (isDone ? \"-\" : \" \");"},{"lineNumber":32,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":34,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"JayChenYJ"},"content":"     * Change the status of the the task completion to true when the task has been completed."},{"lineNumber":36,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"JayChenYJ"},"content":"    public void makeDone() {"},{"lineNumber":38,"author":{"gitId":"JayChenYJ"},"content":"        this.isDone \u003d true;"},{"lineNumber":39,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":41,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"JayChenYJ"},"content":"     * A toString to show the task information."},{"lineNumber":43,"author":{"gitId":"JayChenYJ"},"content":"     * @return Show the status of the task, together with its description."},{"lineNumber":44,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"JayChenYJ"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"JayChenYJ"},"content":"    public String toString() {"},{"lineNumber":47,"author":{"gitId":"JayChenYJ"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":48,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":49}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":" * A Todo task that inherits Task."},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":" */"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"public class Todo extends Task{"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":""},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"     * A toString uniquely for Todo Task"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"     * @return Label for Todo - \"T\" and the description of the task."},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"}"}],"authorContributionMap":{"JayChenYJ":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JayChenYJ"},"content":"Gordon"},{"lineNumber":2,"author":{"gitId":"JayChenYJ"},"content":"todo"},{"lineNumber":3,"author":{"gitId":"JayChenYJ"},"content":"todo borrow book"},{"lineNumber":4,"author":{"gitId":"JayChenYJ"},"content":"deadline"},{"lineNumber":5,"author":{"gitId":"JayChenYJ"},"content":"deadline return book"},{"lineNumber":6,"author":{"gitId":"JayChenYJ"},"content":"deadline return book /by Sunday"},{"lineNumber":7,"author":{"gitId":"JayChenYJ"},"content":"event"},{"lineNumber":8,"author":{"gitId":"JayChenYJ"},"content":"event project meeting"},{"lineNumber":9,"author":{"gitId":"JayChenYJ"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":10,"author":{"gitId":"JayChenYJ"},"content":"list"},{"lineNumber":11,"author":{"gitId":"JayChenYJ"},"content":"done 1"},{"lineNumber":12,"author":{"gitId":"JayChenYJ"},"content":"done 3"},{"lineNumber":13,"author":{"gitId":"JayChenYJ"},"content":"list"},{"lineNumber":14,"author":{"gitId":"JayChenYJ"},"content":"delete 3"},{"lineNumber":15,"author":{"gitId":"JayChenYJ"},"content":"delete 3"},{"lineNumber":16,"author":{"gitId":"JayChenYJ"},"content":"list"},{"lineNumber":17,"author":{"gitId":"JayChenYJ"},"content":"blah"},{"lineNumber":18,"author":{"gitId":"JayChenYJ"},"content":"bye"}],"authorContributionMap":{"JayChenYJ":18}}]
