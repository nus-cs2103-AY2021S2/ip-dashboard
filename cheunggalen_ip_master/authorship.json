[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":" * A type of Task."},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":" */"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"public class Deadline extends Task {"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"    public Deadline(String description, String date, String time) {"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"        super(description, date, time, \"[D]\", false);"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":8}},{"path":"src/main/java/DeleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":" * A type of DukeException."},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":" * An exception for bad deletions."},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":" */"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"public class DeleteException extends DukeException {"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"    public DeleteException(String error) {"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"        super(error);"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":9}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"import java.nio.file.Files;"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import java.nio.file.Path;"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import java.nio.file.Paths;"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"/*"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":" * The main class for the Duke app."},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":" */"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"    private Storage storage;"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"    private TaskList tasks;"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"    private Ui ui;"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"    public Duke(String filePath) {"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"        ui \u003d new Ui();"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"    /*"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"     * Run the Duke app."},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"    public void run() {"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"        ui.reply();"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"        Path path \u003d Paths.get(this.storage.getFilePath());"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"        if (Files.exists(path)) {"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"            this.tasks \u003d storage.readFromFile();"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"        } else {"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"            try {"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"                Files.createDirectories(path.getParent());"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"                Files.createFile(path);"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"            } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"                e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"        Parser parser \u003d new Parser(tasks, ui, storage);"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"        while (true) {"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"            String command \u003d sc.nextLine();"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"            parser.insertCommand(command);"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"            parser.process();"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"            if (parser.isFinished()) {"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"                break;"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"        System.exit(0);"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"        new Duke(\"./data/duke.txt\").run();"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":50,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":" * The main exception for Duke."},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":" */"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"public class DukeException extends Exception {"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"    public DukeException(String error) {"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"        super(error);"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":8}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":" * A type of Task."},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":" */"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"public class Event extends Task {"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"    public Event(String description, String date, String time) {"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"        super(description, date, time, \"[E]\", true);"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"    /*"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"     * Convert time from 24h format to 12h format."},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"     * Separate hour and minute by adding a colon."},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"     * Add am or pm depending on time of the day."},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"     * Override Task\u0027s timeFormatter since Event has a start and"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"     * end time while Task only has a start time."},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"    public void formatTime() {"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"        String copy \u003d this.getTime();"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"        String[] sArr \u003d copy.split(\"-\");"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"        String time1 \u003d sArr[0];"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"        String time2 \u003d sArr[1];"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"        char[] cArr \u003d time1.toCharArray();"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"        Integer tensHour \u003d cArr[0] - \u00270\u0027;"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"        Integer onesHour \u003d cArr[1] - \u00270\u0027;"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"        Integer tensMin \u003d cArr[2] - \u00270\u0027;"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"        Integer onesMin \u003d cArr[3] - \u00270\u0027;"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"        String start \u003d \"\";"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"        boolean isAfternoon \u003d false;"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"        if (!tensHour.equals(0)) {"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"            Integer combinedHour \u003d tensHour * 10 + onesHour;"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"            if (combinedHour \u003e\u003d 12) {"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"                isAfternoon \u003d true;"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"                if (combinedHour \u003e\u003d 13) {"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"                    combinedHour -\u003d 12;"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"            start +\u003d combinedHour.toString() + \":\";"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"        } else {"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"            if (onesHour.equals(0)) {"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"                start +\u003d \"12:\";"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"            } else {"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"                start +\u003d onesHour.toString() + \":\";"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"        if (tensMin \u003d\u003d 0) {"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"            start +\u003d \"0\";"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"        } else {"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"            start +\u003d tensMin.toString();"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"        start +\u003d onesMin.toString();"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"        if (isAfternoon) {"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"            start +\u003d \"pm\";"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"        } else {"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"            start +\u003d \"am\";"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"        cArr \u003d time2.toCharArray();"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"        tensHour \u003d cArr[0] - \u00270\u0027;"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"        onesHour \u003d cArr[1] - \u00270\u0027;"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"        tensMin \u003d cArr[2] - \u00270\u0027;"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"        onesMin \u003d cArr[3] - \u00270\u0027;"},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"        String end \u003d \"\";"},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"        isAfternoon \u003d false;"},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":"        if (!tensHour.equals(0)) {"},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"            Integer combinedHour \u003d tensHour * 10 + onesHour;"},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":"            if (combinedHour \u003e\u003d 12) {"},{"lineNumber":66,"author":{"gitId":"cheunggalen"},"content":"                isAfternoon \u003d true;"},{"lineNumber":67,"author":{"gitId":"cheunggalen"},"content":"                if (combinedHour \u003e\u003d 13) {"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"                    combinedHour -\u003d 12;"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"cheunggalen"},"content":"            end +\u003d combinedHour.toString() + \":\";"},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"        } else {"},{"lineNumber":73,"author":{"gitId":"cheunggalen"},"content":"            if (onesHour.equals(0)) {"},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":"                end +\u003d \"12:\";"},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":"            } else {"},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"                end +\u003d onesHour.toString() + \":\";"},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"cheunggalen"},"content":"        if (tensMin \u003d\u003d 0) {"},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":"            end +\u003d \"0\";"},{"lineNumber":81,"author":{"gitId":"cheunggalen"},"content":"        } else {"},{"lineNumber":82,"author":{"gitId":"cheunggalen"},"content":"            end +\u003d tensMin.toString();"},{"lineNumber":83,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"cheunggalen"},"content":"        end +\u003d onesMin.toString();"},{"lineNumber":85,"author":{"gitId":"cheunggalen"},"content":"        if (isAfternoon) {"},{"lineNumber":86,"author":{"gitId":"cheunggalen"},"content":"            end +\u003d \"pm\";"},{"lineNumber":87,"author":{"gitId":"cheunggalen"},"content":"        } else {"},{"lineNumber":88,"author":{"gitId":"cheunggalen"},"content":"            end +\u003d \"am\";"},{"lineNumber":89,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"cheunggalen"},"content":"        String convertedTime \u003d start + \"-\" + end;"},{"lineNumber":91,"author":{"gitId":"cheunggalen"},"content":"        this.setTime(convertedTime);"},{"lineNumber":92,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":93}},{"path":"src/main/java/FindException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":" * A type of DukeException."},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":" * An exception for when the keyword is not found in the task-list."},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":" */"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"public class FindException extends DukeException {"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"    public FindException(String error) {"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"        super(error);"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":9}},{"path":"src/main/java/IncompleteException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":" * A type of DukeException."},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":" * An exception for incomplete commands."},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":" */"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"public class IncompleteException extends DukeException {"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"    public IncompleteException(String error) {"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"        super(error);"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":9}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"/*"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":" * Deal with making sense of users\u0027 commands."},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":" */"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"public class Parser {"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"    private String command;"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"    private TaskList taskList;"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"    private Ui ui;"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"    private Storage storage;"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"    private boolean isFinished;"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"    public Parser(TaskList tasklist, Ui ui, Storage storage) {"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"        this.command \u003d \"\";"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"        this.taskList \u003d tasklist;"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"        this.ui \u003d ui;"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"        this.storage \u003d storage;"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"        this.isFinished \u003d false;"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"    /*"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"     * Add a new command to be dealt with."},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"     * @param command New command."},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"    public void insertCommand(String command) {"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"        this.command \u003d command;"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"    /*"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"     * Check if Parser is done dealing with all commands."},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"     * @return Done status."},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"    public boolean isFinished() {"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"        return this.isFinished;"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"    /*"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"     * Deal with the current command."},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"     * Pick the appropriate response."},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"     * Pass the response to the Ui to handle."},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"     * In the case of a bad command, a relevant exception is thrown."},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"     * The exception is caught and the relevant message is printed."},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"    public void process() {"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"        try {"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"            if (command.equals(\"list\")) {"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"                ui.replace(\"Here are the tasks in your list:\");"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"                for (int i \u003d 0; i \u003c taskList.numOfTasks(); i++) {"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"                    Integer taskNum \u003d i + 1;"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"                    ui.replace(taskNum.toString() + \".\" + taskList.getTask(i).toString());"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"            } else if (command.contains(\"todo\")) {"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"                String[] line \u003d command.split(\" \");"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"                int length \u003d line.length;"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"                if (length \u003d\u003d 1) {"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"                    throw new IncompleteException(\"The description for Todo cannot be empty.\");"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"                ui.replace(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"                String description \u003d \"\";"},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":"                for (int i \u003d 1; i \u003c length; i++) {"},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"                    if (i + 1 \u003d\u003d length) {"},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":"                        description +\u003d line[i];"},{"lineNumber":66,"author":{"gitId":"cheunggalen"},"content":"                    } else {"},{"lineNumber":67,"author":{"gitId":"cheunggalen"},"content":"                        description +\u003d line[i] + \" \";"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"                    }"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"                Todo todo \u003d new Todo(description);"},{"lineNumber":71,"author":{"gitId":"cheunggalen"},"content":"                taskList.addTask(todo);"},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"                ui.replace(todo.toString());"},{"lineNumber":73,"author":{"gitId":"cheunggalen"},"content":"                Integer numOfTasks \u003d taskList.numOfTasks();"},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":"                ui.replace(\"Now you have \" + numOfTasks.toString() + \" tasks in the list.\");"},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":"                storage.writeToFile(taskList);"},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"            } else if (command.contains(\"deadline\")) {"},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":"                String[] line \u003d command.split(\" \");"},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"                int length \u003d line.length;"},{"lineNumber":79,"author":{"gitId":"cheunggalen"},"content":"                if (length \u003d\u003d 1) {"},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":"                    throw new IncompleteException(\"The description for Deadline cannot be empty.\");"},{"lineNumber":81,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":82,"author":{"gitId":"cheunggalen"},"content":"                String description \u003d \"\";"},{"lineNumber":83,"author":{"gitId":"cheunggalen"},"content":"                String date \u003d \"\";"},{"lineNumber":84,"author":{"gitId":"cheunggalen"},"content":"                String time \u003d \"\";"},{"lineNumber":85,"author":{"gitId":"cheunggalen"},"content":"                boolean isDesc \u003d true;"},{"lineNumber":86,"author":{"gitId":"cheunggalen"},"content":"                boolean isDate \u003d true;"},{"lineNumber":87,"author":{"gitId":"cheunggalen"},"content":"                for (int i \u003d 1; i \u003c length; i++) {"},{"lineNumber":88,"author":{"gitId":"cheunggalen"},"content":"                    if (line[i].equals(\"/by\")) {"},{"lineNumber":89,"author":{"gitId":"cheunggalen"},"content":"                        isDesc \u003d false;"},{"lineNumber":90,"author":{"gitId":"cheunggalen"},"content":"                    } else if (isDesc) {"},{"lineNumber":91,"author":{"gitId":"cheunggalen"},"content":"                        if (i + 1 \u003d\u003d length) {"},{"lineNumber":92,"author":{"gitId":"cheunggalen"},"content":"                            description +\u003d line[i];"},{"lineNumber":93,"author":{"gitId":"cheunggalen"},"content":"                        } else {"},{"lineNumber":94,"author":{"gitId":"cheunggalen"},"content":"                            description +\u003d line[i] + \" \";"},{"lineNumber":95,"author":{"gitId":"cheunggalen"},"content":"                        }"},{"lineNumber":96,"author":{"gitId":"cheunggalen"},"content":"                    } else if (isDate) {"},{"lineNumber":97,"author":{"gitId":"cheunggalen"},"content":"                        date +\u003d line[i];"},{"lineNumber":98,"author":{"gitId":"cheunggalen"},"content":"                        isDate \u003d false;"},{"lineNumber":99,"author":{"gitId":"cheunggalen"},"content":"                    } else {"},{"lineNumber":100,"author":{"gitId":"cheunggalen"},"content":"                        time +\u003d line[i];"},{"lineNumber":101,"author":{"gitId":"cheunggalen"},"content":"                    }"},{"lineNumber":102,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":103,"author":{"gitId":"cheunggalen"},"content":"                if (date.equals(\"\")) {"},{"lineNumber":104,"author":{"gitId":"cheunggalen"},"content":"                    throw new IncompleteException(\"The date for Deadline cannot be empty.\");"},{"lineNumber":105,"author":{"gitId":"cheunggalen"},"content":"                } else if (time.equals(\"\")) {"},{"lineNumber":106,"author":{"gitId":"cheunggalen"},"content":"                    throw new IncompleteException(\"The time for Deadline cannot be empty.\");"},{"lineNumber":107,"author":{"gitId":"cheunggalen"},"content":"                } else {"},{"lineNumber":108,"author":{"gitId":"cheunggalen"},"content":"                    ui.replace(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":109,"author":{"gitId":"cheunggalen"},"content":"                    Deadline deadline \u003d new Deadline(description, date, time);"},{"lineNumber":110,"author":{"gitId":"cheunggalen"},"content":"                    deadline.formatDate();"},{"lineNumber":111,"author":{"gitId":"cheunggalen"},"content":"                    deadline.formatTime();"},{"lineNumber":112,"author":{"gitId":"cheunggalen"},"content":"                    taskList.addTask(deadline);"},{"lineNumber":113,"author":{"gitId":"cheunggalen"},"content":"                    ui.replace(deadline.toString());"},{"lineNumber":114,"author":{"gitId":"cheunggalen"},"content":"                    Integer numOfTasks \u003d taskList.numOfTasks();"},{"lineNumber":115,"author":{"gitId":"cheunggalen"},"content":"                    ui.replace(\"Now you have \" + numOfTasks.toString() + \" tasks in the list.\");"},{"lineNumber":116,"author":{"gitId":"cheunggalen"},"content":"                    storage.writeToFile(taskList);"},{"lineNumber":117,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":118,"author":{"gitId":"cheunggalen"},"content":"            } else if (command.contains(\"event\")) {"},{"lineNumber":119,"author":{"gitId":"cheunggalen"},"content":"                String[] line \u003d command.split(\" \");"},{"lineNumber":120,"author":{"gitId":"cheunggalen"},"content":"                int length \u003d line.length;"},{"lineNumber":121,"author":{"gitId":"cheunggalen"},"content":"                if (length \u003d\u003d 1) {"},{"lineNumber":122,"author":{"gitId":"cheunggalen"},"content":"                    throw new IncompleteException(\"The description for Event cannot be empty.\");"},{"lineNumber":123,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":124,"author":{"gitId":"cheunggalen"},"content":"                String description \u003d \"\";"},{"lineNumber":125,"author":{"gitId":"cheunggalen"},"content":"                String date \u003d \"\";"},{"lineNumber":126,"author":{"gitId":"cheunggalen"},"content":"                String time \u003d \"\";"},{"lineNumber":127,"author":{"gitId":"cheunggalen"},"content":"                boolean isDesc \u003d true;"},{"lineNumber":128,"author":{"gitId":"cheunggalen"},"content":"                boolean isDate \u003d true;"},{"lineNumber":129,"author":{"gitId":"cheunggalen"},"content":"                for (int i \u003d 1; i \u003c length; i++) {"},{"lineNumber":130,"author":{"gitId":"cheunggalen"},"content":"                    if (line[i].equals(\"/at\")) {"},{"lineNumber":131,"author":{"gitId":"cheunggalen"},"content":"                        isDesc \u003d false;"},{"lineNumber":132,"author":{"gitId":"cheunggalen"},"content":"                    } else if (isDesc) {"},{"lineNumber":133,"author":{"gitId":"cheunggalen"},"content":"                        if (i + 1 \u003d\u003d length) {"},{"lineNumber":134,"author":{"gitId":"cheunggalen"},"content":"                            description +\u003d line[i];"},{"lineNumber":135,"author":{"gitId":"cheunggalen"},"content":"                        } else {"},{"lineNumber":136,"author":{"gitId":"cheunggalen"},"content":"                            description +\u003d line[i] + \" \";"},{"lineNumber":137,"author":{"gitId":"cheunggalen"},"content":"                        }"},{"lineNumber":138,"author":{"gitId":"cheunggalen"},"content":"                    } else if (isDate) {"},{"lineNumber":139,"author":{"gitId":"cheunggalen"},"content":"                        date +\u003d line[i];"},{"lineNumber":140,"author":{"gitId":"cheunggalen"},"content":"                        isDate \u003d false;"},{"lineNumber":141,"author":{"gitId":"cheunggalen"},"content":"                    } else {"},{"lineNumber":142,"author":{"gitId":"cheunggalen"},"content":"                        time +\u003d line[i];"},{"lineNumber":143,"author":{"gitId":"cheunggalen"},"content":"                    }"},{"lineNumber":144,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":145,"author":{"gitId":"cheunggalen"},"content":"                if (date.equals(\"\")) {"},{"lineNumber":146,"author":{"gitId":"cheunggalen"},"content":"                    throw new IncompleteException(\"The date for Event cannot be empty.\");"},{"lineNumber":147,"author":{"gitId":"cheunggalen"},"content":"                } else if (time.equals(\"\")) {"},{"lineNumber":148,"author":{"gitId":"cheunggalen"},"content":"                    throw new IncompleteException(\"The time for Event cannot be empty.\");"},{"lineNumber":149,"author":{"gitId":"cheunggalen"},"content":"                } else {"},{"lineNumber":150,"author":{"gitId":"cheunggalen"},"content":"                    ui.replace(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":151,"author":{"gitId":"cheunggalen"},"content":"                    Event event \u003d new Event(description, date, time);"},{"lineNumber":152,"author":{"gitId":"cheunggalen"},"content":"                    event.formatDate();"},{"lineNumber":153,"author":{"gitId":"cheunggalen"},"content":"                    event.formatTime();"},{"lineNumber":154,"author":{"gitId":"cheunggalen"},"content":"                    taskList.addTask(event);"},{"lineNumber":155,"author":{"gitId":"cheunggalen"},"content":"                    ui.replace(event.toString());"},{"lineNumber":156,"author":{"gitId":"cheunggalen"},"content":"                    Integer numOfTasks \u003d taskList.numOfTasks();"},{"lineNumber":157,"author":{"gitId":"cheunggalen"},"content":"                    ui.replace(\"Now you have \" + numOfTasks.toString() + \" tasks in the list.\");"},{"lineNumber":158,"author":{"gitId":"cheunggalen"},"content":"                    storage.writeToFile(taskList);"},{"lineNumber":159,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":160,"author":{"gitId":"cheunggalen"},"content":"            } else if (command.contains(\"done\")) {"},{"lineNumber":161,"author":{"gitId":"cheunggalen"},"content":"                String[] line \u003d command.split(\" \");"},{"lineNumber":162,"author":{"gitId":"cheunggalen"},"content":"                int length \u003d line.length;"},{"lineNumber":163,"author":{"gitId":"cheunggalen"},"content":"                if (length \u003d\u003d 1) {"},{"lineNumber":164,"author":{"gitId":"cheunggalen"},"content":"                    throw new IncompleteException(\"The line number for Done cannot be empty.\");"},{"lineNumber":165,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":166,"author":{"gitId":"cheunggalen"},"content":"                int number \u003d Integer.parseInt(line[1]);"},{"lineNumber":167,"author":{"gitId":"cheunggalen"},"content":"                if (number \u003e taskList.numOfTasks()) {"},{"lineNumber":168,"author":{"gitId":"cheunggalen"},"content":"                    throw new DeleteException(\"Invalid line number.\");"},{"lineNumber":169,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":170,"author":{"gitId":"cheunggalen"},"content":"                int index \u003d number - 1;"},{"lineNumber":171,"author":{"gitId":"cheunggalen"},"content":"                Task task \u003d taskList.getTask(index);"},{"lineNumber":172,"author":{"gitId":"cheunggalen"},"content":"                task.markAsDone();"},{"lineNumber":173,"author":{"gitId":"cheunggalen"},"content":"                taskList.replaceTask(index, task);"},{"lineNumber":174,"author":{"gitId":"cheunggalen"},"content":"                ui.replace(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":175,"author":{"gitId":"cheunggalen"},"content":"                ui.replace(task.toString());"},{"lineNumber":176,"author":{"gitId":"cheunggalen"},"content":"                storage.writeToFile(taskList);"},{"lineNumber":177,"author":{"gitId":"cheunggalen"},"content":"            } else if (command.contains(\"delete\")) {"},{"lineNumber":178,"author":{"gitId":"cheunggalen"},"content":"                String[] line \u003d command.split(\" \");"},{"lineNumber":179,"author":{"gitId":"cheunggalen"},"content":"                int length \u003d line.length;"},{"lineNumber":180,"author":{"gitId":"cheunggalen"},"content":"                if (length \u003d\u003d 1) {"},{"lineNumber":181,"author":{"gitId":"cheunggalen"},"content":"                    throw new IncompleteException(\"The line number for Delete cannot be empty.\");"},{"lineNumber":182,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":183,"author":{"gitId":"cheunggalen"},"content":"                int number \u003d Integer.parseInt(line[1]);"},{"lineNumber":184,"author":{"gitId":"cheunggalen"},"content":"                if (number \u003e taskList.numOfTasks()) {"},{"lineNumber":185,"author":{"gitId":"cheunggalen"},"content":"                    throw new DeleteException(\"Invalid line number.\");"},{"lineNumber":186,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":187,"author":{"gitId":"cheunggalen"},"content":"                ui.replace(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":188,"author":{"gitId":"cheunggalen"},"content":"                int index \u003d  number - 1;"},{"lineNumber":189,"author":{"gitId":"cheunggalen"},"content":"                Task deletedTask \u003d taskList.deleteTask(index);"},{"lineNumber":190,"author":{"gitId":"cheunggalen"},"content":"                ui.replace(deletedTask.toString());"},{"lineNumber":191,"author":{"gitId":"cheunggalen"},"content":"                Integer numOfTasks \u003d taskList.numOfTasks();"},{"lineNumber":192,"author":{"gitId":"cheunggalen"},"content":"                ui.replace(\"Now you have \" + numOfTasks.toString() + \" tasks in the list.\");"},{"lineNumber":193,"author":{"gitId":"cheunggalen"},"content":"                storage.writeToFile(taskList);"},{"lineNumber":194,"author":{"gitId":"cheunggalen"},"content":"            } else if (command.contains(\"find\")) {"},{"lineNumber":195,"author":{"gitId":"cheunggalen"},"content":"                String[] line \u003d command.split(\" \");"},{"lineNumber":196,"author":{"gitId":"cheunggalen"},"content":"                int length \u003d line.length;"},{"lineNumber":197,"author":{"gitId":"cheunggalen"},"content":"                if (length \u003d\u003d 1) {"},{"lineNumber":198,"author":{"gitId":"cheunggalen"},"content":"                    throw new IncompleteException(\"The description for Find cannot be empty.\");"},{"lineNumber":199,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":200,"author":{"gitId":"cheunggalen"},"content":"                String word \u003d line[1];"},{"lineNumber":201,"author":{"gitId":"cheunggalen"},"content":"                List\u003cString\u003e matches \u003d new ArrayList\u003c\u003e();"},{"lineNumber":202,"author":{"gitId":"cheunggalen"},"content":"                Integer num \u003d 1;"},{"lineNumber":203,"author":{"gitId":"cheunggalen"},"content":"                boolean isFound \u003d false;"},{"lineNumber":204,"author":{"gitId":"cheunggalen"},"content":"                for (int i \u003d 0; i \u003c taskList.numOfTasks(); i++) {"},{"lineNumber":205,"author":{"gitId":"cheunggalen"},"content":"                    Task task \u003d taskList.getTask(i);"},{"lineNumber":206,"author":{"gitId":"cheunggalen"},"content":"                    String description \u003d task.toString();"},{"lineNumber":207,"author":{"gitId":"cheunggalen"},"content":"                    if (description.contains(word)) {"},{"lineNumber":208,"author":{"gitId":"cheunggalen"},"content":"                        matches.add(num.toString() + \". \" + description);"},{"lineNumber":209,"author":{"gitId":"cheunggalen"},"content":"                        num++;"},{"lineNumber":210,"author":{"gitId":"cheunggalen"},"content":"                        isFound \u003d true;"},{"lineNumber":211,"author":{"gitId":"cheunggalen"},"content":"                    }"},{"lineNumber":212,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":213,"author":{"gitId":"cheunggalen"},"content":"                if (isFound) {"},{"lineNumber":214,"author":{"gitId":"cheunggalen"},"content":"                    ui.replace(\"Here are the matching tasks in your list:\");"},{"lineNumber":215,"author":{"gitId":"cheunggalen"},"content":"                    for (int i \u003d 0; i \u003c matches.size(); i++) {"},{"lineNumber":216,"author":{"gitId":"cheunggalen"},"content":"                        ui.replace(matches.get(i));"},{"lineNumber":217,"author":{"gitId":"cheunggalen"},"content":"                    }"},{"lineNumber":218,"author":{"gitId":"cheunggalen"},"content":"                } else {"},{"lineNumber":219,"author":{"gitId":"cheunggalen"},"content":"                    throw new FindException(\"Your list does not contain this word.\");"},{"lineNumber":220,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":221,"author":{"gitId":"cheunggalen"},"content":"            } else if (command.equals(\"bye\")) {"},{"lineNumber":222,"author":{"gitId":"cheunggalen"},"content":"                ui.replace(\"Goodbye! Hope to see you again soon!\");"},{"lineNumber":223,"author":{"gitId":"cheunggalen"},"content":"                this.isFinished \u003d true;"},{"lineNumber":224,"author":{"gitId":"cheunggalen"},"content":"            } else {"},{"lineNumber":225,"author":{"gitId":"cheunggalen"},"content":"                throw new UnknownException(\"I\u0027m sorry, but I don\u0027t know what that means.\");"},{"lineNumber":226,"author":{"gitId":"cheunggalen"},"content":"            }"},{"lineNumber":227,"author":{"gitId":"cheunggalen"},"content":"        } catch (DukeException e) {"},{"lineNumber":228,"author":{"gitId":"cheunggalen"},"content":"            System.out.println(e);"},{"lineNumber":229,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":230,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":231,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":231}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"import java.io.BufferedReader;"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"import java.io.BufferedWriter;"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import java.io.FileReader;"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"public class Storage {"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"    private final String filePath;"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"    public Storage(String filePath) {"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"    public String getFilePath() {"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"        return this.filePath;"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"    public void writeToFile(TaskList taskList) {"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"        String output \u003d \"\";"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"        for (int i \u003d 0; i \u003c taskList.numOfTasks(); i++) {"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"            output +\u003d taskList.getTask(i).toString() + \"\\n\";"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(this.filePath));"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"            bw.write(output);"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"            bw.close();"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"        } catch (IOException e) {"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"            e.printStackTrace();"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"    public TaskList readFromFile() {"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(this.filePath));"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"            String input \u003d br.readLine();"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"            String type \u003d \"\";"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"            int length \u003d 0;"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"            int lastIndex \u003d 0;"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"            String timeWithBracket \u003d \"\";"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"            int twbLength \u003d 0;"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"            int twbLastIndex \u003d 0;"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"            String year \u003d \"\";"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"            String yearLine \u003d \"\";"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"            int descLastIndex \u003d 0;"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"            Task task \u003d null;"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"            String description \u003d \"\";"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"            String date \u003d \"\";"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"            String time \u003d \"\";"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"            while (input !\u003d null) {"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"                String[] inputArr \u003d input.split(\" \");"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"                type \u003d inputArr[0];"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"                length \u003d inputArr.length;"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"                lastIndex \u003d length - 1;"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"                if (type.equals(\"[T]\")) {"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"                    for (int i \u003d 2; i \u003c length; i++) {"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"                        description +\u003d inputArr[i] + \" \";"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"                    }"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"                    task \u003d new Todo(description);"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"                } else {"},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"                    timeWithBracket \u003d inputArr[lastIndex];"},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"                    String[] twb \u003d timeWithBracket.split(\"\");"},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":"                    twbLength \u003d twb.length;"},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"                    twbLastIndex \u003d twbLength - 2;"},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":"                    for (int i \u003d 0; i \u003c\u003d twbLastIndex; i++) {"},{"lineNumber":66,"author":{"gitId":"cheunggalen"},"content":"                        time +\u003d twb[i];"},{"lineNumber":67,"author":{"gitId":"cheunggalen"},"content":"                    }"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"                    yearLine \u003d inputArr[lastIndex - 1];"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"                    String[] yearArr \u003d yearLine.split(\"\");"},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"                    for (int i \u003d 0; i \u003c 4; i++) {"},{"lineNumber":71,"author":{"gitId":"cheunggalen"},"content":"                        year +\u003d yearArr[i];"},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"                    }"},{"lineNumber":73,"author":{"gitId":"cheunggalen"},"content":"                    date \u003d inputArr[lastIndex - 3] +"},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":"                            \" \" + inputArr[lastIndex - 2] + \" \" + year;"},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":"                    descLastIndex \u003d lastIndex - 5;"},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"                    for (int i \u003d 2; i \u003c\u003d descLastIndex; i++) {"},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":"                        description +\u003d inputArr[i] + \" \";"},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"                    }"},{"lineNumber":79,"author":{"gitId":"cheunggalen"},"content":"                    if (type.equals(\"[D]\")) {"},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":"                        task \u003d new Deadline(description, date, time);"},{"lineNumber":81,"author":{"gitId":"cheunggalen"},"content":"                    } else {"},{"lineNumber":82,"author":{"gitId":"cheunggalen"},"content":"                        task \u003d new Event(description, date, time);"},{"lineNumber":83,"author":{"gitId":"cheunggalen"},"content":"                    }"},{"lineNumber":84,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":85,"author":{"gitId":"cheunggalen"},"content":"                if (inputArr[1].equals(\"[/]\")) {"},{"lineNumber":86,"author":{"gitId":"cheunggalen"},"content":"                    task.markAsDone();"},{"lineNumber":87,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":88,"author":{"gitId":"cheunggalen"},"content":"                taskList.addTask(task);"},{"lineNumber":89,"author":{"gitId":"cheunggalen"},"content":"                description \u003d \"\";"},{"lineNumber":90,"author":{"gitId":"cheunggalen"},"content":"                date \u003d \"\";"},{"lineNumber":91,"author":{"gitId":"cheunggalen"},"content":"                time \u003d \"\";"},{"lineNumber":92,"author":{"gitId":"cheunggalen"},"content":"                year \u003d \"\";"},{"lineNumber":93,"author":{"gitId":"cheunggalen"},"content":"                input \u003d br.readLine();"},{"lineNumber":94,"author":{"gitId":"cheunggalen"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"cheunggalen"},"content":"            br.close();"},{"lineNumber":96,"author":{"gitId":"cheunggalen"},"content":"        } catch (IOException e) {"},{"lineNumber":97,"author":{"gitId":"cheunggalen"},"content":"            e.printStackTrace();"},{"lineNumber":98,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"cheunggalen"},"content":"        return taskList;"},{"lineNumber":100,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":101}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"    private String description;"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"    private String date;"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"    private String time;"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"    private final String symbol;"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"    private boolean isAt;"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"    private boolean isDone;"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"    public Task(String description, String date, String time, String symbol, boolean flag) {"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"        this.description \u003d description;"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"        this.date \u003d date;"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"        this.time \u003d time;"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"        this.symbol \u003d symbol;"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"        this.isAt \u003d flag;"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"        this.isDone \u003d false;"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"    public String getDate() {"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"        return this.date;"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"    public String getTime() {"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"        return this.time;"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"    public void setTime(String time) {"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"        this.time \u003d time;"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"    /*"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"     * Change the done status of a task."},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"     * @return The same task with a changed done status."},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"    public void markAsDone() {"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"        this.isDone \u003d true;"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"    /*"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"     * Convert the date from \"DD/MM/YYYY\" format to \"D MMM YYYY\" format."},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"    public void formatDate() {"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"        String copy \u003d this.date;"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"        String year \u003d \"\";"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"        String month \u003d \"\";"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"        String day \u003d \"\";"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"        String[] sArr \u003d copy.split(\"\");"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"        int slashCounter \u003d 0;"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"        for (int i \u003d 0; i \u003c sArr.length; i++) {"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"            if (sArr[i].equals(\"/\")) {"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"                slashCounter++;"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"            } else if (slashCounter \u003d\u003d 2) {"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"                year +\u003d sArr[i];"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"            } else if (slashCounter \u003d\u003d 1) {"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"                month +\u003d sArr[i];"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"            } else {"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"                day +\u003d sArr[i];"},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":"        if (month.length() \u003d\u003d 1) {"},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"            month \u003d \"0\" + month;"},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"cheunggalen"},"content":"        if (day.length() \u003d\u003d 1) {"},{"lineNumber":67,"author":{"gitId":"cheunggalen"},"content":"            day \u003d \"0\" + day;"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"        String formattedDate \u003d year + \"-\" + month + \"-\" + day;"},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"        LocalDate ld \u003d LocalDate.parse(formattedDate);"},{"lineNumber":71,"author":{"gitId":"cheunggalen"},"content":"        formattedDate \u003d ld.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));"},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"        this.date \u003d formattedDate;"},{"lineNumber":73,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":"    /*"},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"     * Convert time from 24h format to 12h format."},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":"     * Separate hour and minute by adding a colon."},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"     * Add am or pm depending on time of the day."},{"lineNumber":79,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":"    public void formatTime() {"},{"lineNumber":81,"author":{"gitId":"cheunggalen"},"content":"        String copy \u003d this.time;"},{"lineNumber":82,"author":{"gitId":"cheunggalen"},"content":"        char[] cArr \u003d copy.toCharArray();"},{"lineNumber":83,"author":{"gitId":"cheunggalen"},"content":"        Integer tensHour \u003d cArr[0] - \u00270\u0027;"},{"lineNumber":84,"author":{"gitId":"cheunggalen"},"content":"        Integer onesHour \u003d cArr[1] - \u00270\u0027;"},{"lineNumber":85,"author":{"gitId":"cheunggalen"},"content":"        Integer tensMin \u003d cArr[2] - \u00270\u0027;"},{"lineNumber":86,"author":{"gitId":"cheunggalen"},"content":"        Integer onesMin \u003d cArr[3] - \u00270\u0027;"},{"lineNumber":87,"author":{"gitId":"cheunggalen"},"content":"        String formattedTime \u003d \"\";"},{"lineNumber":88,"author":{"gitId":"cheunggalen"},"content":"        boolean isAfternoon \u003d false;"},{"lineNumber":89,"author":{"gitId":"cheunggalen"},"content":"        if (!tensHour.equals(0)) {"},{"lineNumber":90,"author":{"gitId":"cheunggalen"},"content":"            Integer combinedHour \u003d tensHour * 10 + onesHour;"},{"lineNumber":91,"author":{"gitId":"cheunggalen"},"content":"            if (combinedHour \u003e\u003d 12) {"},{"lineNumber":92,"author":{"gitId":"cheunggalen"},"content":"                isAfternoon \u003d true;"},{"lineNumber":93,"author":{"gitId":"cheunggalen"},"content":"                if (combinedHour \u003e\u003d 13) {"},{"lineNumber":94,"author":{"gitId":"cheunggalen"},"content":"                    combinedHour -\u003d 12;"},{"lineNumber":95,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":96,"author":{"gitId":"cheunggalen"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"cheunggalen"},"content":"            formattedTime +\u003d combinedHour.toString() + \":\";"},{"lineNumber":98,"author":{"gitId":"cheunggalen"},"content":"        } else {"},{"lineNumber":99,"author":{"gitId":"cheunggalen"},"content":"            if (onesHour.equals(0)) {"},{"lineNumber":100,"author":{"gitId":"cheunggalen"},"content":"                formattedTime +\u003d \"12:\";"},{"lineNumber":101,"author":{"gitId":"cheunggalen"},"content":"            } else {"},{"lineNumber":102,"author":{"gitId":"cheunggalen"},"content":"                formattedTime +\u003d onesHour.toString() + \":\";"},{"lineNumber":103,"author":{"gitId":"cheunggalen"},"content":"            }"},{"lineNumber":104,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"cheunggalen"},"content":"        if (tensMin \u003d\u003d 0) {"},{"lineNumber":106,"author":{"gitId":"cheunggalen"},"content":"            formattedTime +\u003d \"0\";"},{"lineNumber":107,"author":{"gitId":"cheunggalen"},"content":"        } else {"},{"lineNumber":108,"author":{"gitId":"cheunggalen"},"content":"            formattedTime +\u003d tensMin.toString();"},{"lineNumber":109,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"cheunggalen"},"content":"        formattedTime +\u003d onesMin.toString();"},{"lineNumber":111,"author":{"gitId":"cheunggalen"},"content":"        if (isAfternoon) {"},{"lineNumber":112,"author":{"gitId":"cheunggalen"},"content":"            formattedTime +\u003d \"pm\";"},{"lineNumber":113,"author":{"gitId":"cheunggalen"},"content":"        } else {"},{"lineNumber":114,"author":{"gitId":"cheunggalen"},"content":"            formattedTime +\u003d \"am\";"},{"lineNumber":115,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"cheunggalen"},"content":"        this.time \u003d formattedTime;"},{"lineNumber":117,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":119,"author":{"gitId":"cheunggalen"},"content":"    @Override"},{"lineNumber":120,"author":{"gitId":"cheunggalen"},"content":"    public String toString() {"},{"lineNumber":121,"author":{"gitId":"cheunggalen"},"content":"        String copy \u003d \"\";"},{"lineNumber":122,"author":{"gitId":"cheunggalen"},"content":"        if (this.date.length() \u003e 0) {"},{"lineNumber":123,"author":{"gitId":"cheunggalen"},"content":"            if (this.isAt) {"},{"lineNumber":124,"author":{"gitId":"cheunggalen"},"content":"                copy +\u003d \"(at: \";"},{"lineNumber":125,"author":{"gitId":"cheunggalen"},"content":"            } else {"},{"lineNumber":126,"author":{"gitId":"cheunggalen"},"content":"                copy +\u003d \"(by: \";"},{"lineNumber":127,"author":{"gitId":"cheunggalen"},"content":"            }"},{"lineNumber":128,"author":{"gitId":"cheunggalen"},"content":"            copy +\u003d this.date;"},{"lineNumber":129,"author":{"gitId":"cheunggalen"},"content":"            if (this.time.length() \u003e 0) {"},{"lineNumber":130,"author":{"gitId":"cheunggalen"},"content":"                copy +\u003d \", \" + this.time;"},{"lineNumber":131,"author":{"gitId":"cheunggalen"},"content":"            }"},{"lineNumber":132,"author":{"gitId":"cheunggalen"},"content":"            copy +\u003d \")\";"},{"lineNumber":133,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"cheunggalen"},"content":"        copy \u003d this.description + copy;"},{"lineNumber":135,"author":{"gitId":"cheunggalen"},"content":"        if (this.isDone) {"},{"lineNumber":136,"author":{"gitId":"cheunggalen"},"content":"            return symbol + \" \" + \"[/] \" + copy;"},{"lineNumber":137,"author":{"gitId":"cheunggalen"},"content":"        } else {"},{"lineNumber":138,"author":{"gitId":"cheunggalen"},"content":"            return symbol + \" \" + \"[] \" + copy;"},{"lineNumber":139,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":141}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"/*"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":" * Keeps track of all Tasks in a list."},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":" */"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"public class TaskList {"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"    private final List\u003cTask\u003e tasks;"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"    public TaskList() {"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"    /*"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"     * Get a specific task from the list."},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"     * @param index Position of the task in the list."},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"     * @return The chosen task."},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"    public Task getTask(int index) {"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"        return tasks.get(index);"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"    /*"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"     * Add a task to the list."},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"     * @param task A task."},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"    public void addTask(Task task) {"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"        tasks.add(task);"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"    /*"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"     * Delete a specific task from the list."},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"     * @param index Position of the task in the list."},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"     * @return The removed task."},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"    public Task deleteTask(int index) {"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"        Task deletedTask \u003d getTask(index);"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"        tasks.remove(index);"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"        return deletedTask;"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"    /*"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"     * Replace a specific task with another in the list."},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"     * @param index Position of the to-be-replaced task in the list."},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"     * @oaram task The new task that will replace the current one."},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"    public void replaceTask(int index, Task task) {"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"        tasks.set(index, task);"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"    /*"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"     * Get the number of tasks in the list."},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"     * @return The number of tasks in the list."},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"    public int numOfTasks() {"},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"        return tasks.size();"},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":63}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":" * A type of Task."},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":" */"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"public class Todo extends Task {"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"        super(description, \"\", \"\", \"[T]\", true);"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":8}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":" * Deal with interactions with the users."},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":" */"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"public class Ui {"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"    private String response;"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"    public Ui() {"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"        response \u003d \"Hello from\\n\" + logo + \"\\n\" + \"What can I do for you?\";"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"    public Ui(String statement) {"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"        response \u003d statement;"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"    /*"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"     * Respond with the current response."},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"    public void reply() {"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"        System.out.println(response);"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"    /*"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"     * Replace the current response with a new one."},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"     * Respond with the new response."},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"     * @param statement The new response that will replace the current one."},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"    public void replace(String statement) {"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"        response \u003d statement;"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"        System.out.println(response);"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":37}},{"path":"src/main/java/UnknownException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":" * A type of DukeException."},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":" * An exception for the rest of the cases."},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":" */"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"public class UnknownException extends DukeException {"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"    public UnknownException(String error) {"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"        super(error);"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":9}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"public class TaskListTest {"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"    TaskList taskList \u003d new TaskList();"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"    Todo todo \u003d new Todo(\"read book\");"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"    Deadline deadline \u003d new Deadline(\"deadline return book\", \"7/2/2021\", \"1700\");"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"    Event event \u003d new Event(\"event team meeting\", \"8/2/2021\", \"1400-1600\");"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"    public void numOfTask() {"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"        taskList.addTask(todo);"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"        taskList.addTask(deadline);"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"        taskList.addTask(event);"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(3, taskList.numOfTasks());"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":17}},{"path":"src/test/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"public class TaskTest {"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"    Task task \u003d new Task(\"todo read book\", \"1/2/2021\", \"1400\", \"[T]\", true);"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"    public void testFormatDate() {"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"        task.formatDate();"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(\"1 Feb 2021\", task.getDate());"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"    public void testFormatTime() {"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"        task.formatTime();"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(\"2:00pm\", task.getTime());"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"event project meeting /at: Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"todo borrow book"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"done 4"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"list"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"delete 3"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"blah"}],"authorContributionMap":{"cheunggalen":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"javac  -cp \\Users\\galen\\cs2103t\\ip\\src\\main\\java -Xlint:none -d ..\\bin \\Users\\galen\\cs2103t\\ip\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"cheunggalen":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"if ! javac -cp /Users/galen/cs2103t/ip/src/main/java -Xlint:none -d ../bin /Users/galen/cs2103t/ip/src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"cheunggalen":1,"-":37}}]
