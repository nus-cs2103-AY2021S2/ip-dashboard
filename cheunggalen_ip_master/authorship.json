[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00276.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"}"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"    jcenter()"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"    google()"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"    maven {"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"        url \"https://maven.springframework.org/release\""},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"    maven {"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"        url \"https://maven.restlet.com\""},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"}"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"dependencies {"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.6.0\u0027"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine\u0027"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"}"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"application {"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"}"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"test {"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"    useJUnitPlatform()"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"}"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"checkstyle {"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"}"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"run {"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"    enableAssertions \u003d true"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"}"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":""}],"authorContributionMap":{"cheunggalen":53}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"# Duke User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"\u003cbr\u003e"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"- `List` down all the tasks from the list."},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"- Add `todo`, `deadline` and `event` tasks to the list."},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"   "},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"- Mark any task in the list as `done`."},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"- `Find` all tasks in the list whose description contains the keyword."},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"- `Delete` any task in the list."},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"- `Delete all` tasks in the list."},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"\u003cbr\u003e"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"## A Screenshot of Duke in Action!"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"![image](Ui.png)"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"\u003cbr\u003e"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"### `List`"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"#### What it does:"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"List down all the tasks from the list."},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"#### Usage example: "},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"`list`"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"#### Expected outcome:"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"```"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"Here are the tasks in your list:"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"1. [T] [] read book"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"2. [D] [] return book (by: 28 Feb 2021, 5:00pm)"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"3. [E] [] formal dinner (at: 2 Apr 2021, 6:00pm-9:00pm)"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"```"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"\u003cbr\u003e"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"### `Todo`"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"#### What it does:"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"Add a todo task to the list."},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"#### Usage format:"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"todo *discription of task*"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"#### Usage example:"},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"`todo do homework`"},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"#### Expected outcome:"},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":66,"author":{"gitId":"cheunggalen"},"content":"```"},{"lineNumber":67,"author":{"gitId":"cheunggalen"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"[T] [] do homework"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"Now you have 4 tasks in the list."},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"```"},{"lineNumber":71,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"\u003cbr\u003e"},{"lineNumber":73,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":"### `Deadline`"},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"#### What it does:"},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"Add a deadline task to the list."},{"lineNumber":79,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":"#### Usage format:"},{"lineNumber":81,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":82,"author":{"gitId":"cheunggalen"},"content":"deadline *discription of task* /by *DD/MM/YYYY HHMM*"},{"lineNumber":83,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":84,"author":{"gitId":"cheunggalen"},"content":"#### Usage example:"},{"lineNumber":85,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":86,"author":{"gitId":"cheunggalen"},"content":"`deadline submit homework /by 05/04/2021 1800`"},{"lineNumber":87,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":88,"author":{"gitId":"cheunggalen"},"content":"#### Expected outcome:"},{"lineNumber":89,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":90,"author":{"gitId":"cheunggalen"},"content":"```"},{"lineNumber":91,"author":{"gitId":"cheunggalen"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":92,"author":{"gitId":"cheunggalen"},"content":"[D] [] submit homework (by: 5 Apr 2021, 6:00pm)"},{"lineNumber":93,"author":{"gitId":"cheunggalen"},"content":"Now you have 5 tasks in the list."},{"lineNumber":94,"author":{"gitId":"cheunggalen"},"content":"```"},{"lineNumber":95,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":96,"author":{"gitId":"cheunggalen"},"content":"\u003cbr\u003e"},{"lineNumber":97,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":98,"author":{"gitId":"cheunggalen"},"content":"### `Event`"},{"lineNumber":99,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":100,"author":{"gitId":"cheunggalen"},"content":"#### What it does:"},{"lineNumber":101,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":102,"author":{"gitId":"cheunggalen"},"content":"Add an event task to the list."},{"lineNumber":103,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":104,"author":{"gitId":"cheunggalen"},"content":"#### Usage format:"},{"lineNumber":105,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":106,"author":{"gitId":"cheunggalen"},"content":"event *discription of task* /at *DD/MM/YYYY HHMM-HHMM*"},{"lineNumber":107,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":108,"author":{"gitId":"cheunggalen"},"content":"#### Usage example:"},{"lineNumber":109,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":110,"author":{"gitId":"cheunggalen"},"content":"`event team meeting /at 06/04/2021 2000-2200`"},{"lineNumber":111,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":112,"author":{"gitId":"cheunggalen"},"content":"#### Expected outcome:"},{"lineNumber":113,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":114,"author":{"gitId":"cheunggalen"},"content":"```"},{"lineNumber":115,"author":{"gitId":"cheunggalen"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":116,"author":{"gitId":"cheunggalen"},"content":"[E] [] team meeting (by: 6 Apr 2021, 8:00pm-10:00pm)"},{"lineNumber":117,"author":{"gitId":"cheunggalen"},"content":"Now you have 6 tasks in the list."},{"lineNumber":118,"author":{"gitId":"cheunggalen"},"content":"```"},{"lineNumber":119,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":120,"author":{"gitId":"cheunggalen"},"content":"\u003cbr\u003e"},{"lineNumber":121,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":122,"author":{"gitId":"cheunggalen"},"content":"### `Done`"},{"lineNumber":123,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":124,"author":{"gitId":"cheunggalen"},"content":"#### What it does:"},{"lineNumber":125,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":126,"author":{"gitId":"cheunggalen"},"content":"Mark a task as done."},{"lineNumber":127,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":128,"author":{"gitId":"cheunggalen"},"content":"#### Usage format:"},{"lineNumber":129,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":130,"author":{"gitId":"cheunggalen"},"content":"done *line number*"},{"lineNumber":131,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":132,"author":{"gitId":"cheunggalen"},"content":"#### Usage example:"},{"lineNumber":133,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":134,"author":{"gitId":"cheunggalen"},"content":"`done 1`"},{"lineNumber":135,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":136,"author":{"gitId":"cheunggalen"},"content":"#### Expected outcome:"},{"lineNumber":137,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":138,"author":{"gitId":"cheunggalen"},"content":"```"},{"lineNumber":139,"author":{"gitId":"cheunggalen"},"content":"Nice! I\u0027ve marked this task as done:"},{"lineNumber":140,"author":{"gitId":"cheunggalen"},"content":"[T] [/] read book"},{"lineNumber":141,"author":{"gitId":"cheunggalen"},"content":"```"},{"lineNumber":142,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":143,"author":{"gitId":"cheunggalen"},"content":"\u003cbr\u003e"},{"lineNumber":144,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":145,"author":{"gitId":"cheunggalen"},"content":"### `Find`"},{"lineNumber":146,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":147,"author":{"gitId":"cheunggalen"},"content":"#### What it does:"},{"lineNumber":148,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":149,"author":{"gitId":"cheunggalen"},"content":"Find all tasks with descriptions containing the keyword."},{"lineNumber":150,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":151,"author":{"gitId":"cheunggalen"},"content":"#### Usage format:"},{"lineNumber":152,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":153,"author":{"gitId":"cheunggalen"},"content":"find *keyword*"},{"lineNumber":154,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":155,"author":{"gitId":"cheunggalen"},"content":"#### Usage example:"},{"lineNumber":156,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":157,"author":{"gitId":"cheunggalen"},"content":"`find book`"},{"lineNumber":158,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":159,"author":{"gitId":"cheunggalen"},"content":"#### Expected outcome:"},{"lineNumber":160,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":161,"author":{"gitId":"cheunggalen"},"content":"```"},{"lineNumber":162,"author":{"gitId":"cheunggalen"},"content":"Here are the matching tasks in your list:"},{"lineNumber":163,"author":{"gitId":"cheunggalen"},"content":"1. [T] [/] read book"},{"lineNumber":164,"author":{"gitId":"cheunggalen"},"content":"2. [D] [] return book (by: 28 Feb 2021, 5:00pm)"},{"lineNumber":165,"author":{"gitId":"cheunggalen"},"content":"```"},{"lineNumber":166,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":167,"author":{"gitId":"cheunggalen"},"content":"\u003cbr\u003e"},{"lineNumber":168,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":169,"author":{"gitId":"cheunggalen"},"content":"### `Delete`"},{"lineNumber":170,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":171,"author":{"gitId":"cheunggalen"},"content":"#### What it does:"},{"lineNumber":172,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":173,"author":{"gitId":"cheunggalen"},"content":"Delete a task **or** all tasks."},{"lineNumber":174,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":175,"author":{"gitId":"cheunggalen"},"content":"#### Usage format (delete a task):"},{"lineNumber":176,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":177,"author":{"gitId":"cheunggalen"},"content":"delete *line number*"},{"lineNumber":178,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":179,"author":{"gitId":"cheunggalen"},"content":"#### Usage example: (delete a task):"},{"lineNumber":180,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":181,"author":{"gitId":"cheunggalen"},"content":"`delete 1`"},{"lineNumber":182,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":183,"author":{"gitId":"cheunggalen"},"content":"#### Expected outcome (delete a task):"},{"lineNumber":184,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":185,"author":{"gitId":"cheunggalen"},"content":"```"},{"lineNumber":186,"author":{"gitId":"cheunggalen"},"content":"Noted. I\u0027ve removed this task:"},{"lineNumber":187,"author":{"gitId":"cheunggalen"},"content":"[T] [/] read book"},{"lineNumber":188,"author":{"gitId":"cheunggalen"},"content":"Now you have 5 tasks in the list."},{"lineNumber":189,"author":{"gitId":"cheunggalen"},"content":"```"},{"lineNumber":190,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":191,"author":{"gitId":"cheunggalen"},"content":"#### Usage example: (delete all tasks):"},{"lineNumber":192,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":193,"author":{"gitId":"cheunggalen"},"content":"`delete all`"},{"lineNumber":194,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":195,"author":{"gitId":"cheunggalen"},"content":"#### Expected outcome (delete all tasks):"},{"lineNumber":196,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":197,"author":{"gitId":"cheunggalen"},"content":"```"},{"lineNumber":198,"author":{"gitId":"cheunggalen"},"content":"Noted. I\u0027ve removed all the tasks from the list."},{"lineNumber":199,"author":{"gitId":"cheunggalen"},"content":"```"},{"lineNumber":200,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":201,"author":{"gitId":"cheunggalen"},"content":"\u003cbr\u003e"},{"lineNumber":202,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":203,"author":{"gitId":"cheunggalen"},"content":"### `Bye`"},{"lineNumber":204,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":205,"author":{"gitId":"cheunggalen"},"content":"#### What it does:"},{"lineNumber":206,"author":{"gitId":"-"},"content":""},{"lineNumber":207,"author":{"gitId":"cheunggalen"},"content":"Exit the Duke application."},{"lineNumber":208,"author":{"gitId":"-"},"content":""},{"lineNumber":209,"author":{"gitId":"cheunggalen"},"content":"#### Usage example:"},{"lineNumber":210,"author":{"gitId":"-"},"content":""},{"lineNumber":211,"author":{"gitId":"cheunggalen"},"content":"`bye`"},{"lineNumber":212,"author":{"gitId":"-"},"content":""},{"lineNumber":213,"author":{"gitId":"cheunggalen"},"content":"#### Expected outcome:"},{"lineNumber":214,"author":{"gitId":"-"},"content":""},{"lineNumber":215,"author":{"gitId":"cheunggalen"},"content":"The Duke application closes."}],"authorContributionMap":{"cheunggalen":202,"-":13}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"if exist \"%JAVA_EXE%\" goto execute"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":67,"author":{"gitId":"cheunggalen"},"content":":execute"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"@rem Setup the command line"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":71,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":73,"author":{"gitId":"cheunggalen"},"content":"@rem Execute Gradle"},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":":end"},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":79,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":":fail"},{"lineNumber":81,"author":{"gitId":"cheunggalen"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":82,"author":{"gitId":"cheunggalen"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":83,"author":{"gitId":"cheunggalen"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":84,"author":{"gitId":"cheunggalen"},"content":"exit /b 1"},{"lineNumber":85,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":86,"author":{"gitId":"cheunggalen"},"content":":mainEnd"},{"lineNumber":87,"author":{"gitId":"cheunggalen"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":88,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":89,"author":{"gitId":"cheunggalen"},"content":":omega"}],"authorContributionMap":{"cheunggalen":89}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"rootProject.name \u003d \u0027ip\u0027"}],"authorContributionMap":{"cheunggalen":1}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":" * A type of Task with a deadline."},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":" */"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"    public Deadline(String description, String date, String time) {"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"        super(description, date, time, \"[D]\", false);"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":10}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import javafx.geometry.Pos;"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import javafx.scene.control.Label;"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"public class DialogBox extends HBox {"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"    public DialogBox(Label l, ImageView iv) {"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"        l.setWrapText(true);"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"        iv.setFitWidth(100.0);"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"        iv.setFitHeight(100.0);"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"        this.setAlignment(Pos.TOP_RIGHT);"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"        this.getChildren().addAll(l, iv);"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"    private void flip() {"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"        FXCollections.reverse(tmp);"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"        return new DialogBox(l, iv);"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"        var db \u003d new DialogBox(l, iv);"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"        db.flip();"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"        return db;"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":42}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import javafx.scene.control.Label;"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"import javafx.scene.Scene;"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"import javafx.stage.Stage;"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"public class Duke extends Application {"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"    private final Parser parser;"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"    private VBox dialogContainer;"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"    private TextField userInput;"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"    private final Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"    public Duke() {"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"        Storage storage \u003d new Storage(\"./data/duke.txt\");"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"        storage.retrieveOrCreate();"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"        TaskList taskList \u003d storage.getTaskList();"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"        parser \u003d new Parser(taskList, ui, storage);"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"    public void start(Stage stage) {"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"        userInput \u003d new TextField();"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"        Button sendButton \u003d new Button(\"Send\");"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"        Scene scene \u003d new Scene(mainLayout);"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"        stage.setScene(scene);"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"        stage.show();"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"        stage.setTitle(\"Duke\");"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"        stage.setResizable(false);"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"        scrollPane.setPrefSize(385, 535);"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":66,"author":{"gitId":"cheunggalen"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":67,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":71,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":73,"author":{"gitId":"cheunggalen"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);"},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"        sendButton.setOnMouseClicked((event) -\u003e handleUserInput());"},{"lineNumber":79,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":"        userInput.setOnAction((event) -\u003e handleUserInput());"},{"lineNumber":81,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":82,"author":{"gitId":"cheunggalen"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":83,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":85,"author":{"gitId":"cheunggalen"},"content":"    private void handleUserInput() {"},{"lineNumber":86,"author":{"gitId":"cheunggalen"},"content":"        Label userText \u003d new Label(userInput.getText());"},{"lineNumber":87,"author":{"gitId":"cheunggalen"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));"},{"lineNumber":88,"author":{"gitId":"cheunggalen"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":89,"author":{"gitId":"cheunggalen"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),"},{"lineNumber":90,"author":{"gitId":"cheunggalen"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"},{"lineNumber":91,"author":{"gitId":"cheunggalen"},"content":"        );"},{"lineNumber":92,"author":{"gitId":"cheunggalen"},"content":"        userInput.clear();"},{"lineNumber":93,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":95,"author":{"gitId":"cheunggalen"},"content":"    public String getResponse(String input) {"},{"lineNumber":96,"author":{"gitId":"cheunggalen"},"content":"        parser.addCommand(input);"},{"lineNumber":97,"author":{"gitId":"cheunggalen"},"content":"        return parser.process();"},{"lineNumber":98,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":99}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":" * A type of Task with a date and time."},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":" */"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"    public Event(String description, String date, String time) {"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"        super(description, date, time, \"[E]\", false);"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"     * Converts the start and end time from 24h to 12h format."},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"    public void formatStartEndTime() {"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"        String timeCopy \u003d getTime();"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"        String[] timeArr \u003d timeCopy.split(\"-\");"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"        String startTime \u003d timeArr[0];"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"        String endTime \u003d timeArr[1];"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"        String formattedStartTime \u003d formatTime(startTime);"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"        String formattedEndTime \u003d formatTime(endTime);"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"        String formattedTime \u003d formattedStartTime + \"-\" + formattedEndTime;"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"        setTime(formattedTime);"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":24}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":" */"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"        Application.launch(Duke.class, args);"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":12}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":" * Deals with making sense of users\u0027 commands."},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":" */"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"public class Parser {"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"    private String inputCommand;"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"    private TaskList taskList;"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"    private final Ui ui;"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"    private final Storage storage;"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"    public Parser(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"        inputCommand \u003d \"\";"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"        this.ui \u003d ui;"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"        this.storage \u003d storage;"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"     * Inputs a new command to be processed."},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"     * @param command The input command."},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"    public void addCommand(String command) {"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"        this.inputCommand \u003d command;"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"     * Lists down all the tasks in the task list."},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"     * @return Every tasks in the list."},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"    public String processList() {"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"        String list \u003d taskList.listAllTasks();"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"        return ui.provideList(list);"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"     * Checks if the input command is valid, if not, respond accordingly."},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"     * Creates a Todo and adds it to the task list."},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"     * Saves any changes to the hard drive."},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"     * @param command The todo command followed its description, date and time."},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"     * @return The newly added todo task with the number of tasks in the task list."},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"    public String processTodo(String command) {"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"        String description \u003d command.replace(\"todo\", \"\").strip();"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"        if (description.length() \u003d\u003d 0) {"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"            return ui.missingDescriptionReply();"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"        Todo todo \u003d new Todo(description);"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"        if (taskList.hasTask(todo)) {"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"            return ui.detectDuplicateReply(todo.toString());"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"        taskList.addTask(todo);"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"        storage.writeToFile(taskList);"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"        int numOfTasks \u003d taskList.numOfTasks();"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"        return ui.addTaskReply(todo.toString(), String.valueOf(numOfTasks));"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"     * Checks if the input command is valid, if not, respond accordingly."},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":"     * Creates a Deadline and adds it to the task list."},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"     * Saves any changes to the hard drive."},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":"     * @param command The deadline command followed its description, date and time."},{"lineNumber":66,"author":{"gitId":"cheunggalen"},"content":"     * @return The newly added deadline task with the number of tasks in the task list."},{"lineNumber":67,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"    public String processDeadline(String command) {"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"        String input \u003d command.replace(\"deadline\", \"\").strip();"},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"        if (input.length() \u003d\u003d 0) {"},{"lineNumber":71,"author":{"gitId":"cheunggalen"},"content":"            return ui.missingDescriptionReply();"},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"cheunggalen"},"content":"        String[] inputArr \u003d input.split(\" \");"},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":"        StringBuilder description \u003d new StringBuilder();"},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":"        StringBuilder date \u003d new StringBuilder();"},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"        StringBuilder time \u003d new StringBuilder();"},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":"        boolean isDescription \u003d true;"},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"        boolean isTime \u003d false;"},{"lineNumber":79,"author":{"gitId":"cheunggalen"},"content":"        for (String string : inputArr) {"},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":"            if (string.equals(\"/by\")) {"},{"lineNumber":81,"author":{"gitId":"cheunggalen"},"content":"                isDescription \u003d false;"},{"lineNumber":82,"author":{"gitId":"cheunggalen"},"content":"            } else if (isDescription) {"},{"lineNumber":83,"author":{"gitId":"cheunggalen"},"content":"                description.append(string).append(\" \");"},{"lineNumber":84,"author":{"gitId":"cheunggalen"},"content":"            } else if (isTime) {"},{"lineNumber":85,"author":{"gitId":"cheunggalen"},"content":"                time.append(string);"},{"lineNumber":86,"author":{"gitId":"cheunggalen"},"content":"            } else {"},{"lineNumber":87,"author":{"gitId":"cheunggalen"},"content":"                date.append(string);"},{"lineNumber":88,"author":{"gitId":"cheunggalen"},"content":"                isTime \u003d true;"},{"lineNumber":89,"author":{"gitId":"cheunggalen"},"content":"            }"},{"lineNumber":90,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"cheunggalen"},"content":"        if (date.length() \u003d\u003d 0) {"},{"lineNumber":92,"author":{"gitId":"cheunggalen"},"content":"            return ui.missingDateReply();"},{"lineNumber":93,"author":{"gitId":"cheunggalen"},"content":"        } else if (time.length() \u003d\u003d 0) {"},{"lineNumber":94,"author":{"gitId":"cheunggalen"},"content":"            return ui.missingTimeReply();"},{"lineNumber":95,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"cheunggalen"},"content":"        Deadline deadline \u003d new Deadline(description.toString(), date.toString(), time.toString());"},{"lineNumber":97,"author":{"gitId":"cheunggalen"},"content":"        deadline.formatDate();"},{"lineNumber":98,"author":{"gitId":"cheunggalen"},"content":"        String formattedTime \u003d deadline.formatTime(time.toString());"},{"lineNumber":99,"author":{"gitId":"cheunggalen"},"content":"        deadline.setTime(formattedTime);"},{"lineNumber":100,"author":{"gitId":"cheunggalen"},"content":"        if (taskList.hasTask(deadline)) {"},{"lineNumber":101,"author":{"gitId":"cheunggalen"},"content":"            return ui.detectDuplicateReply(deadline.toString());"},{"lineNumber":102,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"cheunggalen"},"content":"        taskList.addTask(deadline);"},{"lineNumber":104,"author":{"gitId":"cheunggalen"},"content":"        storage.writeToFile(taskList);"},{"lineNumber":105,"author":{"gitId":"cheunggalen"},"content":"        int numOfTasks \u003d taskList.numOfTasks();"},{"lineNumber":106,"author":{"gitId":"cheunggalen"},"content":"        return ui.addTaskReply(deadline.toString(), String.valueOf(numOfTasks));"},{"lineNumber":107,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":109,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"cheunggalen"},"content":"     * Checks if the input command is valid, if not, respond accordingly."},{"lineNumber":111,"author":{"gitId":"cheunggalen"},"content":"     * Creates an Event and adds it to the task list."},{"lineNumber":112,"author":{"gitId":"cheunggalen"},"content":"     * Saves any changes to the hard drive."},{"lineNumber":113,"author":{"gitId":"cheunggalen"},"content":"     * @param command The event command followed its description, date and time."},{"lineNumber":114,"author":{"gitId":"cheunggalen"},"content":"     * @return The newly added event task with the number of tasks in the task list."},{"lineNumber":115,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"cheunggalen"},"content":"    public String processEvent(String command) {"},{"lineNumber":117,"author":{"gitId":"cheunggalen"},"content":"        String input \u003d command.replace(\"event\", \"\").strip();"},{"lineNumber":118,"author":{"gitId":"cheunggalen"},"content":"        if (input.length() \u003d\u003d 0) {"},{"lineNumber":119,"author":{"gitId":"cheunggalen"},"content":"            return ui.missingDescriptionReply();"},{"lineNumber":120,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"cheunggalen"},"content":"        String[] inputArr \u003d input.split(\" \");"},{"lineNumber":122,"author":{"gitId":"cheunggalen"},"content":"        StringBuilder description \u003d new StringBuilder();"},{"lineNumber":123,"author":{"gitId":"cheunggalen"},"content":"        StringBuilder date \u003d new StringBuilder();"},{"lineNumber":124,"author":{"gitId":"cheunggalen"},"content":"        StringBuilder time \u003d new StringBuilder();"},{"lineNumber":125,"author":{"gitId":"cheunggalen"},"content":"        boolean isDescription \u003d true;"},{"lineNumber":126,"author":{"gitId":"cheunggalen"},"content":"        boolean isTime \u003d false;"},{"lineNumber":127,"author":{"gitId":"cheunggalen"},"content":"        for (String string : inputArr) {"},{"lineNumber":128,"author":{"gitId":"cheunggalen"},"content":"            if (string.equals(\"/at\")) {"},{"lineNumber":129,"author":{"gitId":"cheunggalen"},"content":"                isDescription \u003d false;"},{"lineNumber":130,"author":{"gitId":"cheunggalen"},"content":"            } else if (isDescription) {"},{"lineNumber":131,"author":{"gitId":"cheunggalen"},"content":"                description.append(string).append(\" \");"},{"lineNumber":132,"author":{"gitId":"cheunggalen"},"content":"            } else if (isTime) {"},{"lineNumber":133,"author":{"gitId":"cheunggalen"},"content":"                time.append(string);"},{"lineNumber":134,"author":{"gitId":"cheunggalen"},"content":"            } else {"},{"lineNumber":135,"author":{"gitId":"cheunggalen"},"content":"                date.append(string);"},{"lineNumber":136,"author":{"gitId":"cheunggalen"},"content":"                isTime \u003d true;"},{"lineNumber":137,"author":{"gitId":"cheunggalen"},"content":"            }"},{"lineNumber":138,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"cheunggalen"},"content":"        if (date.length() \u003d\u003d 0) {"},{"lineNumber":140,"author":{"gitId":"cheunggalen"},"content":"            return ui.missingDateReply();"},{"lineNumber":141,"author":{"gitId":"cheunggalen"},"content":"        } else if (time.length() \u003d\u003d 0) {"},{"lineNumber":142,"author":{"gitId":"cheunggalen"},"content":"            return ui.missingTimeReply();"},{"lineNumber":143,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":144,"author":{"gitId":"cheunggalen"},"content":"        Event event \u003d new Event(description.toString(), date.toString(), time.toString());"},{"lineNumber":145,"author":{"gitId":"cheunggalen"},"content":"        event.formatDate();"},{"lineNumber":146,"author":{"gitId":"cheunggalen"},"content":"        event.formatStartEndTime();"},{"lineNumber":147,"author":{"gitId":"cheunggalen"},"content":"        if (taskList.hasTask(event)) {"},{"lineNumber":148,"author":{"gitId":"cheunggalen"},"content":"            return ui.detectDuplicateReply(event.toString());"},{"lineNumber":149,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":150,"author":{"gitId":"cheunggalen"},"content":"        taskList.addTask(event);"},{"lineNumber":151,"author":{"gitId":"cheunggalen"},"content":"        storage.writeToFile(taskList);"},{"lineNumber":152,"author":{"gitId":"cheunggalen"},"content":"        int numOfTasks \u003d taskList.numOfTasks();"},{"lineNumber":153,"author":{"gitId":"cheunggalen"},"content":"        return ui.addTaskReply(event.toString(), String.valueOf(numOfTasks));"},{"lineNumber":154,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":156,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":157,"author":{"gitId":"cheunggalen"},"content":"     * Checks if the input command is valid, if not, respond accordingly."},{"lineNumber":158,"author":{"gitId":"cheunggalen"},"content":"     * Marks the task at the given line number as done."},{"lineNumber":159,"author":{"gitId":"cheunggalen"},"content":"     * Saves any changes to the hard drive."},{"lineNumber":160,"author":{"gitId":"cheunggalen"},"content":"     * @param command The done command followed by the line number."},{"lineNumber":161,"author":{"gitId":"cheunggalen"},"content":"     * @return The completed task."},{"lineNumber":162,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":163,"author":{"gitId":"cheunggalen"},"content":"    public String processDone(String command) {"},{"lineNumber":164,"author":{"gitId":"cheunggalen"},"content":"        String input \u003d command.replace(\"done\", \"\").strip();"},{"lineNumber":165,"author":{"gitId":"cheunggalen"},"content":"        if (input.length() \u003d\u003d 0) {"},{"lineNumber":166,"author":{"gitId":"cheunggalen"},"content":"            return ui.missingLineNumberReply();"},{"lineNumber":167,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"cheunggalen"},"content":"        int lineNumber \u003d Integer.parseInt(input);"},{"lineNumber":169,"author":{"gitId":"cheunggalen"},"content":"        if (lineNumber \u003e taskList.numOfTasks()) {"},{"lineNumber":170,"author":{"gitId":"cheunggalen"},"content":"            return ui.invalidLineReply();"},{"lineNumber":171,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"cheunggalen"},"content":"        int index \u003d lineNumber - 1;"},{"lineNumber":173,"author":{"gitId":"cheunggalen"},"content":"        Task completedTask \u003d taskList.markTaskAsDone(index);"},{"lineNumber":174,"author":{"gitId":"cheunggalen"},"content":"        storage.writeToFile(taskList);"},{"lineNumber":175,"author":{"gitId":"cheunggalen"},"content":"        return ui.markAsDoneReply(completedTask.toString());"},{"lineNumber":176,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":178,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":179,"author":{"gitId":"cheunggalen"},"content":"     * Checks if the user inputted a line number to be deleted, if not, inform the user."},{"lineNumber":180,"author":{"gitId":"cheunggalen"},"content":"     * Checks if the user wants to delete one or all tasks from the task list."},{"lineNumber":181,"author":{"gitId":"cheunggalen"},"content":"     * Redirects to the appropriate process method."},{"lineNumber":182,"author":{"gitId":"cheunggalen"},"content":"     * @param command The delete command followed by either the line number or all command."},{"lineNumber":183,"author":{"gitId":"cheunggalen"},"content":"     * @return The relevant response from the redirected process method."},{"lineNumber":184,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":185,"author":{"gitId":"cheunggalen"},"content":"    public String checkDelete(String command) {"},{"lineNumber":186,"author":{"gitId":"cheunggalen"},"content":"        String suffix \u003d command.replace(\"delete\", \"\").strip();"},{"lineNumber":187,"author":{"gitId":"cheunggalen"},"content":"        if (suffix.length() \u003d\u003d 0) {"},{"lineNumber":188,"author":{"gitId":"cheunggalen"},"content":"            return ui.missingLineNumberReply();"},{"lineNumber":189,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"cheunggalen"},"content":"        if (suffix.startsWith(\"all\")) {"},{"lineNumber":191,"author":{"gitId":"cheunggalen"},"content":"            return processDeleteAll();"},{"lineNumber":192,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":193,"author":{"gitId":"cheunggalen"},"content":"        return processDelete(suffix);"},{"lineNumber":194,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":195,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":196,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":197,"author":{"gitId":"cheunggalen"},"content":"     * Checks if the line number to be deleted is valid, if not, inform the user."},{"lineNumber":198,"author":{"gitId":"cheunggalen"},"content":"     * Deletes the task at the given line number."},{"lineNumber":199,"author":{"gitId":"cheunggalen"},"content":"     * Saves any changes to the hard drive."},{"lineNumber":200,"author":{"gitId":"cheunggalen"},"content":"     * @param suffix The line number in string."},{"lineNumber":201,"author":{"gitId":"cheunggalen"},"content":"     * @return The deleted task with the number of tasks left in the task list."},{"lineNumber":202,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":203,"author":{"gitId":"cheunggalen"},"content":"    public String processDelete(String suffix) {"},{"lineNumber":204,"author":{"gitId":"cheunggalen"},"content":"        int lineNumber \u003d Integer.parseInt(suffix);"},{"lineNumber":205,"author":{"gitId":"cheunggalen"},"content":"        if (lineNumber \u003e taskList.numOfTasks()) {"},{"lineNumber":206,"author":{"gitId":"cheunggalen"},"content":"            return ui.invalidLineReply();"},{"lineNumber":207,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":208,"author":{"gitId":"cheunggalen"},"content":"        int index \u003d  lineNumber - 1;"},{"lineNumber":209,"author":{"gitId":"cheunggalen"},"content":"        Task deletedTask \u003d taskList.deleteTask(index);"},{"lineNumber":210,"author":{"gitId":"cheunggalen"},"content":"        int numOfTasks \u003d taskList.numOfTasks();"},{"lineNumber":211,"author":{"gitId":"cheunggalen"},"content":"        storage.writeToFile(taskList);"},{"lineNumber":212,"author":{"gitId":"cheunggalen"},"content":"        return ui.deleteTaskReply(deletedTask.toString(), String.valueOf(numOfTasks));"},{"lineNumber":213,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":214,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":215,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":216,"author":{"gitId":"cheunggalen"},"content":"     * Deletes all the tasks from the task list."},{"lineNumber":217,"author":{"gitId":"cheunggalen"},"content":"     * Saves any changes to the hard drive."},{"lineNumber":218,"author":{"gitId":"cheunggalen"},"content":"     * @return The reply informing the user that all tasks have been deleted."},{"lineNumber":219,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":220,"author":{"gitId":"cheunggalen"},"content":"    public String processDeleteAll() {"},{"lineNumber":221,"author":{"gitId":"cheunggalen"},"content":"        taskList \u003d new TaskList();"},{"lineNumber":222,"author":{"gitId":"cheunggalen"},"content":"        storage.writeToFile(taskList);"},{"lineNumber":223,"author":{"gitId":"cheunggalen"},"content":"        return ui.deleteAllReply();"},{"lineNumber":224,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":225,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":226,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":227,"author":{"gitId":"cheunggalen"},"content":"     * Checks if the input command is valid, if not, respond accordingly."},{"lineNumber":228,"author":{"gitId":"cheunggalen"},"content":"     * Searches through the task list."},{"lineNumber":229,"author":{"gitId":"cheunggalen"},"content":"     * List out the tasks with descriptions containing the search word, if any."},{"lineNumber":230,"author":{"gitId":"cheunggalen"},"content":"     * Gives the appropriate response based on the input command."},{"lineNumber":231,"author":{"gitId":"cheunggalen"},"content":"     * @param command The find command followed by the search word."},{"lineNumber":232,"author":{"gitId":"cheunggalen"},"content":"     * @return A list of tasks containing the search word in their descriptions, if any."},{"lineNumber":233,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":234,"author":{"gitId":"cheunggalen"},"content":"    public String processFind(String command) {"},{"lineNumber":235,"author":{"gitId":"cheunggalen"},"content":"        String word \u003d command.replace(\"find\", \"\").strip();"},{"lineNumber":236,"author":{"gitId":"cheunggalen"},"content":"        if (word.length() \u003d\u003d 0) {"},{"lineNumber":237,"author":{"gitId":"cheunggalen"},"content":"            return ui.missingSearchWordReply();"},{"lineNumber":238,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":239,"author":{"gitId":"cheunggalen"},"content":"        List\u003cString\u003e matches \u003d new ArrayList\u003c\u003e();"},{"lineNumber":240,"author":{"gitId":"cheunggalen"},"content":"        boolean isFound \u003d false;"},{"lineNumber":241,"author":{"gitId":"cheunggalen"},"content":"        int matchNumber \u003d 1;"},{"lineNumber":242,"author":{"gitId":"cheunggalen"},"content":"        for (int i \u003d 0; i \u003c taskList.numOfTasks(); i++) {"},{"lineNumber":243,"author":{"gitId":"cheunggalen"},"content":"            Task task \u003d taskList.getTask(i);"},{"lineNumber":244,"author":{"gitId":"cheunggalen"},"content":"            String taskInString \u003d task.toString();"},{"lineNumber":245,"author":{"gitId":"cheunggalen"},"content":"            if (taskInString.contains(word)) {"},{"lineNumber":246,"author":{"gitId":"cheunggalen"},"content":"                matches.add(matchNumber + \". \" + taskInString);"},{"lineNumber":247,"author":{"gitId":"cheunggalen"},"content":"                isFound \u003d true;"},{"lineNumber":248,"author":{"gitId":"cheunggalen"},"content":"                matchNumber++;"},{"lineNumber":249,"author":{"gitId":"cheunggalen"},"content":"            }"},{"lineNumber":250,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":251,"author":{"gitId":"cheunggalen"},"content":"        if (!isFound) {"},{"lineNumber":252,"author":{"gitId":"cheunggalen"},"content":"            return ui.wordNotFoundReply();"},{"lineNumber":253,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":254,"author":{"gitId":"cheunggalen"},"content":"        StringBuilder matchesInString \u003d new StringBuilder();"},{"lineNumber":255,"author":{"gitId":"cheunggalen"},"content":"        for (String match : matches) {"},{"lineNumber":256,"author":{"gitId":"cheunggalen"},"content":"            matchesInString.append(match).append(\"\\n\");"},{"lineNumber":257,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":258,"author":{"gitId":"cheunggalen"},"content":"        return ui.findWordReply(matchesInString.toString());"},{"lineNumber":259,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":260,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":261,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":262,"author":{"gitId":"cheunggalen"},"content":"     * Processes the input command and passes it on to the relevant processor, responds accordingly."},{"lineNumber":263,"author":{"gitId":"cheunggalen"},"content":"     * @return The appropriate response based on the input command."},{"lineNumber":264,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":265,"author":{"gitId":"cheunggalen"},"content":"    public String process() {"},{"lineNumber":266,"author":{"gitId":"cheunggalen"},"content":"        String response \u003d \"\";"},{"lineNumber":267,"author":{"gitId":"cheunggalen"},"content":"        if (inputCommand.startsWith(\"start\")) {"},{"lineNumber":268,"author":{"gitId":"cheunggalen"},"content":"            response \u003d ui.greet();"},{"lineNumber":269,"author":{"gitId":"cheunggalen"},"content":"        } else if (inputCommand.startsWith(\"list\")) {"},{"lineNumber":270,"author":{"gitId":"cheunggalen"},"content":"            response \u003d processList();"},{"lineNumber":271,"author":{"gitId":"cheunggalen"},"content":"        } else if (inputCommand.startsWith(\"todo\")) {"},{"lineNumber":272,"author":{"gitId":"cheunggalen"},"content":"            response \u003d processTodo(inputCommand);"},{"lineNumber":273,"author":{"gitId":"cheunggalen"},"content":"        } else if (inputCommand.startsWith(\"deadline\")) {"},{"lineNumber":274,"author":{"gitId":"cheunggalen"},"content":"            response \u003d processDeadline(inputCommand);"},{"lineNumber":275,"author":{"gitId":"cheunggalen"},"content":"        } else if (inputCommand.startsWith(\"event\")) {"},{"lineNumber":276,"author":{"gitId":"cheunggalen"},"content":"            response \u003d processEvent(inputCommand);"},{"lineNumber":277,"author":{"gitId":"cheunggalen"},"content":"        } else if (inputCommand.startsWith(\"done\")) {"},{"lineNumber":278,"author":{"gitId":"cheunggalen"},"content":"            response \u003d processDone(inputCommand);"},{"lineNumber":279,"author":{"gitId":"cheunggalen"},"content":"        } else if (inputCommand.startsWith(\"delete\")) {"},{"lineNumber":280,"author":{"gitId":"cheunggalen"},"content":"            response \u003d checkDelete(inputCommand);"},{"lineNumber":281,"author":{"gitId":"cheunggalen"},"content":"        } else if (inputCommand.startsWith(\"find\")) {"},{"lineNumber":282,"author":{"gitId":"cheunggalen"},"content":"            response \u003d processFind(inputCommand);"},{"lineNumber":283,"author":{"gitId":"cheunggalen"},"content":"        } else if (inputCommand.startsWith(\"bye\")) {"},{"lineNumber":284,"author":{"gitId":"cheunggalen"},"content":"            System.exit(0);"},{"lineNumber":285,"author":{"gitId":"cheunggalen"},"content":"        } else {"},{"lineNumber":286,"author":{"gitId":"cheunggalen"},"content":"            response \u003d ui.invalidCommandReply();"},{"lineNumber":287,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":288,"author":{"gitId":"cheunggalen"},"content":"        assert response.length() \u003e 0 : \"the response cannot be empty\";"},{"lineNumber":289,"author":{"gitId":"cheunggalen"},"content":"        return response;"},{"lineNumber":290,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":291,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":291}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import java.io.BufferedWriter;"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import java.io.FileReader;"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import java.io.FileWriter;"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"import java.nio.file.Files;"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"import java.nio.file.Path;"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"import java.nio.file.Paths;"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"    private final String filePath;"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"    private TaskList taskList;"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"    public Storage(String filePath) {"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"    public TaskList getTaskList() {"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"        return taskList;"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"     * Loads the file containing the task list from the hard drive when Duke starts up."},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"     * If the file or folder doesn\u0027t exist yet, create a file in the file path or file path first."},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"    public void retrieveOrCreate() {"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"        Path path \u003d Paths.get(filePath);"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"        if (!Files.exists(path)) {"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"            try {"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"                Files.createDirectories(path.getParent());"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"                Files.createFile(path);"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"            } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"                e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"            return;"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"        taskList \u003d readFromFile();"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"     * Saves the updated task list in the hard drive automatically whenever the task list changes."},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"    public void writeToFile(TaskList taskList) {"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"        StringBuilder output \u003d new StringBuilder();"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"        for (int i \u003d 0; i \u003c taskList.numOfTasks(); i++) {"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"            output.append(taskList.getTask(i).toString()).append(\"\\n\");"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(filePath));"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"            bw.write(output.toString());"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"            bw.close();"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"        } catch (IOException e) {"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"            e.printStackTrace();"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"     * Converts the line from a string array to a Todo."},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"     * @param dataArr The line in a string array."},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"     * @return A Todo."},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"    public Task convertToTodo(String[] dataArr) {"},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":"        StringBuilder description \u003d new StringBuilder();"},{"lineNumber":66,"author":{"gitId":"cheunggalen"},"content":"        for (int i \u003d 2; i \u003c dataArr.length; i++) {"},{"lineNumber":67,"author":{"gitId":"cheunggalen"},"content":"            description.append(dataArr[i]).append(\" \");"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"        return new Todo(description.toString());"},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"cheunggalen"},"content":"     * Converts the line from a string array to either a Deadline or Event."},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":"     * @param dataArr The line in a string array."},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":"     * @param isDeadline A flag indicating if the line is a Deadline."},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"     * @return A Deadline or Event depending on isDeadline."},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"    public Task convertToDeadlineOrEvent(String[] dataArr, boolean isDeadline) {"},{"lineNumber":79,"author":{"gitId":"cheunggalen"},"content":"        int lastIndex \u003d dataArr.length - 1;"},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":"        String timeWithBracket \u003d dataArr[lastIndex];"},{"lineNumber":81,"author":{"gitId":"cheunggalen"},"content":"        String[] timeWithBracketArr \u003d timeWithBracket.split(\"\");"},{"lineNumber":82,"author":{"gitId":"cheunggalen"},"content":"        int timeWithBracketLength \u003d timeWithBracketArr.length;"},{"lineNumber":83,"author":{"gitId":"cheunggalen"},"content":"        int timeWithBracketLastIndex \u003d timeWithBracketLength - 2;"},{"lineNumber":84,"author":{"gitId":"cheunggalen"},"content":"        StringBuilder time \u003d new StringBuilder();"},{"lineNumber":85,"author":{"gitId":"cheunggalen"},"content":"        for (int i \u003d 0; i \u003c\u003d timeWithBracketLastIndex; i++) {"},{"lineNumber":86,"author":{"gitId":"cheunggalen"},"content":"            time.append(timeWithBracketArr[i]);"},{"lineNumber":87,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"cheunggalen"},"content":"        String yearData \u003d dataArr[lastIndex - 1];"},{"lineNumber":89,"author":{"gitId":"cheunggalen"},"content":"        String[] yearArr \u003d yearData.split(\"\");"},{"lineNumber":90,"author":{"gitId":"cheunggalen"},"content":"        StringBuilder year \u003d new StringBuilder();"},{"lineNumber":91,"author":{"gitId":"cheunggalen"},"content":"        for (int i \u003d 0; i \u003c 4; i++) {"},{"lineNumber":92,"author":{"gitId":"cheunggalen"},"content":"            year.append(yearArr[i]);"},{"lineNumber":93,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"cheunggalen"},"content":"        String date \u003d dataArr[lastIndex - 3] + \" \" + dataArr[lastIndex - 2] + \" \" + year;"},{"lineNumber":95,"author":{"gitId":"cheunggalen"},"content":"        int descriptionLastIndex \u003d lastIndex - 5;"},{"lineNumber":96,"author":{"gitId":"cheunggalen"},"content":"        StringBuilder description \u003d new StringBuilder();"},{"lineNumber":97,"author":{"gitId":"cheunggalen"},"content":"        for (int i \u003d 2; i \u003c\u003d descriptionLastIndex; i++) {"},{"lineNumber":98,"author":{"gitId":"cheunggalen"},"content":"            description.append(dataArr[i]).append(\" \");"},{"lineNumber":99,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"cheunggalen"},"content":"        if (isDeadline) {"},{"lineNumber":101,"author":{"gitId":"cheunggalen"},"content":"            return new Deadline(description.toString(), date, time.toString());"},{"lineNumber":102,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"cheunggalen"},"content":"        return new Event(description.toString(), date, time.toString());"},{"lineNumber":104,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":106,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"cheunggalen"},"content":"     * Reads the whole file line by line."},{"lineNumber":108,"author":{"gitId":"cheunggalen"},"content":"     * For each line, checks which type of Task it is."},{"lineNumber":109,"author":{"gitId":"cheunggalen"},"content":"     * Passes the line to the relevant converter to convert into a Task."},{"lineNumber":110,"author":{"gitId":"cheunggalen"},"content":"     * Adds the task to a list."},{"lineNumber":111,"author":{"gitId":"cheunggalen"},"content":"     * After reading the entire file, return the list."},{"lineNumber":112,"author":{"gitId":"cheunggalen"},"content":"     * @return The saved task list."},{"lineNumber":113,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"cheunggalen"},"content":"    public TaskList readFromFile() {"},{"lineNumber":115,"author":{"gitId":"cheunggalen"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":116,"author":{"gitId":"cheunggalen"},"content":"        try {"},{"lineNumber":117,"author":{"gitId":"cheunggalen"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(filePath));"},{"lineNumber":118,"author":{"gitId":"cheunggalen"},"content":"            String input \u003d br.readLine();"},{"lineNumber":119,"author":{"gitId":"cheunggalen"},"content":"            while (input !\u003d null) {"},{"lineNumber":120,"author":{"gitId":"cheunggalen"},"content":"                String[] inputArr \u003d input.split(\" \");"},{"lineNumber":121,"author":{"gitId":"cheunggalen"},"content":"                Task task;"},{"lineNumber":122,"author":{"gitId":"cheunggalen"},"content":"                if (input.startsWith(\"[T]\")) {"},{"lineNumber":123,"author":{"gitId":"cheunggalen"},"content":"                    task \u003d convertToTodo(inputArr);"},{"lineNumber":124,"author":{"gitId":"cheunggalen"},"content":"                } else if (input.startsWith(\"[D]\")) {"},{"lineNumber":125,"author":{"gitId":"cheunggalen"},"content":"                    task \u003d convertToDeadlineOrEvent(inputArr, true);"},{"lineNumber":126,"author":{"gitId":"cheunggalen"},"content":"                } else {"},{"lineNumber":127,"author":{"gitId":"cheunggalen"},"content":"                    task \u003d convertToDeadlineOrEvent(inputArr, false);"},{"lineNumber":128,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":129,"author":{"gitId":"cheunggalen"},"content":"                if (inputArr[1].equals(\"[/]\")) {"},{"lineNumber":130,"author":{"gitId":"cheunggalen"},"content":"                    task \u003d task.markAsDone();"},{"lineNumber":131,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":132,"author":{"gitId":"cheunggalen"},"content":"                taskList.addTask(task);"},{"lineNumber":133,"author":{"gitId":"cheunggalen"},"content":"                input \u003d br.readLine();"},{"lineNumber":134,"author":{"gitId":"cheunggalen"},"content":"            }"},{"lineNumber":135,"author":{"gitId":"cheunggalen"},"content":"            br.close();"},{"lineNumber":136,"author":{"gitId":"cheunggalen"},"content":"        } catch (IOException e) {"},{"lineNumber":137,"author":{"gitId":"cheunggalen"},"content":"            e.printStackTrace();"},{"lineNumber":138,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"cheunggalen"},"content":"        return taskList;"},{"lineNumber":140,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":141}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"public class Task {"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"    private final String description;"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"    private String date;"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"    private String time;"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"     * symbol represents the type of Task."},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"     * T for Todo."},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"     * D for Deadline."},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"     * E for Event."},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"    private final String symbol;"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"    private final boolean isDone;"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"    public Task(String description, String date, String time, String symbol, boolean done) {"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"        this.description \u003d description;"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"        this.date \u003d date;"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"        this.time \u003d time;"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"        this.symbol \u003d symbol;"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"        isDone \u003d done;"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"    public String getDate() {"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"        return date;"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"    public String getTime() {"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"        return time;"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"    public void setTime(String time) {"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"        this.time \u003d time;"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"     * Changes the status of a task to done."},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"     * @return The task with the status changed to done."},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"    public Task markAsDone() {"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"        return new Task(description, date, time, symbol, true);"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"     * Converts the date from DD/MM/YYYY format to D MMM YYYY format."},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"    public void formatDate() {"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"        String dateCopy \u003d date;"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"        StringBuilder year \u003d new StringBuilder();"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"        StringBuilder month \u003d new StringBuilder();"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"        StringBuilder day \u003d new StringBuilder();"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"        String[] dateArr \u003d dateCopy.split(\"\");"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"        int slashCount \u003d 0;"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"        for (String string : dateArr) {"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"            if (string.equals(\"/\")) {"},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"                slashCount++;"},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"            } else if (slashCount \u003d\u003d 2) {"},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":"                year.append(string);"},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"            } else if (slashCount \u003d\u003d 1) {"},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":"                month.append(string);"},{"lineNumber":66,"author":{"gitId":"cheunggalen"},"content":"            } else {"},{"lineNumber":67,"author":{"gitId":"cheunggalen"},"content":"                day.append(string);"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"        if (day.length() \u003d\u003d 1) {"},{"lineNumber":71,"author":{"gitId":"cheunggalen"},"content":"            day.insert(0, \"0\");"},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"cheunggalen"},"content":"        if (month.length() \u003d\u003d 1) {"},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":"            month.insert(0, \"0\");"},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"        if (year.length() \u003d\u003d 2) {"},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":"            year.insert(0, \"20\");"},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"cheunggalen"},"content":"        String formattedDate \u003d year + \"-\" + month + \"-\" + day;"},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":"        LocalDate ld \u003d LocalDate.parse(formattedDate);"},{"lineNumber":81,"author":{"gitId":"cheunggalen"},"content":"        date \u003d ld.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));"},{"lineNumber":82,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":84,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"cheunggalen"},"content":"     * Converts the hours from 24h to 12h format when the tenth digit of the hour is zero."},{"lineNumber":86,"author":{"gitId":"cheunggalen"},"content":"     * @param onesHour The one digit of the hour."},{"lineNumber":87,"author":{"gitId":"cheunggalen"},"content":"     * @return The formatted hour in a List."},{"lineNumber":88,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"cheunggalen"},"content":"    public List\u003cString\u003e formatOnesHour(int onesHour) {"},{"lineNumber":90,"author":{"gitId":"cheunggalen"},"content":"        List\u003cString\u003e timeArr \u003d new ArrayList\u003c\u003e();"},{"lineNumber":91,"author":{"gitId":"cheunggalen"},"content":"        if (onesHour \u003d\u003d 0) {"},{"lineNumber":92,"author":{"gitId":"cheunggalen"},"content":"            timeArr.add(\"12:\");"},{"lineNumber":93,"author":{"gitId":"cheunggalen"},"content":"            timeArr.add(\"am\");"},{"lineNumber":94,"author":{"gitId":"cheunggalen"},"content":"            return timeArr;"},{"lineNumber":95,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"cheunggalen"},"content":"        String hour \u003d String.valueOf(onesHour);"},{"lineNumber":97,"author":{"gitId":"cheunggalen"},"content":"        timeArr.add(hour);"},{"lineNumber":98,"author":{"gitId":"cheunggalen"},"content":"        timeArr.add(\"am\");"},{"lineNumber":99,"author":{"gitId":"cheunggalen"},"content":"        return timeArr;"},{"lineNumber":100,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":102,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":103,"author":{"gitId":"cheunggalen"},"content":"     * Converts the hours from 24h to 12h format."},{"lineNumber":104,"author":{"gitId":"cheunggalen"},"content":"     * @param tensHour The tenth digit of the hour."},{"lineNumber":105,"author":{"gitId":"cheunggalen"},"content":"     * @param onesHour The one digit of the hour."},{"lineNumber":106,"author":{"gitId":"cheunggalen"},"content":"     * @return The formatted hour in a List."},{"lineNumber":107,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"cheunggalen"},"content":"    public List\u003cString\u003e formatTensHour(int tensHour, int onesHour) {"},{"lineNumber":109,"author":{"gitId":"cheunggalen"},"content":"        List\u003cString\u003e timeArr \u003d new ArrayList\u003c\u003e();"},{"lineNumber":110,"author":{"gitId":"cheunggalen"},"content":"        int hour \u003d tensHour * 10 + onesHour;"},{"lineNumber":111,"author":{"gitId":"cheunggalen"},"content":"        if (hour \u003e\u003d 13) {"},{"lineNumber":112,"author":{"gitId":"cheunggalen"},"content":"            hour -\u003d 12;"},{"lineNumber":113,"author":{"gitId":"cheunggalen"},"content":"            String hourString \u003d String.valueOf(hour);"},{"lineNumber":114,"author":{"gitId":"cheunggalen"},"content":"            timeArr.add(hourString);"},{"lineNumber":115,"author":{"gitId":"cheunggalen"},"content":"            timeArr.add(\"pm\");"},{"lineNumber":116,"author":{"gitId":"cheunggalen"},"content":"            return timeArr;"},{"lineNumber":117,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"cheunggalen"},"content":"        String hourString \u003d String.valueOf(hour);"},{"lineNumber":119,"author":{"gitId":"cheunggalen"},"content":"        timeArr.add(hourString);"},{"lineNumber":120,"author":{"gitId":"cheunggalen"},"content":"        if (hour \u003e\u003d 12) {"},{"lineNumber":121,"author":{"gitId":"cheunggalen"},"content":"            timeArr.add(\"pm\");"},{"lineNumber":122,"author":{"gitId":"cheunggalen"},"content":"            return timeArr;"},{"lineNumber":123,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"cheunggalen"},"content":"        timeArr.add(\"am\");"},{"lineNumber":125,"author":{"gitId":"cheunggalen"},"content":"        return timeArr;"},{"lineNumber":126,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":128,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"cheunggalen"},"content":"     * Converts the time from 24h to 12h format."},{"lineNumber":130,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":131,"author":{"gitId":"cheunggalen"},"content":"    public String formatTime(String time) {"},{"lineNumber":132,"author":{"gitId":"cheunggalen"},"content":"        char[] timeArr \u003d time.toCharArray();"},{"lineNumber":133,"author":{"gitId":"cheunggalen"},"content":"        int tensHour \u003d timeArr[0] - \u00270\u0027;"},{"lineNumber":134,"author":{"gitId":"cheunggalen"},"content":"        int onesHour \u003d timeArr[1] - \u00270\u0027;"},{"lineNumber":135,"author":{"gitId":"cheunggalen"},"content":"        int tensMin \u003d timeArr[2] - \u00270\u0027;"},{"lineNumber":136,"author":{"gitId":"cheunggalen"},"content":"        int onesMin \u003d timeArr[3] - \u00270\u0027;"},{"lineNumber":137,"author":{"gitId":"cheunggalen"},"content":"        List\u003cString\u003e timeList;"},{"lineNumber":138,"author":{"gitId":"cheunggalen"},"content":"        if (tensHour \u003d\u003d 0) {"},{"lineNumber":139,"author":{"gitId":"cheunggalen"},"content":"            timeList \u003d formatOnesHour(onesHour);"},{"lineNumber":140,"author":{"gitId":"cheunggalen"},"content":"        } else {"},{"lineNumber":141,"author":{"gitId":"cheunggalen"},"content":"            timeList \u003d formatTensHour(tensHour, onesHour);"},{"lineNumber":142,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"cheunggalen"},"content":"        String min \u003d \":\";"},{"lineNumber":144,"author":{"gitId":"cheunggalen"},"content":"        if (tensMin \u003d\u003d 0) {"},{"lineNumber":145,"author":{"gitId":"cheunggalen"},"content":"            min +\u003d \"0\";"},{"lineNumber":146,"author":{"gitId":"cheunggalen"},"content":"        } else {"},{"lineNumber":147,"author":{"gitId":"cheunggalen"},"content":"            min +\u003d String.valueOf(tensMin);"},{"lineNumber":148,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"cheunggalen"},"content":"        min +\u003d String.valueOf(onesMin);"},{"lineNumber":150,"author":{"gitId":"cheunggalen"},"content":"        return timeList.get(0) + min + timeList.get(1);"},{"lineNumber":151,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":153,"author":{"gitId":"cheunggalen"},"content":"    @Override"},{"lineNumber":154,"author":{"gitId":"cheunggalen"},"content":"    public String toString() {"},{"lineNumber":155,"author":{"gitId":"cheunggalen"},"content":"        String output \u003d \"\";"},{"lineNumber":156,"author":{"gitId":"cheunggalen"},"content":"        if (symbol.equals(\"[D]\")) {"},{"lineNumber":157,"author":{"gitId":"cheunggalen"},"content":"            output +\u003d \"(by: \" + date + \", \" + time + \")\";"},{"lineNumber":158,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":159,"author":{"gitId":"cheunggalen"},"content":"        if (symbol.equals(\"[E]\")) {"},{"lineNumber":160,"author":{"gitId":"cheunggalen"},"content":"            output +\u003d \"(at: \" + date + \", \" + time + \")\";"},{"lineNumber":161,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"cheunggalen"},"content":"        output \u003d description + output;"},{"lineNumber":163,"author":{"gitId":"cheunggalen"},"content":"        if (isDone) {"},{"lineNumber":164,"author":{"gitId":"cheunggalen"},"content":"            return symbol + \" [/] \" + output;"},{"lineNumber":165,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":166,"author":{"gitId":"cheunggalen"},"content":"        return symbol + \" [] \" + output;"},{"lineNumber":167,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":168}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":" * Keeps track of all Tasks in a list."},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":" */"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"    private final List\u003cTask\u003e taskList;"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"    public TaskList() {"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"        taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"     * Get a specific task from the list."},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"     * @param index The position of the task in the list."},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"     * @return The task at the given index."},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"    public Task getTask(int index) {"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"        return taskList.get(index);"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"     * Add a task to the list."},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"     * @param task The added task."},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"    public void addTask(Task task) {"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"        taskList.add(task);"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"     * Delete a specific task from the list."},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"     * @param index The position of the task in the list."},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"     * @return The removed task."},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"    public Task deleteTask(int index) {"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"        Task deletedTask \u003d getTask(index);"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"        taskList.remove(index);"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"        return deletedTask;"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"     * Mark the task at the given index as done."},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"     * @param index The position of a task in the list."},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"    public Task markTaskAsDone(int index) {"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"        Task completedTask \u003d getTask(index).markAsDone();"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"        taskList.set(index, completedTask);"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"        return completedTask;"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"     * Get the number of tasks in the list."},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"     * @return The number of tasks in the list."},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"    public int numOfTasks() {"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"        return taskList.size();"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":"     * list down all tasks in the list."},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"     * @return the list of all tasks."},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"cheunggalen"},"content":"    public String listAllTasks() {"},{"lineNumber":67,"author":{"gitId":"cheunggalen"},"content":"        StringBuilder list \u003d new StringBuilder();"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"        int taskNumber \u003d 1;"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"        for (Task task : taskList) {"},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"            list.append(taskNumber).append(\". \").append(task.toString()).append(\"\\n\");"},{"lineNumber":71,"author":{"gitId":"cheunggalen"},"content":"            taskNumber++;"},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"cheunggalen"},"content":"        return list.toString();"},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":"     * Checks if the task list has the given task."},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"     * @param givenTask The given task."},{"lineNumber":79,"author":{"gitId":"cheunggalen"},"content":"     * @return True if the task list has the given task, false otherwise."},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"cheunggalen"},"content":"    public boolean hasTask(Task givenTask) {"},{"lineNumber":82,"author":{"gitId":"cheunggalen"},"content":"        String givenTaskString \u003d givenTask.toString();"},{"lineNumber":83,"author":{"gitId":"cheunggalen"},"content":"        for (Task task : taskList) {"},{"lineNumber":84,"author":{"gitId":"cheunggalen"},"content":"            String taskString \u003d task.toString();"},{"lineNumber":85,"author":{"gitId":"cheunggalen"},"content":"            if (taskString.equals(givenTaskString)) {"},{"lineNumber":86,"author":{"gitId":"cheunggalen"},"content":"                return true;"},{"lineNumber":87,"author":{"gitId":"cheunggalen"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"cheunggalen"},"content":"        return false;"},{"lineNumber":90,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":91}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":" * A type of Task."},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":" */"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"    public Todo(String description) {"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"        super(description, \"\", \"\", \"[T]\", false);"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":10}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":" * Deals with the interactions with users."},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":" */"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"     * Greets the user and showcases the DUKE logo."},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"    public String greet() {"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"        return \"Hi! I\u0027m DUKE, your task manager. What can I do for you?\";"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"     * lists out all the tasks in the task list."},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"     * @param list The task list."},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"     * @return All the tasks in the task list."},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"    public String provideList(String list) {"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"        return \"Here are the tasks in your list:\\n\" + list;"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"     * Informs the user that the task has been added and the number of tasks in the task list."},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"     * @param task The added task."},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"     * @param numOfTasks The number of tasks in the task list."},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"     * @return The added task and number of tasks in the task list."},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"    public String addTaskReply(String task, String numOfTasks) {"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + task + \"\\n\" + \"Now you have \" + numOfTasks + \" tasks in the list.\";"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"     * Informs the user that the task has been marked as done."},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"     * @param task The task marked as done."},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"     * @return The completed task."},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"    public String markAsDoneReply(String task) {"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\" + task;"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"     * Informs the user that the task has been deleted and the number of tasks left in the task list."},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"     * @param task The deleted task."},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"     * @param numOfTasks The number of tasks left in the task list."},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"     * @return The deleted task and number of tasks left in the task list."},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"    public String deleteTaskReply(String task, String numOfTasks) {"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\" + task + \"\\n\" + \"Now you have \" + numOfTasks + \" tasks in the list.\";"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"     * Informs the user that all the task has been deleted from the list."},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"     * @return The deletion of all tasks."},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"    public String deleteAllReply() {"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"        return \"Noted. I\u0027ve removed all the tasks from the list.\";"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"     * lists out all the tasks with descriptions containing the search word from the task list."},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":"     * @param tasks The matching tasks."},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"     * @return The matching tasks."},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"cheunggalen"},"content":"    public String findWordReply(String tasks) {"},{"lineNumber":67,"author":{"gitId":"cheunggalen"},"content":"        return \"Here are the matching tasks in your list:\\n\" + tasks;"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"cheunggalen"},"content":"     * Informs the user that there are no tasks with descriptions containing the search word from the task list."},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"     * @return The response that there are no matching tasks."},{"lineNumber":73,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":"    public String wordNotFoundReply() {"},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":"        return \"Your list does not contain this word.\";"},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"cheunggalen"},"content":"     * Informs the user that they did not input a description."},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":"     * @return The warning of an empty description."},{"lineNumber":81,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"cheunggalen"},"content":"    public String missingDescriptionReply() {"},{"lineNumber":83,"author":{"gitId":"cheunggalen"},"content":"        return \"The description cannot be empty.\";"},{"lineNumber":84,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":86,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"cheunggalen"},"content":"     * Informs the user that they did not input a date."},{"lineNumber":88,"author":{"gitId":"cheunggalen"},"content":"     * @return The warning of an empty date."},{"lineNumber":89,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"cheunggalen"},"content":"    public String missingDateReply() {"},{"lineNumber":91,"author":{"gitId":"cheunggalen"},"content":"        return \"The date cannot be empty.\";"},{"lineNumber":92,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":94,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"cheunggalen"},"content":"     * Informs the user that they did not input a time."},{"lineNumber":96,"author":{"gitId":"cheunggalen"},"content":"     * @return The warning of an empty time."},{"lineNumber":97,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"cheunggalen"},"content":"    public String missingTimeReply() {"},{"lineNumber":99,"author":{"gitId":"cheunggalen"},"content":"        return \"The time cannot be empty.\";"},{"lineNumber":100,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":102,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":103,"author":{"gitId":"cheunggalen"},"content":"     * Informs the user that they did not input a line number."},{"lineNumber":104,"author":{"gitId":"cheunggalen"},"content":"     * @return The warning of an empty line number."},{"lineNumber":105,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"cheunggalen"},"content":"    public String missingLineNumberReply() {"},{"lineNumber":107,"author":{"gitId":"cheunggalen"},"content":"        return \"The line number cannot be empty.\";"},{"lineNumber":108,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":110,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"cheunggalen"},"content":"     * Informs the user that they did not input a search word."},{"lineNumber":112,"author":{"gitId":"cheunggalen"},"content":"     * @return The warning of an empty search word."},{"lineNumber":113,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"cheunggalen"},"content":"    public String missingSearchWordReply() {"},{"lineNumber":115,"author":{"gitId":"cheunggalen"},"content":"        return \"The word cannot be empty.\";"},{"lineNumber":116,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":118,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"cheunggalen"},"content":"     * Informs the user that they inputted an invalid line number."},{"lineNumber":120,"author":{"gitId":"cheunggalen"},"content":"     * @return The warning of an invalid line number."},{"lineNumber":121,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":122,"author":{"gitId":"cheunggalen"},"content":"    public String invalidLineReply() {"},{"lineNumber":123,"author":{"gitId":"cheunggalen"},"content":"        return \"Invalid line number.\";"},{"lineNumber":124,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":126,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":127,"author":{"gitId":"cheunggalen"},"content":"     * Informs the user that they inputted an invalid command."},{"lineNumber":128,"author":{"gitId":"cheunggalen"},"content":"     * @return The warning of an invalid command."},{"lineNumber":129,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":130,"author":{"gitId":"cheunggalen"},"content":"    public String invalidCommandReply() {"},{"lineNumber":131,"author":{"gitId":"cheunggalen"},"content":"        return \"Invalid command. Please try again.\";"},{"lineNumber":132,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":134,"author":{"gitId":"cheunggalen"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"cheunggalen"},"content":"     * Informs the user that the task they are adding already exists in the task list."},{"lineNumber":136,"author":{"gitId":"cheunggalen"},"content":"     * @return The warning that the task already exist."},{"lineNumber":137,"author":{"gitId":"cheunggalen"},"content":"     */"},{"lineNumber":138,"author":{"gitId":"cheunggalen"},"content":"    public String detectDuplicateReply(String task) {"},{"lineNumber":139,"author":{"gitId":"cheunggalen"},"content":"        return \"This task: \\\"\" + task + \"\\\" already exists in the list.\";"},{"lineNumber":140,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":141}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"cheunggalen":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"cheunggalen":19}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"import duke.Deadline;"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"import duke.Event;"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import duke.TaskList;"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"import duke.Todo;"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"public class TaskListTest {"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"    TaskList taskList \u003d new TaskList();"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"    Todo todo \u003d new Todo(\"read book\");"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"    Deadline deadline \u003d new Deadline(\"deadline return book\", \"7/2/2021\", \"1700\");"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":"    Event event \u003d new Event(\"event team meeting\", \"8/2/2021\", \"1400-1600\");"},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"    public void numOfTask() {"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"        taskList.addTask(todo);"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"        taskList.addTask(deadline);"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"        taskList.addTask(event);"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(3, taskList.numOfTasks());"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":22}},{"path":"src/test/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"import duke.Task;"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"public class TaskTest {"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"    Task task \u003d new Task(\"todo read book\", \"1/2/2021\", \"1400\", \"[T]\", true);"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"    public void testFormatDate() {"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"        task.formatDate();"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(\"1 Feb 2021\", task.getDate());"},{"lineNumber":12,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":14,"author":{"gitId":"cheunggalen"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"    public void testFormatTime() {"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"        String time \u003d task.getTime();"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"        String formattedTime \u003d task.formatTime(time);"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"        task.setTime(formattedTime);"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"        assertEquals(\"2:00pm\", task.getTime());"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"}"}],"authorContributionMap":{"cheunggalen":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"event project meeting /at: Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"todo borrow book"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"done 4"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"list"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"delete 3"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"blah"}],"authorContributionMap":{"cheunggalen":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"javac  -cp \\Users\\galen\\cs2103t\\ip\\src\\main\\java -Xlint:none -d ..\\bin \\Users\\galen\\cs2103t\\ip\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"cheunggalen":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"if ! javac -cp /Users/galen/cs2103t/ip/src/main/java -Xlint:none -d ../bin /Users/galen/cs2103t/ip/src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"cheunggalen":1,"-":37}}]
