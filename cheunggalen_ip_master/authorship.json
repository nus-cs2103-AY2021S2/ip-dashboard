[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"    public static void main(String[] args) throws TodoException, DeadlineException, EventException, UnknownException {"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":15,"author":{"gitId":"cheunggalen"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"        while (true) {"},{"lineNumber":17,"author":{"gitId":"cheunggalen"},"content":"            String command \u003d sc.nextLine();"},{"lineNumber":18,"author":{"gitId":"cheunggalen"},"content":"            if (command.equals(\"list\")) {"},{"lineNumber":19,"author":{"gitId":"cheunggalen"},"content":"                System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":20,"author":{"gitId":"cheunggalen"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":21,"author":{"gitId":"cheunggalen"},"content":"                    System.out.println(i + 1 + \".\" + tasks.get(i).toString());"},{"lineNumber":22,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":23,"author":{"gitId":"cheunggalen"},"content":"            } else if (command.contains(\"todo\")) {"},{"lineNumber":24,"author":{"gitId":"cheunggalen"},"content":"                String[] line \u003d command.split(\" \");"},{"lineNumber":25,"author":{"gitId":"cheunggalen"},"content":"                int length \u003d line.length;"},{"lineNumber":26,"author":{"gitId":"cheunggalen"},"content":"                if (length \u003d\u003d 1) {"},{"lineNumber":27,"author":{"gitId":"cheunggalen"},"content":"                    throw new TodoException(\":( OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":28,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":29,"author":{"gitId":"cheunggalen"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":30,"author":{"gitId":"cheunggalen"},"content":"                String description \u003d \"\";"},{"lineNumber":31,"author":{"gitId":"cheunggalen"},"content":"                for (int i \u003d 1; i \u003c length; i++) {"},{"lineNumber":32,"author":{"gitId":"cheunggalen"},"content":"                    if (i + 1 !\u003d length) {"},{"lineNumber":33,"author":{"gitId":"cheunggalen"},"content":"                        description +\u003d line[i] + \" \";"},{"lineNumber":34,"author":{"gitId":"cheunggalen"},"content":"                    } else {"},{"lineNumber":35,"author":{"gitId":"cheunggalen"},"content":"                        description +\u003d line[i];"},{"lineNumber":36,"author":{"gitId":"cheunggalen"},"content":"                    }"},{"lineNumber":37,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":38,"author":{"gitId":"cheunggalen"},"content":"                Todo todo \u003d new Todo(description);"},{"lineNumber":39,"author":{"gitId":"cheunggalen"},"content":"                tasks.add(todo);"},{"lineNumber":40,"author":{"gitId":"cheunggalen"},"content":"                System.out.println(todo.toString());"},{"lineNumber":41,"author":{"gitId":"cheunggalen"},"content":"                System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":42,"author":{"gitId":"cheunggalen"},"content":"            } else if (command.contains(\"deadline\")) {"},{"lineNumber":43,"author":{"gitId":"cheunggalen"},"content":"                String[] line \u003d command.split(\" \");"},{"lineNumber":44,"author":{"gitId":"cheunggalen"},"content":"                int length \u003d line.length;"},{"lineNumber":45,"author":{"gitId":"cheunggalen"},"content":"                if (length \u003d\u003d 1) {"},{"lineNumber":46,"author":{"gitId":"cheunggalen"},"content":"                    throw new DeadlineException(\":( OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":47,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":48,"author":{"gitId":"cheunggalen"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":49,"author":{"gitId":"cheunggalen"},"content":"                String description \u003d \"\";"},{"lineNumber":50,"author":{"gitId":"cheunggalen"},"content":"                String date \u003d \"\";"},{"lineNumber":51,"author":{"gitId":"cheunggalen"},"content":"                boolean isDesc \u003d true;"},{"lineNumber":52,"author":{"gitId":"cheunggalen"},"content":"                for (int i \u003d 1; i \u003c length; i++) {"},{"lineNumber":53,"author":{"gitId":"cheunggalen"},"content":"                    if (line[i].equals(\"/by\")) {"},{"lineNumber":54,"author":{"gitId":"cheunggalen"},"content":"                        isDesc \u003d false;"},{"lineNumber":55,"author":{"gitId":"cheunggalen"},"content":"                    } else if (i + 1 \u003d\u003d length) {"},{"lineNumber":56,"author":{"gitId":"cheunggalen"},"content":"                        if (isDesc) {"},{"lineNumber":57,"author":{"gitId":"cheunggalen"},"content":"                            description +\u003d line[i];"},{"lineNumber":58,"author":{"gitId":"cheunggalen"},"content":"                        } else {"},{"lineNumber":59,"author":{"gitId":"cheunggalen"},"content":"                            date +\u003d line[i];"},{"lineNumber":60,"author":{"gitId":"cheunggalen"},"content":"                        }"},{"lineNumber":61,"author":{"gitId":"cheunggalen"},"content":"                    } else {"},{"lineNumber":62,"author":{"gitId":"cheunggalen"},"content":"                        if (isDesc) {"},{"lineNumber":63,"author":{"gitId":"cheunggalen"},"content":"                            description +\u003d line[i] + \" \";"},{"lineNumber":64,"author":{"gitId":"cheunggalen"},"content":"                        } else {"},{"lineNumber":65,"author":{"gitId":"cheunggalen"},"content":"                            date +\u003d line[i] + \" \";"},{"lineNumber":66,"author":{"gitId":"cheunggalen"},"content":"                        }"},{"lineNumber":67,"author":{"gitId":"cheunggalen"},"content":"                    }"},{"lineNumber":68,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":69,"author":{"gitId":"cheunggalen"},"content":"                Deadline deadline \u003d new Deadline(description, date);"},{"lineNumber":70,"author":{"gitId":"cheunggalen"},"content":"                tasks.add(deadline);"},{"lineNumber":71,"author":{"gitId":"cheunggalen"},"content":"                System.out.println(deadline.toString());"},{"lineNumber":72,"author":{"gitId":"cheunggalen"},"content":"                System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":73,"author":{"gitId":"cheunggalen"},"content":"            } else if (command.contains(\"event\")) {"},{"lineNumber":74,"author":{"gitId":"cheunggalen"},"content":"                String[] line \u003d command.split(\" \");"},{"lineNumber":75,"author":{"gitId":"cheunggalen"},"content":"                int length \u003d line.length;"},{"lineNumber":76,"author":{"gitId":"cheunggalen"},"content":"                if (length \u003d\u003d 1) {"},{"lineNumber":77,"author":{"gitId":"cheunggalen"},"content":"                    throw new EventException(\":( OOPS!!! The description of a event cannot be empty.\");"},{"lineNumber":78,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":79,"author":{"gitId":"cheunggalen"},"content":"                System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":80,"author":{"gitId":"cheunggalen"},"content":"                String description \u003d \"\";"},{"lineNumber":81,"author":{"gitId":"cheunggalen"},"content":"                String time \u003d \"\";"},{"lineNumber":82,"author":{"gitId":"cheunggalen"},"content":"                boolean isDesc \u003d true;"},{"lineNumber":83,"author":{"gitId":"cheunggalen"},"content":"                for (int i \u003d 1; i \u003c length; i++) {"},{"lineNumber":84,"author":{"gitId":"cheunggalen"},"content":"                    if (line[i].equals(\"/at\")) {"},{"lineNumber":85,"author":{"gitId":"cheunggalen"},"content":"                        isDesc \u003d false;"},{"lineNumber":86,"author":{"gitId":"cheunggalen"},"content":"                    } else if (i + 1 \u003d\u003d length) {"},{"lineNumber":87,"author":{"gitId":"cheunggalen"},"content":"                        if (isDesc) {"},{"lineNumber":88,"author":{"gitId":"cheunggalen"},"content":"                            description +\u003d line[i];"},{"lineNumber":89,"author":{"gitId":"cheunggalen"},"content":"                        } else {"},{"lineNumber":90,"author":{"gitId":"cheunggalen"},"content":"                            time +\u003d line[i];"},{"lineNumber":91,"author":{"gitId":"cheunggalen"},"content":"                        }"},{"lineNumber":92,"author":{"gitId":"cheunggalen"},"content":"                    } else {"},{"lineNumber":93,"author":{"gitId":"cheunggalen"},"content":"                        if (isDesc) {"},{"lineNumber":94,"author":{"gitId":"cheunggalen"},"content":"                            description +\u003d line[i] + \" \";"},{"lineNumber":95,"author":{"gitId":"cheunggalen"},"content":"                        } else {"},{"lineNumber":96,"author":{"gitId":"cheunggalen"},"content":"                            time +\u003d line[i] + \" \";"},{"lineNumber":97,"author":{"gitId":"cheunggalen"},"content":"                        }"},{"lineNumber":98,"author":{"gitId":"cheunggalen"},"content":"                    }"},{"lineNumber":99,"author":{"gitId":"cheunggalen"},"content":"                }"},{"lineNumber":100,"author":{"gitId":"cheunggalen"},"content":"                Event event \u003d new Event(description, time);"},{"lineNumber":101,"author":{"gitId":"cheunggalen"},"content":"                tasks.add(event);"},{"lineNumber":102,"author":{"gitId":"cheunggalen"},"content":"                System.out.println(event.toString());"},{"lineNumber":103,"author":{"gitId":"cheunggalen"},"content":"                System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":104,"author":{"gitId":"cheunggalen"},"content":"            } else if (command.contains(\"done\")) {"},{"lineNumber":105,"author":{"gitId":"cheunggalen"},"content":"                String[] line \u003d command.split(\" \");"},{"lineNumber":106,"author":{"gitId":"cheunggalen"},"content":"                int number \u003d Integer.parseInt(line[1]) - 1;"},{"lineNumber":107,"author":{"gitId":"cheunggalen"},"content":"                tasks.get(number).markAsDone();"},{"lineNumber":108,"author":{"gitId":"cheunggalen"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":109,"author":{"gitId":"cheunggalen"},"content":"                System.out.println(tasks.get(number).toString());"},{"lineNumber":110,"author":{"gitId":"cheunggalen"},"content":"            } else if (command.contains(\"delete\")) {"},{"lineNumber":111,"author":{"gitId":"cheunggalen"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":112,"author":{"gitId":"cheunggalen"},"content":"                String[] line \u003d command.split(\" \");"},{"lineNumber":113,"author":{"gitId":"cheunggalen"},"content":"                int number \u003d Integer.parseInt(line[1]) - 1;"},{"lineNumber":114,"author":{"gitId":"cheunggalen"},"content":"                Task removedTask \u003d tasks.remove(number);"},{"lineNumber":115,"author":{"gitId":"cheunggalen"},"content":"                System.out.println(removedTask.toString());"},{"lineNumber":116,"author":{"gitId":"cheunggalen"},"content":"                System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":117,"author":{"gitId":"cheunggalen"},"content":"            } else if (command.equals(\"bye\")) {"},{"lineNumber":118,"author":{"gitId":"cheunggalen"},"content":"                System.out.println(\"Bye! Hope to see you again soon!\");"},{"lineNumber":119,"author":{"gitId":"cheunggalen"},"content":"                break;"},{"lineNumber":120,"author":{"gitId":"cheunggalen"},"content":"            } else {"},{"lineNumber":121,"author":{"gitId":"cheunggalen"},"content":"                throw new UnknownException(\":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":122,"author":{"gitId":"cheunggalen"},"content":"            }"},{"lineNumber":123,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"cheunggalen"},"content":"        System.exit(0);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"-"},"content":"}"},{"lineNumber":127,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":128,"author":{"gitId":"cheunggalen"},"content":"class Task {"},{"lineNumber":129,"author":{"gitId":"cheunggalen"},"content":"    private String description;"},{"lineNumber":130,"author":{"gitId":"cheunggalen"},"content":"    private Boolean isDone;"},{"lineNumber":131,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":132,"author":{"gitId":"cheunggalen"},"content":"    public Task(String description) {"},{"lineNumber":133,"author":{"gitId":"cheunggalen"},"content":"        this.description \u003d description;"},{"lineNumber":134,"author":{"gitId":"cheunggalen"},"content":"        this.isDone \u003d false;"},{"lineNumber":135,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":137,"author":{"gitId":"cheunggalen"},"content":"    public void markAsDone() {"},{"lineNumber":138,"author":{"gitId":"cheunggalen"},"content":"        this.isDone \u003d true;"},{"lineNumber":139,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":141,"author":{"gitId":"cheunggalen"},"content":"    @Override"},{"lineNumber":142,"author":{"gitId":"cheunggalen"},"content":"    public String toString() {"},{"lineNumber":143,"author":{"gitId":"cheunggalen"},"content":"        if (this.isDone) {"},{"lineNumber":144,"author":{"gitId":"cheunggalen"},"content":"            return \"[X] \" + this.description;"},{"lineNumber":145,"author":{"gitId":"cheunggalen"},"content":"        } else {"},{"lineNumber":146,"author":{"gitId":"cheunggalen"},"content":"            return \"[ ] \" + this.description;"},{"lineNumber":147,"author":{"gitId":"cheunggalen"},"content":"        }"},{"lineNumber":148,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"cheunggalen"},"content":"}"},{"lineNumber":150,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":151,"author":{"gitId":"cheunggalen"},"content":"class Todo extends Task {"},{"lineNumber":152,"author":{"gitId":"cheunggalen"},"content":"    public Todo(String description) {"},{"lineNumber":153,"author":{"gitId":"cheunggalen"},"content":"        super(description);"},{"lineNumber":154,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":156,"author":{"gitId":"cheunggalen"},"content":"    @Override"},{"lineNumber":157,"author":{"gitId":"cheunggalen"},"content":"    public String toString() {"},{"lineNumber":158,"author":{"gitId":"cheunggalen"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":159,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"cheunggalen"},"content":"}"},{"lineNumber":161,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":162,"author":{"gitId":"cheunggalen"},"content":"class Deadline extends Task {"},{"lineNumber":163,"author":{"gitId":"cheunggalen"},"content":"    private String date;"},{"lineNumber":164,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":165,"author":{"gitId":"cheunggalen"},"content":"    public Deadline(String description, String date) {"},{"lineNumber":166,"author":{"gitId":"cheunggalen"},"content":"        super(description);"},{"lineNumber":167,"author":{"gitId":"cheunggalen"},"content":"        this.date \u003d date;"},{"lineNumber":168,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":170,"author":{"gitId":"cheunggalen"},"content":"    @Override"},{"lineNumber":171,"author":{"gitId":"cheunggalen"},"content":"    public String toString() {"},{"lineNumber":172,"author":{"gitId":"cheunggalen"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.date + \")\";"},{"lineNumber":173,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"cheunggalen"},"content":"}"},{"lineNumber":175,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":176,"author":{"gitId":"cheunggalen"},"content":"class Event extends Task {"},{"lineNumber":177,"author":{"gitId":"cheunggalen"},"content":"    private String time;"},{"lineNumber":178,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":179,"author":{"gitId":"cheunggalen"},"content":"    public Event(String description, String time) {"},{"lineNumber":180,"author":{"gitId":"cheunggalen"},"content":"        super(description);"},{"lineNumber":181,"author":{"gitId":"cheunggalen"},"content":"        this.time \u003d time;"},{"lineNumber":182,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":184,"author":{"gitId":"cheunggalen"},"content":"    @Override"},{"lineNumber":185,"author":{"gitId":"cheunggalen"},"content":"    public String toString() {"},{"lineNumber":186,"author":{"gitId":"cheunggalen"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + this.time + \")\";"},{"lineNumber":187,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"cheunggalen"},"content":"}"},{"lineNumber":189,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":190,"author":{"gitId":"cheunggalen"},"content":"class DukeException extends Exception {"},{"lineNumber":191,"author":{"gitId":"cheunggalen"},"content":"    public DukeException(String error) {"},{"lineNumber":192,"author":{"gitId":"cheunggalen"},"content":"        super(error);"},{"lineNumber":193,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"cheunggalen"},"content":"}"},{"lineNumber":195,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":196,"author":{"gitId":"cheunggalen"},"content":"class TodoException extends DukeException {"},{"lineNumber":197,"author":{"gitId":"cheunggalen"},"content":"    public TodoException(String error) {"},{"lineNumber":198,"author":{"gitId":"cheunggalen"},"content":"        super(error);"},{"lineNumber":199,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":200,"author":{"gitId":"cheunggalen"},"content":"}"},{"lineNumber":201,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":202,"author":{"gitId":"cheunggalen"},"content":"class DeadlineException extends DukeException {"},{"lineNumber":203,"author":{"gitId":"cheunggalen"},"content":"    public DeadlineException(String error) {"},{"lineNumber":204,"author":{"gitId":"cheunggalen"},"content":"        super(error);"},{"lineNumber":205,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":206,"author":{"gitId":"cheunggalen"},"content":"}"},{"lineNumber":207,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":208,"author":{"gitId":"cheunggalen"},"content":"class EventException extends DukeException {"},{"lineNumber":209,"author":{"gitId":"cheunggalen"},"content":"    public EventException(String error) {"},{"lineNumber":210,"author":{"gitId":"cheunggalen"},"content":"        super(error);"},{"lineNumber":211,"author":{"gitId":"cheunggalen"},"content":"    }"},{"lineNumber":212,"author":{"gitId":"cheunggalen"},"content":"}"},{"lineNumber":213,"author":{"gitId":"cheunggalen"},"content":""},{"lineNumber":214,"author":{"gitId":"cheunggalen"},"content":"class UnknownException extends DukeException {"},{"lineNumber":215,"author":{"gitId":"cheunggalen"},"content":"    public UnknownException(String error) {"},{"lineNumber":216,"author":{"gitId":"cheunggalen"},"content":"        super(error);"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"cheunggalen":207,"-":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"cheunggalen"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"cheunggalen"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"cheunggalen"},"content":"event project meeting /at: Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"cheunggalen"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"cheunggalen"},"content":"todo borrow book"},{"lineNumber":6,"author":{"gitId":"cheunggalen"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"cheunggalen"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"cheunggalen"},"content":"done 4"},{"lineNumber":9,"author":{"gitId":"cheunggalen"},"content":"list"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"delete 3"},{"lineNumber":11,"author":{"gitId":"cheunggalen"},"content":"blah"}],"authorContributionMap":{"cheunggalen":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"cheunggalen"},"content":"javac  -cp \\Users\\galen\\cs2103t\\ip\\src\\main\\java -Xlint:none -d ..\\bin \\Users\\galen\\cs2103t\\ip\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"cheunggalen":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"cheunggalen"},"content":"if ! javac -cp /Users/galen/cs2103t/ip/src/main/java -Xlint:none -d ../bin /Users/galen/cs2103t/ip/src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"cheunggalen":1,"-":37}}]
