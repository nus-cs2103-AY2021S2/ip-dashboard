[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":2,"author":{"gitId":"jared98lyj"},"content":"plugins {"},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":"    id \u0027java\u0027"},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":"    id \u0027application\u0027"},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027"},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":"}"},{"lineNumber":9,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":"application {"},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":"}"},{"lineNumber":13,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":14,"author":{"gitId":"jared98lyj"},"content":"shadowJar {"},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"    archiveClassifier \u003d null"},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":"}"},{"lineNumber":18,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":19,"author":{"gitId":"jared98lyj"},"content":"repositories {"},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":"    mavenCentral()"},{"lineNumber":21,"author":{"gitId":"jared98lyj"},"content":"}"},{"lineNumber":22,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":"test {"},{"lineNumber":24,"author":{"gitId":"jared98lyj"},"content":"    useJUnitPlatform()"},{"lineNumber":25,"author":{"gitId":"jared98lyj"},"content":"}"},{"lineNumber":26,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":27,"author":{"gitId":"jared98lyj"},"content":"dependencies {"},{"lineNumber":28,"author":{"gitId":"jared98lyj"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":29,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":30,"author":{"gitId":"jared98lyj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":31,"author":{"gitId":"jared98lyj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":32,"author":{"gitId":"jared98lyj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":33,"author":{"gitId":"jared98lyj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":34,"author":{"gitId":"jared98lyj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":35,"author":{"gitId":"jared98lyj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":36,"author":{"gitId":"jared98lyj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":37,"author":{"gitId":"jared98lyj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":38,"author":{"gitId":"jared98lyj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":39,"author":{"gitId":"jared98lyj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":40,"author":{"gitId":"jared98lyj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":41,"author":{"gitId":"jared98lyj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":42,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":43,"author":{"gitId":"jared98lyj"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":44,"author":{"gitId":"jared98lyj"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":45,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":46,"author":{"gitId":"jared98lyj"},"content":"}"}],"authorContributionMap":{"jared98lyj":46}},{"path":"data/Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":"T||borrow book"},{"lineNumber":2,"author":{"gitId":"jared98lyj"},"content":"E||meet friend | wed 2pm"},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":"D|X|return book |2020-08-25"},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":"T||hello world"}],"authorContributionMap":{"jared98lyj":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"jared98lyj"},"content":"JDK 11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":"### Command based Response"},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"Bot that takes in a list of tasks to do and stores it in a list. "},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":"Tasks that are"},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":"done are marked as done with a cross. "},{"lineNumber":9,"author":{"gitId":"jared98lyj"},"content":"#### Commands"},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":"list - lists all existing tasks"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":"todo, deadline, event {some task} - creates the respective task"},{"lineNumber":13,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":14,"author":{"gitId":"jared98lyj"},"content":"delete {index} - deletes the respective task"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"find {keyword} {search type (optional)} - retrieves matching task according to keyword "},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":"and optional search parameter (p, pi, f)"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"jared98lyj"},"content":"done {index} - marks task as done"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":"### `Keyword` `task to be added` `date if present` "},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"jared98lyj"},"content":"### Adding a todo task Read book"},{"lineNumber":28,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":29,"author":{"gitId":"jared98lyj"},"content":"`todo Read book`"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"jared98lyj"},"content":"Retrieving the list by typing the string list as input will give:"},{"lineNumber":34,"author":{"gitId":"jared98lyj"},"content":"Here are the tasks in your list:"},{"lineNumber":35,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":36,"author":{"gitId":"jared98lyj"},"content":"### Marking the todo task as done"},{"lineNumber":37,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":38,"author":{"gitId":"jared98lyj"},"content":"1.[T][] Read book"},{"lineNumber":39,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":40,"author":{"gitId":"jared98lyj"},"content":"`done 1`"},{"lineNumber":41,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":42,"author":{"gitId":"jared98lyj"},"content":"Expected Outcome:"},{"lineNumber":43,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":44,"author":{"gitId":"jared98lyj"},"content":"Nice! I\u0027ve marked this task as done:"},{"lineNumber":45,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":46,"author":{"gitId":"jared98lyj"},"content":"1.[T][X] Read book"},{"lineNumber":47,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":48,"author":{"gitId":"jared98lyj"},"content":"### Deleting the todo task"},{"lineNumber":49,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":50,"author":{"gitId":"jared98lyj"},"content":"`delete 1`"},{"lineNumber":51,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":52,"author":{"gitId":"jared98lyj"},"content":"Noted. I\u0027ve removed this task:"},{"lineNumber":53,"author":{"gitId":"jared98lyj"},"content":"    1.[T][X] Read book"},{"lineNumber":54,"author":{"gitId":"jared98lyj"},"content":"Now you have 0 tasks in your list."},{"lineNumber":55,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":56,"author":{"gitId":"jared98lyj"},"content":""}],"authorContributionMap":{"jared98lyj":41,"-":15}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"jared98lyj"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"jared98lyj"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"jared98lyj"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"jared98lyj"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"jared98lyj"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"jared98lyj"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"jared98lyj"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"jared98lyj"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":24,"author":{"gitId":"jared98lyj"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"jared98lyj"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":27,"author":{"gitId":"jared98lyj"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"jared98lyj"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"jared98lyj"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"jared98lyj"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":32,"author":{"gitId":"jared98lyj"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"jared98lyj"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":35,"author":{"gitId":"jared98lyj"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"jared98lyj"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":38,"author":{"gitId":"jared98lyj"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"jared98lyj"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":41,"author":{"gitId":"jared98lyj"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"jared98lyj"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"jared98lyj"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":44,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":45,"author":{"gitId":"jared98lyj"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"jared98lyj"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"jared98lyj"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"jared98lyj"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"jared98lyj"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":51,"author":{"gitId":"jared98lyj"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":53,"author":{"gitId":"jared98lyj"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"jared98lyj"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"jared98lyj"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":57,"author":{"gitId":"jared98lyj"},"content":"if exist \"%JAVA_EXE%\" goto execute"},{"lineNumber":58,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":59,"author":{"gitId":"jared98lyj"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"jared98lyj"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"jared98lyj"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"jared98lyj"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"jared98lyj"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":65,"author":{"gitId":"jared98lyj"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":67,"author":{"gitId":"jared98lyj"},"content":":execute"},{"lineNumber":68,"author":{"gitId":"jared98lyj"},"content":"@rem Setup the command line"},{"lineNumber":69,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":70,"author":{"gitId":"jared98lyj"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":71,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":72,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":73,"author":{"gitId":"jared98lyj"},"content":"@rem Execute Gradle"},{"lineNumber":74,"author":{"gitId":"jared98lyj"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"},{"lineNumber":75,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":76,"author":{"gitId":"jared98lyj"},"content":":end"},{"lineNumber":77,"author":{"gitId":"jared98lyj"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":78,"author":{"gitId":"jared98lyj"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":79,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":80,"author":{"gitId":"jared98lyj"},"content":":fail"},{"lineNumber":81,"author":{"gitId":"jared98lyj"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":82,"author":{"gitId":"jared98lyj"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":83,"author":{"gitId":"jared98lyj"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":84,"author":{"gitId":"jared98lyj"},"content":"exit /b 1"},{"lineNumber":85,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":86,"author":{"gitId":"jared98lyj"},"content":":mainEnd"},{"lineNumber":87,"author":{"gitId":"jared98lyj"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":88,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":89,"author":{"gitId":"jared98lyj"},"content":":omega"}],"authorContributionMap":{"jared98lyj":89}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"jared98lyj"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":"public class Deadline extends Task {"},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern("},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":"            \"MMM d yyyy\");"},{"lineNumber":9,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":"    private LocalDate date;"},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":"    Deadline(String description) {"},{"lineNumber":13,"author":{"gitId":"jared98lyj"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"    Deadline(String description, String eventDate) {"},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":"        super(description, eventDate);"},{"lineNumber":18,"author":{"gitId":"jared98lyj"},"content":"        formatDate();"},{"lineNumber":19,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":21,"author":{"gitId":"jared98lyj"},"content":"//    public static void main(String[] args) {"},{"lineNumber":22,"author":{"gitId":"jared98lyj"},"content":"//        LocalDate date \u003d LocalDate.parse(\"2019-12-01\");"},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":"//"},{"lineNumber":24,"author":{"gitId":"jared98lyj"},"content":"//        String formattedDate \u003d date.format(formatter);"},{"lineNumber":25,"author":{"gitId":"jared98lyj"},"content":"//        System.out.println(formattedDate);"},{"lineNumber":26,"author":{"gitId":"jared98lyj"},"content":"//    }"},{"lineNumber":27,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":28,"author":{"gitId":"jared98lyj"},"content":"    Deadline(String[] description) {"},{"lineNumber":29,"author":{"gitId":"jared98lyj"},"content":"        super(description[0].substring(9), description[1]);"},{"lineNumber":30,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":32,"author":{"gitId":"jared98lyj"},"content":"    Deadline(String description, String eventDate, boolean isDone) {"},{"lineNumber":33,"author":{"gitId":"jared98lyj"},"content":"        super(description, eventDate, isDone);"},{"lineNumber":34,"author":{"gitId":"jared98lyj"},"content":"        formatDate();"},{"lineNumber":35,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":36,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":38,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"jared98lyj"},"content":"     * Method that formats the date into a standard format and stores it as local date."},{"lineNumber":40,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"jared98lyj"},"content":"    public void formatDate() {"},{"lineNumber":42,"author":{"gitId":"jared98lyj"},"content":"        this.date \u003d LocalDate.parse(this.eventDate);"},{"lineNumber":43,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":45,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"jared98lyj"},"content":"     * Method that returns a standard formatted date."},{"lineNumber":47,"author":{"gitId":"jared98lyj"},"content":"     * @return A formatted date time string."},{"lineNumber":48,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"jared98lyj"},"content":"    public String getDate() {"},{"lineNumber":50,"author":{"gitId":"jared98lyj"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"jared98lyj"},"content":"            return this.date.format(formatter);"},{"lineNumber":52,"author":{"gitId":"jared98lyj"},"content":"        } catch (Exception e) {"},{"lineNumber":53,"author":{"gitId":"jared98lyj"},"content":"            return this.eventDate;"},{"lineNumber":54,"author":{"gitId":"jared98lyj"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":57,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":58,"author":{"gitId":"jared98lyj"},"content":"    @Override"},{"lineNumber":59,"author":{"gitId":"jared98lyj"},"content":"    public String getTaskType() {"},{"lineNumber":60,"author":{"gitId":"jared98lyj"},"content":"        return \"D\";"},{"lineNumber":61,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":63,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"jared98lyj"},"content":"     * Returns formatted string of deadline."},{"lineNumber":65,"author":{"gitId":"jared98lyj"},"content":"     * @return Formatted String representing deadline."},{"lineNumber":66,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"jared98lyj"},"content":"    @Override"},{"lineNumber":68,"author":{"gitId":"jared98lyj"},"content":"    public String toString() {"},{"lineNumber":69,"author":{"gitId":"jared98lyj"},"content":"        return String.format(\"[%s][%s] %s(by: %s)\", this.getTaskType(),"},{"lineNumber":70,"author":{"gitId":"jared98lyj"},"content":"                this.getStatusIcon(), this.getDescription(), this.getDate());"},{"lineNumber":71,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":73,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":74,"author":{"gitId":"jared98lyj"},"content":"}"}],"authorContributionMap":{"jared98lyj":74}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"jared98lyj"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"jared98lyj"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"jared98lyj"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"jared98lyj"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":" * An example of a custom control using FXML."},{"lineNumber":18,"author":{"gitId":"jared98lyj"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":19,"author":{"gitId":"jared98lyj"},"content":" * containing text from the speaker."},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":" */"},{"lineNumber":21,"author":{"gitId":"jared98lyj"},"content":"public class DialogBox extends HBox {"},{"lineNumber":22,"author":{"gitId":"jared98lyj"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":"    private Label dialog;"},{"lineNumber":24,"author":{"gitId":"jared98lyj"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"jared98lyj"},"content":"    private ImageView displayPicture;"},{"lineNumber":26,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":27,"author":{"gitId":"jared98lyj"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":28,"author":{"gitId":"jared98lyj"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"jared98lyj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":30,"author":{"gitId":"jared98lyj"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":31,"author":{"gitId":"jared98lyj"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":32,"author":{"gitId":"jared98lyj"},"content":"            fxmlLoader.load();"},{"lineNumber":33,"author":{"gitId":"jared98lyj"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"jared98lyj"},"content":"            e.printStackTrace();"},{"lineNumber":35,"author":{"gitId":"jared98lyj"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":37,"author":{"gitId":"jared98lyj"},"content":"        dialog.setText(text);"},{"lineNumber":38,"author":{"gitId":"jared98lyj"},"content":"        displayPicture.setImage(img);"},{"lineNumber":39,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":41,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"jared98lyj"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":43,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"jared98lyj"},"content":"    private void flip() {"},{"lineNumber":45,"author":{"gitId":"jared98lyj"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":46,"author":{"gitId":"jared98lyj"},"content":"        Collections.reverse(tmp);"},{"lineNumber":47,"author":{"gitId":"jared98lyj"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":48,"author":{"gitId":"jared98lyj"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":49,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":51,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":52,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"jared98lyj"},"content":"     * Retrieves the user dialog"},{"lineNumber":54,"author":{"gitId":"jared98lyj"},"content":"     * @param text Text to echo"},{"lineNumber":55,"author":{"gitId":"jared98lyj"},"content":"     * @param img PNG img of user"},{"lineNumber":56,"author":{"gitId":"jared98lyj"},"content":"     * @return Dialog box representing the user echo"},{"lineNumber":57,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"jared98lyj"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":59,"author":{"gitId":"jared98lyj"},"content":"        return new DialogBox(text, img);"},{"lineNumber":60,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":62,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"jared98lyj"},"content":"     * Dialog box for Duke bot"},{"lineNumber":64,"author":{"gitId":"jared98lyj"},"content":"     * @param text Text output from Duke"},{"lineNumber":65,"author":{"gitId":"jared98lyj"},"content":"     * @param img PNG img of Duke"},{"lineNumber":66,"author":{"gitId":"jared98lyj"},"content":"     * @return DialogBox for Duke"},{"lineNumber":67,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"jared98lyj"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":69,"author":{"gitId":"jared98lyj"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":70,"author":{"gitId":"jared98lyj"},"content":"        db.flip();"},{"lineNumber":71,"author":{"gitId":"jared98lyj"},"content":"        return db;"},{"lineNumber":72,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"jared98lyj"},"content":"}"}],"authorContributionMap":{"jared98lyj":73}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"jared98lyj"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":" * Driver class that takes in input and performs certain functions based on input."},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":" */"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":"     * Helper method that processes the user input and returns corresponding for the"},{"lineNumber":13,"author":{"gitId":"jared98lyj"},"content":"     * user. GUI version."},{"lineNumber":14,"author":{"gitId":"jared98lyj"},"content":"     * @param command User input, e.g. list, deadline..."},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":"     * @param taskListStored Retrieved task list from local disk"},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"     * @return String to be displayed to user in dialogue box"},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":"     * @throws IOException"},{"lineNumber":18,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"jared98lyj"},"content":"    public String getOutput(String command, List\u003cTask\u003e taskListStored) throws IOException {"},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":21,"author":{"gitId":"jared98lyj"},"content":"        Ui getInput \u003d new Ui();"},{"lineNumber":22,"author":{"gitId":"jared98lyj"},"content":"        TaskList taskList \u003d new TaskList(taskListStored);"},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":24,"author":{"gitId":"jared98lyj"},"content":"        storage.createDirectory();"},{"lineNumber":25,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":26,"author":{"gitId":"jared98lyj"},"content":"        String output \u003d \"\";"},{"lineNumber":27,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":28,"author":{"gitId":"jared98lyj"},"content":"        if (parser.isStart(command)) {"},{"lineNumber":29,"author":{"gitId":"jared98lyj"},"content":"            output \u003d getInput.printStart();"},{"lineNumber":30,"author":{"gitId":"jared98lyj"},"content":"        } else if (parser.isList(command)) {"},{"lineNumber":31,"author":{"gitId":"jared98lyj"},"content":"            output \u003d taskList.enumerateTasks();"},{"lineNumber":32,"author":{"gitId":"jared98lyj"},"content":"        } else if (parser.isDone(command)) {"},{"lineNumber":33,"author":{"gitId":"jared98lyj"},"content":"            String[] taskToDelete \u003d command.split(\"\\\\s+\");"},{"lineNumber":34,"author":{"gitId":"jared98lyj"},"content":"            output \u003d taskList.markAsDone(Integer.parseInt(taskToDelete[1]));"},{"lineNumber":35,"author":{"gitId":"jared98lyj"},"content":"        } else if (parser.isTodo(command)) {"},{"lineNumber":36,"author":{"gitId":"jared98lyj"},"content":"            try {"},{"lineNumber":37,"author":{"gitId":"jared98lyj"},"content":"                Todo currentTask \u003d new Todo(command.substring(5));"},{"lineNumber":38,"author":{"gitId":"jared98lyj"},"content":"                taskList.addToTasks(currentTask);"},{"lineNumber":39,"author":{"gitId":"jared98lyj"},"content":"                output \u003d taskList.logTask(currentTask);"},{"lineNumber":40,"author":{"gitId":"jared98lyj"},"content":"            } catch (StringIndexOutOfBoundsException indexError) {"},{"lineNumber":41,"author":{"gitId":"jared98lyj"},"content":"                output \u003d getInput.outInvalidTodo();"},{"lineNumber":42,"author":{"gitId":"jared98lyj"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"jared98lyj"},"content":"        } else if (parser.isEvent(command)) {"},{"lineNumber":44,"author":{"gitId":"jared98lyj"},"content":"            try {"},{"lineNumber":45,"author":{"gitId":"jared98lyj"},"content":"                String[] splitString \u003d command.split(\"/at\");"},{"lineNumber":46,"author":{"gitId":"jared98lyj"},"content":"                Event currentTask \u003d new Event(splitString);"},{"lineNumber":47,"author":{"gitId":"jared98lyj"},"content":"                taskList.addToTasks(currentTask);"},{"lineNumber":48,"author":{"gitId":"jared98lyj"},"content":"                output \u003d taskList.logTask(currentTask);"},{"lineNumber":49,"author":{"gitId":"jared98lyj"},"content":"            } catch (ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException indexError) {"},{"lineNumber":50,"author":{"gitId":"jared98lyj"},"content":"                output \u003d getInput.outInvalidEvent();"},{"lineNumber":51,"author":{"gitId":"jared98lyj"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"jared98lyj"},"content":"        } else if (parser.isDeadline(command)) {"},{"lineNumber":53,"author":{"gitId":"jared98lyj"},"content":"            try {"},{"lineNumber":54,"author":{"gitId":"jared98lyj"},"content":"                String[] splitString \u003d command.split(\"/by\");"},{"lineNumber":55,"author":{"gitId":"jared98lyj"},"content":"                Deadline currentTask \u003d new Deadline(splitString);"},{"lineNumber":56,"author":{"gitId":"jared98lyj"},"content":"                taskList.addToTasks(currentTask);"},{"lineNumber":57,"author":{"gitId":"jared98lyj"},"content":"                output \u003d taskList.logTask(currentTask);"},{"lineNumber":58,"author":{"gitId":"jared98lyj"},"content":"            } catch (ArrayIndexOutOfBoundsException | StringIndexOutOfBoundsException indexError) {"},{"lineNumber":59,"author":{"gitId":"jared98lyj"},"content":"                output \u003d getInput.outInvalidDeadline();"},{"lineNumber":60,"author":{"gitId":"jared98lyj"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"jared98lyj"},"content":"        } else if (parser.isDelete(command)) {"},{"lineNumber":62,"author":{"gitId":"jared98lyj"},"content":"            try {"},{"lineNumber":63,"author":{"gitId":"jared98lyj"},"content":"                String[] splitString \u003d command.split(\"\\\\s+\");"},{"lineNumber":64,"author":{"gitId":"jared98lyj"},"content":"                output \u003d taskList.removeTask(Integer.parseInt(splitString[1]));"},{"lineNumber":65,"author":{"gitId":"jared98lyj"},"content":"            } catch (ArrayIndexOutOfBoundsException indexError) {"},{"lineNumber":66,"author":{"gitId":"jared98lyj"},"content":"                output \u003d getInput.outInvalidDelete();"},{"lineNumber":67,"author":{"gitId":"jared98lyj"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"jared98lyj"},"content":"        } else if (parser.isFind(command)) {"},{"lineNumber":69,"author":{"gitId":"jared98lyj"},"content":"            try {"},{"lineNumber":70,"author":{"gitId":"jared98lyj"},"content":"                output \u003d taskList.retrieveByKeyword(command);"},{"lineNumber":71,"author":{"gitId":"jared98lyj"},"content":"            } catch (ArrayIndexOutOfBoundsException indexError) {"},{"lineNumber":72,"author":{"gitId":"jared98lyj"},"content":"                output  \u003d getInput.outInvalidFind();"},{"lineNumber":73,"author":{"gitId":"jared98lyj"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"jared98lyj"},"content":"        } else if (parser.isBye(command)) {"},{"lineNumber":75,"author":{"gitId":"jared98lyj"},"content":"            output \u003d getInput.outBye();"},{"lineNumber":76,"author":{"gitId":"jared98lyj"},"content":"        } else if (parser.isHelp(command)) {"},{"lineNumber":77,"author":{"gitId":"jared98lyj"},"content":"            output \u003d getInput.outHelp();"},{"lineNumber":78,"author":{"gitId":"jared98lyj"},"content":"        } else {"},{"lineNumber":79,"author":{"gitId":"jared98lyj"},"content":"            // Command is not recognized"},{"lineNumber":80,"author":{"gitId":"jared98lyj"},"content":"            output \u003d getInput.outNotRecognized();"},{"lineNumber":81,"author":{"gitId":"jared98lyj"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"jared98lyj"},"content":"        // Saving updated tasks to local disk"},{"lineNumber":83,"author":{"gitId":"jared98lyj"},"content":"        storage.saveFile(taskList.logAllTasks());"},{"lineNumber":84,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":85,"author":{"gitId":"jared98lyj"},"content":"        return output;"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":88,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":89,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"jared98lyj"},"content":"     * Main class to take in user input. CLI version."},{"lineNumber":91,"author":{"gitId":"jared98lyj"},"content":"     * @param params Standard user input params"},{"lineNumber":92,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"jared98lyj"},"content":"    public static void main(String[] params) throws IOException {"},{"lineNumber":94,"author":{"gitId":"jared98lyj"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":95,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":96,"author":{"gitId":"jared98lyj"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":97,"author":{"gitId":"jared98lyj"},"content":"        // Starting string to prime the program"},{"lineNumber":98,"author":{"gitId":"jared98lyj"},"content":"        String command \u003d Ui.primer;"},{"lineNumber":99,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":100,"author":{"gitId":"jared98lyj"},"content":"        // Creating directory if it does not exist"},{"lineNumber":101,"author":{"gitId":"jared98lyj"},"content":"        storage.createDirectory();"},{"lineNumber":102,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":103,"author":{"gitId":"jared98lyj"},"content":"        // Loading file from directory if it exists"},{"lineNumber":104,"author":{"gitId":"jared98lyj"},"content":"        List\u003cTask\u003e tempList \u003d storage.loadFile();"},{"lineNumber":105,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":106,"author":{"gitId":"jared98lyj"},"content":"        Duke duke \u003d new Duke();"},{"lineNumber":107,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":108,"author":{"gitId":"jared98lyj"},"content":"        while (!command.startsWith(\"bye\")) {"},{"lineNumber":109,"author":{"gitId":"jared98lyj"},"content":"            System.out.println(duke.getOutput(command, tempList));"},{"lineNumber":110,"author":{"gitId":"jared98lyj"},"content":"            command \u003d sc.nextLine();"},{"lineNumber":111,"author":{"gitId":"jared98lyj"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":114,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":115,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jared98lyj":112,"-":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"jared98lyj"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":"public class Event extends Task {"},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":"    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM\" +"},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":"            \"/yyyy HHmm\");"},{"lineNumber":9,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":"    private LocalDateTime time;"},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"jared98lyj"},"content":"     * Main Constructor."},{"lineNumber":14,"author":{"gitId":"jared98lyj"},"content":"     * @param description Description of given task."},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"    Event(String description) {"},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":"        super(description);"},{"lineNumber":18,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":"    Event(String[] description) {"},{"lineNumber":21,"author":{"gitId":"jared98lyj"},"content":"        super(description[0].substring(6), description[1]);"},{"lineNumber":22,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":24,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"jared98lyj"},"content":"     * Overloaded constructor to account for deadline and events that have timestamps."},{"lineNumber":26,"author":{"gitId":"jared98lyj"},"content":"     * @param description Description of given task."},{"lineNumber":27,"author":{"gitId":"jared98lyj"},"content":"     * @param eventDate Timestamp of given task."},{"lineNumber":28,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"jared98lyj"},"content":"    Event(String description, String eventDate) {"},{"lineNumber":30,"author":{"gitId":"jared98lyj"},"content":"        super(description, eventDate);"},{"lineNumber":31,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":32,"author":{"gitId":"jared98lyj"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"jared98lyj"},"content":"            time \u003d LocalDateTime.parse(eventDate, formatter);"},{"lineNumber":34,"author":{"gitId":"jared98lyj"},"content":"        } catch (Exception e) {"},{"lineNumber":35,"author":{"gitId":"jared98lyj"},"content":"            time \u003d null;"},{"lineNumber":36,"author":{"gitId":"jared98lyj"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":39,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"jared98lyj"},"content":"     * Overloaded constructor to set is done to a specified boolean value."},{"lineNumber":41,"author":{"gitId":"jared98lyj"},"content":"     * @param description Description of given task."},{"lineNumber":42,"author":{"gitId":"jared98lyj"},"content":"     * @param eventDate Date of task."},{"lineNumber":43,"author":{"gitId":"jared98lyj"},"content":"     * @param isDone Boolean whether task has been completed."},{"lineNumber":44,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"jared98lyj"},"content":"    Event(String description, String eventDate, boolean isDone) {"},{"lineNumber":46,"author":{"gitId":"jared98lyj"},"content":"        super(description, eventDate, isDone);"},{"lineNumber":47,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":49,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"jared98lyj"},"content":"     * Retrieving the given task type."},{"lineNumber":51,"author":{"gitId":"jared98lyj"},"content":"     * @return String giving the task type, in this case E."},{"lineNumber":52,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"jared98lyj"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"jared98lyj"},"content":"    public String getTaskType() {"},{"lineNumber":55,"author":{"gitId":"jared98lyj"},"content":"        return \"E\";"},{"lineNumber":56,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":58,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"jared98lyj"},"content":"     * String method of event."},{"lineNumber":60,"author":{"gitId":"jared98lyj"},"content":"     * @return A formatted string of an event."},{"lineNumber":61,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"jared98lyj"},"content":"    @Override"},{"lineNumber":63,"author":{"gitId":"jared98lyj"},"content":"    public String toString() {"},{"lineNumber":64,"author":{"gitId":"jared98lyj"},"content":"        return String.format(\"[%s][%s] %s(at:%s)\", this.getTaskType(),"},{"lineNumber":65,"author":{"gitId":"jared98lyj"},"content":"                this.getStatusIcon(), this.getDescription(), this.getEventDate());"},{"lineNumber":66,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":68,"author":{"gitId":"jared98lyj"},"content":"}"}],"authorContributionMap":{"jared98lyj":68}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":" */"},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":"    public static void main(String[] args) {"},{"lineNumber":9,"author":{"gitId":"jared98lyj"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":"}"}],"authorContributionMap":{"jared98lyj":12}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"import javafx.scene.control.Label;"},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":9,"author":{"gitId":"jared98lyj"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":" * Main class connecting the Duke application and the GUI"},{"lineNumber":13,"author":{"gitId":"jared98lyj"},"content":" */"},{"lineNumber":14,"author":{"gitId":"jared98lyj"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"    // Initializing Duke object."},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":18,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":19,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":"     * Overriding start method of application interface so that we can link the"},{"lineNumber":21,"author":{"gitId":"jared98lyj"},"content":"     * lauuncher to the main program logic in Duke.java"},{"lineNumber":22,"author":{"gitId":"jared98lyj"},"content":"     * @param stage Stage object that contains attributes that helps build the scene"},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"jared98lyj"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"jared98lyj"},"content":"    public void start(Stage stage) {"},{"lineNumber":26,"author":{"gitId":"jared98lyj"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"jared98lyj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":28,"author":{"gitId":"jared98lyj"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":29,"author":{"gitId":"jared98lyj"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":30,"author":{"gitId":"jared98lyj"},"content":"            stage.setScene(scene);"},{"lineNumber":31,"author":{"gitId":"jared98lyj"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":32,"author":{"gitId":"jared98lyj"},"content":"            stage.show();"},{"lineNumber":33,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":34,"author":{"gitId":"jared98lyj"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"jared98lyj"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"jared98lyj"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"jared98lyj"},"content":"}"}],"authorContributionMap":{"jared98lyj":38}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"jared98lyj"},"content":"import javafx.scene.control.Button;"},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":"import javafx.scene.control.Label;"},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"import javafx.scene.image.Image;"},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":9,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":"import java.util.List;"},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":13,"author":{"gitId":"jared98lyj"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"jared98lyj"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":" */"},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"jared98lyj"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":19,"author":{"gitId":"jared98lyj"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":"    private VBox dialogContainer;"},{"lineNumber":21,"author":{"gitId":"jared98lyj"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"jared98lyj"},"content":"    private TextField userInput;"},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"jared98lyj"},"content":"    private Button sendButton;"},{"lineNumber":25,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":26,"author":{"gitId":"jared98lyj"},"content":"    private Duke duke;"},{"lineNumber":27,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":28,"author":{"gitId":"jared98lyj"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images\" +"},{"lineNumber":29,"author":{"gitId":"jared98lyj"},"content":"            \"/User.PNG\"));"},{"lineNumber":30,"author":{"gitId":"jared98lyj"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images\" +"},{"lineNumber":31,"author":{"gitId":"jared98lyj"},"content":"            \"/Bot.PNG\"));"},{"lineNumber":32,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":33,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":34,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"jared98lyj"},"content":"     * Initialize method for fxml."},{"lineNumber":36,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"jared98lyj"},"content":"    @FXML"},{"lineNumber":38,"author":{"gitId":"jared98lyj"},"content":"    public void initialize() {"},{"lineNumber":39,"author":{"gitId":"jared98lyj"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":40,"author":{"gitId":"jared98lyj"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":41,"author":{"gitId":"jared98lyj"},"content":"        Label opener \u003d new Label(ui.printStart());"},{"lineNumber":42,"author":{"gitId":"jared98lyj"},"content":"        dialogContainer.getChildren().add(opener);"},{"lineNumber":43,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":45,"author":{"gitId":"jared98lyj"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":46,"author":{"gitId":"jared98lyj"},"content":"        duke \u003d d;"},{"lineNumber":47,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":49,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"jared98lyj"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":51,"author":{"gitId":"jared98lyj"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":52,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"jared98lyj"},"content":"    @FXML"},{"lineNumber":54,"author":{"gitId":"jared98lyj"},"content":"    private void handleUserInput() throws IOException {"},{"lineNumber":55,"author":{"gitId":"jared98lyj"},"content":"        assert userImage !\u003d null \u0026\u0026 dukeImage !\u003d null;"},{"lineNumber":56,"author":{"gitId":"jared98lyj"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":57,"author":{"gitId":"jared98lyj"},"content":"        List\u003cTask\u003e taskList \u003d storage.loadFile();"},{"lineNumber":58,"author":{"gitId":"jared98lyj"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":59,"author":{"gitId":"jared98lyj"},"content":"        String response \u003d duke.getOutput(input, taskList);"},{"lineNumber":60,"author":{"gitId":"jared98lyj"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":61,"author":{"gitId":"jared98lyj"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":62,"author":{"gitId":"jared98lyj"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":63,"author":{"gitId":"jared98lyj"},"content":"        );"},{"lineNumber":64,"author":{"gitId":"jared98lyj"},"content":"        userInput.clear();"},{"lineNumber":65,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"jared98lyj"},"content":"}"}],"authorContributionMap":{"jared98lyj":66}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":"public class Parser {"},{"lineNumber":2,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":"    public boolean stillHaveCommands(String command) {"},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":"        return !command.equalsIgnoreCase(\"bye\");"},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":"    public boolean isStart(String command) {"},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":"        return command.equalsIgnoreCase(\"hello\");"},{"lineNumber":9,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":"    public boolean isList(String command) {"},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":"        return command.startsWith(\"list\");"},{"lineNumber":13,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":"    public boolean isTodo(String command) {"},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"        return command.startsWith(\"todo\");"},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":19,"author":{"gitId":"jared98lyj"},"content":"    public boolean isHelp(String command) {return command.startsWith(\"help\");}"},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":21,"author":{"gitId":"jared98lyj"},"content":"    public boolean isDeadline(String command) {"},{"lineNumber":22,"author":{"gitId":"jared98lyj"},"content":"        return command.startsWith(\"deadline\");"},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":25,"author":{"gitId":"jared98lyj"},"content":"    public boolean isEvent(String command) {"},{"lineNumber":26,"author":{"gitId":"jared98lyj"},"content":"        return command.startsWith(\"event\");"},{"lineNumber":27,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":29,"author":{"gitId":"jared98lyj"},"content":"    public boolean isDelete(String command) {"},{"lineNumber":30,"author":{"gitId":"jared98lyj"},"content":"        return command.startsWith(\"delete\");"},{"lineNumber":31,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":33,"author":{"gitId":"jared98lyj"},"content":"    public boolean isFind(String command) {"},{"lineNumber":34,"author":{"gitId":"jared98lyj"},"content":"        return command.startsWith(\"find\");"},{"lineNumber":35,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":37,"author":{"gitId":"jared98lyj"},"content":"    public boolean isBye(String command) {"},{"lineNumber":38,"author":{"gitId":"jared98lyj"},"content":"        return command.startsWith(\"bye\");"},{"lineNumber":39,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":41,"author":{"gitId":"jared98lyj"},"content":"    public boolean isDone(String command) {"},{"lineNumber":42,"author":{"gitId":"jared98lyj"},"content":"        return command.startsWith(\"done\");"},{"lineNumber":43,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":45,"author":{"gitId":"jared98lyj"},"content":"}"}],"authorContributionMap":{"jared98lyj":45}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":"import com.sun.scenario.effect.impl.sw.java.JSWBlend_EXCLUSIONPeer;"},{"lineNumber":2,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":"import java.io.FileReader;"},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":"import java.io.BufferedWriter;"},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"import java.io.FileWriter;"},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"jared98lyj"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":"import java.util.Arrays;"},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":"import java.util.List;"},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":13,"author":{"gitId":"jared98lyj"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":"    // Source folder"},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"    private final static String sourceFolder \u003d \"data\";"},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":"    // Name of text file to store tasks"},{"lineNumber":18,"author":{"gitId":"jared98lyj"},"content":"    private final static String sourceFile \u003d \"/Duke.txt\";"},{"lineNumber":19,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"jared98lyj"},"content":"     * Creating directory if it does not exist."},{"lineNumber":22,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":"    public void createDirectory() {"},{"lineNumber":24,"author":{"gitId":"jared98lyj"},"content":"        File directory \u003d new File(sourceFolder);"},{"lineNumber":25,"author":{"gitId":"jared98lyj"},"content":"        if (!directory.exists()) {"},{"lineNumber":26,"author":{"gitId":"jared98lyj"},"content":"            boolean success \u003d directory.mkdir();"},{"lineNumber":27,"author":{"gitId":"jared98lyj"},"content":"            if (!success) {"},{"lineNumber":28,"author":{"gitId":"jared98lyj"},"content":"                System.out.println(\"Directory creation was unsuccessful. Please \" +"},{"lineNumber":29,"author":{"gitId":"jared98lyj"},"content":"                        \"manually create it.\");"},{"lineNumber":30,"author":{"gitId":"jared98lyj"},"content":"            }"},{"lineNumber":31,"author":{"gitId":"jared98lyj"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":34,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"jared98lyj"},"content":"     * Overwrites content to save new content to disk."},{"lineNumber":36,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"jared98lyj"},"content":"    public void saveFile(String tasksToSave) throws IOException {"},{"lineNumber":38,"author":{"gitId":"jared98lyj"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"jared98lyj"},"content":"            BufferedWriter out \u003d new BufferedWriter(new FileWriter(sourceFolder + sourceFile,"},{"lineNumber":40,"author":{"gitId":"jared98lyj"},"content":"                    false));"},{"lineNumber":41,"author":{"gitId":"jared98lyj"},"content":"            out.write(tasksToSave);"},{"lineNumber":42,"author":{"gitId":"jared98lyj"},"content":"            out.flush();"},{"lineNumber":43,"author":{"gitId":"jared98lyj"},"content":"        } catch (Exception ignored) {"},{"lineNumber":44,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":45,"author":{"gitId":"jared98lyj"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":47,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":49,"author":{"gitId":"jared98lyj"},"content":"    public static void main(String[] args) throws IOException {"},{"lineNumber":50,"author":{"gitId":"jared98lyj"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":51,"author":{"gitId":"jared98lyj"},"content":"        storage.loadFile();"},{"lineNumber":52,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":54,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"jared98lyj"},"content":"     * Method that loads primary file from local disk. Takes in the stored string in"},{"lineNumber":56,"author":{"gitId":"jared98lyj"},"content":"     * text file stored locally, and parses it into a List containing tasks."},{"lineNumber":57,"author":{"gitId":"jared98lyj"},"content":"     * @return Task List"},{"lineNumber":58,"author":{"gitId":"jared98lyj"},"content":"     * @throws IOException"},{"lineNumber":59,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"jared98lyj"},"content":"    public List\u003cTask\u003e loadFile() throws IOException {"},{"lineNumber":61,"author":{"gitId":"jared98lyj"},"content":"        File directory \u003d new File(sourceFolder + sourceFile);"},{"lineNumber":62,"author":{"gitId":"jared98lyj"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":63,"author":{"gitId":"jared98lyj"},"content":"        try {"},{"lineNumber":64,"author":{"gitId":"jared98lyj"},"content":"            if (directory.exists()) {"},{"lineNumber":65,"author":{"gitId":"jared98lyj"},"content":"                BufferedReader br \u003d"},{"lineNumber":66,"author":{"gitId":"jared98lyj"},"content":"                        new BufferedReader(new FileReader(sourceFolder + sourceFile));"},{"lineNumber":67,"author":{"gitId":"jared98lyj"},"content":"                String line;"},{"lineNumber":68,"author":{"gitId":"jared98lyj"},"content":"                while ((line \u003d br.readLine()) !\u003d null) {"},{"lineNumber":69,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":70,"author":{"gitId":"jared98lyj"},"content":"                    String[] eachTask \u003d line.split(\"[|]\");"},{"lineNumber":71,"author":{"gitId":"jared98lyj"},"content":"                    String taskType \u003d eachTask[0];"},{"lineNumber":72,"author":{"gitId":"jared98lyj"},"content":"                    assert eachTask.length \u003e\u003d 2;"},{"lineNumber":73,"author":{"gitId":"jared98lyj"},"content":"                    boolean isDone \u003d eachTask[1].contains(\"X\");"},{"lineNumber":74,"author":{"gitId":"jared98lyj"},"content":"                    assert eachTask.length \u003e\u003d 3;"},{"lineNumber":75,"author":{"gitId":"jared98lyj"},"content":"                    String description \u003d eachTask[2];"},{"lineNumber":76,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":77,"author":{"gitId":"jared98lyj"},"content":"                    if (taskType.equals(\"T\")) {"},{"lineNumber":78,"author":{"gitId":"jared98lyj"},"content":"                        taskList.add(new Todo(description, isDone));"},{"lineNumber":79,"author":{"gitId":"jared98lyj"},"content":"                    } else if (taskType.equals(\"E\")) {"},{"lineNumber":80,"author":{"gitId":"jared98lyj"},"content":"                        assert eachTask.length \u003e\u003d4;"},{"lineNumber":81,"author":{"gitId":"jared98lyj"},"content":"                        taskList.add(new Event(description, eachTask[3], isDone));"},{"lineNumber":82,"author":{"gitId":"jared98lyj"},"content":"                    } else {"},{"lineNumber":83,"author":{"gitId":"jared98lyj"},"content":"                        assert eachTask.length \u003e\u003d4;"},{"lineNumber":84,"author":{"gitId":"jared98lyj"},"content":"                        String eventDate \u003d eachTask[eachTask.length - 1].replaceAll(\"\\\\s+\","},{"lineNumber":85,"author":{"gitId":"jared98lyj"},"content":"                                \"\");"},{"lineNumber":86,"author":{"gitId":"jared98lyj"},"content":"                        taskList.add(new Deadline(description, eventDate, isDone));"},{"lineNumber":87,"author":{"gitId":"jared98lyj"},"content":"                    }"},{"lineNumber":88,"author":{"gitId":"jared98lyj"},"content":"                }"},{"lineNumber":89,"author":{"gitId":"jared98lyj"},"content":"            }"},{"lineNumber":90,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":91,"author":{"gitId":"jared98lyj"},"content":"        } catch (Exception e) {"},{"lineNumber":92,"author":{"gitId":"jared98lyj"},"content":"            return taskList;"},{"lineNumber":93,"author":{"gitId":"jared98lyj"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":95,"author":{"gitId":"jared98lyj"},"content":"        return taskList;"},{"lineNumber":96,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":98,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":99,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":100,"author":{"gitId":"jared98lyj"},"content":"}"}],"authorContributionMap":{"jared98lyj":100}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":"    public final String description;"},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"    public final String eventDate;"},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":"    public boolean isDone;"},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":"    public LocalDate date;"},{"lineNumber":9,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":"     * Main constructor that accepts a description of the task, and by default"},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":"     * assigns a false value to the undone task."},{"lineNumber":13,"author":{"gitId":"jared98lyj"},"content":"     * @param description Description of task"},{"lineNumber":14,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":"    public Task(String description) {"},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"        this.description \u003d description;"},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":"        this.isDone \u003d false;"},{"lineNumber":18,"author":{"gitId":"jared98lyj"},"content":"        this.eventDate \u003d \"\";"},{"lineNumber":19,"author":{"gitId":"jared98lyj"},"content":"        this.date \u003d null;"},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":22,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"jared98lyj"},"content":"     * Overloaded method to change the isDone parameter."},{"lineNumber":25,"author":{"gitId":"jared98lyj"},"content":"     * @param description Description of task"},{"lineNumber":26,"author":{"gitId":"jared98lyj"},"content":"     * @param isDone Boolean flag representing whether event is completed."},{"lineNumber":27,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"jared98lyj"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":29,"author":{"gitId":"jared98lyj"},"content":"        this.description \u003d description;"},{"lineNumber":30,"author":{"gitId":"jared98lyj"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":31,"author":{"gitId":"jared98lyj"},"content":"        this.eventDate \u003d \"\";"},{"lineNumber":32,"author":{"gitId":"jared98lyj"},"content":"        this.date \u003d null;"},{"lineNumber":33,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":35,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"jared98lyj"},"content":"     * Overloaded method to mark a task as done."},{"lineNumber":37,"author":{"gitId":"jared98lyj"},"content":"     * @param description Description of method"},{"lineNumber":38,"author":{"gitId":"jared98lyj"},"content":"     * @param eventDate Boolean flag indicating whether task is done"},{"lineNumber":39,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"jared98lyj"},"content":"    public Task(String description, String eventDate) {"},{"lineNumber":41,"author":{"gitId":"jared98lyj"},"content":"        this.description \u003d description;"},{"lineNumber":42,"author":{"gitId":"jared98lyj"},"content":"        this.eventDate \u003d eventDate;"},{"lineNumber":43,"author":{"gitId":"jared98lyj"},"content":"        this.isDone \u003d false;"},{"lineNumber":44,"author":{"gitId":"jared98lyj"},"content":"        this.date \u003d null;"},{"lineNumber":45,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":47,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"jared98lyj"},"content":"     * Overloaded method to change the isDone parameter and also accepts date."},{"lineNumber":49,"author":{"gitId":"jared98lyj"},"content":"     * @param description Description of task"},{"lineNumber":50,"author":{"gitId":"jared98lyj"},"content":"     * @param isDone Boolean flag representing whether event is completed."},{"lineNumber":51,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"jared98lyj"},"content":"    public Task(String description, String eventDate, boolean isDone) {"},{"lineNumber":53,"author":{"gitId":"jared98lyj"},"content":"        this.description \u003d description;"},{"lineNumber":54,"author":{"gitId":"jared98lyj"},"content":"        this.eventDate \u003d eventDate;"},{"lineNumber":55,"author":{"gitId":"jared98lyj"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":56,"author":{"gitId":"jared98lyj"},"content":"        this.date \u003d null;"},{"lineNumber":57,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":59,"author":{"gitId":"jared98lyj"},"content":"    public String getTaskType() {"},{"lineNumber":60,"author":{"gitId":"jared98lyj"},"content":"        return \"\";"},{"lineNumber":61,"author":{"gitId":"jared98lyj"},"content":"    };"},{"lineNumber":62,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":63,"author":{"gitId":"jared98lyj"},"content":"    public String getStatusIcon() {"},{"lineNumber":64,"author":{"gitId":"jared98lyj"},"content":"        return isDone ? \"X\" : \"\";"},{"lineNumber":65,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":67,"author":{"gitId":"jared98lyj"},"content":"    public String getDescription() {"},{"lineNumber":68,"author":{"gitId":"jared98lyj"},"content":"        return this.description;"},{"lineNumber":69,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":71,"author":{"gitId":"jared98lyj"},"content":"    public String getEventDate() {"},{"lineNumber":72,"author":{"gitId":"jared98lyj"},"content":"        return this.eventDate;"},{"lineNumber":73,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":75,"author":{"gitId":"jared98lyj"},"content":"    public void markAsDone() {"},{"lineNumber":76,"author":{"gitId":"jared98lyj"},"content":"        this.isDone \u003d true;"},{"lineNumber":77,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":79,"author":{"gitId":"jared98lyj"},"content":"}"}],"authorContributionMap":{"jared98lyj":79}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"jared98lyj"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":"public class TaskList {"},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"    public List\u003cTask\u003e taskList;"},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":"    TaskList(List\u003cTask\u003e taskList) {"},{"lineNumber":9,"author":{"gitId":"jared98lyj"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"jared98lyj"},"content":"     * Prints the statements showing this task has been added to list."},{"lineNumber":14,"author":{"gitId":"jared98lyj"},"content":"     * @param currentTask Current task."},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"    protected String logTask(Task currentTask) {"},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":"        return String.format(\"Got it. I\u0027ve added this task: \" + currentTask +"},{"lineNumber":18,"author":{"gitId":"jared98lyj"},"content":"                String.format(\"\\nNow you have %d tasks in the list\", taskList.size()));"},{"lineNumber":19,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":22,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":"     * Method that logs all existing tasks and returns a string that can be logged"},{"lineNumber":24,"author":{"gitId":"jared98lyj"},"content":"     * into the local disk in data/Duke.txt."},{"lineNumber":25,"author":{"gitId":"jared98lyj"},"content":"     * @return A string containing all existing tasks."},{"lineNumber":26,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"jared98lyj"},"content":"    protected String logAllTasks() {"},{"lineNumber":28,"author":{"gitId":"jared98lyj"},"content":"        StringBuilder out \u003d new StringBuilder();"},{"lineNumber":29,"author":{"gitId":"jared98lyj"},"content":"        for (Task eachTask : taskList) {"},{"lineNumber":30,"author":{"gitId":"jared98lyj"},"content":"            String taskType \u003d eachTask.getTaskType();"},{"lineNumber":31,"author":{"gitId":"jared98lyj"},"content":"            out.append(taskType).append(\"|\");"},{"lineNumber":32,"author":{"gitId":"jared98lyj"},"content":"            out.append(eachTask.getStatusIcon()).append(\"|\");"},{"lineNumber":33,"author":{"gitId":"jared98lyj"},"content":"            if (taskType.equals(\"D\") || taskType.equals(\"E\")) {"},{"lineNumber":34,"author":{"gitId":"jared98lyj"},"content":"                out.append(eachTask.getDescription()).append(\"|\");"},{"lineNumber":35,"author":{"gitId":"jared98lyj"},"content":"                out.append(eachTask.getEventDate());"},{"lineNumber":36,"author":{"gitId":"jared98lyj"},"content":"            } else  {"},{"lineNumber":37,"author":{"gitId":"jared98lyj"},"content":"                out.append(eachTask.getDescription());"},{"lineNumber":38,"author":{"gitId":"jared98lyj"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"jared98lyj"},"content":"            out.append(\"\\n\");"},{"lineNumber":40,"author":{"gitId":"jared98lyj"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"jared98lyj"},"content":"        return out.toString();"},{"lineNumber":42,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":44,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"jared98lyj"},"content":"     * Adds current task to list of tasks."},{"lineNumber":46,"author":{"gitId":"jared98lyj"},"content":"     * @param currentTask Current task."},{"lineNumber":47,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"jared98lyj"},"content":"    protected void addToTasks(Task currentTask) {"},{"lineNumber":49,"author":{"gitId":"jared98lyj"},"content":"        taskList.add(currentTask);"},{"lineNumber":50,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":52,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"jared98lyj"},"content":"     * Enumerates all tasks in the list using 1-based indexing."},{"lineNumber":54,"author":{"gitId":"jared98lyj"},"content":"     * @return String representing all existing tasks with 1-based indexing"},{"lineNumber":55,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"jared98lyj"},"content":"    protected String enumerateTasks() {"},{"lineNumber":57,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":58,"author":{"gitId":"jared98lyj"},"content":"        StringBuilder res \u003d new StringBuilder(\"Here are the tasks in your list:\");"},{"lineNumber":59,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":60,"author":{"gitId":"jared98lyj"},"content":"        int counter \u003d 1;"},{"lineNumber":61,"author":{"gitId":"jared98lyj"},"content":"        for (Task eachTask : taskList) {"},{"lineNumber":62,"author":{"gitId":"jared98lyj"},"content":"            res.append(String.format(\"\\n%d. %s\", counter, eachTask));"},{"lineNumber":63,"author":{"gitId":"jared98lyj"},"content":"            counter++;"},{"lineNumber":64,"author":{"gitId":"jared98lyj"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"jared98lyj"},"content":"        assert counter \u003d\u003d taskList.size();"},{"lineNumber":66,"author":{"gitId":"jared98lyj"},"content":"        return res.toString();"},{"lineNumber":67,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":69,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"jared98lyj"},"content":"     * Marks task as done based on 1-based indexing."},{"lineNumber":71,"author":{"gitId":"jared98lyj"},"content":"     * @param index Given index of task"},{"lineNumber":72,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"jared98lyj"},"content":"    protected String markAsDone(int index) {"},{"lineNumber":74,"author":{"gitId":"jared98lyj"},"content":"        // Retrieving task"},{"lineNumber":75,"author":{"gitId":"jared98lyj"},"content":"        Task givenTask \u003d taskList.get(index - 1);"},{"lineNumber":76,"author":{"gitId":"jared98lyj"},"content":"        givenTask.markAsDone();"},{"lineNumber":77,"author":{"gitId":"jared98lyj"},"content":"        String res \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"},{"lineNumber":78,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":79,"author":{"gitId":"jared98lyj"},"content":"        res +\u003d givenTask.toString();"},{"lineNumber":80,"author":{"gitId":"jared98lyj"},"content":"        return res;"},{"lineNumber":81,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":83,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"jared98lyj"},"content":"     * Removes respective task in the list (1-based indexing)."},{"lineNumber":85,"author":{"gitId":"jared98lyj"},"content":"     * @param index Index of task to remove"},{"lineNumber":86,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"jared98lyj"},"content":"    protected String removeTask(int index) {"},{"lineNumber":88,"author":{"gitId":"jared98lyj"},"content":"        Task removedTask \u003d taskList.remove(index - 1);"},{"lineNumber":89,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":90,"author":{"gitId":"jared98lyj"},"content":"        String res \u003d \"Noted. I\u0027ve removed this task:\\n\" + \"  \" + removedTask;"},{"lineNumber":91,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":92,"author":{"gitId":"jared98lyj"},"content":"        res +\u003d String.format(\"\\nNow you have %d tasks in your list.\","},{"lineNumber":93,"author":{"gitId":"jared98lyj"},"content":"                taskList.size());"},{"lineNumber":94,"author":{"gitId":"jared98lyj"},"content":"        return res;"},{"lineNumber":95,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":97,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"jared98lyj"},"content":"     * Retrieve task(s) by keyword match so long as description contains the word."},{"lineNumber":99,"author":{"gitId":"jared98lyj"},"content":"     * @param command Keyword to match"},{"lineNumber":100,"author":{"gitId":"jared98lyj"},"content":"     * @return A string line-spaced by each task that has the keyword"},{"lineNumber":101,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"jared98lyj"},"content":"    protected String retrieveByKeyword(String command) {"},{"lineNumber":103,"author":{"gitId":"jared98lyj"},"content":"        int counter \u003d 1;"},{"lineNumber":104,"author":{"gitId":"jared98lyj"},"content":"        String[] keywordSearch \u003d command.split(\"\\\\s+\");"},{"lineNumber":105,"author":{"gitId":"jared98lyj"},"content":"        assert keywordSearch.length \u003e\u003d2;"},{"lineNumber":106,"author":{"gitId":"jared98lyj"},"content":"        String keyword \u003d keywordSearch[1];"},{"lineNumber":107,"author":{"gitId":"jared98lyj"},"content":"        String res \u003d \"Here are the matching tasks in your list:\";"},{"lineNumber":108,"author":{"gitId":"jared98lyj"},"content":"        int lenSearch \u003d keywordSearch.length;"},{"lineNumber":109,"author":{"gitId":"jared98lyj"},"content":"        for (Task eachTask : taskList) {"},{"lineNumber":110,"author":{"gitId":"jared98lyj"},"content":"            if (lenSearch \u003d\u003d 2) {"},{"lineNumber":111,"author":{"gitId":"jared98lyj"},"content":"                // default partial search case sensitive"},{"lineNumber":112,"author":{"gitId":"jared98lyj"},"content":"                if (eachTask.getDescription().contains(keyword)) {"},{"lineNumber":113,"author":{"gitId":"jared98lyj"},"content":"                    res +\u003d String.format(\"\\n%d. %s\", counter, eachTask);"},{"lineNumber":114,"author":{"gitId":"jared98lyj"},"content":"                    counter++;"},{"lineNumber":115,"author":{"gitId":"jared98lyj"},"content":"                }"},{"lineNumber":116,"author":{"gitId":"jared98lyj"},"content":"            } else if (lenSearch \u003d\u003d 3) {"},{"lineNumber":117,"author":{"gitId":"jared98lyj"},"content":"                String searchType \u003d keywordSearch[2];"},{"lineNumber":118,"author":{"gitId":"jared98lyj"},"content":"                if (searchType.equalsIgnoreCase(\"p\")) {"},{"lineNumber":119,"author":{"gitId":"jared98lyj"},"content":"                    if (eachTask.getDescription().contains(keyword)) {"},{"lineNumber":120,"author":{"gitId":"jared98lyj"},"content":"                        res +\u003d String.format(\"\\n%d. %s\", counter, eachTask);"},{"lineNumber":121,"author":{"gitId":"jared98lyj"},"content":"                        counter++;"},{"lineNumber":122,"author":{"gitId":"jared98lyj"},"content":"                    }"},{"lineNumber":123,"author":{"gitId":"jared98lyj"},"content":"                } else if (searchType.equalsIgnoreCase(\"pi\")) {"},{"lineNumber":124,"author":{"gitId":"jared98lyj"},"content":"                    // Case insensitive partial search"},{"lineNumber":125,"author":{"gitId":"jared98lyj"},"content":"                    if (eachTask.getDescription().toLowerCase().contains(keyword.toLowerCase())) {"},{"lineNumber":126,"author":{"gitId":"jared98lyj"},"content":"                        res +\u003d String.format(\"\\n%d. %s\", counter, eachTask);"},{"lineNumber":127,"author":{"gitId":"jared98lyj"},"content":"                        counter++;"},{"lineNumber":128,"author":{"gitId":"jared98lyj"},"content":"                    }"},{"lineNumber":129,"author":{"gitId":"jared98lyj"},"content":"                } else if (searchType.equalsIgnoreCase(\"f\")) {"},{"lineNumber":130,"author":{"gitId":"jared98lyj"},"content":"                    // full search must be exactly as the task description"},{"lineNumber":131,"author":{"gitId":"jared98lyj"},"content":"                    if (eachTask.getDescription().equals(keyword)) {"},{"lineNumber":132,"author":{"gitId":"jared98lyj"},"content":"                        res +\u003d String.format(\"\\n%d. %s\", counter, eachTask);"},{"lineNumber":133,"author":{"gitId":"jared98lyj"},"content":"                        counter++;"},{"lineNumber":134,"author":{"gitId":"jared98lyj"},"content":"                    }"},{"lineNumber":135,"author":{"gitId":"jared98lyj"},"content":"                }"},{"lineNumber":136,"author":{"gitId":"jared98lyj"},"content":"            }"},{"lineNumber":137,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":138,"author":{"gitId":"jared98lyj"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"jared98lyj"},"content":"        return res;"},{"lineNumber":140,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":142,"author":{"gitId":"jared98lyj"},"content":"}"}],"authorContributionMap":{"jared98lyj":142}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":"     * Main constructor."},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":"     * @param description Description of task."},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":"    Todo(String description) {"},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":"    Todo(String description, boolean isDone) {"},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":"        super(description, isDone);"},{"lineNumber":13,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"     * Getter method that retrieves the type of the task."},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":"     * @return String representing task type."},{"lineNumber":18,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"jared98lyj"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":"    public String getTaskType() {"},{"lineNumber":21,"author":{"gitId":"jared98lyj"},"content":"        return \"T\";"},{"lineNumber":22,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":24,"author":{"gitId":"jared98lyj"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"jared98lyj"},"content":"     * Standard to string method."},{"lineNumber":26,"author":{"gitId":"jared98lyj"},"content":"     * @return Formatted string of a task."},{"lineNumber":27,"author":{"gitId":"jared98lyj"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"jared98lyj"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"jared98lyj"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"jared98lyj"},"content":"        return String.format(\"[%s][%s] %s \", this.getTaskType(),"},{"lineNumber":31,"author":{"gitId":"jared98lyj"},"content":"                this.getStatusIcon(), this.getDescription());"},{"lineNumber":32,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"jared98lyj"},"content":"}"}],"authorContributionMap":{"jared98lyj":33}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":"public class Ui {"},{"lineNumber":2,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":"    public static final String primer \u003d \"Hello\";"},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"    public void printStarter() {"},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":9,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":"    public String printStart() {"},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":"        String res \u003d String.format(\"Hello! I\u0027m Duke\" + \"\\n\" + \"What can I do for \" +"},{"lineNumber":13,"author":{"gitId":"jared98lyj"},"content":"                        \"you?\\n\");"},{"lineNumber":14,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":"        res +\u003d outHelp();"},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"        return res;"},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":19,"author":{"gitId":"jared98lyj"},"content":"    public String outHelp() {"},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":"        final String commandTypes \u003d String.format(\"Here are the list of all commands:\" +"},{"lineNumber":21,"author":{"gitId":"jared98lyj"},"content":"                \" \\n(Type help again to repeat these commands)\\n\\n\" +"},{"lineNumber":22,"author":{"gitId":"jared98lyj"},"content":"                \"list - lists all existing tasks\\n\" +"},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":"                \"todo [insert task] - creates a todo task\\n\" +"},{"lineNumber":24,"author":{"gitId":"jared98lyj"},"content":"                \"deadline [insert deadline] - creates a deadline\\n\" +"},{"lineNumber":25,"author":{"gitId":"jared98lyj"},"content":"                \"event [insert event] - creates an event\\n\" +"},{"lineNumber":26,"author":{"gitId":"jared98lyj"},"content":"                \"delete [insert index] - deletes event based on index\\n\" +"},{"lineNumber":27,"author":{"gitId":"jared98lyj"},"content":"                \"find [insert keyword] [search type(optional)] - finds tasks \" +"},{"lineNumber":28,"author":{"gitId":"jared98lyj"},"content":"                \"corresponding\\n to keyword\\n\" +"},{"lineNumber":29,"author":{"gitId":"jared98lyj"},"content":"                \"done [insert index] - marks task as done\");"},{"lineNumber":30,"author":{"gitId":"jared98lyj"},"content":"        return commandTypes;"},{"lineNumber":31,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":33,"author":{"gitId":"jared98lyj"},"content":"    public String outBye() {"},{"lineNumber":34,"author":{"gitId":"jared98lyj"},"content":"        return \"Bye. Hope to see you again soon!\";"},{"lineNumber":35,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":37,"author":{"gitId":"jared98lyj"},"content":"    public String outNotRecognized() {"},{"lineNumber":38,"author":{"gitId":"jared98lyj"},"content":"        return \":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"},{"lineNumber":39,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":41,"author":{"gitId":"jared98lyj"},"content":"    public String outInvalidDeadline() {"},{"lineNumber":42,"author":{"gitId":"jared98lyj"},"content":"        return \":( OOPS!!! The description of a deadline \" +"},{"lineNumber":43,"author":{"gitId":"jared98lyj"},"content":"                \"cannot be empty.\";"},{"lineNumber":44,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":46,"author":{"gitId":"jared98lyj"},"content":"    public String outInvalidEvent() {"},{"lineNumber":47,"author":{"gitId":"jared98lyj"},"content":"        return \":( OOPS!!! The description of an event cannot be empty.\";"},{"lineNumber":48,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":50,"author":{"gitId":"jared98lyj"},"content":"    public String outInvalidTodo() {"},{"lineNumber":51,"author":{"gitId":"jared98lyj"},"content":"        return \":( OOPS!!! The description of a todo cannot be empty.\";"},{"lineNumber":52,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":54,"author":{"gitId":"jared98lyj"},"content":"    public String outInvalidDelete() {"},{"lineNumber":55,"author":{"gitId":"jared98lyj"},"content":"        return \":( OOPS!!! Please ensure that you have correctly indicated the index \" +"},{"lineNumber":56,"author":{"gitId":"jared98lyj"},"content":"                \"of the item you want to find.\";"},{"lineNumber":57,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":59,"author":{"gitId":"jared98lyj"},"content":"    public String outInvalidFind() {"},{"lineNumber":60,"author":{"gitId":"jared98lyj"},"content":"        return \":( OOPS!!! Please ensure that you have correctly indicated the \" +"},{"lineNumber":61,"author":{"gitId":"jared98lyj"},"content":"                \"keyword of the task(s) you want to search for.\";"},{"lineNumber":62,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":64,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":65,"author":{"gitId":"jared98lyj"},"content":"}"}],"authorContributionMap":{"jared98lyj":65}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" minHeight\u003d\"-Infinity\" maxHeight\u003d\"-Infinity\""},{"lineNumber":9,"author":{"gitId":"jared98lyj"},"content":"         maxWidth\u003d\"1.7976931348623157E308\""},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":"         prefWidth\u003d\"350.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\""},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"dialogBox\"\u003e"},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":"    \u003cchildren\u003e"},{"lineNumber":13,"author":{"gitId":"jared98lyj"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":14,"author":{"gitId":"jared98lyj"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\""},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":"                   pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"    \u003c/children\u003e"},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":"    \u003cpadding\u003e"},{"lineNumber":18,"author":{"gitId":"jared98lyj"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":19,"author":{"gitId":"jared98lyj"},"content":"    \u003c/padding\u003e"},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"jared98lyj":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":9,"author":{"gitId":"jared98lyj"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\""},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":"            minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\""},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":"            xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":"    \u003cchildren\u003e"},{"lineNumber":13,"author":{"gitId":"jared98lyj"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\""},{"lineNumber":14,"author":{"gitId":"jared98lyj"},"content":"                   prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\""},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":"                    prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\""},{"lineNumber":18,"author":{"gitId":"jared98lyj"},"content":"                    styleClass\u003d\"background\" stylesheets\u003d\"@../css/style.css\" AnchorPane.bottomAnchor\u003d\"42.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\" \u003e"},{"lineNumber":19,"author":{"gitId":"jared98lyj"},"content":"            \u003ccontent\u003e"},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-border-width: 10;\" styleClass\u003d\"background\" stylesheets\u003d\"@../css/style.css\"/\u003e"},{"lineNumber":21,"author":{"gitId":"jared98lyj"},"content":"            \u003c/content\u003e"},{"lineNumber":22,"author":{"gitId":"jared98lyj"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":"    \u003c/children\u003e"},{"lineNumber":24,"author":{"gitId":"jared98lyj"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"jared98lyj":24}},{"path":"src/test/java/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"public class StorageTest {"},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"jared98lyj"},"content":"    public void testLoadingData() throws IOException {"},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":"        List\u003cTask\u003e taskList \u003d storage.loadFile();"},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":"        System.out.println(taskList);"},{"lineNumber":13,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":14,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"}"}],"authorContributionMap":{"jared98lyj":16}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":7,"author":{"gitId":"jared98lyj"},"content":"public class TaskListTest {"},{"lineNumber":8,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":9,"author":{"gitId":"jared98lyj"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":"    public void testMarkAsDone() throws IOException {"},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":12,"author":{"gitId":"jared98lyj"},"content":"        List\u003cTask\u003e taskList \u003d storage.loadFile();"},{"lineNumber":13,"author":{"gitId":"jared98lyj"},"content":"        TaskList tl \u003d new TaskList(taskList);"},{"lineNumber":14,"author":{"gitId":"jared98lyj"},"content":"        System.out.println(\"Before:\");"},{"lineNumber":15,"author":{"gitId":"jared98lyj"},"content":"        tl.enumerateTasks();"},{"lineNumber":16,"author":{"gitId":"jared98lyj"},"content":"        for (Task eachTask : tl.taskList) {"},{"lineNumber":17,"author":{"gitId":"jared98lyj"},"content":"            eachTask.markAsDone();"},{"lineNumber":18,"author":{"gitId":"jared98lyj"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"jared98lyj"},"content":"        System.out.println(\"After Marking all as done:\");"},{"lineNumber":20,"author":{"gitId":"jared98lyj"},"content":"        tl.enumerateTasks();"},{"lineNumber":21,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":22,"author":{"gitId":"jared98lyj"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jared98lyj"},"content":""},{"lineNumber":24,"author":{"gitId":"jared98lyj"},"content":"}"}],"authorContributionMap":{"jared98lyj":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jared98lyj"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"jared98lyj"},"content":"deadline return book /by 2019-06-20"},{"lineNumber":3,"author":{"gitId":"jared98lyj"},"content":"event play soccer /at wed 2pm"},{"lineNumber":4,"author":{"gitId":"jared98lyj"},"content":"list"},{"lineNumber":5,"author":{"gitId":"jared98lyj"},"content":"done 3"},{"lineNumber":6,"author":{"gitId":"jared98lyj"},"content":"list"}],"authorContributionMap":{"jared98lyj":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"jared98lyj"},"content":"javac  -cp C:\\Users\\jared\\Documents\\iP\\src\\main\\java -Xlint:none -d ..\\bin ."},{"lineNumber":11,"author":{"gitId":"jared98lyj"},"content":".\\src\\main\\java\\*.java"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":15,"author":{"gitId":"-"},"content":")"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"jared98lyj":2,"-":20}}]
