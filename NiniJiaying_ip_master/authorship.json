[{"path":"config/travis/check-eof-newline.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":"# Checks that all text files end with a newline."},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":"ret\u003d0"},{"lineNumber":5,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":6,"author":{"gitId":"NiniJiaying"},"content":"# Preserve filename with spaces by only splitting on newlines."},{"lineNumber":7,"author":{"gitId":"NiniJiaying"},"content":"IFS\u003d\u0027"},{"lineNumber":8,"author":{"gitId":"NiniJiaying"},"content":"\u0027"},{"lineNumber":9,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":10,"author":{"gitId":"NiniJiaying"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do"},{"lineNumber":11,"author":{"gitId":"NiniJiaying"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then"},{"lineNumber":12,"author":{"gitId":"NiniJiaying"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\""},{"lineNumber":13,"author":{"gitId":"NiniJiaying"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\""},{"lineNumber":14,"author":{"gitId":"NiniJiaying"},"content":"        ret\u003d1"},{"lineNumber":15,"author":{"gitId":"NiniJiaying"},"content":"    fi"},{"lineNumber":16,"author":{"gitId":"NiniJiaying"},"content":"done"},{"lineNumber":17,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":18,"author":{"gitId":"NiniJiaying"},"content":"exit $ret"}],"authorContributionMap":{"NiniJiaying":18}},{"path":"config/travis/check-line-endings.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":"# Checks for prohibited line endings."},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":"# Prohibited line endings: \\r\\n"},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":5,"author":{"gitId":"NiniJiaying"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |"},{"lineNumber":6,"author":{"gitId":"NiniJiaying"},"content":"awk \u0027"},{"lineNumber":7,"author":{"gitId":"NiniJiaying"},"content":"    BEGIN {"},{"lineNumber":8,"author":{"gitId":"NiniJiaying"},"content":"        FS \u003d \":\""},{"lineNumber":9,"author":{"gitId":"NiniJiaying"},"content":"        OFS \u003d \":\""},{"lineNumber":10,"author":{"gitId":"NiniJiaying"},"content":"        ret \u003d 0"},{"lineNumber":11,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"NiniJiaying"},"content":"    {"},{"lineNumber":13,"author":{"gitId":"NiniJiaying"},"content":"        ret \u003d 1"},{"lineNumber":14,"author":{"gitId":"NiniJiaying"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\""},{"lineNumber":15,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"NiniJiaying"},"content":"    END {"},{"lineNumber":17,"author":{"gitId":"NiniJiaying"},"content":"        exit ret"},{"lineNumber":18,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"NiniJiaying"},"content":"\u0027"}],"authorContributionMap":{"NiniJiaying":19}},{"path":"config/travis/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":"# Checks for trailing whitespace"},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |"},{"lineNumber":5,"author":{"gitId":"NiniJiaying"},"content":"awk \u0027"},{"lineNumber":6,"author":{"gitId":"NiniJiaying"},"content":"    BEGIN {"},{"lineNumber":7,"author":{"gitId":"NiniJiaying"},"content":"        FS \u003d \":\""},{"lineNumber":8,"author":{"gitId":"NiniJiaying"},"content":"        OFS \u003d \":\""},{"lineNumber":9,"author":{"gitId":"NiniJiaying"},"content":"        ret \u003d 0"},{"lineNumber":10,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"NiniJiaying"},"content":"    {"},{"lineNumber":12,"author":{"gitId":"NiniJiaying"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors"},{"lineNumber":13,"author":{"gitId":"NiniJiaying"},"content":"        # which do not properly handle trailing whitespace."},{"lineNumber":14,"author":{"gitId":"NiniJiaying"},"content":"        # (e.g. GitHub web editor)"},{"lineNumber":15,"author":{"gitId":"NiniJiaying"},"content":"        if ($1 ~ /\\.md$/) {"},{"lineNumber":16,"author":{"gitId":"NiniJiaying"},"content":"            severity \u003d \"WARN\""},{"lineNumber":17,"author":{"gitId":"NiniJiaying"},"content":"        } else {"},{"lineNumber":18,"author":{"gitId":"NiniJiaying"},"content":"            severity \u003d \"ERROR\""},{"lineNumber":19,"author":{"gitId":"NiniJiaying"},"content":"            ret \u003d 1"},{"lineNumber":20,"author":{"gitId":"NiniJiaying"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"NiniJiaying"},"content":"        print severity, $1, $2, \" trailing whitespace.\""},{"lineNumber":22,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"NiniJiaying"},"content":"    END {"},{"lineNumber":24,"author":{"gitId":"NiniJiaying"},"content":"        exit ret"},{"lineNumber":25,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"NiniJiaying"},"content":"\u0027"}],"authorContributionMap":{"NiniJiaying":26}},{"path":"config/travis/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail."},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026"},{"lineNumber":5,"author":{"gitId":"NiniJiaying"},"content":"ret\u003d0 \u0026\u0026"},{"lineNumber":6,"author":{"gitId":"NiniJiaying"},"content":"for checkscript in \"$dir\"/check-*; do"},{"lineNumber":7,"author":{"gitId":"NiniJiaying"},"content":"    if ! \"$checkscript\"; then"},{"lineNumber":8,"author":{"gitId":"NiniJiaying"},"content":"        ret\u003d1"},{"lineNumber":9,"author":{"gitId":"NiniJiaying"},"content":"    fi"},{"lineNumber":10,"author":{"gitId":"NiniJiaying"},"content":"done"},{"lineNumber":11,"author":{"gitId":"NiniJiaying"},"content":"exit $ret"}],"authorContributionMap":{"NiniJiaying":11}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"E | 0 | project meeting | 2017-11-11"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":"T | 1 | join sports club"},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":"E | 0 | eveneA | 2020-02-02"},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":"D | 0 | dd1 | 2020-02-09"}],"authorContributionMap":{"NiniJiaying":4}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":"import duke.dukeexception.DukeException;"},{"lineNumber":5,"author":{"gitId":"NiniJiaying"},"content":"import duke.parser.Parser;"},{"lineNumber":6,"author":{"gitId":"NiniJiaying"},"content":"import duke.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"NiniJiaying"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"NiniJiaying"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":10,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":12,"author":{"gitId":"NiniJiaying"},"content":"    /** Data related object */"},{"lineNumber":13,"author":{"gitId":"NiniJiaying"},"content":"    private Storage storage;"},{"lineNumber":14,"author":{"gitId":"NiniJiaying"},"content":"    /** All tasks */"},{"lineNumber":15,"author":{"gitId":"NiniJiaying"},"content":"    private TaskList tasks;"},{"lineNumber":16,"author":{"gitId":"NiniJiaying"},"content":"    /** User interface */"},{"lineNumber":17,"author":{"gitId":"NiniJiaying"},"content":"    private Ui ui;"},{"lineNumber":18,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":19,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"NiniJiaying"},"content":"     * Class constructor."},{"lineNumber":21,"author":{"gitId":"NiniJiaying"},"content":"     * Initialises the user interface and data storage."},{"lineNumber":22,"author":{"gitId":"NiniJiaying"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"NiniJiaying"},"content":"     * @param filePath  the filePath of the data file."},{"lineNumber":24,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"NiniJiaying"},"content":"    public Duke(String filePath) {"},{"lineNumber":26,"author":{"gitId":"NiniJiaying"},"content":"        ui \u003d new Ui();"},{"lineNumber":27,"author":{"gitId":"NiniJiaying"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":28,"author":{"gitId":"NiniJiaying"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"NiniJiaying"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":30,"author":{"gitId":"NiniJiaying"},"content":"        } catch (IOException | DukeException e) {"},{"lineNumber":31,"author":{"gitId":"NiniJiaying"},"content":"            ui.showLoadingError();"},{"lineNumber":32,"author":{"gitId":"NiniJiaying"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":33,"author":{"gitId":"NiniJiaying"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":36,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"NiniJiaying"},"content":"     * Calls showWelcome to show welcome message."},{"lineNumber":38,"author":{"gitId":"NiniJiaying"},"content":"     * Then gets command from user and executes the command."},{"lineNumber":39,"author":{"gitId":"NiniJiaying"},"content":"     * Displays possible error message."},{"lineNumber":40,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"NiniJiaying"},"content":"    public void run() {"},{"lineNumber":42,"author":{"gitId":"NiniJiaying"},"content":"        ui.showWelcome();"},{"lineNumber":43,"author":{"gitId":"NiniJiaying"},"content":"        boolean isExit \u003d false;"},{"lineNumber":44,"author":{"gitId":"NiniJiaying"},"content":"        while (!isExit) {"},{"lineNumber":45,"author":{"gitId":"NiniJiaying"},"content":"            try {"},{"lineNumber":46,"author":{"gitId":"NiniJiaying"},"content":"                String fullCommand \u003d ui.readCommand();"},{"lineNumber":47,"author":{"gitId":"NiniJiaying"},"content":"                ui.showLine(); // show the divider line (\"_______\")"},{"lineNumber":48,"author":{"gitId":"NiniJiaying"},"content":"                Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":49,"author":{"gitId":"NiniJiaying"},"content":"                c.execute(tasks);"},{"lineNumber":50,"author":{"gitId":"NiniJiaying"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":51,"author":{"gitId":"NiniJiaying"},"content":"            } catch (DukeException | IOException e) {"},{"lineNumber":52,"author":{"gitId":"NiniJiaying"},"content":"                ui.showError(e.getMessage());"},{"lineNumber":53,"author":{"gitId":"NiniJiaying"},"content":"            } finally {"},{"lineNumber":54,"author":{"gitId":"NiniJiaying"},"content":"                ui.showLine();"},{"lineNumber":55,"author":{"gitId":"NiniJiaying"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"NiniJiaying"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":60,"author":{"gitId":"NiniJiaying"},"content":"        new Duke(\"data/tasks.txt\").run();"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"NiniJiaying":59,"-":4}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":"import java.io.BufferedWriter;"},{"lineNumber":5,"author":{"gitId":"NiniJiaying"},"content":"import java.io.FileReader;"},{"lineNumber":6,"author":{"gitId":"NiniJiaying"},"content":"import java.io.FileWriter;"},{"lineNumber":7,"author":{"gitId":"NiniJiaying"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"NiniJiaying"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"NiniJiaying"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":11,"author":{"gitId":"NiniJiaying"},"content":"import duke.dukeexception.DukeException;"},{"lineNumber":12,"author":{"gitId":"NiniJiaying"},"content":"import duke.task.Deadline;"},{"lineNumber":13,"author":{"gitId":"NiniJiaying"},"content":"import duke.task.Event;"},{"lineNumber":14,"author":{"gitId":"NiniJiaying"},"content":"import duke.task.Task;"},{"lineNumber":15,"author":{"gitId":"NiniJiaying"},"content":"import duke.task.TaskList;"},{"lineNumber":16,"author":{"gitId":"NiniJiaying"},"content":"import duke.task.ToDo;"},{"lineNumber":17,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":18,"author":{"gitId":"NiniJiaying"},"content":"public class Command {"},{"lineNumber":19,"author":{"gitId":"NiniJiaying"},"content":"    /** The input command by user */"},{"lineNumber":20,"author":{"gitId":"NiniJiaying"},"content":"    private String commandName;"},{"lineNumber":21,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":22,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":23,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"NiniJiaying"},"content":"     * Class constructor."},{"lineNumber":25,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"NiniJiaying"},"content":"    public Command(String commandName) {"},{"lineNumber":27,"author":{"gitId":"NiniJiaying"},"content":"        this.commandName \u003d commandName;"},{"lineNumber":28,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":30,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":31,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"NiniJiaying"},"content":"     * Processes tasks according to the command."},{"lineNumber":33,"author":{"gitId":"NiniJiaying"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"NiniJiaying"},"content":"     * @param tasks  the tasks before execution."},{"lineNumber":35,"author":{"gitId":"NiniJiaying"},"content":"     * @throws IOException  If an input or output"},{"lineNumber":36,"author":{"gitId":"NiniJiaying"},"content":"     *                      exception occurred"},{"lineNumber":37,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"NiniJiaying"},"content":"    public void execute(TaskList tasks) throws IOException, DukeException {"},{"lineNumber":39,"author":{"gitId":"NiniJiaying"},"content":"        ArrayList\u003cTask\u003e tList \u003d tasks.getTasks();"},{"lineNumber":40,"author":{"gitId":"NiniJiaying"},"content":"        if (commandName.equals(\"list\")) {"},{"lineNumber":41,"author":{"gitId":"NiniJiaying"},"content":"            System.out.println(\"     Here are the tasks in your list:\");"},{"lineNumber":42,"author":{"gitId":"NiniJiaying"},"content":"            int counter \u003d 1;"},{"lineNumber":43,"author":{"gitId":"NiniJiaying"},"content":"            for (Task s : tList) {"},{"lineNumber":44,"author":{"gitId":"NiniJiaying"},"content":"                if (s !\u003d null) {"},{"lineNumber":45,"author":{"gitId":"NiniJiaying"},"content":"                    System.out.println(\"     \" + counter + \".\" + s.toString());"},{"lineNumber":46,"author":{"gitId":"NiniJiaying"},"content":"                    counter++;"},{"lineNumber":47,"author":{"gitId":"NiniJiaying"},"content":"                } else {"},{"lineNumber":48,"author":{"gitId":"NiniJiaying"},"content":"                    break;"},{"lineNumber":49,"author":{"gitId":"NiniJiaying"},"content":"                }"},{"lineNumber":50,"author":{"gitId":"NiniJiaying"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"NiniJiaying"},"content":"        } else if (commandName.split(\" \")[0].equals(\"done\")) {"},{"lineNumber":52,"author":{"gitId":"NiniJiaying"},"content":"            int index \u003d Integer.parseInt(commandName.split(\" \")[1]);"},{"lineNumber":53,"author":{"gitId":"NiniJiaying"},"content":"            tList.get(index - 1).markAsDone();"},{"lineNumber":54,"author":{"gitId":"NiniJiaying"},"content":"            System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":55,"author":{"gitId":"NiniJiaying"},"content":"            System.out.println(\"       \" + tList.get(index - 1).toString());"},{"lineNumber":56,"author":{"gitId":"NiniJiaying"},"content":"            Task currTask \u003d tList.get(index - 1);"},{"lineNumber":57,"author":{"gitId":"NiniJiaying"},"content":"            tasks.setTasks(tList);"},{"lineNumber":58,"author":{"gitId":"NiniJiaying"},"content":"            String old \u003d null;"},{"lineNumber":59,"author":{"gitId":"NiniJiaying"},"content":"            if (currTask instanceof ToDo) {"},{"lineNumber":60,"author":{"gitId":"NiniJiaying"},"content":"                old \u003d \"T | 0 | \" + currTask.getName();"},{"lineNumber":61,"author":{"gitId":"NiniJiaying"},"content":"            } else if (currTask instanceof Deadline) {"},{"lineNumber":62,"author":{"gitId":"NiniJiaying"},"content":"                old \u003d \"D | 0 | \" + currTask.getName();"},{"lineNumber":63,"author":{"gitId":"NiniJiaying"},"content":"            } else if (currTask instanceof Event) {"},{"lineNumber":64,"author":{"gitId":"NiniJiaying"},"content":"                old \u003d \"E | 0 | \" + currTask.getName();"},{"lineNumber":65,"author":{"gitId":"NiniJiaying"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"NiniJiaying"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(\"data/duke.txt\"));"},{"lineNumber":67,"author":{"gitId":"NiniJiaying"},"content":"            String oldContent \u003d \"\";"},{"lineNumber":68,"author":{"gitId":"NiniJiaying"},"content":"            String line \u003d reader.readLine();"},{"lineNumber":69,"author":{"gitId":"NiniJiaying"},"content":"            while (line !\u003d null) {"},{"lineNumber":70,"author":{"gitId":"NiniJiaying"},"content":"                oldContent \u003d oldContent + line + System.lineSeparator();"},{"lineNumber":71,"author":{"gitId":"NiniJiaying"},"content":"                line \u003d reader.readLine();"},{"lineNumber":72,"author":{"gitId":"NiniJiaying"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"NiniJiaying"},"content":"            String newContent \u003d null;"},{"lineNumber":74,"author":{"gitId":"NiniJiaying"},"content":"            if (currTask instanceof ToDo) {"},{"lineNumber":75,"author":{"gitId":"NiniJiaying"},"content":"                newContent \u003d oldContent.replace(old, \"T | 1 | \" + currTask.getName());"},{"lineNumber":76,"author":{"gitId":"NiniJiaying"},"content":"            } else if (currTask instanceof Deadline) {"},{"lineNumber":77,"author":{"gitId":"NiniJiaying"},"content":"                newContent \u003d oldContent.replace(old, \"D | 1 | \" + currTask.getName());"},{"lineNumber":78,"author":{"gitId":"NiniJiaying"},"content":"            } else if (currTask instanceof Event) {"},{"lineNumber":79,"author":{"gitId":"NiniJiaying"},"content":"                newContent \u003d oldContent.replace(old, \"E | 1 | \" + currTask.getName());"},{"lineNumber":80,"author":{"gitId":"NiniJiaying"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"NiniJiaying"},"content":"            FileWriter writer \u003d new FileWriter(\"data/duke.txt\");"},{"lineNumber":82,"author":{"gitId":"NiniJiaying"},"content":"            writer.write(newContent);"},{"lineNumber":83,"author":{"gitId":"NiniJiaying"},"content":"            reader.close();"},{"lineNumber":84,"author":{"gitId":"NiniJiaying"},"content":"            writer.close();"},{"lineNumber":85,"author":{"gitId":"NiniJiaying"},"content":"        } else if (commandName.split(\" \")[0].equals(\"delete\")) {"},{"lineNumber":86,"author":{"gitId":"NiniJiaying"},"content":"            int index \u003d Integer.parseInt(commandName.split(\" \")[1]);"},{"lineNumber":87,"author":{"gitId":"NiniJiaying"},"content":"            System.out.println(\"     Noted. I\u0027ve removed this task:\");"},{"lineNumber":88,"author":{"gitId":"NiniJiaying"},"content":"            System.out.println(\"       \" + tList.get(index - 1).toString());"},{"lineNumber":89,"author":{"gitId":"NiniJiaying"},"content":"            System.out.println(\"     Now you have \" + (tList.size() - 1) + \" tasks in the list.\");"},{"lineNumber":90,"author":{"gitId":"NiniJiaying"},"content":"            tList.remove(index - 1);"},{"lineNumber":91,"author":{"gitId":"NiniJiaying"},"content":"            tasks.setTasks(tList);"},{"lineNumber":92,"author":{"gitId":"NiniJiaying"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(\"data/duke.txt\"));"},{"lineNumber":93,"author":{"gitId":"NiniJiaying"},"content":"            String oldContent \u003d \"\";"},{"lineNumber":94,"author":{"gitId":"NiniJiaying"},"content":"            String line \u003d reader.readLine();"},{"lineNumber":95,"author":{"gitId":"NiniJiaying"},"content":"            int counter \u003d 0;"},{"lineNumber":96,"author":{"gitId":"NiniJiaying"},"content":"            while (line !\u003d null) {"},{"lineNumber":97,"author":{"gitId":"NiniJiaying"},"content":"                if (counter !\u003d index - 1) {"},{"lineNumber":98,"author":{"gitId":"NiniJiaying"},"content":"                    oldContent \u003d oldContent + line + System.lineSeparator();"},{"lineNumber":99,"author":{"gitId":"NiniJiaying"},"content":"                }"},{"lineNumber":100,"author":{"gitId":"NiniJiaying"},"content":"                counter++;"},{"lineNumber":101,"author":{"gitId":"NiniJiaying"},"content":"                line \u003d reader.readLine();"},{"lineNumber":102,"author":{"gitId":"NiniJiaying"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"NiniJiaying"},"content":"            FileWriter writer \u003d new FileWriter(\"data/duke.txt\");"},{"lineNumber":104,"author":{"gitId":"NiniJiaying"},"content":"            writer.write(oldContent);"},{"lineNumber":105,"author":{"gitId":"NiniJiaying"},"content":"            reader.close();"},{"lineNumber":106,"author":{"gitId":"NiniJiaying"},"content":"            writer.close();"},{"lineNumber":107,"author":{"gitId":"NiniJiaying"},"content":"        } else if (commandName.split(\" \")[0].equals(\"todo\")) {"},{"lineNumber":108,"author":{"gitId":"NiniJiaying"},"content":"            if (commandName.length() \u003c 5) {"},{"lineNumber":109,"author":{"gitId":"NiniJiaying"},"content":"                ToDo todo \u003d new ToDo(commandName);"},{"lineNumber":110,"author":{"gitId":"NiniJiaying"},"content":"                todo.addTask(0);"},{"lineNumber":111,"author":{"gitId":"NiniJiaying"},"content":"            } else {"},{"lineNumber":112,"author":{"gitId":"NiniJiaying"},"content":"                int end \u003d commandName.indexOf(\" \");"},{"lineNumber":113,"author":{"gitId":"NiniJiaying"},"content":"                String name \u003d commandName.substring(end + 1);"},{"lineNumber":114,"author":{"gitId":"NiniJiaying"},"content":"                try {"},{"lineNumber":115,"author":{"gitId":"NiniJiaying"},"content":"                    tList.add(new ToDo(name));"},{"lineNumber":116,"author":{"gitId":"NiniJiaying"},"content":"                    tList.get(tList.size() - 1).addTask(tList.size());"},{"lineNumber":117,"author":{"gitId":"NiniJiaying"},"content":"                    BufferedWriter writer \u003d new BufferedWriter("},{"lineNumber":118,"author":{"gitId":"NiniJiaying"},"content":"                            new FileWriter(\"data/duke.txt\", true));"},{"lineNumber":119,"author":{"gitId":"NiniJiaying"},"content":"                    writer.write(\"T | 0 | \" + name + \"\\n\");"},{"lineNumber":120,"author":{"gitId":"NiniJiaying"},"content":"                    writer.close();"},{"lineNumber":121,"author":{"gitId":"NiniJiaying"},"content":"                    tasks.setTasks(tList);"},{"lineNumber":122,"author":{"gitId":"NiniJiaying"},"content":"                } catch (DukeException e) {"},{"lineNumber":123,"author":{"gitId":"NiniJiaying"},"content":"                    System.out.println(e.getMessage());"},{"lineNumber":124,"author":{"gitId":"NiniJiaying"},"content":"                }"},{"lineNumber":125,"author":{"gitId":"NiniJiaying"},"content":"            }"},{"lineNumber":126,"author":{"gitId":"NiniJiaying"},"content":"        } else if (commandName.split(\" \")[0].equals(\"deadline\")) {"},{"lineNumber":127,"author":{"gitId":"NiniJiaying"},"content":"            if (commandName.length() \u003c 9) {"},{"lineNumber":128,"author":{"gitId":"NiniJiaying"},"content":"                Deadline deadline \u003d new Deadline(commandName, null);"},{"lineNumber":129,"author":{"gitId":"NiniJiaying"},"content":"                deadline.addTask(0);"},{"lineNumber":130,"author":{"gitId":"NiniJiaying"},"content":"            } else {"},{"lineNumber":131,"author":{"gitId":"NiniJiaying"},"content":"                try {"},{"lineNumber":132,"author":{"gitId":"NiniJiaying"},"content":"                    int end1 \u003d commandName.indexOf(\" \");"},{"lineNumber":133,"author":{"gitId":"NiniJiaying"},"content":"                    int end \u003d commandName.indexOf(\"/\");"},{"lineNumber":134,"author":{"gitId":"NiniJiaying"},"content":"                    String subString1 \u003d commandName.substring(end1 + 1, end - 1);"},{"lineNumber":135,"author":{"gitId":"NiniJiaying"},"content":"                    String subString2 \u003d commandName.substring(end + 4);"},{"lineNumber":136,"author":{"gitId":"NiniJiaying"},"content":"                    int year \u003d Integer.valueOf(subString2.substring(0, 4));"},{"lineNumber":137,"author":{"gitId":"NiniJiaying"},"content":"                    int mon \u003d Integer.valueOf(subString2.substring(5, 7));"},{"lineNumber":138,"author":{"gitId":"NiniJiaying"},"content":"                    int day \u003d Integer.valueOf(subString2.substring(8));"},{"lineNumber":139,"author":{"gitId":"NiniJiaying"},"content":"                    tList.add(new Deadline(subString1, LocalDate.of(year, mon, day)));"},{"lineNumber":140,"author":{"gitId":"NiniJiaying"},"content":"                    tList.get(tList.size() - 1).addTask(tList.size());"},{"lineNumber":141,"author":{"gitId":"NiniJiaying"},"content":"                    BufferedWriter writer \u003d new BufferedWriter("},{"lineNumber":142,"author":{"gitId":"NiniJiaying"},"content":"                            new FileWriter(\"data/duke.txt\", true));"},{"lineNumber":143,"author":{"gitId":"NiniJiaying"},"content":"                    writer.write(\"D | 0 | \" + subString1 + \" | \" + subString2 + \"\\n\");"},{"lineNumber":144,"author":{"gitId":"NiniJiaying"},"content":"                    writer.close();"},{"lineNumber":145,"author":{"gitId":"NiniJiaying"},"content":"                    tasks.setTasks(tList);"},{"lineNumber":146,"author":{"gitId":"NiniJiaying"},"content":"                } catch (DukeException e) {"},{"lineNumber":147,"author":{"gitId":"NiniJiaying"},"content":"                    System.out.println(e.getMessage());"},{"lineNumber":148,"author":{"gitId":"NiniJiaying"},"content":"                } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":149,"author":{"gitId":"NiniJiaying"},"content":"                    System.out.println(\"      OOPS!!! The due date of a deadline \""},{"lineNumber":150,"author":{"gitId":"NiniJiaying"},"content":"                            + \"cannot be empty. (Format: /by + date[YYYY-MM-DD])\");"},{"lineNumber":151,"author":{"gitId":"NiniJiaying"},"content":"                }"},{"lineNumber":152,"author":{"gitId":"NiniJiaying"},"content":"            }"},{"lineNumber":153,"author":{"gitId":"NiniJiaying"},"content":"        } else if (commandName.split(\" \")[0].equals(\"event\")) {"},{"lineNumber":154,"author":{"gitId":"NiniJiaying"},"content":"            if (commandName.length() \u003c 6) {"},{"lineNumber":155,"author":{"gitId":"NiniJiaying"},"content":"                Event event \u003d new Event(commandName, null);"},{"lineNumber":156,"author":{"gitId":"NiniJiaying"},"content":"                event.addTask(0);"},{"lineNumber":157,"author":{"gitId":"NiniJiaying"},"content":"            } else {"},{"lineNumber":158,"author":{"gitId":"NiniJiaying"},"content":"                try {"},{"lineNumber":159,"author":{"gitId":"NiniJiaying"},"content":"                    int end1 \u003d commandName.indexOf(\" \");"},{"lineNumber":160,"author":{"gitId":"NiniJiaying"},"content":"                    int end \u003d commandName.indexOf(\"/\");"},{"lineNumber":161,"author":{"gitId":"NiniJiaying"},"content":"                    String subString1 \u003d commandName.substring(end1 + 1 , end - 1);"},{"lineNumber":162,"author":{"gitId":"NiniJiaying"},"content":"                    String subString2 \u003d commandName.substring(end + 4);"},{"lineNumber":163,"author":{"gitId":"NiniJiaying"},"content":"                    int year \u003d Integer.valueOf(subString2.substring(0, 4));"},{"lineNumber":164,"author":{"gitId":"NiniJiaying"},"content":"                    int mon \u003d Integer.valueOf(subString2.substring(5, 7));"},{"lineNumber":165,"author":{"gitId":"NiniJiaying"},"content":"                    int day \u003d Integer.valueOf(subString2.substring(8));"},{"lineNumber":166,"author":{"gitId":"NiniJiaying"},"content":"                    tList.add(new Event(subString1, LocalDate.of(year, mon, day)));"},{"lineNumber":167,"author":{"gitId":"NiniJiaying"},"content":"                    tList.get(tList.size() - 1).addTask(tList.size());"},{"lineNumber":168,"author":{"gitId":"NiniJiaying"},"content":"                    BufferedWriter writer \u003d new BufferedWriter("},{"lineNumber":169,"author":{"gitId":"NiniJiaying"},"content":"                            new FileWriter(\"data/duke.txt\", true));"},{"lineNumber":170,"author":{"gitId":"NiniJiaying"},"content":"                    writer.write(\"E | 0 | \" + subString1 + \" | \" + subString2 + \"\\n\");"},{"lineNumber":171,"author":{"gitId":"NiniJiaying"},"content":"                    writer.close();"},{"lineNumber":172,"author":{"gitId":"NiniJiaying"},"content":"                    tasks.setTasks(tList);"},{"lineNumber":173,"author":{"gitId":"NiniJiaying"},"content":"                } catch (DukeException e) {"},{"lineNumber":174,"author":{"gitId":"NiniJiaying"},"content":"                    System.out.println(e.getMessage());"},{"lineNumber":175,"author":{"gitId":"NiniJiaying"},"content":"                } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":176,"author":{"gitId":"NiniJiaying"},"content":"                    System.out.println(\"      OOPS!!! The start and end date of \""},{"lineNumber":177,"author":{"gitId":"NiniJiaying"},"content":"                            + \"an event cannot be empty.(Format: /at + duration[YYYY-MM-DD])\");"},{"lineNumber":178,"author":{"gitId":"NiniJiaying"},"content":"                }"},{"lineNumber":179,"author":{"gitId":"NiniJiaying"},"content":"            }"},{"lineNumber":180,"author":{"gitId":"NiniJiaying"},"content":"        } else if (commandName.split(\" \")[0].equals(\"find\")) {"},{"lineNumber":181,"author":{"gitId":"NiniJiaying"},"content":"            String match \u003d commandName.split(\" \")[1];"},{"lineNumber":182,"author":{"gitId":"NiniJiaying"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(\"data/duke.txt\"));"},{"lineNumber":183,"author":{"gitId":"NiniJiaying"},"content":"            String line \u003d reader.readLine();"},{"lineNumber":184,"author":{"gitId":"NiniJiaying"},"content":"            int counter \u003d 0;"},{"lineNumber":185,"author":{"gitId":"NiniJiaying"},"content":"            int secondCounter \u003d 1;"},{"lineNumber":186,"author":{"gitId":"NiniJiaying"},"content":"            System.out.println(\"     Here are the matching tasks in your list:\");"},{"lineNumber":187,"author":{"gitId":"NiniJiaying"},"content":"            while (line !\u003d null) {"},{"lineNumber":188,"author":{"gitId":"NiniJiaying"},"content":"                if (line.indexOf(match) !\u003d -1) {"},{"lineNumber":189,"author":{"gitId":"NiniJiaying"},"content":"                    System.out.println(\"     \" + secondCounter + \".\" + tasks.getTasks().get(counter).toString());"},{"lineNumber":190,"author":{"gitId":"NiniJiaying"},"content":"                    secondCounter++;"},{"lineNumber":191,"author":{"gitId":"NiniJiaying"},"content":"                }"},{"lineNumber":192,"author":{"gitId":"NiniJiaying"},"content":"                line \u003d reader.readLine();"},{"lineNumber":193,"author":{"gitId":"NiniJiaying"},"content":"                counter++;"},{"lineNumber":194,"author":{"gitId":"NiniJiaying"},"content":"            }"},{"lineNumber":195,"author":{"gitId":"NiniJiaying"},"content":"        } else if (commandName.equals(\"bye\")) {"},{"lineNumber":196,"author":{"gitId":"NiniJiaying"},"content":"            System.out.println(\"     Bye. Hope to see you again soon!\");"},{"lineNumber":197,"author":{"gitId":"NiniJiaying"},"content":"        } else {"},{"lineNumber":198,"author":{"gitId":"NiniJiaying"},"content":"            System.out.println(\"      OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":199,"author":{"gitId":"NiniJiaying"},"content":"        }"},{"lineNumber":200,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":201,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":202,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":203,"author":{"gitId":"NiniJiaying"},"content":"     * Decides if this is the end of program."},{"lineNumber":204,"author":{"gitId":"NiniJiaying"},"content":"     *"},{"lineNumber":205,"author":{"gitId":"NiniJiaying"},"content":"     * @return true if command is bye."},{"lineNumber":206,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":207,"author":{"gitId":"NiniJiaying"},"content":"    public boolean isExit() {"},{"lineNumber":208,"author":{"gitId":"NiniJiaying"},"content":"        return (commandName.equals(\"bye\"));"},{"lineNumber":209,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":210,"author":{"gitId":"NiniJiaying"},"content":"}"}],"authorContributionMap":{"NiniJiaying":210}},{"path":"src/main/java/duke/dukeException/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"package duke.dukeexception;"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"NiniJiaying"},"content":"     * Class constructor."},{"lineNumber":6,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"NiniJiaying"},"content":"    public DukeException(String message) {"},{"lineNumber":8,"author":{"gitId":"NiniJiaying"},"content":"        super(message);"},{"lineNumber":9,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"NiniJiaying"},"content":"}"}],"authorContributionMap":{"NiniJiaying":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":"import duke.command.Command;"},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":"import duke.dukeexception.DukeException;"},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":5,"author":{"gitId":"NiniJiaying"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":7,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"NiniJiaying"},"content":"     * Class constructor."},{"lineNumber":9,"author":{"gitId":"NiniJiaying"},"content":"     * @param fullCommand  the commands input by user."},{"lineNumber":10,"author":{"gitId":"NiniJiaying"},"content":"     * @throws DukeException  If an input or output"},{"lineNumber":11,"author":{"gitId":"NiniJiaying"},"content":"     *  *                      exception occurred"},{"lineNumber":12,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"NiniJiaying"},"content":"    public static Command parse(String fullCommand) throws DukeException {"},{"lineNumber":14,"author":{"gitId":"NiniJiaying"},"content":"        return new Command(fullCommand);"},{"lineNumber":15,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"NiniJiaying"},"content":"}"}],"authorContributionMap":{"NiniJiaying":16}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"NiniJiaying"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"NiniJiaying"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"NiniJiaying"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":9,"author":{"gitId":"NiniJiaying"},"content":"import duke.dukeexception.DukeException;"},{"lineNumber":10,"author":{"gitId":"NiniJiaying"},"content":"import duke.task.Deadline;"},{"lineNumber":11,"author":{"gitId":"NiniJiaying"},"content":"import duke.task.Event;"},{"lineNumber":12,"author":{"gitId":"NiniJiaying"},"content":"import duke.task.Task;"},{"lineNumber":13,"author":{"gitId":"NiniJiaying"},"content":"import duke.task.ToDo;"},{"lineNumber":14,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":15,"author":{"gitId":"NiniJiaying"},"content":"public class Storage {"},{"lineNumber":16,"author":{"gitId":"NiniJiaying"},"content":"    /** The path of the file storing all tasks */"},{"lineNumber":17,"author":{"gitId":"NiniJiaying"},"content":"    private String filePath;"},{"lineNumber":18,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":19,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"NiniJiaying"},"content":"     * Class constructor."},{"lineNumber":21,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"NiniJiaying"},"content":"    public Storage(String filePath) {"},{"lineNumber":23,"author":{"gitId":"NiniJiaying"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":24,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":26,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"NiniJiaying"},"content":"     * Reads data from a given file if it exists, otherwise, creates a new file."},{"lineNumber":28,"author":{"gitId":"NiniJiaying"},"content":"     * Transforms data to tasks."},{"lineNumber":29,"author":{"gitId":"NiniJiaying"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"NiniJiaying"},"content":"     * @return an arraylist of tasks."},{"lineNumber":31,"author":{"gitId":"NiniJiaying"},"content":"     * @throws DukeException and IOException  If an input or output"},{"lineNumber":32,"author":{"gitId":"NiniJiaying"},"content":"     *                      exception occurred"},{"lineNumber":33,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"NiniJiaying"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException, IOException {"},{"lineNumber":35,"author":{"gitId":"NiniJiaying"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":36,"author":{"gitId":"NiniJiaying"},"content":"        File myObj \u003d new File(\"data/duke.txt\");"},{"lineNumber":37,"author":{"gitId":"NiniJiaying"},"content":"        if (myObj.exists()) {"},{"lineNumber":38,"author":{"gitId":"NiniJiaying"},"content":"            Scanner myReader \u003d new Scanner(myObj);"},{"lineNumber":39,"author":{"gitId":"NiniJiaying"},"content":"            while (myReader.hasNextLine()) {"},{"lineNumber":40,"author":{"gitId":"NiniJiaying"},"content":"                String data \u003d myReader.nextLine();"},{"lineNumber":41,"author":{"gitId":"NiniJiaying"},"content":"                Character type \u003d data.charAt(0);"},{"lineNumber":42,"author":{"gitId":"NiniJiaying"},"content":"                boolean isDone \u003d false;"},{"lineNumber":43,"author":{"gitId":"NiniJiaying"},"content":"                if (data.charAt(4) \u003d\u003d \u00271\u0027) {"},{"lineNumber":44,"author":{"gitId":"NiniJiaying"},"content":"                    isDone \u003d true;"},{"lineNumber":45,"author":{"gitId":"NiniJiaying"},"content":"                }"},{"lineNumber":46,"author":{"gitId":"NiniJiaying"},"content":"                data \u003d data.substring(8);"},{"lineNumber":47,"author":{"gitId":"NiniJiaying"},"content":"                int mid \u003d data.indexOf(\"|\");"},{"lineNumber":48,"author":{"gitId":"NiniJiaying"},"content":"                String name;"},{"lineNumber":49,"author":{"gitId":"NiniJiaying"},"content":"                String date \u003d null;"},{"lineNumber":50,"author":{"gitId":"NiniJiaying"},"content":"                int year \u003d -999;"},{"lineNumber":51,"author":{"gitId":"NiniJiaying"},"content":"                int mon \u003d -999;"},{"lineNumber":52,"author":{"gitId":"NiniJiaying"},"content":"                int day \u003d -999;"},{"lineNumber":53,"author":{"gitId":"NiniJiaying"},"content":"                if (mid \u003e 0) {"},{"lineNumber":54,"author":{"gitId":"NiniJiaying"},"content":"                    name \u003d data.substring(0, mid - 1);"},{"lineNumber":55,"author":{"gitId":"NiniJiaying"},"content":"                    date \u003d data.substring(mid + 2);"},{"lineNumber":56,"author":{"gitId":"NiniJiaying"},"content":"                    year \u003d Integer.valueOf(date.substring(0, 4));"},{"lineNumber":57,"author":{"gitId":"NiniJiaying"},"content":"                    mon \u003d Integer.valueOf(date.substring(5, 7));"},{"lineNumber":58,"author":{"gitId":"NiniJiaying"},"content":"                    day \u003d Integer.valueOf(date.substring(8));"},{"lineNumber":59,"author":{"gitId":"NiniJiaying"},"content":"                } else {"},{"lineNumber":60,"author":{"gitId":"NiniJiaying"},"content":"                    name \u003d data;"},{"lineNumber":61,"author":{"gitId":"NiniJiaying"},"content":"                }"},{"lineNumber":62,"author":{"gitId":"NiniJiaying"},"content":"                if (type \u003d\u003d \u0027T\u0027) {"},{"lineNumber":63,"author":{"gitId":"NiniJiaying"},"content":"                    tasks.add(new ToDo(name, isDone));"},{"lineNumber":64,"author":{"gitId":"NiniJiaying"},"content":"                } else if (type \u003d\u003d \u0027D\u0027) {"},{"lineNumber":65,"author":{"gitId":"NiniJiaying"},"content":"                    LocalDate d \u003d LocalDate.of(year, mon, day);"},{"lineNumber":66,"author":{"gitId":"NiniJiaying"},"content":"                    tasks.add(new Deadline(name, d, isDone));"},{"lineNumber":67,"author":{"gitId":"NiniJiaying"},"content":"                } else if (type \u003d\u003d \u0027E\u0027) {"},{"lineNumber":68,"author":{"gitId":"NiniJiaying"},"content":"                    LocalDate d \u003d LocalDate.of(year, mon, day);"},{"lineNumber":69,"author":{"gitId":"NiniJiaying"},"content":"                    tasks.add(new Event(name, d, isDone));"},{"lineNumber":70,"author":{"gitId":"NiniJiaying"},"content":"                }"},{"lineNumber":71,"author":{"gitId":"NiniJiaying"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"NiniJiaying"},"content":"            myReader.close();"},{"lineNumber":73,"author":{"gitId":"NiniJiaying"},"content":"        } else {"},{"lineNumber":74,"author":{"gitId":"NiniJiaying"},"content":"            myObj.createNewFile();"},{"lineNumber":75,"author":{"gitId":"NiniJiaying"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"NiniJiaying"},"content":"        return tasks;"},{"lineNumber":77,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"NiniJiaying"},"content":"}"}],"authorContributionMap":{"NiniJiaying":78}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":"import duke.dukeexception.DukeException;"},{"lineNumber":5,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":6,"author":{"gitId":"NiniJiaying"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"NiniJiaying"},"content":"    /** Date of the deadline */"},{"lineNumber":8,"author":{"gitId":"NiniJiaying"},"content":"    protected LocalDate by;"},{"lineNumber":9,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":10,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"NiniJiaying"},"content":"     * Class constructor specifying deadline name and due date."},{"lineNumber":12,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"NiniJiaying"},"content":"    public Deadline(String name, LocalDate by) {"},{"lineNumber":14,"author":{"gitId":"NiniJiaying"},"content":"        super(name);"},{"lineNumber":15,"author":{"gitId":"NiniJiaying"},"content":"        this.by \u003d by;"},{"lineNumber":16,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":18,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"NiniJiaying"},"content":"     * Class constructor specifying deadline name, due date and status."},{"lineNumber":20,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"NiniJiaying"},"content":"    public Deadline(String name, LocalDate by, boolean isDone) {"},{"lineNumber":22,"author":{"gitId":"NiniJiaying"},"content":"        super(name);"},{"lineNumber":23,"author":{"gitId":"NiniJiaying"},"content":"        this.by \u003d by;"},{"lineNumber":24,"author":{"gitId":"NiniJiaying"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":25,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":27,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"NiniJiaying"},"content":"     * Adds a deadline to taskList."},{"lineNumber":29,"author":{"gitId":"NiniJiaying"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"NiniJiaying"},"content":"     * @param count  the current count of tasks in the taskList."},{"lineNumber":31,"author":{"gitId":"NiniJiaying"},"content":"     * @throws DukeException  If an input or output"},{"lineNumber":32,"author":{"gitId":"NiniJiaying"},"content":"     *                      exception occurred"},{"lineNumber":33,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"NiniJiaying"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"NiniJiaying"},"content":"    public void addTask(int count) throws DukeException {"},{"lineNumber":36,"author":{"gitId":"NiniJiaying"},"content":"        if (this.name.equals(\"deadline\")) {"},{"lineNumber":37,"author":{"gitId":"NiniJiaying"},"content":"            throw new DukeException(\"      OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":38,"author":{"gitId":"NiniJiaying"},"content":"        } else {"},{"lineNumber":39,"author":{"gitId":"NiniJiaying"},"content":"            super.addTask(count);"},{"lineNumber":40,"author":{"gitId":"NiniJiaying"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":43,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"NiniJiaying"},"content":"     * Overrides toString method."},{"lineNumber":45,"author":{"gitId":"NiniJiaying"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"NiniJiaying"},"content":"     * @return the string representation of a deadline."},{"lineNumber":47,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"NiniJiaying"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"NiniJiaying"},"content":"    public String toString() {"},{"lineNumber":50,"author":{"gitId":"NiniJiaying"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.getMonth() + \" \""},{"lineNumber":51,"author":{"gitId":"NiniJiaying"},"content":"                + by.getDayOfMonth() + \" \" + by.getYear() + \")\";"},{"lineNumber":52,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"NiniJiaying"},"content":"}"},{"lineNumber":54,"author":{"gitId":"NiniJiaying"},"content":""}],"authorContributionMap":{"NiniJiaying":54}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":5,"author":{"gitId":"NiniJiaying"},"content":"import duke.dukeexception.DukeException;"},{"lineNumber":6,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":7,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":8,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":9,"author":{"gitId":"NiniJiaying"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"NiniJiaying"},"content":"    /** Event time */"},{"lineNumber":11,"author":{"gitId":"NiniJiaying"},"content":"    protected LocalDate at;"},{"lineNumber":12,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":13,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"NiniJiaying"},"content":"     * Class constructor specifying event name and duration."},{"lineNumber":15,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"NiniJiaying"},"content":"    public Event(String name, LocalDate at) {"},{"lineNumber":17,"author":{"gitId":"NiniJiaying"},"content":"        super(name);"},{"lineNumber":18,"author":{"gitId":"NiniJiaying"},"content":"        this.at \u003d at;"},{"lineNumber":19,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":21,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"NiniJiaying"},"content":"     * Class constructor specifying event name, duration and status."},{"lineNumber":23,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"NiniJiaying"},"content":"    public Event(String name, LocalDate at, boolean isDone) {"},{"lineNumber":25,"author":{"gitId":"NiniJiaying"},"content":"        super(name);"},{"lineNumber":26,"author":{"gitId":"NiniJiaying"},"content":"        this.at \u003d at;"},{"lineNumber":27,"author":{"gitId":"NiniJiaying"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":28,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":30,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"NiniJiaying"},"content":"     * Adds a event to taskList."},{"lineNumber":32,"author":{"gitId":"NiniJiaying"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"NiniJiaying"},"content":"     * @param count  the current count of tasks in the taskList."},{"lineNumber":34,"author":{"gitId":"NiniJiaying"},"content":"     * @throws DukeException  If an input or output"},{"lineNumber":35,"author":{"gitId":"NiniJiaying"},"content":"     *                      exception occurred"},{"lineNumber":36,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"NiniJiaying"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"NiniJiaying"},"content":"    public void addTask(int count) throws DukeException {"},{"lineNumber":39,"author":{"gitId":"NiniJiaying"},"content":"        if (this.name.equals(\"event\")) {"},{"lineNumber":40,"author":{"gitId":"NiniJiaying"},"content":"            throw new DukeException(\"      OOPS!!! The description of an event cannot be empty.\");"},{"lineNumber":41,"author":{"gitId":"NiniJiaying"},"content":"        } else {"},{"lineNumber":42,"author":{"gitId":"NiniJiaying"},"content":"            super.addTask(count);"},{"lineNumber":43,"author":{"gitId":"NiniJiaying"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":46,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"NiniJiaying"},"content":"     * Overrides toString method."},{"lineNumber":48,"author":{"gitId":"NiniJiaying"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"NiniJiaying"},"content":"     * @return the string representation of an event."},{"lineNumber":50,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"NiniJiaying"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"NiniJiaying"},"content":"    public String toString() {"},{"lineNumber":53,"author":{"gitId":"NiniJiaying"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.getMonth()"},{"lineNumber":54,"author":{"gitId":"NiniJiaying"},"content":"                + \" \" + at.getDayOfMonth() + \" \" + at.getYear() + \")\";"},{"lineNumber":55,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"NiniJiaying"},"content":"}"},{"lineNumber":57,"author":{"gitId":"NiniJiaying"},"content":""}],"authorContributionMap":{"NiniJiaying":57}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":"import duke.dukeexception.DukeException;"},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"NiniJiaying"},"content":"    /** Status of the task */"},{"lineNumber":6,"author":{"gitId":"NiniJiaying"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"NiniJiaying"},"content":"    /** Name of the task */"},{"lineNumber":8,"author":{"gitId":"NiniJiaying"},"content":"    protected String name;"},{"lineNumber":9,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":10,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"NiniJiaying"},"content":"     * Class constructor."},{"lineNumber":12,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"NiniJiaying"},"content":"    public Task(String name) {"},{"lineNumber":14,"author":{"gitId":"NiniJiaying"},"content":"        this.isDone \u003d false;"},{"lineNumber":15,"author":{"gitId":"NiniJiaying"},"content":"        this.name \u003d name;"},{"lineNumber":16,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":18,"author":{"gitId":"NiniJiaying"},"content":"    public String getName() {"},{"lineNumber":19,"author":{"gitId":"NiniJiaying"},"content":"        return name;"},{"lineNumber":20,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":22,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"NiniJiaying"},"content":"     * Sets the status of the current task to completed."},{"lineNumber":24,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"NiniJiaying"},"content":"    public void markAsDone() {"},{"lineNumber":26,"author":{"gitId":"NiniJiaying"},"content":"        this.isDone \u003d true;"},{"lineNumber":27,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":29,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"NiniJiaying"},"content":"     * Adds a task to taskList."},{"lineNumber":31,"author":{"gitId":"NiniJiaying"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"NiniJiaying"},"content":"     * @param count  the current count of tasks in the taskList."},{"lineNumber":33,"author":{"gitId":"NiniJiaying"},"content":"     * @throws DukeException  If an input or output"},{"lineNumber":34,"author":{"gitId":"NiniJiaying"},"content":"     *                      exception occurred"},{"lineNumber":35,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"NiniJiaying"},"content":"    public void addTask(int count) throws DukeException {"},{"lineNumber":37,"author":{"gitId":"NiniJiaying"},"content":"        if (this.name.equals(\"todo\")) {"},{"lineNumber":38,"author":{"gitId":"NiniJiaying"},"content":"            throw new DukeException(\"      OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":39,"author":{"gitId":"NiniJiaying"},"content":"        } else {"},{"lineNumber":40,"author":{"gitId":"NiniJiaying"},"content":"            System.out.println(\"     Got it. I\u0027ve added this task:\");"},{"lineNumber":41,"author":{"gitId":"NiniJiaying"},"content":"            System.out.println(\"       \" + this.toString());"},{"lineNumber":42,"author":{"gitId":"NiniJiaying"},"content":"            if (count \u003d\u003d 1) {"},{"lineNumber":43,"author":{"gitId":"NiniJiaying"},"content":"                System.out.println(\"     Now you have \" + count + \" task in the list.\");"},{"lineNumber":44,"author":{"gitId":"NiniJiaying"},"content":"            } else {"},{"lineNumber":45,"author":{"gitId":"NiniJiaying"},"content":"                System.out.println(\"     Now you have \" + count + \" tasks in the list.\");"},{"lineNumber":46,"author":{"gitId":"NiniJiaying"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":48,"author":{"gitId":"NiniJiaying"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":50,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":52,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"NiniJiaying"},"content":"     * Overrides toString method."},{"lineNumber":54,"author":{"gitId":"NiniJiaying"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"NiniJiaying"},"content":"     * @return the string representation of a task."},{"lineNumber":56,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"NiniJiaying"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"NiniJiaying"},"content":"    public String toString() {"},{"lineNumber":59,"author":{"gitId":"NiniJiaying"},"content":"        String outString;"},{"lineNumber":60,"author":{"gitId":"NiniJiaying"},"content":"        if (this.isDone) {"},{"lineNumber":61,"author":{"gitId":"NiniJiaying"},"content":"            outString \u003d \"[X] \" + this.name;"},{"lineNumber":62,"author":{"gitId":"NiniJiaying"},"content":"        } else {"},{"lineNumber":63,"author":{"gitId":"NiniJiaying"},"content":"            outString \u003d \"[ ] \" + this.name;"},{"lineNumber":64,"author":{"gitId":"NiniJiaying"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"NiniJiaying"},"content":"        return outString;"},{"lineNumber":66,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"NiniJiaying"},"content":"}"}],"authorContributionMap":{"NiniJiaying":67}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":"public class TaskList {"},{"lineNumber":5,"author":{"gitId":"NiniJiaying"},"content":"    /** An arraylist of tasks */"},{"lineNumber":6,"author":{"gitId":"NiniJiaying"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":7,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":8,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":9,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"NiniJiaying"},"content":"     * Class constructor specifying an arraylist of tasks."},{"lineNumber":11,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"NiniJiaying"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":13,"author":{"gitId":"NiniJiaying"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":14,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":16,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"NiniJiaying"},"content":"     * Class constructor."},{"lineNumber":18,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"NiniJiaying"},"content":"    public TaskList() {"},{"lineNumber":20,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":22,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":23,"author":{"gitId":"NiniJiaying"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":24,"author":{"gitId":"NiniJiaying"},"content":"        return tasks;"},{"lineNumber":25,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":27,"author":{"gitId":"NiniJiaying"},"content":"    public void setTasks(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":28,"author":{"gitId":"NiniJiaying"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":29,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":30,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"NiniJiaying"},"content":"}"}],"authorContributionMap":{"NiniJiaying":31}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":"import duke.dukeexception.DukeException;"},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":"public class ToDo extends Task {"},{"lineNumber":5,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"NiniJiaying"},"content":"     * Class constructor specifying name."},{"lineNumber":7,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"NiniJiaying"},"content":"    public ToDo(String name) {"},{"lineNumber":9,"author":{"gitId":"NiniJiaying"},"content":"        super(name);"},{"lineNumber":10,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":12,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"NiniJiaying"},"content":"     * Class constructor specifying name and status."},{"lineNumber":14,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"NiniJiaying"},"content":"    public ToDo(String name, boolean isDone) {"},{"lineNumber":16,"author":{"gitId":"NiniJiaying"},"content":"        super(name);"},{"lineNumber":17,"author":{"gitId":"NiniJiaying"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":18,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":20,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"NiniJiaying"},"content":"     * Adds a todo to taskList."},{"lineNumber":22,"author":{"gitId":"NiniJiaying"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"NiniJiaying"},"content":"     * @param count  the current count of tasks in the taskList."},{"lineNumber":24,"author":{"gitId":"NiniJiaying"},"content":"     * @throws DukeException  If an input or output"},{"lineNumber":25,"author":{"gitId":"NiniJiaying"},"content":"     *                      exception occurred"},{"lineNumber":26,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"NiniJiaying"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"NiniJiaying"},"content":"    public void addTask(int count) throws DukeException {"},{"lineNumber":29,"author":{"gitId":"NiniJiaying"},"content":"        if (this.name.equals(\"todo\")) {"},{"lineNumber":30,"author":{"gitId":"NiniJiaying"},"content":"            throw new DukeException(\"      OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":31,"author":{"gitId":"NiniJiaying"},"content":"        } else {"},{"lineNumber":32,"author":{"gitId":"NiniJiaying"},"content":"            super.addTask(count);"},{"lineNumber":33,"author":{"gitId":"NiniJiaying"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":36,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"NiniJiaying"},"content":"     * Overrides toString methods."},{"lineNumber":38,"author":{"gitId":"NiniJiaying"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"NiniJiaying"},"content":"     * @return the string representation of a todo."},{"lineNumber":40,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"NiniJiaying"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"NiniJiaying"},"content":"    public String toString() {"},{"lineNumber":43,"author":{"gitId":"NiniJiaying"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":44,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"NiniJiaying"},"content":"}"}],"authorContributionMap":{"NiniJiaying":45}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":"public class Ui {"},{"lineNumber":5,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"NiniJiaying"},"content":"     * Prompts the user to enter a command."},{"lineNumber":7,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"NiniJiaying"},"content":"    public String readCommand() {"},{"lineNumber":9,"author":{"gitId":"NiniJiaying"},"content":"        System.out.println(\"Enter a command:\");"},{"lineNumber":10,"author":{"gitId":"NiniJiaying"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":11,"author":{"gitId":"NiniJiaying"},"content":"        String commands \u003d in.nextLine();"},{"lineNumber":12,"author":{"gitId":"NiniJiaying"},"content":"        return commands;"},{"lineNumber":13,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":15,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"NiniJiaying"},"content":"     * Prints break line."},{"lineNumber":17,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"NiniJiaying"},"content":"    public void showLine() {"},{"lineNumber":19,"author":{"gitId":"NiniJiaying"},"content":"        System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":20,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":22,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"NiniJiaying"},"content":"     * Prints the error message of a specific error."},{"lineNumber":24,"author":{"gitId":"NiniJiaying"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"NiniJiaying"},"content":"     * @param message  the error message of the error."},{"lineNumber":26,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"NiniJiaying"},"content":"    public void showError(String message) {"},{"lineNumber":28,"author":{"gitId":"NiniJiaying"},"content":"        System.out.println(message);"},{"lineNumber":29,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":31,"author":{"gitId":"NiniJiaying"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"NiniJiaying"},"content":"     * Prints welcome message."},{"lineNumber":33,"author":{"gitId":"NiniJiaying"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"NiniJiaying"},"content":"    public void showWelcome() {"},{"lineNumber":35,"author":{"gitId":"NiniJiaying"},"content":"        System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":36,"author":{"gitId":"NiniJiaying"},"content":"        System.out.println(\"     Hello! I\u0027m Duke\");"},{"lineNumber":37,"author":{"gitId":"NiniJiaying"},"content":"        System.out.println(\"     What can I do for you?\");"},{"lineNumber":38,"author":{"gitId":"NiniJiaying"},"content":"        System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":39,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":41,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":42,"author":{"gitId":"NiniJiaying"},"content":"    public void showLoadingError() {"},{"lineNumber":43,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"NiniJiaying"},"content":"}"}],"authorContributionMap":{"NiniJiaying":44}},{"path":"src/test/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":"public class DukeTest {"},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":"    @Test"},{"lineNumber":5,"author":{"gitId":"NiniJiaying"},"content":"    void run() {"},{"lineNumber":6,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":8,"author":{"gitId":"NiniJiaying"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"NiniJiaying"},"content":"    void main() {"},{"lineNumber":10,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":11,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"NiniJiaying"},"content":"}"}],"authorContributionMap":{"NiniJiaying":12}},{"path":"src/test/duke/command/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":5,"author":{"gitId":"NiniJiaying"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":7,"author":{"gitId":"NiniJiaying"},"content":"class CommandTest {"},{"lineNumber":8,"author":{"gitId":"NiniJiaying"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"NiniJiaying"},"content":"    void execute() {"},{"lineNumber":10,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":11,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":13,"author":{"gitId":"NiniJiaying"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"NiniJiaying"},"content":"    void isExit() {"},{"lineNumber":15,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":17,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":18,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":19,"author":{"gitId":"NiniJiaying"},"content":"}"}],"authorContributionMap":{"NiniJiaying":19}},{"path":"src/test/duke/dukeException/DukeExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"package duke.dukeException;"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":"class DukeExceptionTest {"},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":5,"author":{"gitId":"NiniJiaying"},"content":"}"}],"authorContributionMap":{"NiniJiaying":5}},{"path":"src/test/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":5,"author":{"gitId":"NiniJiaying"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":7,"author":{"gitId":"NiniJiaying"},"content":"class ParserTest {"},{"lineNumber":8,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":9,"author":{"gitId":"NiniJiaying"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"NiniJiaying"},"content":"    void parse() {"},{"lineNumber":11,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"NiniJiaying"},"content":"}"}],"authorContributionMap":{"NiniJiaying":12}},{"path":"src/test/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":5,"author":{"gitId":"NiniJiaying"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":7,"author":{"gitId":"NiniJiaying"},"content":"class StorageTest {"},{"lineNumber":8,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":9,"author":{"gitId":"NiniJiaying"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"NiniJiaying"},"content":"    void load() {"},{"lineNumber":11,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"NiniJiaying"},"content":"}"}],"authorContributionMap":{"NiniJiaying":12}},{"path":"src/test/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":5,"author":{"gitId":"NiniJiaying"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":7,"author":{"gitId":"NiniJiaying"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":9,"author":{"gitId":"NiniJiaying"},"content":"class DeadlineTest {"},{"lineNumber":10,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":11,"author":{"gitId":"NiniJiaying"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"NiniJiaying"},"content":"    void addTask() {"},{"lineNumber":13,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":15,"author":{"gitId":"NiniJiaying"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"NiniJiaying"},"content":"    void testToString() {"},{"lineNumber":17,"author":{"gitId":"NiniJiaying"},"content":"        Deadline ddl \u003d new Deadline(\"play badminton\", LocalDate.of(2020, 01, 22));"},{"lineNumber":18,"author":{"gitId":"NiniJiaying"},"content":"        assertEquals(\"[D][ ] play badminton (by: JANUARY 22 2020)\", ddl.toString());"},{"lineNumber":19,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"NiniJiaying"},"content":"}"}],"authorContributionMap":{"NiniJiaying":20}},{"path":"src/test/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":5,"author":{"gitId":"NiniJiaying"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":7,"author":{"gitId":"NiniJiaying"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":9,"author":{"gitId":"NiniJiaying"},"content":"class EventTest {"},{"lineNumber":10,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":11,"author":{"gitId":"NiniJiaying"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"NiniJiaying"},"content":"    void addTask() {"},{"lineNumber":13,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":15,"author":{"gitId":"NiniJiaying"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"NiniJiaying"},"content":"    void testToString() {"},{"lineNumber":17,"author":{"gitId":"NiniJiaying"},"content":"        Event event \u003d new Event(\"play badminton\", LocalDate.of(2020, 01, 22));"},{"lineNumber":18,"author":{"gitId":"NiniJiaying"},"content":"        assertEquals(\"[E][ ] play badminton (at: JANUARY 22 2020)\", event.toString());"},{"lineNumber":19,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"NiniJiaying"},"content":"}"}],"authorContributionMap":{"NiniJiaying":20}},{"path":"src/test/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":5,"author":{"gitId":"NiniJiaying"},"content":"class TaskListTest {"},{"lineNumber":6,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":7,"author":{"gitId":"NiniJiaying"},"content":"}"}],"authorContributionMap":{"NiniJiaying":7}},{"path":"src/test/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":5,"author":{"gitId":"NiniJiaying"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":7,"author":{"gitId":"NiniJiaying"},"content":"class TaskTest {"},{"lineNumber":8,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":9,"author":{"gitId":"NiniJiaying"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"NiniJiaying"},"content":"    void markAsDone() {"},{"lineNumber":11,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":13,"author":{"gitId":"NiniJiaying"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"NiniJiaying"},"content":"    void addTask() {"},{"lineNumber":15,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"NiniJiaying"},"content":"}"}],"authorContributionMap":{"NiniJiaying":16}},{"path":"src/test/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":5,"author":{"gitId":"NiniJiaying"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":7,"author":{"gitId":"NiniJiaying"},"content":"class ToDoTest {"},{"lineNumber":8,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":9,"author":{"gitId":"NiniJiaying"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"NiniJiaying"},"content":"    void addTask() {"},{"lineNumber":11,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":13,"author":{"gitId":"NiniJiaying"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"NiniJiaying"},"content":"    void testToString() {"},{"lineNumber":15,"author":{"gitId":"NiniJiaying"},"content":"        ToDo todo \u003d new ToDo(\"play badminton\");"},{"lineNumber":16,"author":{"gitId":"NiniJiaying"},"content":"        assertEquals(\"[T][ ] play badminton\", todo.toString());"},{"lineNumber":17,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"NiniJiaying"},"content":"}"}],"authorContributionMap":{"NiniJiaying":18}},{"path":"src/test/duke/ui/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":5,"author":{"gitId":"NiniJiaying"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":7,"author":{"gitId":"NiniJiaying"},"content":"class UiTest {"},{"lineNumber":8,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":9,"author":{"gitId":"NiniJiaying"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"NiniJiaying"},"content":"    void readCommandTest() {"},{"lineNumber":11,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"NiniJiaying"},"content":""},{"lineNumber":13,"author":{"gitId":"NiniJiaying"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"NiniJiaying"},"content":"    void showLineTest() {"},{"lineNumber":15,"author":{"gitId":"NiniJiaying"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"NiniJiaying"},"content":"}"}],"authorContributionMap":{"NiniJiaying":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NiniJiaying"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"NiniJiaying"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"NiniJiaying"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"NiniJiaying"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"NiniJiaying"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"NiniJiaying"},"content":"done 4"},{"lineNumber":7,"author":{"gitId":"NiniJiaying"},"content":"todo borrow book"},{"lineNumber":8,"author":{"gitId":"NiniJiaying"},"content":"list"},{"lineNumber":9,"author":{"gitId":"NiniJiaying"},"content":"deadline return book /by Sunday"},{"lineNumber":10,"author":{"gitId":"NiniJiaying"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":11,"author":{"gitId":"NiniJiaying"},"content":"bye"}],"authorContributionMap":{"NiniJiaying":11}}]
