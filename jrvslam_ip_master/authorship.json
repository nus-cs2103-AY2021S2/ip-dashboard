[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":"public class Deadline extends Task {"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"    private LocalDateTime localDate;"},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":"    public Deadline(String input, String date) {"},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":"        super(input);"},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":"        LocalDateTime lDate \u003d new ParseDates().parseString(date);"},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"        this.localDate \u003d lDate;"},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":13,"author":{"gitId":"jrvslam"},"content":"    public Deadline(String input, String date, int done) {"},{"lineNumber":14,"author":{"gitId":"jrvslam"},"content":"        super(input);"},{"lineNumber":15,"author":{"gitId":"jrvslam"},"content":"        LocalDateTime lDate \u003d new ParseDates().parseString(date);"},{"lineNumber":16,"author":{"gitId":"jrvslam"},"content":"        this.localDate \u003d lDate;"},{"lineNumber":17,"author":{"gitId":"jrvslam"},"content":"        if (done \u003d\u003d 1) {"},{"lineNumber":18,"author":{"gitId":"jrvslam"},"content":"            this.doTask();"},{"lineNumber":19,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":22,"author":{"gitId":"jrvslam"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"jrvslam"},"content":"    public String taskSave() {"},{"lineNumber":24,"author":{"gitId":"jrvslam"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");"},{"lineNumber":25,"author":{"gitId":"jrvslam"},"content":"        return \"D\" + super.taskSave() + \" | \" + localDate.format(dateTimeFormatter);"},{"lineNumber":26,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":28,"author":{"gitId":"jrvslam"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":30,"author":{"gitId":"jrvslam"},"content":"    public String toString(){"},{"lineNumber":31,"author":{"gitId":"jrvslam"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":32,"author":{"gitId":"jrvslam"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + localDate.format(dateTimeFormatter) + \")\";"},{"lineNumber":33,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"jrvslam"},"content":"}"}],"authorContributionMap":{"jrvslam":34}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"import java.nio.file.Path;"},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":"import java.nio.file.attribute.FileAttribute;"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":"    private File file;"},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":17,"author":{"gitId":"jrvslam"},"content":"        System.out.println(\"   Hello there! I\u0027m Rawrz, always here for you!\");"},{"lineNumber":18,"author":{"gitId":"jrvslam"},"content":"        System.out.println(\"   How can I help you today?\");"},{"lineNumber":19,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":20,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":21,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":22,"author":{"gitId":"jrvslam"},"content":"        ArrayList\u003cTask\u003e arrL \u003d new ArrayList\u003c\u003e();"},{"lineNumber":23,"author":{"gitId":"jrvslam"},"content":"        SaveToFile fio \u003d new SaveToFile(arrL);"},{"lineNumber":24,"author":{"gitId":"jrvslam"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":25,"author":{"gitId":"jrvslam"},"content":"        String input \u003d sc.nextLine();"},{"lineNumber":26,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":27,"author":{"gitId":"jrvslam"},"content":"        Duke obj \u003d new Duke();"},{"lineNumber":28,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":29,"author":{"gitId":"jrvslam"},"content":"        while (!input.equals(\"bye\")) {"},{"lineNumber":30,"author":{"gitId":"jrvslam"},"content":"            int first \u003d input.indexOf(\" \");"},{"lineNumber":31,"author":{"gitId":"jrvslam"},"content":"            String command;"},{"lineNumber":32,"author":{"gitId":"jrvslam"},"content":"            if (first \u003d\u003d -1) {"},{"lineNumber":33,"author":{"gitId":"jrvslam"},"content":"                command \u003d input;"},{"lineNumber":34,"author":{"gitId":"jrvslam"},"content":"            } else {"},{"lineNumber":35,"author":{"gitId":"jrvslam"},"content":"                command \u003d input.substring(0, first);"},{"lineNumber":36,"author":{"gitId":"jrvslam"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"jrvslam"},"content":"            String date;"},{"lineNumber":38,"author":{"gitId":"jrvslam"},"content":"            System.out.println(\"___\");"},{"lineNumber":39,"author":{"gitId":"jrvslam"},"content":"            try {"},{"lineNumber":40,"author":{"gitId":"jrvslam"},"content":"                obj.checkCommand(input, command, first, arrL.size());"},{"lineNumber":41,"author":{"gitId":"jrvslam"},"content":"                switch (command) {"},{"lineNumber":42,"author":{"gitId":"jrvslam"},"content":"                case \"list\":"},{"lineNumber":43,"author":{"gitId":"jrvslam"},"content":"                    for (int i \u003d 0; i \u003c arrL.size(); i++) {"},{"lineNumber":44,"author":{"gitId":"jrvslam"},"content":"                        System.out.println(\"   \" + (i + 1) + \". \" + arrL.get(i));"},{"lineNumber":45,"author":{"gitId":"jrvslam"},"content":"                    }"},{"lineNumber":46,"author":{"gitId":"jrvslam"},"content":"                    break;"},{"lineNumber":47,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":48,"author":{"gitId":"jrvslam"},"content":"                case \"done\":"},{"lineNumber":49,"author":{"gitId":"jrvslam"},"content":"                    int task_No \u003d Integer.parseInt(input.substring(first + 1));"},{"lineNumber":50,"author":{"gitId":"jrvslam"},"content":"                    arrL.get(task_No - 1).doTask();"},{"lineNumber":51,"author":{"gitId":"jrvslam"},"content":"                    System.out.println(\"   Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":52,"author":{"gitId":"jrvslam"},"content":"                    System.out.println(\"      \" + arrL.get(task_No - 1));"},{"lineNumber":53,"author":{"gitId":"jrvslam"},"content":"                    break;"},{"lineNumber":54,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":55,"author":{"gitId":"jrvslam"},"content":"                case \"todo\":"},{"lineNumber":56,"author":{"gitId":"jrvslam"},"content":"                    ToDo todo \u003d new ToDo(input.substring(first).strip());"},{"lineNumber":57,"author":{"gitId":"jrvslam"},"content":"                    arrL.add(todo);"},{"lineNumber":58,"author":{"gitId":"jrvslam"},"content":"                    System.out.println(\"   Got it! I\u0027ve added this task:\\n      \" + todo);"},{"lineNumber":59,"author":{"gitId":"jrvslam"},"content":"                    System.out.println(\"   Now you have \" + arrL.size() + \" tasks in the list\");"},{"lineNumber":60,"author":{"gitId":"jrvslam"},"content":"                    break;"},{"lineNumber":61,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":62,"author":{"gitId":"jrvslam"},"content":"                case \"deadline\":"},{"lineNumber":63,"author":{"gitId":"jrvslam"},"content":"                    int byDate \u003d input.lastIndexOf(\"/by \");"},{"lineNumber":64,"author":{"gitId":"jrvslam"},"content":"                    date \u003d input.substring(byDate + 4);"},{"lineNumber":65,"author":{"gitId":"jrvslam"},"content":"                    Deadline deadline \u003d new Deadline(input.substring(first, byDate).strip(), date);"},{"lineNumber":66,"author":{"gitId":"jrvslam"},"content":"                    arrL.add(deadline);"},{"lineNumber":67,"author":{"gitId":"jrvslam"},"content":"                    System.out.println(\"   Got it! I\u0027ve added this task:\\n      \" + deadline);"},{"lineNumber":68,"author":{"gitId":"jrvslam"},"content":"                    System.out.println(\"   Now you have \" + arrL.size() + \" tasks in the list\");"},{"lineNumber":69,"author":{"gitId":"jrvslam"},"content":"                    break;"},{"lineNumber":70,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":71,"author":{"gitId":"jrvslam"},"content":"                case \"event\":"},{"lineNumber":72,"author":{"gitId":"jrvslam"},"content":"                    int atDate \u003d input.lastIndexOf(\"/at \");"},{"lineNumber":73,"author":{"gitId":"jrvslam"},"content":"                    date \u003d input.substring(atDate + 4);"},{"lineNumber":74,"author":{"gitId":"jrvslam"},"content":"                    Event event \u003d new Event(input.substring(first, atDate).strip(), date);"},{"lineNumber":75,"author":{"gitId":"jrvslam"},"content":"                    arrL.add(event);"},{"lineNumber":76,"author":{"gitId":"jrvslam"},"content":"                    System.out.println(\"   Got it! I\u0027ve added this task:\\n      \" + event);"},{"lineNumber":77,"author":{"gitId":"jrvslam"},"content":"                    System.out.println(\"   Now you have \" + arrL.size() + \" tasks in the list\");"},{"lineNumber":78,"author":{"gitId":"jrvslam"},"content":"                    break;"},{"lineNumber":79,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":80,"author":{"gitId":"jrvslam"},"content":"                case \"remove\":"},{"lineNumber":81,"author":{"gitId":"jrvslam"},"content":"                    int remove_No \u003d Integer.parseInt(input.substring(first + 1));"},{"lineNumber":82,"author":{"gitId":"jrvslam"},"content":"                    Task task \u003d arrL.remove(remove_No - 1);"},{"lineNumber":83,"author":{"gitId":"jrvslam"},"content":"                    System.out.println(\"   Okay! I\u0027ve removed this task:\");"},{"lineNumber":84,"author":{"gitId":"jrvslam"},"content":"                    System.out.println(\"      \" + task);"},{"lineNumber":85,"author":{"gitId":"jrvslam"},"content":"                    System.out.println(\"   Now you have \" + arrL.size() + \" tasks in the list\");"},{"lineNumber":86,"author":{"gitId":"jrvslam"},"content":"                    break;"},{"lineNumber":87,"author":{"gitId":"jrvslam"},"content":"                }"},{"lineNumber":88,"author":{"gitId":"jrvslam"},"content":"                System.out.println(\"___\");"},{"lineNumber":89,"author":{"gitId":"jrvslam"},"content":"                input \u003d sc.nextLine();"},{"lineNumber":90,"author":{"gitId":"jrvslam"},"content":"            } catch (DukeException ex) {"},{"lineNumber":91,"author":{"gitId":"jrvslam"},"content":"                System.out.println(\"   \" + ex.toString());"},{"lineNumber":92,"author":{"gitId":"jrvslam"},"content":"                System.out.println(\"___\");"},{"lineNumber":93,"author":{"gitId":"jrvslam"},"content":"                input \u003d sc.nextLine();"},{"lineNumber":94,"author":{"gitId":"jrvslam"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":97,"author":{"gitId":"jrvslam"},"content":"        System.out.println(\"___\\n   Bye! Hope to see you again! Rawr! :)\\n___\\n\");"},{"lineNumber":98,"author":{"gitId":"jrvslam"},"content":"        for (Task task : arrL) {"},{"lineNumber":99,"author":{"gitId":"jrvslam"},"content":"            fio.writeToFile(task);"},{"lineNumber":100,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"jrvslam"},"content":"        fio.closeFile();"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":104,"author":{"gitId":"jrvslam"},"content":"    void checkCommand(String input, String command, int index, int counter) throws DukeException {"},{"lineNumber":105,"author":{"gitId":"jrvslam"},"content":"        boolean test \u003d index \u003d\u003d -1 || input.substring(index).isBlank();"},{"lineNumber":106,"author":{"gitId":"jrvslam"},"content":"        switch (command) {"},{"lineNumber":107,"author":{"gitId":"jrvslam"},"content":"        case \"todo\":"},{"lineNumber":108,"author":{"gitId":"jrvslam"},"content":"            if (test) {"},{"lineNumber":109,"author":{"gitId":"jrvslam"},"content":"                throw new DukeException(\" ToDo cannot be empty! :(\");"},{"lineNumber":110,"author":{"gitId":"jrvslam"},"content":"            }"},{"lineNumber":111,"author":{"gitId":"jrvslam"},"content":"            break;"},{"lineNumber":112,"author":{"gitId":"jrvslam"},"content":"        case \"deadline\":"},{"lineNumber":113,"author":{"gitId":"jrvslam"},"content":"            if (test) {"},{"lineNumber":114,"author":{"gitId":"jrvslam"},"content":"                throw new DukeException(\" Deadline cannot be empty! :(\");"},{"lineNumber":115,"author":{"gitId":"jrvslam"},"content":"            } else if (!input.contains(\"/by\")) {"},{"lineNumber":116,"author":{"gitId":"jrvslam"},"content":"                throw new DukeException(\" Deadline must have a date! :(\");"},{"lineNumber":117,"author":{"gitId":"jrvslam"},"content":"            } else {"},{"lineNumber":118,"author":{"gitId":"jrvslam"},"content":"                int by \u003d input.indexOf(\"/by\");"},{"lineNumber":119,"author":{"gitId":"jrvslam"},"content":"                if (input.substring(index, by).isBlank()) {"},{"lineNumber":120,"author":{"gitId":"jrvslam"},"content":"                    throw new DukeException(\" Deadline must have a task! :(\");"},{"lineNumber":121,"author":{"gitId":"jrvslam"},"content":"                } else if (input.substring(by + 3).isBlank()) {"},{"lineNumber":122,"author":{"gitId":"jrvslam"},"content":"                    throw new DukeException(\" Deadline date cannot be empty! :(\");"},{"lineNumber":123,"author":{"gitId":"jrvslam"},"content":"                }"},{"lineNumber":124,"author":{"gitId":"jrvslam"},"content":"            }"},{"lineNumber":125,"author":{"gitId":"jrvslam"},"content":"            break;"},{"lineNumber":126,"author":{"gitId":"jrvslam"},"content":"        case \"event\":"},{"lineNumber":127,"author":{"gitId":"jrvslam"},"content":"            if (test) {"},{"lineNumber":128,"author":{"gitId":"jrvslam"},"content":"                throw new DukeException(\" Event cannot be empty! :(\");"},{"lineNumber":129,"author":{"gitId":"jrvslam"},"content":"            } else if (!input.contains(\"/at\")) {"},{"lineNumber":130,"author":{"gitId":"jrvslam"},"content":"                throw new DukeException(\" Event must have a date! :(\");"},{"lineNumber":131,"author":{"gitId":"jrvslam"},"content":"            } else {"},{"lineNumber":132,"author":{"gitId":"jrvslam"},"content":"                int at \u003d input.indexOf(\"/at\");"},{"lineNumber":133,"author":{"gitId":"jrvslam"},"content":"                if (input.substring(index, at).isBlank()) {"},{"lineNumber":134,"author":{"gitId":"jrvslam"},"content":"                    throw new DukeException(\" Event must have a task! :(\");"},{"lineNumber":135,"author":{"gitId":"jrvslam"},"content":"                } else if (input.substring(at + 3).isBlank()) {"},{"lineNumber":136,"author":{"gitId":"jrvslam"},"content":"                    throw new DukeException(\" Event date cannot be empty! :(\");"},{"lineNumber":137,"author":{"gitId":"jrvslam"},"content":"                }"},{"lineNumber":138,"author":{"gitId":"jrvslam"},"content":"            }"},{"lineNumber":139,"author":{"gitId":"jrvslam"},"content":"            break;"},{"lineNumber":140,"author":{"gitId":"jrvslam"},"content":"        case \"list\":"},{"lineNumber":141,"author":{"gitId":"jrvslam"},"content":"            break;"},{"lineNumber":142,"author":{"gitId":"jrvslam"},"content":"        case \"done\":"},{"lineNumber":143,"author":{"gitId":"jrvslam"},"content":"        case \"remove\":"},{"lineNumber":144,"author":{"gitId":"jrvslam"},"content":"            if (test) {"},{"lineNumber":145,"author":{"gitId":"jrvslam"},"content":"                throw new DukeException(\" Which task? :(\");"},{"lineNumber":146,"author":{"gitId":"jrvslam"},"content":"            } else {"},{"lineNumber":147,"author":{"gitId":"jrvslam"},"content":"                int no \u003d Integer.parseInt(input.substring(index + 1));"},{"lineNumber":148,"author":{"gitId":"jrvslam"},"content":"                if (no \u003e counter || no \u003c 1) {"},{"lineNumber":149,"author":{"gitId":"jrvslam"},"content":"                    throw new DukeException(\" No such task! :(\");"},{"lineNumber":150,"author":{"gitId":"jrvslam"},"content":"                }"},{"lineNumber":151,"author":{"gitId":"jrvslam"},"content":"            }"},{"lineNumber":152,"author":{"gitId":"jrvslam"},"content":"            break;"},{"lineNumber":153,"author":{"gitId":"jrvslam"},"content":"        default:"},{"lineNumber":154,"author":{"gitId":"jrvslam"},"content":"            throw new DukeException(\" I don\u0027t understand! :(\");"},{"lineNumber":155,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jrvslam":147,"-":10}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":"    private String exception;"},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":"    public DukeException(String exception) {"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"        super(exception);"},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":"        this.exception \u003d exception;"},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":"        return \"Omo... I\u0027m sorry...\" + exception;"},{"lineNumber":12,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jrvslam"},"content":"}"}],"authorContributionMap":{"jrvslam":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":"public class Event extends Task{"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"    private LocalDateTime localDate;"},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":"    public Event(String input, String date) {"},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":"        super(input);"},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":"        LocalDateTime lDate \u003d new ParseDates().parseString(date);"},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"        this.localDate \u003d lDate;"},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":13,"author":{"gitId":"jrvslam"},"content":"    public Event(String input, String date, int done) {"},{"lineNumber":14,"author":{"gitId":"jrvslam"},"content":"        super(input);"},{"lineNumber":15,"author":{"gitId":"jrvslam"},"content":"        LocalDateTime lDate \u003d new ParseDates().parseString(date);"},{"lineNumber":16,"author":{"gitId":"jrvslam"},"content":"        this.localDate \u003d lDate;"},{"lineNumber":17,"author":{"gitId":"jrvslam"},"content":"        if (done \u003d\u003d 1) {"},{"lineNumber":18,"author":{"gitId":"jrvslam"},"content":"            this.doTask();"},{"lineNumber":19,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":22,"author":{"gitId":"jrvslam"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"jrvslam"},"content":"    public String taskSave() {"},{"lineNumber":24,"author":{"gitId":"jrvslam"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");"},{"lineNumber":25,"author":{"gitId":"jrvslam"},"content":"        return \"E\" + super.taskSave() + \" | \" + localDate.format(dateTimeFormatter);"},{"lineNumber":26,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":28,"author":{"gitId":"jrvslam"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"jrvslam"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"jrvslam"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":31,"author":{"gitId":"jrvslam"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + localDate.format(dateTimeFormatter) + \")\";"},{"lineNumber":32,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"jrvslam"},"content":"}"}],"authorContributionMap":{"jrvslam":33}},{"path":"src/main/java/ParseDates.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":"import java.time.LocalDateTime;"},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":"import java.time.format.DateTimeFormatterBuilder;"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"import java.time.temporal.ChronoField;"},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":"public class ParseDates {"},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":"    public LocalDateTime parseString(String string) {"},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"[dd/MM/yyyy][yyyy-MM-dd][MMM dd yyyy][dd MM yyyy]\");"},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":"        DateTimeFormatter dateTimeFormatter1 \u003d new DateTimeFormatterBuilder()"},{"lineNumber":12,"author":{"gitId":"jrvslam"},"content":"                .appendPattern(\"[dd/MM/yyyy][yyyy-MM-dd][MMM dd yyyy][dd MM yyyy]\")"},{"lineNumber":13,"author":{"gitId":"jrvslam"},"content":"                .optionalStart().appendPattern(\" HHmm\").optionalEnd()"},{"lineNumber":14,"author":{"gitId":"jrvslam"},"content":"                .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)"},{"lineNumber":15,"author":{"gitId":"jrvslam"},"content":"                .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)"},{"lineNumber":16,"author":{"gitId":"jrvslam"},"content":"                .toFormatter();"},{"lineNumber":17,"author":{"gitId":"jrvslam"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(string, dateTimeFormatter1);"},{"lineNumber":18,"author":{"gitId":"jrvslam"},"content":"        return date;"},{"lineNumber":19,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jrvslam"},"content":"}"}],"authorContributionMap":{"jrvslam":20}},{"path":"src/main/java/SaveToFile.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":"public class SaveToFile {"},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"    private FileWriter fio;"},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":"    private final File file;"},{"lineNumber":12,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":13,"author":{"gitId":"jrvslam"},"content":"    public SaveToFile(ArrayList\u003cTask\u003e arr) {"},{"lineNumber":14,"author":{"gitId":"jrvslam"},"content":"        File file \u003d initiateFile();"},{"lineNumber":15,"author":{"gitId":"jrvslam"},"content":"        this.file \u003d file;"},{"lineNumber":16,"author":{"gitId":"jrvslam"},"content":"        populateList(arr);"},{"lineNumber":17,"author":{"gitId":"jrvslam"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"jrvslam"},"content":"            this.fio \u003d new FileWriter(file);"},{"lineNumber":19,"author":{"gitId":"jrvslam"},"content":"        } catch (IOException e) {"},{"lineNumber":20,"author":{"gitId":"jrvslam"},"content":"            System.out.println(\"Unable to create FileWriter\");"},{"lineNumber":21,"author":{"gitId":"jrvslam"},"content":"            e.printStackTrace();"},{"lineNumber":22,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":25,"author":{"gitId":"jrvslam"},"content":"    private File initiateFile () {"},{"lineNumber":26,"author":{"gitId":"jrvslam"},"content":"        String home \u003d System.getProperty(\"user.home\");"},{"lineNumber":27,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":28,"author":{"gitId":"jrvslam"},"content":"        // inserts correct file path separator on *nix and Windows"},{"lineNumber":29,"author":{"gitId":"jrvslam"},"content":"        // works on *nix"},{"lineNumber":30,"author":{"gitId":"jrvslam"},"content":"        // works on Windows"},{"lineNumber":31,"author":{"gitId":"jrvslam"},"content":"        Path path \u003d java.nio.file.Paths.get(home, \"iP\", \"data\");"},{"lineNumber":32,"author":{"gitId":"jrvslam"},"content":"        boolean directoryExists \u003d java.nio.file.Files.exists(path);"},{"lineNumber":33,"author":{"gitId":"jrvslam"},"content":"        File file \u003d null;"},{"lineNumber":34,"author":{"gitId":"jrvslam"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"jrvslam"},"content":"            if (!directoryExists) {"},{"lineNumber":36,"author":{"gitId":"jrvslam"},"content":"                java.nio.file.Files.createDirectories(path);"},{"lineNumber":37,"author":{"gitId":"jrvslam"},"content":"                System.out.println(\"   Path Created: \" + path);"},{"lineNumber":38,"author":{"gitId":"jrvslam"},"content":"            } else {"},{"lineNumber":39,"author":{"gitId":"jrvslam"},"content":"                System.out.println(\"   Path exits\");"},{"lineNumber":40,"author":{"gitId":"jrvslam"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"jrvslam"},"content":"            String filePath \u003d path + File.separator + \"Duke.txt\";"},{"lineNumber":42,"author":{"gitId":"jrvslam"},"content":"            file \u003d new File(filePath);"},{"lineNumber":43,"author":{"gitId":"jrvslam"},"content":"            if (file.createNewFile()) {"},{"lineNumber":44,"author":{"gitId":"jrvslam"},"content":"                System.out.println(\"   File created: \" + file.getName());"},{"lineNumber":45,"author":{"gitId":"jrvslam"},"content":"            } else {"},{"lineNumber":46,"author":{"gitId":"jrvslam"},"content":"                System.out.println(\"   File exits\");"},{"lineNumber":47,"author":{"gitId":"jrvslam"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"jrvslam"},"content":"        } catch (IOException e) {"},{"lineNumber":49,"author":{"gitId":"jrvslam"},"content":"            System.out.println(\"Failed to create File\");"},{"lineNumber":50,"author":{"gitId":"jrvslam"},"content":"            e.printStackTrace();"},{"lineNumber":51,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"jrvslam"},"content":"        return file;"},{"lineNumber":53,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":55,"author":{"gitId":"jrvslam"},"content":"    private void populateList (ArrayList\u003cTask\u003e arr) {"},{"lineNumber":56,"author":{"gitId":"jrvslam"},"content":"        try {"},{"lineNumber":57,"author":{"gitId":"jrvslam"},"content":"            Scanner reader \u003d new Scanner(this.file);"},{"lineNumber":58,"author":{"gitId":"jrvslam"},"content":"            while (reader.hasNextLine()) {"},{"lineNumber":59,"author":{"gitId":"jrvslam"},"content":"                String data \u003d reader.nextLine();"},{"lineNumber":60,"author":{"gitId":"jrvslam"},"content":"                int commandEnd \u003d data.indexOf(\" | \");"},{"lineNumber":61,"author":{"gitId":"jrvslam"},"content":"                String task \u003d data.substring(0, commandEnd);"},{"lineNumber":62,"author":{"gitId":"jrvslam"},"content":"                data \u003d data.substring(commandEnd + 3);"},{"lineNumber":63,"author":{"gitId":"jrvslam"},"content":"                int stateEnd \u003d data.indexOf(\" | \");"},{"lineNumber":64,"author":{"gitId":"jrvslam"},"content":"                String state \u003d data.substring(0, stateEnd);"},{"lineNumber":65,"author":{"gitId":"jrvslam"},"content":"                data \u003d data.substring(stateEnd + 3);"},{"lineNumber":66,"author":{"gitId":"jrvslam"},"content":"                int inputEnd \u003d data.indexOf(\" | \");"},{"lineNumber":67,"author":{"gitId":"jrvslam"},"content":"                switch (task) {"},{"lineNumber":68,"author":{"gitId":"jrvslam"},"content":"                case \"T\":"},{"lineNumber":69,"author":{"gitId":"jrvslam"},"content":"                    arr.add(new ToDo(data, Integer.parseInt(state)));"},{"lineNumber":70,"author":{"gitId":"jrvslam"},"content":"                    break;"},{"lineNumber":71,"author":{"gitId":"jrvslam"},"content":"                case \"D\":"},{"lineNumber":72,"author":{"gitId":"jrvslam"},"content":"                    arr.add(new Deadline(data.substring(0, inputEnd), data.substring(inputEnd + 3),"},{"lineNumber":73,"author":{"gitId":"jrvslam"},"content":"                            Integer.parseInt(state)));"},{"lineNumber":74,"author":{"gitId":"jrvslam"},"content":"                    break;"},{"lineNumber":75,"author":{"gitId":"jrvslam"},"content":"                case \"E\":"},{"lineNumber":76,"author":{"gitId":"jrvslam"},"content":"                    arr.add(new Event(data.substring(0, inputEnd), data.substring(inputEnd + 3),"},{"lineNumber":77,"author":{"gitId":"jrvslam"},"content":"                            Integer.parseInt(state)));"},{"lineNumber":78,"author":{"gitId":"jrvslam"},"content":"                }"},{"lineNumber":79,"author":{"gitId":"jrvslam"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"jrvslam"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":81,"author":{"gitId":"jrvslam"},"content":"            e.printStackTrace();"},{"lineNumber":82,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":85,"author":{"gitId":"jrvslam"},"content":"    public void writeToFile(Task task) {"},{"lineNumber":86,"author":{"gitId":"jrvslam"},"content":"        try {"},{"lineNumber":87,"author":{"gitId":"jrvslam"},"content":"            this.fio.write(task.taskSave() + \"\\n\");"},{"lineNumber":88,"author":{"gitId":"jrvslam"},"content":"        } catch (IOException e) {"},{"lineNumber":89,"author":{"gitId":"jrvslam"},"content":"            System.out.println(\"Unable to write to file\");"},{"lineNumber":90,"author":{"gitId":"jrvslam"},"content":"            e.printStackTrace();"},{"lineNumber":91,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":94,"author":{"gitId":"jrvslam"},"content":"    public void closeFile () {"},{"lineNumber":95,"author":{"gitId":"jrvslam"},"content":"        try {"},{"lineNumber":96,"author":{"gitId":"jrvslam"},"content":"            this.fio.close();"},{"lineNumber":97,"author":{"gitId":"jrvslam"},"content":"        } catch (IOException e) {"},{"lineNumber":98,"author":{"gitId":"jrvslam"},"content":"            System.out.println(\"Unable to close file\");"},{"lineNumber":99,"author":{"gitId":"jrvslam"},"content":"            e.printStackTrace();"},{"lineNumber":100,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":102,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"jrvslam"},"content":"}"}],"authorContributionMap":{"jrvslam":103}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":"    private String input;"},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"    private Task_State state;"},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"    public Task(String input) {"},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":"        this.input \u003d input;"},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":"        this.state \u003d Task_State.NOTDONE;"},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"    public Task doTask() {"},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":"        this.state \u003d Task_State.DONE;"},{"lineNumber":12,"author":{"gitId":"jrvslam"},"content":"        return this;"},{"lineNumber":13,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":15,"author":{"gitId":"jrvslam"},"content":"    public String getInput() {"},{"lineNumber":16,"author":{"gitId":"jrvslam"},"content":"        return input;"},{"lineNumber":17,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":19,"author":{"gitId":"jrvslam"},"content":"    public Task_State getState() {"},{"lineNumber":20,"author":{"gitId":"jrvslam"},"content":"        return state;"},{"lineNumber":21,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":23,"author":{"gitId":"jrvslam"},"content":"    public String taskSave() {"},{"lineNumber":24,"author":{"gitId":"jrvslam"},"content":"        String stateB;"},{"lineNumber":25,"author":{"gitId":"jrvslam"},"content":"        if (state \u003d\u003d Task_State.DONE) {"},{"lineNumber":26,"author":{"gitId":"jrvslam"},"content":"            stateB \u003d \"1\";"},{"lineNumber":27,"author":{"gitId":"jrvslam"},"content":"        } else {"},{"lineNumber":28,"author":{"gitId":"jrvslam"},"content":"            stateB \u003d \"0\";"},{"lineNumber":29,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"jrvslam"},"content":"        return \" | \" + stateB + \" | \" + input;"},{"lineNumber":31,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":33,"author":{"gitId":"jrvslam"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"jrvslam"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"jrvslam"},"content":"        return \"[\" + state + \"] \" + input;"},{"lineNumber":36,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"jrvslam"},"content":"}"}],"authorContributionMap":{"jrvslam":37}},{"path":"src/main/java/Task_State.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"public enum Task_State {"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":"    NOTDONE {"},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"        @Override"},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":"        public String toString() {"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"            return \" \";"},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":"    }, DONE {"},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":"        @Override"},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":"        public String toString() {"},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"            return \"x\";"},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":12,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jrvslam"},"content":"}"}],"authorContributionMap":{"jrvslam":13}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"public class ToDo extends Task {"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":"    public ToDo(String input) {"},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"        super(input);"},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":"    public ToDo(String input, int done) {"},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":"        super(input);"},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":"        if (done \u003d\u003d 1) {"},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":"            this.doTask();"},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":13,"author":{"gitId":"jrvslam"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"jrvslam"},"content":"    public String taskSave() {"},{"lineNumber":15,"author":{"gitId":"jrvslam"},"content":"        return \"T\" + super.taskSave();"},{"lineNumber":16,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":18,"author":{"gitId":"jrvslam"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"jrvslam"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"jrvslam"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":21,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"jrvslam"},"content":"}"}],"authorContributionMap":{"jrvslam":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"todo buy eggs"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":"todo buy milk"},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"deadline bake cake /by 23rd Jan"},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":"deadline deliver cake /by 24th Jan 2359"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"event birthday party! /at 24th Jan"},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":"event celebrate /at always!"},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":"list"},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":"done 1"},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":"done 2"},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"list"},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":"bye"}],"authorContributionMap":{"jrvslam":11}}]
