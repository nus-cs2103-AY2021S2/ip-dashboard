[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"# iP - Ranga"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"Check out the user guide @ [here!](https://jrvslam.github.io/ip/)"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"Rawrz!"}],"authorContributionMap":{"jrvslam":3,"-":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00276.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":16,"author":{"gitId":"jrvslam"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":18,"author":{"gitId":"jrvslam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"jrvslam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"jrvslam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"jrvslam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"jrvslam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"jrvslam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"jrvslam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"jrvslam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"jrvslam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"jrvslam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"jrvslam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"jrvslam"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"jrvslam"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"jrvslam"},"content":"    archiveBaseName \u003d \"Ranga\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jrvslam":18,"-":43}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"# Welcome to Ranga! Rawrz! "},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"Hello! I am **Ranga**! Your personal tasks manager chatbot! I can keep track of your ToDos, Deadlines, and Events! Rawrz!"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"![GUI](Ui.png)"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":"## Quickstart"},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":"1. Ensure you have Java 11 or above installed in your Computer."},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":"2. Download the latest jar from here: [](https://github.com/jrvslam/ip/releases/tag/A-Release)"},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"3. Copy the file to the folder you want to use as the home folder for Ranga."},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":"4. Double-click the file to start the app. "},{"lineNumber":12,"author":{"gitId":"jrvslam"},"content":"5. Type in your commands and hit enter."},{"lineNumber":13,"author":{"gitId":"jrvslam"},"content":"6. Type `help` for different commands. Refer to the functions listed below for more details!"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"jrvslam"},"content":"---"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"jrvslam"},"content":"### Types of Tasks"},{"lineNumber":18,"author":{"gitId":"jrvslam"},"content":"I can record **3 different types of tasks** for you:"},{"lineNumber":19,"author":{"gitId":"jrvslam"},"content":"1. Todo"},{"lineNumber":20,"author":{"gitId":"jrvslam"},"content":"2. Deadline"},{"lineNumber":21,"author":{"gitId":"jrvslam"},"content":"3. Event"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"jrvslam"},"content":"I can record **Reminders** too!"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"jrvslam"},"content":"---"},{"lineNumber":26,"author":{"gitId":"jrvslam"},"content":"### Bye - `bye`"},{"lineNumber":27,"author":{"gitId":"jrvslam"},"content":"Quit the application."},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"jrvslam"},"content":"**Format: `bye`**"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"jrvslam"},"content":"Example: `bye`"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"jrvslam"},"content":"### Help - `help`"},{"lineNumber":34,"author":{"gitId":"jrvslam"},"content":"Shows available commands and their formats"},{"lineNumber":35,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":36,"author":{"gitId":"jrvslam"},"content":"**Format: `help`**"},{"lineNumber":37,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":38,"author":{"gitId":"jrvslam"},"content":"![Help](Help.PNG)"},{"lineNumber":39,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":40,"author":{"gitId":"jrvslam"},"content":"---"},{"lineNumber":41,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":42,"author":{"gitId":"jrvslam"},"content":"## Add Tasks"},{"lineNumber":43,"author":{"gitId":"jrvslam"},"content":"### Add ToDo - `todo`"},{"lineNumber":44,"author":{"gitId":"jrvslam"},"content":"Add a todo task."},{"lineNumber":45,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":46,"author":{"gitId":"jrvslam"},"content":"**Format: `todo DESCRIPTION`**"},{"lineNumber":47,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":48,"author":{"gitId":"jrvslam"},"content":"Example: `todo Run with Ranga`"},{"lineNumber":49,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":50,"author":{"gitId":"jrvslam"},"content":"### Add Deadline - `deadline`"},{"lineNumber":51,"author":{"gitId":"jrvslam"},"content":"Add a deadline task."},{"lineNumber":52,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":53,"author":{"gitId":"jrvslam"},"content":"**Format: `deadline DESCRIPTION /by DATE`**"},{"lineNumber":54,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":55,"author":{"gitId":"jrvslam"},"content":"Example: `deadline Feed Ranga /by 22 Feb 2021 1800`"},{"lineNumber":56,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":57,"author":{"gitId":"jrvslam"},"content":"### Add Event - `event`"},{"lineNumber":58,"author":{"gitId":"jrvslam"},"content":"Add a event task."},{"lineNumber":59,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":60,"author":{"gitId":"jrvslam"},"content":"**Format: `event DESCRIPTION /at DATE`**"},{"lineNumber":61,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":62,"author":{"gitId":"jrvslam"},"content":"Example: `event Ranga\u0027s Birthday /by 23 Feb 2021`"},{"lineNumber":63,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":64,"author":{"gitId":"jrvslam"},"content":"---"},{"lineNumber":65,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":66,"author":{"gitId":"jrvslam"},"content":"## Modify Tasks"},{"lineNumber":67,"author":{"gitId":"jrvslam"},"content":"### Mark as Done - `done`"},{"lineNumber":68,"author":{"gitId":"jrvslam"},"content":"Marks a task as done."},{"lineNumber":69,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":70,"author":{"gitId":"jrvslam"},"content":"**Format: `done TASK_ID`**"},{"lineNumber":71,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":72,"author":{"gitId":"jrvslam"},"content":"Example: `done 1`"},{"lineNumber":73,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":74,"author":{"gitId":"jrvslam"},"content":"### Add a Reminder to a Task - `Remind`"},{"lineNumber":75,"author":{"gitId":"jrvslam"},"content":"Adds a Reminder to a task for a specific date. Reminders show when I start up!"},{"lineNumber":76,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":77,"author":{"gitId":"jrvslam"},"content":"**Format: `remind TASK_ID /on DATE`**"},{"lineNumber":78,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":79,"author":{"gitId":"jrvslam"},"content":"Example: `remind 1 /on 25/02/21`"},{"lineNumber":80,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":81,"author":{"gitId":"jrvslam"},"content":"### Remove a Task - `remove`"},{"lineNumber":82,"author":{"gitId":"jrvslam"},"content":"Removes a stored task."},{"lineNumber":83,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":84,"author":{"gitId":"jrvslam"},"content":"**Format: `remove TASK_ID`**"},{"lineNumber":85,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":86,"author":{"gitId":"jrvslam"},"content":"Example: `remove 1`"},{"lineNumber":87,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":88,"author":{"gitId":"jrvslam"},"content":"---"},{"lineNumber":89,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":90,"author":{"gitId":"jrvslam"},"content":"## See Tasks"},{"lineNumber":91,"author":{"gitId":"jrvslam"},"content":"### List tasks - `list`"},{"lineNumber":92,"author":{"gitId":"jrvslam"},"content":"Shows the stored tasks."},{"lineNumber":93,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":94,"author":{"gitId":"jrvslam"},"content":"**Format: `list`**"},{"lineNumber":95,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":96,"author":{"gitId":"jrvslam"},"content":"Example: `list`"},{"lineNumber":97,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":98,"author":{"gitId":"jrvslam"},"content":"### List Reminders - `reminders`"},{"lineNumber":99,"author":{"gitId":"jrvslam"},"content":"Shows a list of all stored reminders."},{"lineNumber":100,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":101,"author":{"gitId":"jrvslam"},"content":"**Format: `reminders`**"},{"lineNumber":102,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":103,"author":{"gitId":"jrvslam"},"content":"Example: `reminders`"},{"lineNumber":104,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":105,"author":{"gitId":"jrvslam"},"content":"### Find Tasks - `find`"},{"lineNumber":106,"author":{"gitId":"jrvslam"},"content":"Find a task by its description."},{"lineNumber":107,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":108,"author":{"gitId":"jrvslam"},"content":"**Format: `find SEARCH_STRING`**"},{"lineNumber":109,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":110,"author":{"gitId":"jrvslam"},"content":"Example: `find Birthday`"},{"lineNumber":111,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":112,"author":{"gitId":"jrvslam"},"content":"---"},{"lineNumber":113,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":114,"author":{"gitId":"jrvslam"},"content":"# Code Summary"},{"lineNumber":115,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":116,"author":{"gitId":"jrvslam"},"content":"| Function      | Format                              |"},{"lineNumber":117,"author":{"gitId":"jrvslam"},"content":"| ------------- | ----------------------------------- |"},{"lineNumber":118,"author":{"gitId":"jrvslam"},"content":"| ToDo          | `todo` `DESCRIPTION`                |"},{"lineNumber":119,"author":{"gitId":"jrvslam"},"content":"| Deadline      | `deadline` `DESCRIPTION` `/by DATE` |"},{"lineNumber":120,"author":{"gitId":"jrvslam"},"content":"| Event         | `event` `DESCRIPTION` `/at DATE`    |"},{"lineNumber":121,"author":{"gitId":"jrvslam"},"content":"| Remind        | `remind` `TASK_ID` `/on DATE`       |"},{"lineNumber":122,"author":{"gitId":"jrvslam"},"content":"| Done          | `done` `TASK_ID`                    |"},{"lineNumber":123,"author":{"gitId":"jrvslam"},"content":"| Remove        | `remove` `TASK_ID`                  |"},{"lineNumber":124,"author":{"gitId":"jrvslam"},"content":"| List          | `list`                              |"},{"lineNumber":125,"author":{"gitId":"jrvslam"},"content":"| find          | `find SEARCH_STRING`                |"},{"lineNumber":126,"author":{"gitId":"jrvslam"},"content":"| Reminder      | `reminders`                         |"},{"lineNumber":127,"author":{"gitId":"jrvslam"},"content":"| Help          | `help`                              |"},{"lineNumber":128,"author":{"gitId":"jrvslam"},"content":"| bye           | `bye`                               |"},{"lineNumber":129,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":130,"author":{"gitId":"jrvslam"},"content":"---"},{"lineNumber":131,"author":{"gitId":"jrvslam"},"content":"\u003e Rawr!"}],"authorContributionMap":{"jrvslam":121,"-":10}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":"import javafx.geometry.Insets;"},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":"import javafx.geometry.Pos;"},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"import javafx.scene.Node;"},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":"import javafx.scene.control.Label;"},{"lineNumber":12,"author":{"gitId":"jrvslam"},"content":"import javafx.scene.image.Image;"},{"lineNumber":13,"author":{"gitId":"jrvslam"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":14,"author":{"gitId":"jrvslam"},"content":"import javafx.scene.layout.*;"},{"lineNumber":15,"author":{"gitId":"jrvslam"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":16,"author":{"gitId":"jrvslam"},"content":"import javafx.scene.shape.Circle;"},{"lineNumber":17,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":18,"author":{"gitId":"jrvslam"},"content":"public class DialogBox extends HBox {"},{"lineNumber":19,"author":{"gitId":"jrvslam"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"jrvslam"},"content":"    private Label dialog;"},{"lineNumber":21,"author":{"gitId":"jrvslam"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"jrvslam"},"content":"    private ImageView displayPicture;"},{"lineNumber":23,"author":{"gitId":"jrvslam"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"jrvslam"},"content":"    private HBox hbox;"},{"lineNumber":25,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":26,"author":{"gitId":"jrvslam"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"jrvslam"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"jrvslam"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"jrvslam"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"jrvslam"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"jrvslam"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"jrvslam"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"jrvslam"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":36,"author":{"gitId":"jrvslam"},"content":"        hbox.setBackground(new Background(new BackgroundFill(Color.LIGHTBLUE,"},{"lineNumber":37,"author":{"gitId":"jrvslam"},"content":"                new CornerRadii(5, 5, 5, 5, false),"},{"lineNumber":38,"author":{"gitId":"jrvslam"},"content":"                new Insets(5, 60, 5, 75))));"},{"lineNumber":39,"author":{"gitId":"jrvslam"},"content":"        hbox.setPadding(new Insets(5,5,5,50));"},{"lineNumber":40,"author":{"gitId":"jrvslam"},"content":"        hbox.setSpacing(5);"},{"lineNumber":41,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":42,"author":{"gitId":"jrvslam"},"content":"        dialog.setPadding(new Insets(15,15,15,40));"},{"lineNumber":43,"author":{"gitId":"jrvslam"},"content":"        displayPicture.setImage(img);"},{"lineNumber":44,"author":{"gitId":"jrvslam"},"content":"        dialog.setText(text);"},{"lineNumber":45,"author":{"gitId":"jrvslam"},"content":"        Circle clip \u003d new Circle(25);"},{"lineNumber":46,"author":{"gitId":"jrvslam"},"content":"        clip.setCenterX(displayPicture.getFitWidth() / 2);"},{"lineNumber":47,"author":{"gitId":"jrvslam"},"content":"        clip.setCenterY(displayPicture.getFitHeight() / 2);"},{"lineNumber":48,"author":{"gitId":"jrvslam"},"content":"        displayPicture.setClip(clip);"},{"lineNumber":49,"author":{"gitId":"jrvslam"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);"},{"lineNumber":50,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":52,"author":{"gitId":"jrvslam"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"jrvslam"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":54,"author":{"gitId":"jrvslam"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"jrvslam"},"content":"    private void flip(boolean isError) {"},{"lineNumber":56,"author":{"gitId":"jrvslam"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":57,"author":{"gitId":"jrvslam"},"content":"        Collections.reverse(tmp);"},{"lineNumber":58,"author":{"gitId":"jrvslam"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":59,"author":{"gitId":"jrvslam"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":60,"author":{"gitId":"jrvslam"},"content":"        if (isError) {"},{"lineNumber":61,"author":{"gitId":"jrvslam"},"content":"            hbox.setBackground(new Background(new BackgroundFill(Color.LIGHTSALMON,"},{"lineNumber":62,"author":{"gitId":"jrvslam"},"content":"                    new CornerRadii(5, 5, 5, 5, false),"},{"lineNumber":63,"author":{"gitId":"jrvslam"},"content":"                    new Insets(5, 75, 5, 60))));"},{"lineNumber":64,"author":{"gitId":"jrvslam"},"content":"        } else {"},{"lineNumber":65,"author":{"gitId":"jrvslam"},"content":"            hbox.setBackground(new Background(new BackgroundFill(Color.LIGHTPINK,"},{"lineNumber":66,"author":{"gitId":"jrvslam"},"content":"                    new CornerRadii(5, 5, 5, 5, false),"},{"lineNumber":67,"author":{"gitId":"jrvslam"},"content":"                    new Insets(5, 75, 5, 60))));"},{"lineNumber":68,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"jrvslam"},"content":"        hbox.setPadding(new Insets(5,50,5,5));"},{"lineNumber":70,"author":{"gitId":"jrvslam"},"content":"        dialog.setPadding(new Insets(15,40,15,15));"},{"lineNumber":71,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":72,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":74,"author":{"gitId":"jrvslam"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":75,"author":{"gitId":"jrvslam"},"content":"        return new DialogBox(text, img);"},{"lineNumber":76,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":78,"author":{"gitId":"jrvslam"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":79,"author":{"gitId":"jrvslam"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":80,"author":{"gitId":"jrvslam"},"content":"        db.flip(false);"},{"lineNumber":81,"author":{"gitId":"jrvslam"},"content":"        return db;"},{"lineNumber":82,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":84,"author":{"gitId":"jrvslam"},"content":"    public static DialogBox getDukeErrorDialog(String text, Image img) {"},{"lineNumber":85,"author":{"gitId":"jrvslam"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":86,"author":{"gitId":"jrvslam"},"content":"        db.flip(true);"},{"lineNumber":87,"author":{"gitId":"jrvslam"},"content":"        return db;"},{"lineNumber":88,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"jrvslam"},"content":"}"}],"authorContributionMap":{"jrvslam":89}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"public class Launcher {"},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":"}"}],"authorContributionMap":{"jrvslam":7}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":"import javafx.animation.PauseTransition;"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":"import javafx.event.EventHandler;"},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"import javafx.scene.layout.*;"},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitId":"jrvslam"},"content":"import javafx.stage.WindowEvent;"},{"lineNumber":13,"author":{"gitId":"jrvslam"},"content":"import javafx.util.Duration;"},{"lineNumber":14,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":15,"author":{"gitId":"jrvslam"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":17,"author":{"gitId":"jrvslam"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":18,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":19,"author":{"gitId":"jrvslam"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"jrvslam"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"jrvslam"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"jrvslam"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"jrvslam"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"jrvslam"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"jrvslam"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"jrvslam"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":27,"author":{"gitId":"jrvslam"},"content":"            stage.setOnCloseRequest(new EventHandler\u003cWindowEvent\u003e() {"},{"lineNumber":28,"author":{"gitId":"jrvslam"},"content":"                @Override"},{"lineNumber":29,"author":{"gitId":"jrvslam"},"content":"                public void handle(WindowEvent event) {"},{"lineNumber":30,"author":{"gitId":"jrvslam"},"content":"                    //duke.beginClose();"},{"lineNumber":31,"author":{"gitId":"jrvslam"},"content":"                    fxmlLoader.\u003cMainWindow\u003egetController().close();"},{"lineNumber":32,"author":{"gitId":"jrvslam"},"content":"                }"},{"lineNumber":33,"author":{"gitId":"jrvslam"},"content":"            });"},{"lineNumber":34,"author":{"gitId":"jrvslam"},"content":"            stage.show();"},{"lineNumber":35,"author":{"gitId":"jrvslam"},"content":"        } catch (IOException e) {"},{"lineNumber":36,"author":{"gitId":"jrvslam"},"content":"            e.printStackTrace();"},{"lineNumber":37,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"jrvslam"},"content":"}"}],"authorContributionMap":{"jrvslam":39}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"import duke.Duke;"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":"import javafx.animation.PauseTransition;"},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"import javafx.animation.Timeline;"},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":"import javafx.collections.ListChangeListener;"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"import javafx.geometry.Insets;"},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":"import javafx.scene.Node;"},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":"import javafx.scene.layout.*;"},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":"import javafx.scene.control.Button;"},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":12,"author":{"gitId":"jrvslam"},"content":"import javafx.scene.image.Image;"},{"lineNumber":13,"author":{"gitId":"jrvslam"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":14,"author":{"gitId":"jrvslam"},"content":"import javafx.stage.Stage;"},{"lineNumber":15,"author":{"gitId":"jrvslam"},"content":"import javafx.util.Duration;"},{"lineNumber":16,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":17,"author":{"gitId":"jrvslam"},"content":"import java.time.LocalDateTime;"},{"lineNumber":18,"author":{"gitId":"jrvslam"},"content":"import java.time.ZoneId;"},{"lineNumber":19,"author":{"gitId":"jrvslam"},"content":"import java.util.Timer;"},{"lineNumber":20,"author":{"gitId":"jrvslam"},"content":"import java.util.TimerTask;"},{"lineNumber":21,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":22,"author":{"gitId":"jrvslam"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"jrvslam"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":24,"author":{"gitId":"jrvslam"},"content":" */"},{"lineNumber":25,"author":{"gitId":"jrvslam"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":26,"author":{"gitId":"jrvslam"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"jrvslam"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":28,"author":{"gitId":"jrvslam"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"jrvslam"},"content":"    private VBox dialogContainer;"},{"lineNumber":30,"author":{"gitId":"jrvslam"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"jrvslam"},"content":"    private TextField userInput;"},{"lineNumber":32,"author":{"gitId":"jrvslam"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitId":"jrvslam"},"content":"    private Button sendButton;"},{"lineNumber":34,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":35,"author":{"gitId":"jrvslam"},"content":"    private Duke duke;"},{"lineNumber":36,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":37,"author":{"gitId":"jrvslam"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Rimuru.jpg\"));"},{"lineNumber":38,"author":{"gitId":"jrvslam"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Ranga(3).png\"));"},{"lineNumber":39,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":40,"author":{"gitId":"jrvslam"},"content":"    @FXML"},{"lineNumber":41,"author":{"gitId":"jrvslam"},"content":"    public void initialize() {"},{"lineNumber":42,"author":{"gitId":"jrvslam"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":43,"author":{"gitId":"jrvslam"},"content":"        dialogContainer.setSpacing(5);"},{"lineNumber":44,"author":{"gitId":"jrvslam"},"content":"        dialogContainer.setPadding(new Insets(5,5,5,5));"},{"lineNumber":45,"author":{"gitId":"jrvslam"},"content":"        //dialogContainer.setBackground(new Background(new BackgroundFill(Color.LAVENDER, CornerRadii.EMPTY,"},{"lineNumber":46,"author":{"gitId":"jrvslam"},"content":"        //        Insets.EMPTY)));"},{"lineNumber":47,"author":{"gitId":"jrvslam"},"content":"        //dialogContainer.setBackground(new Background(new BackgroundImage(new Image("},{"lineNumber":48,"author":{"gitId":"jrvslam"},"content":"        //        this.getClass().getResourceAsStream(\"images/bg(2).jpg\")), BackgroundRepeat.REPEAT,"},{"lineNumber":49,"author":{"gitId":"jrvslam"},"content":"        //        BackgroundRepeat.REPEAT, BackgroundPosition.DEFAULT, BackgroundSize.DEFAULT)));"},{"lineNumber":50,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":51,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":53,"author":{"gitId":"jrvslam"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":54,"author":{"gitId":"jrvslam"},"content":"        duke \u003d d;"},{"lineNumber":55,"author":{"gitId":"jrvslam"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(d.startIntro(), dukeImage));"},{"lineNumber":56,"author":{"gitId":"jrvslam"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(d.startReminders(), dukeImage));"},{"lineNumber":57,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":59,"author":{"gitId":"jrvslam"},"content":"    public void close() {"},{"lineNumber":60,"author":{"gitId":"jrvslam"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(duke.beginClose(), dukeImage));"},{"lineNumber":61,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":63,"author":{"gitId":"jrvslam"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"jrvslam"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":65,"author":{"gitId":"jrvslam"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":66,"author":{"gitId":"jrvslam"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"jrvslam"},"content":"    @FXML"},{"lineNumber":68,"author":{"gitId":"jrvslam"},"content":"    private void handleUserInput() {"},{"lineNumber":69,"author":{"gitId":"jrvslam"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":70,"author":{"gitId":"jrvslam"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":71,"author":{"gitId":"jrvslam"},"content":"        if (response.contains(\"I\u0027m sorry...\")) {"},{"lineNumber":72,"author":{"gitId":"jrvslam"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":73,"author":{"gitId":"jrvslam"},"content":"                    DialogBox.getUserDialog(input, userImage),"},{"lineNumber":74,"author":{"gitId":"jrvslam"},"content":"                    DialogBox.getDukeErrorDialog(response, dukeImage));"},{"lineNumber":75,"author":{"gitId":"jrvslam"},"content":"        } else {"},{"lineNumber":76,"author":{"gitId":"jrvslam"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":77,"author":{"gitId":"jrvslam"},"content":"                    DialogBox.getUserDialog(input, userImage),"},{"lineNumber":78,"author":{"gitId":"jrvslam"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":79,"author":{"gitId":"jrvslam"},"content":"            );"},{"lineNumber":80,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"jrvslam"},"content":"        if (input.trim().equalsIgnoreCase(\"BYE\")) {"},{"lineNumber":82,"author":{"gitId":"jrvslam"},"content":"            Stage stage \u003d (Stage) sendButton.getScene().getWindow();"},{"lineNumber":83,"author":{"gitId":"jrvslam"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(2));"},{"lineNumber":84,"author":{"gitId":"jrvslam"},"content":"            delay.setOnFinished( event -\u003e stage.close() );"},{"lineNumber":85,"author":{"gitId":"jrvslam"},"content":"            delay.play();"},{"lineNumber":86,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"jrvslam"},"content":"        userInput.clear();"},{"lineNumber":88,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"jrvslam"},"content":"}"}],"authorContributionMap":{"jrvslam":89}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"import duke.command.CommandParser;"},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"import duke.task.Reminder;"},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"import java.util.Optional;"},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":"import java.util.Timer;"},{"lineNumber":12,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":13,"author":{"gitId":"jrvslam"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"jrvslam"},"content":" * This is the main Duke class that runs the chatbot."},{"lineNumber":15,"author":{"gitId":"jrvslam"},"content":" */"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke{"},{"lineNumber":17,"author":{"gitId":"jrvslam"},"content":"    private final Ui ui;"},{"lineNumber":18,"author":{"gitId":"jrvslam"},"content":"    private final Storage fio;"},{"lineNumber":19,"author":{"gitId":"jrvslam"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"jrvslam"},"content":"     * This is the constructor for Duke, storing a new Ui and new Storage."},{"lineNumber":21,"author":{"gitId":"jrvslam"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"jrvslam"},"content":"    public Duke() {"},{"lineNumber":23,"author":{"gitId":"jrvslam"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":24,"author":{"gitId":"jrvslam"},"content":"        this.fio \u003d new Storage();"},{"lineNumber":25,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":27,"author":{"gitId":"jrvslam"},"content":"    public String startIntro() {"},{"lineNumber":28,"author":{"gitId":"jrvslam"},"content":"        return this.ui.getIntroResponse();"},{"lineNumber":29,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":31,"author":{"gitId":"jrvslam"},"content":"    public String startReminders() {"},{"lineNumber":32,"author":{"gitId":"jrvslam"},"content":"        return this.ui.getReminders(this.fio.getRemindersArr());"},{"lineNumber":33,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":35,"author":{"gitId":"jrvslam"},"content":"    public String beginClose() {"},{"lineNumber":36,"author":{"gitId":"jrvslam"},"content":"        this.fio.beginClose();"},{"lineNumber":37,"author":{"gitId":"jrvslam"},"content":"        this.fio.closeFile();"},{"lineNumber":38,"author":{"gitId":"jrvslam"},"content":"        return (this.ui.getGoodbyeResponse());"},{"lineNumber":39,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":41,"author":{"gitId":"jrvslam"},"content":"    public String getResponse(String input) {"},{"lineNumber":42,"author":{"gitId":"jrvslam"},"content":"        String output;"},{"lineNumber":43,"author":{"gitId":"jrvslam"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"jrvslam"},"content":"            CommandParser parsedCommands \u003d CommandParser.parseLine(input, this.fio.getArrSize());"},{"lineNumber":45,"author":{"gitId":"jrvslam"},"content":"            output \u003d parsedCommands.executeCommand(ui, this.fio);"},{"lineNumber":46,"author":{"gitId":"jrvslam"},"content":"        } catch (DukeException e) {"},{"lineNumber":47,"author":{"gitId":"jrvslam"},"content":"            output \u003d ui.getErrorResponse(e.toString());"},{"lineNumber":48,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"jrvslam"},"content":"        return output;"},{"lineNumber":50,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jrvslam":49,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":" * DukeException extends Exception and is thrown when handling errors"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":" */"},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":"    private final String exception;"},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"     * This is the constructor for a DukeException that takes in a String message."},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":"     * @param exception This is the String error message."},{"lineNumber":12,"author":{"gitId":"jrvslam"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"jrvslam"},"content":"    public DukeException(String exception) {"},{"lineNumber":14,"author":{"gitId":"jrvslam"},"content":"        super(exception);"},{"lineNumber":15,"author":{"gitId":"jrvslam"},"content":"        this.exception \u003d exception;"},{"lineNumber":16,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":18,"author":{"gitId":"jrvslam"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"jrvslam"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"jrvslam"},"content":"        return \"I\u0027m sorry...\" + exception;"},{"lineNumber":21,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"jrvslam"},"content":"}"}],"authorContributionMap":{"jrvslam":22}},{"path":"src/main/java/duke/command/CommandList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"public enum CommandList {"},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":"    LIST, TODO, DEADLINE, EVENT, DONE, REMOVE, BYE, FIND, REMIND, REMINDERS, HELP;"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"}"}],"authorContributionMap":{"jrvslam":5}},{"path":"src/main/java/duke/command/CommandParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"import duke.task.*;"},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":" * ParseCommands handles the parsing and execution of the inputs given to the system."},{"lineNumber":12,"author":{"gitId":"jrvslam"},"content":" * ParseCommands needs to validate the input before execution of the command."},{"lineNumber":13,"author":{"gitId":"jrvslam"},"content":" */"},{"lineNumber":14,"author":{"gitId":"jrvslam"},"content":"public class CommandParser {"},{"lineNumber":15,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":16,"author":{"gitId":"jrvslam"},"content":"    private final CommandList command;"},{"lineNumber":17,"author":{"gitId":"jrvslam"},"content":"    private final String data;"},{"lineNumber":18,"author":{"gitId":"jrvslam"},"content":"    private boolean isExit;"},{"lineNumber":19,"author":{"gitId":"jrvslam"},"content":"    private static final int SPACER \u003d 3;"},{"lineNumber":20,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":21,"author":{"gitId":"jrvslam"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"jrvslam"},"content":"     * This is the constructor for ParseCommands which takes in a command from CommandList, and String of data about"},{"lineNumber":23,"author":{"gitId":"jrvslam"},"content":"     * that follows the command."},{"lineNumber":24,"author":{"gitId":"jrvslam"},"content":"     * @param command This is the command that needs to be executed."},{"lineNumber":25,"author":{"gitId":"jrvslam"},"content":"     * @param data This is the data for the corresponding command."},{"lineNumber":26,"author":{"gitId":"jrvslam"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"jrvslam"},"content":"    public CommandParser(CommandList command, String data) {"},{"lineNumber":28,"author":{"gitId":"jrvslam"},"content":"        this.command \u003d command;"},{"lineNumber":29,"author":{"gitId":"jrvslam"},"content":"        this.data \u003d data;"},{"lineNumber":30,"author":{"gitId":"jrvslam"},"content":"        this.isExit \u003d false;"},{"lineNumber":31,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":33,"author":{"gitId":"jrvslam"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"jrvslam"},"content":"     * This method parses the input given. First by checking if the input is valid, otherwise throws a DukeException."},{"lineNumber":35,"author":{"gitId":"jrvslam"},"content":"     * This returns a valid ParseCommand for execution."},{"lineNumber":36,"author":{"gitId":"jrvslam"},"content":"     * @param input Input given that needs to be parsed"},{"lineNumber":37,"author":{"gitId":"jrvslam"},"content":"     * @param counter Number of items in the current task list"},{"lineNumber":38,"author":{"gitId":"jrvslam"},"content":"     * @return Returns a valid ParseCommand that can be executed."},{"lineNumber":39,"author":{"gitId":"jrvslam"},"content":"     * @throws DukeException Throws a DukeException if the input given is not valid and cannot be executed."},{"lineNumber":40,"author":{"gitId":"jrvslam"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"jrvslam"},"content":"    public static CommandParser parseLine(String input, int counter) throws DukeException {"},{"lineNumber":42,"author":{"gitId":"jrvslam"},"content":"        int first \u003d input.indexOf(\" \");"},{"lineNumber":43,"author":{"gitId":"jrvslam"},"content":"        CommandParser commandParser;"},{"lineNumber":44,"author":{"gitId":"jrvslam"},"content":"        CommandList commandList;"},{"lineNumber":45,"author":{"gitId":"jrvslam"},"content":"        String line \u003d \"\";"},{"lineNumber":46,"author":{"gitId":"jrvslam"},"content":"        String command;"},{"lineNumber":47,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":48,"author":{"gitId":"jrvslam"},"content":"        if (first \u003d\u003d -1) {"},{"lineNumber":49,"author":{"gitId":"jrvslam"},"content":"            command \u003d input.toUpperCase();"},{"lineNumber":50,"author":{"gitId":"jrvslam"},"content":"        } else {"},{"lineNumber":51,"author":{"gitId":"jrvslam"},"content":"            command \u003d input.substring(0, first).toUpperCase();"},{"lineNumber":52,"author":{"gitId":"jrvslam"},"content":"            line \u003d input.substring(first).strip();"},{"lineNumber":53,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":55,"author":{"gitId":"jrvslam"},"content":"        commandList \u003d createCommandFromString(command);"},{"lineNumber":56,"author":{"gitId":"jrvslam"},"content":"        checkCommand(input, commandList, first, counter);"},{"lineNumber":57,"author":{"gitId":"jrvslam"},"content":"        commandParser \u003d new CommandParser(commandList, line);"},{"lineNumber":58,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":59,"author":{"gitId":"jrvslam"},"content":"        return commandParser;"},{"lineNumber":60,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":62,"author":{"gitId":"jrvslam"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"jrvslam"},"content":"     * This method takes a valid ParseCommand and executes the command."},{"lineNumber":64,"author":{"gitId":"jrvslam"},"content":"     * @param ui ui to show output of the command execution"},{"lineNumber":65,"author":{"gitId":"jrvslam"},"content":"     * @param storage storage for accessing the tasks stored."},{"lineNumber":66,"author":{"gitId":"jrvslam"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"jrvslam"},"content":"    public String executeCommand(Ui ui, Storage storage) {"},{"lineNumber":68,"author":{"gitId":"jrvslam"},"content":"        String output \u003d \"\";"},{"lineNumber":69,"author":{"gitId":"jrvslam"},"content":"        switch (this.command) {"},{"lineNumber":70,"author":{"gitId":"jrvslam"},"content":"        case TODO:"},{"lineNumber":71,"author":{"gitId":"jrvslam"},"content":"            ToDo todo \u003d new ToDo(this.data.strip());"},{"lineNumber":72,"author":{"gitId":"jrvslam"},"content":"            storage.add(todo);"},{"lineNumber":73,"author":{"gitId":"jrvslam"},"content":"            output \u003d ui.getAddResponse(todo, storage.getArrSize());"},{"lineNumber":74,"author":{"gitId":"jrvslam"},"content":"            break;"},{"lineNumber":75,"author":{"gitId":"jrvslam"},"content":"        case DEADLINE:"},{"lineNumber":76,"author":{"gitId":"jrvslam"},"content":"            Deadline deadline \u003d Deadline.createDeadline(this.data);"},{"lineNumber":77,"author":{"gitId":"jrvslam"},"content":"            storage.add(deadline);"},{"lineNumber":78,"author":{"gitId":"jrvslam"},"content":"            output \u003d ui.getAddResponse(deadline, storage.getArrSize());"},{"lineNumber":79,"author":{"gitId":"jrvslam"},"content":"            break;"},{"lineNumber":80,"author":{"gitId":"jrvslam"},"content":"        case EVENT:"},{"lineNumber":81,"author":{"gitId":"jrvslam"},"content":"            Event event \u003d Event.createEvent(this.data);"},{"lineNumber":82,"author":{"gitId":"jrvslam"},"content":"            storage.add(event);"},{"lineNumber":83,"author":{"gitId":"jrvslam"},"content":"            output \u003d ui.getAddResponse(event, storage.getArrSize());"},{"lineNumber":84,"author":{"gitId":"jrvslam"},"content":"            break;"},{"lineNumber":85,"author":{"gitId":"jrvslam"},"content":"        case REMIND:"},{"lineNumber":86,"author":{"gitId":"jrvslam"},"content":"            Task reminderTask \u003d Reminder.createReminder(this.data, storage.getTasksArr());"},{"lineNumber":87,"author":{"gitId":"jrvslam"},"content":"            output \u003d ui.getAddReminderResponse(reminderTask);"},{"lineNumber":88,"author":{"gitId":"jrvslam"},"content":"            break;"},{"lineNumber":89,"author":{"gitId":"jrvslam"},"content":"        case DONE:"},{"lineNumber":90,"author":{"gitId":"jrvslam"},"content":"            int task_No \u003d Integer.parseInt(this.data);"},{"lineNumber":91,"author":{"gitId":"jrvslam"},"content":"            output \u003d ui.getDoneResponse(storage.get(task_No - 1).doTask());"},{"lineNumber":92,"author":{"gitId":"jrvslam"},"content":"            break;"},{"lineNumber":93,"author":{"gitId":"jrvslam"},"content":"        case LIST:"},{"lineNumber":94,"author":{"gitId":"jrvslam"},"content":"            output \u003d ui.getListResponse(storage.getTasksArr());"},{"lineNumber":95,"author":{"gitId":"jrvslam"},"content":"            break;"},{"lineNumber":96,"author":{"gitId":"jrvslam"},"content":"        case REMINDERS:"},{"lineNumber":97,"author":{"gitId":"jrvslam"},"content":"            output \u003d ui.getReminders(storage.getRemindersArr());"},{"lineNumber":98,"author":{"gitId":"jrvslam"},"content":"            break;"},{"lineNumber":99,"author":{"gitId":"jrvslam"},"content":"        case REMOVE:"},{"lineNumber":100,"author":{"gitId":"jrvslam"},"content":"            int remove_No \u003d Integer.parseInt(this.data);"},{"lineNumber":101,"author":{"gitId":"jrvslam"},"content":"            Task task \u003d storage.remove(remove_No - 1);"},{"lineNumber":102,"author":{"gitId":"jrvslam"},"content":"            output \u003d ui.getRemoveResponse(task, storage.getArrSize());"},{"lineNumber":103,"author":{"gitId":"jrvslam"},"content":"            break;"},{"lineNumber":104,"author":{"gitId":"jrvslam"},"content":"        case FIND:"},{"lineNumber":105,"author":{"gitId":"jrvslam"},"content":"            ArrayList\u003cTask\u003e results \u003d storage.find(this.data);"},{"lineNumber":106,"author":{"gitId":"jrvslam"},"content":"            output \u003d ui.getListResponse(results);"},{"lineNumber":107,"author":{"gitId":"jrvslam"},"content":"            break;"},{"lineNumber":108,"author":{"gitId":"jrvslam"},"content":"        case BYE:"},{"lineNumber":109,"author":{"gitId":"jrvslam"},"content":"            this.isExit \u003d true;"},{"lineNumber":110,"author":{"gitId":"jrvslam"},"content":"            storage.beginClose();"},{"lineNumber":111,"author":{"gitId":"jrvslam"},"content":"            storage.closeFile();"},{"lineNumber":112,"author":{"gitId":"jrvslam"},"content":"            output \u003d ui.getGoodbyeResponse();"},{"lineNumber":113,"author":{"gitId":"jrvslam"},"content":"            break;"},{"lineNumber":114,"author":{"gitId":"jrvslam"},"content":"        case HELP:"},{"lineNumber":115,"author":{"gitId":"jrvslam"},"content":"            output \u003d ui.getHelp();"},{"lineNumber":116,"author":{"gitId":"jrvslam"},"content":"        default:"},{"lineNumber":117,"author":{"gitId":"jrvslam"},"content":"             assert false : command;"},{"lineNumber":118,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":120,"author":{"gitId":"jrvslam"},"content":"        return output;"},{"lineNumber":121,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":123,"author":{"gitId":"jrvslam"},"content":"    private static CommandList createCommandFromString(String command) throws DukeException {"},{"lineNumber":124,"author":{"gitId":"jrvslam"},"content":"        CommandList commandList;"},{"lineNumber":125,"author":{"gitId":"jrvslam"},"content":"        try {"},{"lineNumber":126,"author":{"gitId":"jrvslam"},"content":"            commandList \u003d CommandList.valueOf(command);"},{"lineNumber":127,"author":{"gitId":"jrvslam"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":128,"author":{"gitId":"jrvslam"},"content":"            throw new DukeException(\" I don\u0027t understand! :(\");"},{"lineNumber":129,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"jrvslam"},"content":"        return commandList;"},{"lineNumber":131,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":133,"author":{"gitId":"jrvslam"},"content":"    private static void checkCommand(String input, CommandList commandList, int index, int counter) throws DukeException {"},{"lineNumber":134,"author":{"gitId":"jrvslam"},"content":"        boolean test \u003d index \u003d\u003d -1 || input.substring(index).isBlank();"},{"lineNumber":135,"author":{"gitId":"jrvslam"},"content":"        switch (commandList) {"},{"lineNumber":136,"author":{"gitId":"jrvslam"},"content":"        case TODO:"},{"lineNumber":137,"author":{"gitId":"jrvslam"},"content":"        case FIND:"},{"lineNumber":138,"author":{"gitId":"jrvslam"},"content":"            if (test) {"},{"lineNumber":139,"author":{"gitId":"jrvslam"},"content":"                throw new DukeException(\" Cannot be empty! :(\");"},{"lineNumber":140,"author":{"gitId":"jrvslam"},"content":"            }"},{"lineNumber":141,"author":{"gitId":"jrvslam"},"content":"            break;"},{"lineNumber":142,"author":{"gitId":"jrvslam"},"content":"        case DEADLINE:"},{"lineNumber":143,"author":{"gitId":"jrvslam"},"content":"            if (test) {"},{"lineNumber":144,"author":{"gitId":"jrvslam"},"content":"                throw new DukeException(\" Deadline cannot be empty! :(\");"},{"lineNumber":145,"author":{"gitId":"jrvslam"},"content":"            } else if (!input.contains(\"/by\")) {"},{"lineNumber":146,"author":{"gitId":"jrvslam"},"content":"                throw new DukeException(\" Deadline must have a date! :(\");"},{"lineNumber":147,"author":{"gitId":"jrvslam"},"content":"            } else {"},{"lineNumber":148,"author":{"gitId":"jrvslam"},"content":"                int indexOfBy \u003d input.indexOf(\"/by\");"},{"lineNumber":149,"author":{"gitId":"jrvslam"},"content":"                if (input.substring(index, indexOfBy).isBlank()) {"},{"lineNumber":150,"author":{"gitId":"jrvslam"},"content":"                    throw new DukeException(\" Deadline must have a task! :(\");"},{"lineNumber":151,"author":{"gitId":"jrvslam"},"content":"                } else if (input.substring(indexOfBy + SPACER).isBlank()) {"},{"lineNumber":152,"author":{"gitId":"jrvslam"},"content":"                    throw new DukeException(\" Deadline date cannot be empty! :(\");"},{"lineNumber":153,"author":{"gitId":"jrvslam"},"content":"                } else if (checkDatesFormat(input.substring(indexOfBy + SPACER).trim())) {"},{"lineNumber":154,"author":{"gitId":"jrvslam"},"content":"                    throw new DukeException(\" I dont understand the date! :(\");"},{"lineNumber":155,"author":{"gitId":"jrvslam"},"content":"                }"},{"lineNumber":156,"author":{"gitId":"jrvslam"},"content":"            }"},{"lineNumber":157,"author":{"gitId":"jrvslam"},"content":"            break;"},{"lineNumber":158,"author":{"gitId":"jrvslam"},"content":"        case EVENT:"},{"lineNumber":159,"author":{"gitId":"jrvslam"},"content":"            if (test) {"},{"lineNumber":160,"author":{"gitId":"jrvslam"},"content":"                throw new DukeException(\" Event cannot be empty! :(\");"},{"lineNumber":161,"author":{"gitId":"jrvslam"},"content":"            } else if (!input.contains(\"/at\")) {"},{"lineNumber":162,"author":{"gitId":"jrvslam"},"content":"                throw new DukeException(\" Event must have a date! :(\");"},{"lineNumber":163,"author":{"gitId":"jrvslam"},"content":"            } else {"},{"lineNumber":164,"author":{"gitId":"jrvslam"},"content":"                int indexOfAt \u003d input.indexOf(\"/at\");"},{"lineNumber":165,"author":{"gitId":"jrvslam"},"content":"                if (input.substring(index, indexOfAt).isBlank()) {"},{"lineNumber":166,"author":{"gitId":"jrvslam"},"content":"                    throw new DukeException(\" Event must have a task! :(\");"},{"lineNumber":167,"author":{"gitId":"jrvslam"},"content":"                } else if (input.substring(indexOfAt + SPACER).isBlank()) {"},{"lineNumber":168,"author":{"gitId":"jrvslam"},"content":"                    throw new DukeException(\" Event date cannot be empty! :(\");"},{"lineNumber":169,"author":{"gitId":"jrvslam"},"content":"                } else if (checkDatesFormat(input.substring(indexOfAt + SPACER).trim())) {"},{"lineNumber":170,"author":{"gitId":"jrvslam"},"content":"                    throw new DukeException(\" I dont understand the date! :(\");"},{"lineNumber":171,"author":{"gitId":"jrvslam"},"content":"                }"},{"lineNumber":172,"author":{"gitId":"jrvslam"},"content":"            }"},{"lineNumber":173,"author":{"gitId":"jrvslam"},"content":"            break;"},{"lineNumber":174,"author":{"gitId":"jrvslam"},"content":"        case REMIND:"},{"lineNumber":175,"author":{"gitId":"jrvslam"},"content":"            if (test) {"},{"lineNumber":176,"author":{"gitId":"jrvslam"},"content":"                throw new DukeException(\" Reminder cannot be empty! :(\");"},{"lineNumber":177,"author":{"gitId":"jrvslam"},"content":"            } else if (!input.contains(\"/on\")) {"},{"lineNumber":178,"author":{"gitId":"jrvslam"},"content":"                throw new DukeException(\" Reminder must have a date! :(\");"},{"lineNumber":179,"author":{"gitId":"jrvslam"},"content":"            } else {"},{"lineNumber":180,"author":{"gitId":"jrvslam"},"content":"                int indexOfOn \u003d input.indexOf(\"/on\");"},{"lineNumber":181,"author":{"gitId":"jrvslam"},"content":"                if (input.substring(index, indexOfOn).isBlank()) {"},{"lineNumber":182,"author":{"gitId":"jrvslam"},"content":"                    throw new DukeException(\" Reminder must have a task! :(\");"},{"lineNumber":183,"author":{"gitId":"jrvslam"},"content":"                } else {"},{"lineNumber":184,"author":{"gitId":"jrvslam"},"content":"                    int no \u003d Integer.parseInt(input.substring(index + 1, index + 2));"},{"lineNumber":185,"author":{"gitId":"jrvslam"},"content":"                    if (no \u003e counter || no \u003c 1) {"},{"lineNumber":186,"author":{"gitId":"jrvslam"},"content":"                        throw new DukeException(\" Reminder needs a valid task! :(\");"},{"lineNumber":187,"author":{"gitId":"jrvslam"},"content":"                    } else if (input.substring(indexOfOn + SPACER).isBlank()) {"},{"lineNumber":188,"author":{"gitId":"jrvslam"},"content":"                        throw new DukeException(\" Reminder date cannot be empty! :(\");"},{"lineNumber":189,"author":{"gitId":"jrvslam"},"content":"                    } else if (checkDatesFormat(input.substring(indexOfOn + SPACER).trim())) {"},{"lineNumber":190,"author":{"gitId":"jrvslam"},"content":"                        throw new DukeException(\" I dont understand the date! :(\");"},{"lineNumber":191,"author":{"gitId":"jrvslam"},"content":"                    }"},{"lineNumber":192,"author":{"gitId":"jrvslam"},"content":"                }"},{"lineNumber":193,"author":{"gitId":"jrvslam"},"content":"            }"},{"lineNumber":194,"author":{"gitId":"jrvslam"},"content":"            break;"},{"lineNumber":195,"author":{"gitId":"jrvslam"},"content":"        case DONE:"},{"lineNumber":196,"author":{"gitId":"jrvslam"},"content":"        case REMOVE:"},{"lineNumber":197,"author":{"gitId":"jrvslam"},"content":"            if (test) {"},{"lineNumber":198,"author":{"gitId":"jrvslam"},"content":"                throw new DukeException(\" Which task? :(\");"},{"lineNumber":199,"author":{"gitId":"jrvslam"},"content":"            } else {"},{"lineNumber":200,"author":{"gitId":"jrvslam"},"content":"                int no \u003d Integer.parseInt(input.substring(index + 1));"},{"lineNumber":201,"author":{"gitId":"jrvslam"},"content":"                if (no \u003e counter || no \u003c 1) {"},{"lineNumber":202,"author":{"gitId":"jrvslam"},"content":"                    throw new DukeException(\" No such task! :(\");"},{"lineNumber":203,"author":{"gitId":"jrvslam"},"content":"                }"},{"lineNumber":204,"author":{"gitId":"jrvslam"},"content":"            }"},{"lineNumber":205,"author":{"gitId":"jrvslam"},"content":"            break;"},{"lineNumber":206,"author":{"gitId":"jrvslam"},"content":"        case LIST:"},{"lineNumber":207,"author":{"gitId":"jrvslam"},"content":"        case BYE:"},{"lineNumber":208,"author":{"gitId":"jrvslam"},"content":"        case REMINDERS:"},{"lineNumber":209,"author":{"gitId":"jrvslam"},"content":"        case HELP:"},{"lineNumber":210,"author":{"gitId":"jrvslam"},"content":"            break;"},{"lineNumber":211,"author":{"gitId":"jrvslam"},"content":"        default:"},{"lineNumber":212,"author":{"gitId":"jrvslam"},"content":"            assert false : commandList;"},{"lineNumber":213,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":214,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":215,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":216,"author":{"gitId":"jrvslam"},"content":"    private static boolean checkDatesFormat(String input) {"},{"lineNumber":217,"author":{"gitId":"jrvslam"},"content":"        ParseDates parseDatesChecker \u003d new ParseDates();"},{"lineNumber":218,"author":{"gitId":"jrvslam"},"content":"        return !parseDatesChecker.isParsable(input);"},{"lineNumber":219,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":220,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":221,"author":{"gitId":"jrvslam"},"content":"    /**"},{"lineNumber":222,"author":{"gitId":"jrvslam"},"content":"     * This method is used to get the command stored in the ParseCommand"},{"lineNumber":223,"author":{"gitId":"jrvslam"},"content":"     * @return This returns the CommandList command."},{"lineNumber":224,"author":{"gitId":"jrvslam"},"content":"     */"},{"lineNumber":225,"author":{"gitId":"jrvslam"},"content":"    public CommandList getCommand() {"},{"lineNumber":226,"author":{"gitId":"jrvslam"},"content":"        return command;"},{"lineNumber":227,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":228,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":229,"author":{"gitId":"jrvslam"},"content":"    /**"},{"lineNumber":230,"author":{"gitId":"jrvslam"},"content":"     * This method is used to get the String data of the task."},{"lineNumber":231,"author":{"gitId":"jrvslam"},"content":"     * @return This returns the String of data for the corresponding task"},{"lineNumber":232,"author":{"gitId":"jrvslam"},"content":"     */"},{"lineNumber":233,"author":{"gitId":"jrvslam"},"content":"    public String getData() {"},{"lineNumber":234,"author":{"gitId":"jrvslam"},"content":"        return data;"},{"lineNumber":235,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":236,"author":{"gitId":"jrvslam"},"content":"}"}],"authorContributionMap":{"jrvslam":236}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"import duke.task.*;"},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":"import java.nio.file.Path;"},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":"import java.util.Comparator;"},{"lineNumber":12,"author":{"gitId":"jrvslam"},"content":"import java.util.Scanner;"},{"lineNumber":13,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":14,"author":{"gitId":"jrvslam"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"jrvslam"},"content":" * This is the Storage class that handles saving tasks to file, reading save file and updating Tasks list."},{"lineNumber":16,"author":{"gitId":"jrvslam"},"content":" */"},{"lineNumber":17,"author":{"gitId":"jrvslam"},"content":"public class Storage {"},{"lineNumber":18,"author":{"gitId":"jrvslam"},"content":"    private FileWriter fio;"},{"lineNumber":19,"author":{"gitId":"jrvslam"},"content":"    private final File file;"},{"lineNumber":20,"author":{"gitId":"jrvslam"},"content":"    private final ArrayList\u003cTask\u003e tasks;"},{"lineNumber":21,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":22,"author":{"gitId":"jrvslam"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"jrvslam"},"content":"     * This is the Constructor for Storage. Creates a new ArrayList to store Tasks, initiates File and populates list."},{"lineNumber":24,"author":{"gitId":"jrvslam"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"jrvslam"},"content":"    public Storage() {"},{"lineNumber":26,"author":{"gitId":"jrvslam"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"jrvslam"},"content":"        ArrayList\u003cReminder\u003e reminders \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"jrvslam"},"content":"        this.file \u003d initiateFile();"},{"lineNumber":29,"author":{"gitId":"jrvslam"},"content":"        populateList(tasks, reminders);"},{"lineNumber":30,"author":{"gitId":"jrvslam"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":31,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":33,"author":{"gitId":"jrvslam"},"content":"    private File initiateFile() {"},{"lineNumber":34,"author":{"gitId":"jrvslam"},"content":"        String home \u003d System.getProperty(\"user.home\");"},{"lineNumber":35,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":36,"author":{"gitId":"jrvslam"},"content":"        // inserts correct file path separator on *nix and Windows"},{"lineNumber":37,"author":{"gitId":"jrvslam"},"content":"        // works on *nix"},{"lineNumber":38,"author":{"gitId":"jrvslam"},"content":"        // works on Windows"},{"lineNumber":39,"author":{"gitId":"jrvslam"},"content":"        Path path \u003d java.nio.file.Paths.get(home, \"iP\", \"data\");"},{"lineNumber":40,"author":{"gitId":"jrvslam"},"content":"        boolean directoryExists \u003d java.nio.file.Files.exists(path);"},{"lineNumber":41,"author":{"gitId":"jrvslam"},"content":"        File file \u003d null;"},{"lineNumber":42,"author":{"gitId":"jrvslam"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"jrvslam"},"content":"            if (!directoryExists) {"},{"lineNumber":44,"author":{"gitId":"jrvslam"},"content":"                java.nio.file.Files.createDirectories(path);"},{"lineNumber":45,"author":{"gitId":"jrvslam"},"content":"                System.out.println(\"   Path Created: \" + path);"},{"lineNumber":46,"author":{"gitId":"jrvslam"},"content":"            } else {"},{"lineNumber":47,"author":{"gitId":"jrvslam"},"content":"                System.out.println(\"   Path exits\");"},{"lineNumber":48,"author":{"gitId":"jrvslam"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"jrvslam"},"content":"            String filePath \u003d path + File.separator + \"Duke.txt\";"},{"lineNumber":50,"author":{"gitId":"jrvslam"},"content":"            file \u003d new File(filePath);"},{"lineNumber":51,"author":{"gitId":"jrvslam"},"content":"            if (file.createNewFile()) {"},{"lineNumber":52,"author":{"gitId":"jrvslam"},"content":"                System.out.println(\"   File created: \" + file.getName());"},{"lineNumber":53,"author":{"gitId":"jrvslam"},"content":"            } else {"},{"lineNumber":54,"author":{"gitId":"jrvslam"},"content":"                System.out.println(\"   File exits\");"},{"lineNumber":55,"author":{"gitId":"jrvslam"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"jrvslam"},"content":"        } catch (IOException e) {"},{"lineNumber":57,"author":{"gitId":"jrvslam"},"content":"            System.out.println(\"Failed to create File\");"},{"lineNumber":58,"author":{"gitId":"jrvslam"},"content":"            e.printStackTrace();"},{"lineNumber":59,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"jrvslam"},"content":"        return file;"},{"lineNumber":61,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":63,"author":{"gitId":"jrvslam"},"content":"    private void populateList(ArrayList\u003cTask\u003e tasks, ArrayList\u003cReminder\u003e reminders) {"},{"lineNumber":64,"author":{"gitId":"jrvslam"},"content":"        try {"},{"lineNumber":65,"author":{"gitId":"jrvslam"},"content":"            Scanner reader \u003d new Scanner(this.file);"},{"lineNumber":66,"author":{"gitId":"jrvslam"},"content":"            while (reader.hasNextLine()) {"},{"lineNumber":67,"author":{"gitId":"jrvslam"},"content":"                String data \u003d reader.nextLine();"},{"lineNumber":68,"author":{"gitId":"jrvslam"},"content":"                int commandEnd \u003d data.indexOf(\" | \");"},{"lineNumber":69,"author":{"gitId":"jrvslam"},"content":"                String task \u003d data.substring(0, commandEnd);"},{"lineNumber":70,"author":{"gitId":"jrvslam"},"content":"                data \u003d data.substring(commandEnd + 3);"},{"lineNumber":71,"author":{"gitId":"jrvslam"},"content":"                int stateEnd \u003d data.indexOf(\" | \");"},{"lineNumber":72,"author":{"gitId":"jrvslam"},"content":"                String state \u003d data.substring(0, stateEnd);"},{"lineNumber":73,"author":{"gitId":"jrvslam"},"content":"                data \u003d data.substring(stateEnd + 3);"},{"lineNumber":74,"author":{"gitId":"jrvslam"},"content":"                int dateEnd \u003d data.indexOf(\" | \");"},{"lineNumber":75,"author":{"gitId":"jrvslam"},"content":"                String reminderDate \u003d data.substring(0, dateEnd);"},{"lineNumber":76,"author":{"gitId":"jrvslam"},"content":"                data \u003d data.substring(dateEnd + 3);"},{"lineNumber":77,"author":{"gitId":"jrvslam"},"content":"                int inputEnd \u003d data.indexOf(\" | \");"},{"lineNumber":78,"author":{"gitId":"jrvslam"},"content":"                switch (task) {"},{"lineNumber":79,"author":{"gitId":"jrvslam"},"content":"                case \"T\":"},{"lineNumber":80,"author":{"gitId":"jrvslam"},"content":"                    tasks.add(new ToDo(data, Integer.parseInt(state), reminderDate));"},{"lineNumber":81,"author":{"gitId":"jrvslam"},"content":"                    break;"},{"lineNumber":82,"author":{"gitId":"jrvslam"},"content":"                case \"D\":"},{"lineNumber":83,"author":{"gitId":"jrvslam"},"content":"                    tasks.add(new Deadline(data.substring(0, inputEnd), data.substring(inputEnd + 3),"},{"lineNumber":84,"author":{"gitId":"jrvslam"},"content":"                            Integer.parseInt(state), reminderDate));"},{"lineNumber":85,"author":{"gitId":"jrvslam"},"content":"                    break;"},{"lineNumber":86,"author":{"gitId":"jrvslam"},"content":"                case \"E\":"},{"lineNumber":87,"author":{"gitId":"jrvslam"},"content":"                    tasks.add(new Event(data.substring(0, inputEnd), data.substring(inputEnd + 3),"},{"lineNumber":88,"author":{"gitId":"jrvslam"},"content":"                            Integer.parseInt(state), reminderDate));"},{"lineNumber":89,"author":{"gitId":"jrvslam"},"content":"                    break;"},{"lineNumber":90,"author":{"gitId":"jrvslam"},"content":"                default :"},{"lineNumber":91,"author":{"gitId":"jrvslam"},"content":"                    assert false : task;"},{"lineNumber":92,"author":{"gitId":"jrvslam"},"content":"                }"},{"lineNumber":93,"author":{"gitId":"jrvslam"},"content":"            }"},{"lineNumber":94,"author":{"gitId":"jrvslam"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":95,"author":{"gitId":"jrvslam"},"content":"            e.printStackTrace();"},{"lineNumber":96,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":99,"author":{"gitId":"jrvslam"},"content":"    private void initialiseFW() {"},{"lineNumber":100,"author":{"gitId":"jrvslam"},"content":"        try {"},{"lineNumber":101,"author":{"gitId":"jrvslam"},"content":"            this.fio \u003d new FileWriter(file);"},{"lineNumber":102,"author":{"gitId":"jrvslam"},"content":"        } catch (IOException e) {"},{"lineNumber":103,"author":{"gitId":"jrvslam"},"content":"            System.out.println(\"Unable to create FileWriter\");"},{"lineNumber":104,"author":{"gitId":"jrvslam"},"content":"            e.printStackTrace();"},{"lineNumber":105,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"jrvslam"},"content":"    public ArrayList\u003cTask\u003e find(String input) {"},{"lineNumber":108,"author":{"gitId":"jrvslam"},"content":"        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"},{"lineNumber":109,"author":{"gitId":"jrvslam"},"content":"        this.tasks.forEach((x) -\u003e {"},{"lineNumber":110,"author":{"gitId":"jrvslam"},"content":"            if (x.getInput().toUpperCase().strip().contains(input.toUpperCase().strip())) {"},{"lineNumber":111,"author":{"gitId":"jrvslam"},"content":"                temp.add(x);"},{"lineNumber":112,"author":{"gitId":"jrvslam"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"jrvslam"},"content":"        } );"},{"lineNumber":114,"author":{"gitId":"jrvslam"},"content":"        return temp;"},{"lineNumber":115,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":117,"author":{"gitId":"jrvslam"},"content":"    private void writeTaskToFile(Task task) {"},{"lineNumber":118,"author":{"gitId":"jrvslam"},"content":"        try {"},{"lineNumber":119,"author":{"gitId":"jrvslam"},"content":"            this.fio.write(task.saveTask() + \"\\n\");"},{"lineNumber":120,"author":{"gitId":"jrvslam"},"content":"        } catch (IOException e) {"},{"lineNumber":121,"author":{"gitId":"jrvslam"},"content":"            System.out.println(\"Unable to write to file\");"},{"lineNumber":122,"author":{"gitId":"jrvslam"},"content":"            e.printStackTrace();"},{"lineNumber":123,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":126,"author":{"gitId":"jrvslam"},"content":"    /**"},{"lineNumber":127,"author":{"gitId":"jrvslam"},"content":"     * This begins the close procedure by running through all tasks stored and writing to the file."},{"lineNumber":128,"author":{"gitId":"jrvslam"},"content":"     */"},{"lineNumber":129,"author":{"gitId":"jrvslam"},"content":"    public void beginClose() {"},{"lineNumber":130,"author":{"gitId":"jrvslam"},"content":"        this.initialiseFW();"},{"lineNumber":131,"author":{"gitId":"jrvslam"},"content":"        for (Task task : this.tasks) {"},{"lineNumber":132,"author":{"gitId":"jrvslam"},"content":"            writeTaskToFile(task);"},{"lineNumber":133,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":136,"author":{"gitId":"jrvslam"},"content":"    /**"},{"lineNumber":137,"author":{"gitId":"jrvslam"},"content":"     * This closes the FileWriter used by the chatbot in Storage."},{"lineNumber":138,"author":{"gitId":"jrvslam"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"jrvslam"},"content":"    public void closeFile() {"},{"lineNumber":140,"author":{"gitId":"jrvslam"},"content":"        try {"},{"lineNumber":141,"author":{"gitId":"jrvslam"},"content":"            this.fio.close();"},{"lineNumber":142,"author":{"gitId":"jrvslam"},"content":"        } catch (IOException e) {"},{"lineNumber":143,"author":{"gitId":"jrvslam"},"content":"            System.out.println(\"Unable to close file\");"},{"lineNumber":144,"author":{"gitId":"jrvslam"},"content":"            e.printStackTrace();"},{"lineNumber":145,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":147,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":149,"author":{"gitId":"jrvslam"},"content":"    public void add(Task task) {"},{"lineNumber":150,"author":{"gitId":"jrvslam"},"content":"        this.tasks.add(task);"},{"lineNumber":151,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":153,"author":{"gitId":"jrvslam"},"content":"    public Task remove(int index) {"},{"lineNumber":154,"author":{"gitId":"jrvslam"},"content":"        return this.tasks.remove(index);"},{"lineNumber":155,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":157,"author":{"gitId":"jrvslam"},"content":"    public ArrayList\u003cTask\u003e getTasksArr() {"},{"lineNumber":158,"author":{"gitId":"jrvslam"},"content":"        return this.tasks;"},{"lineNumber":159,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":161,"author":{"gitId":"jrvslam"},"content":"    public ArrayList\u003cTask\u003e getRemindersArr() {"},{"lineNumber":162,"author":{"gitId":"jrvslam"},"content":"        ArrayList\u003cTask\u003e reminders \u003d new ArrayList\u003c\u003e();"},{"lineNumber":163,"author":{"gitId":"jrvslam"},"content":"        for (Task task : this.tasks) {"},{"lineNumber":164,"author":{"gitId":"jrvslam"},"content":"            if (task.getReminderDate() !\u003d null) {"},{"lineNumber":165,"author":{"gitId":"jrvslam"},"content":"                reminders.add(task);"},{"lineNumber":166,"author":{"gitId":"jrvslam"},"content":"            }"},{"lineNumber":167,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"jrvslam"},"content":"        reminders.sort((o1, o2) -\u003e {"},{"lineNumber":169,"author":{"gitId":"jrvslam"},"content":"            if (o1.getReminderDate().isBefore(o2.getReminderDate())) {"},{"lineNumber":170,"author":{"gitId":"jrvslam"},"content":"                return -1;"},{"lineNumber":171,"author":{"gitId":"jrvslam"},"content":"            } else if (o1.getReminderDate().isAfter(o2.getReminderDate())) {"},{"lineNumber":172,"author":{"gitId":"jrvslam"},"content":"                return 1;"},{"lineNumber":173,"author":{"gitId":"jrvslam"},"content":"            } else {"},{"lineNumber":174,"author":{"gitId":"jrvslam"},"content":"                return 0;"},{"lineNumber":175,"author":{"gitId":"jrvslam"},"content":"            }"},{"lineNumber":176,"author":{"gitId":"jrvslam"},"content":"        });"},{"lineNumber":177,"author":{"gitId":"jrvslam"},"content":"        return reminders;"},{"lineNumber":178,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":180,"author":{"gitId":"jrvslam"},"content":"    public int getArrSize() {"},{"lineNumber":181,"author":{"gitId":"jrvslam"},"content":"        return tasks.size();"},{"lineNumber":182,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":184,"author":{"gitId":"jrvslam"},"content":"    public Task get(int index) {"},{"lineNumber":185,"author":{"gitId":"jrvslam"},"content":"        return this.tasks.get(index);"},{"lineNumber":186,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":187,"author":{"gitId":"jrvslam"},"content":"}"}],"authorContributionMap":{"jrvslam":187}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":"    private final LocalDateTime localDate;"},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":"    public Deadline(String input, String date) {"},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"        super(input);"},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":"        this.localDate \u003d new ParseDates().parseString(date);"},{"lineNumber":12,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":14,"author":{"gitId":"jrvslam"},"content":"    public Deadline(String input, String date, int done, String reminderDate) {"},{"lineNumber":15,"author":{"gitId":"jrvslam"},"content":"        super(input);"},{"lineNumber":16,"author":{"gitId":"jrvslam"},"content":"        this.localDate \u003d new ParseDates().parseString(date);"},{"lineNumber":17,"author":{"gitId":"jrvslam"},"content":"        if (done \u003d\u003d 1) {"},{"lineNumber":18,"author":{"gitId":"jrvslam"},"content":"            this.doTask();"},{"lineNumber":19,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"jrvslam"},"content":"        if (!reminderDate.equals(\"0\")) {"},{"lineNumber":21,"author":{"gitId":"jrvslam"},"content":"            this.addReminder(new ParseDates().parseString(reminderDate));"},{"lineNumber":22,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":25,"author":{"gitId":"jrvslam"},"content":"    public static Deadline createDeadline(String input) {"},{"lineNumber":26,"author":{"gitId":"jrvslam"},"content":"        int indexOfBy \u003d input.lastIndexOf(\"/by \");"},{"lineNumber":27,"author":{"gitId":"jrvslam"},"content":"        String date \u003d input.substring(indexOfBy + 3).trim();"},{"lineNumber":28,"author":{"gitId":"jrvslam"},"content":"        return new Deadline(input.substring(0, indexOfBy).strip(), date);"},{"lineNumber":29,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":31,"author":{"gitId":"jrvslam"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"jrvslam"},"content":"    public String saveTask() {"},{"lineNumber":33,"author":{"gitId":"jrvslam"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");"},{"lineNumber":34,"author":{"gitId":"jrvslam"},"content":"        return \"D\" + super.saveTask() + \" | \" + localDate.format(dateTimeFormatter);"},{"lineNumber":35,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":37,"author":{"gitId":"jrvslam"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"jrvslam"},"content":"    public String toString(){"},{"lineNumber":39,"author":{"gitId":"jrvslam"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":40,"author":{"gitId":"jrvslam"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + localDate.format(dateTimeFormatter) + \")\";"},{"lineNumber":41,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"jrvslam"},"content":"}"}],"authorContributionMap":{"jrvslam":42}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":"public class Event extends Task{"},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":"    private final LocalDateTime localDate;"},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":"    public Event(String input, String date) {"},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"        super(input);"},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":"        this.localDate \u003d new ParseDates().parseString(date);"},{"lineNumber":12,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":14,"author":{"gitId":"jrvslam"},"content":"    public Event(String input, String date, int done, String reminderDate) {"},{"lineNumber":15,"author":{"gitId":"jrvslam"},"content":"        super(input);"},{"lineNumber":16,"author":{"gitId":"jrvslam"},"content":"        this.localDate \u003d new ParseDates().parseString(date);"},{"lineNumber":17,"author":{"gitId":"jrvslam"},"content":"        if (done \u003d\u003d 1) {"},{"lineNumber":18,"author":{"gitId":"jrvslam"},"content":"            this.doTask();"},{"lineNumber":19,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"jrvslam"},"content":"        if (!reminderDate.equals(\"0\")) {"},{"lineNumber":21,"author":{"gitId":"jrvslam"},"content":"            this.addReminder(new ParseDates().parseString(reminderDate));"},{"lineNumber":22,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":25,"author":{"gitId":"jrvslam"},"content":"    public static Event createEvent(String input) {"},{"lineNumber":26,"author":{"gitId":"jrvslam"},"content":"        int indexOfAt \u003d input.lastIndexOf(\"/at \");"},{"lineNumber":27,"author":{"gitId":"jrvslam"},"content":"        String date \u003d input.substring(indexOfAt + 3).trim();"},{"lineNumber":28,"author":{"gitId":"jrvslam"},"content":"        return new Event(input.substring(0, indexOfAt).strip(), date);"},{"lineNumber":29,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":31,"author":{"gitId":"jrvslam"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"jrvslam"},"content":"    public String saveTask() {"},{"lineNumber":33,"author":{"gitId":"jrvslam"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");"},{"lineNumber":34,"author":{"gitId":"jrvslam"},"content":"        return \"E\" + super.saveTask() + \" | \" + localDate.format(dateTimeFormatter);"},{"lineNumber":35,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":37,"author":{"gitId":"jrvslam"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"jrvslam"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"jrvslam"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":40,"author":{"gitId":"jrvslam"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + localDate.format(dateTimeFormatter) + \")\";"},{"lineNumber":41,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"jrvslam"},"content":"}"}],"authorContributionMap":{"jrvslam":42}},{"path":"src/main/java/duke/task/ParseDates.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"import java.time.format.DateTimeFormatterBuilder;"},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":"import java.time.temporal.ChronoField;"},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":"public class ParseDates {"},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"    private static final DateTimeFormatter DATE_TIME_FORMATTER \u003d new DateTimeFormatterBuilder()"},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":"                .appendPattern(\"[dd/MM/yyyy][yyyy-MM-dd][MMM dd yyyy][dd MMM yyyy][dd MM yyyy][ddMMyyyy]\")"},{"lineNumber":12,"author":{"gitId":"jrvslam"},"content":"                .optionalStart().appendPattern(\" HHmm\").optionalEnd()"},{"lineNumber":13,"author":{"gitId":"jrvslam"},"content":"                .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)"},{"lineNumber":14,"author":{"gitId":"jrvslam"},"content":"                .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)"},{"lineNumber":15,"author":{"gitId":"jrvslam"},"content":"                .toFormatter();"},{"lineNumber":16,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":17,"author":{"gitId":"jrvslam"},"content":"    public boolean isParsable(String dateInput) {"},{"lineNumber":18,"author":{"gitId":"jrvslam"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"jrvslam"},"content":"            LocalDateTime.parse(dateInput, DATE_TIME_FORMATTER);"},{"lineNumber":20,"author":{"gitId":"jrvslam"},"content":"            return true;"},{"lineNumber":21,"author":{"gitId":"jrvslam"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":22,"author":{"gitId":"jrvslam"},"content":"            return false;"},{"lineNumber":23,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":26,"author":{"gitId":"jrvslam"},"content":"    public LocalDateTime parseString(String string) {"},{"lineNumber":27,"author":{"gitId":"jrvslam"},"content":"        return LocalDateTime.parse(string, DATE_TIME_FORMATTER);"},{"lineNumber":28,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"jrvslam"},"content":"}"}],"authorContributionMap":{"jrvslam":29}},{"path":"src/main/java/duke/task/Reminder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":"public class Reminder {"},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":"    private final LocalDateTime localDateTime;"},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"    public Reminder(LocalDateTime date) {"},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":"        this.localDateTime \u003d date;"},{"lineNumber":12,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":14,"author":{"gitId":"jrvslam"},"content":"    public static Task createReminder(String input, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":15,"author":{"gitId":"jrvslam"},"content":"        int indexOfOn \u003d input.lastIndexOf(\"/on \");"},{"lineNumber":16,"author":{"gitId":"jrvslam"},"content":"        String date \u003d input.substring(indexOfOn + 3).trim();"},{"lineNumber":17,"author":{"gitId":"jrvslam"},"content":"        int taskIndex \u003d Integer.parseInt(input.substring(0, indexOfOn).strip()) - 1;"},{"lineNumber":18,"author":{"gitId":"jrvslam"},"content":"        tasks.get(taskIndex).addReminder(new ParseDates().parseString(date));"},{"lineNumber":19,"author":{"gitId":"jrvslam"},"content":"        return tasks.get(taskIndex);"},{"lineNumber":20,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":22,"author":{"gitId":"jrvslam"},"content":"    public LocalDateTime getDate() {"},{"lineNumber":23,"author":{"gitId":"jrvslam"},"content":"        return this.localDateTime;"},{"lineNumber":24,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":26,"author":{"gitId":"jrvslam"},"content":"    public String getReminderDateOnly() {"},{"lineNumber":27,"author":{"gitId":"jrvslam"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");"},{"lineNumber":28,"author":{"gitId":"jrvslam"},"content":"        return localDateTime.format(dateTimeFormatter);"},{"lineNumber":29,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":31,"author":{"gitId":"jrvslam"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"jrvslam"},"content":"    public String toString() {"},{"lineNumber":33,"author":{"gitId":"jrvslam"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");"},{"lineNumber":34,"author":{"gitId":"jrvslam"},"content":"        return \"Reminder! At: \" + localDateTime.format(dateTimeFormatter) + \" for:\\n\";"},{"lineNumber":35,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"jrvslam"},"content":"}"}],"authorContributionMap":{"jrvslam":36}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":" * This is the Task class that a user can input to the chatbot"},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":" */"},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":"public class Task {"},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":"    private final String input;"},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"    private TaskState state;"},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":"    private Reminder reminder;"},{"lineNumber":12,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":13,"author":{"gitId":"jrvslam"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"jrvslam"},"content":"     * This is the Task constructor."},{"lineNumber":15,"author":{"gitId":"jrvslam"},"content":"     * @param input This stores the String input for the Task."},{"lineNumber":16,"author":{"gitId":"jrvslam"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"jrvslam"},"content":"    public Task(String input) {"},{"lineNumber":18,"author":{"gitId":"jrvslam"},"content":"        this.input \u003d input;"},{"lineNumber":19,"author":{"gitId":"jrvslam"},"content":"        this.state \u003d TaskState.NOTDONE;"},{"lineNumber":20,"author":{"gitId":"jrvslam"},"content":"        this.reminder \u003d null;"},{"lineNumber":21,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":23,"author":{"gitId":"jrvslam"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"jrvslam"},"content":"     * This modifies the task to be in the Task_State.DONE."},{"lineNumber":25,"author":{"gitId":"jrvslam"},"content":"     * @return This returns the modified done Task."},{"lineNumber":26,"author":{"gitId":"jrvslam"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"jrvslam"},"content":"    public Task doTask() {"},{"lineNumber":28,"author":{"gitId":"jrvslam"},"content":"        this.state \u003d TaskState.DONE;"},{"lineNumber":29,"author":{"gitId":"jrvslam"},"content":"        return this;"},{"lineNumber":30,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":32,"author":{"gitId":"jrvslam"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"jrvslam"},"content":"     * This gets the input stored in the Task."},{"lineNumber":34,"author":{"gitId":"jrvslam"},"content":"     * @return This returns the input String stored."},{"lineNumber":35,"author":{"gitId":"jrvslam"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"jrvslam"},"content":"    public String getInput() {"},{"lineNumber":37,"author":{"gitId":"jrvslam"},"content":"        return input;"},{"lineNumber":38,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":40,"author":{"gitId":"jrvslam"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"jrvslam"},"content":"     * This returns the current state of the Task."},{"lineNumber":42,"author":{"gitId":"jrvslam"},"content":"     * @return This returns Task_State of the task."},{"lineNumber":43,"author":{"gitId":"jrvslam"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"jrvslam"},"content":"    public TaskState getState() {"},{"lineNumber":45,"author":{"gitId":"jrvslam"},"content":"        return state;"},{"lineNumber":46,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":48,"author":{"gitId":"jrvslam"},"content":"    public void addReminder(LocalDateTime localDateTime) {"},{"lineNumber":49,"author":{"gitId":"jrvslam"},"content":"        this.reminder \u003d new Reminder(localDateTime);"},{"lineNumber":50,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":52,"author":{"gitId":"jrvslam"},"content":"    public LocalDateTime getReminderDate() {"},{"lineNumber":53,"author":{"gitId":"jrvslam"},"content":"        if (this.reminder \u003d\u003d null) {"},{"lineNumber":54,"author":{"gitId":"jrvslam"},"content":"            return null;"},{"lineNumber":55,"author":{"gitId":"jrvslam"},"content":"        } else {"},{"lineNumber":56,"author":{"gitId":"jrvslam"},"content":"            return this.reminder.getDate();"},{"lineNumber":57,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":60,"author":{"gitId":"jrvslam"},"content":"    public Reminder getReminder() {"},{"lineNumber":61,"author":{"gitId":"jrvslam"},"content":"        return reminder;"},{"lineNumber":62,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":64,"author":{"gitId":"jrvslam"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"jrvslam"},"content":"     * This passes the tasks to be saved to Storage in a readable manner for Storage."},{"lineNumber":66,"author":{"gitId":"jrvslam"},"content":"     * @return This returns the modified save message that\u0027s stored on a file for saving."},{"lineNumber":67,"author":{"gitId":"jrvslam"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"jrvslam"},"content":"    public String saveTask() {"},{"lineNumber":69,"author":{"gitId":"jrvslam"},"content":"        String stateB;"},{"lineNumber":70,"author":{"gitId":"jrvslam"},"content":"        String reminderDate;"},{"lineNumber":71,"author":{"gitId":"jrvslam"},"content":"        if (state \u003d\u003d TaskState.DONE) {"},{"lineNumber":72,"author":{"gitId":"jrvslam"},"content":"            stateB \u003d \"1\";"},{"lineNumber":73,"author":{"gitId":"jrvslam"},"content":"        } else {"},{"lineNumber":74,"author":{"gitId":"jrvslam"},"content":"            stateB \u003d \"0\";"},{"lineNumber":75,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"jrvslam"},"content":"        if (reminder \u003d\u003d null) {"},{"lineNumber":77,"author":{"gitId":"jrvslam"},"content":"            reminderDate \u003d \"0\";"},{"lineNumber":78,"author":{"gitId":"jrvslam"},"content":"        } else {"},{"lineNumber":79,"author":{"gitId":"jrvslam"},"content":"            reminderDate \u003d reminder.getReminderDateOnly();"},{"lineNumber":80,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"jrvslam"},"content":"        return \" | \" + stateB + \" | \" + reminderDate + \" | \" + input;"},{"lineNumber":82,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":84,"author":{"gitId":"jrvslam"},"content":"    public String printWithReminder() {"},{"lineNumber":85,"author":{"gitId":"jrvslam"},"content":"        return this.reminder.toString() + \"   \" + toString();"},{"lineNumber":86,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":88,"author":{"gitId":"jrvslam"},"content":"    @Override"},{"lineNumber":89,"author":{"gitId":"jrvslam"},"content":"    public String toString() {"},{"lineNumber":90,"author":{"gitId":"jrvslam"},"content":"        return \"[\" + state + \"] \" + input;"},{"lineNumber":91,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"jrvslam"},"content":"}"}],"authorContributionMap":{"jrvslam":92}},{"path":"src/main/java/duke/task/TaskState.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"public enum TaskState {"},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":"    NOTDONE {"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"        @Override"},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":"        public String toString() {"},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":"            return \"\\u2718\";"},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":"    }, DONE {"},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"        @Override"},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":"        public String toString() {"},{"lineNumber":12,"author":{"gitId":"jrvslam"},"content":"            return \"\\u2713\";"},{"lineNumber":13,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":14,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"jrvslam"},"content":"}"}],"authorContributionMap":{"jrvslam":15}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"public class ToDo extends Task {"},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":"    public ToDo(String input) {"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"        super(input);"},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":"    public ToDo(String input, int done, String reminderDate) {"},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":"        super(input);"},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"        if (done \u003d\u003d 1) {"},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":"            this.doTask();"},{"lineNumber":12,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":13,"author":{"gitId":"jrvslam"},"content":"        if (!reminderDate.equals(\"0\")) {"},{"lineNumber":14,"author":{"gitId":"jrvslam"},"content":"            this.addReminder(new ParseDates().parseString(reminderDate));"},{"lineNumber":15,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":18,"author":{"gitId":"jrvslam"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"jrvslam"},"content":"    public String saveTask() {"},{"lineNumber":20,"author":{"gitId":"jrvslam"},"content":"        return \"T\" + super.saveTask();"},{"lineNumber":21,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":23,"author":{"gitId":"jrvslam"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"jrvslam"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"jrvslam"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":26,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"jrvslam"},"content":"}"}],"authorContributionMap":{"jrvslam":27}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":"import java.util.Comparator;"},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":" * Ui Class that handles passing output"},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":" */"},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":"public class Ui {"},{"lineNumber":12,"author":{"gitId":"jrvslam"},"content":"    private final static String CHATBOT_NAME \u003d \"Ranga\";"},{"lineNumber":13,"author":{"gitId":"jrvslam"},"content":"    private final static String CHATBOT_RAWR \u003d \"Rawr!\";"},{"lineNumber":14,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":15,"author":{"gitId":"jrvslam"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"jrvslam"},"content":"     * Constructor for Ui. Creates a Scanner with System.in"},{"lineNumber":17,"author":{"gitId":"jrvslam"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"jrvslam"},"content":"    public Ui() {"},{"lineNumber":19,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":21,"author":{"gitId":"jrvslam"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"jrvslam"},"content":"     * Shows the introduction message to the user."},{"lineNumber":23,"author":{"gitId":"jrvslam"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"jrvslam"},"content":"    public String getIntroResponse() {"},{"lineNumber":25,"author":{"gitId":"jrvslam"},"content":"        return \"Hello there! I\u0027m \" + CHATBOT_NAME +"},{"lineNumber":26,"author":{"gitId":"jrvslam"},"content":"                \", always here for you!\\n\\nHow can I help you today?\\n\" + CHATBOT_RAWR;"},{"lineNumber":27,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":29,"author":{"gitId":"jrvslam"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"jrvslam"},"content":"     * Shows the goodbye message to the user."},{"lineNumber":31,"author":{"gitId":"jrvslam"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"jrvslam"},"content":"    public String getGoodbyeResponse() {"},{"lineNumber":33,"author":{"gitId":"jrvslam"},"content":"        return \"Bye! Hope to see you again! \" + CHATBOT_RAWR + \"! :)\";"},{"lineNumber":34,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":36,"author":{"gitId":"jrvslam"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"jrvslam"},"content":"     * Shows the error message to the user."},{"lineNumber":38,"author":{"gitId":"jrvslam"},"content":"     * @param error This is the String error message."},{"lineNumber":39,"author":{"gitId":"jrvslam"},"content":"     * @return This is Rawrz\u0027s response"},{"lineNumber":40,"author":{"gitId":"jrvslam"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"jrvslam"},"content":"    public String getErrorResponse(String error) {"},{"lineNumber":42,"author":{"gitId":"jrvslam"},"content":"        return error;"},{"lineNumber":43,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":45,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":46,"author":{"gitId":"jrvslam"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"jrvslam"},"content":"     * Shows the remove message to the user."},{"lineNumber":48,"author":{"gitId":"jrvslam"},"content":"     * @param task This is the task that is removed"},{"lineNumber":49,"author":{"gitId":"jrvslam"},"content":"     * @param noTasks This is the number of tasks left after removal."},{"lineNumber":50,"author":{"gitId":"jrvslam"},"content":"     * @return This is Rawrz\u0027s response"},{"lineNumber":51,"author":{"gitId":"jrvslam"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"jrvslam"},"content":"    public String getRemoveResponse(Task task, int noTasks) {"},{"lineNumber":53,"author":{"gitId":"jrvslam"},"content":"        return \"Okay! I\u0027ve removed this task:\\n\" + task +\"\\nNow you have \" + noTasks + \" tasks in the list\";"},{"lineNumber":54,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":56,"author":{"gitId":"jrvslam"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"jrvslam"},"content":"     * Shows the list of tasks stored in the chatbot to the user"},{"lineNumber":58,"author":{"gitId":"jrvslam"},"content":"     * @param arrL This is the Storage that contains the list of Tasks stored."},{"lineNumber":59,"author":{"gitId":"jrvslam"},"content":"     * @return This is Rawrz\u0027s response"},{"lineNumber":60,"author":{"gitId":"jrvslam"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"jrvslam"},"content":"    public String getListResponse(ArrayList\u003cTask\u003e arrL) {"},{"lineNumber":62,"author":{"gitId":"jrvslam"},"content":"        String output;"},{"lineNumber":63,"author":{"gitId":"jrvslam"},"content":"        if (arrL.isEmpty()) {"},{"lineNumber":64,"author":{"gitId":"jrvslam"},"content":"            output \u003d \"No Tasks found!\";"},{"lineNumber":65,"author":{"gitId":"jrvslam"},"content":"        } else {"},{"lineNumber":66,"author":{"gitId":"jrvslam"},"content":"            output \u003d \"Here are the results!\\n\";"},{"lineNumber":67,"author":{"gitId":"jrvslam"},"content":"            for (int i \u003d 0; i \u003c arrL.size(); i++) {"},{"lineNumber":68,"author":{"gitId":"jrvslam"},"content":"                output \u003d output.concat(\"   \" + (i + 1) + \". \" + arrL.get(i) + \"\\n\");"},{"lineNumber":69,"author":{"gitId":"jrvslam"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"jrvslam"},"content":"        return output;"},{"lineNumber":72,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":74,"author":{"gitId":"jrvslam"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"jrvslam"},"content":"     * Shows the done message to the user."},{"lineNumber":76,"author":{"gitId":"jrvslam"},"content":"     * @param task This is the task that has been completed."},{"lineNumber":77,"author":{"gitId":"jrvslam"},"content":"     * @return This is Rawrz\u0027s response"},{"lineNumber":78,"author":{"gitId":"jrvslam"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"jrvslam"},"content":"    public String getDoneResponse(Task task) {"},{"lineNumber":80,"author":{"gitId":"jrvslam"},"content":"        return \"   Nice! I\u0027ve marked this task as done:\\n   \" + task;"},{"lineNumber":81,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":83,"author":{"gitId":"jrvslam"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"jrvslam"},"content":"     * Shows the add task message to the user."},{"lineNumber":85,"author":{"gitId":"jrvslam"},"content":"     * @param task This is the task that is added."},{"lineNumber":86,"author":{"gitId":"jrvslam"},"content":"     * @param noTasks This is the number of tasks that are now in the system."},{"lineNumber":87,"author":{"gitId":"jrvslam"},"content":"     * @return This is Rawrz\u0027s response"},{"lineNumber":88,"author":{"gitId":"jrvslam"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"jrvslam"},"content":"    public String getAddResponse(Task task, int noTasks) {"},{"lineNumber":90,"author":{"gitId":"jrvslam"},"content":"        return \"Got it! I\u0027ve added this task:\\n   \" + task + \"\\nNow you have \" + noTasks + \" tasks in the list\";"},{"lineNumber":91,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":93,"author":{"gitId":"jrvslam"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"jrvslam"},"content":"     * Shows the list of reminders in the chatbot to the user"},{"lineNumber":95,"author":{"gitId":"jrvslam"},"content":"     * @param reminders This is the Storage that contains the list of Reminders stored."},{"lineNumber":96,"author":{"gitId":"jrvslam"},"content":"     * @return This is Rawrz\u0027s response"},{"lineNumber":97,"author":{"gitId":"jrvslam"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"jrvslam"},"content":"    public String getReminders(ArrayList\u003cTask\u003e reminders) {"},{"lineNumber":99,"author":{"gitId":"jrvslam"},"content":"        String output;"},{"lineNumber":100,"author":{"gitId":"jrvslam"},"content":"        if (reminders.isEmpty()) {"},{"lineNumber":101,"author":{"gitId":"jrvslam"},"content":"            output \u003d \"No reminders so far! :)\";"},{"lineNumber":102,"author":{"gitId":"jrvslam"},"content":"        } else {"},{"lineNumber":103,"author":{"gitId":"jrvslam"},"content":"            output \u003d \"You have these reminders!\\n\";"},{"lineNumber":104,"author":{"gitId":"jrvslam"},"content":"            for (int i \u003d 0; i \u003c reminders.size(); i++) {"},{"lineNumber":105,"author":{"gitId":"jrvslam"},"content":"                output \u003d output.concat((i + 1) + \". \" + reminders.get(i).printWithReminder() + \"\\n\");"},{"lineNumber":106,"author":{"gitId":"jrvslam"},"content":"            }"},{"lineNumber":107,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"jrvslam"},"content":"        return output;"},{"lineNumber":109,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":111,"author":{"gitId":"jrvslam"},"content":"    public String getAddReminderResponse(Task task) {"},{"lineNumber":112,"author":{"gitId":"jrvslam"},"content":"        return \"Got it! I\u0027ve added this reminder for:\\n   \" + task + \"\\nI\u0027ll remind you on \" +"},{"lineNumber":113,"author":{"gitId":"jrvslam"},"content":"                task.getReminder().getReminderDateOnly() + \"! :)\";"},{"lineNumber":114,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":116,"author":{"gitId":"jrvslam"},"content":"    public String getHelp() {"},{"lineNumber":117,"author":{"gitId":"jrvslam"},"content":"        return \"Sure! I\u0027m \" + CHATBOT_NAME + \" and I can do different things!\\n\" +"},{"lineNumber":118,"author":{"gitId":"jrvslam"},"content":"                \"You can add tasks such as:\\n\" +"},{"lineNumber":119,"author":{"gitId":"jrvslam"},"content":"                \"   todo \u003cdesc\u003e\\n\" +"},{"lineNumber":120,"author":{"gitId":"jrvslam"},"content":"                \"   deadline \u003cdesc\u003e /by \u003cdate\u003e\\n\" +"},{"lineNumber":121,"author":{"gitId":"jrvslam"},"content":"                \"   event \u003cdesc\u003e /at \u003cdate\u003e\\n\" +"},{"lineNumber":122,"author":{"gitId":"jrvslam"},"content":"                \"You can modify reminders:\\n\" +"},{"lineNumber":123,"author":{"gitId":"jrvslam"},"content":"                \"   remind \u003cid\u003e /on \u003cdate\u003e\\n\" +"},{"lineNumber":124,"author":{"gitId":"jrvslam"},"content":"                \"   remove \u003cid\u003e\\n\" +"},{"lineNumber":125,"author":{"gitId":"jrvslam"},"content":"                \"   done \u003cid\u003e\\n\" +"},{"lineNumber":126,"author":{"gitId":"jrvslam"},"content":"                \"I can show you tasks and reminders:\\n\" +"},{"lineNumber":127,"author":{"gitId":"jrvslam"},"content":"                \"   list\\n\" +"},{"lineNumber":128,"author":{"gitId":"jrvslam"},"content":"                \"   reminders\\n\" +"},{"lineNumber":129,"author":{"gitId":"jrvslam"},"content":"                \"   find \u003csearch\u003e\\n\" +"},{"lineNumber":130,"author":{"gitId":"jrvslam"},"content":"                \"Lastly:\\n\" +"},{"lineNumber":131,"author":{"gitId":"jrvslam"},"content":"                \"   help\\n\" +"},{"lineNumber":132,"author":{"gitId":"jrvslam"},"content":"                \"   bye\\n\" +"},{"lineNumber":133,"author":{"gitId":"jrvslam"},"content":"                CHATBOT_RAWR;"},{"lineNumber":134,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"jrvslam"},"content":"}"}],"authorContributionMap":{"jrvslam":135}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":"\u003cfx:root fx:id\u003d\"hbox\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" spacing\u003d\"15.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e"},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"    \u003cpadding\u003e"},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"jrvslam"},"content":"    \u003c/padding\u003e"},{"lineNumber":13,"author":{"gitId":"jrvslam"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" style\u003d\"-fx-text-fill: black\" \u003e"},{"lineNumber":14,"author":{"gitId":"jrvslam"},"content":"      \u003cfont\u003e"},{"lineNumber":15,"author":{"gitId":"jrvslam"},"content":"         \u003cFont name\u003d\"Courier New\" size\u003d\"12.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"jrvslam"},"content":"      \u003c/font\u003e\u003c/Label\u003e"},{"lineNumber":17,"author":{"gitId":"jrvslam"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"},{"lineNumber":18,"author":{"gitId":"jrvslam"},"content":"      \u003cHBox.margin\u003e"},{"lineNumber":19,"author":{"gitId":"jrvslam"},"content":"         \u003cInsets bottom\u003d\"5.0\" top\u003d\"5.0\"/\u003e"},{"lineNumber":20,"author":{"gitId":"jrvslam"},"content":"      \u003c/HBox.margin\u003e\u003c/ImageView\u003e"},{"lineNumber":21,"author":{"gitId":"jrvslam"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"jrvslam":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":"\u003c?import javafx.scene.image.Image?\u003e"},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":12,"author":{"gitId":"jrvslam"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":13,"author":{"gitId":"jrvslam"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"jrvslam"},"content":"      \u003copaqueInsets\u003e"},{"lineNumber":15,"author":{"gitId":"jrvslam"},"content":"         \u003cInsets /\u003e"},{"lineNumber":16,"author":{"gitId":"jrvslam"},"content":"      \u003c/opaqueInsets\u003e"},{"lineNumber":17,"author":{"gitId":"jrvslam"},"content":"      \u003cpadding\u003e"},{"lineNumber":18,"author":{"gitId":"jrvslam"},"content":"         \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":19,"author":{"gitId":"jrvslam"},"content":"      \u003c/padding\u003e\u003c/TextField\u003e"},{"lineNumber":20,"author":{"gitId":"jrvslam"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":21,"author":{"gitId":"jrvslam"},"content":"    \u003cImageView fitHeight\u003d\"552.0\" fitWidth\u003d\"388.0\"\u003e"},{"lineNumber":22,"author":{"gitId":"jrvslam"},"content":"        \u003cImage url\u003d\"@../images/bg(2).jpg\"/\u003e"},{"lineNumber":23,"author":{"gitId":"jrvslam"},"content":"    \u003c/ImageView\u003e"},{"lineNumber":24,"author":{"gitId":"jrvslam"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" style\u003d\"-fx-background: transparent; -fx-background-color: transparent;\"\u003e"},{"lineNumber":25,"author":{"gitId":"jrvslam"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":26,"author":{"gitId":"jrvslam"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":27,"author":{"gitId":"jrvslam"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"jrvslam":27}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"import duke.command.CommandList;"},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":"import duke.command.CommandParser;"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"import duke.task.Deadline;"},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":"import duke.task.TaskState;"},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":12,"author":{"gitId":"jrvslam"},"content":"public class DukeTest {"},{"lineNumber":13,"author":{"gitId":"jrvslam"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"jrvslam"},"content":"    public void dummyTest(){"},{"lineNumber":15,"author":{"gitId":"jrvslam"},"content":"        assertEquals(2, 2);"},{"lineNumber":16,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":18,"author":{"gitId":"jrvslam"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"jrvslam"},"content":"    public void taskTest() {"},{"lineNumber":20,"author":{"gitId":"jrvslam"},"content":"        Deadline deadline \u003d new Deadline(\"Bake Cake\", \"Mar 20 2021\");"},{"lineNumber":21,"author":{"gitId":"jrvslam"},"content":"        deadline.doTask();"},{"lineNumber":22,"author":{"gitId":"jrvslam"},"content":"        assertEquals(TaskState.DONE, deadline.getState());"},{"lineNumber":23,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jrvslam"},"content":""},{"lineNumber":25,"author":{"gitId":"jrvslam"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"jrvslam"},"content":"    public void parseCommandTest_givenEventWithDate_commandIsEqual() {"},{"lineNumber":27,"author":{"gitId":"jrvslam"},"content":"        CommandParser commandParserA \u003d new CommandParser(CommandList.EVENT, \"Eat Cake /at Mar 20 2021\");"},{"lineNumber":28,"author":{"gitId":"jrvslam"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"jrvslam"},"content":"            CommandParser commandParserB \u003d CommandParser.parseLine(\"eVenT Eat Cake /at Mar 20 2021\", 0);"},{"lineNumber":30,"author":{"gitId":"jrvslam"},"content":"            assertEquals(commandParserA.getData(), commandParserB.getData());"},{"lineNumber":31,"author":{"gitId":"jrvslam"},"content":"            assertEquals(commandParserA.getCommand(), commandParserB.getCommand());"},{"lineNumber":32,"author":{"gitId":"jrvslam"},"content":"        } catch (DukeException e) {"},{"lineNumber":33,"author":{"gitId":"jrvslam"},"content":"            fail();"},{"lineNumber":34,"author":{"gitId":"jrvslam"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"jrvslam"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"jrvslam"},"content":"}"}],"authorContributionMap":{"jrvslam":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jrvslam"},"content":"todo buy eggs"},{"lineNumber":2,"author":{"gitId":"jrvslam"},"content":"todo buy milk"},{"lineNumber":3,"author":{"gitId":"jrvslam"},"content":"deadline bake cake /by 23rd Jan"},{"lineNumber":4,"author":{"gitId":"jrvslam"},"content":"deadline deliver cake /by 24th Jan 2359"},{"lineNumber":5,"author":{"gitId":"jrvslam"},"content":"event birthday party! /at 24th Jan"},{"lineNumber":6,"author":{"gitId":"jrvslam"},"content":"event celebrate /at always!"},{"lineNumber":7,"author":{"gitId":"jrvslam"},"content":"list"},{"lineNumber":8,"author":{"gitId":"jrvslam"},"content":"done 1"},{"lineNumber":9,"author":{"gitId":"jrvslam"},"content":"done 2"},{"lineNumber":10,"author":{"gitId":"jrvslam"},"content":"list"},{"lineNumber":11,"author":{"gitId":"jrvslam"},"content":"bye"}],"authorContributionMap":{"jrvslam":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"jrvslam"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"jrvslam":1,"-":20}}]
