[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengruoxin"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":3,"author":{"gitId":"zhengruoxin"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"zhengruoxin"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":6,"author":{"gitId":"zhengruoxin"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"zhengruoxin"},"content":" * Encapsulates information and state of a Deadline."},{"lineNumber":8,"author":{"gitId":"zhengruoxin"},"content":" * For tasks that must be ccompletely by a certain time."},{"lineNumber":9,"author":{"gitId":"zhengruoxin"},"content":" */"},{"lineNumber":10,"author":{"gitId":"zhengruoxin"},"content":"public class Deadline extends Task {"},{"lineNumber":11,"author":{"gitId":"zhengruoxin"},"content":"    /** Deadline of task. */"},{"lineNumber":12,"author":{"gitId":"zhengruoxin"},"content":"    protected LocalDate by;"},{"lineNumber":13,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":14,"author":{"gitId":"zhengruoxin"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"zhengruoxin"},"content":"     * Initialises a new Deadline with text description."},{"lineNumber":16,"author":{"gitId":"zhengruoxin"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"zhengruoxin"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":18,"author":{"gitId":"zhengruoxin"},"content":"        super(description);"},{"lineNumber":19,"author":{"gitId":"zhengruoxin"},"content":"        this.by \u003d LocalDate.parse(by);"},{"lineNumber":20,"author":{"gitId":"zhengruoxin"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":22,"author":{"gitId":"zhengruoxin"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"zhengruoxin"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"zhengruoxin"},"content":"        return String.format(\"[D][%s] %s (by: %s)\", this.getStatusIcon(), "},{"lineNumber":25,"author":{"gitId":"zhengruoxin"},"content":"            super.toString(), this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"},{"lineNumber":26,"author":{"gitId":"zhengruoxin"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"zhengruoxin"},"content":"}"}],"authorContributionMap":{"zhengruoxin":27}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengruoxin"},"content":"import duke.Storage;"},{"lineNumber":2,"author":{"gitId":"zhengruoxin"},"content":"import duke.Ui;"},{"lineNumber":3,"author":{"gitId":"zhengruoxin"},"content":"import duke.Parser;"},{"lineNumber":4,"author":{"gitId":"zhengruoxin"},"content":"    "},{"lineNumber":5,"author":{"gitId":"zhengruoxin"},"content":"/** Read in user inputs and perform actions accordingly. */"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":7,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":8,"author":{"gitId":"zhengruoxin"},"content":"    private Storage storage;"},{"lineNumber":9,"author":{"gitId":"zhengruoxin"},"content":"    private Ui ui;"},{"lineNumber":10,"author":{"gitId":"zhengruoxin"},"content":"    private Parser parser;"},{"lineNumber":11,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":12,"author":{"gitId":"zhengruoxin"},"content":"    public Duke() {"},{"lineNumber":13,"author":{"gitId":"zhengruoxin"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":14,"author":{"gitId":"zhengruoxin"},"content":"        this.storage \u003d new Storage();"},{"lineNumber":15,"author":{"gitId":"zhengruoxin"},"content":"        this.parser \u003d new Parser();"},{"lineNumber":16,"author":{"gitId":"zhengruoxin"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":18,"author":{"gitId":"zhengruoxin"},"content":"    public void run() {"},{"lineNumber":19,"author":{"gitId":"zhengruoxin"},"content":"        this.ui.greet();"},{"lineNumber":20,"author":{"gitId":"zhengruoxin"},"content":"        this.parser.chat();"},{"lineNumber":21,"author":{"gitId":"zhengruoxin"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":23,"author":{"gitId":"zhengruoxin"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"zhengruoxin"},"content":"     * Reads input containing keyword and content of task from user."},{"lineNumber":25,"author":{"gitId":"zhengruoxin"},"content":"     * Add, delete, view, mark as done or exit accordingly."},{"lineNumber":26,"author":{"gitId":"zhengruoxin"},"content":"     * @param args Texts entered by user."},{"lineNumber":27,"author":{"gitId":"zhengruoxin"},"content":"     */ "},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":29,"author":{"gitId":"zhengruoxin"},"content":"        new Duke().run();"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zhengruoxin":27,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengruoxin"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":3,"author":{"gitId":"zhengruoxin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"zhengruoxin"},"content":" * Encapsulates information of potential exceptions in Duke."},{"lineNumber":5,"author":{"gitId":"zhengruoxin"},"content":" */"},{"lineNumber":6,"author":{"gitId":"zhengruoxin"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":8,"author":{"gitId":"zhengruoxin"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"zhengruoxin"},"content":"     * Initialises a new exception specific to Duke chatbot."},{"lineNumber":10,"author":{"gitId":"zhengruoxin"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"zhengruoxin"},"content":"    public DukeException(String message) {"},{"lineNumber":12,"author":{"gitId":"zhengruoxin"},"content":"        super(message);"},{"lineNumber":13,"author":{"gitId":"zhengruoxin"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"zhengruoxin"},"content":"}"}],"authorContributionMap":{"zhengruoxin":14}},{"path":"src/main/java/EmptyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengruoxin"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":3,"author":{"gitId":"zhengruoxin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"zhengruoxin"},"content":" * Encapsulates information and state of an EmptyException."},{"lineNumber":5,"author":{"gitId":"zhengruoxin"},"content":" * Arises when user enters task type without description."},{"lineNumber":6,"author":{"gitId":"zhengruoxin"},"content":" */"},{"lineNumber":7,"author":{"gitId":"zhengruoxin"},"content":"public class EmptyException extends DukeException {"},{"lineNumber":8,"author":{"gitId":"zhengruoxin"},"content":"    /** Fixed message to remind user to include task description. */"},{"lineNumber":9,"author":{"gitId":"zhengruoxin"},"content":"    static final String message \u003d \":( OOPS! the description of a task cannot be empty.\";"},{"lineNumber":10,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":11,"author":{"gitId":"zhengruoxin"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"zhengruoxin"},"content":"     * Initialises new empty description exception."},{"lineNumber":13,"author":{"gitId":"zhengruoxin"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"zhengruoxin"},"content":"    public EmptyException() {"},{"lineNumber":15,"author":{"gitId":"zhengruoxin"},"content":"        super(message);"},{"lineNumber":16,"author":{"gitId":"zhengruoxin"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"zhengruoxin"},"content":"}"}],"authorContributionMap":{"zhengruoxin":17}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengruoxin"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":3,"author":{"gitId":"zhengruoxin"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"zhengruoxin"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":6,"author":{"gitId":"zhengruoxin"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"zhengruoxin"},"content":" * Encapsulates information and state of a Event."},{"lineNumber":8,"author":{"gitId":"zhengruoxin"},"content":" * For tasks that lasts for a certain period at certain location."},{"lineNumber":9,"author":{"gitId":"zhengruoxin"},"content":" */"},{"lineNumber":10,"author":{"gitId":"zhengruoxin"},"content":"public class Event extends Task {"},{"lineNumber":11,"author":{"gitId":"zhengruoxin"},"content":"    /** Location of event. */"},{"lineNumber":12,"author":{"gitId":"zhengruoxin"},"content":"    protected LocalDate at;"},{"lineNumber":13,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":14,"author":{"gitId":"zhengruoxin"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"zhengruoxin"},"content":"     * Initialises a new Event with text description."},{"lineNumber":16,"author":{"gitId":"zhengruoxin"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"zhengruoxin"},"content":"    public Event(String description, String at) {"},{"lineNumber":18,"author":{"gitId":"zhengruoxin"},"content":"        super(description);"},{"lineNumber":19,"author":{"gitId":"zhengruoxin"},"content":"        this.at \u003d LocalDate.parse(at);"},{"lineNumber":20,"author":{"gitId":"zhengruoxin"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":22,"author":{"gitId":"zhengruoxin"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"zhengruoxin"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"zhengruoxin"},"content":"        return String.format(\"[E][%s] %s (at: %s)\", this.getStatusIcon(), "},{"lineNumber":25,"author":{"gitId":"zhengruoxin"},"content":"            super.toString(), this.at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"},{"lineNumber":26,"author":{"gitId":"zhengruoxin"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"zhengruoxin"},"content":"}"}],"authorContributionMap":{"zhengruoxin":27}},{"path":"src/main/java/KeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengruoxin"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":3,"author":{"gitId":"zhengruoxin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"zhengruoxin"},"content":" * Encapsulates information and state of an EmptyException."},{"lineNumber":5,"author":{"gitId":"zhengruoxin"},"content":" * Arises when user enters words that do not correspond to any command."},{"lineNumber":6,"author":{"gitId":"zhengruoxin"},"content":" */"},{"lineNumber":7,"author":{"gitId":"zhengruoxin"},"content":"public class KeywordException extends DukeException {"},{"lineNumber":8,"author":{"gitId":"zhengruoxin"},"content":"    /** Fixed message to remind user to include keyword. */"},{"lineNumber":9,"author":{"gitId":"zhengruoxin"},"content":"    static final String message \u003d \":( OOPS! i\u0027m sorry but i don\u0027t know what that means.\";"},{"lineNumber":10,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":11,"author":{"gitId":"zhengruoxin"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"zhengruoxin"},"content":"     * Initialises new missing keyword exception."},{"lineNumber":13,"author":{"gitId":"zhengruoxin"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"zhengruoxin"},"content":"    public KeywordException() {"},{"lineNumber":15,"author":{"gitId":"zhengruoxin"},"content":"        super(message);"},{"lineNumber":16,"author":{"gitId":"zhengruoxin"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"zhengruoxin"},"content":"}"}],"authorContributionMap":{"zhengruoxin":17}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengruoxin"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":3,"author":{"gitId":"zhengruoxin"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"zhengruoxin"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"zhengruoxin"},"content":"import java.lang.ArrayIndexOutOfBoundsException;"},{"lineNumber":6,"author":{"gitId":"zhengruoxin"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"zhengruoxin"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"zhengruoxin"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":10,"author":{"gitId":"zhengruoxin"},"content":"/** Stores information input from user and reply accordingly. */"},{"lineNumber":11,"author":{"gitId":"zhengruoxin"},"content":"public class Parser {"},{"lineNumber":12,"author":{"gitId":"zhengruoxin"},"content":"    private TaskManager tm \u003d new TaskManager();"},{"lineNumber":13,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":14,"author":{"gitId":"zhengruoxin"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"zhengruoxin"},"content":"     * Process the user input and respond accordingly."},{"lineNumber":16,"author":{"gitId":"zhengruoxin"},"content":"     * @param input Text representation of task type and task info."},{"lineNumber":17,"author":{"gitId":"zhengruoxin"},"content":"     * @throws DukeException if input has no keyword or if task has no description."},{"lineNumber":18,"author":{"gitId":"zhengruoxin"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"zhengruoxin"},"content":"    public void process(String input) throws DukeException {"},{"lineNumber":20,"author":{"gitId":"zhengruoxin"},"content":"        if (input.contains(\"todo\") || input.contains(\"deadline\") "},{"lineNumber":21,"author":{"gitId":"zhengruoxin"},"content":"            || input.contains(\"event\") || input.contains(\"find\")) {"},{"lineNumber":22,"author":{"gitId":"zhengruoxin"},"content":"            if (input.split(\" \").length \u003d\u003d 1) {"},{"lineNumber":23,"author":{"gitId":"zhengruoxin"},"content":"                throw new EmptyException();"},{"lineNumber":24,"author":{"gitId":"zhengruoxin"},"content":"            }"},{"lineNumber":25,"author":{"gitId":"zhengruoxin"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"zhengruoxin"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":27,"author":{"gitId":"zhengruoxin"},"content":"            System.out.println(\"Byebye~ Hope to see you again soon!\");"},{"lineNumber":28,"author":{"gitId":"zhengruoxin"},"content":"        } else if (input.equals(\"list\")) {"},{"lineNumber":29,"author":{"gitId":"zhengruoxin"},"content":"            this.tm.displayTasks();"},{"lineNumber":30,"author":{"gitId":"zhengruoxin"},"content":"        } else if (input.contains(\"todo\") || input.contains(\"deadline\") "},{"lineNumber":31,"author":{"gitId":"zhengruoxin"},"content":"                || input.contains(\"event\")) {"},{"lineNumber":32,"author":{"gitId":"zhengruoxin"},"content":"            Task t;"},{"lineNumber":33,"author":{"gitId":"zhengruoxin"},"content":"            if (input.contains(\"todo\")) {"},{"lineNumber":34,"author":{"gitId":"zhengruoxin"},"content":"                t \u003d new Todo(input.split(\"todo \")[1]);"},{"lineNumber":35,"author":{"gitId":"zhengruoxin"},"content":"            } else if (input.contains(\"deadline\")) {"},{"lineNumber":36,"author":{"gitId":"zhengruoxin"},"content":"                String trimmed \u003d input.replaceAll(\"deadline \", \"\");"},{"lineNumber":37,"author":{"gitId":"zhengruoxin"},"content":"                t \u003d new Deadline(trimmed.split(\" by \")[0], trimmed.split(\" by \")[1]);"},{"lineNumber":38,"author":{"gitId":"zhengruoxin"},"content":"            } else /*(if (input.contains(\"event\"))*/ {"},{"lineNumber":39,"author":{"gitId":"zhengruoxin"},"content":"                String trimmed \u003d input.replaceAll(\"event \", \"\");"},{"lineNumber":40,"author":{"gitId":"zhengruoxin"},"content":"                t \u003d new Event(trimmed.split(\" at \")[0], trimmed.split(\" at \")[1]);"},{"lineNumber":41,"author":{"gitId":"zhengruoxin"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"zhengruoxin"},"content":"            this.tm.addTask(t);"},{"lineNumber":43,"author":{"gitId":"zhengruoxin"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":44,"author":{"gitId":"zhengruoxin"},"content":"            System.out.println(t.toString());"},{"lineNumber":45,"author":{"gitId":"zhengruoxin"},"content":"            System.out.println(String.format(\"Now you have %s tasks in the list.\", "},{"lineNumber":46,"author":{"gitId":"zhengruoxin"},"content":"                        this.tm.taskVolume()));"},{"lineNumber":47,"author":{"gitId":"zhengruoxin"},"content":"        } else if (input.contains(\"find\")) {"},{"lineNumber":48,"author":{"gitId":"zhengruoxin"},"content":"            String item \u003d input.replaceAll(\"find \", \"\");"},{"lineNumber":49,"author":{"gitId":"zhengruoxin"},"content":"            System.out.println(\"Here are the matching tasks in your list: \");"},{"lineNumber":50,"author":{"gitId":"zhengruoxin"},"content":"            this.tm.find(item);"},{"lineNumber":51,"author":{"gitId":"zhengruoxin"},"content":"        } else if (input.contains(\"done\")) {"},{"lineNumber":52,"author":{"gitId":"zhengruoxin"},"content":"            int num \u003d Integer.valueOf(input.split(\" \")[1]);"},{"lineNumber":53,"author":{"gitId":"zhengruoxin"},"content":"            //this.store.get(num - 1).markAsDone();"},{"lineNumber":54,"author":{"gitId":"zhengruoxin"},"content":"            this.tm.taskDone(num);"},{"lineNumber":55,"author":{"gitId":"zhengruoxin"},"content":"            System.out.println(\"Wahoo you completed one task!\");"},{"lineNumber":56,"author":{"gitId":"zhengruoxin"},"content":"        } else if (input.contains(\"delete\")) {"},{"lineNumber":57,"author":{"gitId":"zhengruoxin"},"content":"            int deleteat \u003d Integer.valueOf(input.split(\" \")[1]);"},{"lineNumber":58,"author":{"gitId":"zhengruoxin"},"content":"            this.tm.deleteTask(deleteat);"},{"lineNumber":59,"author":{"gitId":"zhengruoxin"},"content":"            System.out.println(\"Task deleted.\");"},{"lineNumber":60,"author":{"gitId":"zhengruoxin"},"content":"        } else {"},{"lineNumber":61,"author":{"gitId":"zhengruoxin"},"content":"            throw new KeywordException();"},{"lineNumber":62,"author":{"gitId":"zhengruoxin"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"zhengruoxin"},"content":"        this.tm.writeToDisk();"},{"lineNumber":64,"author":{"gitId":"zhengruoxin"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":66,"author":{"gitId":"zhengruoxin"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"zhengruoxin"},"content":"     * Starts chat, reads user input and replies."},{"lineNumber":68,"author":{"gitId":"zhengruoxin"},"content":"     * Exits when user says bye."},{"lineNumber":69,"author":{"gitId":"zhengruoxin"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"zhengruoxin"},"content":"    public void chat() {"},{"lineNumber":71,"author":{"gitId":"zhengruoxin"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":72,"author":{"gitId":"zhengruoxin"},"content":"        String input \u003d sc.nextLine();"},{"lineNumber":73,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":74,"author":{"gitId":"zhengruoxin"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":75,"author":{"gitId":"zhengruoxin"},"content":"            try {"},{"lineNumber":76,"author":{"gitId":"zhengruoxin"},"content":"                File dir \u003d new File(\"tasklist\");"},{"lineNumber":77,"author":{"gitId":"zhengruoxin"},"content":"                dir.mkdirs();"},{"lineNumber":78,"author":{"gitId":"zhengruoxin"},"content":"                File f \u003d new File(dir, \"mytasks.txt\");"},{"lineNumber":79,"author":{"gitId":"zhengruoxin"},"content":"                f.createNewFile();"},{"lineNumber":80,"author":{"gitId":"zhengruoxin"},"content":"            } catch (IOException err) {"},{"lineNumber":81,"author":{"gitId":"zhengruoxin"},"content":"                err.printStackTrace();"},{"lineNumber":82,"author":{"gitId":"zhengruoxin"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"zhengruoxin"},"content":"            try {"},{"lineNumber":84,"author":{"gitId":"zhengruoxin"},"content":"                this.process(input);"},{"lineNumber":85,"author":{"gitId":"zhengruoxin"},"content":"            } catch (DukeException err) {"},{"lineNumber":86,"author":{"gitId":"zhengruoxin"},"content":"                System.out.println(err.getMessage());"},{"lineNumber":87,"author":{"gitId":"zhengruoxin"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"zhengruoxin"},"content":"            System.out.println(\"----------------------------------------------------------\");"},{"lineNumber":89,"author":{"gitId":"zhengruoxin"},"content":"            input \u003d sc.nextLine();"},{"lineNumber":90,"author":{"gitId":"zhengruoxin"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"zhengruoxin"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":92,"author":{"gitId":"zhengruoxin"},"content":"            System.out.println(\"Byebye~ Hope to see you again soon!\");"},{"lineNumber":93,"author":{"gitId":"zhengruoxin"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"zhengruoxin"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"zhengruoxin"},"content":"}"}],"authorContributionMap":{"zhengruoxin":95}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengruoxin"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":3,"author":{"gitId":"zhengruoxin"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"zhengruoxin"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"zhengruoxin"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":7,"author":{"gitId":"zhengruoxin"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"zhengruoxin"},"content":" * Creates a file on disk to store list of tasks."},{"lineNumber":9,"author":{"gitId":"zhengruoxin"},"content":" */"},{"lineNumber":10,"author":{"gitId":"zhengruoxin"},"content":"public class Storage {"},{"lineNumber":11,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":12,"author":{"gitId":"zhengruoxin"},"content":"\tpublic Storage() {"},{"lineNumber":13,"author":{"gitId":"zhengruoxin"},"content":"\t\ttry {"},{"lineNumber":14,"author":{"gitId":"zhengruoxin"},"content":"            File dir \u003d new File(\"tasklist\");"},{"lineNumber":15,"author":{"gitId":"zhengruoxin"},"content":"            dir.mkdirs();"},{"lineNumber":16,"author":{"gitId":"zhengruoxin"},"content":"            File f \u003d new File(dir, \"mytasks.txt\");"},{"lineNumber":17,"author":{"gitId":"zhengruoxin"},"content":"            f.createNewFile();"},{"lineNumber":18,"author":{"gitId":"zhengruoxin"},"content":"        } catch (IOException err) {"},{"lineNumber":19,"author":{"gitId":"zhengruoxin"},"content":"            err.printStackTrace();"},{"lineNumber":20,"author":{"gitId":"zhengruoxin"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"zhengruoxin"},"content":"\t}"},{"lineNumber":22,"author":{"gitId":"zhengruoxin"},"content":"}"}],"authorContributionMap":{"zhengruoxin":22}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengruoxin"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":3,"author":{"gitId":"zhengruoxin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"zhengruoxin"},"content":" * Encapsulates information and state of a Task."},{"lineNumber":5,"author":{"gitId":"zhengruoxin"},"content":" * Supports modifying status of a task."},{"lineNumber":6,"author":{"gitId":"zhengruoxin"},"content":" */"},{"lineNumber":7,"author":{"gitId":"zhengruoxin"},"content":"public abstract class Task {"},{"lineNumber":8,"author":{"gitId":"zhengruoxin"},"content":"    /** Text description of the task. */"},{"lineNumber":9,"author":{"gitId":"zhengruoxin"},"content":"    protected String description;"},{"lineNumber":10,"author":{"gitId":"zhengruoxin"},"content":"    /** State of the task. */"},{"lineNumber":11,"author":{"gitId":"zhengruoxin"},"content":"    protected boolean isDone;"},{"lineNumber":12,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":13,"author":{"gitId":"zhengruoxin"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"zhengruoxin"},"content":"     * Initialise a new undone Task with text description."},{"lineNumber":15,"author":{"gitId":"zhengruoxin"},"content":"     * @param description Text represent of what task is about."},{"lineNumber":16,"author":{"gitId":"zhengruoxin"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"zhengruoxin"},"content":"    public Task(String description) {"},{"lineNumber":18,"author":{"gitId":"zhengruoxin"},"content":"        this.description \u003d description;"},{"lineNumber":19,"author":{"gitId":"zhengruoxin"},"content":"        this.isDone \u003d false;"},{"lineNumber":20,"author":{"gitId":"zhengruoxin"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":22,"author":{"gitId":"zhengruoxin"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"zhengruoxin"},"content":"     * Marks task as done."},{"lineNumber":24,"author":{"gitId":"zhengruoxin"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"zhengruoxin"},"content":"    public boolean markAsDone() {"},{"lineNumber":26,"author":{"gitId":"zhengruoxin"},"content":"        this.isDone \u003d true;"},{"lineNumber":27,"author":{"gitId":"zhengruoxin"},"content":"        return this.isDone;"},{"lineNumber":28,"author":{"gitId":"zhengruoxin"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":30,"author":{"gitId":"zhengruoxin"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"zhengruoxin"},"content":"     * Give a text representation of task\u0027s state."},{"lineNumber":32,"author":{"gitId":"zhengruoxin"},"content":"     @return an empty space for undone tasks and tick for done tasks."},{"lineNumber":33,"author":{"gitId":"zhengruoxin"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"zhengruoxin"},"content":"    public String getStatusIcon() {"},{"lineNumber":35,"author":{"gitId":"zhengruoxin"},"content":"        return (isDone ? \"\\u2713\" : \" \");"},{"lineNumber":36,"author":{"gitId":"zhengruoxin"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":38,"author":{"gitId":"zhengruoxin"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"zhengruoxin"},"content":"    public String toString() {"},{"lineNumber":40,"author":{"gitId":"zhengruoxin"},"content":"        return this.description;"},{"lineNumber":41,"author":{"gitId":"zhengruoxin"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"zhengruoxin"},"content":"}"}],"authorContributionMap":{"zhengruoxin":42}},{"path":"src/main/java/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengruoxin"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":3,"author":{"gitId":"zhengruoxin"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"zhengruoxin"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"zhengruoxin"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":7,"author":{"gitId":"zhengruoxin"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"zhengruoxin"},"content":" * Encapsulates information of all tasks entered by user."},{"lineNumber":9,"author":{"gitId":"zhengruoxin"},"content":" * Supports operations to modify and display stored tasks."},{"lineNumber":10,"author":{"gitId":"zhengruoxin"},"content":" */"},{"lineNumber":11,"author":{"gitId":"zhengruoxin"},"content":"public class TaskManager {"},{"lineNumber":12,"author":{"gitId":"zhengruoxin"},"content":"\t/** List of all tasks entered by user. */"},{"lineNumber":13,"author":{"gitId":"zhengruoxin"},"content":"    private ArrayList\u003cTask\u003e store \u003d new ArrayList\u003c\u003e();"},{"lineNumber":14,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":15,"author":{"gitId":"zhengruoxin"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"zhengruoxin"},"content":"     * Adds new task to list of all tasks."},{"lineNumber":17,"author":{"gitId":"zhengruoxin"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"zhengruoxin"},"content":"    public void addTask(Task t) {"},{"lineNumber":19,"author":{"gitId":"zhengruoxin"},"content":"        this.store.add(t);"},{"lineNumber":20,"author":{"gitId":"zhengruoxin"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":22,"author":{"gitId":"zhengruoxin"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"zhengruoxin"},"content":"     * Removes task from list of all tasks."},{"lineNumber":24,"author":{"gitId":"zhengruoxin"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"zhengruoxin"},"content":"    public void deleteTask(int n) {"},{"lineNumber":26,"author":{"gitId":"zhengruoxin"},"content":"        this.store.remove(n - 1);"},{"lineNumber":27,"author":{"gitId":"zhengruoxin"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":29,"author":{"gitId":"zhengruoxin"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"zhengruoxin"},"content":"     * Prints the list of all tasks and their statuses."},{"lineNumber":31,"author":{"gitId":"zhengruoxin"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"zhengruoxin"},"content":"    public void displayTasks() {"},{"lineNumber":33,"author":{"gitId":"zhengruoxin"},"content":"    \tint counter \u003d 1;"},{"lineNumber":34,"author":{"gitId":"zhengruoxin"},"content":"        for (Task elem: this.store) {"},{"lineNumber":35,"author":{"gitId":"zhengruoxin"},"content":"            System.out.println(counter + \". \" + elem.toString());"},{"lineNumber":36,"author":{"gitId":"zhengruoxin"},"content":"            counter +\u003d 1;"},{"lineNumber":37,"author":{"gitId":"zhengruoxin"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"zhengruoxin"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":40,"author":{"gitId":"zhengruoxin"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"zhengruoxin"},"content":"     * Accesses task at target index and mark it as done."},{"lineNumber":42,"author":{"gitId":"zhengruoxin"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"zhengruoxin"},"content":"    public void taskDone(int n) {"},{"lineNumber":44,"author":{"gitId":"zhengruoxin"},"content":"        this.store.get(n - 1).markAsDone();"},{"lineNumber":45,"author":{"gitId":"zhengruoxin"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":47,"author":{"gitId":"zhengruoxin"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"zhengruoxin"},"content":"     * Find out the total number of tasks."},{"lineNumber":49,"author":{"gitId":"zhengruoxin"},"content":"     * @return total number of tasks"},{"lineNumber":50,"author":{"gitId":"zhengruoxin"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"zhengruoxin"},"content":"    public int taskVolume() {"},{"lineNumber":52,"author":{"gitId":"zhengruoxin"},"content":"        return this.store.size();"},{"lineNumber":53,"author":{"gitId":"zhengruoxin"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":55,"author":{"gitId":"zhengruoxin"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"zhengruoxin"},"content":"     * Prints the line(s) that contain the element user is finding."},{"lineNumber":57,"author":{"gitId":"zhengruoxin"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"zhengruoxin"},"content":"    public void find(String item) {"},{"lineNumber":59,"author":{"gitId":"zhengruoxin"},"content":"        int counter \u003d 1;"},{"lineNumber":60,"author":{"gitId":"zhengruoxin"},"content":"        for (Task t: this.store) {"},{"lineNumber":61,"author":{"gitId":"zhengruoxin"},"content":"            if (t.toString().contains(item)) {"},{"lineNumber":62,"author":{"gitId":"zhengruoxin"},"content":"                System.out.println(counter + \". \" + t.toString());"},{"lineNumber":63,"author":{"gitId":"zhengruoxin"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"zhengruoxin"},"content":"            counter +\u003d 1;"},{"lineNumber":65,"author":{"gitId":"zhengruoxin"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"zhengruoxin"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":68,"author":{"gitId":"zhengruoxin"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"zhengruoxin"},"content":"     * Saves the latest list and states of tasks to a file."},{"lineNumber":70,"author":{"gitId":"zhengruoxin"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"zhengruoxin"},"content":"    public void writeToDisk() {"},{"lineNumber":72,"author":{"gitId":"zhengruoxin"},"content":"        try {"},{"lineNumber":73,"author":{"gitId":"zhengruoxin"},"content":"            FileWriter fw \u003d new FileWriter(\"tasklist/mytasks.txt\");"},{"lineNumber":74,"author":{"gitId":"zhengruoxin"},"content":"            for (Task t: this.store) {"},{"lineNumber":75,"author":{"gitId":"zhengruoxin"},"content":"                fw.write(t.toString() + \"\\n\");"},{"lineNumber":76,"author":{"gitId":"zhengruoxin"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"zhengruoxin"},"content":"            fw.close();"},{"lineNumber":78,"author":{"gitId":"zhengruoxin"},"content":"        } catch (IOException err) {"},{"lineNumber":79,"author":{"gitId":"zhengruoxin"},"content":"            err.printStackTrace();"},{"lineNumber":80,"author":{"gitId":"zhengruoxin"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"zhengruoxin"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"zhengruoxin"},"content":"}"}],"authorContributionMap":{"zhengruoxin":82}},{"path":"src/main/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengruoxin"},"content":"import duke.Task;"},{"lineNumber":2,"author":{"gitId":"zhengruoxin"},"content":"import duke.Todo;"},{"lineNumber":3,"author":{"gitId":"zhengruoxin"},"content":"import duke.Deadline;"},{"lineNumber":4,"author":{"gitId":"zhengruoxin"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"zhengruoxin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"zhengruoxin"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":7,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":8,"author":{"gitId":"zhengruoxin"},"content":"public class TaskTest {"},{"lineNumber":9,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":10,"author":{"gitId":"zhengruoxin"},"content":"\t@Test"},{"lineNumber":11,"author":{"gitId":"zhengruoxin"},"content":"\tpublic void testMarKAsDone() {"},{"lineNumber":12,"author":{"gitId":"zhengruoxin"},"content":"\t\tassertEquals(true, new Todo(\"bring water\").markAsDone());"},{"lineNumber":13,"author":{"gitId":"zhengruoxin"},"content":"\t}"},{"lineNumber":14,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":15,"author":{"gitId":"zhengruoxin"},"content":"\t@Test"},{"lineNumber":16,"author":{"gitId":"zhengruoxin"},"content":"\tpublic void testStringConversion() {"},{"lineNumber":17,"author":{"gitId":"zhengruoxin"},"content":"\t\tassertEquals(\"[D][ ] project (by: Jan 21 2020)\", "},{"lineNumber":18,"author":{"gitId":"zhengruoxin"},"content":"            new Deadline(\"project\", \"2020-01-21\").toString());"},{"lineNumber":19,"author":{"gitId":"zhengruoxin"},"content":"\t}"},{"lineNumber":20,"author":{"gitId":"zhengruoxin"},"content":"}"}],"authorContributionMap":{"zhengruoxin":20}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengruoxin"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":3,"author":{"gitId":"zhengruoxin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"zhengruoxin"},"content":" * Encapsulates information and state of a Todo."},{"lineNumber":5,"author":{"gitId":"zhengruoxin"},"content":" * For tasks with no location and timing."},{"lineNumber":6,"author":{"gitId":"zhengruoxin"},"content":" */"},{"lineNumber":7,"author":{"gitId":"zhengruoxin"},"content":"public class Todo extends Task {"},{"lineNumber":8,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":9,"author":{"gitId":"zhengruoxin"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"zhengruoxin"},"content":"     * Initialises a new Todo with text description."},{"lineNumber":11,"author":{"gitId":"zhengruoxin"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"zhengruoxin"},"content":"    public Todo(String description) {"},{"lineNumber":13,"author":{"gitId":"zhengruoxin"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"zhengruoxin"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":16,"author":{"gitId":"zhengruoxin"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"zhengruoxin"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"zhengruoxin"},"content":"        return String.format(\"[T][%s] %s\", this.getStatusIcon(), super.toString());"},{"lineNumber":19,"author":{"gitId":"zhengruoxin"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"zhengruoxin"},"content":"}"}],"authorContributionMap":{"zhengruoxin":20}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zhengruoxin"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":3,"author":{"gitId":"zhengruoxin"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"zhengruoxin"},"content":" * Encapsulates the visuals used in chatting with user."},{"lineNumber":5,"author":{"gitId":"zhengruoxin"},"content":" */"},{"lineNumber":6,"author":{"gitId":"zhengruoxin"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":8,"author":{"gitId":"zhengruoxin"},"content":"\t/**"},{"lineNumber":9,"author":{"gitId":"zhengruoxin"},"content":"     * Prints a big Duke and greets the user. Prompts user to start input."},{"lineNumber":10,"author":{"gitId":"zhengruoxin"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"zhengruoxin"},"content":"    public void greet() {"},{"lineNumber":12,"author":{"gitId":"zhengruoxin"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":13,"author":{"gitId":"zhengruoxin"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":14,"author":{"gitId":"zhengruoxin"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":15,"author":{"gitId":"zhengruoxin"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":16,"author":{"gitId":"zhengruoxin"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":17,"author":{"gitId":"zhengruoxin"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":18,"author":{"gitId":"zhengruoxin"},"content":"        System.out.println(\"Hello! I\u0027m Duke :) What can I do for you?\");"},{"lineNumber":19,"author":{"gitId":"zhengruoxin"},"content":"        System.out.println(\"----------------------------------------------------------\");"},{"lineNumber":20,"author":{"gitId":"zhengruoxin"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":22,"author":{"gitId":"zhengruoxin"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"zhengruoxin"},"content":"     * Prints a line to separate each reply."},{"lineNumber":24,"author":{"gitId":"zhengruoxin"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"zhengruoxin"},"content":"    public void separateLine() {"},{"lineNumber":26,"author":{"gitId":"zhengruoxin"},"content":"    \tSystem.out.println(\"----------------------------------------------------------\");"},{"lineNumber":27,"author":{"gitId":"zhengruoxin"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"zhengruoxin"},"content":""},{"lineNumber":29,"author":{"gitId":"zhengruoxin"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"zhengruoxin"},"content":"     * Prints a bye statement before exit."},{"lineNumber":31,"author":{"gitId":"zhengruoxin"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"zhengruoxin"},"content":"    public void sayBye() {"},{"lineNumber":33,"author":{"gitId":"zhengruoxin"},"content":"    \tSystem.out.println(\"Byebye~ Hope to see you again soon!\");"},{"lineNumber":34,"author":{"gitId":"zhengruoxin"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"zhengruoxin"},"content":"}"}],"authorContributionMap":{"zhengruoxin":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zhengruoxin"},"content":"todo wakeup"},{"lineNumber":2,"author":{"gitId":"zhengruoxin"},"content":"bla"},{"lineNumber":3,"author":{"gitId":"zhengruoxin"},"content":"event field trip at 7am"},{"lineNumber":4,"author":{"gitId":"zhengruoxin"},"content":"todo bring bread"},{"lineNumber":5,"author":{"gitId":"zhengruoxin"},"content":"deadline project by thursday 2359"},{"lineNumber":6,"author":{"gitId":"zhengruoxin"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"zhengruoxin"},"content":"done 3"},{"lineNumber":8,"author":{"gitId":"zhengruoxin"},"content":"list"},{"lineNumber":9,"author":{"gitId":"zhengruoxin"},"content":"deadline"},{"lineNumber":10,"author":{"gitId":"zhengruoxin"},"content":"deadline lab excel by wednesday 9pm"},{"lineNumber":11,"author":{"gitId":"zhengruoxin"},"content":"done 4"},{"lineNumber":12,"author":{"gitId":"zhengruoxin"},"content":"list"},{"lineNumber":13,"author":{"gitId":"zhengruoxin"},"content":"delete 5"},{"lineNumber":14,"author":{"gitId":"zhengruoxin"},"content":"list"},{"lineNumber":15,"author":{"gitId":"zhengruoxin"},"content":"bye"}],"authorContributionMap":{"zhengruoxin":15}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"zhengruoxin"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"zhengruoxin":1,"-":37}}]
