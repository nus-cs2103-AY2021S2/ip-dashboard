[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"    enableAssertions \u003d true"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"},{"lineNumber":63,"author":{"gitId":"eksinyue"},"content":""}],"authorContributionMap":{"-":46,"eksinyue":17}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":" */"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"    private void flip() {"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"        Collections.reverse(tmp);"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"        return new DialogBox(text, img);"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"        db.flip();"},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":"        return db;"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"}"}],"authorContributionMap":{"eksinyue":59}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":" */"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"}"}],"authorContributionMap":{"eksinyue":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import javafx.scene.Scene;"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":" * A GUI for Duke using FXML."},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":" */"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"public class Main extends Application {"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"    public void start(Stage stage) {"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"            stage.setScene(scene);"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"            stage.show();"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"        } catch (IOException e) {"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"            e.printStackTrace();"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"}"}],"authorContributionMap":{"eksinyue":30}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"import duke.Duke;"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":" */"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"    private VBox dialogContainer;"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"    private TextField userInput;"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"    private Button sendButton;"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"    private Duke duke;"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/LittleMyUser.png\"));"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Moomin.png\"));"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"    public void initialize() {"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"        duke \u003d d;"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"        dialogContainer.getChildren().add("},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"                DialogBox.getDukeDialog(d.getGreetingMessage(), dukeImage)"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"        );"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"    @FXML"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"    private void handleUserInput() {"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"        );"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"        userInput.clear();"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"}"}],"authorContributionMap":{"eksinyue":55}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import javafx.scene.image.Image;"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import duke.command.Command;"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import duke.exception.DukeException;"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import duke.parser.Parser;"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import duke.storage.Storage;"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import duke.task.TaskList;"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import duke.ui.Ui;"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"    String littleMyUrl \u003d"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"            \"https://static.wikia.nocookie.net/moomin/images/0/05/My1.png/revision/latest/top-crop/width/300/height/300?cb\u003d20190914020308\";"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"    String moominUrl \u003d"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"            \"https://i.pinimg.com/originals/19/3a/15/193a1552cc00589da96c9c8ce8cc4ba9.png\";"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"    private Image user \u003d new Image(littleMyUrl, 160, 60, false, true);"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"    private Image duke \u003d new Image(moominUrl, 160, 60, false, true);"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"    private TaskList tasks;"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"    private Ui ui;"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"    private Storage storage;"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"     * Sets up the required objects."},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"    public Duke() {"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"        this.tasks \u003d new TaskList();"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"        this.storage \u003d new Storage();"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"            storage.loadTasksFromFile(tasks);"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"        } catch (DukeException e) {"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"            ui.getErrorMessage(e.getMessage());"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"     * Gets greeting message"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"     * @return Greeting message"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"    public String getGreetingMessage() {"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"        return ui.getGreetingMessage();"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"     * Gets response for the inputs entered by the user"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"     * @return Response"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"    public String getResponse(String input) {"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"        try {"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"            Command command \u003d Parser.parse(input);"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"            return command.getResponse(tasks, ui, storage);"},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":"        } catch (DukeException e) {"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"            return ui.getErrorMessage(e.getMessage());"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"eksinyue":58,"-":3}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import duke.parser.Parser;"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import duke.task.Deadline;"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import java.time.LocalDateTime;"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"public class AddDeadlineCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"    private Deadline deadline;"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"    private static final String EMPTY_DEADLINE_ERROR_MESSAGE \u003d \"You can\u0027t create an empty deadline!\";"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"    private static final String NO_DATETIME_ERROR_MESSAGE \u003d \"You can\u0027t add a deadline without a datetime!\";"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"    private static final String WRONG_DATETIME_FORMAT_ERROR_MESSAGE \u003d \"Please follow the datetime format of dd/mm/yyyy hhmm.\";"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"    public AddDeadlineCommand(String details) throws DukeException {"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"            if (details.isEmpty()) {"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"                throw new DukeException(EMPTY_DEADLINE_ERROR_MESSAGE);"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"            }"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"            String[] detailsArr \u003d details.split(\" /by \", 2);"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"            if (detailsArr.length !\u003d 2) {"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"                throw new DukeException(NO_DATETIME_ERROR_MESSAGE);"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"            LocalDateTime date \u003d Parser.parseDateTimeFromInput(detailsArr[1]);"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"            this.deadline \u003d new Deadline(detailsArr[0], date);"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"            throw new DukeException(WRONG_DATETIME_FORMAT_ERROR_MESSAGE);"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"        } catch (DukeException e) {"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"            throw new DukeException(e.getMessage());"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"    public String getResponse(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"        tasks.addTask(deadline);"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"        storage.saveTasksToFile(tasks);"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"        return ui.getAddTaskReport(deadline, tasks);"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"    public boolean isExitCommand() {"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"        return false;"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"}"}],"authorContributionMap":{"eksinyue":50}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import duke.parser.Parser;"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import duke.task.Event;"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import java.time.LocalDateTime;"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"public class AddEventCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"    private Event event;"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"    private static final String EMPTY_EVENT_ERROR_MESSAGE \u003d \"You can\u0027t create an empty event!\";"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"    private static final String NO_DATETIME_ERROR_MESSAGE \u003d \"You can\u0027t add an event without a datetime!\";"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"    private static final String WRONG_DATETIME_FORMAT_ERROR_MESSAGE \u003d \"Please follow the datetime format of dd/mm/yyyy hhmm.\";"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"    public AddEventCommand(String details) throws DukeException {"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"            if (details.isEmpty()) {"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"                throw new DukeException(EMPTY_EVENT_ERROR_MESSAGE);"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"            }"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"            String[] detailsArr \u003d details.split(\" /at \", 2);"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"            if (detailsArr.length !\u003d 2) {"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"                throw new DukeException(NO_DATETIME_ERROR_MESSAGE);"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"            LocalDateTime date \u003d Parser.parseDateTimeFromInput(detailsArr[1]);"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"            this.event \u003d new Event(detailsArr[0], date);"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"            throw new DukeException(WRONG_DATETIME_FORMAT_ERROR_MESSAGE);"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"        } catch (DukeException e) {"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"            throw new DukeException(e.getMessage());"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"    public String getResponse(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"        tasks.addTask(event);"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"        storage.saveTasksToFile(tasks);"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"        return ui.getAddTaskReport(event, tasks);"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"    public boolean isExitCommand() {"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"        return false;"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"}"}],"authorContributionMap":{"eksinyue":49}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"public class AddTodoCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"    private Todo todo;"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"    private static final String EMPTY_TODO_ERROR_MESSAGE \u003d \"You can\u0027t add an empty todo!\";"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"    public AddTodoCommand(String details) throws DukeException {"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"        if (details.isBlank()) {"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"            throw new DukeException(EMPTY_TODO_ERROR_MESSAGE);"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"        this.todo \u003d new Todo(details);"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"    public String getResponse(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"        tasks.addTask(todo);"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"        storage.saveTasksToFile(tasks);"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"        return ui.getAddTaskReport(todo, tasks);"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"    public boolean isExitCommand() {"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"        return false;"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"}"}],"authorContributionMap":{"eksinyue":32}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"public class ByeCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"    private static final String ERROR_MESSAGE \u003d \"Wait, you want to leave or what?\";"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"    public ByeCommand(String details) throws DukeException {"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"        if (!details.isBlank()) {"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"            throw new DukeException(ERROR_MESSAGE);"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"    public String getResponse(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"        storage.saveTasksToFile(tasks);"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"        return ui.getFarewellMessage();"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"    public boolean isExitCommand() {"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"        return true;"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"}"}],"authorContributionMap":{"eksinyue":29}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"public abstract class Command {"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"    public abstract String getResponse(TaskList tasks, Ui ui, Storage storage) throws DukeException;"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"    public abstract boolean isExitCommand();"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"}"}],"authorContributionMap":{"eksinyue":13}},{"path":"src/main/java/duke/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import duke.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"public class DeleteTaskCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"    private int taskIndex;"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"    private static final String NO_TASK_INDEX_ERROR_MESSAGE \u003d \"I\u0027m not sure which task you want to delete!\";"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"    private static final String INDEX_NOT_NUMBER_ERROR_MESSAGE \u003d \"I can only find a task with its index number.\";"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"    private static final String INDEX_OOB_ERROR_MESSAGE \u003d \"I cannot find the task you are referring to.\";"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"    public DeleteTaskCommand(String taskIndex) throws DukeException {"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"        if (taskIndex.isBlank()) {"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"            throw new DukeException(NO_TASK_INDEX_ERROR_MESSAGE);"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"            this.taskIndex \u003d Integer.parseInt(taskIndex.trim());"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"            throw new DukeException(INDEX_NOT_NUMBER_ERROR_MESSAGE);"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"    public String getResponse(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"            Task task \u003d tasks.getTask(taskIndex - 1);"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"            tasks.deleteTask(taskIndex - 1);"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"            storage.saveTasksToFile(tasks);"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"            return ui.getDeleteTaskMessage(task, tasks);"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"            throw new DukeException(INDEX_OOB_ERROR_MESSAGE);"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"    public boolean isExitCommand() {"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"        return false;"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"}"}],"authorContributionMap":{"eksinyue":43}},{"path":"src/main/java/duke/command/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"public class FindTaskCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"    private String keyword;"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"    private static final String NO_KEYWORD_ERROR_MESSAGE \u003d \"I can\u0027t find a ask without you giving me a keyword.\";"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"    public FindTaskCommand(String keyword) throws DukeException {"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"        if (keyword.isBlank()) {"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"            throw new DukeException(NO_KEYWORD_ERROR_MESSAGE);"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"    public String getResponse(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"        TaskList foundTasks \u003d tasks.findTask(keyword);"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"        return ui.getAllFoundTasks(foundTasks);"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"    public boolean isExitCommand() {"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"        return false;"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"}"}],"authorContributionMap":{"eksinyue":30}},{"path":"src/main/java/duke/command/ListTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"public class ListTaskCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"    private static final String ERROR_MESSAGE \u003d \"Wait, you want me to list all the tasks or what?\";"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"    public ListTaskCommand(String details) throws DukeException {"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"        if (!details.isBlank()) {"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"            throw new DukeException(ListTaskCommand.ERROR_MESSAGE);"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"    public String getResponse(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"        storage.saveTasksToFile(tasks);"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"        return ui.getAllTasks(tasks);"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"    public boolean isExitCommand() {"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"        return false;"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"}"}],"authorContributionMap":{"eksinyue":28}},{"path":"src/main/java/duke/command/MarkTaskAsDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import duke.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"public class MarkTaskAsDoneCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"    private int taskIndex;"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"    private static final String NO_TASK_INDEX_ERROR_MESSAGE \u003d \"I\u0027m not sure which task you want to mark as done!\";"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"    private static final String INDEX_NOT_NUMBER_ERROR_MESSAGE \u003d \"I can only find a task with its index number.\";"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"    private static final String INDEX_OOB_ERROR_MESSAGE \u003d \"I cannot find the task you are referring to.\";"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"    public MarkTaskAsDoneCommand(String taskIndex) throws DukeException {"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"        if (taskIndex.isBlank()) {"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"            throw new DukeException(NO_TASK_INDEX_ERROR_MESSAGE);"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"            this.taskIndex \u003d Integer.parseInt(taskIndex.trim());"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"            throw new DukeException(INDEX_NOT_NUMBER_ERROR_MESSAGE);"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"    public String getResponse(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"            Task task \u003d tasks.getTask(taskIndex - 1);"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"            boolean taskWasDone \u003d task.isDone();"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"            task.markAsDone();"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"            storage.saveTasksToFile(tasks);"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"            return ui.getMarkTaskAsDoneMessage(task, taskWasDone);"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"            throw new DukeException(INDEX_OOB_ERROR_MESSAGE);"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"    public boolean isExitCommand() {"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"        return false;"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"}"}],"authorContributionMap":{"eksinyue":44}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"    public DukeException(String message) {"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"}"}],"authorContributionMap":{"eksinyue":7}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import duke.command.*;"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import duke.exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import duke.ui.UserInputType;"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"public class Parser {"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"     * Parses String from user input into a LocalDateTime object."},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"     * @param dateTimeString String input entered by user."},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"     * @return LocalDateTime object of a task."},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"    public static LocalDateTime parseDateTimeFromInput(String dateTimeString) {"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"        DateTimeFormatter inputDateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy Hmm\");"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"        return LocalDateTime.parse(dateTimeString, inputDateTimeFormatter);"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"     * Parses String from file into a LocalDateTime object."},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"     * @param dateTimeString String from file."},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"     * @return LocalDateTime object of a task."},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"    public static LocalDateTime parseDateTimeFromFile(String dateTimeString) {"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"        DateTimeFormatter inputDateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"        return LocalDateTime.parse(dateTimeString, inputDateTimeFormatter);"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"     * Parses LocalDateTime object into a formatted string."},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"     * @param dateTime LocalDateTime object for parsing."},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"     * @return Formatted string representing the time of a task."},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"    public static String parseDateTimeToString(LocalDateTime dateTime) {"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\"));"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"     * Parses user input into command for execution."},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"     * @param userInput Input entered by user."},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"     * @return Command object based on user input."},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"     * @throws DukeException Unrecognized input by user."},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"    public static Command parse(String userInput) throws DukeException {"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"        String[] userInputArr \u003d userInput.split(\" \", 2);"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"        if (userInputArr.length !\u003d 2) {"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"            userInputArr \u003d new String[]{userInputArr[0], \"\"};"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"        String details \u003d userInputArr[1].trim();"},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"        switch (parseUserInputType(userInputArr[0].trim())) {"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"            case TODO:"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"                return new AddTodoCommand(details);"},{"lineNumber":61,"author":{"gitId":"eksinyue"},"content":"            case DEADLINE:"},{"lineNumber":62,"author":{"gitId":"eksinyue"},"content":"                return new AddDeadlineCommand(details);"},{"lineNumber":63,"author":{"gitId":"eksinyue"},"content":"            case EVENT:"},{"lineNumber":64,"author":{"gitId":"eksinyue"},"content":"                return new AddEventCommand(details);"},{"lineNumber":65,"author":{"gitId":"eksinyue"},"content":"            case DONE:"},{"lineNumber":66,"author":{"gitId":"eksinyue"},"content":"                return new MarkTaskAsDoneCommand(details);"},{"lineNumber":67,"author":{"gitId":"eksinyue"},"content":"            case FIND:"},{"lineNumber":68,"author":{"gitId":"eksinyue"},"content":"                return new FindTaskCommand(details);"},{"lineNumber":69,"author":{"gitId":"eksinyue"},"content":"            case DELETE:"},{"lineNumber":70,"author":{"gitId":"eksinyue"},"content":"                return new DeleteTaskCommand(details);"},{"lineNumber":71,"author":{"gitId":"eksinyue"},"content":"            case LIST:"},{"lineNumber":72,"author":{"gitId":"eksinyue"},"content":"                return new ListTaskCommand(details);"},{"lineNumber":73,"author":{"gitId":"eksinyue"},"content":"            case BYE:"},{"lineNumber":74,"author":{"gitId":"eksinyue"},"content":"                return new ByeCommand(details);"},{"lineNumber":75,"author":{"gitId":"eksinyue"},"content":"            default:"},{"lineNumber":76,"author":{"gitId":"eksinyue"},"content":"                throw new DukeException(\"Sorry, I dont understand what that means :-(\");"},{"lineNumber":77,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":80,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"eksinyue"},"content":"     * Returns in the type of input entered by user."},{"lineNumber":82,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"eksinyue"},"content":"     * @param userInput Input entered by user."},{"lineNumber":84,"author":{"gitId":"eksinyue"},"content":"     * @return UserInputType object based on user input."},{"lineNumber":85,"author":{"gitId":"eksinyue"},"content":"     * @throws DukeException Unrecognized input by user."},{"lineNumber":86,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"eksinyue"},"content":"    public static UserInputType parseUserInputType(String userInput) throws DukeException {"},{"lineNumber":88,"author":{"gitId":"eksinyue"},"content":"        try {"},{"lineNumber":89,"author":{"gitId":"eksinyue"},"content":"            return UserInputType.valueOf(userInput.toUpperCase());"},{"lineNumber":90,"author":{"gitId":"eksinyue"},"content":"        } catch (IllegalArgumentException error) {"},{"lineNumber":91,"author":{"gitId":"eksinyue"},"content":"            throw new DukeException(\"Sorry, I dont understand what that means :-(\");"},{"lineNumber":92,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"eksinyue"},"content":"}"}],"authorContributionMap":{"eksinyue":94}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import duke.parser.Parser;"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import duke.exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import duke.task.*;"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"import java.io.File;"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"import java.io.FileWriter;"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"import java.util.Scanner;"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"public class Storage {"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"    private File file;"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"    private final String SAVE_FORMAT_DELIMITER \u003d \" \\\\| \";"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"     * Initializes a Storage object with the default path."},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"    public Storage() {"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"        file \u003d new File(\"data\", \"duke.txt\");"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"     * Creates directory and file if not found."},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"    public void createFile() throws DukeException {"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"            if (!file.getParentFile().exists()) {"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"                file.getParentFile().mkdirs();"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"                System.out.println(\"Directory successfully created\");"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"            if (!file.exists()) {"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"                file.createNewFile();"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"                System.out.println(\"File successfully created\");"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"        } catch (IOException e) {"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"            throw new DukeException("},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"                    \"There is an error while creating file \" + file.getName());"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"     * Loads data from save file into Duke during startup."},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"     * @param tasks TaskList object used to store Tasks"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"    public void loadTasksFromFile(TaskList tasks) throws DukeException {"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"        createFile();"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"        try {"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"            Scanner sc \u003d new Scanner(file);"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"            while (sc.hasNextLine()) {"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"                parseTasksFromFile(tasks, sc.nextLine());"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"            throw new DukeException("},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"                    \"There is an error while loading file \" + file.getName());"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":61,"author":{"gitId":"eksinyue"},"content":"            throw new DukeException("},{"lineNumber":62,"author":{"gitId":"eksinyue"},"content":"                    \"There is an error while reading file \" + file.getName());"},{"lineNumber":63,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":66,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"eksinyue"},"content":"     * Parses a string of task and adds it to a TaskList object."},{"lineNumber":68,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"eksinyue"},"content":"     * @param tasks      TaskList containing all tasks currently in Duke."},{"lineNumber":70,"author":{"gitId":"eksinyue"},"content":"     * @param taskString String representing a task from file"},{"lineNumber":71,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"eksinyue"},"content":"    public void parseTasksFromFile(TaskList tasks, String taskString) throws IndexOutOfBoundsException {"},{"lineNumber":73,"author":{"gitId":"eksinyue"},"content":"        String[] taskStringArr \u003d taskString.split(SAVE_FORMAT_DELIMITER);"},{"lineNumber":74,"author":{"gitId":"eksinyue"},"content":"        switch (taskStringArr[0].trim()) {"},{"lineNumber":75,"author":{"gitId":"eksinyue"},"content":"            case \"T\":"},{"lineNumber":76,"author":{"gitId":"eksinyue"},"content":"                Todo todo \u003d new Todo(taskStringArr[2]);"},{"lineNumber":77,"author":{"gitId":"eksinyue"},"content":"                addToTasks(tasks, todo, taskStringArr[1]);"},{"lineNumber":78,"author":{"gitId":"eksinyue"},"content":"                break;"},{"lineNumber":79,"author":{"gitId":"eksinyue"},"content":"            case \"D\":"},{"lineNumber":80,"author":{"gitId":"eksinyue"},"content":"                Deadline deadline \u003d new Deadline(taskStringArr[2], Parser.parseDateTimeFromFile(taskStringArr[3]));"},{"lineNumber":81,"author":{"gitId":"eksinyue"},"content":"                addToTasks(tasks, deadline, taskStringArr[1]);"},{"lineNumber":82,"author":{"gitId":"eksinyue"},"content":"                break;"},{"lineNumber":83,"author":{"gitId":"eksinyue"},"content":"            case \"E\":"},{"lineNumber":84,"author":{"gitId":"eksinyue"},"content":"                Event event \u003d new Event(taskStringArr[2], Parser.parseDateTimeFromFile(taskStringArr[3]));"},{"lineNumber":85,"author":{"gitId":"eksinyue"},"content":"                addToTasks(tasks, event, taskStringArr[1]);"},{"lineNumber":86,"author":{"gitId":"eksinyue"},"content":"                break;"},{"lineNumber":87,"author":{"gitId":"eksinyue"},"content":"            default:"},{"lineNumber":88,"author":{"gitId":"eksinyue"},"content":"                break;"},{"lineNumber":89,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":92,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"eksinyue"},"content":"     * Adds to a task to TaskList and updates its completion status."},{"lineNumber":94,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":95,"author":{"gitId":"eksinyue"},"content":"     * @param tasks  TaskList containing all tasks currently in Duke."},{"lineNumber":96,"author":{"gitId":"eksinyue"},"content":"     * @param task   Task to be added to TaskList."},{"lineNumber":97,"author":{"gitId":"eksinyue"},"content":"     * @param status String representation of the completion status of the task."},{"lineNumber":98,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"eksinyue"},"content":"    public void addToTasks(TaskList tasks, Task task, String status) {"},{"lineNumber":100,"author":{"gitId":"eksinyue"},"content":"        if (status.trim().equals(\"1\")) {"},{"lineNumber":101,"author":{"gitId":"eksinyue"},"content":"            task.markAsDone();"},{"lineNumber":102,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"eksinyue"},"content":"        tasks.addTask(task);"},{"lineNumber":104,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":106,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"eksinyue"},"content":"     * Saves current list of tasks to file."},{"lineNumber":108,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":109,"author":{"gitId":"eksinyue"},"content":"     * @param tasks TaskList object containing all current tasks."},{"lineNumber":110,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"eksinyue"},"content":"    public void saveTasksToFile(TaskList tasks) throws DukeException {"},{"lineNumber":112,"author":{"gitId":"eksinyue"},"content":"        try {"},{"lineNumber":113,"author":{"gitId":"eksinyue"},"content":"            FileWriter fw \u003d new FileWriter(file);"},{"lineNumber":114,"author":{"gitId":"eksinyue"},"content":"            for (Task task : tasks.getAllTasks()) {"},{"lineNumber":115,"author":{"gitId":"eksinyue"},"content":"                fw.write(task.toSaveFormat() + System.lineSeparator());"},{"lineNumber":116,"author":{"gitId":"eksinyue"},"content":"            }"},{"lineNumber":117,"author":{"gitId":"eksinyue"},"content":"            fw.close();"},{"lineNumber":118,"author":{"gitId":"eksinyue"},"content":"        } catch (IOException e) {"},{"lineNumber":119,"author":{"gitId":"eksinyue"},"content":"            throw new DukeException("},{"lineNumber":120,"author":{"gitId":"eksinyue"},"content":"                    \"There is an error while writing to file \" + file.getName());"},{"lineNumber":121,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"eksinyue"},"content":"}"},{"lineNumber":124,"author":{"gitId":"eksinyue"},"content":""}],"authorContributionMap":{"eksinyue":124}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import duke.parser.Parser;"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"    protected LocalDateTime by;"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"     * Initializes a deadline with its description and time."},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"     * @param description Description of the deadline."},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"     * @param by          Time of the deadline."},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"    public Deadline(String description, LocalDateTime by) {"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"        super(description);"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"        this.by \u003d by;"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"     * Converts the deadline to a string which will be saved in a file."},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"     * @return String representing the deadline in its save format."},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"    public String toSaveFormat() {"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") +"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"                \" | \" + description + \" | \" + Parser.parseDateTimeToString(by);"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"     * Converts the deadline to a string."},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"     * @return String representing the deadline."},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"    public String toString() {"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + Parser.parseDateTimeToString(by) + \")\";"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"}"}],"authorContributionMap":{"eksinyue":42}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import duke.parser.Parser;"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"    protected LocalDateTime at;"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"     * Initializes an event with its description and time."},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"     * @param description Description of the event."},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"     * @param at          Time of the event."},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"    public Event(String description, LocalDateTime at) {"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"        super(description);"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"        this.at \u003d at;"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"     * Converts the event to a string which will be saved in a file."},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"     * @return String representing the event in its save format."},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"    public String toSaveFormat() {"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") +"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"                \" | \" + description + \" | \" + Parser.parseDateTimeToString(at);"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"     * Converts the event to a string."},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"     * @return String representing the event."},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"    public String toString() {"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + Parser.parseDateTimeToString(at) + \")\";"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"}"}],"authorContributionMap":{"eksinyue":42}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"     * Initializes a task with its description"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"     * @param description Description of the task"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"    public Task(String description) {"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"        this.description \u003d description;"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"        this.isDone \u003d false;"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"     * Returns the completion status of the task."},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"     * @return If the task is done."},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"    public boolean isDone() {"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"        return this.isDone;"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"     * Returns the description of the task"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"     * @return Description of the task."},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"    public String getDescription() {"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"        return description;"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"     * Returns an icon representing the completion status of the task."},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"     * If the task is done, a cross is returned."},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"     * @return An status icon representing the task status."},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"    public String getStatusIcon() {"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"        return (isDone ? \"\\u2718\" : \" \");"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"     * Marks the task as done."},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"    public void markAsDone() {"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"        isDone \u003d true;"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"     * Converts the task to a string which will be saved in a file."},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"     * @return String representing the task in its save format."},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":"    public String toSaveFormat() {"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"        return getStatusIcon() + \" | \" + this.description;"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":61,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"eksinyue"},"content":"     * Converts the task to a string."},{"lineNumber":63,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"eksinyue"},"content":"     * @return String representing the task."},{"lineNumber":65,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"eksinyue"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"eksinyue"},"content":"    public String toString() {"},{"lineNumber":68,"author":{"gitId":"eksinyue"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":69,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"eksinyue"},"content":"}"}],"authorContributionMap":{"eksinyue":70}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"public class TaskList {"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"    private List\u003cTask\u003e tasks;"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"     * Initializes an empty task list."},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"    public TaskList() {"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"     * Adds a task to the list."},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"     * @param task Task to be added."},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"    public void addTask(Task task) {"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"        tasks.add(task);"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"     * Deletes a task from the list."},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"     * @param taskIndex Index of the task to be deleted."},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"    public void deleteTask(int taskIndex) {"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"        tasks.remove(taskIndex);"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"     * Returns a task from the list given its index."},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"     * @param taskIndex Index of the task to be returned"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"     * @return Task request by user"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"    public Task getTask(int taskIndex) {"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"        return tasks.get(taskIndex);"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"     * Returns if the task list is empty."},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"     * @return If the task list is empty."},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"    public boolean isEmpty() {"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"        return tasks.isEmpty();"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"     * Returns the total number of tasks in the list."},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"     * @return Total number of tasks in the list."},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"    public int getTaskCount() {"},{"lineNumber":61,"author":{"gitId":"eksinyue"},"content":"        return tasks.size();"},{"lineNumber":62,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":64,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"eksinyue"},"content":"     * Returns all tasks in the task list."},{"lineNumber":66,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"eksinyue"},"content":"     * @return List of tasks in the task list."},{"lineNumber":68,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"eksinyue"},"content":"    public List\u003cTask\u003e getAllTasks() {"},{"lineNumber":70,"author":{"gitId":"eksinyue"},"content":"        return tasks;"},{"lineNumber":71,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":73,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"eksinyue"},"content":"     * Returns a list of task which match the given keyword."},{"lineNumber":75,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"eksinyue"},"content":"     * @return List of tasks which match the given keyword."},{"lineNumber":77,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"eksinyue"},"content":"    public TaskList findTask(String keyword) {"},{"lineNumber":79,"author":{"gitId":"eksinyue"},"content":"        TaskList foundTasks \u003d new TaskList();"},{"lineNumber":80,"author":{"gitId":"eksinyue"},"content":"        for (int i \u003d 0; i \u003c getTaskCount(); ++i) {"},{"lineNumber":81,"author":{"gitId":"eksinyue"},"content":"            Task task \u003d getTask(i);"},{"lineNumber":82,"author":{"gitId":"eksinyue"},"content":"            Boolean isFound \u003d task.getDescription().toLowerCase().contains(keyword.toLowerCase());"},{"lineNumber":83,"author":{"gitId":"eksinyue"},"content":"            if (isFound) {"},{"lineNumber":84,"author":{"gitId":"eksinyue"},"content":"                foundTasks.addTask(task);"},{"lineNumber":85,"author":{"gitId":"eksinyue"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"eksinyue"},"content":"        return foundTasks;"},{"lineNumber":88,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"eksinyue"},"content":"}"}],"authorContributionMap":{"eksinyue":89}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"     * Initializes a todo item with its description"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"     * @param description Description of the todo item"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"    public Todo(String description) {"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"     * Converts the todo to a string which will be saved in a file."},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"     * @return String representing the todo in its save format."},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"    public String toSaveFormat() {"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"     * Converts the todo to a string."},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"     * @return String representing the todo."},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"    public String toString() {"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"}"}],"authorContributionMap":{"eksinyue":33}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"    private static final String NEW_LINE \u003d \"\\n\";"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"    private static final String GREETING_MESSAGE \u003d"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"            \"Hi there! I am Moomin\" + NEW_LINE + \"What can I do for you today?\";"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"    private static final String FAREWELL_MESSAGE \u003d \"Goodbye. Have a nice day!!\";"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"    private static final String ERROR_START \u003d \"Hmm... \";"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"    private static final String TASK_ADDED_MESSAGE \u003d \"Got it. I\u0027ve added this task:\";"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"    private static final String TASK_COMPLETED_MESSAGE \u003d \"Congratulations! You have completed this task:\";"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"    private static final String TASK_ALR_COMPLETED_MESSAGE \u003d \"You have already completed this task:\";"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"    private static final String TASK_REMOVED_MESSAGE \u003d \"Noted. This task has been removed:\";"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"    private static final String EMPTY_LIST_MESSAGE \u003d \"It seems like there is nothing in your list.\";"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"    private static final String PRINT_LIST_MESSAGE \u003d \"Here are the tasks in your list:\";"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"    private static final String NO_FOUND_TASK_MESSAGE \u003d"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"            \"It seems like there is no task matching your keyword:\";"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"    private static final String PRINT_FOUND_TASKS_MESSAGE \u003d \"Here are the matching tasks in your list:\";"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"     * Gets the greeting message."},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"     * @return Greeting message."},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"    public String getGreetingMessage() {"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"        return GREETING_MESSAGE;"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"     * Gets the farewell message."},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"     * @return Farewell message."},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"    public String getFarewellMessage() {"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"        return FAREWELL_MESSAGE;"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"     * Gets the error message."},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"     * @return Formatted error message."},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"    public String getErrorMessage(String message) {"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"        return ERROR_START + message;"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"    public String combineMessages(String... messages) {"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"        for (String message : messages) {"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"            sb.append(message + NEW_LINE);"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"        return sb.toString();"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"     * Gets a feedback message after user adds a task."},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"     * @param task  Task added by user."},{"lineNumber":61,"author":{"gitId":"eksinyue"},"content":"     * @param tasks List of tasks the task was added to."},{"lineNumber":62,"author":{"gitId":"eksinyue"},"content":"     * @return Add task report."},{"lineNumber":63,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"eksinyue"},"content":"    public String getAddTaskReport(Task task, TaskList tasks) {"},{"lineNumber":65,"author":{"gitId":"eksinyue"},"content":"        return combineMessages(TASK_ADDED_MESSAGE, getTaskInfo(task), getTaskCountInfo(tasks));"},{"lineNumber":66,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":68,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"eksinyue"},"content":"     * Gets a message containing the total number of tasks."},{"lineNumber":70,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"eksinyue"},"content":"     * @param tasks List of all the tasks."},{"lineNumber":72,"author":{"gitId":"eksinyue"},"content":"     * @return Task count info."},{"lineNumber":73,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"eksinyue"},"content":"    public String getTaskCountInfo(TaskList tasks) {"},{"lineNumber":75,"author":{"gitId":"eksinyue"},"content":"        return \"Now you have \" + tasks.getTaskCount() + \" in the list.\";"},{"lineNumber":76,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":78,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"eksinyue"},"content":"     * Gets a feedback message after user marks a task as done."},{"lineNumber":80,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"eksinyue"},"content":"     * @param task    Task marked as done."},{"lineNumber":82,"author":{"gitId":"eksinyue"},"content":"     * @param wasDone If the task was already marked as done."},{"lineNumber":83,"author":{"gitId":"eksinyue"},"content":"     * @return Mark task as done feedback message."},{"lineNumber":84,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"eksinyue"},"content":"    public String getMarkTaskAsDoneMessage(Task task, boolean wasDone) {"},{"lineNumber":86,"author":{"gitId":"eksinyue"},"content":"        String taskCompleteMessage \u003d wasDone ? TASK_ALR_COMPLETED_MESSAGE : TASK_COMPLETED_MESSAGE;"},{"lineNumber":87,"author":{"gitId":"eksinyue"},"content":"        return combineMessages(taskCompleteMessage, getTaskInfo(task));"},{"lineNumber":88,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":90,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"eksinyue"},"content":"     * Gets a feedback message after user deletes a task."},{"lineNumber":92,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"eksinyue"},"content":"     * @param task  Task deleted by user."},{"lineNumber":94,"author":{"gitId":"eksinyue"},"content":"     * @param tasks List of tasks the task was deleted from."},{"lineNumber":95,"author":{"gitId":"eksinyue"},"content":"     * @return Delete task message."},{"lineNumber":96,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"eksinyue"},"content":"    public String getDeleteTaskMessage(Task task, TaskList tasks) {"},{"lineNumber":98,"author":{"gitId":"eksinyue"},"content":"        return combineMessages(TASK_REMOVED_MESSAGE, getTaskInfo(task), getTaskCountInfo(tasks));"},{"lineNumber":99,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":101,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"eksinyue"},"content":"     * Gets a task after formatting."},{"lineNumber":103,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":104,"author":{"gitId":"eksinyue"},"content":"     * @param task Task to be displayed."},{"lineNumber":105,"author":{"gitId":"eksinyue"},"content":"     * @return Task info message."},{"lineNumber":106,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":107,"author":{"gitId":"eksinyue"},"content":"    public String getTaskInfo(Task task) {"},{"lineNumber":108,"author":{"gitId":"eksinyue"},"content":"        return task.toString();"},{"lineNumber":109,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":111,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"eksinyue"},"content":"     * Gets all the tasks after formatting."},{"lineNumber":113,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":114,"author":{"gitId":"eksinyue"},"content":"     * @param tasks List of all the tasks."},{"lineNumber":115,"author":{"gitId":"eksinyue"},"content":"     * @return Info of al tasks after formatting"},{"lineNumber":116,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"eksinyue"},"content":"    public String getAllTasks(TaskList tasks) {"},{"lineNumber":118,"author":{"gitId":"eksinyue"},"content":"        if (tasks.isEmpty()) {"},{"lineNumber":119,"author":{"gitId":"eksinyue"},"content":"            return EMPTY_LIST_MESSAGE;"},{"lineNumber":120,"author":{"gitId":"eksinyue"},"content":"        } else {"},{"lineNumber":121,"author":{"gitId":"eksinyue"},"content":"            return combineMessages(PRINT_LIST_MESSAGE, combineTasksToString(tasks));"},{"lineNumber":122,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":125,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"eksinyue"},"content":"     * Gets all the tasks found by a keyword after formatting."},{"lineNumber":127,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":128,"author":{"gitId":"eksinyue"},"content":"     * @param tasks List of found tasks."},{"lineNumber":129,"author":{"gitId":"eksinyue"},"content":"     * @return Info of all found tasks after formatting"},{"lineNumber":130,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":131,"author":{"gitId":"eksinyue"},"content":"    public String getAllFoundTasks(TaskList tasks) {"},{"lineNumber":132,"author":{"gitId":"eksinyue"},"content":"        if (tasks.isEmpty()) {"},{"lineNumber":133,"author":{"gitId":"eksinyue"},"content":"            return NO_FOUND_TASK_MESSAGE;"},{"lineNumber":134,"author":{"gitId":"eksinyue"},"content":"        } else {"},{"lineNumber":135,"author":{"gitId":"eksinyue"},"content":"            return combineMessages(PRINT_FOUND_TASKS_MESSAGE, combineTasksToString(tasks));"},{"lineNumber":136,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":139,"author":{"gitId":"eksinyue"},"content":"    /**"},{"lineNumber":140,"author":{"gitId":"eksinyue"},"content":"     * Combine info strings of all the tasks in the given TaskList into one."},{"lineNumber":141,"author":{"gitId":"eksinyue"},"content":"     *"},{"lineNumber":142,"author":{"gitId":"eksinyue"},"content":"     * @param tasks TaskList to be printed."},{"lineNumber":143,"author":{"gitId":"eksinyue"},"content":"     * @return Combines string containing all tasks in TaskList."},{"lineNumber":144,"author":{"gitId":"eksinyue"},"content":"     */"},{"lineNumber":145,"author":{"gitId":"eksinyue"},"content":"    public String combineTasksToString(TaskList tasks) {"},{"lineNumber":146,"author":{"gitId":"eksinyue"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":147,"author":{"gitId":"eksinyue"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.getTaskCount(); ++i) {"},{"lineNumber":148,"author":{"gitId":"eksinyue"},"content":"            sb.append(i + \".\" + tasks.getTask(i - 1).toString() + NEW_LINE);"},{"lineNumber":149,"author":{"gitId":"eksinyue"},"content":"        }"},{"lineNumber":150,"author":{"gitId":"eksinyue"},"content":"        return sb.toString();"},{"lineNumber":151,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"eksinyue"},"content":"}"}],"authorContributionMap":{"eksinyue":152}},{"path":"src/main/java/duke/ui/UserInputType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"public enum UserInputType {"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"    TODO,"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"    DEADLINE,"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"    EVENT,"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"    DONE,"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"    FIND,"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"    DELETE,"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"    LIST,"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"    BYE"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"}"}],"authorContributionMap":{"eksinyue":12}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"        \u003cLabel fx:id\u003d\"dialog\" depthTest\u003d\"DISABLE\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: antiquewhite; -fx-background-radius: 20; -fx-background-insets: -10;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"         \u003cHBox.margin\u003e"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"            \u003cInsets left\u003d\"20.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"67.0\" fitWidth\u003d\"67.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"    \u003c/children\u003e"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"    \u003cpadding\u003e"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"    \u003c/padding\u003e"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"eksinyue":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"\u003c?import java.lang.*?\u003e"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"\u003c?import java.util.*?\u003e"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"\u003c?import javafx.scene.*?\u003e"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"\u003c?import javafx.scene.control.*?\u003e"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"\u003c?import javafx.scene.layout.*?\u003e"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"            fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"    \u003cchildren\u003e"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"                    vvalue\u003d\"1.0\"\u003e"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"            \u003ccontent\u003e"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":"            \u003c/content\u003e"},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"    \u003c/children\u003e"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"eksinyue":24}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"import java.util.Arrays;"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"class TaskListTest {"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"    private static final Task task1 \u003d new Task(\"first task\");"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"    private static final Task task2 \u003d new Task(\"second task\");"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":"    private static final Task task3 \u003d new Task(\"third task\");"},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"    void testIsEmpty_emptyTaskList_returnTrue() {"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"        assertTrue(tasks.isEmpty());"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"    void testIsEmpty_nonEmptyTaskList_returnFalse() {"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"        tasks.addTask(task1);"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"        assertFalse(tasks.isEmpty());"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"    void testGetAllTasks_emptyTaskList_emptyList() {"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"        assertEquals(new ArrayList\u003cTask\u003e(), tasks.getAllTasks());"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":35,"author":{"gitId":"eksinyue"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"eksinyue"},"content":"    void testGetAllTasks_nonEmptyTaskList_listWithAddedTask() {"},{"lineNumber":37,"author":{"gitId":"eksinyue"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":38,"author":{"gitId":"eksinyue"},"content":"        tasks.addTask(task1);"},{"lineNumber":39,"author":{"gitId":"eksinyue"},"content":"        tasks.addTask(task2);"},{"lineNumber":40,"author":{"gitId":"eksinyue"},"content":"        assertEquals(Arrays.asList(task1, task2), tasks.getAllTasks());"},{"lineNumber":41,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":43,"author":{"gitId":"eksinyue"},"content":"    @Test"},{"lineNumber":44,"author":{"gitId":"eksinyue"},"content":"    void testGetTaskCount_emptyTaskList_returnZero() {"},{"lineNumber":45,"author":{"gitId":"eksinyue"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":46,"author":{"gitId":"eksinyue"},"content":"        assertEquals(0, tasks.getTaskCount());"},{"lineNumber":47,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":49,"author":{"gitId":"eksinyue"},"content":"    @Test"},{"lineNumber":50,"author":{"gitId":"eksinyue"},"content":"    void testGetTaskCount_nonEmptyTaskList_returnTaskCount() {"},{"lineNumber":51,"author":{"gitId":"eksinyue"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":52,"author":{"gitId":"eksinyue"},"content":"        tasks.addTask(task1);"},{"lineNumber":53,"author":{"gitId":"eksinyue"},"content":"        tasks.addTask(task2);"},{"lineNumber":54,"author":{"gitId":"eksinyue"},"content":"        tasks.addTask(task3);"},{"lineNumber":55,"author":{"gitId":"eksinyue"},"content":"        assertEquals(3, tasks.getTaskCount());"},{"lineNumber":56,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":58,"author":{"gitId":"eksinyue"},"content":"    @Test"},{"lineNumber":59,"author":{"gitId":"eksinyue"},"content":"    void testDeleteTask() {"},{"lineNumber":60,"author":{"gitId":"eksinyue"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":61,"author":{"gitId":"eksinyue"},"content":"        tasks.addTask(task1);"},{"lineNumber":62,"author":{"gitId":"eksinyue"},"content":"        tasks.addTask(task2);"},{"lineNumber":63,"author":{"gitId":"eksinyue"},"content":"        tasks.addTask(task3);"},{"lineNumber":64,"author":{"gitId":"eksinyue"},"content":"        tasks.deleteTask(1);"},{"lineNumber":65,"author":{"gitId":"eksinyue"},"content":"        assertEquals(tasks.getAllTasks(), Arrays.asList(task1, task3));"},{"lineNumber":66,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":68,"author":{"gitId":"eksinyue"},"content":"    @Test"},{"lineNumber":69,"author":{"gitId":"eksinyue"},"content":"    void testGetTask() {"},{"lineNumber":70,"author":{"gitId":"eksinyue"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":71,"author":{"gitId":"eksinyue"},"content":"        tasks.addTask(task1);"},{"lineNumber":72,"author":{"gitId":"eksinyue"},"content":"        tasks.addTask(task2);"},{"lineNumber":73,"author":{"gitId":"eksinyue"},"content":"        tasks.addTask(task3);"},{"lineNumber":74,"author":{"gitId":"eksinyue"},"content":"        assertEquals(tasks.getTask(2), task3);"},{"lineNumber":75,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":77,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":78,"author":{"gitId":"eksinyue"},"content":"}"}],"authorContributionMap":{"eksinyue":78}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"class TaskTest {"},{"lineNumber":8,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":9,"author":{"gitId":"eksinyue"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"eksinyue"},"content":"    void isDone_newTask_notDone() {"},{"lineNumber":11,"author":{"gitId":"eksinyue"},"content":"        Task task \u003d new Task(\"task\");"},{"lineNumber":12,"author":{"gitId":"eksinyue"},"content":"        assertFalse(task.isDone());"},{"lineNumber":13,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":15,"author":{"gitId":"eksinyue"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"eksinyue"},"content":"    void markAsDone() {"},{"lineNumber":17,"author":{"gitId":"eksinyue"},"content":"        Task task \u003d new Task(\"task\");"},{"lineNumber":18,"author":{"gitId":"eksinyue"},"content":"        task.markAsDone();"},{"lineNumber":19,"author":{"gitId":"eksinyue"},"content":"        assertTrue(task.isDone());"},{"lineNumber":20,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":22,"author":{"gitId":"eksinyue"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"    void getStatusIcon_notDoneTask() {"},{"lineNumber":24,"author":{"gitId":"eksinyue"},"content":"        Task task \u003d new Task(\"task\");"},{"lineNumber":25,"author":{"gitId":"eksinyue"},"content":"        assertEquals(\" \", task.getStatusIcon());"},{"lineNumber":26,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"eksinyue"},"content":""},{"lineNumber":28,"author":{"gitId":"eksinyue"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"eksinyue"},"content":"    void getStatusIcon_DoneTask() {"},{"lineNumber":30,"author":{"gitId":"eksinyue"},"content":"        Task task \u003d new Task(\"task\");"},{"lineNumber":31,"author":{"gitId":"eksinyue"},"content":"        task.markAsDone();"},{"lineNumber":32,"author":{"gitId":"eksinyue"},"content":"        assertEquals(\"\\u2718\", task.getStatusIcon());"},{"lineNumber":33,"author":{"gitId":"eksinyue"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"eksinyue"},"content":"}"}],"authorContributionMap":{"eksinyue":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"eksinyue"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"eksinyue"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"eksinyue"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"eksinyue"},"content":"list"},{"lineNumber":5,"author":{"gitId":"eksinyue"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"eksinyue"},"content":"list"},{"lineNumber":7,"author":{"gitId":"eksinyue"},"content":"bye"}],"authorContributionMap":{"eksinyue":7}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"eksinyue"},"content":"java -Dfile.encoding\u003dUTF-8 -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"-":37,"eksinyue":1}}]
