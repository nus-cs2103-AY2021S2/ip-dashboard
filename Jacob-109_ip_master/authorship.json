[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"import java.util.Date;"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"import java. text. DateFormat;"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"    protected LocalDate date;"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"    public Deadline(String description, LocalDate date) {"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"        this.date \u003d date;"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"    public LocalDate getBy() {"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"        return this.date;"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"    public String getDateString() {"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"        return this.date.toString();"},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(formatter) + \")\";"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":"}"}],"authorContributionMap":{"Jacob-109":29}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"import java.io.File;"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"    private static void saveTasks(ArrayList\u003cTask\u003e list, File f) throws IOException {"},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"        FileWriter fw \u003d new FileWriter(f);"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"        for (Task temp : list) {"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"            if (temp instanceof Deadline) {"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"                fw.write(\"D|\" + temp.getStatusIcon() + \"|\" + temp.getDescription().trim() + \"|\"+ ((Deadline) temp).getDateString() + \"\\n\");"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"            } else if (temp instanceof Event) {"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"                fw.write(\"E|\" + temp.getStatusIcon() + \"|\" + temp.getDescription() + \"|\" +((Event) temp).getDatetime() + \"\\n\");"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"            } else {"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"                fw.write(\"T|\" + temp.getStatusIcon() + \"|\" + temp.getDescription() + \"\\n\");"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"            }"},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":"        fw.close();"},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":"    private static void loadTasks(ArrayList\u003cTask\u003e list, File f) throws IOException {"},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"        Scanner sc \u003d new Scanner(f);"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":"            String s \u003d sc.nextLine();"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":"            s \u003d     s.trim();"},{"lineNumber":31,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":32,"author":{"gitId":"Jacob-109"},"content":"            String[] strArray \u003d s.split(\"\\\\|\", 4);"},{"lineNumber":33,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":34,"author":{"gitId":"Jacob-109"},"content":"            if (strArray[0].trim().equals(\"D\")) {"},{"lineNumber":35,"author":{"gitId":"Jacob-109"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":36,"author":{"gitId":"Jacob-109"},"content":"                LocalDate date \u003d LocalDate.parse(strArray[3],formatter);"},{"lineNumber":37,"author":{"gitId":"Jacob-109"},"content":"                Deadline deadline \u003d new Deadline(strArray[2].trim(), date);"},{"lineNumber":38,"author":{"gitId":"Jacob-109"},"content":"                if (strArray[1].trim().equals(\"[Done]\")) {"},{"lineNumber":39,"author":{"gitId":"Jacob-109"},"content":"                    deadline.isDone \u003d true;"},{"lineNumber":40,"author":{"gitId":"Jacob-109"},"content":"                } else if (strArray[1].trim().equals(\"[Incompleted]\")){"},{"lineNumber":41,"author":{"gitId":"Jacob-109"},"content":"                    deadline.isDone \u003d false;"},{"lineNumber":42,"author":{"gitId":"Jacob-109"},"content":"                }"},{"lineNumber":43,"author":{"gitId":"Jacob-109"},"content":"                list.add(deadline);"},{"lineNumber":44,"author":{"gitId":"Jacob-109"},"content":"            } else if (strArray[0].trim().equals(\"E\")) {"},{"lineNumber":45,"author":{"gitId":"Jacob-109"},"content":"                Event event \u003d new Event(strArray[2].trim(), strArray[3].trim());"},{"lineNumber":46,"author":{"gitId":"Jacob-109"},"content":"                if (strArray[1].trim().equals(\"[Done]\")) {"},{"lineNumber":47,"author":{"gitId":"Jacob-109"},"content":"                    event.isDone \u003d true;"},{"lineNumber":48,"author":{"gitId":"Jacob-109"},"content":"                } else if (strArray[1].trim().equals(\"[Incompleted]\")) {"},{"lineNumber":49,"author":{"gitId":"Jacob-109"},"content":"                    event.isDone \u003d false;"},{"lineNumber":50,"author":{"gitId":"Jacob-109"},"content":"                }"},{"lineNumber":51,"author":{"gitId":"Jacob-109"},"content":"                list.add(event);"},{"lineNumber":52,"author":{"gitId":"Jacob-109"},"content":"            } else {"},{"lineNumber":53,"author":{"gitId":"Jacob-109"},"content":"                ToDo todo \u003d new ToDo(strArray[2].trim());"},{"lineNumber":54,"author":{"gitId":"Jacob-109"},"content":"                if (strArray[1].trim().equals(\"[Done]\")) {"},{"lineNumber":55,"author":{"gitId":"Jacob-109"},"content":"                    todo.isDone \u003d true;"},{"lineNumber":56,"author":{"gitId":"Jacob-109"},"content":"                } else if (strArray[1].trim().equals(\"[Incompleted]\")) {"},{"lineNumber":57,"author":{"gitId":"Jacob-109"},"content":"                    todo.isDone \u003d false;"},{"lineNumber":58,"author":{"gitId":"Jacob-109"},"content":"                }"},{"lineNumber":59,"author":{"gitId":"Jacob-109"},"content":"                list.add(todo);"},{"lineNumber":60,"author":{"gitId":"Jacob-109"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"Jacob-109"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":64,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":65,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":66,"author":{"gitId":"Jacob-109"},"content":"    public static void main(String[] args) throws DukeException{"},{"lineNumber":67,"author":{"gitId":"Jacob-109"},"content":"        File file \u003d new File(\"data/DukeData.txt\");"},{"lineNumber":68,"author":{"gitId":"Jacob-109"},"content":"        File dir \u003d new File(\"data/\");"},{"lineNumber":69,"author":{"gitId":"Jacob-109"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":70,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":71,"author":{"gitId":"Jacob-109"},"content":"        try {"},{"lineNumber":72,"author":{"gitId":"Jacob-109"},"content":"            if(!dir.exists()) {"},{"lineNumber":73,"author":{"gitId":"Jacob-109"},"content":"                dir.mkdirs();"},{"lineNumber":74,"author":{"gitId":"Jacob-109"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"Jacob-109"},"content":"            if(!file.exists()) {"},{"lineNumber":76,"author":{"gitId":"Jacob-109"},"content":"                file.createNewFile();"},{"lineNumber":77,"author":{"gitId":"Jacob-109"},"content":"            }"},{"lineNumber":78,"author":{"gitId":"Jacob-109"},"content":"            loadTasks(list, file);"},{"lineNumber":79,"author":{"gitId":"Jacob-109"},"content":"        } catch (Exception e) {"},{"lineNumber":80,"author":{"gitId":"Jacob-109"},"content":"            e.getStackTrace();"},{"lineNumber":81,"author":{"gitId":"Jacob-109"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":84,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":85,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":86,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":87,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":89,"author":{"gitId":"Jacob-109"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":90,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":91,"author":{"gitId":"Jacob-109"},"content":"        while(sc.hasNext()) {"},{"lineNumber":92,"author":{"gitId":"Jacob-109"},"content":"            String word \u003d sc.nextLine();"},{"lineNumber":93,"author":{"gitId":"Jacob-109"},"content":"            if (word.equals(\"bye\")) {"},{"lineNumber":94,"author":{"gitId":"Jacob-109"},"content":"                System.out.println(\"Bye, hope to see you again!\");"},{"lineNumber":95,"author":{"gitId":"Jacob-109"},"content":"                break;"},{"lineNumber":96,"author":{"gitId":"Jacob-109"},"content":"            } else if (word.equals(\"list\")) {"},{"lineNumber":97,"author":{"gitId":"Jacob-109"},"content":"                int size \u003d list.size();"},{"lineNumber":98,"author":{"gitId":"Jacob-109"},"content":"                System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":99,"author":{"gitId":"Jacob-109"},"content":"                for (int i \u003d 1; i \u003c\u003d size; i++) {"},{"lineNumber":100,"author":{"gitId":"Jacob-109"},"content":"                    System.out.println(i + \". \" + list.get(i - 1).toString());"},{"lineNumber":101,"author":{"gitId":"Jacob-109"},"content":"                }"},{"lineNumber":102,"author":{"gitId":"Jacob-109"},"content":"            } else if (word.contains(\"done\")) {"},{"lineNumber":103,"author":{"gitId":"Jacob-109"},"content":"                String[] strArray \u003d word.split(\" \");"},{"lineNumber":104,"author":{"gitId":"Jacob-109"},"content":"                int value \u003d Integer.parseInt(strArray[1]);"},{"lineNumber":105,"author":{"gitId":"Jacob-109"},"content":"                Task complete \u003d list.get(value - 1);"},{"lineNumber":106,"author":{"gitId":"Jacob-109"},"content":"                complete.markAsDone();"},{"lineNumber":107,"author":{"gitId":"Jacob-109"},"content":"                System.out.println(\" Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":108,"author":{"gitId":"Jacob-109"},"content":"                System.out.println(complete.toString());"},{"lineNumber":109,"author":{"gitId":"Jacob-109"},"content":"            } else if (word.contains(\"delete\")) {"},{"lineNumber":110,"author":{"gitId":"Jacob-109"},"content":"                String[] arr \u003d word.split(\" \");"},{"lineNumber":111,"author":{"gitId":"Jacob-109"},"content":"                int value \u003d Integer.parseInt(arr[1]);"},{"lineNumber":112,"author":{"gitId":"Jacob-109"},"content":"                Task remove \u003d list.get(value - 1);"},{"lineNumber":113,"author":{"gitId":"Jacob-109"},"content":"                list.remove(value - 1);"},{"lineNumber":114,"author":{"gitId":"Jacob-109"},"content":"                System.out.println(\"Noted. I\u0027ve removed this task: \");"},{"lineNumber":115,"author":{"gitId":"Jacob-109"},"content":"                System.out.println(remove.toString());"},{"lineNumber":116,"author":{"gitId":"Jacob-109"},"content":"                System.out.println(\"Now you have \" + list.size() + \" tasks in the list\");"},{"lineNumber":117,"author":{"gitId":"Jacob-109"},"content":"            } else if ((word.contains(\"todo\")) || (word.contains(\"event\")) || (word.contains(\"deadline\"))) {"},{"lineNumber":118,"author":{"gitId":"Jacob-109"},"content":"                if (word.contains(\"todo\")) {"},{"lineNumber":119,"author":{"gitId":"Jacob-109"},"content":"                    String save \u003d word.replaceAll(\"todo\",\"\");"},{"lineNumber":120,"author":{"gitId":"Jacob-109"},"content":"                    ToDo t \u003d new ToDo(save);"},{"lineNumber":121,"author":{"gitId":"Jacob-109"},"content":"                    if (save.equals(\"\")) {"},{"lineNumber":122,"author":{"gitId":"Jacob-109"},"content":"                        Thread.setDefaultUncaughtExceptionHandler((u, e) -\u003e System.err.println(e.getMessage()));"},{"lineNumber":123,"author":{"gitId":"Jacob-109"},"content":"                        throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":124,"author":{"gitId":"Jacob-109"},"content":"                    }"},{"lineNumber":125,"author":{"gitId":"Jacob-109"},"content":"                    list.add(t);"},{"lineNumber":126,"author":{"gitId":"Jacob-109"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":127,"author":{"gitId":"Jacob-109"},"content":"                    System.out.println(t.toString());"},{"lineNumber":128,"author":{"gitId":"Jacob-109"},"content":"                } else if (word.contains(\"event\")) {"},{"lineNumber":129,"author":{"gitId":"Jacob-109"},"content":"                    String[] info \u003d word.split(\"/at\");"},{"lineNumber":130,"author":{"gitId":"Jacob-109"},"content":"                    info[0] \u003d info[0].replaceAll(\"event\",\"\");"},{"lineNumber":131,"author":{"gitId":"Jacob-109"},"content":"                    Event e \u003d new Event(info[0],info[1]);"},{"lineNumber":132,"author":{"gitId":"Jacob-109"},"content":"                    list.add(e);"},{"lineNumber":133,"author":{"gitId":"Jacob-109"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":134,"author":{"gitId":"Jacob-109"},"content":"                    System.out.println(e.toString());"},{"lineNumber":135,"author":{"gitId":"Jacob-109"},"content":"                } else if (word.contains(\"deadline\")) {"},{"lineNumber":136,"author":{"gitId":"Jacob-109"},"content":"                    String[] input \u003d word.split(\"/by \");"},{"lineNumber":137,"author":{"gitId":"Jacob-109"},"content":"                    input[0] \u003d input[0].replaceAll(\"deadline\", \"\");"},{"lineNumber":138,"author":{"gitId":"Jacob-109"},"content":"                    LocalDate date \u003dLocalDate.parse(input[1], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":139,"author":{"gitId":"Jacob-109"},"content":"                    Deadline d \u003d new Deadline(input[0], date);"},{"lineNumber":140,"author":{"gitId":"Jacob-109"},"content":"                    list.add(d);"},{"lineNumber":141,"author":{"gitId":"Jacob-109"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":142,"author":{"gitId":"Jacob-109"},"content":"                    System.out.println(d.toString());"},{"lineNumber":143,"author":{"gitId":"Jacob-109"},"content":"                }"},{"lineNumber":144,"author":{"gitId":"Jacob-109"},"content":"                System.out.println(\"Now you have \" + list.size() + \" tasks in the list\");"},{"lineNumber":145,"author":{"gitId":"Jacob-109"},"content":"            } else {"},{"lineNumber":146,"author":{"gitId":"Jacob-109"},"content":"                Thread.setDefaultUncaughtExceptionHandler((u, e) -\u003e System.err.println(e.getMessage()));"},{"lineNumber":147,"author":{"gitId":"Jacob-109"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":148,"author":{"gitId":"Jacob-109"},"content":"            }"},{"lineNumber":149,"author":{"gitId":"Jacob-109"},"content":"        }"},{"lineNumber":150,"author":{"gitId":"Jacob-109"},"content":"        try {"},{"lineNumber":151,"author":{"gitId":"Jacob-109"},"content":"            saveTasks(list, file);"},{"lineNumber":152,"author":{"gitId":"Jacob-109"},"content":"        } catch (IOException e) {"},{"lineNumber":153,"author":{"gitId":"Jacob-109"},"content":"            e.printStackTrace();"},{"lineNumber":154,"author":{"gitId":"Jacob-109"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Jacob-109":147,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"    public DukeException(String message) {"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"        super(message);"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"}"}],"authorContributionMap":{"Jacob-109":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"    protected String datetime;"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"    public Event(String description, String datetime) {"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"        this.datetime \u003d datetime;"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"    public String getDatetime() {"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"        return this.datetime;"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + datetime + \")\";"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"}"}],"authorContributionMap":{"Jacob-109":18}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"    public boolean isDone;"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"    public String getStatusIcon() {"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"        if (isDone) {"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"            return \"[Done]\";"},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"        } else {"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"            return \"[Incompleted]\";// unsure why tick and cross did not show as intended"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"            // hence the change to Done and Incompleted."},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"    public String getDescription() {"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"        return this.description;"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":"    public void markAsDone() {"},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"        this.isDone \u003d true;"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":"        return this.getStatusIcon()  + this.description;"},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":"}"}],"authorContributionMap":{"Jacob-109":30}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"public class ToDo extends Task {"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"    public ToDo(String description) {"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"        super(description);"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"}"}],"authorContributionMap":{"Jacob-109":11}},{"path":"src/main/java/data/DukeData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"D|[Done]|return|2000-10-20"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"T|[Done]|run"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"T|[Incompleted]|run"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"E|[Done]|project meeting|Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"E|[Incompleted]|project meeting|Mon 2-5pm"}],"authorContributionMap":{"Jacob-109":5}}]
