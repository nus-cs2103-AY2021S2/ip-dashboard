[{"path":"data/DukeData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"T|[Done]|run"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"T|[Incompleted]|stop"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"T|[Incompleted]| run"}],"authorContributionMap":{"Jacob-109":3}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"import java.util.Date;"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"import java. text. DateFormat;"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"    protected LocalDate date;"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"     * Constructor method."},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"     * @param description User input description of deadline"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"     * @param date Date of the deadline"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"    public Deadline(String description, LocalDate date) {"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"        super(description);"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"        this.date \u003d date;"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"     * Method to get the date of the deadline."},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":"     * @return a Date object of the deadline."},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"    public LocalDate getBy() {"},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":"        return this.date;"},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":"     * Method to get the date of the deadline as a string object"},{"lineNumber":31,"author":{"gitId":"Jacob-109"},"content":"     * @return a String object of the deadline."},{"lineNumber":32,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Jacob-109"},"content":"    public String getDateString() {"},{"lineNumber":34,"author":{"gitId":"Jacob-109"},"content":"        assert this.date.toString().length() \u003e 0;"},{"lineNumber":35,"author":{"gitId":"Jacob-109"},"content":"        return this.date.toString();"},{"lineNumber":36,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":38,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"Jacob-109"},"content":"     * Method to return a Deadline object in the specified format"},{"lineNumber":40,"author":{"gitId":"Jacob-109"},"content":"     * @return Formatted String of Deadline"},{"lineNumber":41,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"Jacob-109"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"Jacob-109"},"content":"    public String toString() {"},{"lineNumber":44,"author":{"gitId":"Jacob-109"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":45,"author":{"gitId":"Jacob-109"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(formatter) + \")\";"},{"lineNumber":46,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Jacob-109"},"content":"}"}],"authorContributionMap":{"Jacob-109":47}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"import java.io.File;"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"import java.io.FileWriter;"},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":" * Main class."},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":" */"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"    private Storage storage;"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"    private TaskList tasks;"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"    private Ui ui;"},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"     * Constructor method"},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":"     * @param filePath of the saved file"},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"     * @throws IOException if user IO is incorrect"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":"    public Duke(String filePath) throws IOException {"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":"        ui \u003d new Ui();"},{"lineNumber":31,"author":{"gitId":"Jacob-109"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":32,"author":{"gitId":"Jacob-109"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":35,"author":{"gitId":"Jacob-109"},"content":"    /*public void run() {"},{"lineNumber":36,"author":{"gitId":"Jacob-109"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":37,"author":{"gitId":"Jacob-109"},"content":"        ui.reply();"},{"lineNumber":38,"author":{"gitId":"Jacob-109"},"content":"        storage.loadTasks(tasks,);"},{"lineNumber":39,"author":{"gitId":"Jacob-109"},"content":"        File file \u003d new File(\"data/DukeData.txt\");"},{"lineNumber":40,"author":{"gitId":"Jacob-109"},"content":"        File dir \u003d new File(\"data/\");"},{"lineNumber":41,"author":{"gitId":"Jacob-109"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"Jacob-109"},"content":"            if(!dir.exists()) {"},{"lineNumber":43,"author":{"gitId":"Jacob-109"},"content":"                dir.mkdirs();"},{"lineNumber":44,"author":{"gitId":"Jacob-109"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"Jacob-109"},"content":"            if(!file.exists()) {"},{"lineNumber":46,"author":{"gitId":"Jacob-109"},"content":"                file.createNewFile();"},{"lineNumber":47,"author":{"gitId":"Jacob-109"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"Jacob-109"},"content":"            storage.loadTasks(tasks, file);"},{"lineNumber":49,"author":{"gitId":"Jacob-109"},"content":"        } catch (Exception e) {"},{"lineNumber":50,"author":{"gitId":"Jacob-109"},"content":"            e.getStackTrace();"},{"lineNumber":51,"author":{"gitId":"Jacob-109"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"Jacob-109"},"content":"        Parser parser \u003d new Parser(tasks, ui);"},{"lineNumber":53,"author":{"gitId":"Jacob-109"},"content":"        while (true) {"},{"lineNumber":54,"author":{"gitId":"Jacob-109"},"content":"            String command \u003d sc.nextLine();"},{"lineNumber":55,"author":{"gitId":"Jacob-109"},"content":"            parser.insertCommand(command);"},{"lineNumber":56,"author":{"gitId":"Jacob-109"},"content":"            parser.process();"},{"lineNumber":57,"author":{"gitId":"Jacob-109"},"content":"            if (parser.isEnd()) {"},{"lineNumber":58,"author":{"gitId":"Jacob-109"},"content":"                break;"},{"lineNumber":59,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":60,"author":{"gitId":"Jacob-109"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"Jacob-109"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"Jacob-109"},"content":"        System.exit(0);"},{"lineNumber":63,"author":{"gitId":"Jacob-109"},"content":"    }*/"},{"lineNumber":64,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":65,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"Jacob-109"},"content":"     * Method to run Duke"},{"lineNumber":67,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"Jacob-109"},"content":"    public void run() {"},{"lineNumber":69,"author":{"gitId":"Jacob-109"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":70,"author":{"gitId":"Jacob-109"},"content":"        ui.reply();"},{"lineNumber":71,"author":{"gitId":"Jacob-109"},"content":"        Parser parser \u003d new Parser(tasks, ui);"},{"lineNumber":72,"author":{"gitId":"Jacob-109"},"content":"        while (true) {"},{"lineNumber":73,"author":{"gitId":"Jacob-109"},"content":"            String command \u003d sc.nextLine();"},{"lineNumber":74,"author":{"gitId":"Jacob-109"},"content":"            parser.insertCommand(command);"},{"lineNumber":75,"author":{"gitId":"Jacob-109"},"content":"            parser.process();"},{"lineNumber":76,"author":{"gitId":"Jacob-109"},"content":"            if (parser.isEnd()) {"},{"lineNumber":77,"author":{"gitId":"Jacob-109"},"content":"                break;"},{"lineNumber":78,"author":{"gitId":"Jacob-109"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"Jacob-109"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"Jacob-109"},"content":"        System.exit(0);"},{"lineNumber":81,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":83,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"Jacob-109"},"content":"     * Main method of Duke"},{"lineNumber":85,"author":{"gitId":"Jacob-109"},"content":"     * @param args command line arguments"},{"lineNumber":86,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"Jacob-109"},"content":"    public static void main(String[] args) throws IOException{"},{"lineNumber":88,"author":{"gitId":"Jacob-109"},"content":"        new Duke(\"data/DukeData.txt\").run();"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Jacob-109":86,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"     * Constructor method."},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"     * @param message Error message."},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"    public DukeException(String message) {"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"        super(message);"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"}"}],"authorContributionMap":{"Jacob-109":9}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"    protected String datetime;"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"     * Constructor method."},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"     * @param description User input description of Event"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"     * @param datetime Date and time of the Event"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"    public Event(String description, String datetime) {"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"        this.datetime \u003d datetime;"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"     * Method to get the datetime of the Event"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"     * @return a String object of the datetime of the Event"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"    public String getDatetime() {"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"        assert this.datetime.length() \u003e 0;"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"        return this.datetime;"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":"     * Method to return a the Event object in the specified format"},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"     * @return Formatted String of Event"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + datetime + \")\";"},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":"}"}],"authorContributionMap":{"Jacob-109":30}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"/*"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"public class Launcher {"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"    public static void main(String[] args) {"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"        Application.launch(Duke.class, args);"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"}"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"*/"}],"authorContributionMap":{"Jacob-109":12}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"    private String command;"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"    private TaskList taskList;"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"    private Ui ui;"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"    private boolean isEnd;"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"     * Constructor method"},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"     * @param tasklist which contains the Task objects"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"     * @param ui which handles the response"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"    public Parser(TaskList tasklist, Ui ui) {"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"        this.command \u003d \"\";"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"        this.taskList \u003d tasklist;"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"        this.ui \u003d ui;"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"        this.isEnd \u003d false;"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"     * Method to insert command"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":"    public void insertCommand(String command) {"},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"        this.command \u003d command;"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"Jacob-109"},"content":"     * Method to check if Duke should stop running"},{"lineNumber":32,"author":{"gitId":"Jacob-109"},"content":"     * @return a boolean value"},{"lineNumber":33,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"Jacob-109"},"content":"    public boolean isEnd() {"},{"lineNumber":35,"author":{"gitId":"Jacob-109"},"content":"        return this.isEnd;"},{"lineNumber":36,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":38,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"Jacob-109"},"content":"     * Method to parse the different commands of Duke"},{"lineNumber":40,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"Jacob-109"},"content":"    public void process() {"},{"lineNumber":42,"author":{"gitId":"Jacob-109"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"Jacob-109"},"content":"            if (command.equals(\"list\")) {"},{"lineNumber":44,"author":{"gitId":"Jacob-109"},"content":"                int size \u003d taskList.numOfTasks();"},{"lineNumber":45,"author":{"gitId":"Jacob-109"},"content":"                System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":46,"author":{"gitId":"Jacob-109"},"content":"                for (int i \u003d 1; i \u003c\u003d size; i++) {"},{"lineNumber":47,"author":{"gitId":"Jacob-109"},"content":"                    System.out.println(i + \". \" + taskList.getTask(i - 1).toString());"},{"lineNumber":48,"author":{"gitId":"Jacob-109"},"content":"                }"},{"lineNumber":49,"author":{"gitId":"Jacob-109"},"content":"            } else if (command.contains(\"todo\")) {"},{"lineNumber":50,"author":{"gitId":"Jacob-109"},"content":"                String[] save \u003d command.split(\" \");"},{"lineNumber":51,"author":{"gitId":"Jacob-109"},"content":"                ToDo t \u003d new ToDo(\"\",\"\");"},{"lineNumber":52,"author":{"gitId":"Jacob-109"},"content":"                if (save.length \u003e 2) {"},{"lineNumber":53,"author":{"gitId":"Jacob-109"},"content":"                    t.setDescription(save[1]);"},{"lineNumber":54,"author":{"gitId":"Jacob-109"},"content":"                    t.setTag(save[2]);"},{"lineNumber":55,"author":{"gitId":"Jacob-109"},"content":"                } else {"},{"lineNumber":56,"author":{"gitId":"Jacob-109"},"content":"                    t.setDescription(save[1]);"},{"lineNumber":57,"author":{"gitId":"Jacob-109"},"content":"                    t.setTag(\"\");"},{"lineNumber":58,"author":{"gitId":"Jacob-109"},"content":"                }"},{"lineNumber":59,"author":{"gitId":"Jacob-109"},"content":"                if (save.equals(\"\")) {"},{"lineNumber":60,"author":{"gitId":"Jacob-109"},"content":"                    throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":61,"author":{"gitId":"Jacob-109"},"content":"                }"},{"lineNumber":62,"author":{"gitId":"Jacob-109"},"content":"                taskList.addTask(t);"},{"lineNumber":63,"author":{"gitId":"Jacob-109"},"content":"                taskList.checkForDuplicate();"},{"lineNumber":64,"author":{"gitId":"Jacob-109"},"content":"                ui.print(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":65,"author":{"gitId":"Jacob-109"},"content":"                ui.print(t.toString());"},{"lineNumber":66,"author":{"gitId":"Jacob-109"},"content":"                Integer numOfTask \u003d taskList.numOfTasks();"},{"lineNumber":67,"author":{"gitId":"Jacob-109"},"content":"                ui.print(\"Now you have \" + numOfTask.toString() + \" tasks in the list.\");"},{"lineNumber":68,"author":{"gitId":"Jacob-109"},"content":"            } else if (command.contains(\"deadline\")) {"},{"lineNumber":69,"author":{"gitId":"Jacob-109"},"content":"                String[] input \u003d command.split(\"/by \");"},{"lineNumber":70,"author":{"gitId":"Jacob-109"},"content":"                input[0] \u003d input[0].replaceAll(\"deadline\", \"\");"},{"lineNumber":71,"author":{"gitId":"Jacob-109"},"content":"                LocalDate date \u003dLocalDate.parse(input[1], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":72,"author":{"gitId":"Jacob-109"},"content":"                Deadline d \u003d new Deadline(input[0], date);"},{"lineNumber":73,"author":{"gitId":"Jacob-109"},"content":"                taskList.addTask(d);"},{"lineNumber":74,"author":{"gitId":"Jacob-109"},"content":"                taskList.checkForDuplicate();"},{"lineNumber":75,"author":{"gitId":"Jacob-109"},"content":"                ui.print(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":76,"author":{"gitId":"Jacob-109"},"content":"                ui.print(d.toString());"},{"lineNumber":77,"author":{"gitId":"Jacob-109"},"content":"                Integer numOfTask \u003d taskList.numOfTasks();"},{"lineNumber":78,"author":{"gitId":"Jacob-109"},"content":"                ui.print(\"Now you have \" + numOfTask.toString() + \" tasks in the list.\");"},{"lineNumber":79,"author":{"gitId":"Jacob-109"},"content":"            } else if (command.contains(\"event\")) {"},{"lineNumber":80,"author":{"gitId":"Jacob-109"},"content":"                String[] info \u003d command.split(\"/at\");"},{"lineNumber":81,"author":{"gitId":"Jacob-109"},"content":"                info[0] \u003d info[0].replaceAll(\"event\",\"\");"},{"lineNumber":82,"author":{"gitId":"Jacob-109"},"content":"                Event e \u003d new Event(info[0],info[1]);"},{"lineNumber":83,"author":{"gitId":"Jacob-109"},"content":"                taskList.addTask(e);"},{"lineNumber":84,"author":{"gitId":"Jacob-109"},"content":"                taskList.checkForDuplicate();"},{"lineNumber":85,"author":{"gitId":"Jacob-109"},"content":"                ui.print(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":86,"author":{"gitId":"Jacob-109"},"content":"                ui.print(e.toString());"},{"lineNumber":87,"author":{"gitId":"Jacob-109"},"content":"                Integer numOfTask \u003d taskList.numOfTasks();"},{"lineNumber":88,"author":{"gitId":"Jacob-109"},"content":"                ui.print(\"Now you have \" + numOfTask.toString() + \" tasks in the list.\");"},{"lineNumber":89,"author":{"gitId":"Jacob-109"},"content":"            } else if (command.contains(\"done\")) {"},{"lineNumber":90,"author":{"gitId":"Jacob-109"},"content":"                String[] strArray \u003d command.split(\" \");"},{"lineNumber":91,"author":{"gitId":"Jacob-109"},"content":"                int value \u003d Integer.parseInt(strArray[1]);"},{"lineNumber":92,"author":{"gitId":"Jacob-109"},"content":"                Task complete \u003d taskList.getTask(value - 1);"},{"lineNumber":93,"author":{"gitId":"Jacob-109"},"content":"                complete.markAsDone();"},{"lineNumber":94,"author":{"gitId":"Jacob-109"},"content":"                ui.print(\" Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":95,"author":{"gitId":"Jacob-109"},"content":"                ui.print(complete.toString());"},{"lineNumber":96,"author":{"gitId":"Jacob-109"},"content":"            } else if (command.contains(\"delete\")) {"},{"lineNumber":97,"author":{"gitId":"Jacob-109"},"content":"                String[] arr \u003d command.split(\" \");"},{"lineNumber":98,"author":{"gitId":"Jacob-109"},"content":"                int value \u003d Integer.parseInt(arr[1]);"},{"lineNumber":99,"author":{"gitId":"Jacob-109"},"content":"                Task remove \u003d taskList.getTask(value - 1);"},{"lineNumber":100,"author":{"gitId":"Jacob-109"},"content":"                taskList.deleteTask(value - 1);"},{"lineNumber":101,"author":{"gitId":"Jacob-109"},"content":"                ui.print(\"Noted. I\u0027ve removed this task: \");"},{"lineNumber":102,"author":{"gitId":"Jacob-109"},"content":"                ui.print(remove.toString());"},{"lineNumber":103,"author":{"gitId":"Jacob-109"},"content":"                Integer numOfTask \u003d taskList.numOfTasks();"},{"lineNumber":104,"author":{"gitId":"Jacob-109"},"content":"                ui.print(\"Now you have \" + numOfTask.toString() + \" tasks in the list.\");"},{"lineNumber":105,"author":{"gitId":"Jacob-109"},"content":"            } else if (command.contains(\"find\")) {"},{"lineNumber":106,"author":{"gitId":"Jacob-109"},"content":"                String[] find \u003d command.split(\" \");"},{"lineNumber":107,"author":{"gitId":"Jacob-109"},"content":"                String keyword \u003d find[1];"},{"lineNumber":108,"author":{"gitId":"Jacob-109"},"content":"                ArrayList\u003cTask\u003e output \u003d new ArrayList\u003c\u003e();"},{"lineNumber":109,"author":{"gitId":"Jacob-109"},"content":"                for (int i \u003d 0; i \u003c taskList.numOfTasks(); i++) {"},{"lineNumber":110,"author":{"gitId":"Jacob-109"},"content":"                    Task check \u003d taskList.getTask(i);"},{"lineNumber":111,"author":{"gitId":"Jacob-109"},"content":"                    if (check.getDescription().contains(keyword)) {"},{"lineNumber":112,"author":{"gitId":"Jacob-109"},"content":"                        output.add(check);"},{"lineNumber":113,"author":{"gitId":"Jacob-109"},"content":"                    }"},{"lineNumber":114,"author":{"gitId":"Jacob-109"},"content":"                }"},{"lineNumber":115,"author":{"gitId":"Jacob-109"},"content":"                ui.print(\"Here are the matching tasks in your list:\");"},{"lineNumber":116,"author":{"gitId":"Jacob-109"},"content":"                for (int j \u003d 0; j \u003c output.size(); j++) {"},{"lineNumber":117,"author":{"gitId":"Jacob-109"},"content":"                    ui.print(output.get(j).toString());"},{"lineNumber":118,"author":{"gitId":"Jacob-109"},"content":"                }"},{"lineNumber":119,"author":{"gitId":"Jacob-109"},"content":"            } else if (command.equals(\"bye\")) {"},{"lineNumber":120,"author":{"gitId":"Jacob-109"},"content":"                ui.print(\"Bye! Hope to see you again soon!\");"},{"lineNumber":121,"author":{"gitId":"Jacob-109"},"content":"                this.isEnd \u003d true;"},{"lineNumber":122,"author":{"gitId":"Jacob-109"},"content":"            } else {"},{"lineNumber":123,"author":{"gitId":"Jacob-109"},"content":"                throw new DukeException(\"Oops! I\u0027m sorry, but I don\u0027t know what that means!\");"},{"lineNumber":124,"author":{"gitId":"Jacob-109"},"content":"            }"},{"lineNumber":125,"author":{"gitId":"Jacob-109"},"content":"        } catch (DukeException e) {"},{"lineNumber":126,"author":{"gitId":"Jacob-109"},"content":"            System.out.println(e);"},{"lineNumber":127,"author":{"gitId":"Jacob-109"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"Jacob-109"},"content":"}"}],"authorContributionMap":{"Jacob-109":129}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"import java.io.FileWriter;"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"public class Storage {"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"    private File file;"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"     * Constructor method"},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"     * @param filePath of the saved file"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"    public Storage(String filePath) throws IOException {"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"        this.file \u003d new File(filePath);"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"        if (file.createNewFile()) {"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"            System.out.println(\"file created!\");"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"        } else {"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"            System.out.println(\"file loaded!\");"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"    /*public static void saveTasks(TaskList list, File f) throws IOException {"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"        FileWriter fw \u003d new FileWriter(f);"},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":"        for (Task temp : list) {"},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"            if (temp instanceof Deadline) {"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":"                fw.write(\"D|\" + temp.getStatusIcon() + \"|\" + temp.getDescription().trim() + \"|\"+ ((Deadline) temp).getDateString() + \"\\n\");"},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":"            } else if (temp instanceof Event) {"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":"                fw.write(\"E|\" + temp.getStatusIcon() + \"|\" + temp.getDescription() + \"|\" +((Event) temp).getDatetime() + \"\\n\");"},{"lineNumber":31,"author":{"gitId":"Jacob-109"},"content":"            } else {"},{"lineNumber":32,"author":{"gitId":"Jacob-109"},"content":"                fw.write(\"T|\" + temp.getStatusIcon() + \"|\" + temp.getDescription() + \"\\n\");"},{"lineNumber":33,"author":{"gitId":"Jacob-109"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"Jacob-109"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"Jacob-109"},"content":"        fw.close();"},{"lineNumber":36,"author":{"gitId":"Jacob-109"},"content":"    }*/"},{"lineNumber":37,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":38,"author":{"gitId":"Jacob-109"},"content":"    public static void loadTasks(TaskList list, File f) throws IOException {"},{"lineNumber":39,"author":{"gitId":"Jacob-109"},"content":"        Scanner sc \u003d new Scanner(f);"},{"lineNumber":40,"author":{"gitId":"Jacob-109"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":41,"author":{"gitId":"Jacob-109"},"content":"            String s \u003d sc.nextLine();"},{"lineNumber":42,"author":{"gitId":"Jacob-109"},"content":"            s \u003d     s.trim();"},{"lineNumber":43,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":44,"author":{"gitId":"Jacob-109"},"content":"            String[] strArray \u003d s.split(\"\\\\|\", 4);"},{"lineNumber":45,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":46,"author":{"gitId":"Jacob-109"},"content":"            if (strArray[0].trim().equals(\"D\")) {"},{"lineNumber":47,"author":{"gitId":"Jacob-109"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":48,"author":{"gitId":"Jacob-109"},"content":"                LocalDate date \u003d LocalDate.parse(strArray[3],formatter);"},{"lineNumber":49,"author":{"gitId":"Jacob-109"},"content":"                Deadline deadline \u003d new Deadline(strArray[2].trim(), date);"},{"lineNumber":50,"author":{"gitId":"Jacob-109"},"content":"                if (strArray[1].trim().equals(\"[Done]\")) {"},{"lineNumber":51,"author":{"gitId":"Jacob-109"},"content":"                    deadline.isDone \u003d true;"},{"lineNumber":52,"author":{"gitId":"Jacob-109"},"content":"                } else if (strArray[1].trim().equals(\"[Incompleted]\")) {"},{"lineNumber":53,"author":{"gitId":"Jacob-109"},"content":"                    deadline.isDone \u003d false;"},{"lineNumber":54,"author":{"gitId":"Jacob-109"},"content":"                }"},{"lineNumber":55,"author":{"gitId":"Jacob-109"},"content":"                list.addTask(deadline);"},{"lineNumber":56,"author":{"gitId":"Jacob-109"},"content":"            } else if (strArray[0].trim().equals(\"E\")) {"},{"lineNumber":57,"author":{"gitId":"Jacob-109"},"content":"                Event event \u003d new Event(strArray[2].trim(), strArray[3].trim());"},{"lineNumber":58,"author":{"gitId":"Jacob-109"},"content":"                if (strArray[1].trim().equals(\"[Done]\")) {"},{"lineNumber":59,"author":{"gitId":"Jacob-109"},"content":"                    event.isDone \u003d true;"},{"lineNumber":60,"author":{"gitId":"Jacob-109"},"content":"                } else if (strArray[1].trim().equals(\"[Incompleted]\")) {"},{"lineNumber":61,"author":{"gitId":"Jacob-109"},"content":"                    event.isDone \u003d false;"},{"lineNumber":62,"author":{"gitId":"Jacob-109"},"content":"                }"},{"lineNumber":63,"author":{"gitId":"Jacob-109"},"content":"                list.addTask(event);"},{"lineNumber":64,"author":{"gitId":"Jacob-109"},"content":"            } else {"},{"lineNumber":65,"author":{"gitId":"Jacob-109"},"content":"                ToDo todo \u003d new ToDo(strArray[2].trim());"},{"lineNumber":66,"author":{"gitId":"Jacob-109"},"content":"                if (strArray[1].trim().equals(\"[Done]\")) {"},{"lineNumber":67,"author":{"gitId":"Jacob-109"},"content":"                    todo.isDone \u003d true;"},{"lineNumber":68,"author":{"gitId":"Jacob-109"},"content":"                } else if (strArray[1].trim().equals(\"[Incompleted]\")) {"},{"lineNumber":69,"author":{"gitId":"Jacob-109"},"content":"                    todo.isDone \u003d false;"},{"lineNumber":70,"author":{"gitId":"Jacob-109"},"content":"                }"},{"lineNumber":71,"author":{"gitId":"Jacob-109"},"content":"                list.addTask(todo);"},{"lineNumber":72,"author":{"gitId":"Jacob-109"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"Jacob-109"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"Jacob-109"},"content":"}"}],"authorContributionMap":{"Jacob-109":75}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"    public String tag;"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"    public boolean isDone;"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"     * Constructor method"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"     * @param description of the Task"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"    public Task(String description) {"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"        this.description \u003d description;"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"        this.isDone \u003d false;"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"     * Method to return the corresponding String depending on completion of Task"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"     * @return Formatted String of Task completion"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"    public String getStatusIcon() {"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"        if (isDone) {"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"            return \"[Done]\";"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"        } else {"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"            return \"[Incompleted]\";// unsure why tick and cross did not show as intended"},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"            // hence the change to Done and Incompleted."},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":"     * Method to return the description of the Task"},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"     * @return description String"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":"    public String getDescription() {"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":"        assert this.description.length() \u003e 0;"},{"lineNumber":31,"author":{"gitId":"Jacob-109"},"content":"        return this.description;"},{"lineNumber":32,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"Jacob-109"},"content":"     * Method to mark a Task as completed"},{"lineNumber":35,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"Jacob-109"},"content":"    public void markAsDone() {"},{"lineNumber":37,"author":{"gitId":"Jacob-109"},"content":"        this.isDone \u003d true;"},{"lineNumber":38,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"Jacob-109"},"content":"     * Method to return a Task object in the specified format"},{"lineNumber":41,"author":{"gitId":"Jacob-109"},"content":"     * @return Formatted String of Task"},{"lineNumber":42,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"Jacob-109"},"content":"    public String toString() {"},{"lineNumber":44,"author":{"gitId":"Jacob-109"},"content":"        return this.getStatusIcon()  + this.description;"},{"lineNumber":45,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Jacob-109"},"content":"}"}],"authorContributionMap":{"Jacob-109":46}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"public class TaskList {"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"     * Constructor method."},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"    public TaskList() {"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"     * Method to get the Task"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"     * @param index of the Task in the TaskList"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"     * @return the Task object at the index"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"    public Task getTask(int index) {"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"        return tasks.get(index);"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"     * Method to add the Task"},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"     * @param task to be added"},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":"     * @return TaskList with task added"},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"    public void addTask(Task task) {"},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":"        tasks.add(task);"},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":"     * Method to delete the Task"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":"     * @param index of the Task in the TaskList"},{"lineNumber":31,"author":{"gitId":"Jacob-109"},"content":"     * @return Task object that was deleted"},{"lineNumber":32,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Jacob-109"},"content":"    public Task deleteTask(int index) {"},{"lineNumber":34,"author":{"gitId":"Jacob-109"},"content":"        Task deletedTask \u003d getTask(index);"},{"lineNumber":35,"author":{"gitId":"Jacob-109"},"content":"        tasks.remove(index);"},{"lineNumber":36,"author":{"gitId":"Jacob-109"},"content":"        return deletedTask;"},{"lineNumber":37,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"Jacob-109"},"content":"     * Method to check for duplicates in the TaskList"},{"lineNumber":40,"author":{"gitId":"Jacob-109"},"content":"     * @return delete the duplicated task in the TaskList"},{"lineNumber":41,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"Jacob-109"},"content":"    public void checkForDuplicate() {"},{"lineNumber":43,"author":{"gitId":"Jacob-109"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":44,"author":{"gitId":"Jacob-109"},"content":"        for (Task check: tasks ) {"},{"lineNumber":45,"author":{"gitId":"Jacob-109"},"content":"            if(!list.contains(check)) {"},{"lineNumber":46,"author":{"gitId":"Jacob-109"},"content":"                list.add(check);"},{"lineNumber":47,"author":{"gitId":"Jacob-109"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"Jacob-109"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"Jacob-109"},"content":"        tasks.clear();"},{"lineNumber":50,"author":{"gitId":"Jacob-109"},"content":"        tasks.addAll(list);"},{"lineNumber":51,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"Jacob-109"},"content":"     * Method to get the size of TaskList"},{"lineNumber":54,"author":{"gitId":"Jacob-109"},"content":"     * @return the size of TaskList"},{"lineNumber":55,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"Jacob-109"},"content":"    public int numOfTasks() {"},{"lineNumber":57,"author":{"gitId":"Jacob-109"},"content":"        return tasks.size();"},{"lineNumber":58,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"Jacob-109"},"content":"}"}],"authorContributionMap":{"Jacob-109":59}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"public class ToDo extends Task {"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"    protected String tag;"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"     * Constructor method."},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"     * @param description User input description of ToDo"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"     * @param tag User input tag for the Event"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"    public ToDo(String description,String tag) {"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"        this.tag \u003d tag;"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"    public void setDescription(String des) {"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"        this.description \u003d des;"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"    public void setTag(String tag) {"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"        this.tag \u003d tag;"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":"     * Method to return a ToDo object in the specified format"},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"     * @return Formatted String of ToDo"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":"        return \"[T]\" + super.toString() + \" #\" + this.tag;"},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":"}"}],"authorContributionMap":{"Jacob-109":30}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"public class Ui {"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"    private String response;"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"    public Ui() {"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"        response \u003d \"Hello from\\n\" + logo + \"\\n\" + \"What can I do for you?\";"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"     * Constructor method."},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"     * @param statement command given"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"    public Ui(String statement) {"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"        response \u003d statement;"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"     * Method to get create a response"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"     * @return a response"},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":"    public void reply() {"},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"        System.out.println(response);"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"     * Method to print a String"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":"     * @return a String object in the console"},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":"    public void print(String statement) {"},{"lineNumber":31,"author":{"gitId":"Jacob-109"},"content":"        response \u003d statement;"},{"lineNumber":32,"author":{"gitId":"Jacob-109"},"content":"        System.out.println(response);"},{"lineNumber":33,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Jacob-109"},"content":"}"}],"authorContributionMap":{"Jacob-109":34}},{"path":"src/main/java/build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":" * This file was generated by the Gradle \u0027init\u0027 task."},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":" *"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":" * This is a general purpose Gradle build."},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":" * Learn more about Gradle by exploring our samples at https://docs.gradle.org/6.8.3/samples"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"plugins {"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"    id \u0027java\u0027"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"    id \u0027application\u0027"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"    id \"com.github.johnrengelman.shadow\" version \"6.1.0\""},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"}"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"repositories {"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"    mavenCentral()"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"    jcenter()"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"    google()"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"    maven {"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"        url \"https://maven.springframework.org/release\""},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"    maven {"},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":"        url \"https://maven.restlet.com\""},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"}"},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"checkstyle {"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":"}"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":31,"author":{"gitId":"Jacob-109"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"Jacob-109"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"Jacob-109"},"content":"}"},{"lineNumber":34,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":35,"author":{"gitId":"Jacob-109"},"content":"dependencies {"},{"lineNumber":36,"author":{"gitId":"Jacob-109"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.6.0\u0027"},{"lineNumber":37,"author":{"gitId":"Jacob-109"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine\u0027"},{"lineNumber":38,"author":{"gitId":"Jacob-109"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":39,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":40,"author":{"gitId":"Jacob-109"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":41,"author":{"gitId":"Jacob-109"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":42,"author":{"gitId":"Jacob-109"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":43,"author":{"gitId":"Jacob-109"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":44,"author":{"gitId":"Jacob-109"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":45,"author":{"gitId":"Jacob-109"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":46,"author":{"gitId":"Jacob-109"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":47,"author":{"gitId":"Jacob-109"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":48,"author":{"gitId":"Jacob-109"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":49,"author":{"gitId":"Jacob-109"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":50,"author":{"gitId":"Jacob-109"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":51,"author":{"gitId":"Jacob-109"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":52,"author":{"gitId":"Jacob-109"},"content":"}"},{"lineNumber":53,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":54,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":55,"author":{"gitId":"Jacob-109"},"content":"run {"},{"lineNumber":56,"author":{"gitId":"Jacob-109"},"content":"    standardInput \u003d System.in"},{"lineNumber":57,"author":{"gitId":"Jacob-109"},"content":"}"},{"lineNumber":58,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":59,"author":{"gitId":"Jacob-109"},"content":"shadowJar {"},{"lineNumber":60,"author":{"gitId":"Jacob-109"},"content":"    archiveBaseName \u003d \"Duke\""},{"lineNumber":61,"author":{"gitId":"Jacob-109"},"content":"    archiveClassifier \u003d null"},{"lineNumber":62,"author":{"gitId":"Jacob-109"},"content":"}"},{"lineNumber":63,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":64,"author":{"gitId":"Jacob-109"},"content":"application {"},{"lineNumber":65,"author":{"gitId":"Jacob-109"},"content":"    mainClassName \u003d \"Duke.java\""},{"lineNumber":66,"author":{"gitId":"Jacob-109"},"content":"}"}],"authorContributionMap":{"Jacob-109":66}},{"path":"src/main/java/data/DukeData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"D|[Done]|return|2000-10-20"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"T|[Done]|run"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"T|[Incompleted]|run"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"E|[Done]|project meeting|Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"E|[Incompleted]|project meeting|Mon 2-5pm"}],"authorContributionMap":{"Jacob-109":5}},{"path":"src/main/java/gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":32,"author":{"gitId":"Jacob-109"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"Jacob-109"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":35,"author":{"gitId":"Jacob-109"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"Jacob-109"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":38,"author":{"gitId":"Jacob-109"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"Jacob-109"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":41,"author":{"gitId":"Jacob-109"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"Jacob-109"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"Jacob-109"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":44,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":45,"author":{"gitId":"Jacob-109"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"Jacob-109"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"Jacob-109"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"Jacob-109"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"Jacob-109"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":51,"author":{"gitId":"Jacob-109"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":53,"author":{"gitId":"Jacob-109"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"Jacob-109"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"Jacob-109"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":57,"author":{"gitId":"Jacob-109"},"content":"if exist \"%JAVA_EXE%\" goto execute"},{"lineNumber":58,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":59,"author":{"gitId":"Jacob-109"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"Jacob-109"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"Jacob-109"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"Jacob-109"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"Jacob-109"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":65,"author":{"gitId":"Jacob-109"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":67,"author":{"gitId":"Jacob-109"},"content":":execute"},{"lineNumber":68,"author":{"gitId":"Jacob-109"},"content":"@rem Setup the command line"},{"lineNumber":69,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":70,"author":{"gitId":"Jacob-109"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":71,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":72,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":73,"author":{"gitId":"Jacob-109"},"content":"@rem Execute Gradle"},{"lineNumber":74,"author":{"gitId":"Jacob-109"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"},{"lineNumber":75,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":76,"author":{"gitId":"Jacob-109"},"content":":end"},{"lineNumber":77,"author":{"gitId":"Jacob-109"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":78,"author":{"gitId":"Jacob-109"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":79,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":80,"author":{"gitId":"Jacob-109"},"content":":fail"},{"lineNumber":81,"author":{"gitId":"Jacob-109"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":82,"author":{"gitId":"Jacob-109"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":83,"author":{"gitId":"Jacob-109"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":84,"author":{"gitId":"Jacob-109"},"content":"exit /b 1"},{"lineNumber":85,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":86,"author":{"gitId":"Jacob-109"},"content":":mainEnd"},{"lineNumber":87,"author":{"gitId":"Jacob-109"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":88,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":89,"author":{"gitId":"Jacob-109"},"content":":omega"}],"authorContributionMap":{"Jacob-109":89}},{"path":"src/main/java/settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":" * This file was generated by the Gradle \u0027init\u0027 task."},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":" *"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":" * The settings file is used to specify which projects to include in your build."},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":" *"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":" * Detailed information about configuring a multi-project build in Gradle can be found"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":" * in the user manual at https://docs.gradle.org/6.8.3/userguide/multi_project_builds.html"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"rootProject.name \u003d \u0027ip\u0027"}],"authorContributionMap":{"Jacob-109":10}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"public class DeadlineTest {"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"    public void testGetBy() {"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"        LocalDate date \u003d LocalDate.parse(\"2/12/2019\",formatter);"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"        Deadline test \u003d new Deadline(\"return book\", date);"},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"        assertEquals(date, test.getBy());"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"    public void testToString() {"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"        LocalDate date \u003d LocalDate.parse(\"2/12/2019\",formatter);"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"        Deadline test \u003d new Deadline(\"return book\", date);"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"        assertEquals(\"[D][Incompleted] lunch (by:Dec 12 2019)\", test.toString());"},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":"}"}],"authorContributionMap":{"Jacob-109":23}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"public class TaskListTest {"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"    TaskList taskList \u003d new TaskList();"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"    ToDo todo \u003d new ToDo(\"run\");"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"    LocalDate date \u003d LocalDate.parse(\"2/12/2019\",formatter);"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"    Deadline deadline \u003d new Deadline(\"return book\", date);"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"    Event event \u003d new Event(\"event project meeting\", \"Mon 2-4pm\") ;"},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"    public void testNumOfTask() {"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"        taskList.addTask(todo);"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"        taskList.addTask(deadline);"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"        taskList.addTask(event);"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"        assertEquals(3, taskList.numOfTasks());"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"}"}],"authorContributionMap":{"Jacob-109":21}}]
