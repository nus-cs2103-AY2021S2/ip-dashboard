[{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"Duke is an interactive chatbot that stores your task"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"Below are the basic features of Duke."},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"### Feature 1: todo"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"Adds a ToDo task to your list"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"todo \"description\""},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"Example of usage:"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"eg todo Run"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"Adds a ToDo task with description \"Run\" to your list"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"Expected outcome:"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"[T][Incompleted]Run #"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"Now you have 1 tasks in the list."},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":"### Feature 2: event"},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"Adds a Event task to your list"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":"## Usage"},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"event \"description\" /at \"datetime\""},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":"Example of usage:"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":"eg event game release /at Mon 2-4pm"},{"lineNumber":31,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":32,"author":{"gitId":"Jacob-109"},"content":"Adds an Event task with description \"game release\" "},{"lineNumber":33,"author":{"gitId":"Jacob-109"},"content":"at \"Mon 2-4pm\" to your list"},{"lineNumber":34,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":35,"author":{"gitId":"Jacob-109"},"content":"Expected outcome:"},{"lineNumber":36,"author":{"gitId":"Jacob-109"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":37,"author":{"gitId":"Jacob-109"},"content":"[E][Incompleted] game release  (at:  Mon 2-4pm)"},{"lineNumber":38,"author":{"gitId":"Jacob-109"},"content":"Now you have 2 tasks in the list."},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"Jacob-109"},"content":"### Feature 3: deadline"},{"lineNumber":41,"author":{"gitId":"Jacob-109"},"content":"Adds a Deadline task to your list"},{"lineNumber":42,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":43,"author":{"gitId":"Jacob-109"},"content":"## Usage"},{"lineNumber":44,"author":{"gitId":"Jacob-109"},"content":"deadline \"description\" /by \"date\""},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":47,"author":{"gitId":"Jacob-109"},"content":"eg deadline submit file /by 2020-02-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"Jacob-109"},"content":"Adds a Deadline task with description \"submit file\""},{"lineNumber":50,"author":{"gitId":"Jacob-109"},"content":"by \"2020-02-21\" to your list"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":53,"author":{"gitId":"Jacob-109"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":54,"author":{"gitId":"Jacob-109"},"content":"[D][Incompleted] submit file  (by: Feb 21 2020)"},{"lineNumber":55,"author":{"gitId":"Jacob-109"},"content":"Now you have 1 tasks in the list."},{"lineNumber":56,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":57,"author":{"gitId":"Jacob-109"},"content":"### Feature 4: list"},{"lineNumber":58,"author":{"gitId":"Jacob-109"},"content":"Shows you your tasks in the list"},{"lineNumber":59,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":60,"author":{"gitId":"Jacob-109"},"content":"## Usage"},{"lineNumber":61,"author":{"gitId":"Jacob-109"},"content":"list"},{"lineNumber":62,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":63,"author":{"gitId":"Jacob-109"},"content":"Example of usage:"},{"lineNumber":64,"author":{"gitId":"Jacob-109"},"content":"eg list"},{"lineNumber":65,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":66,"author":{"gitId":"Jacob-109"},"content":"Displays your task in the sequence you have added to the list"},{"lineNumber":67,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":68,"author":{"gitId":"Jacob-109"},"content":"Expected outcome:"},{"lineNumber":69,"author":{"gitId":"Jacob-109"},"content":"Here are the tasks in your list:"},{"lineNumber":70,"author":{"gitId":"Jacob-109"},"content":"1. [T][Incompleted]Run #"},{"lineNumber":71,"author":{"gitId":"Jacob-109"},"content":"2. [E][Incompleted] game release  (at:  Mon 2-4pm)"},{"lineNumber":72,"author":{"gitId":"Jacob-109"},"content":"3. [D][Incompleted] submit file  (by: Feb 21 2020)"},{"lineNumber":73,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":74,"author":{"gitId":"Jacob-109"},"content":"### Feature 5: done"},{"lineNumber":75,"author":{"gitId":"Jacob-109"},"content":"Mark a task as done"},{"lineNumber":76,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":77,"author":{"gitId":"Jacob-109"},"content":"## Usage"},{"lineNumber":78,"author":{"gitId":"Jacob-109"},"content":"done \"index\""},{"lineNumber":79,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":80,"author":{"gitId":"Jacob-109"},"content":"Example of usage:"},{"lineNumber":81,"author":{"gitId":"Jacob-109"},"content":"eg done 1"},{"lineNumber":82,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":83,"author":{"gitId":"Jacob-109"},"content":"Mark the first task in your list as done"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"Jacob-109"},"content":"Expected outcome:"},{"lineNumber":86,"author":{"gitId":"Jacob-109"},"content":"Nice! I\u0027ve marked this task as done:"},{"lineNumber":87,"author":{"gitId":"Jacob-109"},"content":"[T][Done]Run #"},{"lineNumber":88,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":89,"author":{"gitId":"Jacob-109"},"content":"### Feature 6: delete"},{"lineNumber":90,"author":{"gitId":"Jacob-109"},"content":"Delete a task in your list"},{"lineNumber":91,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":92,"author":{"gitId":"Jacob-109"},"content":"## Usage"},{"lineNumber":93,"author":{"gitId":"Jacob-109"},"content":"delete \"index\""},{"lineNumber":94,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":95,"author":{"gitId":"Jacob-109"},"content":"Example of usage:"},{"lineNumber":96,"author":{"gitId":"Jacob-109"},"content":"eg delete 1"},{"lineNumber":97,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":98,"author":{"gitId":"Jacob-109"},"content":"Delete the first task in your list as done"},{"lineNumber":99,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":100,"author":{"gitId":"Jacob-109"},"content":"Expected outcome:"},{"lineNumber":101,"author":{"gitId":"Jacob-109"},"content":"Noted. I\u0027ve removed this task:"},{"lineNumber":102,"author":{"gitId":"Jacob-109"},"content":"[T][Done]Run #"},{"lineNumber":103,"author":{"gitId":"Jacob-109"},"content":"Now you have 2 tasks in the list."},{"lineNumber":104,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":105,"author":{"gitId":"Jacob-109"},"content":"### Feature 7: find"},{"lineNumber":106,"author":{"gitId":"Jacob-109"},"content":"Find tasks that contain the keyword in your list"},{"lineNumber":107,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":108,"author":{"gitId":"Jacob-109"},"content":"## Usage"},{"lineNumber":109,"author":{"gitId":"Jacob-109"},"content":"find \"keyword\""},{"lineNumber":110,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":111,"author":{"gitId":"Jacob-109"},"content":"Example of usage:"},{"lineNumber":112,"author":{"gitId":"Jacob-109"},"content":"eg find game"},{"lineNumber":113,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":114,"author":{"gitId":"Jacob-109"},"content":"Find tasks that contains the word \"game\" in your list"},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":117,"author":{"gitId":"Jacob-109"},"content":"Here are the matching tasks in your list:"},{"lineNumber":118,"author":{"gitId":"Jacob-109"},"content":"[E][Incompleted] game release  (at:  Mon 2-4pm)"},{"lineNumber":119,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":120,"author":{"gitId":"Jacob-109"},"content":"### Feature 8: bye"},{"lineNumber":121,"author":{"gitId":"Jacob-109"},"content":"Ends Duke operations"},{"lineNumber":122,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":123,"author":{"gitId":"Jacob-109"},"content":"## Usage"},{"lineNumber":124,"author":{"gitId":"Jacob-109"},"content":"bye"},{"lineNumber":125,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":126,"author":{"gitId":"Jacob-109"},"content":"Example of usage:"},{"lineNumber":127,"author":{"gitId":"Jacob-109"},"content":"bye"},{"lineNumber":128,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":129,"author":{"gitId":"Jacob-109"},"content":"Expected outcome:"},{"lineNumber":130,"author":{"gitId":"Jacob-109"},"content":"Bye! Hope to see you again soon!"},{"lineNumber":131,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":132,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":133,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":134,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":135,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":136,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":137,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":138,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"Jacob-109"},"content":"    "}],"authorContributionMap":{"Jacob-109":121,"-":19}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"import java.util.Date;"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"import java.text.DateFormat;"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"    protected LocalDate date;"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"     * Constructor method."},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"     * @param description User input description of deadline"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"     * @param date Date of the deadline"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"    public Deadline(String description, LocalDate date) {"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"        super(description);"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"        this.date \u003d date;"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"     * Method to get the date of the deadline."},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":"     * @return a Date object of the deadline."},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"    public LocalDate getBy() {"},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":"        return this.date;"},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":"     * Method to get the date of the deadline as a string object"},{"lineNumber":31,"author":{"gitId":"Jacob-109"},"content":"     * @return a String object of the deadline."},{"lineNumber":32,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Jacob-109"},"content":"    public String getDateString() {"},{"lineNumber":34,"author":{"gitId":"Jacob-109"},"content":"        assert this.date.toString().length() \u003e 0;"},{"lineNumber":35,"author":{"gitId":"Jacob-109"},"content":"        return this.date.toString();"},{"lineNumber":36,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":38,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"Jacob-109"},"content":"     * Method to return a Deadline object in the specified format"},{"lineNumber":40,"author":{"gitId":"Jacob-109"},"content":"     * @return Formatted String of Deadline"},{"lineNumber":41,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"Jacob-109"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"Jacob-109"},"content":"    public String toString() {"},{"lineNumber":44,"author":{"gitId":"Jacob-109"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":45,"author":{"gitId":"Jacob-109"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + date.format(formatter) + \")\";"},{"lineNumber":46,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Jacob-109"},"content":"}"}],"authorContributionMap":{"Jacob-109":47}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":" * Main class"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":" */"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"    private Storage storage;"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"    private TaskList tasks;"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"    private Ui ui;"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"     * Constructor method"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"     * @param filePath of the saved file"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"     * @throws IOException if user IO is incorrect"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"    public Duke(String filePath) throws IOException {"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"        ui \u003d new Ui();"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":"            tasks \u003d new TaskList(storage.loadTasks());"},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"        } catch (IOException e) {"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":"     * Method to run Duke"},{"lineNumber":31,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"Jacob-109"},"content":"    public void run() throws IOException {"},{"lineNumber":33,"author":{"gitId":"Jacob-109"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":34,"author":{"gitId":"Jacob-109"},"content":"        storage.loadTasks();"},{"lineNumber":35,"author":{"gitId":"Jacob-109"},"content":"        ui.reply();"},{"lineNumber":36,"author":{"gitId":"Jacob-109"},"content":"        Parser parser \u003d new Parser(tasks, ui);"},{"lineNumber":37,"author":{"gitId":"Jacob-109"},"content":"        while (true) {"},{"lineNumber":38,"author":{"gitId":"Jacob-109"},"content":"            String command \u003d sc.nextLine();"},{"lineNumber":39,"author":{"gitId":"Jacob-109"},"content":"            parser.insertCommand(command);"},{"lineNumber":40,"author":{"gitId":"Jacob-109"},"content":"            parser.process();"},{"lineNumber":41,"author":{"gitId":"Jacob-109"},"content":"            if (parser.isEnd()) {"},{"lineNumber":42,"author":{"gitId":"Jacob-109"},"content":"                break;"},{"lineNumber":43,"author":{"gitId":"Jacob-109"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"Jacob-109"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"Jacob-109"},"content":"        storage.saveTasks(tasks);"},{"lineNumber":46,"author":{"gitId":"Jacob-109"},"content":"        System.exit(0);"},{"lineNumber":47,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":49,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"Jacob-109"},"content":"     * Main method of Duke"},{"lineNumber":51,"author":{"gitId":"Jacob-109"},"content":"     * @param args command line arguments"},{"lineNumber":52,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"Jacob-109"},"content":"    public static void main(String[] args) throws IOException {"},{"lineNumber":54,"author":{"gitId":"Jacob-109"},"content":"        new Duke(\"data/DukeData.txt\").run();"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Jacob-109":53,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"     * Constructor method."},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"     * @param message Error message."},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"    public DukeException(String message) {"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"        super(message);"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"}"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":""}],"authorContributionMap":{"Jacob-109":10}},{"path":"src/main/java/DukeGUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"import javafx.application.Application;"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"import javafx.scene.Scene;"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"import javafx.scene.control.Label;"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"import javafx.stage.Stage;"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"public class DukeGUI extends Application {"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"    public void start(Stage stage) {"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"        Label helloWorld \u003d new Label(\"Hello World!\"); // Creating a new Label control"},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"        Scene scene \u003d new Scene(helloWorld); // Setting the scene to be our Label"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"        stage.setScene(scene); // Setting the stage to show our screen"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"        stage.show(); // Render the stage."},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"}"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"*/"}],"authorContributionMap":{"Jacob-109":19}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"    protected String datetime;"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"     * Constructor method"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"     * @param description User input description of Event"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"     * @param datetime Date and time of the Event"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"    public Event(String description, String datetime) {"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"        this.datetime \u003d datetime;"},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"     * Method to get the datetime of the Event"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"     * @return a String object of the datetime of the Event"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"    public String getDatetime() {"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"        assert this.datetime.length() \u003e 0;"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"        return this.datetime;"},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"     * Method to return a the Event object in the specified format"},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":"     * @return Formatted String of Event"},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + datetime + \")\";"},{"lineNumber":31,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Jacob-109"},"content":"}"},{"lineNumber":33,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":34,"author":{"gitId":"Jacob-109"},"content":""}],"authorContributionMap":{"Jacob-109":34}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"/*import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"public class Launcher {"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"        Application.launch(DukeGUI.class, args);"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"}*/"}],"authorContributionMap":{"Jacob-109":7}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"    private String command;"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"    private TaskList taskList;"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"    private Ui ui;"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"    private boolean isEnd;"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"     * Constructor method"},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"     * @param tasklist which contains the Task objects"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"     * @param ui which handles the response"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"    public Parser(TaskList tasklist, Ui ui) {"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"        this.command \u003d \"\";"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"        this.taskList \u003d tasklist;"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"        this.ui \u003d ui;"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"        this.isEnd \u003d false;"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"     * Method to insert command"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":"    public void insertCommand(String command) {"},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"        this.command \u003d command;"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"Jacob-109"},"content":"     * Method to check if Duke should stop running"},{"lineNumber":32,"author":{"gitId":"Jacob-109"},"content":"     * @return a boolean value"},{"lineNumber":33,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"Jacob-109"},"content":"    public boolean isEnd() {"},{"lineNumber":35,"author":{"gitId":"Jacob-109"},"content":"        return this.isEnd;"},{"lineNumber":36,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":38,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"Jacob-109"},"content":"     * Method to parse the different commands of Duke"},{"lineNumber":40,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"Jacob-109"},"content":"    public void process() {"},{"lineNumber":42,"author":{"gitId":"Jacob-109"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"Jacob-109"},"content":"            if (command.equals(\"list\")) {"},{"lineNumber":44,"author":{"gitId":"Jacob-109"},"content":"                int size \u003d taskList.numOfTasks();"},{"lineNumber":45,"author":{"gitId":"Jacob-109"},"content":"                System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":46,"author":{"gitId":"Jacob-109"},"content":"                for (int i \u003d 1; i \u003c\u003d size; i++) {"},{"lineNumber":47,"author":{"gitId":"Jacob-109"},"content":"                    System.out.println(i + \". \""},{"lineNumber":48,"author":{"gitId":"Jacob-109"},"content":"                            + taskList.getTask(i - 1).toString());"},{"lineNumber":49,"author":{"gitId":"Jacob-109"},"content":"                }"},{"lineNumber":50,"author":{"gitId":"Jacob-109"},"content":"            } else if (command.contains(\"todo\")) {"},{"lineNumber":51,"author":{"gitId":"Jacob-109"},"content":"                String[] save \u003d command.split(\" \");"},{"lineNumber":52,"author":{"gitId":"Jacob-109"},"content":"                ToDo t \u003d new ToDo(\"\", \"\");"},{"lineNumber":53,"author":{"gitId":"Jacob-109"},"content":"                if (save.length \u003e 2) {"},{"lineNumber":54,"author":{"gitId":"Jacob-109"},"content":"                    t.setDescription(save[1]);"},{"lineNumber":55,"author":{"gitId":"Jacob-109"},"content":"                    t.setTag(save[2]);"},{"lineNumber":56,"author":{"gitId":"Jacob-109"},"content":"                } else {"},{"lineNumber":57,"author":{"gitId":"Jacob-109"},"content":"                    t.setDescription(save[1]);"},{"lineNumber":58,"author":{"gitId":"Jacob-109"},"content":"                    t.setTag(\"\");"},{"lineNumber":59,"author":{"gitId":"Jacob-109"},"content":"                }"},{"lineNumber":60,"author":{"gitId":"Jacob-109"},"content":"                if (save.equals(\"\")) {"},{"lineNumber":61,"author":{"gitId":"Jacob-109"},"content":"                    throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":62,"author":{"gitId":"Jacob-109"},"content":"                }"},{"lineNumber":63,"author":{"gitId":"Jacob-109"},"content":"                taskList.addTask(t);"},{"lineNumber":64,"author":{"gitId":"Jacob-109"},"content":"                taskList.checkForDuplicate();"},{"lineNumber":65,"author":{"gitId":"Jacob-109"},"content":"                ui.print(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":66,"author":{"gitId":"Jacob-109"},"content":"                ui.print(t.toString());"},{"lineNumber":67,"author":{"gitId":"Jacob-109"},"content":"                Integer numOfTask \u003d taskList.numOfTasks();"},{"lineNumber":68,"author":{"gitId":"Jacob-109"},"content":"                ui.print(\"Now you have \" + numOfTask.toString() + \" tasks in the list.\");"},{"lineNumber":69,"author":{"gitId":"Jacob-109"},"content":"            } else if (command.contains(\"deadline\")) {"},{"lineNumber":70,"author":{"gitId":"Jacob-109"},"content":"                String[] input \u003d command.split(\"/by \");"},{"lineNumber":71,"author":{"gitId":"Jacob-109"},"content":"                input[0] \u003d input[0].replaceAll(\"deadline\", \"\");"},{"lineNumber":72,"author":{"gitId":"Jacob-109"},"content":"                LocalDate date \u003d LocalDate.parse(input[1], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":73,"author":{"gitId":"Jacob-109"},"content":"                Deadline d \u003d new Deadline(input[0], date);"},{"lineNumber":74,"author":{"gitId":"Jacob-109"},"content":"                taskList.addTask(d);"},{"lineNumber":75,"author":{"gitId":"Jacob-109"},"content":"                taskList.checkForDuplicate();"},{"lineNumber":76,"author":{"gitId":"Jacob-109"},"content":"                ui.print(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":77,"author":{"gitId":"Jacob-109"},"content":"                ui.print(d.toString());"},{"lineNumber":78,"author":{"gitId":"Jacob-109"},"content":"                Integer numOfTask \u003d taskList.numOfTasks();"},{"lineNumber":79,"author":{"gitId":"Jacob-109"},"content":"                ui.print(\"Now you have \" + numOfTask.toString() + \" tasks in the list.\");"},{"lineNumber":80,"author":{"gitId":"Jacob-109"},"content":"            } else if (command.contains(\"event\")) {"},{"lineNumber":81,"author":{"gitId":"Jacob-109"},"content":"                String[] info \u003d command.split(\"/at\");"},{"lineNumber":82,"author":{"gitId":"Jacob-109"},"content":"                info[0] \u003d info[0].replaceAll(\"event\", \"\");"},{"lineNumber":83,"author":{"gitId":"Jacob-109"},"content":"                Event e \u003d new Event(info[0], info[1]);"},{"lineNumber":84,"author":{"gitId":"Jacob-109"},"content":"                taskList.addTask(e);"},{"lineNumber":85,"author":{"gitId":"Jacob-109"},"content":"                taskList.checkForDuplicate();"},{"lineNumber":86,"author":{"gitId":"Jacob-109"},"content":"                ui.print(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":87,"author":{"gitId":"Jacob-109"},"content":"                ui.print(e.toString());"},{"lineNumber":88,"author":{"gitId":"Jacob-109"},"content":"                Integer numOfTask \u003d taskList.numOfTasks();"},{"lineNumber":89,"author":{"gitId":"Jacob-109"},"content":"                ui.print(\"Now you have \" + numOfTask.toString() + \" tasks in the list.\");"},{"lineNumber":90,"author":{"gitId":"Jacob-109"},"content":"            } else if (command.contains(\"done\")) {"},{"lineNumber":91,"author":{"gitId":"Jacob-109"},"content":"                String[] strArray \u003d command.split(\" \");"},{"lineNumber":92,"author":{"gitId":"Jacob-109"},"content":"                int value \u003d Integer.parseInt(strArray[1]);"},{"lineNumber":93,"author":{"gitId":"Jacob-109"},"content":"                Task complete \u003d taskList.getTask(value - 1);"},{"lineNumber":94,"author":{"gitId":"Jacob-109"},"content":"                complete.markAsDone();"},{"lineNumber":95,"author":{"gitId":"Jacob-109"},"content":"                ui.print(\" Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":96,"author":{"gitId":"Jacob-109"},"content":"                ui.print(complete.toString());"},{"lineNumber":97,"author":{"gitId":"Jacob-109"},"content":"            } else if (command.contains(\"delete\")) {"},{"lineNumber":98,"author":{"gitId":"Jacob-109"},"content":"                String[] arr \u003d command.split(\" \");"},{"lineNumber":99,"author":{"gitId":"Jacob-109"},"content":"                int value \u003d Integer.parseInt(arr[1]);"},{"lineNumber":100,"author":{"gitId":"Jacob-109"},"content":"                Task remove \u003d taskList.getTask(value - 1);"},{"lineNumber":101,"author":{"gitId":"Jacob-109"},"content":"                taskList.deleteTask(value - 1);"},{"lineNumber":102,"author":{"gitId":"Jacob-109"},"content":"                ui.print(\"Noted. I\u0027ve removed this task: \");"},{"lineNumber":103,"author":{"gitId":"Jacob-109"},"content":"                ui.print(remove.toString());"},{"lineNumber":104,"author":{"gitId":"Jacob-109"},"content":"                Integer numOfTask \u003d taskList.numOfTasks();"},{"lineNumber":105,"author":{"gitId":"Jacob-109"},"content":"                ui.print(\"Now you have \" + numOfTask.toString() + \" tasks in the list.\");"},{"lineNumber":106,"author":{"gitId":"Jacob-109"},"content":"            } else if (command.contains(\"find\")) {"},{"lineNumber":107,"author":{"gitId":"Jacob-109"},"content":"                String[] find \u003d command.split(\" \");"},{"lineNumber":108,"author":{"gitId":"Jacob-109"},"content":"                String keyword \u003d find[1];"},{"lineNumber":109,"author":{"gitId":"Jacob-109"},"content":"                ArrayList\u003cTask\u003e output \u003d new ArrayList\u003c\u003e();"},{"lineNumber":110,"author":{"gitId":"Jacob-109"},"content":"                for (int i \u003d 0; i \u003c taskList.numOfTasks(); i++) {"},{"lineNumber":111,"author":{"gitId":"Jacob-109"},"content":"                    Task check \u003d taskList.getTask(i);"},{"lineNumber":112,"author":{"gitId":"Jacob-109"},"content":"                    if (check.getDescription().contains(keyword)) {"},{"lineNumber":113,"author":{"gitId":"Jacob-109"},"content":"                        output.add(check);"},{"lineNumber":114,"author":{"gitId":"Jacob-109"},"content":"                    }"},{"lineNumber":115,"author":{"gitId":"Jacob-109"},"content":"                }"},{"lineNumber":116,"author":{"gitId":"Jacob-109"},"content":"                ui.print(\"Here are the matching tasks in your list:\");"},{"lineNumber":117,"author":{"gitId":"Jacob-109"},"content":"                for (int j \u003d 0; j \u003c output.size(); j++) {"},{"lineNumber":118,"author":{"gitId":"Jacob-109"},"content":"                    ui.print(output.get(j).toString());"},{"lineNumber":119,"author":{"gitId":"Jacob-109"},"content":"                }"},{"lineNumber":120,"author":{"gitId":"Jacob-109"},"content":"            } else if (command.equals(\"bye\")) {"},{"lineNumber":121,"author":{"gitId":"Jacob-109"},"content":"                ui.print(\"Bye! Hope to see you again soon!\");"},{"lineNumber":122,"author":{"gitId":"Jacob-109"},"content":"                this.isEnd \u003d true;"},{"lineNumber":123,"author":{"gitId":"Jacob-109"},"content":"            } else {"},{"lineNumber":124,"author":{"gitId":"Jacob-109"},"content":"                throw new DukeException(\"Oops! I\u0027m sorry, but I don\u0027t know what that means!\");"},{"lineNumber":125,"author":{"gitId":"Jacob-109"},"content":"            }"},{"lineNumber":126,"author":{"gitId":"Jacob-109"},"content":"        } catch (DukeException e) {"},{"lineNumber":127,"author":{"gitId":"Jacob-109"},"content":"            System.out.println(e);"},{"lineNumber":128,"author":{"gitId":"Jacob-109"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"Jacob-109"},"content":"}"}],"authorContributionMap":{"Jacob-109":130}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"import java.io.FileWriter;"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"import java.nio.file.Path;"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"import java.nio.file.Paths;"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"import java.nio.file.Files;"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"    private File file;"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"     * Constructor method"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"     * @param filePath of the saved file"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"    public Storage(String filePath) throws IOException {"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"        this.file \u003d new File(filePath);"},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"        Path path \u003d Paths.get(filePath);"},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"            Files.createDirectories(path.getParent());"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"            Files.createFile(path);"},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":"        } catch (Exception e) {"},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"            e.getStackTrace();"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":31,"author":{"gitId":"Jacob-109"},"content":"    // @@wei-yutong reused with modifications"},{"lineNumber":32,"author":{"gitId":"Jacob-109"},"content":"    public void saveTasks(TaskList list) throws IOException {"},{"lineNumber":33,"author":{"gitId":"Jacob-109"},"content":"        FileWriter fw \u003d new FileWriter(this.file);"},{"lineNumber":34,"author":{"gitId":"Jacob-109"},"content":"        ArrayList\u003cTask\u003e copied \u003d new ArrayList\u003c\u003e();"},{"lineNumber":35,"author":{"gitId":"Jacob-109"},"content":"        for (int i \u003d 0; i \u003c list.numOfTasks(); i++) {"},{"lineNumber":36,"author":{"gitId":"Jacob-109"},"content":"            Task added \u003d list.getTask(i);"},{"lineNumber":37,"author":{"gitId":"Jacob-109"},"content":"            copied.add(added);"},{"lineNumber":38,"author":{"gitId":"Jacob-109"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"Jacob-109"},"content":"        for (Task temp : copied) {"},{"lineNumber":40,"author":{"gitId":"Jacob-109"},"content":"            if (temp instanceof Deadline) {"},{"lineNumber":41,"author":{"gitId":"Jacob-109"},"content":"                fw.write(\"D|\" + temp.getStatusIcon() + \"|\" + temp.getDescription().trim() + \"|\""},{"lineNumber":42,"author":{"gitId":"Jacob-109"},"content":"                        + ((Deadline) temp).getDateString() + \"\\n\");"},{"lineNumber":43,"author":{"gitId":"Jacob-109"},"content":"            } else if (temp instanceof Event) {"},{"lineNumber":44,"author":{"gitId":"Jacob-109"},"content":"                fw.write(\"E|\" + temp.getStatusIcon() + \"|\" + temp.getDescription() + \"|\""},{"lineNumber":45,"author":{"gitId":"Jacob-109"},"content":"                        + ((Event) temp).getDatetime() + \"\\n\");"},{"lineNumber":46,"author":{"gitId":"Jacob-109"},"content":"            } else {"},{"lineNumber":47,"author":{"gitId":"Jacob-109"},"content":"                fw.write(\"T|\" + temp.getStatusIcon() + \"|\" + temp.getDescription() + \"\\n\");"},{"lineNumber":48,"author":{"gitId":"Jacob-109"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"Jacob-109"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"Jacob-109"},"content":"        fw.close();"},{"lineNumber":51,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":53,"author":{"gitId":"Jacob-109"},"content":"    // @@wei-yutong reused with modifications"},{"lineNumber":54,"author":{"gitId":"Jacob-109"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException {"},{"lineNumber":55,"author":{"gitId":"Jacob-109"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":56,"author":{"gitId":"Jacob-109"},"content":"        Scanner sc \u003d new Scanner(this.file);"},{"lineNumber":57,"author":{"gitId":"Jacob-109"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":58,"author":{"gitId":"Jacob-109"},"content":"            String s \u003d sc.nextLine();"},{"lineNumber":59,"author":{"gitId":"Jacob-109"},"content":"            s \u003d s.trim();"},{"lineNumber":60,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":61,"author":{"gitId":"Jacob-109"},"content":"            String[] strArray \u003d s.split(\"\\\\|\", 4);"},{"lineNumber":62,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":63,"author":{"gitId":"Jacob-109"},"content":"            if (strArray[0].trim().equals(\"D\")) {"},{"lineNumber":64,"author":{"gitId":"Jacob-109"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":65,"author":{"gitId":"Jacob-109"},"content":"                LocalDate date \u003d LocalDate.parse(strArray[3], formatter);"},{"lineNumber":66,"author":{"gitId":"Jacob-109"},"content":"                Deadline deadline \u003d new Deadline(strArray[2].trim(), date);"},{"lineNumber":67,"author":{"gitId":"Jacob-109"},"content":"                if (strArray[1].trim().equals(\"[Done]\")) {"},{"lineNumber":68,"author":{"gitId":"Jacob-109"},"content":"                    deadline.isDone \u003d true;"},{"lineNumber":69,"author":{"gitId":"Jacob-109"},"content":"                } else if (strArray[1].trim().equals(\"[Incompleted]\")) {"},{"lineNumber":70,"author":{"gitId":"Jacob-109"},"content":"                    deadline.isDone \u003d false;"},{"lineNumber":71,"author":{"gitId":"Jacob-109"},"content":"                }"},{"lineNumber":72,"author":{"gitId":"Jacob-109"},"content":"                tasks.add(deadline);"},{"lineNumber":73,"author":{"gitId":"Jacob-109"},"content":"            } else if (strArray[0].trim().equals(\"E\")) {"},{"lineNumber":74,"author":{"gitId":"Jacob-109"},"content":"                Event event \u003d new Event(strArray[2].trim(), strArray[3].trim());"},{"lineNumber":75,"author":{"gitId":"Jacob-109"},"content":"                if (strArray[1].trim().equals(\"[Done]\")) {"},{"lineNumber":76,"author":{"gitId":"Jacob-109"},"content":"                    event.isDone \u003d true;"},{"lineNumber":77,"author":{"gitId":"Jacob-109"},"content":"                } else if (strArray[1].trim().equals(\"[Incompleted]\")) {"},{"lineNumber":78,"author":{"gitId":"Jacob-109"},"content":"                    event.isDone \u003d false;"},{"lineNumber":79,"author":{"gitId":"Jacob-109"},"content":"                }"},{"lineNumber":80,"author":{"gitId":"Jacob-109"},"content":"                tasks.add(event);"},{"lineNumber":81,"author":{"gitId":"Jacob-109"},"content":"            } else {"},{"lineNumber":82,"author":{"gitId":"Jacob-109"},"content":"                ToDo todo \u003d new ToDo(strArray[2].trim(), \"\");"},{"lineNumber":83,"author":{"gitId":"Jacob-109"},"content":"                if (strArray[1].trim().equals(\"[Done]\")) {"},{"lineNumber":84,"author":{"gitId":"Jacob-109"},"content":"                    todo.isDone \u003d true;"},{"lineNumber":85,"author":{"gitId":"Jacob-109"},"content":"                } else if (strArray[1].trim().equals(\"[Incompleted]\")) {"},{"lineNumber":86,"author":{"gitId":"Jacob-109"},"content":"                    todo.isDone \u003d false;"},{"lineNumber":87,"author":{"gitId":"Jacob-109"},"content":"                }"},{"lineNumber":88,"author":{"gitId":"Jacob-109"},"content":"                tasks.add(todo);"},{"lineNumber":89,"author":{"gitId":"Jacob-109"},"content":"            }"},{"lineNumber":90,"author":{"gitId":"Jacob-109"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"Jacob-109"},"content":"        return tasks;"},{"lineNumber":92,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"Jacob-109"},"content":"}"},{"lineNumber":94,"author":{"gitId":"Jacob-109"},"content":""}],"authorContributionMap":{"Jacob-109":94}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"    public String tag;"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"    public boolean isDone;"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"     * Constructor method"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"     * @param description of the Task"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"    public Task(String description) {"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"        this.description \u003d description;"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"        this.isDone \u003d false;"},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"     * Method to return the corresponding String depending on completion of Task"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"     * @return Formatted String of Task completion"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"    public String getStatusIcon() {"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"        if (isDone) {"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"            return \"[Done]\";"},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"        } else {"},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":"            return \"[Incompleted]\"; // unsure why tick and cross did not show as intended"},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"            // hence the change to Done and Incompleted."},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":"     * Method to return the description of the Task"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":"     * @return description String"},{"lineNumber":31,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"Jacob-109"},"content":"    public String getDescription() {"},{"lineNumber":33,"author":{"gitId":"Jacob-109"},"content":"        assert this.description.length() \u003e 0;"},{"lineNumber":34,"author":{"gitId":"Jacob-109"},"content":"        return this.description;"},{"lineNumber":35,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":37,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"Jacob-109"},"content":"     * Method to mark a Task as completed"},{"lineNumber":39,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"Jacob-109"},"content":"    public void markAsDone() {"},{"lineNumber":41,"author":{"gitId":"Jacob-109"},"content":"        this.isDone \u003d true;"},{"lineNumber":42,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":44,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"Jacob-109"},"content":"     * Method to return a Task object in the specified format"},{"lineNumber":46,"author":{"gitId":"Jacob-109"},"content":"     * @return Formatted String of Task"},{"lineNumber":47,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"Jacob-109"},"content":"    public String toString() {"},{"lineNumber":49,"author":{"gitId":"Jacob-109"},"content":"        return this.getStatusIcon()  + this.description;"},{"lineNumber":50,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Jacob-109"},"content":"}"},{"lineNumber":52,"author":{"gitId":"Jacob-109"},"content":""}],"authorContributionMap":{"Jacob-109":52}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"public class TaskList {"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"     * Constructor method."},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"    public TaskList() {"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"     * Constructor method"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"     * @param task ArrayList\u003cTask\u003e"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"    public TaskList(ArrayList\u003cTask\u003e task) {"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"        this.tasks \u003d task;"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":"     * Method to get TaskList"},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"     * @return the ArrayList\u003cTask\u003e of TaskList"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"        return tasks;"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":31,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"Jacob-109"},"content":"     * Method to get the Task"},{"lineNumber":33,"author":{"gitId":"Jacob-109"},"content":"     * @param index of the Task in the TaskList"},{"lineNumber":34,"author":{"gitId":"Jacob-109"},"content":"     * @return the Task object at the index"},{"lineNumber":35,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"Jacob-109"},"content":"    public Task getTask(int index) {"},{"lineNumber":37,"author":{"gitId":"Jacob-109"},"content":"        return tasks.get(index);"},{"lineNumber":38,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"Jacob-109"},"content":"     * Method to add the Task"},{"lineNumber":41,"author":{"gitId":"Jacob-109"},"content":"     * @param task to be added"},{"lineNumber":42,"author":{"gitId":"Jacob-109"},"content":"     * @return TaskList with task added"},{"lineNumber":43,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"Jacob-109"},"content":"    public void addTask(Task task) {"},{"lineNumber":45,"author":{"gitId":"Jacob-109"},"content":"        tasks.add(task);"},{"lineNumber":46,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"Jacob-109"},"content":"     * Method to delete the Task"},{"lineNumber":49,"author":{"gitId":"Jacob-109"},"content":"     * @param index of the Task in the TaskList"},{"lineNumber":50,"author":{"gitId":"Jacob-109"},"content":"     * @return Task object that was deleted"},{"lineNumber":51,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"Jacob-109"},"content":"    public Task deleteTask(int index) {"},{"lineNumber":53,"author":{"gitId":"Jacob-109"},"content":"        Task deletedTask \u003d getTask(index);"},{"lineNumber":54,"author":{"gitId":"Jacob-109"},"content":"        tasks.remove(index);"},{"lineNumber":55,"author":{"gitId":"Jacob-109"},"content":"        return deletedTask;"},{"lineNumber":56,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"Jacob-109"},"content":"     * Method to check for duplicates in the TaskList"},{"lineNumber":59,"author":{"gitId":"Jacob-109"},"content":"     * @return delete the duplicated task in the TaskList"},{"lineNumber":60,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"Jacob-109"},"content":"    public void checkForDuplicate() {"},{"lineNumber":62,"author":{"gitId":"Jacob-109"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":63,"author":{"gitId":"Jacob-109"},"content":"        for (Task check: tasks) {"},{"lineNumber":64,"author":{"gitId":"Jacob-109"},"content":"            if (!list.contains(check)) {"},{"lineNumber":65,"author":{"gitId":"Jacob-109"},"content":"                list.add(check);"},{"lineNumber":66,"author":{"gitId":"Jacob-109"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"Jacob-109"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"Jacob-109"},"content":"        tasks.clear();"},{"lineNumber":69,"author":{"gitId":"Jacob-109"},"content":"        tasks.addAll(list);"},{"lineNumber":70,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"Jacob-109"},"content":"     * Method to get the size of TaskList"},{"lineNumber":73,"author":{"gitId":"Jacob-109"},"content":"     * @return the size of TaskList"},{"lineNumber":74,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"Jacob-109"},"content":"    public int numOfTasks() {"},{"lineNumber":76,"author":{"gitId":"Jacob-109"},"content":"        return tasks.size();"},{"lineNumber":77,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"Jacob-109"},"content":"}"},{"lineNumber":79,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":80,"author":{"gitId":"Jacob-109"},"content":""}],"authorContributionMap":{"Jacob-109":80}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"public class ToDo extends Task {"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"    protected String tag;"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"     * Constructor method."},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"     * @param description User input description of ToDo"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"     * @param tag User input tag for the Event"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"    public ToDo(String description, String tag) {"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"        this.tag \u003d tag;"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"    public void setDescription(String des) {"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"        this.description \u003d des;"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"    public void setTag(String tag) {"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"        this.tag \u003d tag;"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":"     * Method to return a ToDo object in the specified format"},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"     * @return Formatted String of ToDo"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":"        return \"[T]\" + super.toString() + \" #\" + this.tag;"},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":"}"}],"authorContributionMap":{"Jacob-109":30}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"public class Ui {"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"    private String response;"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"    public Ui() {"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"        response \u003d \"Hello from\\n\" + logo + \"\\n\" + \"What can I do for you?\";"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"     * Constructor method."},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"     * @param statement command given"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"    public Ui(String statement) {"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"        response \u003d statement;"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"     * Method to get create a response"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"     * @return a response"},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":"    public void reply() {"},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"        System.out.println(response);"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"     * Method to print a String"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":"     * @return a String object in the console"},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":"    public void print(String statement) {"},{"lineNumber":31,"author":{"gitId":"Jacob-109"},"content":"        response \u003d statement;"},{"lineNumber":32,"author":{"gitId":"Jacob-109"},"content":"        System.out.println(response);"},{"lineNumber":33,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Jacob-109"},"content":"}"}],"authorContributionMap":{"Jacob-109":34}},{"path":"src/main/java/build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":" * This file was generated by the Gradle \u0027init\u0027 task."},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":" *"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":" * This is a general purpose Gradle build."},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":" * Learn more about Gradle by exploring our samples at https://docs.gradle.org/6.8.3/samples"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"plugins {"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"    id \u0027java\u0027"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"    id \u0027application\u0027"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"    id \"com.github.johnrengelman.shadow\" version \"6.1.0\""},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"}"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"repositories {"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"    mavenCentral()"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"    jcenter()"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"    google()"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"    maven {"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"        url \"https://maven.springframework.org/release\""},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"    maven {"},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":"        url \"https://maven.restlet.com\""},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"}"},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"checkstyle {"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":"}"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":31,"author":{"gitId":"Jacob-109"},"content":"sourceSets {"},{"lineNumber":32,"author":{"gitId":"Jacob-109"},"content":"    main {"},{"lineNumber":33,"author":{"gitId":"Jacob-109"},"content":"        java {"},{"lineNumber":34,"author":{"gitId":"Jacob-109"},"content":"            srcDirs \u003d [\u0027src\u0027]"},{"lineNumber":35,"author":{"gitId":"Jacob-109"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":38,"author":{"gitId":"Jacob-109"},"content":"}"},{"lineNumber":39,"author":{"gitId":"Jacob-109"},"content":"test {"},{"lineNumber":40,"author":{"gitId":"Jacob-109"},"content":"    useJUnitPlatform()"},{"lineNumber":41,"author":{"gitId":"Jacob-109"},"content":"}"},{"lineNumber":42,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":43,"author":{"gitId":"Jacob-109"},"content":"dependencies {"},{"lineNumber":44,"author":{"gitId":"Jacob-109"},"content":"    compile group: \u0027com.joestelmach\u0027, name: \u0027natty\u0027, version: \u00270.6\u0027"},{"lineNumber":45,"author":{"gitId":"Jacob-109"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.6.0\u0027"},{"lineNumber":46,"author":{"gitId":"Jacob-109"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine\u0027"},{"lineNumber":47,"author":{"gitId":"Jacob-109"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":48,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":49,"author":{"gitId":"Jacob-109"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":50,"author":{"gitId":"Jacob-109"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":51,"author":{"gitId":"Jacob-109"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":52,"author":{"gitId":"Jacob-109"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":53,"author":{"gitId":"Jacob-109"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":54,"author":{"gitId":"Jacob-109"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":55,"author":{"gitId":"Jacob-109"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":56,"author":{"gitId":"Jacob-109"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":57,"author":{"gitId":"Jacob-109"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":58,"author":{"gitId":"Jacob-109"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":59,"author":{"gitId":"Jacob-109"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":60,"author":{"gitId":"Jacob-109"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":61,"author":{"gitId":"Jacob-109"},"content":"}"},{"lineNumber":62,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":63,"author":{"gitId":"Jacob-109"},"content":"shadowJar {"},{"lineNumber":64,"author":{"gitId":"Jacob-109"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":65,"author":{"gitId":"Jacob-109"},"content":"    archiveClassifier \u003d null"},{"lineNumber":66,"author":{"gitId":"Jacob-109"},"content":"}"},{"lineNumber":67,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":68,"author":{"gitId":"Jacob-109"},"content":"run {"},{"lineNumber":69,"author":{"gitId":"Jacob-109"},"content":"    enableAssertions \u003d true"},{"lineNumber":70,"author":{"gitId":"Jacob-109"},"content":"    standardInput \u003d System.in"},{"lineNumber":71,"author":{"gitId":"Jacob-109"},"content":"}"},{"lineNumber":72,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":73,"author":{"gitId":"Jacob-109"},"content":"application {"},{"lineNumber":74,"author":{"gitId":"Jacob-109"},"content":"    mainClassName \u003d \"Duke.java\""},{"lineNumber":75,"author":{"gitId":"Jacob-109"},"content":"}"}],"authorContributionMap":{"Jacob-109":75}},{"path":"src/main/java/build/scripts/ip.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"@rem  ip startup script for Windows"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":"set APP_HOME\u003d%DIRNAME%.."},{"lineNumber":31,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":32,"author":{"gitId":"Jacob-109"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"Jacob-109"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":35,"author":{"gitId":"Jacob-109"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and IP_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"Jacob-109"},"content":"set DEFAULT_JVM_OPTS\u003d"},{"lineNumber":37,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":38,"author":{"gitId":"Jacob-109"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"Jacob-109"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":41,"author":{"gitId":"Jacob-109"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"Jacob-109"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"Jacob-109"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":44,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":45,"author":{"gitId":"Jacob-109"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"Jacob-109"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"Jacob-109"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"Jacob-109"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"Jacob-109"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":51,"author":{"gitId":"Jacob-109"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":53,"author":{"gitId":"Jacob-109"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"Jacob-109"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"Jacob-109"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":57,"author":{"gitId":"Jacob-109"},"content":"if exist \"%JAVA_EXE%\" goto execute"},{"lineNumber":58,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":59,"author":{"gitId":"Jacob-109"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"Jacob-109"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"Jacob-109"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"Jacob-109"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"Jacob-109"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":65,"author":{"gitId":"Jacob-109"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":67,"author":{"gitId":"Jacob-109"},"content":":execute"},{"lineNumber":68,"author":{"gitId":"Jacob-109"},"content":"@rem Setup the command line"},{"lineNumber":69,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":70,"author":{"gitId":"Jacob-109"},"content":"set CLASSPATH\u003d%APP_HOME%\\lib\\ip.jar;%APP_HOME%\\lib\\natty-0.6.jar;%APP_HOME%\\lib\\javafx-fxml-11-win.jar;%APP_HOME%\\lib\\javafx-fxml-11-mac.jar;%APP_HOME%\\lib\\javafx-fxml-11-linux.jar;%APP_HOME%\\lib\\javafx-controls-11-win.jar;%APP_HOME%\\lib\\javafx-controls-11-mac.jar;%APP_HOME%\\lib\\javafx-controls-11-linux.jar;%APP_HOME%\\lib\\javafx-controls-11.jar;%APP_HOME%\\lib\\javafx-graphics-11-win.jar;%APP_HOME%\\lib\\javafx-graphics-11-mac.jar;%APP_HOME%\\lib\\javafx-graphics-11-linux.jar;%APP_HOME%\\lib\\javafx-graphics-11.jar;%APP_HOME%\\lib\\javafx-base-11-win.jar;%APP_HOME%\\lib\\javafx-base-11-mac.jar;%APP_HOME%\\lib\\javafx-base-11-linux.jar;%APP_HOME%\\lib\\javafx-base-11.jar;%APP_HOME%\\lib\\antlr-runtime-3.2.jar;%APP_HOME%\\lib\\stringtemplate-3.2.jar;%APP_HOME%\\lib\\antlr-2.7.7.jar;%APP_HOME%\\lib\\ical4j-1.0.2.jar;%APP_HOME%\\lib\\commons-logging-1.1.1.jar;%APP_HOME%\\lib\\commons-codec-1.5.jar;%APP_HOME%\\lib\\commons-lang-2.6.jar;%APP_HOME%\\lib\\backport-util-concurrent-3.1.jar"},{"lineNumber":71,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":72,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":73,"author":{"gitId":"Jacob-109"},"content":"@rem Execute ip"},{"lineNumber":74,"author":{"gitId":"Jacob-109"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %IP_OPTS%  -classpath \"%CLASSPATH%\" Duke.java %*"},{"lineNumber":75,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":76,"author":{"gitId":"Jacob-109"},"content":":end"},{"lineNumber":77,"author":{"gitId":"Jacob-109"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":78,"author":{"gitId":"Jacob-109"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":79,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":80,"author":{"gitId":"Jacob-109"},"content":":fail"},{"lineNumber":81,"author":{"gitId":"Jacob-109"},"content":"rem Set variable IP_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":82,"author":{"gitId":"Jacob-109"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":83,"author":{"gitId":"Jacob-109"},"content":"if  not \"\" \u003d\u003d \"%IP_EXIT_CONSOLE%\" exit 1"},{"lineNumber":84,"author":{"gitId":"Jacob-109"},"content":"exit /b 1"},{"lineNumber":85,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":86,"author":{"gitId":"Jacob-109"},"content":":mainEnd"},{"lineNumber":87,"author":{"gitId":"Jacob-109"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":88,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":89,"author":{"gitId":"Jacob-109"},"content":":omega"}],"authorContributionMap":{"Jacob-109":89}},{"path":"src/main/java/build/scriptsShadow/ip.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"@rem ##########################################################################"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"@rem  ip startup script for Windows"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"@rem"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"@rem ##########################################################################"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"set APP_HOME\u003d%DIRNAME%.."},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and IP_OPTS to pass JVM options to this script."},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"set DEFAULT_JVM_OPTS\u003d"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"@rem Find java.exe"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":"echo."},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":"echo."},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":"echo location of your Java installation."},{"lineNumber":31,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":32,"author":{"gitId":"Jacob-109"},"content":"goto fail"},{"lineNumber":33,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":34,"author":{"gitId":"Jacob-109"},"content":":findJavaFromJavaHome"},{"lineNumber":35,"author":{"gitId":"Jacob-109"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":36,"author":{"gitId":"Jacob-109"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":37,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":38,"author":{"gitId":"Jacob-109"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":39,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":40,"author":{"gitId":"Jacob-109"},"content":"echo."},{"lineNumber":41,"author":{"gitId":"Jacob-109"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":42,"author":{"gitId":"Jacob-109"},"content":"echo."},{"lineNumber":43,"author":{"gitId":"Jacob-109"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":44,"author":{"gitId":"Jacob-109"},"content":"echo location of your Java installation."},{"lineNumber":45,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":46,"author":{"gitId":"Jacob-109"},"content":"goto fail"},{"lineNumber":47,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":48,"author":{"gitId":"Jacob-109"},"content":":init"},{"lineNumber":49,"author":{"gitId":"Jacob-109"},"content":"@rem Get command-line arguments, handling Windows variants"},{"lineNumber":50,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":51,"author":{"gitId":"Jacob-109"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":52,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":53,"author":{"gitId":"Jacob-109"},"content":":win9xME_args"},{"lineNumber":54,"author":{"gitId":"Jacob-109"},"content":"@rem Slurp the command line arguments."},{"lineNumber":55,"author":{"gitId":"Jacob-109"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":56,"author":{"gitId":"Jacob-109"},"content":"set _SKIP\u003d2"},{"lineNumber":57,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":58,"author":{"gitId":"Jacob-109"},"content":":win9xME_args_slurp"},{"lineNumber":59,"author":{"gitId":"Jacob-109"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":60,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":61,"author":{"gitId":"Jacob-109"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":62,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":63,"author":{"gitId":"Jacob-109"},"content":":execute"},{"lineNumber":64,"author":{"gitId":"Jacob-109"},"content":"@rem Setup the command line"},{"lineNumber":65,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":66,"author":{"gitId":"Jacob-109"},"content":"set CLASSPATH\u003d%APP_HOME%\\lib\\duke.jar"},{"lineNumber":67,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":68,"author":{"gitId":"Jacob-109"},"content":"@rem Execute ip"},{"lineNumber":69,"author":{"gitId":"Jacob-109"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %IP_OPTS%  -jar \"%CLASSPATH%\" %CMD_LINE_ARGS%"},{"lineNumber":70,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":71,"author":{"gitId":"Jacob-109"},"content":":end"},{"lineNumber":72,"author":{"gitId":"Jacob-109"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":73,"author":{"gitId":"Jacob-109"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":74,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":75,"author":{"gitId":"Jacob-109"},"content":":fail"},{"lineNumber":76,"author":{"gitId":"Jacob-109"},"content":"rem Set variable IP_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":77,"author":{"gitId":"Jacob-109"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":78,"author":{"gitId":"Jacob-109"},"content":"if  not \"\" \u003d\u003d \"%IP_EXIT_CONSOLE%\" exit 1"},{"lineNumber":79,"author":{"gitId":"Jacob-109"},"content":"exit /b 1"},{"lineNumber":80,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":81,"author":{"gitId":"Jacob-109"},"content":":mainEnd"},{"lineNumber":82,"author":{"gitId":"Jacob-109"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":83,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":84,"author":{"gitId":"Jacob-109"},"content":":omega"}],"authorContributionMap":{"Jacob-109":84}},{"path":"src/main/java/gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":24,"author":{"gitId":"Jacob-109"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"Jacob-109"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":27,"author":{"gitId":"Jacob-109"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"Jacob-109"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"Jacob-109"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"Jacob-109"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":32,"author":{"gitId":"Jacob-109"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"Jacob-109"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":35,"author":{"gitId":"Jacob-109"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"Jacob-109"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":38,"author":{"gitId":"Jacob-109"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"Jacob-109"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":41,"author":{"gitId":"Jacob-109"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"Jacob-109"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"Jacob-109"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":44,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":45,"author":{"gitId":"Jacob-109"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"Jacob-109"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"Jacob-109"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"Jacob-109"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"Jacob-109"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":51,"author":{"gitId":"Jacob-109"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":53,"author":{"gitId":"Jacob-109"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"Jacob-109"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"Jacob-109"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":57,"author":{"gitId":"Jacob-109"},"content":"if exist \"%JAVA_EXE%\" goto execute"},{"lineNumber":58,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":59,"author":{"gitId":"Jacob-109"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"Jacob-109"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"Jacob-109"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"Jacob-109"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"Jacob-109"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":65,"author":{"gitId":"Jacob-109"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":67,"author":{"gitId":"Jacob-109"},"content":":execute"},{"lineNumber":68,"author":{"gitId":"Jacob-109"},"content":"@rem Setup the command line"},{"lineNumber":69,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":70,"author":{"gitId":"Jacob-109"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":71,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":72,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":73,"author":{"gitId":"Jacob-109"},"content":"@rem Execute Gradle"},{"lineNumber":74,"author":{"gitId":"Jacob-109"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"},{"lineNumber":75,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":76,"author":{"gitId":"Jacob-109"},"content":":end"},{"lineNumber":77,"author":{"gitId":"Jacob-109"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":78,"author":{"gitId":"Jacob-109"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":79,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":80,"author":{"gitId":"Jacob-109"},"content":":fail"},{"lineNumber":81,"author":{"gitId":"Jacob-109"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":82,"author":{"gitId":"Jacob-109"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":83,"author":{"gitId":"Jacob-109"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":84,"author":{"gitId":"Jacob-109"},"content":"exit /b 1"},{"lineNumber":85,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":86,"author":{"gitId":"Jacob-109"},"content":":mainEnd"},{"lineNumber":87,"author":{"gitId":"Jacob-109"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":88,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":89,"author":{"gitId":"Jacob-109"},"content":":omega"}],"authorContributionMap":{"Jacob-109":89}},{"path":"src/main/java/settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"/*"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":" * This file was generated by the Gradle \u0027init\u0027 task."},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":" *"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":" * The settings file is used to specify which projects to include in your build."},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":" *"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":" * Detailed information about configuring a multi-project build in Gradle can be found"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":" * in the user manual at https://docs.gradle.org/6.8.3/userguide/multi_project_builds.html"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"rootProject.name \u003d \u0027ip\u0027"}],"authorContributionMap":{"Jacob-109":10}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"public class DeadlineTest {"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"    public void testGetBy() {"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"        LocalDate date \u003d LocalDate.parse(\"2/12/2019\",formatter);"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"        Deadline test \u003d new Deadline(\"return book\", date);"},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":"        assertEquals(date, test.getBy());"},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"    public void testToString() {"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"        LocalDate date \u003d LocalDate.parse(\"2/12/2019\",formatter);"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"        Deadline test \u003d new Deadline(\"return book\", date);"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"        assertEquals(\"[D][Incompleted] lunch (by:Dec 12 2019)\", test.toString());"},{"lineNumber":22,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Jacob-109"},"content":"}"}],"authorContributionMap":{"Jacob-109":23}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jacob-109"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"Jacob-109"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"Jacob-109"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"Jacob-109"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":6,"author":{"gitId":"Jacob-109"},"content":"public class TaskListTest {"},{"lineNumber":7,"author":{"gitId":"Jacob-109"},"content":"    TaskList taskList \u003d new TaskList();"},{"lineNumber":8,"author":{"gitId":"Jacob-109"},"content":"    ToDo todo \u003d new ToDo(\"run\");"},{"lineNumber":9,"author":{"gitId":"Jacob-109"},"content":"    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":10,"author":{"gitId":"Jacob-109"},"content":"    LocalDate date \u003d LocalDate.parse(\"2/12/2019\",formatter);"},{"lineNumber":11,"author":{"gitId":"Jacob-109"},"content":"    Deadline deadline \u003d new Deadline(\"return book\", date);"},{"lineNumber":12,"author":{"gitId":"Jacob-109"},"content":"    Event event \u003d new Event(\"event project meeting\", \"Mon 2-4pm\") ;"},{"lineNumber":13,"author":{"gitId":"Jacob-109"},"content":""},{"lineNumber":14,"author":{"gitId":"Jacob-109"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"Jacob-109"},"content":"    public void testNumOfTask() {"},{"lineNumber":16,"author":{"gitId":"Jacob-109"},"content":"        taskList.addTask(todo);"},{"lineNumber":17,"author":{"gitId":"Jacob-109"},"content":"        taskList.addTask(deadline);"},{"lineNumber":18,"author":{"gitId":"Jacob-109"},"content":"        taskList.addTask(event);"},{"lineNumber":19,"author":{"gitId":"Jacob-109"},"content":"        assertEquals(3, taskList.numOfTasks());"},{"lineNumber":20,"author":{"gitId":"Jacob-109"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Jacob-109"},"content":"}"}],"authorContributionMap":{"Jacob-109":21}}]
