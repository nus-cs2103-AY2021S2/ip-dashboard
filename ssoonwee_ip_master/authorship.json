[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"# Duke User Guide"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"Welcome to Duke Application. This program acts as a companion to remind you of the upcoming tasks that you have. It uses a command line interface which you can operate it by typing commands into the Command Box."},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":"## Feature Page"},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":"### [Create a ToDo task](#create-a-todo-task-1)"},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":"### [Create a Deadline task](#create-a-deadline-task-1)"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"### [Create an Event task](#create-an-event-task-1)"},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":"### [List all tasks](#list-all-tasks-1)"},{"lineNumber":14,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":15,"author":{"gitId":"ssoonwee"},"content":"### [Delete a task](#delete-a-task-1)"},{"lineNumber":16,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":17,"author":{"gitId":"ssoonwee"},"content":"### [Mark a task as done](#mark-a-task-as-done-1)"},{"lineNumber":18,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":19,"author":{"gitId":"ssoonwee"},"content":"### [Find keywords](#find-keywords-1)"},{"lineNumber":20,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":21,"author":{"gitId":"ssoonwee"},"content":"### [Sort tasks by DateTime](#sort-tasks-by-datetime-1)"},{"lineNumber":22,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":23,"author":{"gitId":"ssoonwee"},"content":"### [Exit Application](#exit-application-1)"},{"lineNumber":24,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":25,"author":{"gitId":"ssoonwee"},"content":"## Command Usage"},{"lineNumber":26,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":27,"author":{"gitId":"ssoonwee"},"content":"### Create a ToDo task"},{"lineNumber":28,"author":{"gitId":"ssoonwee"},"content":"* Description: Adds a Todo task followed by its description. "},{"lineNumber":29,"author":{"gitId":"ssoonwee"},"content":"* Notes: Its description cannot be left empty."},{"lineNumber":30,"author":{"gitId":"ssoonwee"},"content":"* Command: `todo`"},{"lineNumber":31,"author":{"gitId":"ssoonwee"},"content":"* Command Format: `todo \u003cDescription\u003e`"},{"lineNumber":32,"author":{"gitId":"ssoonwee"},"content":"* Command Example: `todo Read books`"},{"lineNumber":33,"author":{"gitId":"ssoonwee"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":34,"author":{"gitId":"ssoonwee"},"content":"  \u003cimg height\u003d\"640\" width\u003d\"480\" src\u003d\"/docs/images/create_todo_task.png\"\u003e"},{"lineNumber":35,"author":{"gitId":"ssoonwee"},"content":"\u003c/p\u003e"},{"lineNumber":36,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":37,"author":{"gitId":"ssoonwee"},"content":"### Create a Deadline task"},{"lineNumber":38,"author":{"gitId":"ssoonwee"},"content":"* Description: Adds a Deadline task followed by its description."},{"lineNumber":39,"author":{"gitId":"ssoonwee"},"content":"* Notes: Its description cannot be left empty. /by \u003cDateTime\u003e format has to be adhered for command to work."},{"lineNumber":40,"author":{"gitId":"ssoonwee"},"content":"* Command: `deadline`"},{"lineNumber":41,"author":{"gitId":"ssoonwee"},"content":"* Command Format: `deadline \u003cDescription\u003e /by \u003cDateTime format in YYYY-MM-DD HH:MM\u003e`"},{"lineNumber":42,"author":{"gitId":"ssoonwee"},"content":"* Command Example: `deadline Submit work /by 2021-02-28 10:00`"},{"lineNumber":43,"author":{"gitId":"ssoonwee"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":44,"author":{"gitId":"ssoonwee"},"content":"  \u003cimg height\u003d\"640\" width\u003d\"480\" src\u003d\"https://github.com/ssoonwee/ip/blob/master/docs/images/create_deadline_task.png\"\u003e"},{"lineNumber":45,"author":{"gitId":"ssoonwee"},"content":"\u003c/p\u003e"},{"lineNumber":46,"author":{"gitId":"ssoonwee"},"content":"  "},{"lineNumber":47,"author":{"gitId":"ssoonwee"},"content":"### Create an Event task"},{"lineNumber":48,"author":{"gitId":"ssoonwee"},"content":"* Description: Adds an Event task followed by its description and date time."},{"lineNumber":49,"author":{"gitId":"ssoonwee"},"content":"* Notes: Its description cannot be left empty. /at \u003cDateTime\u003e format has to be adhered for command to work."},{"lineNumber":50,"author":{"gitId":"ssoonwee"},"content":"* Command: `event`"},{"lineNumber":51,"author":{"gitId":"ssoonwee"},"content":"* Command Format: `event \u003cDescription\u003e /at \u003cDateTime format in YYYY-MM-DD HH:MM\u003e`"},{"lineNumber":52,"author":{"gitId":"ssoonwee"},"content":"* Command Example: `event Summer festival /at 2021-02-27 17:00`"},{"lineNumber":53,"author":{"gitId":"ssoonwee"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":54,"author":{"gitId":"ssoonwee"},"content":"  \u003cimg height\u003d\"640\" width\u003d\"480\" src\u003d\"https://github.com/ssoonwee/ip/blob/master/docs/images/create_event_task.png\"\u003e"},{"lineNumber":55,"author":{"gitId":"ssoonwee"},"content":"\u003c/p\u003e"},{"lineNumber":56,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":57,"author":{"gitId":"ssoonwee"},"content":"### List all tasks"},{"lineNumber":58,"author":{"gitId":"ssoonwee"},"content":"* Description: Lists down all the upcoming tasks that you have."},{"lineNumber":59,"author":{"gitId":"ssoonwee"},"content":"* Command: `list`"},{"lineNumber":60,"author":{"gitId":"ssoonwee"},"content":"* Command Format: `list`"},{"lineNumber":61,"author":{"gitId":"ssoonwee"},"content":"* Command Example: `list`"},{"lineNumber":62,"author":{"gitId":"ssoonwee"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":63,"author":{"gitId":"ssoonwee"},"content":"  \u003cimg height\u003d\"640\" width\u003d\"480\" src\u003d\"https://github.com/ssoonwee/ip/blob/master/docs/images/list_task.png\"\u003e"},{"lineNumber":64,"author":{"gitId":"ssoonwee"},"content":"\u003c/p\u003e"},{"lineNumber":65,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":66,"author":{"gitId":"ssoonwee"},"content":"### Delete task"},{"lineNumber":67,"author":{"gitId":"ssoonwee"},"content":"* Description: Deletes the task item at the respective index."},{"lineNumber":68,"author":{"gitId":"ssoonwee"},"content":"* Note: Index has to be within the number of tasks in order for it to function."},{"lineNumber":69,"author":{"gitId":"ssoonwee"},"content":"* Command: `delete`"},{"lineNumber":70,"author":{"gitId":"ssoonwee"},"content":"* Command Format: `delete \u003cindex\u003e`"},{"lineNumber":71,"author":{"gitId":"ssoonwee"},"content":"* Command Example: `delete 1`"},{"lineNumber":72,"author":{"gitId":"ssoonwee"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":73,"author":{"gitId":"ssoonwee"},"content":"  \u003cimg height\u003d\"640\" width\u003d\"480\" src\u003d\"https://github.com/ssoonwee/ip/blob/master/docs/images/delete_task.png\"\u003e"},{"lineNumber":74,"author":{"gitId":"ssoonwee"},"content":"\u003c/p\u003e"},{"lineNumber":75,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":76,"author":{"gitId":"ssoonwee"},"content":"### Mark a task as done"},{"lineNumber":77,"author":{"gitId":"ssoonwee"},"content":"* Description: Marks task as completed at the respective index."},{"lineNumber":78,"author":{"gitId":"ssoonwee"},"content":"* Note: Index has to be within the number of tasks in order for it to function."},{"lineNumber":79,"author":{"gitId":"ssoonwee"},"content":"* Command: `done`"},{"lineNumber":80,"author":{"gitId":"ssoonwee"},"content":"* Command Format: `done \u003cindex\u003e`"},{"lineNumber":81,"author":{"gitId":"ssoonwee"},"content":"* Command Example: `done 2`"},{"lineNumber":82,"author":{"gitId":"ssoonwee"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":83,"author":{"gitId":"ssoonwee"},"content":"  \u003cimg height\u003d\"640\" width\u003d\"480\" src\u003d\"https://github.com/ssoonwee/ip/blob/master/docs/images/mark_task_done.png\"\u003e"},{"lineNumber":84,"author":{"gitId":"ssoonwee"},"content":"\u003c/p\u003e"},{"lineNumber":85,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":86,"author":{"gitId":"ssoonwee"},"content":"### Find keywords"},{"lineNumber":87,"author":{"gitId":"ssoonwee"},"content":"* Description: Searches for any tasks that contains the defined text."},{"lineNumber":88,"author":{"gitId":"ssoonwee"},"content":"* Command: `find`"},{"lineNumber":89,"author":{"gitId":"ssoonwee"},"content":"* Command Format: `find \u003ctext\u003e`"},{"lineNumber":90,"author":{"gitId":"ssoonwee"},"content":"* Command Example: `find festival`"},{"lineNumber":91,"author":{"gitId":"ssoonwee"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":92,"author":{"gitId":"ssoonwee"},"content":"  \u003cimg height\u003d\"640\" width\u003d\"480\" src\u003d\"https://github.com/ssoonwee/ip/blob/master/docs/images/find_task.png\"\u003e"},{"lineNumber":93,"author":{"gitId":"ssoonwee"},"content":"\u003c/p\u003e"},{"lineNumber":94,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":95,"author":{"gitId":"ssoonwee"},"content":"### Sort tasks by DateTime"},{"lineNumber":96,"author":{"gitId":"ssoonwee"},"content":"* Description: Sorts tasks according to the earliest task that is due at the top."},{"lineNumber":97,"author":{"gitId":"ssoonwee"},"content":"* Command: `sort`"},{"lineNumber":98,"author":{"gitId":"ssoonwee"},"content":"* Command Format: `sort`"},{"lineNumber":99,"author":{"gitId":"ssoonwee"},"content":"* Command Example: `sort`"},{"lineNumber":100,"author":{"gitId":"ssoonwee"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":101,"author":{"gitId":"ssoonwee"},"content":"  \u003cimg height\u003d\"640\" width\u003d\"480\" src\u003d\"https://github.com/ssoonwee/ip/blob/master/docs/images/sort_task.png\"\u003e"},{"lineNumber":102,"author":{"gitId":"ssoonwee"},"content":"\u003c/p\u003e"},{"lineNumber":103,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":104,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":105,"author":{"gitId":"ssoonwee"},"content":"### Exit Application"},{"lineNumber":106,"author":{"gitId":"ssoonwee"},"content":"* Description: Ends the application."},{"lineNumber":107,"author":{"gitId":"ssoonwee"},"content":"* Command: `bye`"},{"lineNumber":108,"author":{"gitId":"ssoonwee"},"content":"* Command Format: `bye`"},{"lineNumber":109,"author":{"gitId":"ssoonwee"},"content":"* Command Example: `bye`"}],"authorContributionMap":{"ssoonwee":109}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":16,"author":{"gitId":"ssoonwee"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":18,"author":{"gitId":"ssoonwee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"ssoonwee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"ssoonwee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"ssoonwee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"ssoonwee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"ssoonwee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"ssoonwee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"ssoonwee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"ssoonwee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"ssoonwee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"ssoonwee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"ssoonwee"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"ssoonwee"},"content":"    mainClassName \u003d \"soonwee.duke.Driver\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ssoonwee":16,"-":45}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"[T][X] read books"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":"[E][X] expo (at: Jan 10 2019 14:00)"},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"[D][X] send me over (by: Jul 01 2018 10:00)"}],"authorContributionMap":{"ssoonwee":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"# Duke User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"Welcome to Duke Application. This program acts as a companion to remind you of the upcoming tasks that you have. It uses a command line interface which you can operate it by typing commands into the Command Box."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":"## Feature Page"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":"### [Create a ToDo task](#create-a-todo-task-1)"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":"### [Create a Deadline task](#create-a-deadline-task-1)"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"### [Create an Event task](#create-an-event-task-1)"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":"### [List all tasks](#list-all-tasks-1)"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"ssoonwee"},"content":"### [Delete a task](#delete-a-task-1)"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"ssoonwee"},"content":"### [Mark a task as done](#mark-a-task-as-done-1)"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"ssoonwee"},"content":"### [Find keywords](#find-keywords-1)"},{"lineNumber":20,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":21,"author":{"gitId":"ssoonwee"},"content":"### [Sort tasks by DateTime](#sort-tasks-by-datetime-1)"},{"lineNumber":22,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":23,"author":{"gitId":"ssoonwee"},"content":"### [Exit Application](#exit-application-1)"},{"lineNumber":24,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":25,"author":{"gitId":"ssoonwee"},"content":"## Command Usage"},{"lineNumber":26,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":27,"author":{"gitId":"ssoonwee"},"content":"### Create a ToDo task"},{"lineNumber":28,"author":{"gitId":"ssoonwee"},"content":"* Description: Adds a Todo task followed by its description. "},{"lineNumber":29,"author":{"gitId":"ssoonwee"},"content":"* Notes: Its description cannot be left empty."},{"lineNumber":30,"author":{"gitId":"ssoonwee"},"content":"* Command: `todo`"},{"lineNumber":31,"author":{"gitId":"ssoonwee"},"content":"* Command Format: `todo \u003cDescription\u003e`"},{"lineNumber":32,"author":{"gitId":"ssoonwee"},"content":"* Command Example: `todo Read books`"},{"lineNumber":33,"author":{"gitId":"ssoonwee"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":34,"author":{"gitId":"ssoonwee"},"content":"  \u003cimg height\u003d\"640\" width\u003d\"480\" src\u003d\"images/create_todo_task.png\"\u003e"},{"lineNumber":35,"author":{"gitId":"ssoonwee"},"content":"\u003c/p\u003e"},{"lineNumber":36,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":37,"author":{"gitId":"ssoonwee"},"content":"### Create a Deadline task"},{"lineNumber":38,"author":{"gitId":"ssoonwee"},"content":"* Description: Adds a Deadline task followed by its description."},{"lineNumber":39,"author":{"gitId":"ssoonwee"},"content":"* Notes: Its description cannot be left empty. /by \u003cDateTime\u003e format has to be adhered for command to work."},{"lineNumber":40,"author":{"gitId":"ssoonwee"},"content":"* Command: `deadline`"},{"lineNumber":41,"author":{"gitId":"ssoonwee"},"content":"* Command Format: `deadline \u003cDescription\u003e /by \u003cDateTime format in YYYY-MM-DD HH:MM\u003e`"},{"lineNumber":42,"author":{"gitId":"ssoonwee"},"content":"* Command Example: `deadline Submit work /by 2021-02-28 10:00`"},{"lineNumber":43,"author":{"gitId":"ssoonwee"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":44,"author":{"gitId":"ssoonwee"},"content":"  \u003cimg height\u003d\"640\" width\u003d\"480\" src\u003d\"images/create_deadline_task.png\"\u003e"},{"lineNumber":45,"author":{"gitId":"ssoonwee"},"content":"\u003c/p\u003e"},{"lineNumber":46,"author":{"gitId":"ssoonwee"},"content":"  "},{"lineNumber":47,"author":{"gitId":"ssoonwee"},"content":"### Create an Event task"},{"lineNumber":48,"author":{"gitId":"ssoonwee"},"content":"* Description: Adds an Event task followed by its description and date time."},{"lineNumber":49,"author":{"gitId":"ssoonwee"},"content":"* Notes: Its description cannot be left empty. /at \u003cDateTime\u003e format has to be adhered for command to work."},{"lineNumber":50,"author":{"gitId":"ssoonwee"},"content":"* Command: `event`"},{"lineNumber":51,"author":{"gitId":"ssoonwee"},"content":"* Command Format: `event \u003cDescription\u003e /at \u003cDateTime format in YYYY-MM-DD HH:MM\u003e`"},{"lineNumber":52,"author":{"gitId":"ssoonwee"},"content":"* Command Example: `event Summer festival /at 2021-02-27 17:00`"},{"lineNumber":53,"author":{"gitId":"ssoonwee"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":54,"author":{"gitId":"ssoonwee"},"content":"  \u003cimg height\u003d\"640\" width\u003d\"480\" src\u003d\"images/create_event_task.png\"\u003e"},{"lineNumber":55,"author":{"gitId":"ssoonwee"},"content":"\u003c/p\u003e"},{"lineNumber":56,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":57,"author":{"gitId":"ssoonwee"},"content":"### List all tasks"},{"lineNumber":58,"author":{"gitId":"ssoonwee"},"content":"* Description: Lists down all the upcoming tasks that you have."},{"lineNumber":59,"author":{"gitId":"ssoonwee"},"content":"* Command: `list`"},{"lineNumber":60,"author":{"gitId":"ssoonwee"},"content":"* Command Format: `list`"},{"lineNumber":61,"author":{"gitId":"ssoonwee"},"content":"* Command Example: `list`"},{"lineNumber":62,"author":{"gitId":"ssoonwee"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":63,"author":{"gitId":"ssoonwee"},"content":"  \u003cimg height\u003d\"640\" width\u003d\"480\" src\u003d\"images/list_task.png\"\u003e"},{"lineNumber":64,"author":{"gitId":"ssoonwee"},"content":"\u003c/p\u003e"},{"lineNumber":65,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":66,"author":{"gitId":"ssoonwee"},"content":"### Delete task"},{"lineNumber":67,"author":{"gitId":"ssoonwee"},"content":"* Description: Deletes the task item at the respective index."},{"lineNumber":68,"author":{"gitId":"ssoonwee"},"content":"* Note: Index has to be within the number of tasks in order for it to function."},{"lineNumber":69,"author":{"gitId":"ssoonwee"},"content":"* Command: `delete`"},{"lineNumber":70,"author":{"gitId":"ssoonwee"},"content":"* Command Format: `delete \u003cindex\u003e`"},{"lineNumber":71,"author":{"gitId":"ssoonwee"},"content":"* Command Example: `delete 1`"},{"lineNumber":72,"author":{"gitId":"ssoonwee"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":73,"author":{"gitId":"ssoonwee"},"content":"  \u003cimg height\u003d\"640\" width\u003d\"480\" src\u003d\"images/delete_task.png\"\u003e"},{"lineNumber":74,"author":{"gitId":"ssoonwee"},"content":"\u003c/p\u003e"},{"lineNumber":75,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":76,"author":{"gitId":"ssoonwee"},"content":"### Mark a task as done"},{"lineNumber":77,"author":{"gitId":"ssoonwee"},"content":"* Description: Marks task as completed at the respective index."},{"lineNumber":78,"author":{"gitId":"ssoonwee"},"content":"* Note: Index has to be within the number of tasks in order for it to function."},{"lineNumber":79,"author":{"gitId":"ssoonwee"},"content":"* Command: `done`"},{"lineNumber":80,"author":{"gitId":"ssoonwee"},"content":"* Command Format: `done \u003cindex\u003e`"},{"lineNumber":81,"author":{"gitId":"ssoonwee"},"content":"* Command Example: `done 2`"},{"lineNumber":82,"author":{"gitId":"ssoonwee"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":83,"author":{"gitId":"ssoonwee"},"content":"  \u003cimg height\u003d\"640\" width\u003d\"480\" src\u003d\"images/mark_task_done.png\"\u003e"},{"lineNumber":84,"author":{"gitId":"ssoonwee"},"content":"\u003c/p\u003e"},{"lineNumber":85,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":86,"author":{"gitId":"ssoonwee"},"content":"### Find keywords"},{"lineNumber":87,"author":{"gitId":"ssoonwee"},"content":"* Description: Searches for any tasks that contains the defined text."},{"lineNumber":88,"author":{"gitId":"ssoonwee"},"content":"* Command: `find`"},{"lineNumber":89,"author":{"gitId":"ssoonwee"},"content":"* Command Format: `find \u003ctext\u003e`"},{"lineNumber":90,"author":{"gitId":"ssoonwee"},"content":"* Command Example: `find festival`"},{"lineNumber":91,"author":{"gitId":"ssoonwee"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":92,"author":{"gitId":"ssoonwee"},"content":"  \u003cimg height\u003d\"640\" width\u003d\"480\" src\u003d\"images/find_task.png\"\u003e"},{"lineNumber":93,"author":{"gitId":"ssoonwee"},"content":"\u003c/p\u003e"},{"lineNumber":94,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":95,"author":{"gitId":"ssoonwee"},"content":"### Sort tasks by DateTime"},{"lineNumber":96,"author":{"gitId":"ssoonwee"},"content":"* Description: Sorts tasks according to the earliest task that is due at the top."},{"lineNumber":97,"author":{"gitId":"ssoonwee"},"content":"* Command: `sort`"},{"lineNumber":98,"author":{"gitId":"ssoonwee"},"content":"* Command Format: `sort`"},{"lineNumber":99,"author":{"gitId":"ssoonwee"},"content":"* Command Example: `sort`"},{"lineNumber":100,"author":{"gitId":"ssoonwee"},"content":"\u003cp align\u003d\"center\"\u003e"},{"lineNumber":101,"author":{"gitId":"ssoonwee"},"content":"  \u003cimg height\u003d\"640\" width\u003d\"480\" src\u003d\"images/sort_task.png\"\u003e"},{"lineNumber":102,"author":{"gitId":"ssoonwee"},"content":"\u003c/p\u003e"},{"lineNumber":103,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":104,"author":{"gitId":"ssoonwee"},"content":"### Exit Application"},{"lineNumber":105,"author":{"gitId":"ssoonwee"},"content":"* Description: Ends the application."},{"lineNumber":106,"author":{"gitId":"ssoonwee"},"content":"* Command: `bye`"},{"lineNumber":107,"author":{"gitId":"ssoonwee"},"content":"* Command Format: `bye`"},{"lineNumber":108,"author":{"gitId":"ssoonwee"},"content":"* Command Example: `bye`"}],"authorContributionMap":{"ssoonwee":99,"-":9}},{"path":"src/main/java/soonwee/duke/DateTimeComparator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"package soonwee.duke;"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":"import java.util.Comparator;"},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":" * Represents a DateTimeComparator instance. It compares the time of a task"},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":" * with one another."},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":" */"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"public class DateTimeComparator implements Comparator\u003cTask\u003e {"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":"    public int compare(Task task1, Task task2) {"},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":"        LocalDateTime time1 \u003d task1.getDateTime();"},{"lineNumber":14,"author":{"gitId":"ssoonwee"},"content":"        LocalDateTime time2 \u003d task2.getDateTime();"},{"lineNumber":15,"author":{"gitId":"ssoonwee"},"content":"        if (time1 !\u003d null \u0026\u0026 time2 !\u003d null) {"},{"lineNumber":16,"author":{"gitId":"ssoonwee"},"content":"            if (time1.isBefore(time2)) {"},{"lineNumber":17,"author":{"gitId":"ssoonwee"},"content":"                return -1;"},{"lineNumber":18,"author":{"gitId":"ssoonwee"},"content":"            } else if (time1.isAfter(time2)) {"},{"lineNumber":19,"author":{"gitId":"ssoonwee"},"content":"                return 1;"},{"lineNumber":20,"author":{"gitId":"ssoonwee"},"content":"            } else {"},{"lineNumber":21,"author":{"gitId":"ssoonwee"},"content":"                return 0;"},{"lineNumber":22,"author":{"gitId":"ssoonwee"},"content":"            }"},{"lineNumber":23,"author":{"gitId":"ssoonwee"},"content":"        } else {"},{"lineNumber":24,"author":{"gitId":"ssoonwee"},"content":"            return -1;"},{"lineNumber":25,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"ssoonwee"},"content":"}"}],"authorContributionMap":{"ssoonwee":27}},{"path":"src/main/java/soonwee/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"package soonwee.duke;"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":" * Represents a Deadline instance. A Deadline instance will store the task"},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":" * name and its due completion time."},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":" */"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"public class Deadline extends TimedTask {"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":"     * Instantiates the Deadline task."},{"lineNumber":14,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"ssoonwee"},"content":"     * @param description description of the task"},{"lineNumber":16,"author":{"gitId":"ssoonwee"},"content":"     * @param endTime     deadline to complete the task by"},{"lineNumber":17,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"ssoonwee"},"content":"    public Deadline(String description, LocalDateTime endTime) {"},{"lineNumber":19,"author":{"gitId":"ssoonwee"},"content":"        super(description, endTime);"},{"lineNumber":20,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":22,"author":{"gitId":"ssoonwee"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"ssoonwee"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"ssoonwee"},"content":"        return \"[D]\" + super.toString() + \"(by: \""},{"lineNumber":25,"author":{"gitId":"ssoonwee"},"content":"                + this.dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";"},{"lineNumber":26,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"ssoonwee"},"content":"}"}],"authorContributionMap":{"ssoonwee":27}},{"path":"src/main/java/soonwee/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"package soonwee.duke;"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"ssoonwee"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"ssoonwee"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":17,"author":{"gitId":"ssoonwee"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"ssoonwee"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"ssoonwee"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"ssoonwee"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"ssoonwee"},"content":" */"},{"lineNumber":22,"author":{"gitId":"ssoonwee"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"ssoonwee"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"ssoonwee"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"ssoonwee"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"ssoonwee"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":28,"author":{"gitId":"ssoonwee"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"ssoonwee"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"ssoonwee"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"ssoonwee"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"ssoonwee"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"ssoonwee"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"ssoonwee"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"ssoonwee"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":38,"author":{"gitId":"ssoonwee"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"ssoonwee"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":42,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"ssoonwee"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"ssoonwee"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"ssoonwee"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"ssoonwee"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"ssoonwee"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"ssoonwee"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":52,"author":{"gitId":"ssoonwee"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"ssoonwee"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":56,"author":{"gitId":"ssoonwee"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"ssoonwee"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"ssoonwee"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"ssoonwee"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"ssoonwee"},"content":"}"}],"authorContributionMap":{"ssoonwee":61}},{"path":"src/main/java/soonwee/duke/Driver.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"package soonwee.duke;"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":" */"},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":"public class Driver {"},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":"}"}],"authorContributionMap":{"ssoonwee":12}},{"path":"src/main/java/soonwee/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"package soonwee.duke;"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":" * Represents a Duke instance."},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":" */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"    static final int DONE_INDEX \u003d 5; //Read from index 5 of string."},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"    static final int DELETE_INDEX \u003d 7; //Read from index 7 of string."},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"ssoonwee"},"content":"     * Initializes the input by checking the front command and performing"},{"lineNumber":15,"author":{"gitId":"ssoonwee"},"content":"     * their required actions."},{"lineNumber":16,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"ssoonwee"},"content":"     * @param input string input"},{"lineNumber":18,"author":{"gitId":"ssoonwee"},"content":"     * @return a string output based on the result computed"},{"lineNumber":19,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"ssoonwee"},"content":"    public static String initialize(String input) {"},{"lineNumber":21,"author":{"gitId":"ssoonwee"},"content":"        assert input !\u003d null : \"Input is null.\";"},{"lineNumber":22,"author":{"gitId":"ssoonwee"},"content":"        String result;"},{"lineNumber":23,"author":{"gitId":"ssoonwee"},"content":"        Storage storage \u003d new Storage(\"data\\\\tasks.txt\");"},{"lineNumber":24,"author":{"gitId":"ssoonwee"},"content":"        boolean isValidForDoneOrDelete \u003d new Parser().isValidDeleteAndDoneInput(input);"},{"lineNumber":25,"author":{"gitId":"ssoonwee"},"content":"        if (input.equals(\"list\")) {"},{"lineNumber":26,"author":{"gitId":"ssoonwee"},"content":"            result \u003d storage.getTaskList().displayTasks();"},{"lineNumber":27,"author":{"gitId":"ssoonwee"},"content":"        } else if (input.startsWith(\"done\") \u0026\u0026 isValidForDoneOrDelete) {"},{"lineNumber":28,"author":{"gitId":"ssoonwee"},"content":"            int index \u003d Integer.parseInt(input.substring(DONE_INDEX));"},{"lineNumber":29,"author":{"gitId":"ssoonwee"},"content":"            result \u003d storage.getTaskList().setTaskDone(index);"},{"lineNumber":30,"author":{"gitId":"ssoonwee"},"content":"            storage.writeFile();"},{"lineNumber":31,"author":{"gitId":"ssoonwee"},"content":"        } else if (input.startsWith(\"delete\") \u0026\u0026 isValidForDoneOrDelete) {"},{"lineNumber":32,"author":{"gitId":"ssoonwee"},"content":"            int index \u003d Integer.parseInt(input.substring(DELETE_INDEX));"},{"lineNumber":33,"author":{"gitId":"ssoonwee"},"content":"            result \u003d storage.getTaskList().removeTask(index);"},{"lineNumber":34,"author":{"gitId":"ssoonwee"},"content":"            storage.writeFile();"},{"lineNumber":35,"author":{"gitId":"ssoonwee"},"content":"        } else if (input.startsWith(\"find\")) {"},{"lineNumber":36,"author":{"gitId":"ssoonwee"},"content":"            String text \u003d new Parser().getSearchWord(input);"},{"lineNumber":37,"author":{"gitId":"ssoonwee"},"content":"            if (text.startsWith(\"Invalid:\")) {"},{"lineNumber":38,"author":{"gitId":"ssoonwee"},"content":"                return text;"},{"lineNumber":39,"author":{"gitId":"ssoonwee"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"ssoonwee"},"content":"            result \u003d storage.getTaskList().searchRelatedText(text) + \"\\n\";"},{"lineNumber":41,"author":{"gitId":"ssoonwee"},"content":"        } else if (input.equals(\"sort\")) { //Sort by date"},{"lineNumber":42,"author":{"gitId":"ssoonwee"},"content":"            result \u003d storage.getTaskList().sortTaskListByDateTime();"},{"lineNumber":43,"author":{"gitId":"ssoonwee"},"content":"        } else {"},{"lineNumber":44,"author":{"gitId":"ssoonwee"},"content":"            result \u003d performTaskCheck(storage.getTaskList(), input);"},{"lineNumber":45,"author":{"gitId":"ssoonwee"},"content":"            storage.writeFile();"},{"lineNumber":46,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"ssoonwee"},"content":"        return result;"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":50,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"ssoonwee"},"content":"     * Performs the checking of Tasks to determine and validate what they are, and"},{"lineNumber":52,"author":{"gitId":"ssoonwee"},"content":"     * create them accordingly."},{"lineNumber":53,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"ssoonwee"},"content":"     * @param taskList a Task List"},{"lineNumber":55,"author":{"gitId":"ssoonwee"},"content":"     * @param cmd      command input"},{"lineNumber":56,"author":{"gitId":"ssoonwee"},"content":"     * @return result output"},{"lineNumber":57,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"ssoonwee"},"content":"    public static String performTaskCheck(TaskList taskList, String cmd) {"},{"lineNumber":59,"author":{"gitId":"ssoonwee"},"content":"        assert cmd !\u003d null : \"Input command is null\";"},{"lineNumber":60,"author":{"gitId":"ssoonwee"},"content":"        String result \u003d new String();"},{"lineNumber":61,"author":{"gitId":"ssoonwee"},"content":"        Parser checker \u003d new Parser();"},{"lineNumber":62,"author":{"gitId":"ssoonwee"},"content":"        TaskType taskType \u003d checker.checkTaskType(cmd);"},{"lineNumber":63,"author":{"gitId":"ssoonwee"},"content":"        String task \u003d checker.checkFrontInput(cmd, taskType);"},{"lineNumber":64,"author":{"gitId":"ssoonwee"},"content":"        if (!task.isEmpty()) {"},{"lineNumber":65,"author":{"gitId":"ssoonwee"},"content":"            try {"},{"lineNumber":66,"author":{"gitId":"ssoonwee"},"content":"                if (task.contains(\"OOPS!!!\")) {"},{"lineNumber":67,"author":{"gitId":"ssoonwee"},"content":"                    throw new DukeException(task);"},{"lineNumber":68,"author":{"gitId":"ssoonwee"},"content":"                }"},{"lineNumber":69,"author":{"gitId":"ssoonwee"},"content":"                if (taskType \u003d\u003d TaskType.UNKNOWN) {"},{"lineNumber":70,"author":{"gitId":"ssoonwee"},"content":"                    throw new"},{"lineNumber":71,"author":{"gitId":"ssoonwee"},"content":"                            DukeException(\"OOPS!!! I\u0027m sorry, \" + \"but I don\u0027t know what that means :-(\");"},{"lineNumber":72,"author":{"gitId":"ssoonwee"},"content":"                }"},{"lineNumber":73,"author":{"gitId":"ssoonwee"},"content":"                if (task.trim().length() \u003d\u003d 0) {"},{"lineNumber":74,"author":{"gitId":"ssoonwee"},"content":"                    throw new DukeException(\"Description cannot be empty.\");"},{"lineNumber":75,"author":{"gitId":"ssoonwee"},"content":"                }"},{"lineNumber":76,"author":{"gitId":"ssoonwee"},"content":"                result \u003d performTaskAllocation(taskType, task, cmd, taskList);"},{"lineNumber":77,"author":{"gitId":"ssoonwee"},"content":"            } catch (DukeException de) {"},{"lineNumber":78,"author":{"gitId":"ssoonwee"},"content":"                result \u003d de.getMessage();"},{"lineNumber":79,"author":{"gitId":"ssoonwee"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"ssoonwee"},"content":"        return result;"},{"lineNumber":82,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":84,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"ssoonwee"},"content":"     * Performs adding of respective task into TaskList."},{"lineNumber":86,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"ssoonwee"},"content":"     * @param taskType      type of task"},{"lineNumber":88,"author":{"gitId":"ssoonwee"},"content":"     * @param filteredInput filtered input done from the previous method"},{"lineNumber":89,"author":{"gitId":"ssoonwee"},"content":"     * @param fullInput     unfiltered input"},{"lineNumber":90,"author":{"gitId":"ssoonwee"},"content":"     * @param taskList      a TaskList instance"},{"lineNumber":91,"author":{"gitId":"ssoonwee"},"content":"     * @return output result once the addition for respective task is performed"},{"lineNumber":92,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"ssoonwee"},"content":"    public static String performTaskAllocation("},{"lineNumber":94,"author":{"gitId":"ssoonwee"},"content":"            TaskType taskType, String filteredInput, String fullInput, TaskList taskList) {"},{"lineNumber":95,"author":{"gitId":"ssoonwee"},"content":"        assert taskType !\u003d TaskType.UNKNOWN : \"An unknown task is being allocated.\";"},{"lineNumber":96,"author":{"gitId":"ssoonwee"},"content":"        String result;"},{"lineNumber":97,"author":{"gitId":"ssoonwee"},"content":"        Parser checker \u003d new Parser();"},{"lineNumber":98,"author":{"gitId":"ssoonwee"},"content":"        if (taskType \u003d\u003d TaskType.TODO) {"},{"lineNumber":99,"author":{"gitId":"ssoonwee"},"content":"            ToDo newToDo \u003d new ToDo(filteredInput);"},{"lineNumber":100,"author":{"gitId":"ssoonwee"},"content":"            result \u003d performAddTask(taskList, newToDo);"},{"lineNumber":101,"author":{"gitId":"ssoonwee"},"content":"        } else {"},{"lineNumber":102,"author":{"gitId":"ssoonwee"},"content":"            LocalDateTime date \u003d checker.dateFormatter(fullInput);"},{"lineNumber":103,"author":{"gitId":"ssoonwee"},"content":"            if (date \u003d\u003d null) {"},{"lineNumber":104,"author":{"gitId":"ssoonwee"},"content":"                return (\"Invalid Input. Please check input again\");"},{"lineNumber":105,"author":{"gitId":"ssoonwee"},"content":"            } else if (taskType \u003d\u003d TaskType.DEADLINE) {"},{"lineNumber":106,"author":{"gitId":"ssoonwee"},"content":"                Deadline newDeadLine \u003d new Deadline(filteredInput, date);"},{"lineNumber":107,"author":{"gitId":"ssoonwee"},"content":"                result \u003d performAddTask(taskList, newDeadLine);"},{"lineNumber":108,"author":{"gitId":"ssoonwee"},"content":"            } else {"},{"lineNumber":109,"author":{"gitId":"ssoonwee"},"content":"                Event newEvent \u003d new Event(filteredInput, date);"},{"lineNumber":110,"author":{"gitId":"ssoonwee"},"content":"                result \u003d performAddTask(taskList, newEvent);"},{"lineNumber":111,"author":{"gitId":"ssoonwee"},"content":"            }"},{"lineNumber":112,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"ssoonwee"},"content":"        return result + taskList.printTotalTasks();"},{"lineNumber":114,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":116,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"ssoonwee"},"content":"     * Performs addition of task into TaskList."},{"lineNumber":118,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":119,"author":{"gitId":"ssoonwee"},"content":"     * @param taskList a TaskList instance"},{"lineNumber":120,"author":{"gitId":"ssoonwee"},"content":"     * @param task     a certain task"},{"lineNumber":121,"author":{"gitId":"ssoonwee"},"content":"     * @return output result from the addition action"},{"lineNumber":122,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"ssoonwee"},"content":"    public static String performAddTask(TaskList taskList, Task task) {"},{"lineNumber":124,"author":{"gitId":"ssoonwee"},"content":"        taskList.addTask(task);"},{"lineNumber":125,"author":{"gitId":"ssoonwee"},"content":"        String result \u003d \"Got it. I\u0027ve added this task: \\n\" + task.toString() + \"\\n\";"},{"lineNumber":126,"author":{"gitId":"ssoonwee"},"content":"        return result;"},{"lineNumber":127,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":129,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":130,"author":{"gitId":"ssoonwee"},"content":"     * Sends in the input and gets the response from the performed action."},{"lineNumber":131,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":132,"author":{"gitId":"ssoonwee"},"content":"     * @param input command input"},{"lineNumber":133,"author":{"gitId":"ssoonwee"},"content":"     * @return output result from the input"},{"lineNumber":134,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":135,"author":{"gitId":"ssoonwee"},"content":"    public String getResponse(String input) {"},{"lineNumber":136,"author":{"gitId":"ssoonwee"},"content":"        return initialize(input);"},{"lineNumber":137,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ssoonwee":135,"-":3}},{"path":"src/main/java/soonwee/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"package soonwee.duke;"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":" * Represents a Duke Exception instance."},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":" */"},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":"    public DukeException(String message) {"},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":"        super(message);"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"}"}],"authorContributionMap":{"ssoonwee":11}},{"path":"src/main/java/soonwee/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"package soonwee.duke;"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":" * Represents an Event instance. An Event instance will store the task"},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":" * name and its starting time."},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":" */"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"public class Event extends TimedTask {"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":"     * Instantiates the Event task."},{"lineNumber":14,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"ssoonwee"},"content":"     * @param description description of the task"},{"lineNumber":16,"author":{"gitId":"ssoonwee"},"content":"     * @param startTime   start time of the task"},{"lineNumber":17,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"ssoonwee"},"content":"    public Event(String description, LocalDateTime startTime) {"},{"lineNumber":19,"author":{"gitId":"ssoonwee"},"content":"        super(description, startTime);"},{"lineNumber":20,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":22,"author":{"gitId":"ssoonwee"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"ssoonwee"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"ssoonwee"},"content":"        return \"[E]\" + super.toString() + \"(at: \""},{"lineNumber":25,"author":{"gitId":"ssoonwee"},"content":"                + this.dateTime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";"},{"lineNumber":26,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"ssoonwee"},"content":"}"}],"authorContributionMap":{"ssoonwee":27}},{"path":"src/main/java/soonwee/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"package soonwee.duke;"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":" * A GUI for Duke using FXML."},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":" */"},{"lineNumber":14,"author":{"gitId":"ssoonwee"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":16,"author":{"gitId":"ssoonwee"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":17,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":18,"author":{"gitId":"ssoonwee"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"ssoonwee"},"content":"    public void start(Stage stage) {"},{"lineNumber":20,"author":{"gitId":"ssoonwee"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"ssoonwee"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":22,"author":{"gitId":"ssoonwee"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":23,"author":{"gitId":"ssoonwee"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":24,"author":{"gitId":"ssoonwee"},"content":"            stage.setScene(scene);"},{"lineNumber":25,"author":{"gitId":"ssoonwee"},"content":"            stage.setTitle(\"Duke\");"},{"lineNumber":26,"author":{"gitId":"ssoonwee"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":27,"author":{"gitId":"ssoonwee"},"content":"            stage.show();"},{"lineNumber":28,"author":{"gitId":"ssoonwee"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"ssoonwee"},"content":"            e.printStackTrace();"},{"lineNumber":30,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"ssoonwee"},"content":"}"}],"authorContributionMap":{"ssoonwee":32}},{"path":"src/main/java/soonwee/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"package soonwee.duke;"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"ssoonwee"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":15,"author":{"gitId":"ssoonwee"},"content":" */"},{"lineNumber":16,"author":{"gitId":"ssoonwee"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":17,"author":{"gitId":"ssoonwee"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"ssoonwee"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":19,"author":{"gitId":"ssoonwee"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"ssoonwee"},"content":"    private VBox dialogContainer;"},{"lineNumber":21,"author":{"gitId":"ssoonwee"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"ssoonwee"},"content":"    private TextField userInput;"},{"lineNumber":23,"author":{"gitId":"ssoonwee"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"ssoonwee"},"content":"    private Button sendButton;"},{"lineNumber":25,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":26,"author":{"gitId":"ssoonwee"},"content":"    private Duke dukeBot;"},{"lineNumber":27,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":28,"author":{"gitId":"ssoonwee"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":29,"author":{"gitId":"ssoonwee"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":30,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":31,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"ssoonwee"},"content":"     * Initializes the main window and greets the user."},{"lineNumber":33,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"ssoonwee"},"content":"    @FXML"},{"lineNumber":35,"author":{"gitId":"ssoonwee"},"content":"    public void initialize() {"},{"lineNumber":36,"author":{"gitId":"ssoonwee"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":37,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":38,"author":{"gitId":"ssoonwee"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(printGreeting(), dukeImage));"},{"lineNumber":39,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":41,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"ssoonwee"},"content":"     * Sets the instance of a Duke bot."},{"lineNumber":43,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"ssoonwee"},"content":"     * @param duke the Duke bot instance"},{"lineNumber":45,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"ssoonwee"},"content":"    public void setDuke(Duke duke) {"},{"lineNumber":47,"author":{"gitId":"ssoonwee"},"content":"        dukeBot \u003d duke;"},{"lineNumber":48,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":50,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"ssoonwee"},"content":"     * Prints greeting message."},{"lineNumber":52,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"ssoonwee"},"content":"     * @return greeting message"},{"lineNumber":54,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"ssoonwee"},"content":"    public String printGreeting() {"},{"lineNumber":56,"author":{"gitId":"ssoonwee"},"content":"        String text \u003d new String();"},{"lineNumber":57,"author":{"gitId":"ssoonwee"},"content":"        String greet \u003d \"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\";"},{"lineNumber":58,"author":{"gitId":"ssoonwee"},"content":"        text \u003d text + printLine() + \"\\n\" + greet + \"\\n\" + printLine();"},{"lineNumber":59,"author":{"gitId":"ssoonwee"},"content":"        return text;"},{"lineNumber":60,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":62,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"ssoonwee"},"content":"     * Prints line."},{"lineNumber":64,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"ssoonwee"},"content":"     * @return prined lines"},{"lineNumber":66,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"ssoonwee"},"content":"    public String printLine() {"},{"lineNumber":68,"author":{"gitId":"ssoonwee"},"content":"        return \"---------------------------\";"},{"lineNumber":69,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":71,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":72,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"ssoonwee"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":74,"author":{"gitId":"ssoonwee"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":75,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"ssoonwee"},"content":"    @FXML"},{"lineNumber":77,"author":{"gitId":"ssoonwee"},"content":"    private void handleUserInput() throws IOException {"},{"lineNumber":78,"author":{"gitId":"ssoonwee"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":79,"author":{"gitId":"ssoonwee"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":80,"author":{"gitId":"ssoonwee"},"content":"            System.exit(0);"},{"lineNumber":81,"author":{"gitId":"ssoonwee"},"content":"        } else {"},{"lineNumber":82,"author":{"gitId":"ssoonwee"},"content":"            String response \u003d dukeBot.getResponse(input);"},{"lineNumber":83,"author":{"gitId":"ssoonwee"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":84,"author":{"gitId":"ssoonwee"},"content":"                    DialogBox.getUserDialog(input, userImage),"},{"lineNumber":85,"author":{"gitId":"ssoonwee"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":86,"author":{"gitId":"ssoonwee"},"content":"            );"},{"lineNumber":87,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"ssoonwee"},"content":"        userInput.clear();"},{"lineNumber":89,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"ssoonwee"},"content":"}"}],"authorContributionMap":{"ssoonwee":90}},{"path":"src/main/java/soonwee/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"package soonwee.duke;"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":" * Represents a Parser instance. A Parser instance will validate input at"},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":" * certain point."},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":" */"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"public class Parser {"},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":"    static final int MIN_LENGTH_FIND \u003d 4; //Min string length for find."},{"lineNumber":14,"author":{"gitId":"ssoonwee"},"content":"    static final int MIN_LENGTH_TODO \u003d 4; //Min string length for todo."},{"lineNumber":15,"author":{"gitId":"ssoonwee"},"content":"    static final int MIN_LENGTH_EVENT \u003d 5; //Min string length for event."},{"lineNumber":16,"author":{"gitId":"ssoonwee"},"content":"    static final int MIN_LENGTH_DELETE \u003d 7; //Min string length for delete including space."},{"lineNumber":17,"author":{"gitId":"ssoonwee"},"content":"    static final int MIN_LENGTH_DONE \u003d 5; //Min string length for done including space."},{"lineNumber":18,"author":{"gitId":"ssoonwee"},"content":"    static final int MIN_LENGTH_DEADLINE \u003d 8; //Min string length for deadline."},{"lineNumber":19,"author":{"gitId":"ssoonwee"},"content":"    static final int START_READ_FIND \u003d 5; //Index to start reading for other details."},{"lineNumber":20,"author":{"gitId":"ssoonwee"},"content":"    static final int START_READ_TODO \u003d 5; //Index to start reading for other details."},{"lineNumber":21,"author":{"gitId":"ssoonwee"},"content":"    static final int START_READ_EVENT \u003d 6; //Index to start reading for other details."},{"lineNumber":22,"author":{"gitId":"ssoonwee"},"content":"    static final int START_READ_DEADLINE \u003d 9; //Index to start reading for other details."},{"lineNumber":23,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":24,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"ssoonwee"},"content":"     * Instantiates Parser."},{"lineNumber":26,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"ssoonwee"},"content":"    public Parser() {"},{"lineNumber":28,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":29,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":31,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"ssoonwee"},"content":"     * Checks if the delete and done input are valid"},{"lineNumber":33,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"ssoonwee"},"content":"     * @param input input string"},{"lineNumber":35,"author":{"gitId":"ssoonwee"},"content":"     * @return validity of the string"},{"lineNumber":36,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"ssoonwee"},"content":"    public boolean isValidDeleteAndDoneInput(String input) {"},{"lineNumber":38,"author":{"gitId":"ssoonwee"},"content":"        if (input.startsWith(\"delete\") \u0026\u0026 input.length() \u003e MIN_LENGTH_DELETE) {"},{"lineNumber":39,"author":{"gitId":"ssoonwee"},"content":"            if (input.charAt(MIN_LENGTH_DELETE - 1) \u003d\u003d \u0027 \u0027 \u0026\u0026 Character.isDigit(input.charAt(MIN_LENGTH_DELETE))) {"},{"lineNumber":40,"author":{"gitId":"ssoonwee"},"content":"                try {"},{"lineNumber":41,"author":{"gitId":"ssoonwee"},"content":"                    int index \u003d Integer.parseInt(input.substring(MIN_LENGTH_DELETE));"},{"lineNumber":42,"author":{"gitId":"ssoonwee"},"content":"                    return true;"},{"lineNumber":43,"author":{"gitId":"ssoonwee"},"content":"                } catch (NumberFormatException ne) {"},{"lineNumber":44,"author":{"gitId":"ssoonwee"},"content":"                    ne.getMessage();"},{"lineNumber":45,"author":{"gitId":"ssoonwee"},"content":"                }"},{"lineNumber":46,"author":{"gitId":"ssoonwee"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"ssoonwee"},"content":"        } else if (input.startsWith(\"done\") \u0026\u0026 input.length() \u003e MIN_LENGTH_DONE) {"},{"lineNumber":48,"author":{"gitId":"ssoonwee"},"content":"            if (input.charAt(MIN_LENGTH_DONE - 1) \u003d\u003d \u0027 \u0027 \u0026\u0026 Character.isDigit(input.charAt(MIN_LENGTH_DONE))) {"},{"lineNumber":49,"author":{"gitId":"ssoonwee"},"content":"                try {"},{"lineNumber":50,"author":{"gitId":"ssoonwee"},"content":"                    int index \u003d Integer.parseInt(input.substring(MIN_LENGTH_DONE));"},{"lineNumber":51,"author":{"gitId":"ssoonwee"},"content":"                    return true;"},{"lineNumber":52,"author":{"gitId":"ssoonwee"},"content":"                } catch (NumberFormatException ne) {"},{"lineNumber":53,"author":{"gitId":"ssoonwee"},"content":"                    ne.getMessage();"},{"lineNumber":54,"author":{"gitId":"ssoonwee"},"content":"                }"},{"lineNumber":55,"author":{"gitId":"ssoonwee"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"ssoonwee"},"content":"        return false;"},{"lineNumber":58,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":60,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"ssoonwee"},"content":"     * Returns an integer that represent the type of task that is being passed"},{"lineNumber":62,"author":{"gitId":"ssoonwee"},"content":"     * in."},{"lineNumber":63,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"ssoonwee"},"content":"     * @param data command input by user"},{"lineNumber":65,"author":{"gitId":"ssoonwee"},"content":"     * @return integer determining the task type"},{"lineNumber":66,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"ssoonwee"},"content":"    public TaskType checkTaskType(String data) {"},{"lineNumber":68,"author":{"gitId":"ssoonwee"},"content":"        if (data.startsWith(\"todo\")) {"},{"lineNumber":69,"author":{"gitId":"ssoonwee"},"content":"            return TaskType.TODO;"},{"lineNumber":70,"author":{"gitId":"ssoonwee"},"content":"        } else if (data.startsWith(\"deadline\")) {"},{"lineNumber":71,"author":{"gitId":"ssoonwee"},"content":"            return TaskType.DEADLINE;"},{"lineNumber":72,"author":{"gitId":"ssoonwee"},"content":"        } else if (data.startsWith(\"event\")) {"},{"lineNumber":73,"author":{"gitId":"ssoonwee"},"content":"            return TaskType.EVENT;"},{"lineNumber":74,"author":{"gitId":"ssoonwee"},"content":"        } else {"},{"lineNumber":75,"author":{"gitId":"ssoonwee"},"content":"            return TaskType.UNKNOWN;"},{"lineNumber":76,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":79,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"ssoonwee"},"content":"     * Checks the front input of the command, followed by the description at"},{"lineNumber":81,"author":{"gitId":"ssoonwee"},"content":"     * the back."},{"lineNumber":82,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"ssoonwee"},"content":"     * @param cmd      command input by user"},{"lineNumber":84,"author":{"gitId":"ssoonwee"},"content":"     * @param taskType task identifier"},{"lineNumber":85,"author":{"gitId":"ssoonwee"},"content":"     * @return task description"},{"lineNumber":86,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"ssoonwee"},"content":"    public String checkFrontInput(String cmd, TaskType taskType) {"},{"lineNumber":88,"author":{"gitId":"ssoonwee"},"content":"        assert cmd !\u003d null : \"Input command is null\";"},{"lineNumber":89,"author":{"gitId":"ssoonwee"},"content":"        String task \u003d new String();"},{"lineNumber":90,"author":{"gitId":"ssoonwee"},"content":"        String type \u003d new String();"},{"lineNumber":91,"author":{"gitId":"ssoonwee"},"content":"        try {"},{"lineNumber":92,"author":{"gitId":"ssoonwee"},"content":"            if (taskType \u003d\u003d TaskType.TODO) {"},{"lineNumber":93,"author":{"gitId":"ssoonwee"},"content":"                type \u003d \"todo\";"},{"lineNumber":94,"author":{"gitId":"ssoonwee"},"content":"                if (cmd.length() \u003e MIN_LENGTH_TODO) {"},{"lineNumber":95,"author":{"gitId":"ssoonwee"},"content":"                    task \u003d cmd.substring(START_READ_TODO);"},{"lineNumber":96,"author":{"gitId":"ssoonwee"},"content":"                }"},{"lineNumber":97,"author":{"gitId":"ssoonwee"},"content":"            } else if (taskType \u003d\u003d TaskType.DEADLINE) {"},{"lineNumber":98,"author":{"gitId":"ssoonwee"},"content":"                type \u003d \"deadline\";"},{"lineNumber":99,"author":{"gitId":"ssoonwee"},"content":"                int seg \u003d cmd.indexOf(\"/\");"},{"lineNumber":100,"author":{"gitId":"ssoonwee"},"content":"                if (cmd.length() \u003e MIN_LENGTH_DEADLINE \u0026\u0026 seg !\u003d -1) {"},{"lineNumber":101,"author":{"gitId":"ssoonwee"},"content":"                    task \u003d cmd.substring(START_READ_DEADLINE, seg);"},{"lineNumber":102,"author":{"gitId":"ssoonwee"},"content":"                }"},{"lineNumber":103,"author":{"gitId":"ssoonwee"},"content":"            } else if (taskType \u003d\u003d TaskType.EVENT) {"},{"lineNumber":104,"author":{"gitId":"ssoonwee"},"content":"                type \u003d \"event\";"},{"lineNumber":105,"author":{"gitId":"ssoonwee"},"content":"                int seg \u003d cmd.indexOf(\"/\");"},{"lineNumber":106,"author":{"gitId":"ssoonwee"},"content":"                if (cmd.length() \u003e MIN_LENGTH_EVENT \u0026\u0026 seg !\u003d -1) {"},{"lineNumber":107,"author":{"gitId":"ssoonwee"},"content":"                    task \u003d cmd.substring(START_READ_EVENT, seg);"},{"lineNumber":108,"author":{"gitId":"ssoonwee"},"content":"                }"},{"lineNumber":109,"author":{"gitId":"ssoonwee"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"ssoonwee"},"content":"            if (task.equals(\"\") \u0026\u0026 !type.isEmpty()) {"},{"lineNumber":111,"author":{"gitId":"ssoonwee"},"content":"                throw new DukeException(\"OOPS!!! \" + \"The description of a \" + type + \" cannot be empty.\");"},{"lineNumber":112,"author":{"gitId":"ssoonwee"},"content":"            } else if (task.equals(\"\") \u0026\u0026 type.isEmpty()) {"},{"lineNumber":113,"author":{"gitId":"ssoonwee"},"content":"                throw new DukeException(\"Please input the correct command.\");"},{"lineNumber":114,"author":{"gitId":"ssoonwee"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"ssoonwee"},"content":"        } catch (DukeException de) {"},{"lineNumber":116,"author":{"gitId":"ssoonwee"},"content":"            task \u003d de.getMessage();"},{"lineNumber":117,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"ssoonwee"},"content":"        return task;"},{"lineNumber":119,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":121,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"ssoonwee"},"content":"     * Gets the word that find is supposed to filter."},{"lineNumber":123,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":124,"author":{"gitId":"ssoonwee"},"content":"     * @param cmd user input"},{"lineNumber":125,"author":{"gitId":"ssoonwee"},"content":"     * @return search text to filter"},{"lineNumber":126,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"ssoonwee"},"content":"    public String getSearchWord(String cmd) {"},{"lineNumber":128,"author":{"gitId":"ssoonwee"},"content":"        assert cmd !\u003d null : \"Input command is null\";"},{"lineNumber":129,"author":{"gitId":"ssoonwee"},"content":"        String searchText \u003d new String();"},{"lineNumber":130,"author":{"gitId":"ssoonwee"},"content":"        try {"},{"lineNumber":131,"author":{"gitId":"ssoonwee"},"content":"            if (cmd.length() \u003e MIN_LENGTH_FIND) {"},{"lineNumber":132,"author":{"gitId":"ssoonwee"},"content":"                if (cmd.charAt(MIN_LENGTH_FIND) \u003d\u003d \u0027 \u0027) {"},{"lineNumber":133,"author":{"gitId":"ssoonwee"},"content":"                    searchText \u003d cmd.substring(START_READ_FIND);"},{"lineNumber":134,"author":{"gitId":"ssoonwee"},"content":"                } else {"},{"lineNumber":135,"author":{"gitId":"ssoonwee"},"content":"                    throw new DukeException(\"Invalid: Invalid command.\");"},{"lineNumber":136,"author":{"gitId":"ssoonwee"},"content":"                }"},{"lineNumber":137,"author":{"gitId":"ssoonwee"},"content":"            } else {"},{"lineNumber":138,"author":{"gitId":"ssoonwee"},"content":"                throw new DukeException(\"Invalid: Please type a white space, followed by description\");"},{"lineNumber":139,"author":{"gitId":"ssoonwee"},"content":"            }"},{"lineNumber":140,"author":{"gitId":"ssoonwee"},"content":"        } catch (DukeException de) {"},{"lineNumber":141,"author":{"gitId":"ssoonwee"},"content":"            searchText \u003d de.getMessage();"},{"lineNumber":142,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"ssoonwee"},"content":"        return searchText;"},{"lineNumber":144,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":146,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"ssoonwee"},"content":"     * Takes in a command and returns the date and time in a LocalDateTime format."},{"lineNumber":148,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":149,"author":{"gitId":"ssoonwee"},"content":"     * @param cmd command input by user"},{"lineNumber":150,"author":{"gitId":"ssoonwee"},"content":"     * @return datetime in LocalDateTime format"},{"lineNumber":151,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":152,"author":{"gitId":"ssoonwee"},"content":"    public LocalDateTime dateFormatter(String cmd) {"},{"lineNumber":153,"author":{"gitId":"ssoonwee"},"content":"        assert cmd !\u003d null : \"Input command is null\";"},{"lineNumber":154,"author":{"gitId":"ssoonwee"},"content":"        int nextChar \u003d -1; //Set by default to not able to find."},{"lineNumber":155,"author":{"gitId":"ssoonwee"},"content":"        int nextWord \u003d 4; //Template number to find the next text in String."},{"lineNumber":156,"author":{"gitId":"ssoonwee"},"content":"        int nextSpace \u003d 3; //Template number to find the next space in String."},{"lineNumber":157,"author":{"gitId":"ssoonwee"},"content":"        if (cmd.indexOf(\"/by\") !\u003d -1 \u0026\u0026 cmd.length() \u003e cmd.indexOf(\"/by\") + nextSpace) {"},{"lineNumber":158,"author":{"gitId":"ssoonwee"},"content":"            if (cmd.charAt(cmd.indexOf(\"/by\") + 3) \u003d\u003d \u0027 \u0027) {"},{"lineNumber":159,"author":{"gitId":"ssoonwee"},"content":"                nextChar \u003d cmd.indexOf(\"/by\");"},{"lineNumber":160,"author":{"gitId":"ssoonwee"},"content":"            } else {"},{"lineNumber":161,"author":{"gitId":"ssoonwee"},"content":"                return null;"},{"lineNumber":162,"author":{"gitId":"ssoonwee"},"content":"            }"},{"lineNumber":163,"author":{"gitId":"ssoonwee"},"content":"        } else if (cmd.indexOf(\"/at\") !\u003d -1 \u0026\u0026 cmd.length() \u003e cmd.indexOf(\"/at\") + nextSpace) {"},{"lineNumber":164,"author":{"gitId":"ssoonwee"},"content":"            if (cmd.charAt(cmd.indexOf(\"/at\") + 3) \u003d\u003d \u0027 \u0027) {"},{"lineNumber":165,"author":{"gitId":"ssoonwee"},"content":"                nextChar \u003d cmd.indexOf(\"/at\");"},{"lineNumber":166,"author":{"gitId":"ssoonwee"},"content":"            } else {"},{"lineNumber":167,"author":{"gitId":"ssoonwee"},"content":"                return null;"},{"lineNumber":168,"author":{"gitId":"ssoonwee"},"content":"            }"},{"lineNumber":169,"author":{"gitId":"ssoonwee"},"content":"        } else {"},{"lineNumber":170,"author":{"gitId":"ssoonwee"},"content":"            return null;"},{"lineNumber":171,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"ssoonwee"},"content":"        try {"},{"lineNumber":173,"author":{"gitId":"ssoonwee"},"content":"            String date \u003d cmd.substring(nextChar + nextWord);"},{"lineNumber":174,"author":{"gitId":"ssoonwee"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"uuuu-MM-dd HH:mm\");"},{"lineNumber":175,"author":{"gitId":"ssoonwee"},"content":"            LocalDateTime formatDate \u003d LocalDateTime.parse(date, formatter);"},{"lineNumber":176,"author":{"gitId":"ssoonwee"},"content":"            return formatDate;"},{"lineNumber":177,"author":{"gitId":"ssoonwee"},"content":"        } catch (DateTimeParseException de) {"},{"lineNumber":178,"author":{"gitId":"ssoonwee"},"content":"            de.getMessage();"},{"lineNumber":179,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":180,"author":{"gitId":"ssoonwee"},"content":"        return null;"},{"lineNumber":181,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"ssoonwee"},"content":"}"}],"authorContributionMap":{"ssoonwee":182}},{"path":"src/main/java/soonwee/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"package soonwee.duke;"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":" * Represents a Storage instance. A storage instance will create new file,"},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":" * update file and read its data."},{"lineNumber":14,"author":{"gitId":"ssoonwee"},"content":" */"},{"lineNumber":15,"author":{"gitId":"ssoonwee"},"content":"public class Storage {"},{"lineNumber":16,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":17,"author":{"gitId":"ssoonwee"},"content":"    static final int TASK_DESCRIPTION_INDEX \u003d 7; //States the index in the string to read for description."},{"lineNumber":18,"author":{"gitId":"ssoonwee"},"content":"    static final int DATE_JUMP_INDEX \u003d 5; //States the index jump from the previous read string."},{"lineNumber":19,"author":{"gitId":"ssoonwee"},"content":"    private String filePath;"},{"lineNumber":20,"author":{"gitId":"ssoonwee"},"content":"    private String directory;"},{"lineNumber":21,"author":{"gitId":"ssoonwee"},"content":"    private File fileObject;"},{"lineNumber":22,"author":{"gitId":"ssoonwee"},"content":"    private TaskList taskList;"},{"lineNumber":23,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":24,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":25,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"ssoonwee"},"content":"     * Instantiates Storage with its target directory."},{"lineNumber":27,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"ssoonwee"},"content":"    public Storage(String filePath) {"},{"lineNumber":29,"author":{"gitId":"ssoonwee"},"content":"        this.taskList \u003d createNew();"},{"lineNumber":30,"author":{"gitId":"ssoonwee"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":31,"author":{"gitId":"ssoonwee"},"content":"        this.directory \u003d \"data\";"},{"lineNumber":32,"author":{"gitId":"ssoonwee"},"content":"        this.fileObject \u003d createFile(filePath);"},{"lineNumber":33,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":35,"author":{"gitId":"ssoonwee"},"content":"    public TaskList getTaskList() {"},{"lineNumber":36,"author":{"gitId":"ssoonwee"},"content":"        return this.taskList;"},{"lineNumber":37,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":39,"author":{"gitId":"ssoonwee"},"content":"    public TaskList createNew() {"},{"lineNumber":40,"author":{"gitId":"ssoonwee"},"content":"        return new TaskList();"},{"lineNumber":41,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":43,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"ssoonwee"},"content":"     * Creates the directory and file for tasks."},{"lineNumber":45,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"ssoonwee"},"content":"     * @param filePath relative file path"},{"lineNumber":47,"author":{"gitId":"ssoonwee"},"content":"     * @return new file object"},{"lineNumber":48,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"ssoonwee"},"content":"    public File createFile(String filePath) {"},{"lineNumber":50,"author":{"gitId":"ssoonwee"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"ssoonwee"},"content":"            File directory \u003d new File(this.directory);"},{"lineNumber":52,"author":{"gitId":"ssoonwee"},"content":"            boolean isDirCreated \u003d directory.mkdirs();"},{"lineNumber":53,"author":{"gitId":"ssoonwee"},"content":"            if (isDirCreated) {"},{"lineNumber":54,"author":{"gitId":"ssoonwee"},"content":"                System.out.println(\"A new directory is created.\");"},{"lineNumber":55,"author":{"gitId":"ssoonwee"},"content":"            } else {"},{"lineNumber":56,"author":{"gitId":"ssoonwee"},"content":"                System.out.println(\"The directory exists.\");"},{"lineNumber":57,"author":{"gitId":"ssoonwee"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"ssoonwee"},"content":"            File fileObject \u003d new File(filePath);"},{"lineNumber":59,"author":{"gitId":"ssoonwee"},"content":"            if (fileObject.createNewFile()) {"},{"lineNumber":60,"author":{"gitId":"ssoonwee"},"content":"                System.out.println(\"New file created: \" + fileObject.getName());"},{"lineNumber":61,"author":{"gitId":"ssoonwee"},"content":"            } else {"},{"lineNumber":62,"author":{"gitId":"ssoonwee"},"content":"                System.out.println(\"The file exists. Reading file...\");"},{"lineNumber":63,"author":{"gitId":"ssoonwee"},"content":"                readFile();"},{"lineNumber":64,"author":{"gitId":"ssoonwee"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"ssoonwee"},"content":"        } catch (IOException e) {"},{"lineNumber":66,"author":{"gitId":"ssoonwee"},"content":"            System.out.println(\"An error has occurred.\");"},{"lineNumber":67,"author":{"gitId":"ssoonwee"},"content":"            e.printStackTrace();"},{"lineNumber":68,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"ssoonwee"},"content":"        return fileObject;"},{"lineNumber":70,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":72,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"ssoonwee"},"content":"     * Reads data from the file."},{"lineNumber":74,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"ssoonwee"},"content":"    public void readFile() {"},{"lineNumber":76,"author":{"gitId":"ssoonwee"},"content":"        try {"},{"lineNumber":77,"author":{"gitId":"ssoonwee"},"content":"            File fileObject \u003d new File(\"data\\\\tasks.txt\");"},{"lineNumber":78,"author":{"gitId":"ssoonwee"},"content":"            Scanner reader \u003d new Scanner(fileObject);"},{"lineNumber":79,"author":{"gitId":"ssoonwee"},"content":"            while (reader.hasNextLine()) {"},{"lineNumber":80,"author":{"gitId":"ssoonwee"},"content":"                String data \u003d reader.nextLine();"},{"lineNumber":81,"author":{"gitId":"ssoonwee"},"content":"                processFileData(data);"},{"lineNumber":82,"author":{"gitId":"ssoonwee"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"ssoonwee"},"content":"            System.out.println(\"Reading done.\");"},{"lineNumber":84,"author":{"gitId":"ssoonwee"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":85,"author":{"gitId":"ssoonwee"},"content":"            System.out.println(\"File not found.\");"},{"lineNumber":86,"author":{"gitId":"ssoonwee"},"content":"            e.printStackTrace();"},{"lineNumber":87,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":90,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"ssoonwee"},"content":"     * Processes data in file and add them into memory task list."},{"lineNumber":92,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"ssoonwee"},"content":"     * @param data input data taken from command"},{"lineNumber":94,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"ssoonwee"},"content":"    public void processFileData(String data) {"},{"lineNumber":96,"author":{"gitId":"ssoonwee"},"content":"        char taskType \u003d data.charAt(1);"},{"lineNumber":97,"author":{"gitId":"ssoonwee"},"content":"        String task;"},{"lineNumber":98,"author":{"gitId":"ssoonwee"},"content":"        String time \u003d new String();"},{"lineNumber":99,"author":{"gitId":"ssoonwee"},"content":"        int secondSeg \u003d data.indexOf(\"(\");"},{"lineNumber":100,"author":{"gitId":"ssoonwee"},"content":"        int endSeg \u003d data.indexOf(\")\");"},{"lineNumber":101,"author":{"gitId":"ssoonwee"},"content":"        task \u003d data.substring(TASK_DESCRIPTION_INDEX);"},{"lineNumber":102,"author":{"gitId":"ssoonwee"},"content":"        if (secondSeg !\u003d -1 \u0026\u0026 endSeg !\u003d -1) {"},{"lineNumber":103,"author":{"gitId":"ssoonwee"},"content":"            task \u003d data.substring(TASK_DESCRIPTION_INDEX, secondSeg);"},{"lineNumber":104,"author":{"gitId":"ssoonwee"},"content":"            time \u003d data.substring(secondSeg + DATE_JUMP_INDEX, endSeg);"},{"lineNumber":105,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"ssoonwee"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");"},{"lineNumber":107,"author":{"gitId":"ssoonwee"},"content":"        if (taskType \u003d\u003d \u0027T\u0027) {"},{"lineNumber":108,"author":{"gitId":"ssoonwee"},"content":"            this.taskList.addTask(new ToDo(task));"},{"lineNumber":109,"author":{"gitId":"ssoonwee"},"content":"        } else {"},{"lineNumber":110,"author":{"gitId":"ssoonwee"},"content":"            LocalDateTime formatDate \u003d LocalDateTime.parse(time, formatter);"},{"lineNumber":111,"author":{"gitId":"ssoonwee"},"content":"            if (taskType \u003d\u003d \u0027D\u0027) {"},{"lineNumber":112,"author":{"gitId":"ssoonwee"},"content":"                this.taskList.addTask(new Deadline(task, formatDate));"},{"lineNumber":113,"author":{"gitId":"ssoonwee"},"content":"            } else if (taskType \u003d\u003d \u0027E\u0027) {"},{"lineNumber":114,"author":{"gitId":"ssoonwee"},"content":"                this.taskList.addTask(new Event(task, formatDate));"},{"lineNumber":115,"author":{"gitId":"ssoonwee"},"content":"            }"},{"lineNumber":116,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"ssoonwee"},"content":"        if (data.charAt(4) \u003d\u003d \u0027X\u0027) {"},{"lineNumber":118,"author":{"gitId":"ssoonwee"},"content":"            taskList.getTask(taskList.getTasksList().size() - 1).setCompleted();"},{"lineNumber":119,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":122,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"ssoonwee"},"content":"     * Writes tasks in TaskList into file."},{"lineNumber":124,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":125,"author":{"gitId":"ssoonwee"},"content":"    public void writeFile() {"},{"lineNumber":126,"author":{"gitId":"ssoonwee"},"content":"        try {"},{"lineNumber":127,"author":{"gitId":"ssoonwee"},"content":"            FileWriter fileWriter \u003d new FileWriter(\"data\\\\tasks.txt\");"},{"lineNumber":128,"author":{"gitId":"ssoonwee"},"content":"            for (int i \u003d 0; i \u003c this.taskList.getSize(); i++) {"},{"lineNumber":129,"author":{"gitId":"ssoonwee"},"content":"                fileWriter.write(this.taskList.getTask(i).toString() + \"\\n\");"},{"lineNumber":130,"author":{"gitId":"ssoonwee"},"content":"            }"},{"lineNumber":131,"author":{"gitId":"ssoonwee"},"content":"            fileWriter.close();"},{"lineNumber":132,"author":{"gitId":"ssoonwee"},"content":"        } catch (IOException e) {"},{"lineNumber":133,"author":{"gitId":"ssoonwee"},"content":"            System.out.println(\"An IOException has occurred.\");"},{"lineNumber":134,"author":{"gitId":"ssoonwee"},"content":"            e.printStackTrace();"},{"lineNumber":135,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":136,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"ssoonwee"},"content":"}"}],"authorContributionMap":{"ssoonwee":137}},{"path":"src/main/java/soonwee/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"package soonwee.duke;"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":" * Represents a Task instance."},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":" */"},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":"public class Task {"},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"    private String taskDesc;"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"    private boolean isCompleted;"},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"ssoonwee"},"content":"     * Instantiates a task with its description."},{"lineNumber":15,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"ssoonwee"},"content":"     * @param taskDesc task description."},{"lineNumber":17,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"ssoonwee"},"content":"    public Task(String taskDesc) {"},{"lineNumber":19,"author":{"gitId":"ssoonwee"},"content":"        this.taskDesc \u003d taskDesc;"},{"lineNumber":20,"author":{"gitId":"ssoonwee"},"content":"        this.isCompleted \u003d false;"},{"lineNumber":21,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":23,"author":{"gitId":"ssoonwee"},"content":"    public String getTaskDescription() {"},{"lineNumber":24,"author":{"gitId":"ssoonwee"},"content":"        return this.taskDesc;"},{"lineNumber":25,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":27,"author":{"gitId":"ssoonwee"},"content":"    public boolean getCompleteStatus() {"},{"lineNumber":28,"author":{"gitId":"ssoonwee"},"content":"        return this.isCompleted;"},{"lineNumber":29,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":31,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"ssoonwee"},"content":"     * Sets a task as completed."},{"lineNumber":33,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"ssoonwee"},"content":"    public void setCompleted() {"},{"lineNumber":35,"author":{"gitId":"ssoonwee"},"content":"        this.isCompleted \u003d true;"},{"lineNumber":36,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":38,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"ssoonwee"},"content":"     * Gets datetime from task."},{"lineNumber":40,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"ssoonwee"},"content":"     * @return datetime of task"},{"lineNumber":42,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"ssoonwee"},"content":"    public LocalDateTime getDateTime() {"},{"lineNumber":44,"author":{"gitId":"ssoonwee"},"content":"        return null;"},{"lineNumber":45,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":47,"author":{"gitId":"ssoonwee"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"ssoonwee"},"content":"    public String toString() {"},{"lineNumber":49,"author":{"gitId":"ssoonwee"},"content":"        String marked \u003d new String();"},{"lineNumber":50,"author":{"gitId":"ssoonwee"},"content":"        if (this.isCompleted) {"},{"lineNumber":51,"author":{"gitId":"ssoonwee"},"content":"            marked \u003d \"X\";"},{"lineNumber":52,"author":{"gitId":"ssoonwee"},"content":"        } else {"},{"lineNumber":53,"author":{"gitId":"ssoonwee"},"content":"            marked \u003d \" \";"},{"lineNumber":54,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"ssoonwee"},"content":"        return \"[\" + marked + \"] \" + this.taskDesc;"},{"lineNumber":56,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"ssoonwee"},"content":"}"}],"authorContributionMap":{"ssoonwee":57}},{"path":"src/main/java/soonwee/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"package soonwee.duke;"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":" * Represents a TaskList instance. A TaskList instance will contain a list of"},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":" * task and it can display, add or remove tasks from it."},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":" */"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":"    private ArrayList\u003cTask\u003e tasksList;"},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":14,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"ssoonwee"},"content":"     * Instantiates a TaskList instance."},{"lineNumber":16,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"ssoonwee"},"content":"    public TaskList() {"},{"lineNumber":18,"author":{"gitId":"ssoonwee"},"content":"        this.tasksList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":21,"author":{"gitId":"ssoonwee"},"content":"    public ArrayList\u003cTask\u003e getTasksList() {"},{"lineNumber":22,"author":{"gitId":"ssoonwee"},"content":"        return this.tasksList;"},{"lineNumber":23,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":25,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"ssoonwee"},"content":"     * Sets a certain task to be done."},{"lineNumber":27,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"ssoonwee"},"content":"     * @param index task number"},{"lineNumber":29,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"ssoonwee"},"content":"    public String setTaskDone(int index) {"},{"lineNumber":31,"author":{"gitId":"ssoonwee"},"content":"        String result \u003d new String();"},{"lineNumber":32,"author":{"gitId":"ssoonwee"},"content":"        int actualIndex \u003d index - 1;"},{"lineNumber":33,"author":{"gitId":"ssoonwee"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"ssoonwee"},"content":"            if (actualIndex \u003c this.tasksList.size() \u0026\u0026 actualIndex \u003e -1) {"},{"lineNumber":35,"author":{"gitId":"ssoonwee"},"content":"                this.getTask(actualIndex).setCompleted();"},{"lineNumber":36,"author":{"gitId":"ssoonwee"},"content":"                return \"Nice! I\u0027ve marked this task as done: \\n\" + this.getTask(index - 1);"},{"lineNumber":37,"author":{"gitId":"ssoonwee"},"content":"            } else {"},{"lineNumber":38,"author":{"gitId":"ssoonwee"},"content":"                throw new DukeException(\"Index is out of range. Please input a correct index.\");"},{"lineNumber":39,"author":{"gitId":"ssoonwee"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"ssoonwee"},"content":"        } catch (DukeException de) {"},{"lineNumber":41,"author":{"gitId":"ssoonwee"},"content":"            result \u003d de.getMessage();"},{"lineNumber":42,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"ssoonwee"},"content":"        return result;"},{"lineNumber":44,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":46,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"ssoonwee"},"content":"     * Adds a new Task to the task List."},{"lineNumber":48,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"ssoonwee"},"content":"     * @param newTask new Task"},{"lineNumber":50,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"ssoonwee"},"content":"    public void addTask(Task newTask) {"},{"lineNumber":52,"author":{"gitId":"ssoonwee"},"content":"        tasksList.add(newTask);"},{"lineNumber":53,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":55,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"ssoonwee"},"content":"     * Gets size of task list."},{"lineNumber":57,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"ssoonwee"},"content":"     * @return size of task list"},{"lineNumber":59,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"ssoonwee"},"content":"    public int getSize() {"},{"lineNumber":61,"author":{"gitId":"ssoonwee"},"content":"        return this.tasksList.size();"},{"lineNumber":62,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":64,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":65,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"ssoonwee"},"content":"     * Gets task at the certain index."},{"lineNumber":67,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"ssoonwee"},"content":"     * @param index index of task"},{"lineNumber":69,"author":{"gitId":"ssoonwee"},"content":"     * @return task at that index"},{"lineNumber":70,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"ssoonwee"},"content":"    public Task getTask(int index) {"},{"lineNumber":72,"author":{"gitId":"ssoonwee"},"content":"        return tasksList.get(index);"},{"lineNumber":73,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":75,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"ssoonwee"},"content":"     * Gets input command and search for tasks that contains the matching characters with input."},{"lineNumber":77,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"ssoonwee"},"content":"     * @param cmd input command"},{"lineNumber":79,"author":{"gitId":"ssoonwee"},"content":"     * @return matching tasks to the input"},{"lineNumber":80,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"ssoonwee"},"content":"    public String searchRelatedText(String cmd) {"},{"lineNumber":82,"author":{"gitId":"ssoonwee"},"content":"        assert tasksList !\u003d null : \"TaskList is null.\";"},{"lineNumber":83,"author":{"gitId":"ssoonwee"},"content":"        ArrayList\u003cTask\u003e temporaryList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":84,"author":{"gitId":"ssoonwee"},"content":"        for (Task task : tasksList) {"},{"lineNumber":85,"author":{"gitId":"ssoonwee"},"content":"            if (task.getTaskDescription().contains(cmd)) {"},{"lineNumber":86,"author":{"gitId":"ssoonwee"},"content":"                temporaryList.add(task);"},{"lineNumber":87,"author":{"gitId":"ssoonwee"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"ssoonwee"},"content":"        if (temporaryList.size() \u003d\u003d 0) {"},{"lineNumber":90,"author":{"gitId":"ssoonwee"},"content":"            return \"There are no matching keywords to your search.\";"},{"lineNumber":91,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"ssoonwee"},"content":"        String result \u003d \"Here are the matching tasks in your list: \\n\";"},{"lineNumber":93,"author":{"gitId":"ssoonwee"},"content":"        if (temporaryList.size() \u003d\u003d 0) {"},{"lineNumber":94,"author":{"gitId":"ssoonwee"},"content":"            result \u003d \"There is no matching tasks found.\";"},{"lineNumber":95,"author":{"gitId":"ssoonwee"},"content":"            return result;"},{"lineNumber":96,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"ssoonwee"},"content":"        for (int j \u003d 0; j \u003c temporaryList.size(); j++) {"},{"lineNumber":98,"author":{"gitId":"ssoonwee"},"content":"            result \u003d result + String.valueOf(j + 1) + \". \" + temporaryList.get(j).toString() + \"\\n\";"},{"lineNumber":99,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"ssoonwee"},"content":"        return result;"},{"lineNumber":101,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":103,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"ssoonwee"},"content":"     * Prints current total tasks."},{"lineNumber":105,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":106,"author":{"gitId":"ssoonwee"},"content":"     * @return a display indicating the number of tasks"},{"lineNumber":107,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"ssoonwee"},"content":"    public String printTotalTasks() {"},{"lineNumber":109,"author":{"gitId":"ssoonwee"},"content":"        String result \u003d \"Now you have \" + this.getSize() + \" tasks in the list.\";"},{"lineNumber":110,"author":{"gitId":"ssoonwee"},"content":"        return result;"},{"lineNumber":111,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":113,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"ssoonwee"},"content":"     * Removes task at respective index."},{"lineNumber":115,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":116,"author":{"gitId":"ssoonwee"},"content":"     * @param index task index"},{"lineNumber":117,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"ssoonwee"},"content":"    public String removeTask(int index) {"},{"lineNumber":119,"author":{"gitId":"ssoonwee"},"content":"        int actualIndex \u003d index - 1;"},{"lineNumber":120,"author":{"gitId":"ssoonwee"},"content":"        String result \u003d new String();"},{"lineNumber":121,"author":{"gitId":"ssoonwee"},"content":"        try {"},{"lineNumber":122,"author":{"gitId":"ssoonwee"},"content":"            if (actualIndex \u003c this.tasksList.size() \u0026\u0026 actualIndex \u003e -1) {"},{"lineNumber":123,"author":{"gitId":"ssoonwee"},"content":"                Task temp \u003d this.getTask(actualIndex);"},{"lineNumber":124,"author":{"gitId":"ssoonwee"},"content":"                this.tasksList.remove(index - 1);"},{"lineNumber":125,"author":{"gitId":"ssoonwee"},"content":"                result \u003d result + \"Noted. I\u0027ve removed this task: \\n\" + temp + \"\\n\""},{"lineNumber":126,"author":{"gitId":"ssoonwee"},"content":"                        + \"Now you have \" + this.getSize() + \" tasks in the list.\";"},{"lineNumber":127,"author":{"gitId":"ssoonwee"},"content":"            } else {"},{"lineNumber":128,"author":{"gitId":"ssoonwee"},"content":"                throw new DukeException(\"Index is out of range. Please input a correct index.\");"},{"lineNumber":129,"author":{"gitId":"ssoonwee"},"content":"            }"},{"lineNumber":130,"author":{"gitId":"ssoonwee"},"content":"        } catch (DukeException de) {"},{"lineNumber":131,"author":{"gitId":"ssoonwee"},"content":"            result \u003d result + de.getMessage();"},{"lineNumber":132,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"ssoonwee"},"content":"        return result;"},{"lineNumber":134,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":135,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":136,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":137,"author":{"gitId":"ssoonwee"},"content":"     * Displays tasks from the task List."},{"lineNumber":138,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":139,"author":{"gitId":"ssoonwee"},"content":"     * @return output from tasklist."},{"lineNumber":140,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":141,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":142,"author":{"gitId":"ssoonwee"},"content":"    public String displayTasks() {"},{"lineNumber":143,"author":{"gitId":"ssoonwee"},"content":"        String result \u003d new String();"},{"lineNumber":144,"author":{"gitId":"ssoonwee"},"content":"        if (tasksList.size() \u003d\u003d 0) {"},{"lineNumber":145,"author":{"gitId":"ssoonwee"},"content":"            result \u003d \"There is no tasks found. Please add a task!\";"},{"lineNumber":146,"author":{"gitId":"ssoonwee"},"content":"            return result;"},{"lineNumber":147,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":148,"author":{"gitId":"ssoonwee"},"content":"        result \u003d result + \"Here are the tasks in your list: \\n\";"},{"lineNumber":149,"author":{"gitId":"ssoonwee"},"content":"        for (int i \u003d 0; i \u003c tasksList.size(); i++) {"},{"lineNumber":150,"author":{"gitId":"ssoonwee"},"content":"            result \u003d result + String.valueOf(i + 1) + \". \" + tasksList.get(i) + \"\\n\";"},{"lineNumber":151,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"ssoonwee"},"content":"        return result;"},{"lineNumber":153,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":155,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":156,"author":{"gitId":"ssoonwee"},"content":"     * Sorts the task list by its datetime. Task with earliest time will be displayed first, tasks with no time"},{"lineNumber":157,"author":{"gitId":"ssoonwee"},"content":"     * will be displayed after all tasks with time."},{"lineNumber":158,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":159,"author":{"gitId":"ssoonwee"},"content":"     * @return sorted output of tasks"},{"lineNumber":160,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":161,"author":{"gitId":"ssoonwee"},"content":"    public String sortTaskListByDateTime() {"},{"lineNumber":162,"author":{"gitId":"ssoonwee"},"content":"        ArrayList\u003cTask\u003e temporaryTimeList \u003d new ArrayList\u003c\u003e(); //To Store items with dates"},{"lineNumber":163,"author":{"gitId":"ssoonwee"},"content":"        ArrayList\u003cTask\u003e toDoList \u003d new ArrayList\u003c\u003e(); //To store temporary ToDoList"},{"lineNumber":164,"author":{"gitId":"ssoonwee"},"content":"        for (Task task : tasksList) {"},{"lineNumber":165,"author":{"gitId":"ssoonwee"},"content":"            if (task.getDateTime() !\u003d null) {"},{"lineNumber":166,"author":{"gitId":"ssoonwee"},"content":"                temporaryTimeList.add(task);"},{"lineNumber":167,"author":{"gitId":"ssoonwee"},"content":"            } else {"},{"lineNumber":168,"author":{"gitId":"ssoonwee"},"content":"                toDoList.add(task);"},{"lineNumber":169,"author":{"gitId":"ssoonwee"},"content":"            }"},{"lineNumber":170,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"ssoonwee"},"content":"        Collections.sort(temporaryTimeList, new DateTimeComparator());"},{"lineNumber":172,"author":{"gitId":"ssoonwee"},"content":"        for (Task task : toDoList) {"},{"lineNumber":173,"author":{"gitId":"ssoonwee"},"content":"            temporaryTimeList.add(task);"},{"lineNumber":174,"author":{"gitId":"ssoonwee"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"ssoonwee"},"content":"        tasksList \u003d temporaryTimeList;"},{"lineNumber":176,"author":{"gitId":"ssoonwee"},"content":"        return displayTasks();"},{"lineNumber":177,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"ssoonwee"},"content":"}"}],"authorContributionMap":{"ssoonwee":178}},{"path":"src/main/java/soonwee/duke/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"package soonwee.duke;"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":" * Represents the different types of Task."},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":" */"},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":"public enum TaskType {"},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":"    TODO,"},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":"    DEADLINE,"},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":"    EVENT,"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"    UNKNOWN"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"}"}],"authorContributionMap":{"ssoonwee":11}},{"path":"src/main/java/soonwee/duke/TimedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"package soonwee.duke;"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":"public class TimedTask extends Task {"},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":"    protected LocalDateTime dateTime;"},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":"     * Instantiates the task with a time."},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"     * @param description description of the task"},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":"     * @param dateTime    date time of the task"},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"ssoonwee"},"content":"    public TimedTask(String description, LocalDateTime dateTime) {"},{"lineNumber":15,"author":{"gitId":"ssoonwee"},"content":"        super(description);"},{"lineNumber":16,"author":{"gitId":"ssoonwee"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":17,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":19,"author":{"gitId":"ssoonwee"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"ssoonwee"},"content":"    public LocalDateTime getDateTime() {"},{"lineNumber":21,"author":{"gitId":"ssoonwee"},"content":"        return this.dateTime;"},{"lineNumber":22,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ssoonwee"},"content":"}"}],"authorContributionMap":{"ssoonwee":23}},{"path":"src/main/java/soonwee/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"package soonwee.duke;"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":" * Represents a Todo instance. A Todo instance will store the"},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":" * description of the task."},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":" */"},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":"public class ToDo extends Task {"},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":"    public ToDo(String description) {"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"ssoonwee"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"ssoonwee"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":16,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ssoonwee"},"content":"}"}],"authorContributionMap":{"ssoonwee":17}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"ssoonwee"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"ssoonwee"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"ssoonwee"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"ssoonwee":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"soonwee.duke.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"ssoonwee"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"ssoonwee"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"ssoonwee"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"ssoonwee"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"ssoonwee"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"ssoonwee"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"ssoonwee":19}},{"path":"src/test/java/soonwee/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"package soonwee.duke;"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"public class DeadlineTest {"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"ssoonwee"},"content":"    public void createDeadline_validInput_success() {"},{"lineNumber":15,"author":{"gitId":"ssoonwee"},"content":"        Deadline deadLineTask \u003d new Deadline(\"Buy coffee\", LocalDateTime.parse(\"2010-01-19T15:00:00\"));"},{"lineNumber":16,"author":{"gitId":"ssoonwee"},"content":"        assertEquals(\"[D][ ] Buy coffee(by: Jan 19 2010 15:00)\", deadLineTask.toString());"},{"lineNumber":17,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":19,"author":{"gitId":"ssoonwee"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"ssoonwee"},"content":"    public void createDeadLine_invalidDate_exceptionThrown() {"},{"lineNumber":21,"author":{"gitId":"ssoonwee"},"content":"        assertThrows(java.time.format.DateTimeParseException.class, () -\u003e"},{"lineNumber":22,"author":{"gitId":"ssoonwee"},"content":"                new Deadline(\"wxyz\", LocalDateTime.parse(\"1234\")));"},{"lineNumber":23,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"ssoonwee"},"content":"}"}],"authorContributionMap":{"ssoonwee":24}},{"path":"src/test/java/soonwee/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"package soonwee.duke;"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"public class EventTest {"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":"    public void createEvent_validInput_success() {"},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":"        Event eventTask \u003d new Event(\"Sleep\", LocalDateTime.parse(\"2010-01-19T23:00:00\"));"},{"lineNumber":14,"author":{"gitId":"ssoonwee"},"content":"        assertEquals(\"[E][ ] Sleep(at: Jan 19 2010 23:00)\", eventTask.toString());"},{"lineNumber":15,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":17,"author":{"gitId":"ssoonwee"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"ssoonwee"},"content":"    public void createEvent_invalidDate_exceptionThrown() {"},{"lineNumber":19,"author":{"gitId":"ssoonwee"},"content":"        assertThrows(java.time.format.DateTimeParseException.class, () -\u003e"},{"lineNumber":20,"author":{"gitId":"ssoonwee"},"content":"                new Event(\"wxyz\", LocalDateTime.parse(\"1234\")));"},{"lineNumber":21,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"ssoonwee"},"content":"}"}],"authorContributionMap":{"ssoonwee":22}},{"path":"src/test/java/soonwee/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"package soonwee.duke;"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":"public class ToDoTest {"},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":"    public void createToDo_success() {"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"        ToDo result \u003d new ToDo(\"Sleep\");"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"        assertEquals(\"[T][ ] Sleep\", result.toString());"},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":"}"}],"authorContributionMap":{"ssoonwee":13}},{"path":"text-ui-test/input.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":"done 4"},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":"todo borrow book"},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":"list"},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":"deadline return book /by Sunday"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"bye"}],"authorContributionMap":{"ssoonwee":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":"done 4"},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":"todo borrow book"},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":"list"},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":"deadline return book /by Sunday"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"bye"}],"authorContributionMap":{"ssoonwee":11}},{"path":"text-ui-test/level1_actual.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":"Hello! I\u0027m Duke"},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"What can I do for you?"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":"list"},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":"blah"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":"Bye. Hope to see you again soon!"},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":"---------------------------"}],"authorContributionMap":{"ssoonwee":13}},{"path":"text-ui-test/level1_expected.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":"Hello! I\u0027m Duke"},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"What can I do for you?"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":"list"},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":"blah"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":"Bye. Hope to see you again soon!"},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":"---------------------------"}],"authorContributionMap":{"ssoonwee":13}},{"path":"text-ui-test/level1_input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"list"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":"blah"},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"bye"}],"authorContributionMap":{"ssoonwee":3}},{"path":"text-ui-test/level1_runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":"then"},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"        mkdir ../bin"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":"    fi"},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":"    # delete output from previous run"},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":"    if [ -e \"level1_actual.txt\" ]"},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":"    then"},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":"            rm level1_actual.txt"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"        fi"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":"        # compile the code into the bin folder, terminates if error occurred"},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":"        if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":14,"author":{"gitId":"ssoonwee"},"content":"        then"},{"lineNumber":15,"author":{"gitId":"ssoonwee"},"content":"                echo \"********** BUILD FAILURE **********\""},{"lineNumber":16,"author":{"gitId":"ssoonwee"},"content":"                    exit 1"},{"lineNumber":17,"author":{"gitId":"ssoonwee"},"content":"                fi"},{"lineNumber":18,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":19,"author":{"gitId":"ssoonwee"},"content":"                # run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":20,"author":{"gitId":"ssoonwee"},"content":"                java -classpath ../bin Duke \u003c level1_input.txt \u003e level1_actual.txt"},{"lineNumber":21,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":22,"author":{"gitId":"ssoonwee"},"content":"                # compare the output to the expected output"},{"lineNumber":23,"author":{"gitId":"ssoonwee"},"content":"                diff level1_actual.txt level1_expected.txt"},{"lineNumber":24,"author":{"gitId":"ssoonwee"},"content":"                if [ $? -eq 0 ]"},{"lineNumber":25,"author":{"gitId":"ssoonwee"},"content":"                then"},{"lineNumber":26,"author":{"gitId":"ssoonwee"},"content":"                        echo \"Test result: PASSED\""},{"lineNumber":27,"author":{"gitId":"ssoonwee"},"content":"                            exit 0"},{"lineNumber":28,"author":{"gitId":"ssoonwee"},"content":"                        else"},{"lineNumber":29,"author":{"gitId":"ssoonwee"},"content":"                                echo \"Test result: FAILED\""},{"lineNumber":30,"author":{"gitId":"ssoonwee"},"content":"                                    exit 1"},{"lineNumber":31,"author":{"gitId":"ssoonwee"},"content":"                                fi"}],"authorContributionMap":{"ssoonwee":31}},{"path":"text-ui-test/level6_actual.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":"Hello! I\u0027m Duke"},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"What can I do for you?"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":"[T][ ] read book"},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":"Now you have 1 tasks in the list."},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":"[D][ ] return book (by: June 6th)"},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":"Now you have 2 tasks in the list."},{"lineNumber":14,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":15,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":16,"author":{"gitId":"ssoonwee"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":17,"author":{"gitId":"ssoonwee"},"content":"[E][ ] project meeting (at: Aug 6th 2-4pm)"},{"lineNumber":18,"author":{"gitId":"ssoonwee"},"content":"Now you have 3 tasks in the list."},{"lineNumber":19,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":20,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":21,"author":{"gitId":"ssoonwee"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":22,"author":{"gitId":"ssoonwee"},"content":"[T][ ] join sports club"},{"lineNumber":23,"author":{"gitId":"ssoonwee"},"content":"Now you have 4 tasks in the list."},{"lineNumber":24,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":25,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":26,"author":{"gitId":"ssoonwee"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":27,"author":{"gitId":"ssoonwee"},"content":"[T][ ] borrow book"},{"lineNumber":28,"author":{"gitId":"ssoonwee"},"content":"Now you have 5 tasks in the list."},{"lineNumber":29,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":30,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":31,"author":{"gitId":"ssoonwee"},"content":"Nice! I\u0027ve marked this task as done: "},{"lineNumber":32,"author":{"gitId":"ssoonwee"},"content":"[T][X] read book"},{"lineNumber":33,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":34,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":35,"author":{"gitId":"ssoonwee"},"content":"Nice! I\u0027ve marked this task as done: "},{"lineNumber":36,"author":{"gitId":"ssoonwee"},"content":"[D][X] return book (by: June 6th)"},{"lineNumber":37,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":38,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":39,"author":{"gitId":"ssoonwee"},"content":"Nice! I\u0027ve marked this task as done: "},{"lineNumber":40,"author":{"gitId":"ssoonwee"},"content":"[T][X] join sports club"},{"lineNumber":41,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":42,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":43,"author":{"gitId":"ssoonwee"},"content":"Here are the tasks in your list:"},{"lineNumber":44,"author":{"gitId":"ssoonwee"},"content":"1.[T][X] read book"},{"lineNumber":45,"author":{"gitId":"ssoonwee"},"content":"2.[D][X] return book (by: June 6th)"},{"lineNumber":46,"author":{"gitId":"ssoonwee"},"content":"3.[E][ ] project meeting (at: Aug 6th 2-4pm)"},{"lineNumber":47,"author":{"gitId":"ssoonwee"},"content":"4.[T][X] join sports club"},{"lineNumber":48,"author":{"gitId":"ssoonwee"},"content":"5.[T][ ] borrow book"},{"lineNumber":49,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":50,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":51,"author":{"gitId":"ssoonwee"},"content":"Noted. I\u0027ve removed this task: "},{"lineNumber":52,"author":{"gitId":"ssoonwee"},"content":"[E][ ] project meeting (at: Aug 6th 2-4pm)"},{"lineNumber":53,"author":{"gitId":"ssoonwee"},"content":"Now you have 4 tasks in the list."},{"lineNumber":54,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":55,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":56,"author":{"gitId":"ssoonwee"},"content":"Here are the tasks in your list:"},{"lineNumber":57,"author":{"gitId":"ssoonwee"},"content":"1.[T][X] read book"},{"lineNumber":58,"author":{"gitId":"ssoonwee"},"content":"2.[E][ ] project meeting (at: Aug 6th 2-4pm)"},{"lineNumber":59,"author":{"gitId":"ssoonwee"},"content":"3.[T][X] join sports club"},{"lineNumber":60,"author":{"gitId":"ssoonwee"},"content":"4.[T][ ] borrow book"},{"lineNumber":61,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":62,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":63,"author":{"gitId":"ssoonwee"},"content":"Bye. Hope to see you again soon!"},{"lineNumber":64,"author":{"gitId":"ssoonwee"},"content":"---------------------------"}],"authorContributionMap":{"ssoonwee":64}},{"path":"text-ui-test/level6_expected.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":"Hello! I\u0027m Duke"},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"What can I do for you?"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":"[T][ ] read book"},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":"Now you have 1 tasks in the list."},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":"[D][ ] return book (by: June 6th)"},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":"Now you have 2 tasks in the list."},{"lineNumber":14,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":15,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":16,"author":{"gitId":"ssoonwee"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":17,"author":{"gitId":"ssoonwee"},"content":"[E][ ] project meeting (at: Aug 6th 2-4pm)"},{"lineNumber":18,"author":{"gitId":"ssoonwee"},"content":"Now you have 3 tasks in the list."},{"lineNumber":19,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":20,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":21,"author":{"gitId":"ssoonwee"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":22,"author":{"gitId":"ssoonwee"},"content":"[T][ ] join sports club"},{"lineNumber":23,"author":{"gitId":"ssoonwee"},"content":"Now you have 4 tasks in the list."},{"lineNumber":24,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":25,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":26,"author":{"gitId":"ssoonwee"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":27,"author":{"gitId":"ssoonwee"},"content":"[T][ ] borrow book"},{"lineNumber":28,"author":{"gitId":"ssoonwee"},"content":"Now you have 5 tasks in the list."},{"lineNumber":29,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":30,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":31,"author":{"gitId":"ssoonwee"},"content":"Nice! I\u0027ve marked this task as done: "},{"lineNumber":32,"author":{"gitId":"ssoonwee"},"content":"[T][X] read book"},{"lineNumber":33,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":34,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":35,"author":{"gitId":"ssoonwee"},"content":"Nice! I\u0027ve marked this task as done: "},{"lineNumber":36,"author":{"gitId":"ssoonwee"},"content":"[D][X] return book (by: June 6th)"},{"lineNumber":37,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":38,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":39,"author":{"gitId":"ssoonwee"},"content":"Nice! I\u0027ve marked this task as done: "},{"lineNumber":40,"author":{"gitId":"ssoonwee"},"content":"[T][X] join sports club"},{"lineNumber":41,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":42,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":43,"author":{"gitId":"ssoonwee"},"content":"Here are the tasks in your list:"},{"lineNumber":44,"author":{"gitId":"ssoonwee"},"content":"1.[T][X] read book"},{"lineNumber":45,"author":{"gitId":"ssoonwee"},"content":"2.[D][X] return book (by: June 6th)"},{"lineNumber":46,"author":{"gitId":"ssoonwee"},"content":"3.[E][ ] project meeting (at: Aug 6th 2-4pm)"},{"lineNumber":47,"author":{"gitId":"ssoonwee"},"content":"4.[T][X] join sports club"},{"lineNumber":48,"author":{"gitId":"ssoonwee"},"content":"5.[T][ ] borrow book"},{"lineNumber":49,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":50,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":51,"author":{"gitId":"ssoonwee"},"content":"Noted. I\u0027ve removed this task: "},{"lineNumber":52,"author":{"gitId":"ssoonwee"},"content":"[E][ ] project meeting (at: Aug 6th 2-4pm)"},{"lineNumber":53,"author":{"gitId":"ssoonwee"},"content":"Now you have 4 tasks in the list."},{"lineNumber":54,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":55,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":56,"author":{"gitId":"ssoonwee"},"content":"Here are the tasks in your list:"},{"lineNumber":57,"author":{"gitId":"ssoonwee"},"content":"1.[T][X] read book"},{"lineNumber":58,"author":{"gitId":"ssoonwee"},"content":"2.[E][ ] project meeting (at: Aug 6th 2-4pm)"},{"lineNumber":59,"author":{"gitId":"ssoonwee"},"content":"3.[T][X] join sports club"},{"lineNumber":60,"author":{"gitId":"ssoonwee"},"content":"4.[T][ ] borrow book"},{"lineNumber":61,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":62,"author":{"gitId":"ssoonwee"},"content":"---------------------------"},{"lineNumber":63,"author":{"gitId":"ssoonwee"},"content":"Bye. Hope to see you again soon!"},{"lineNumber":64,"author":{"gitId":"ssoonwee"},"content":"---------------------------"}],"authorContributionMap":{"ssoonwee":64}},{"path":"text-ui-test/level6_input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":"todo borrow book"},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":"done 4"},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":"list"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"delete 3"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":"list"},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":"bye"}],"authorContributionMap":{"ssoonwee":12}},{"path":"text-ui-test/level6_runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"ssoonwee"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":2,"author":{"gitId":"ssoonwee"},"content":"then"},{"lineNumber":3,"author":{"gitId":"ssoonwee"},"content":"        mkdir ../bin"},{"lineNumber":4,"author":{"gitId":"ssoonwee"},"content":"    fi"},{"lineNumber":5,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":6,"author":{"gitId":"ssoonwee"},"content":"    # delete output from previous run"},{"lineNumber":7,"author":{"gitId":"ssoonwee"},"content":"    if [ -e \"level6_actual.txt\" ]"},{"lineNumber":8,"author":{"gitId":"ssoonwee"},"content":"    then"},{"lineNumber":9,"author":{"gitId":"ssoonwee"},"content":"            rm level6_actual.txt"},{"lineNumber":10,"author":{"gitId":"ssoonwee"},"content":"        fi"},{"lineNumber":11,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":12,"author":{"gitId":"ssoonwee"},"content":"        # compile the code into the bin folder, terminates if error occurred"},{"lineNumber":13,"author":{"gitId":"ssoonwee"},"content":"        if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":14,"author":{"gitId":"ssoonwee"},"content":"        then"},{"lineNumber":15,"author":{"gitId":"ssoonwee"},"content":"                echo \"********** BUILD FAILURE **********\""},{"lineNumber":16,"author":{"gitId":"ssoonwee"},"content":"                    exit 1"},{"lineNumber":17,"author":{"gitId":"ssoonwee"},"content":"                fi"},{"lineNumber":18,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":19,"author":{"gitId":"ssoonwee"},"content":"                # run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":20,"author":{"gitId":"ssoonwee"},"content":"                java -classpath ../bin Duke \u003c level6_input.txt \u003e level6_actual.txt"},{"lineNumber":21,"author":{"gitId":"ssoonwee"},"content":""},{"lineNumber":22,"author":{"gitId":"ssoonwee"},"content":"                # compare the output to the expected output"},{"lineNumber":23,"author":{"gitId":"ssoonwee"},"content":"                diff level6_actual.txt level6_expected.txt"},{"lineNumber":24,"author":{"gitId":"ssoonwee"},"content":"                if [ $? -eq 0 ]"},{"lineNumber":25,"author":{"gitId":"ssoonwee"},"content":"                then"},{"lineNumber":26,"author":{"gitId":"ssoonwee"},"content":"                        echo \"Test result: PASSED\""},{"lineNumber":27,"author":{"gitId":"ssoonwee"},"content":"                            exit 0"},{"lineNumber":28,"author":{"gitId":"ssoonwee"},"content":"                        else"},{"lineNumber":29,"author":{"gitId":"ssoonwee"},"content":"                                echo \"Test result: FAILED\""},{"lineNumber":30,"author":{"gitId":"ssoonwee"},"content":"                                    exit 1"},{"lineNumber":31,"author":{"gitId":"ssoonwee"},"content":"                                fi"}],"authorContributionMap":{"ssoonwee":31}}]
