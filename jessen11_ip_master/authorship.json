[{"path":"data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"[T][_] study "},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"[D][_] return book  | 2020-10-10 11:00"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"[T][_] buy book "},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"[D][_] study MA4207  | 2021-10-02 12:20"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"[E][X]  | 2020-12-31 23:59 ~ 2021-01-01 12:00"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"[E][_] play basketball  | 2020-12-31 23:59 ~ 2021-01-01 12:00"}],"authorContributionMap":{"jessen11":6}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"public class Deadline extends Task {"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"    private final LocalDate DeadlineDate;"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"    private final LocalTime DeadlineTime;"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"     * Constructor of Deadline class."},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"     * @param name name of deadline."},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"     * @param isDone deadline status."},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"     * @param DeadlineDate date of deadline"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"     * @param DeadlineTime time of deadline"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"    Deadline(String name, Boolean isDone"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"            , LocalDate DeadlineDate, LocalTime DeadlineTime) {"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"        super(name,isDone);"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"        this.DeadlineDate \u003d DeadlineDate;"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"        this.DeadlineTime \u003d DeadlineTime;"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"     * Get deadline date"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"     * @return deadline date."},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"    public LocalDate getDeadlineDate(){"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"        return this.DeadlineDate;"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"     * Get deadline time"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"     * @return deadline time."},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"    public LocalTime getDeadlineTime() {"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"        return DeadlineTime;"},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"     * Mark task as done"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"     * @return new task, marked as done."},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"    Deadline finish(){"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"        return new Deadline(this.getName(), true, this.getDeadlineDate(), this.getDeadlineTime()) ;"},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"    public String toString(){"},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"        if(this.getIsDone()){"},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":"            return \"[D][X] \" + this.getName() +\" | \"+ this.getDeadlineDate()+ \" \"  + this.getDeadlineTime();"},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"        else{"},{"lineNumber":60,"author":{"gitId":"jessen11"},"content":"            return \"[D][_] \" + this.getName() +\" | \" +this.getDeadlineDate()+ \" \" + this.getDeadlineTime();"},{"lineNumber":61,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":62,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"jessen11"},"content":"}"}],"authorContributionMap":{"jessen11":64}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import static java.lang.Integer.parseInt;"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":" * Main class for Duke."},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":" *"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":" */"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"     * Driver code."},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"    public static void main(String[] args) throws FileNotFoundException {"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"        Ui ui;"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":17,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":20,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"        String hello \u003d \"What can I do for you?\\n\";"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"        String goodbye \u003d \"Bye. Hope to see you again soon!\\n\";"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"        String SAVE_FILE_PATH \u003d \"./data/\";"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"        String SAVE_FILE_NAME \u003d \"data.txt\";"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"        Storage storage;"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"        storage \u003d new Storage(SAVE_FILE_PATH,SAVE_FILE_NAME);"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"        ArrayList\u003cString\u003e input;"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"        TaskList tasks;"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"        ui \u003d new Ui();"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"            input \u003d storage.readFile();"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"            tasks \u003d new TaskList(readInput(input));"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"        catch (FileNotFoundException e){"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"            throw new FileNotFoundException(\"No File Detected\");"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"        ui.printResponse(\"Hello from\\n\" + logo);"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"        ui.printResponse(hello);"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":"        String cmd \u003d ui.readLine();"},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"        String[] pre \u003d cmd.split(\"\\\\s+\");"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"        while(!cmd.equals(\"bye\")) {"},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"            int n;"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"            switch (pre[0]) {"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"                case \"list\" :"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"                    ui.printTasks(tasks);"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"                    storage.writeTasks(tasks);"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"                    break;"},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":"                case \"done\" :"},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"                    n \u003d parseInt(pre[1]) - 1;"},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"                    doneTask(tasks, n,ui);"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"                    storage.writeTasks(tasks);"},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"                    break;"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":"                case \"delete\" :"},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"                    n \u003d parseInt(pre[1]) - 1;"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"                    deleteTask(tasks, n,ui);"},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"                    storage.writeTasks(tasks);"},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":"                    break;"},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":"                case \"deadline\" :"},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"                    addDeadline(tasks, cmd,ui);"},{"lineNumber":60,"author":{"gitId":"jessen11"},"content":"                    storage.writeTasks(tasks);"},{"lineNumber":61,"author":{"gitId":"jessen11"},"content":"                    break;"},{"lineNumber":62,"author":{"gitId":"jessen11"},"content":"                case \"event\" :"},{"lineNumber":63,"author":{"gitId":"jessen11"},"content":"                    addEvent(tasks, cmd,ui);"},{"lineNumber":64,"author":{"gitId":"jessen11"},"content":"                    storage.writeTasks(tasks);"},{"lineNumber":65,"author":{"gitId":"jessen11"},"content":"                    break;"},{"lineNumber":66,"author":{"gitId":"jessen11"},"content":"                case \"todo\" :"},{"lineNumber":67,"author":{"gitId":"jessen11"},"content":"                    addToDo(tasks, pre,ui);"},{"lineNumber":68,"author":{"gitId":"jessen11"},"content":"                    storage.writeTasks(tasks);"},{"lineNumber":69,"author":{"gitId":"jessen11"},"content":"                    break;"},{"lineNumber":70,"author":{"gitId":"jessen11"},"content":"                case \"find\" :"},{"lineNumber":71,"author":{"gitId":"jessen11"},"content":"                    findTasks(tasks,pre[1],ui);"},{"lineNumber":72,"author":{"gitId":"jessen11"},"content":"                    break;"},{"lineNumber":73,"author":{"gitId":"jessen11"},"content":"                default :"},{"lineNumber":74,"author":{"gitId":"jessen11"},"content":"                    addError(ui);"},{"lineNumber":75,"author":{"gitId":"jessen11"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"jessen11"},"content":"            cmd \u003d ui.readLine();"},{"lineNumber":77,"author":{"gitId":"jessen11"},"content":"            pre \u003d cmd.split(\"\\\\s+\");"},{"lineNumber":78,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"jessen11"},"content":"        ui.printResponse(goodbye);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":82,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"jessen11"},"content":"     * Find a task."},{"lineNumber":84,"author":{"gitId":"jessen11"},"content":"     * @param tasks list of tasks."},{"lineNumber":85,"author":{"gitId":"jessen11"},"content":"     * @param s the key string."},{"lineNumber":86,"author":{"gitId":"jessen11"},"content":"     * @param ui the ui used to scan."},{"lineNumber":87,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":89,"author":{"gitId":"jessen11"},"content":"    private static void findTasks(TaskList tasks, String s, Ui ui) {"},{"lineNumber":90,"author":{"gitId":"jessen11"},"content":"        TaskList query \u003d tasks.find(s);"},{"lineNumber":91,"author":{"gitId":"jessen11"},"content":"        ui.printResponse(\"Here are the matching tasks in your list:\\n\");"},{"lineNumber":92,"author":{"gitId":"jessen11"},"content":"        ui.printTasks(query);"},{"lineNumber":93,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":95,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"jessen11"},"content":"     * Delete a task."},{"lineNumber":97,"author":{"gitId":"jessen11"},"content":"     * @param tasks list of tasks."},{"lineNumber":98,"author":{"gitId":"jessen11"},"content":"     * @param n the target index."},{"lineNumber":99,"author":{"gitId":"jessen11"},"content":"     * @param ui the ui used to scan."},{"lineNumber":100,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":102,"author":{"gitId":"jessen11"},"content":"    private static void deleteTask(TaskList tasks, int n, Ui ui) {"},{"lineNumber":103,"author":{"gitId":"jessen11"},"content":"        try {"},{"lineNumber":104,"author":{"gitId":"jessen11"},"content":"            Task t \u003d tasks.get(n);"},{"lineNumber":105,"author":{"gitId":"jessen11"},"content":"            ui.printResponse(\"Noted. I\u0027ve removed this task: \");"},{"lineNumber":106,"author":{"gitId":"jessen11"},"content":"            tasks.remove(n);"},{"lineNumber":107,"author":{"gitId":"jessen11"},"content":"            ui.printResponse(t.toString());"},{"lineNumber":108,"author":{"gitId":"jessen11"},"content":"            int size \u003d tasks.size();"},{"lineNumber":109,"author":{"gitId":"jessen11"},"content":"            printTotalTasks(size,ui);"},{"lineNumber":110,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"jessen11"},"content":"        catch(IndexOutOfBoundsException e){"},{"lineNumber":112,"author":{"gitId":"jessen11"},"content":"            ui.printResponse(\"Wrong task ID\");"},{"lineNumber":113,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":116,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"jessen11"},"content":"     * Print the number of tasks"},{"lineNumber":118,"author":{"gitId":"jessen11"},"content":"     * @param size the total of tasks."},{"lineNumber":119,"author":{"gitId":"jessen11"},"content":"     * @param ui the ui used to scan."},{"lineNumber":120,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":122,"author":{"gitId":"jessen11"},"content":"    private static void printTotalTasks(int size, Ui ui) {"},{"lineNumber":123,"author":{"gitId":"jessen11"},"content":"        String msg;"},{"lineNumber":124,"author":{"gitId":"jessen11"},"content":"        if(size !\u003d 1) {"},{"lineNumber":125,"author":{"gitId":"jessen11"},"content":"             msg \u003d \"Now you have \" + size + \" tasks in the list\";"},{"lineNumber":126,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"jessen11"},"content":"        else{"},{"lineNumber":128,"author":{"gitId":"jessen11"},"content":"             msg \u003d \"Now you have \" + size + \" task in the list\";"},{"lineNumber":129,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"jessen11"},"content":"        ui.printResponse(msg);"},{"lineNumber":131,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":133,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":134,"author":{"gitId":"jessen11"},"content":"     * Mark a task as done."},{"lineNumber":135,"author":{"gitId":"jessen11"},"content":"     * @param tasks list of tasks."},{"lineNumber":136,"author":{"gitId":"jessen11"},"content":"     * @param n target index."},{"lineNumber":137,"author":{"gitId":"jessen11"},"content":"     * @param ui the ui used to scan."},{"lineNumber":138,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":140,"author":{"gitId":"jessen11"},"content":"    private static void doneTask(TaskList tasks, int n,Ui ui) {"},{"lineNumber":141,"author":{"gitId":"jessen11"},"content":"        try {"},{"lineNumber":142,"author":{"gitId":"jessen11"},"content":"            tasks.set(n, tasks.get(n).finish());"},{"lineNumber":143,"author":{"gitId":"jessen11"},"content":"            ui.printResponse(\"Nice! I\u0027ve marked this task as done: \\n\");"},{"lineNumber":144,"author":{"gitId":"jessen11"},"content":"            ui.printResponse(tasks.get(n).toString());"},{"lineNumber":145,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"jessen11"},"content":"        catch(IndexOutOfBoundsException e){"},{"lineNumber":147,"author":{"gitId":"jessen11"},"content":"            ui.printResponse(\"Wrong task ID\");"},{"lineNumber":148,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":151,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":152,"author":{"gitId":"jessen11"},"content":"     * Print an error."},{"lineNumber":153,"author":{"gitId":"jessen11"},"content":"     * @param ui the ui used to scan."},{"lineNumber":154,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":155,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":156,"author":{"gitId":"jessen11"},"content":"    private static void addError(Ui ui) {"},{"lineNumber":157,"author":{"gitId":"jessen11"},"content":"        ui.printResponse(\"Command not understood\");"},{"lineNumber":158,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":160,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":161,"author":{"gitId":"jessen11"},"content":"     * Add a todo task"},{"lineNumber":162,"author":{"gitId":"jessen11"},"content":"     * @param tasks list of tasks."},{"lineNumber":163,"author":{"gitId":"jessen11"},"content":"     * @param pre input from user."},{"lineNumber":164,"author":{"gitId":"jessen11"},"content":"     * @param ui the ui used to scan."},{"lineNumber":165,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":166,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":167,"author":{"gitId":"jessen11"},"content":"    private static void addToDo(TaskList tasks, String[] pre, Ui ui) {"},{"lineNumber":168,"author":{"gitId":"jessen11"},"content":"        if (pre.length \u003e 0) {"},{"lineNumber":169,"author":{"gitId":"jessen11"},"content":"            tasks.add(Parser.parseTodo(pre));"},{"lineNumber":170,"author":{"gitId":"jessen11"},"content":"            ui.printResponse(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":171,"author":{"gitId":"jessen11"},"content":"            ui.printResponse(tasks.get(tasks.size() - 1).toString());"},{"lineNumber":172,"author":{"gitId":"jessen11"},"content":"            printTotalTasks(tasks.size(),ui);"},{"lineNumber":173,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":174,"author":{"gitId":"jessen11"},"content":"        else {"},{"lineNumber":175,"author":{"gitId":"jessen11"},"content":"            ui.printResponse(\"Please add a description for todo.\");"},{"lineNumber":176,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":177,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":179,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":180,"author":{"gitId":"jessen11"},"content":"     * Add a event task"},{"lineNumber":181,"author":{"gitId":"jessen11"},"content":"     * @param tasks list of tasks."},{"lineNumber":182,"author":{"gitId":"jessen11"},"content":"     * @param cmd input from user."},{"lineNumber":183,"author":{"gitId":"jessen11"},"content":"     * @param ui the ui used to scan."},{"lineNumber":184,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":185,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":186,"author":{"gitId":"jessen11"},"content":"    private static void addEvent(TaskList tasks, String cmd,Ui ui) {"},{"lineNumber":187,"author":{"gitId":"jessen11"},"content":"        String[] pre2 \u003d cmd.split(\"/at\");"},{"lineNumber":188,"author":{"gitId":"jessen11"},"content":"        try {"},{"lineNumber":189,"author":{"gitId":"jessen11"},"content":"            tasks.add(Parser.parseEvent(pre2));"},{"lineNumber":190,"author":{"gitId":"jessen11"},"content":"            ui.printResponse(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":191,"author":{"gitId":"jessen11"},"content":"            ui.printResponse(tasks.get(tasks.size() - 1).toString());"},{"lineNumber":192,"author":{"gitId":"jessen11"},"content":"            printTotalTasks(tasks.size(),ui);"},{"lineNumber":193,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":194,"author":{"gitId":"jessen11"},"content":"        catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":195,"author":{"gitId":"jessen11"},"content":"            ui.printResponse(\"Please enter a description for event\");"},{"lineNumber":196,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":197,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":198,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":199,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":200,"author":{"gitId":"jessen11"},"content":"     * Add a deadline task"},{"lineNumber":201,"author":{"gitId":"jessen11"},"content":"     * @param tasks list of tasks."},{"lineNumber":202,"author":{"gitId":"jessen11"},"content":"     * @param cmd input from user."},{"lineNumber":203,"author":{"gitId":"jessen11"},"content":"     * @param ui the ui used to scan."},{"lineNumber":204,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":205,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":206,"author":{"gitId":"jessen11"},"content":"    private static void addDeadline(TaskList tasks, String cmd, Ui ui) {"},{"lineNumber":207,"author":{"gitId":"jessen11"},"content":"        String[] pre2 \u003d cmd.split(\"/by\");"},{"lineNumber":208,"author":{"gitId":"jessen11"},"content":"        try {"},{"lineNumber":209,"author":{"gitId":"jessen11"},"content":"            tasks.add(Parser.parseDeadlinne(pre2));"},{"lineNumber":210,"author":{"gitId":"jessen11"},"content":"            ui.printResponse(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":211,"author":{"gitId":"jessen11"},"content":"            ui.printResponse(tasks.get(tasks.size() - 1).toString());"},{"lineNumber":212,"author":{"gitId":"jessen11"},"content":"            printTotalTasks(tasks.size(),ui);"},{"lineNumber":213,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":214,"author":{"gitId":"jessen11"},"content":"        catch (ArrayIndexOutOfBoundsException  e) {"},{"lineNumber":215,"author":{"gitId":"jessen11"},"content":"            ui.printResponse(\"Please enter a description for deadline\");"},{"lineNumber":216,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":217,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":218,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":219,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":220,"author":{"gitId":"jessen11"},"content":"     * Read input from an array of strings"},{"lineNumber":221,"author":{"gitId":"jessen11"},"content":"     * @param strings array to convert."},{"lineNumber":222,"author":{"gitId":"jessen11"},"content":"     * @return the arrayList of tasks."},{"lineNumber":223,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":224,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":225,"author":{"gitId":"jessen11"},"content":"    private static ArrayList\u003cTask\u003e readInput(ArrayList\u003cString\u003e strings) {"},{"lineNumber":226,"author":{"gitId":"jessen11"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":227,"author":{"gitId":"jessen11"},"content":"        for(String i: strings) {"},{"lineNumber":228,"author":{"gitId":"jessen11"},"content":"            String[] texts \u003d i.split(\"\\\\s+\");"},{"lineNumber":229,"author":{"gitId":"jessen11"},"content":"            switch(texts[0].charAt(1)) {"},{"lineNumber":230,"author":{"gitId":"jessen11"},"content":"                case \u0027D\u0027:"},{"lineNumber":231,"author":{"gitId":"jessen11"},"content":"                    tasks.add(Parser.stringToDeadline(i));"},{"lineNumber":232,"author":{"gitId":"jessen11"},"content":"                    break;"},{"lineNumber":233,"author":{"gitId":"jessen11"},"content":"                case \u0027T\u0027:"},{"lineNumber":234,"author":{"gitId":"jessen11"},"content":"                    tasks.add(Parser.stringToTodo(i));"},{"lineNumber":235,"author":{"gitId":"jessen11"},"content":"                    break;"},{"lineNumber":236,"author":{"gitId":"jessen11"},"content":"                case \u0027E\u0027:"},{"lineNumber":237,"author":{"gitId":"jessen11"},"content":"                    tasks.add(Parser.stringToEvent(i));"},{"lineNumber":238,"author":{"gitId":"jessen11"},"content":"                    break;"},{"lineNumber":239,"author":{"gitId":"jessen11"},"content":"            }"},{"lineNumber":240,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":241,"author":{"gitId":"jessen11"},"content":"    return tasks;"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jessen11":234,"-":9}},{"path":"src/main/java/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"public class EmptyDescriptionException extends Exception{"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"    EmptyDescriptionException(String e){"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"        super(e);"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"}"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":""}],"authorContributionMap":{"jessen11":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"public class Event extends Task{"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"    private LocalDate startDate;"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"    private LocalTime startTime;"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"    private LocalDate endDate;"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"    private LocalTime endTime;"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"     * Constructor of Event class."},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"     * @param name name of event."},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"     * @param isDone event status."},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"     * @param startDate date of start event."},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"     * @param startTime time of start event."},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"     * @param endDate date of end event."},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"     * @param endTime time of end event."},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"    Event(String name, Boolean isDone,LocalDate startDate, LocalTime startTime"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"            , LocalDate endDate, LocalTime endTime) {"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"        super(name,isDone);"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"        this.startDate \u003d startDate;"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"        this.endDate \u003d endDate;"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"     * Get the start date."},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"     * @return the start date."},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"    public LocalDate getStartDate() {"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"        return startDate;"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"     * Get the start time."},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"     * @return the start time."},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"    public LocalTime getStartTime() {"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"        return startTime;"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"     * Get the end date."},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"     * @return the end date."},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"    public LocalDate getEndDate() {"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"        return endDate;"},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"     * Get the end time."},{"lineNumber":60,"author":{"gitId":"jessen11"},"content":"     * @return the end time."},{"lineNumber":61,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":63,"author":{"gitId":"jessen11"},"content":"    public LocalTime getEndTime() {"},{"lineNumber":64,"author":{"gitId":"jessen11"},"content":"        return endTime;"},{"lineNumber":65,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":67,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"jessen11"},"content":"     * Mark task as done"},{"lineNumber":69,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"jessen11"},"content":"     * @return new task, marked as done."},{"lineNumber":71,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"jessen11"},"content":"    @Override"},{"lineNumber":73,"author":{"gitId":"jessen11"},"content":"    Event finish() {"},{"lineNumber":74,"author":{"gitId":"jessen11"},"content":"        return new Event(this.getName(), true,this.getStartDate(),this.getStartTime(),"},{"lineNumber":75,"author":{"gitId":"jessen11"},"content":"                this.getEndDate(),this.getEndTime()) ;"},{"lineNumber":76,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"jessen11"},"content":"    @Override"},{"lineNumber":78,"author":{"gitId":"jessen11"},"content":"    public String toString() {"},{"lineNumber":79,"author":{"gitId":"jessen11"},"content":"        if(this.getIsDone()) {"},{"lineNumber":80,"author":{"gitId":"jessen11"},"content":"            return \"[E][X] \" + this.name + \" | \" + this.getStartDate()+ \" \" + this.getStartTime() +"},{"lineNumber":81,"author":{"gitId":"jessen11"},"content":"                    \" ~ \" + this.getEndDate()+ \" \" + this.getEndTime();"},{"lineNumber":82,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"jessen11"},"content":"        else{"},{"lineNumber":84,"author":{"gitId":"jessen11"},"content":"            return \"[E][_] \" + this.name + \" | \" + this.getStartDate()+ \" \" + this.getStartTime() +"},{"lineNumber":85,"author":{"gitId":"jessen11"},"content":"                    \" ~ \" + this.getEndDate()+ \" \" + this.getEndTime();"},{"lineNumber":86,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"jessen11"},"content":"}"},{"lineNumber":89,"author":{"gitId":"jessen11"},"content":""}],"authorContributionMap":{"jessen11":89}},{"path":"src/main/java/NoTasksException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"public class NoTasksException extends Exception{"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"    NoTasksException(String e){"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"        super(e);"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"}"}],"authorContributionMap":{"jessen11":5}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"     * Parse a string to Todo."},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"     * @param string the string."},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"     * @return the todo needed."},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"    public static Todo stringToTodo(String string) {"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"        String desc \u003d \"\";"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"        String[] texts \u003d string.split(\"\\\\s+\");"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"        boolean status \u003d (texts[0].charAt(4) \u003d\u003d \u0027X\u0027);"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"        for (int j \u003d 1; j \u003c texts.length ; j++) {"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"            desc \u003d desc + texts[j] + \" \";"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"        return new Todo(desc,status);"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"     * Parse a string to Deadline."},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"     * @param string the string."},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"     * @return the deadline needed."},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"    public static Deadline stringToDeadline(String string){"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"        String missions \u003d \"\";"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"        String[] time \u003d string.split(\"[|]\");"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"        String[] texts \u003d string.split(\"\\\\s+\");"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"        String content \u003d time[0];"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"        String[] text \u003d content.split(\"\\\\s+\");"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":"        boolean status \u003d (texts[0].charAt(4) \u003d\u003d \u0027X\u0027);"},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"        for (int j \u003d 1; j \u003c text.length ; j++) {"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"            missions \u003d missions + texts[j] + \" \";"},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"        String[] times \u003d time[1].split(\"\\\\s+\");"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"        return new Deadline(missions,status"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"                , LocalDate.parse(times[1], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"                , LocalTime.parse(times[2],DateTimeFormatter.ofPattern(\"HH:mm\")));"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"     * Parse a string to Event."},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"     * @param string the string."},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"     * @return the event needed."},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"    public static Event stringToEvent(String string){"},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":"        String missions \u003d \"\";"},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"        String[] time \u003d string.split(\"[|]\");"},{"lineNumber":60,"author":{"gitId":"jessen11"},"content":"        String[] texts \u003d string.split(\"\\\\s+\");"},{"lineNumber":61,"author":{"gitId":"jessen11"},"content":"        String content \u003d time[0];"},{"lineNumber":62,"author":{"gitId":"jessen11"},"content":"        String[] text \u003d content.split(\"\\\\s+\");"},{"lineNumber":63,"author":{"gitId":"jessen11"},"content":"        for (int j \u003d 1; j \u003c text.length ; j++) {"},{"lineNumber":64,"author":{"gitId":"jessen11"},"content":"            missions \u003d missions + texts[j] + \" \";"},{"lineNumber":65,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"jessen11"},"content":"        String[] startEnd \u003d time[1].split(\"[~]\");"},{"lineNumber":67,"author":{"gitId":"jessen11"},"content":"        String[] start \u003d startEnd[0].split(\"\\\\s+\");"},{"lineNumber":68,"author":{"gitId":"jessen11"},"content":"        String[] end \u003d startEnd[1].split(\"\\\\s+\");"},{"lineNumber":69,"author":{"gitId":"jessen11"},"content":"        boolean status \u003d (texts[0].charAt(4) \u003d\u003d \u0027X\u0027);"},{"lineNumber":70,"author":{"gitId":"jessen11"},"content":"        return new Event(missions,status,"},{"lineNumber":71,"author":{"gitId":"jessen11"},"content":"                LocalDate.parse(start[1],DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")),"},{"lineNumber":72,"author":{"gitId":"jessen11"},"content":"                LocalTime.parse(start[2],DateTimeFormatter.ofPattern(\"HH:mm\")),"},{"lineNumber":73,"author":{"gitId":"jessen11"},"content":"                LocalDate.parse(end[1],DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")),"},{"lineNumber":74,"author":{"gitId":"jessen11"},"content":"                LocalTime.parse(end[2],DateTimeFormatter.ofPattern(\"HH:mm\")));"},{"lineNumber":75,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":77,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"jessen11"},"content":"     * Parse input to Todo."},{"lineNumber":79,"author":{"gitId":"jessen11"},"content":"     * @param todo array of strings of input."},{"lineNumber":80,"author":{"gitId":"jessen11"},"content":"     * @return the todo needed."},{"lineNumber":81,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":84,"author":{"gitId":"jessen11"},"content":"    public static Todo parseTodo(String[] todo) {"},{"lineNumber":85,"author":{"gitId":"jessen11"},"content":"        String s \u003d \"\";"},{"lineNumber":86,"author":{"gitId":"jessen11"},"content":"        for (int i \u003d 1; i \u003c todo.length; i++) {"},{"lineNumber":87,"author":{"gitId":"jessen11"},"content":"            s \u003d s + todo[i] + \" \";"},{"lineNumber":88,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"jessen11"},"content":"        return (new Todo(s,false));"},{"lineNumber":90,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":92,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"jessen11"},"content":"     * Parse input to Event."},{"lineNumber":94,"author":{"gitId":"jessen11"},"content":"     * @param event array of strings of input."},{"lineNumber":95,"author":{"gitId":"jessen11"},"content":"     * @return the event needed."},{"lineNumber":96,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":99,"author":{"gitId":"jessen11"},"content":"    public static Event parseEvent(String[] event) {"},{"lineNumber":100,"author":{"gitId":"jessen11"},"content":"        String s \u003d event[0];"},{"lineNumber":101,"author":{"gitId":"jessen11"},"content":"        String[] dates \u003d event[1].split(\"\\\\s+\");"},{"lineNumber":102,"author":{"gitId":"jessen11"},"content":"        LocalDate startDate \u003d LocalDate.parse(dates[1],DateTimeFormatter.ofPattern(\"MM/dd/yyyy\"));"},{"lineNumber":103,"author":{"gitId":"jessen11"},"content":"        LocalTime startTime \u003d LocalTime.parse(dates[2],DateTimeFormatter.ofPattern(\"HH:mm\"));"},{"lineNumber":104,"author":{"gitId":"jessen11"},"content":"        LocalDate endDate \u003d LocalDate.parse(dates[3],DateTimeFormatter.ofPattern(\"MM/dd/yyyy\"));"},{"lineNumber":105,"author":{"gitId":"jessen11"},"content":"        LocalTime endTime \u003d LocalTime.parse(dates[4],DateTimeFormatter.ofPattern(\"HH:mm\"));"},{"lineNumber":106,"author":{"gitId":"jessen11"},"content":"        return new Event(s.substring(6), false, startDate,startTime,endDate,endTime);"},{"lineNumber":107,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":109,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":110,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"jessen11"},"content":"     * Parse input to Deadline."},{"lineNumber":112,"author":{"gitId":"jessen11"},"content":"     * @param deadline array of strings of input."},{"lineNumber":113,"author":{"gitId":"jessen11"},"content":"     * @return the deadline needed."},{"lineNumber":114,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":115,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":117,"author":{"gitId":"jessen11"},"content":"    public static Deadline parseDeadlinne(String[] deadline) {"},{"lineNumber":118,"author":{"gitId":"jessen11"},"content":"        String s \u003d deadline[0];"},{"lineNumber":119,"author":{"gitId":"jessen11"},"content":"        String[] dates \u003d deadline[1].split(\"\\\\s+\");"},{"lineNumber":120,"author":{"gitId":"jessen11"},"content":"        LocalDate deadlineDate \u003d LocalDate.parse(dates[1], DateTimeFormatter.ofPattern(\"MM/dd/yyyy\"));"},{"lineNumber":121,"author":{"gitId":"jessen11"},"content":"        LocalTime deadlineTime \u003d LocalTime.parse(dates[2], DateTimeFormatter.ofPattern(\"HH:mm\"));"},{"lineNumber":122,"author":{"gitId":"jessen11"},"content":"        return new Deadline(s.substring(9), false, deadlineDate,deadlineTime);"},{"lineNumber":123,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"jessen11"},"content":"}"}],"authorContributionMap":{"jessen11":124}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"public class Storage {"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"    private String edit;"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"     * Constructor of storage class."},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"     * @param path path of file."},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"     * @param name name of file."},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"    public Storage(String path, String name) {"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"        path \u003d makeDirectory(path);"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"        edit \u003d path + name;"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"     * Make a directory"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"     * @param path path of file."},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"     * @return directory path"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"    public String makeDirectory(String path) {"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"        File file \u003d new File(path);"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"        file.mkdirs();"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"        if (!file.isDirectory()) {"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"            return \"\";"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"        } else {"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"            return path;"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"     * Write the tasks in the TaskList to the directory."},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"     * @param tasks list of tasks"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"    public void writeTasks(TaskList tasks) {"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"        String s \u003d \"\";"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"        for (Task i : tasks.getList()) {"},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":"            s \u003d s + i.toString() + \"\\n\";"},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"            FileWriter fw \u003d new FileWriter(edit);"},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"            fw.write(s);"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":"            fw.close();"},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"        } catch (IOException e) {"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"jessen11"},"content":"     * Read the file and extract the schedule."},{"lineNumber":61,"author":{"gitId":"jessen11"},"content":"     * @return ArrayList of strings of schedules."},{"lineNumber":62,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":64,"author":{"gitId":"jessen11"},"content":"    public ArrayList\u003cString\u003e readFile() throws FileNotFoundException {"},{"lineNumber":65,"author":{"gitId":"jessen11"},"content":"        try {"},{"lineNumber":66,"author":{"gitId":"jessen11"},"content":"            ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":67,"author":{"gitId":"jessen11"},"content":"            File f \u003d new File(edit);"},{"lineNumber":68,"author":{"gitId":"jessen11"},"content":"            Scanner s \u003d new Scanner(f);"},{"lineNumber":69,"author":{"gitId":"jessen11"},"content":"            while (s.hasNext()) {"},{"lineNumber":70,"author":{"gitId":"jessen11"},"content":"                tasks.add(s.nextLine());"},{"lineNumber":71,"author":{"gitId":"jessen11"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"jessen11"},"content":"            return tasks;"},{"lineNumber":73,"author":{"gitId":"jessen11"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":74,"author":{"gitId":"jessen11"},"content":"            throw new FileNotFoundException(\"No File\");"},{"lineNumber":75,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"jessen11"},"content":"}"}],"authorContributionMap":{"jessen11":77}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"    private final Boolean isDone;"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"    protected final String name;"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"    protected DateTimeFormatter Date;"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"    protected DateTimeFormatter Time;"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"     * Constructor for tasks"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"     * @param name task name."},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"     * @param isDone task status."},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"    Task(String name,Boolean isDone){"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"        this.name \u003d name;"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"        this.Date \u003d DateTimeFormatter.ofPattern(\"MM/dd/yyyy\");"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"        this.Time \u003d DateTimeFormatter.ofPattern(\"hh:mm\");"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"     * Get the name for the task"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"     * @return the task name."},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"    String getName() {"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"        return this.name;"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"     * Get the status for the task"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"     * @return the task status."},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"    Boolean getIsDone() {"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"        return this.isDone;"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"     * Mark the task as done"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"     * @return the new task."},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"    Task finish(){"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"        return new Task(this.getName(), true) ;"},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"    public String toString(){"},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"        if(this.isDone){"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":"            return \"[X] \" + this.getName();"},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"        else{"},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"            return \"[ ] \" + this.getName();"},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"}"}],"authorContributionMap":{"jessen11":59}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"public class TaskList {"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"     * Constructor of TaskList class."},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"     * @param tasks list of tasks"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"    public ArrayList\u003cTask\u003e getList() {"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"        return this.tasks;"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"     * Set a task in taskList."},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"     * @param i target index."},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"     * @param task the task"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"    public void set(int i, Task task) {"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"        this.tasks.set(i,task);"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"     * Look at the i-th task."},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"     * @param i target index."},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"     * @return the task"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"    public Task get(int i) {"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"        return tasks.get(i);"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":"     * Add a task."},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"     * @param task the task"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"    public void add(Task task) {"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"        tasks.add(task);"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":"     * Remove a task in the i-th index."},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"     * @param i target index."},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"    public void remove(int i) {"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":"        tasks.remove(i);"},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":"     * Find the number of tasks"},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":"     * @return number of tasks"},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":61,"author":{"gitId":"jessen11"},"content":"    public int size() {"},{"lineNumber":62,"author":{"gitId":"jessen11"},"content":"        return tasks.size();"},{"lineNumber":63,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":65,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"jessen11"},"content":"     * Filter the tasks that match the keyword"},{"lineNumber":67,"author":{"gitId":"jessen11"},"content":"     * @param keyword the target keyword."},{"lineNumber":68,"author":{"gitId":"jessen11"},"content":"     * @return the TaskList containing all desired tasks."},{"lineNumber":69,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":71,"author":{"gitId":"jessen11"},"content":"    public TaskList find(String keyword) {"},{"lineNumber":72,"author":{"gitId":"jessen11"},"content":"        ArrayList\u003cTask\u003e answer \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":73,"author":{"gitId":"jessen11"},"content":"        for(Task i: this.getList()) {"},{"lineNumber":74,"author":{"gitId":"jessen11"},"content":"            if(i.getName().contains(keyword)) {"},{"lineNumber":75,"author":{"gitId":"jessen11"},"content":"                answer.add(i);"},{"lineNumber":76,"author":{"gitId":"jessen11"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"jessen11"},"content":"        return new TaskList(answer);"},{"lineNumber":79,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"jessen11"},"content":"}"}],"authorContributionMap":{"jessen11":80}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"public class Todo extends Task{"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"     * Constructor of Todo class."},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"     * @param name name of todo."},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"     * @param isDone event status."},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"     Todo(String name,Boolean isDone) {"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"        super(name, isDone);"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"     }"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"     * Mark task as done"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"     * @return new task, marked as done."},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"     @Override"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"     Todo finish() {"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"         return new Todo(this.getName(), true);"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"     }"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"     @Override"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"     public String toString(){"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"         if(this.getIsDone()){"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"             return \"[T][X] \" + this.getName();"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"         }"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"         else {"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"             return \"[T][_] \" + this.getName();"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"         }"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"     }"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"}"}],"authorContributionMap":{"jessen11":33}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"    private final Scanner scanf;"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"     * Constructor for Ui class."},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"    public Ui() {"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"        scanf \u003d new Scanner(System.in);"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"     * Print a response from duke."},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"     * @param msg message needed."},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"    public void printResponse(String msg){"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"        String response \u003d \"\u003e\u003eDuke : \" + msg;"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"        System.out.println(response);"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"     * Read a line."},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"    public String readLine() {"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"        String input \u003d scanf.nextLine();"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"        return input;"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"     * Print every task in the tasklists."},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"     * @param tasks the tasklist to be printed."},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"    public void printTasks(TaskList tasks) {"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"        System.out.println(\"Here are the tasks in your list:\\n\");"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"            System.out.println(i + \". \" + tasks.get(i-1));"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"}"},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":""}],"authorContributionMap":{"jessen11":50}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"public class DukeTest {"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"    public void parseTodoWorks(){"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"        String todo \u003d \"study \";"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"        String[] test \u003d new String[]{\"todo\", \"study\"};"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"        Todo task \u003d new Todo(todo,false);"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"        Todo task2 \u003d Parser.parseTodo(test);"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"        assertEquals(task.toString(),task2.toString(),\"Wrong format\");"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"    public void taskListSizeIsCorrect(){"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"        ArrayList\u003cTask\u003e test \u003d new ArrayList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"        test.add(new Todo(\"task 1\",false));"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"        test.add(new Todo(\"task 2\",false));"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"        test.add(new Todo(\"task 3\",true));"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"        TaskList list \u003d new TaskList(test);"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"        assertEquals(3,list.size(),\"Wrong Answer\");"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"    public void taskListGetIsCorrect(){"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"        ArrayList\u003cTask\u003e test \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"        test.add(new Todo(\"task 1\",false));"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"        test.add(new Todo(\"task 2\",false));"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"        test.add(new Todo(\"task 3\",true));"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"        TaskList list \u003d new TaskList(test);"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"        assertEquals(\"[T][X] task 3\",list.get(2).toString(),\"Wrong Answer\");"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"}"}],"authorContributionMap":{"jessen11":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"todo finish duke level 5"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"todo learn chess"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"list"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"deadline ma1101r homework /by tommorow"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"deadline ma1100 tutorial /by today"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"list"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"event dinner date /at satuday 7pm - 9pm"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"list"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"done 3"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"list"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"bye"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":""}],"authorContributionMap":{"jessen11":13}}]
