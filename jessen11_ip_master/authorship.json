[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"}"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"}"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"}"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"test {"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"    useJUnitPlatform()"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"    testLogging {"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"        showExceptions true"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"        exceptionFormat \"full\""},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"        showCauses true"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"        showStackTraces true"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"        showStandardStreams \u003d false"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"}"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"application {"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"}"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"shadowJar {"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"    archiveClassifier \u003d null"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"}"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"checkstyle {"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"}"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"run{"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"    standardInput \u003d System.in"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"}"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":"repositories {"},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"    mavenCentral()"},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"}"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"dependencies {"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":60,"author":{"gitId":"jessen11"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":61,"author":{"gitId":"jessen11"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":62,"author":{"gitId":"jessen11"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":63,"author":{"gitId":"jessen11"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":64,"author":{"gitId":"jessen11"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":65,"author":{"gitId":"jessen11"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":66,"author":{"gitId":"jessen11"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":67,"author":{"gitId":"jessen11"},"content":"}"}],"authorContributionMap":{"jessen11":67}},{"path":"data/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"[D][_] return book  | 2020-10-10 11:00"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"[D][X] study MA4207  | 2021-10-02 12:20"}],"authorContributionMap":{"jessen11":2}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"@rem Find java.exe"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"echo."},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"echo."},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"echo location of your Java installation."},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":"goto fail"},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":":findJavaFromJavaHome"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"echo."},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":"echo."},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":60,"author":{"gitId":"jessen11"},"content":"echo location of your Java installation."},{"lineNumber":61,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":62,"author":{"gitId":"jessen11"},"content":"goto fail"},{"lineNumber":63,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":64,"author":{"gitId":"jessen11"},"content":":init"},{"lineNumber":65,"author":{"gitId":"jessen11"},"content":"@rem Get command-line arguments, handling Windows variants"},{"lineNumber":66,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":67,"author":{"gitId":"jessen11"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":68,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":69,"author":{"gitId":"jessen11"},"content":":win9xME_args"},{"lineNumber":70,"author":{"gitId":"jessen11"},"content":"@rem Slurp the command line arguments."},{"lineNumber":71,"author":{"gitId":"jessen11"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":72,"author":{"gitId":"jessen11"},"content":"set _SKIP\u003d2"},{"lineNumber":73,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":74,"author":{"gitId":"jessen11"},"content":":win9xME_args_slurp"},{"lineNumber":75,"author":{"gitId":"jessen11"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":76,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":77,"author":{"gitId":"jessen11"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":78,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":79,"author":{"gitId":"jessen11"},"content":":execute"},{"lineNumber":80,"author":{"gitId":"jessen11"},"content":"@rem Setup the command line"},{"lineNumber":81,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":82,"author":{"gitId":"jessen11"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":83,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":84,"author":{"gitId":"jessen11"},"content":"@rem Execute Gradle"},{"lineNumber":85,"author":{"gitId":"jessen11"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"},{"lineNumber":86,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":87,"author":{"gitId":"jessen11"},"content":":end"},{"lineNumber":88,"author":{"gitId":"jessen11"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":89,"author":{"gitId":"jessen11"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":90,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":91,"author":{"gitId":"jessen11"},"content":":fail"},{"lineNumber":92,"author":{"gitId":"jessen11"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":93,"author":{"gitId":"jessen11"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":94,"author":{"gitId":"jessen11"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":95,"author":{"gitId":"jessen11"},"content":"exit /b 1"},{"lineNumber":96,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":97,"author":{"gitId":"jessen11"},"content":":mainEnd"},{"lineNumber":98,"author":{"gitId":"jessen11"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":99,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":100,"author":{"gitId":"jessen11"},"content":":omega"}],"authorContributionMap":{"jessen11":100}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"public class Deadline extends Task {"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"    private final LocalDate DeadlineDate;"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"    private final LocalTime DeadlineTime;"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"     * Constructor of Deadline class."},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"     * @param name name of deadline."},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"     * @param isDone deadline status."},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"     * @param DeadlineDate date of deadline"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"     * @param DeadlineTime time of deadline"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"    Deadline(String name, Boolean isDone"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"            , LocalDate DeadlineDate, LocalTime DeadlineTime) {"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"        super(name,isDone);"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"        this.DeadlineDate \u003d DeadlineDate;"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"        this.DeadlineTime \u003d DeadlineTime;"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"     * Get deadline date"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"     * @return deadline date."},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"    public LocalDate getDeadlineDate(){"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"        return this.DeadlineDate;"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"     * Get deadline time"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"     * @return deadline time."},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"    public LocalTime getDeadlineTime() {"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"        return DeadlineTime;"},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"     * Mark task as done"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"     * @return new task, marked as done."},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"    Deadline finish(){"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"        return new Deadline(this.getName(), true, this.getDeadlineDate(), this.getDeadlineTime()) ;"},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"    public String toString(){"},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"        if(this.getIsDone()){"},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":"            return \"[D][X] \" + this.getName() +\" | \"+ this.getDeadlineDate()+ \" \"  + this.getDeadlineTime();"},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"        else{"},{"lineNumber":60,"author":{"gitId":"jessen11"},"content":"            return \"[D][_] \" + this.getName() +\" | \" +this.getDeadlineDate()+ \" \" + this.getDeadlineTime();"},{"lineNumber":61,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":62,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"jessen11"},"content":"}"}],"authorContributionMap":{"jessen11":64}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"import javafx.scene.shape.Circle;"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":" * An example of a custom control using FXML."},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":" * containing text from the speaker."},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":" */"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"public class DialogBox extends HBox {"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"    private Label dialog;"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"    private ImageView displayPicture;"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"            fxmlLoader.load();"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"            e.printStackTrace();"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"        dialog.setText(text);"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"        displayPicture.setImage(img);"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":"        Circle circle \u003d new Circle(45, 45, 29);"},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"        displayPicture.setClip(circle);"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"    private void flip() {"},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"        Collections.reverse(tmp);"},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"        return new DialogBox(text, img);"},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":60,"author":{"gitId":"jessen11"},"content":"        db.flip();"},{"lineNumber":61,"author":{"gitId":"jessen11"},"content":"        return db;"},{"lineNumber":62,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"jessen11"},"content":"}"}],"authorContributionMap":{"jessen11":63}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"import javafx.scene.Scene;"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import javafx.scene.control.Button;"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"import java.util.ArrayList;"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"import java.util.Scanner;"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"import static java.lang.Integer.parseInt;"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":" * Main class for Duke."},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":" *"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":" */"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"public class Duke  extends Application{"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"     * Driver code."},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"    private static String FILE_PATH \u003d \"./data/\";"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"    private static String FILE_NAME \u003d \"data.txt\";"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"    private static String hello \u003d \"What can I do for you?\\n\";"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"    private static String goodbye \u003d \"Bye. Hope to see you again soon!\\n\";"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"    private VBox dialogContainer;"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"    private TextField userInput;"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":"    private Button sendButton;"},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"    private Scene scene;"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"    public Storage storage;"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"    public TaskList tasklist;"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":"    public Duke(String filePath, String fileName) throws FileNotFoundException {"},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"        storage \u003d new Storage(filePath, fileName);"},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"            tasklist \u003d new TaskList(readInput(storage.readFile()));"},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":"        catch (Exception e){"},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"            throw new FileNotFoundException(\"No File Found!\");"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"    public static void main(String[] args) throws FileNotFoundException {"},{"lineNumber":60,"author":{"gitId":"jessen11"},"content":"        Duke duke \u003d new Duke(FILE_NAME,FILE_NAME);"},{"lineNumber":61,"author":{"gitId":"jessen11"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":62,"author":{"gitId":"jessen11"},"content":"        String word \u003d sc.nextLine();"},{"lineNumber":63,"author":{"gitId":"jessen11"},"content":"        while(sc.hasNext()) {"},{"lineNumber":64,"author":{"gitId":"jessen11"},"content":"            duke.doCommand(word);"},{"lineNumber":65,"author":{"gitId":"jessen11"},"content":"            word \u003d sc.nextLine();"},{"lineNumber":66,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"jessen11"},"content":"        duke.doCommand(\"bye\");"},{"lineNumber":68,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":70,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"jessen11"},"content":"     * Find a task."},{"lineNumber":72,"author":{"gitId":"jessen11"},"content":"     * @param tasks list of tasks."},{"lineNumber":73,"author":{"gitId":"jessen11"},"content":"     * @param s the key string."},{"lineNumber":74,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":76,"author":{"gitId":"jessen11"},"content":"    private static String findTasks(TaskList tasks, String s) {"},{"lineNumber":77,"author":{"gitId":"jessen11"},"content":"        TaskList query \u003d tasks.find(s);"},{"lineNumber":78,"author":{"gitId":"jessen11"},"content":"        String response \u003d \"Here are the matching tasks in your list:\\n\";"},{"lineNumber":79,"author":{"gitId":"jessen11"},"content":"        response \u003d response + Duke.printTasks(query);"},{"lineNumber":80,"author":{"gitId":"jessen11"},"content":"        return response;"},{"lineNumber":81,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":83,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"jessen11"},"content":"     * Delete a task."},{"lineNumber":85,"author":{"gitId":"jessen11"},"content":"     * @param tasks list of tasks."},{"lineNumber":86,"author":{"gitId":"jessen11"},"content":"     * @param n the target index."},{"lineNumber":87,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":89,"author":{"gitId":"jessen11"},"content":"    private static String deleteTask(TaskList tasks, int n) {"},{"lineNumber":90,"author":{"gitId":"jessen11"},"content":"        String response \u003d \"\";"},{"lineNumber":91,"author":{"gitId":"jessen11"},"content":"        try {"},{"lineNumber":92,"author":{"gitId":"jessen11"},"content":"            Task t \u003d tasks.get(n);"},{"lineNumber":93,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":94,"author":{"gitId":"jessen11"},"content":"            response \u003d \"Noted. I\u0027ve removed this task: \";"},{"lineNumber":95,"author":{"gitId":"jessen11"},"content":"            tasks.remove(n);"},{"lineNumber":96,"author":{"gitId":"jessen11"},"content":"            response \u003d response + \"\\n\" +t.toString();"},{"lineNumber":97,"author":{"gitId":"jessen11"},"content":"            int size \u003d tasks.size();"},{"lineNumber":98,"author":{"gitId":"jessen11"},"content":"            response \u003d response + \"\\n\" + printTotalTasks(size);"},{"lineNumber":99,"author":{"gitId":"jessen11"},"content":"            return response;"},{"lineNumber":100,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"jessen11"},"content":"        catch(IndexOutOfBoundsException e){"},{"lineNumber":102,"author":{"gitId":"jessen11"},"content":"            response \u003d \"Wrong task ID\";"},{"lineNumber":103,"author":{"gitId":"jessen11"},"content":"            return response;"},{"lineNumber":104,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":107,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":108,"author":{"gitId":"jessen11"},"content":"     * Print the number of tasks"},{"lineNumber":109,"author":{"gitId":"jessen11"},"content":"     * @param size the total of tasks."},{"lineNumber":110,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":112,"author":{"gitId":"jessen11"},"content":"    private static String printTotalTasks(int size) {"},{"lineNumber":113,"author":{"gitId":"jessen11"},"content":"        String msg;"},{"lineNumber":114,"author":{"gitId":"jessen11"},"content":"        if(size !\u003d 1) {"},{"lineNumber":115,"author":{"gitId":"jessen11"},"content":"             msg \u003d \"Now you have \" + size + \" tasks in the list\";"},{"lineNumber":116,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"jessen11"},"content":"        else{"},{"lineNumber":118,"author":{"gitId":"jessen11"},"content":"             msg \u003d \"Now you have \" + size + \" task in the list\";"},{"lineNumber":119,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"jessen11"},"content":"        return msg;"},{"lineNumber":121,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":123,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"jessen11"},"content":"     * Mark a task as done."},{"lineNumber":125,"author":{"gitId":"jessen11"},"content":"     * @param tasks list of tasks."},{"lineNumber":126,"author":{"gitId":"jessen11"},"content":"     * @param n target index."},{"lineNumber":127,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":129,"author":{"gitId":"jessen11"},"content":"    private static String doneTask(TaskList tasks, int n) {"},{"lineNumber":130,"author":{"gitId":"jessen11"},"content":"        String response;"},{"lineNumber":131,"author":{"gitId":"jessen11"},"content":"        try {"},{"lineNumber":132,"author":{"gitId":"jessen11"},"content":"            tasks.set(n, tasks.get(n).finish());"},{"lineNumber":133,"author":{"gitId":"jessen11"},"content":"            response \u003d \"Nice! I\u0027ve marked this task as done: \\n\";"},{"lineNumber":134,"author":{"gitId":"jessen11"},"content":"            response \u003d response + tasks.get(n).toString();"},{"lineNumber":135,"author":{"gitId":"jessen11"},"content":"            return response;"},{"lineNumber":136,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"jessen11"},"content":"        catch(IndexOutOfBoundsException e){"},{"lineNumber":138,"author":{"gitId":"jessen11"},"content":"            response \u003d \"Wrong task ID\";"},{"lineNumber":139,"author":{"gitId":"jessen11"},"content":"            return response;"},{"lineNumber":140,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":142,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":144,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":145,"author":{"gitId":"jessen11"},"content":"     * Print an error."},{"lineNumber":146,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":147,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":148,"author":{"gitId":"jessen11"},"content":"    private static String addError() {"},{"lineNumber":149,"author":{"gitId":"jessen11"},"content":"        return \"Command not understood\";"},{"lineNumber":150,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":152,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":153,"author":{"gitId":"jessen11"},"content":"     * Add a todo task"},{"lineNumber":154,"author":{"gitId":"jessen11"},"content":"     * @param tasks list of tasks."},{"lineNumber":155,"author":{"gitId":"jessen11"},"content":"     * @param pre input from user."},{"lineNumber":156,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":157,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":158,"author":{"gitId":"jessen11"},"content":"    private static String addToDo(TaskList tasks, String[] pre) {"},{"lineNumber":159,"author":{"gitId":"jessen11"},"content":"        String response;"},{"lineNumber":160,"author":{"gitId":"jessen11"},"content":"        if (pre.length \u003e 0) {"},{"lineNumber":161,"author":{"gitId":"jessen11"},"content":"            tasks.add(Parser.parseTodo(pre));"},{"lineNumber":162,"author":{"gitId":"jessen11"},"content":"            response \u003d \"Got it. I\u0027ve added this task:\";"},{"lineNumber":163,"author":{"gitId":"jessen11"},"content":"            response \u003d response + \"\\n\" + tasks.get(tasks.size() - 1).toString() + \"\\n\" +"},{"lineNumber":164,"author":{"gitId":"jessen11"},"content":"                printTotalTasks(tasks.size());"},{"lineNumber":165,"author":{"gitId":"jessen11"},"content":"            return response;"},{"lineNumber":166,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"jessen11"},"content":"        else {"},{"lineNumber":168,"author":{"gitId":"jessen11"},"content":"            return \"Please add a description for todo.\";"},{"lineNumber":169,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":170,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":172,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":173,"author":{"gitId":"jessen11"},"content":"     * Add a event task"},{"lineNumber":174,"author":{"gitId":"jessen11"},"content":"     * @param tasks list of tasks."},{"lineNumber":175,"author":{"gitId":"jessen11"},"content":"     * @param cmd input from user."},{"lineNumber":176,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":177,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":178,"author":{"gitId":"jessen11"},"content":"    private static String addEvent(TaskList tasks, String cmd) {"},{"lineNumber":179,"author":{"gitId":"jessen11"},"content":"        String[] pre2 \u003d cmd.split(\"/at\");"},{"lineNumber":180,"author":{"gitId":"jessen11"},"content":"        String response;"},{"lineNumber":181,"author":{"gitId":"jessen11"},"content":"        try {"},{"lineNumber":182,"author":{"gitId":"jessen11"},"content":"            tasks.add(Parser.parseEvent(pre2));"},{"lineNumber":183,"author":{"gitId":"jessen11"},"content":"            response \u003d \"Got it. I\u0027ve added this task:\";"},{"lineNumber":184,"author":{"gitId":"jessen11"},"content":"            response \u003d response + \"\\n\" + tasks.get(tasks.size() - 1).toString() + \"\\n\" +"},{"lineNumber":185,"author":{"gitId":"jessen11"},"content":"                    printTotalTasks(tasks.size());"},{"lineNumber":186,"author":{"gitId":"jessen11"},"content":"            return response;"},{"lineNumber":187,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"jessen11"},"content":"        catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":189,"author":{"gitId":"jessen11"},"content":"            return \"Please enter a description for event\";"},{"lineNumber":190,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":191,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":192,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":193,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":194,"author":{"gitId":"jessen11"},"content":"     * Add a deadline task"},{"lineNumber":195,"author":{"gitId":"jessen11"},"content":"     * @param tasks list of tasks."},{"lineNumber":196,"author":{"gitId":"jessen11"},"content":"     * @param cmd input from user."},{"lineNumber":197,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":198,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":199,"author":{"gitId":"jessen11"},"content":"    private static String addDeadline(TaskList tasks, String cmd) {"},{"lineNumber":200,"author":{"gitId":"jessen11"},"content":"        String[] pre2 \u003d cmd.split(\"/by\");"},{"lineNumber":201,"author":{"gitId":"jessen11"},"content":"        String response;"},{"lineNumber":202,"author":{"gitId":"jessen11"},"content":"        try {"},{"lineNumber":203,"author":{"gitId":"jessen11"},"content":"            tasks.add(Parser.parseDeadlinne(pre2));"},{"lineNumber":204,"author":{"gitId":"jessen11"},"content":"            response \u003d \"Got it. I\u0027ve added this task:\";"},{"lineNumber":205,"author":{"gitId":"jessen11"},"content":"            response \u003d response + \"\\n\" + tasks.get(tasks.size() - 1).toString() + \"\\n\" +"},{"lineNumber":206,"author":{"gitId":"jessen11"},"content":"                    printTotalTasks(tasks.size());"},{"lineNumber":207,"author":{"gitId":"jessen11"},"content":"            return response;"},{"lineNumber":208,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":209,"author":{"gitId":"jessen11"},"content":"        catch (ArrayIndexOutOfBoundsException  e) {"},{"lineNumber":210,"author":{"gitId":"jessen11"},"content":"            return \"Please enter a description for deadline\";"},{"lineNumber":211,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":212,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":213,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":214,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":215,"author":{"gitId":"jessen11"},"content":"     * Read input from an array of strings"},{"lineNumber":216,"author":{"gitId":"jessen11"},"content":"     * @param strings array to convert."},{"lineNumber":217,"author":{"gitId":"jessen11"},"content":"     * @return the arrayList of tasks."},{"lineNumber":218,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":219,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":220,"author":{"gitId":"jessen11"},"content":"    private static ArrayList\u003cTask\u003e readInput(ArrayList\u003cString\u003e strings) {"},{"lineNumber":221,"author":{"gitId":"jessen11"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":222,"author":{"gitId":"jessen11"},"content":"        for(String i: strings) {"},{"lineNumber":223,"author":{"gitId":"jessen11"},"content":"            String[] texts \u003d i.split(\"\\\\s+\");"},{"lineNumber":224,"author":{"gitId":"jessen11"},"content":"            switch(texts[0].charAt(1)) {"},{"lineNumber":225,"author":{"gitId":"jessen11"},"content":"                case \u0027D\u0027:"},{"lineNumber":226,"author":{"gitId":"jessen11"},"content":"                    tasks.add(Parser.stringToDeadline(i));"},{"lineNumber":227,"author":{"gitId":"jessen11"},"content":"                    break;"},{"lineNumber":228,"author":{"gitId":"jessen11"},"content":"                case \u0027T\u0027:"},{"lineNumber":229,"author":{"gitId":"jessen11"},"content":"                    tasks.add(Parser.stringToTodo(i));"},{"lineNumber":230,"author":{"gitId":"jessen11"},"content":"                    break;"},{"lineNumber":231,"author":{"gitId":"jessen11"},"content":"                case \u0027E\u0027:"},{"lineNumber":232,"author":{"gitId":"jessen11"},"content":"                    tasks.add(Parser.stringToEvent(i));"},{"lineNumber":233,"author":{"gitId":"jessen11"},"content":"                    break;"},{"lineNumber":234,"author":{"gitId":"jessen11"},"content":"            }"},{"lineNumber":235,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":236,"author":{"gitId":"jessen11"},"content":"    return tasks;"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":238,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":239,"author":{"gitId":"jessen11"},"content":"    @Override"},{"lineNumber":240,"author":{"gitId":"jessen11"},"content":"    public void start(Stage stage) {"},{"lineNumber":241,"author":{"gitId":"jessen11"},"content":"        //Step 1. Setting up required components"},{"lineNumber":242,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":243,"author":{"gitId":"jessen11"},"content":"        //The container for the content of the chat to scroll."},{"lineNumber":244,"author":{"gitId":"jessen11"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":245,"author":{"gitId":"jessen11"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":246,"author":{"gitId":"jessen11"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":247,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":248,"author":{"gitId":"jessen11"},"content":"        userInput \u003d new TextField();"},{"lineNumber":249,"author":{"gitId":"jessen11"},"content":"        sendButton \u003d new Button(\"Send\");"},{"lineNumber":250,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":251,"author":{"gitId":"jessen11"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":252,"author":{"gitId":"jessen11"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":253,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":254,"author":{"gitId":"jessen11"},"content":"        scene \u003d new Scene(mainLayout);"},{"lineNumber":255,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":256,"author":{"gitId":"jessen11"},"content":"        stage.setScene(scene);"},{"lineNumber":257,"author":{"gitId":"jessen11"},"content":"        stage.show();"},{"lineNumber":258,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":259,"author":{"gitId":"jessen11"},"content":"        //Step 2. Formatting the window to look as expected"},{"lineNumber":260,"author":{"gitId":"jessen11"},"content":"        stage.setTitle(\"Duke\");"},{"lineNumber":261,"author":{"gitId":"jessen11"},"content":"        stage.setResizable(false);"},{"lineNumber":262,"author":{"gitId":"jessen11"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":263,"author":{"gitId":"jessen11"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":264,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":265,"author":{"gitId":"jessen11"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":266,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":267,"author":{"gitId":"jessen11"},"content":"        scrollPane.setPrefSize(385, 535);"},{"lineNumber":268,"author":{"gitId":"jessen11"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":269,"author":{"gitId":"jessen11"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":270,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":271,"author":{"gitId":"jessen11"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":272,"author":{"gitId":"jessen11"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":273,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":274,"author":{"gitId":"jessen11"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":275,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":276,"author":{"gitId":"jessen11"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":277,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":278,"author":{"gitId":"jessen11"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":279,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":280,"author":{"gitId":"jessen11"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":281,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":282,"author":{"gitId":"jessen11"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":283,"author":{"gitId":"jessen11"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":284,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":285,"author":{"gitId":"jessen11"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);"},{"lineNumber":286,"author":{"gitId":"jessen11"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":287,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":288,"author":{"gitId":"jessen11"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":289,"author":{"gitId":"jessen11"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"},{"lineNumber":290,"author":{"gitId":"jessen11"},"content":"            userInput.clear();"},{"lineNumber":291,"author":{"gitId":"jessen11"},"content":"        });"},{"lineNumber":292,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":293,"author":{"gitId":"jessen11"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":294,"author":{"gitId":"jessen11"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"},{"lineNumber":295,"author":{"gitId":"jessen11"},"content":"            userInput.clear();"},{"lineNumber":296,"author":{"gitId":"jessen11"},"content":"        });"},{"lineNumber":297,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":298,"author":{"gitId":"jessen11"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":299,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":300,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":301,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":302,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":303,"author":{"gitId":"jessen11"},"content":"     * Iteration 1:"},{"lineNumber":304,"author":{"gitId":"jessen11"},"content":"     * Creates a label with the specified text and adds it to the dialog container."},{"lineNumber":305,"author":{"gitId":"jessen11"},"content":"     * @param text String containing text to add"},{"lineNumber":306,"author":{"gitId":"jessen11"},"content":"     * @return a label with the specified text that has word wrap enabled."},{"lineNumber":307,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":308,"author":{"gitId":"jessen11"},"content":"    private Label getDialogLabel(String text) {"},{"lineNumber":309,"author":{"gitId":"jessen11"},"content":"        // You will need to import `javafx.scene.control.Label`."},{"lineNumber":310,"author":{"gitId":"jessen11"},"content":"        Label textToAdd \u003d new Label(text);"},{"lineNumber":311,"author":{"gitId":"jessen11"},"content":"        textToAdd.setWrapText(true);"},{"lineNumber":312,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":313,"author":{"gitId":"jessen11"},"content":"        return textToAdd;"},{"lineNumber":314,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":315,"author":{"gitId":"jessen11"},"content":"    public String getResponse(String input) {"},{"lineNumber":316,"author":{"gitId":"jessen11"},"content":"        return \"Duke heard: \" + input;"},{"lineNumber":317,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":318,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":319,"author":{"gitId":"jessen11"},"content":"    public String doCommand(String word){"},{"lineNumber":320,"author":{"gitId":"jessen11"},"content":"        String[] pre \u003d word.split(\"\\\\s+\");"},{"lineNumber":321,"author":{"gitId":"jessen11"},"content":"        String response \u003d \"\";"},{"lineNumber":322,"author":{"gitId":"jessen11"},"content":"        switch (pre[0]) {"},{"lineNumber":323,"author":{"gitId":"jessen11"},"content":"            case \"bye\":"},{"lineNumber":324,"author":{"gitId":"jessen11"},"content":"                return \"Good Bye~~\";"},{"lineNumber":325,"author":{"gitId":"jessen11"},"content":"                case \"list\" :"},{"lineNumber":326,"author":{"gitId":"jessen11"},"content":"                    response \u003d Duke.printTasks(tasklist);"},{"lineNumber":327,"author":{"gitId":"jessen11"},"content":"                    storage.writeTasks(tasklist);"},{"lineNumber":328,"author":{"gitId":"jessen11"},"content":"                    break;"},{"lineNumber":329,"author":{"gitId":"jessen11"},"content":"                case \"done\" :"},{"lineNumber":330,"author":{"gitId":"jessen11"},"content":"                    int n \u003d parseInt(pre[1]) - 1;"},{"lineNumber":331,"author":{"gitId":"jessen11"},"content":"                    response \u003d doneTask(tasklist, n);"},{"lineNumber":332,"author":{"gitId":"jessen11"},"content":"                    storage.writeTasks(tasklist);"},{"lineNumber":333,"author":{"gitId":"jessen11"},"content":"                    break;"},{"lineNumber":334,"author":{"gitId":"jessen11"},"content":"                case \"delete\" :"},{"lineNumber":335,"author":{"gitId":"jessen11"},"content":"                    n \u003d parseInt(pre[1]) - 1;"},{"lineNumber":336,"author":{"gitId":"jessen11"},"content":"                    response \u003d deleteTask(tasklist, n);"},{"lineNumber":337,"author":{"gitId":"jessen11"},"content":"                    storage.writeTasks(tasklist);"},{"lineNumber":338,"author":{"gitId":"jessen11"},"content":"                    break;"},{"lineNumber":339,"author":{"gitId":"jessen11"},"content":"                case \"deadline\" :"},{"lineNumber":340,"author":{"gitId":"jessen11"},"content":"                    response \u003d addDeadline(tasklist, word);"},{"lineNumber":341,"author":{"gitId":"jessen11"},"content":"                    storage.writeTasks(tasklist);"},{"lineNumber":342,"author":{"gitId":"jessen11"},"content":"                    break;"},{"lineNumber":343,"author":{"gitId":"jessen11"},"content":"                case \"event\" :"},{"lineNumber":344,"author":{"gitId":"jessen11"},"content":"                    response \u003d addEvent(tasklist, word);"},{"lineNumber":345,"author":{"gitId":"jessen11"},"content":"                    storage.writeTasks(tasklist);"},{"lineNumber":346,"author":{"gitId":"jessen11"},"content":"                    break;"},{"lineNumber":347,"author":{"gitId":"jessen11"},"content":"                case \"todo\" :"},{"lineNumber":348,"author":{"gitId":"jessen11"},"content":"                    response \u003d addToDo(tasklist, pre);"},{"lineNumber":349,"author":{"gitId":"jessen11"},"content":"                    storage.writeTasks(tasklist);"},{"lineNumber":350,"author":{"gitId":"jessen11"},"content":"                    break;"},{"lineNumber":351,"author":{"gitId":"jessen11"},"content":"                case \"find\" :"},{"lineNumber":352,"author":{"gitId":"jessen11"},"content":"                    response \u003d findTasks(tasklist,pre[1]);"},{"lineNumber":353,"author":{"gitId":"jessen11"},"content":"                    break;"},{"lineNumber":354,"author":{"gitId":"jessen11"},"content":"                default :"},{"lineNumber":355,"author":{"gitId":"jessen11"},"content":"                    response \u003d addError();"},{"lineNumber":356,"author":{"gitId":"jessen11"},"content":"            }"},{"lineNumber":357,"author":{"gitId":"jessen11"},"content":"            return response;"},{"lineNumber":358,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":359,"author":{"gitId":"jessen11"},"content":"    public static String printTasks(TaskList tasks) {"},{"lineNumber":360,"author":{"gitId":"jessen11"},"content":"        String response \u003d \"Here are the tasks in your list:\\n\";"},{"lineNumber":361,"author":{"gitId":"jessen11"},"content":"        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"},{"lineNumber":362,"author":{"gitId":"jessen11"},"content":"            response \u003d response + i + \". \" + tasks.get(i-1) + \"\\n\";"},{"lineNumber":363,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":364,"author":{"gitId":"jessen11"},"content":"        return response;"},{"lineNumber":365,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":366,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":367,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":368,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jessen11":366,"-":2}},{"path":"src/main/java/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"public class EmptyDescriptionException extends Exception{"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"    EmptyDescriptionException(String e){"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"        super(e);"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"}"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":""}],"authorContributionMap":{"jessen11":6}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"public class Event extends Task{"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"    private LocalDate startDate;"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"    private LocalTime startTime;"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"    private LocalDate endDate;"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"    private LocalTime endTime;"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"     * Constructor of Event class."},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"     * @param name name of event."},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"     * @param isDone event status."},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"     * @param startDate date of start event."},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"     * @param startTime time of start event."},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"     * @param endDate date of end event."},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"     * @param endTime time of end event."},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"    Event(String name, Boolean isDone,LocalDate startDate, LocalTime startTime"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"            , LocalDate endDate, LocalTime endTime) {"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"        super(name,isDone);"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"        this.startDate \u003d startDate;"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"        this.endDate \u003d endDate;"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"     * Get the start date."},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"     * @return the start date."},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"    public LocalDate getStartDate() {"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"        return startDate;"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"     * Get the start time."},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"     * @return the start time."},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"    public LocalTime getStartTime() {"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"        return startTime;"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"     * Get the end date."},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"     * @return the end date."},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"    public LocalDate getEndDate() {"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"        return endDate;"},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"     * Get the end time."},{"lineNumber":60,"author":{"gitId":"jessen11"},"content":"     * @return the end time."},{"lineNumber":61,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":63,"author":{"gitId":"jessen11"},"content":"    public LocalTime getEndTime() {"},{"lineNumber":64,"author":{"gitId":"jessen11"},"content":"        return endTime;"},{"lineNumber":65,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":67,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"jessen11"},"content":"     * Mark task as done"},{"lineNumber":69,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"jessen11"},"content":"     * @return new task, marked as done."},{"lineNumber":71,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"jessen11"},"content":"    @Override"},{"lineNumber":73,"author":{"gitId":"jessen11"},"content":"    Event finish() {"},{"lineNumber":74,"author":{"gitId":"jessen11"},"content":"        return new Event(this.getName(), true,this.getStartDate(),this.getStartTime(),"},{"lineNumber":75,"author":{"gitId":"jessen11"},"content":"                this.getEndDate(),this.getEndTime()) ;"},{"lineNumber":76,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"jessen11"},"content":"    @Override"},{"lineNumber":78,"author":{"gitId":"jessen11"},"content":"    public String toString() {"},{"lineNumber":79,"author":{"gitId":"jessen11"},"content":"        if(this.getIsDone()) {"},{"lineNumber":80,"author":{"gitId":"jessen11"},"content":"            return \"[E][X] \" + this.name + \" | \" + this.getStartDate()+ \" \" + this.getStartTime() +"},{"lineNumber":81,"author":{"gitId":"jessen11"},"content":"                    \" ~ \" + this.getEndDate()+ \" \" + this.getEndTime();"},{"lineNumber":82,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"jessen11"},"content":"        else{"},{"lineNumber":84,"author":{"gitId":"jessen11"},"content":"            return \"[E][_] \" + this.name + \" | \" + this.getStartDate()+ \" \" + this.getStartTime() +"},{"lineNumber":85,"author":{"gitId":"jessen11"},"content":"                    \" ~ \" + this.getEndDate()+ \" \" + this.getEndTime();"},{"lineNumber":86,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"jessen11"},"content":"}"},{"lineNumber":89,"author":{"gitId":"jessen11"},"content":""}],"authorContributionMap":{"jessen11":89}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":" */"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"}"}],"authorContributionMap":{"jessen11":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import javafx.scene.Scene;"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":" * A GUI for Duke using FXML."},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":" */"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"public class Main extends Application {"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"    private static String FILE_PATH \u003d \"./data/\";"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"    private static String FILE_NAME \u003d \"data.txt\";"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"    private Duke duke;"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"    public void start(Stage stage) {"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"            duke \u003d new Duke(FILE_PATH, FILE_NAME);"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"        catch (FileNotFoundException e){"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"            System.out.println(\"error\");"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"            stage.setScene(scene);"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"            stage.show();"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"            e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"}"}],"authorContributionMap":{"jessen11":40}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"import javafx.scene.control.Button;"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":" */"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"    @FXML"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"    private VBox dialogContainer;"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"    private TextField userInput;"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"    private Button sendButton;"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"    private Duke duke;"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"    public void initialize() {"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"        duke \u003d d;"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"    @FXML"},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"    private void handleUserInput() {"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"        String response \u003d getResponse(input);"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":"        );"},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"        userInput.clear();"},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"        checkExit(input);"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"    private void checkExit(String input) {"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"            Stage stage \u003d (Stage) scrollPane.getScene().getWindow();"},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":"            stage.close();"},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":61,"author":{"gitId":"jessen11"},"content":"    private String getResponse(String input) {"},{"lineNumber":62,"author":{"gitId":"jessen11"},"content":"        return duke.doCommand(input);"},{"lineNumber":63,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"jessen11"},"content":"}"}],"authorContributionMap":{"jessen11":64}},{"path":"src/main/java/NoTasksException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"public class NoTasksException extends Exception{"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"    NoTasksException(String e){"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"        super(e);"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"}"}],"authorContributionMap":{"jessen11":5}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"import java.time.LocalTime;"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"     * Parse a string to Todo."},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"     * @param string the string."},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"     * @return the todo needed."},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"    public static Todo stringToTodo(String string) {"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"        String desc \u003d \"\";"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"        String[] texts \u003d string.split(\"\\\\s+\");"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"        boolean status \u003d (texts[0].charAt(4) \u003d\u003d \u0027X\u0027);"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"        for (int j \u003d 1; j \u003c texts.length ; j++) {"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"            desc \u003d desc + texts[j] + \" \";"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"        return new Todo(desc,status);"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"     * Parse a string to Deadline."},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"     * @param string the string."},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"     * @return the deadline needed."},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"    public static Deadline stringToDeadline(String string){"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"        String missions \u003d \"\";"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"        String[] time \u003d string.split(\"[|]\");"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"        String[] texts \u003d string.split(\"\\\\s+\");"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"        String content \u003d time[0];"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"        String[] text \u003d content.split(\"\\\\s+\");"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":"        boolean status \u003d (texts[0].charAt(4) \u003d\u003d \u0027X\u0027);"},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"        for (int j \u003d 1; j \u003c text.length ; j++) {"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"            missions \u003d missions + texts[j] + \" \";"},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"        String[] times \u003d time[1].split(\"\\\\s+\");"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"        return new Deadline(missions,status"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"                , LocalDate.parse(times[1], DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"))"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"                , LocalTime.parse(times[2],DateTimeFormatter.ofPattern(\"HH:mm\")));"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"     * Parse a string to Event."},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"     * @param string the string."},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"     * @return the event needed."},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"    public static Event stringToEvent(String string){"},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":"        String missions \u003d \"\";"},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"        String[] time \u003d string.split(\"[|]\");"},{"lineNumber":60,"author":{"gitId":"jessen11"},"content":"        String[] texts \u003d string.split(\"\\\\s+\");"},{"lineNumber":61,"author":{"gitId":"jessen11"},"content":"        String content \u003d time[0];"},{"lineNumber":62,"author":{"gitId":"jessen11"},"content":"        String[] text \u003d content.split(\"\\\\s+\");"},{"lineNumber":63,"author":{"gitId":"jessen11"},"content":"        for (int j \u003d 1; j \u003c text.length ; j++) {"},{"lineNumber":64,"author":{"gitId":"jessen11"},"content":"            missions \u003d missions + texts[j] + \" \";"},{"lineNumber":65,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"jessen11"},"content":"        String[] startEnd \u003d time[1].split(\"[~]\");"},{"lineNumber":67,"author":{"gitId":"jessen11"},"content":"        String[] start \u003d startEnd[0].split(\"\\\\s+\");"},{"lineNumber":68,"author":{"gitId":"jessen11"},"content":"        String[] end \u003d startEnd[1].split(\"\\\\s+\");"},{"lineNumber":69,"author":{"gitId":"jessen11"},"content":"        boolean status \u003d (texts[0].charAt(4) \u003d\u003d \u0027X\u0027);"},{"lineNumber":70,"author":{"gitId":"jessen11"},"content":"        return new Event(missions,status,"},{"lineNumber":71,"author":{"gitId":"jessen11"},"content":"                LocalDate.parse(start[1],DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")),"},{"lineNumber":72,"author":{"gitId":"jessen11"},"content":"                LocalTime.parse(start[2],DateTimeFormatter.ofPattern(\"HH:mm\")),"},{"lineNumber":73,"author":{"gitId":"jessen11"},"content":"                LocalDate.parse(end[1],DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")),"},{"lineNumber":74,"author":{"gitId":"jessen11"},"content":"                LocalTime.parse(end[2],DateTimeFormatter.ofPattern(\"HH:mm\")));"},{"lineNumber":75,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":77,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"jessen11"},"content":"     * Parse input to Todo."},{"lineNumber":79,"author":{"gitId":"jessen11"},"content":"     * @param todo array of strings of input."},{"lineNumber":80,"author":{"gitId":"jessen11"},"content":"     * @return the todo needed."},{"lineNumber":81,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":84,"author":{"gitId":"jessen11"},"content":"    public static Todo parseTodo(String[] todo) {"},{"lineNumber":85,"author":{"gitId":"jessen11"},"content":"        String s \u003d \"\";"},{"lineNumber":86,"author":{"gitId":"jessen11"},"content":"        for (int i \u003d 1; i \u003c todo.length; i++) {"},{"lineNumber":87,"author":{"gitId":"jessen11"},"content":"            s \u003d s + todo[i] + \" \";"},{"lineNumber":88,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"jessen11"},"content":"        return (new Todo(s,false));"},{"lineNumber":90,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":92,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"jessen11"},"content":"     * Parse input to Event."},{"lineNumber":94,"author":{"gitId":"jessen11"},"content":"     * @param event array of strings of input."},{"lineNumber":95,"author":{"gitId":"jessen11"},"content":"     * @return the event needed."},{"lineNumber":96,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":99,"author":{"gitId":"jessen11"},"content":"    public static Event parseEvent(String[] event) {"},{"lineNumber":100,"author":{"gitId":"jessen11"},"content":"        String s \u003d event[0];"},{"lineNumber":101,"author":{"gitId":"jessen11"},"content":"        String[] dates \u003d event[1].split(\"\\\\s+\");"},{"lineNumber":102,"author":{"gitId":"jessen11"},"content":"        LocalDate startDate \u003d LocalDate.parse(dates[1],DateTimeFormatter.ofPattern(\"MM/dd/yyyy\"));"},{"lineNumber":103,"author":{"gitId":"jessen11"},"content":"        LocalTime startTime \u003d LocalTime.parse(dates[2],DateTimeFormatter.ofPattern(\"HH:mm\"));"},{"lineNumber":104,"author":{"gitId":"jessen11"},"content":"        LocalDate endDate \u003d LocalDate.parse(dates[3],DateTimeFormatter.ofPattern(\"MM/dd/yyyy\"));"},{"lineNumber":105,"author":{"gitId":"jessen11"},"content":"        LocalTime endTime \u003d LocalTime.parse(dates[4],DateTimeFormatter.ofPattern(\"HH:mm\"));"},{"lineNumber":106,"author":{"gitId":"jessen11"},"content":"        return new Event(s.substring(6), false, startDate,startTime,endDate,endTime);"},{"lineNumber":107,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":109,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":110,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"jessen11"},"content":"     * Parse input to Deadline."},{"lineNumber":112,"author":{"gitId":"jessen11"},"content":"     * @param deadline array of strings of input."},{"lineNumber":113,"author":{"gitId":"jessen11"},"content":"     * @return the deadline needed."},{"lineNumber":114,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":115,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":117,"author":{"gitId":"jessen11"},"content":"    public static Deadline parseDeadlinne(String[] deadline) {"},{"lineNumber":118,"author":{"gitId":"jessen11"},"content":"        String s \u003d deadline[0];"},{"lineNumber":119,"author":{"gitId":"jessen11"},"content":"        String[] dates \u003d deadline[1].split(\"\\\\s+\");"},{"lineNumber":120,"author":{"gitId":"jessen11"},"content":"        LocalDate deadlineDate \u003d LocalDate.parse(dates[1], DateTimeFormatter.ofPattern(\"MM/dd/yyyy\"));"},{"lineNumber":121,"author":{"gitId":"jessen11"},"content":"        LocalTime deadlineTime \u003d LocalTime.parse(dates[2], DateTimeFormatter.ofPattern(\"HH:mm\"));"},{"lineNumber":122,"author":{"gitId":"jessen11"},"content":"        return new Deadline(s.substring(9), false, deadlineDate,deadlineTime);"},{"lineNumber":123,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"jessen11"},"content":"}"}],"authorContributionMap":{"jessen11":124}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"public class Storage {"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"    private String edit;"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"     * Constructor of storage class."},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"     * @param path path of file."},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"     * @param name name of file."},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"    public Storage(String path, String name) {"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"        path \u003d makeDirectory(path);"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"        edit \u003d path + name;"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"     * Make a directory"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"     * @param path path of file."},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"     * @return directory path"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"    public String makeDirectory(String path) {"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"        File file \u003d new File(path);"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"        file.mkdirs();"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"        if (!file.isDirectory()) {"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"            return \"\";"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"        } else {"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"            return path;"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"     * Write the tasks in the TaskList to the directory."},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"     * @param tasks list of tasks"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"    public void writeTasks(TaskList tasks) {"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"        String s \u003d \"\";"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"        for (Task i : tasks.getList()) {"},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":"            s \u003d s + i.toString() + \"\\n\";"},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"            FileWriter fw \u003d new FileWriter(edit);"},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"            fw.write(s);"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":"            fw.close();"},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"        } catch (IOException e) {"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"jessen11"},"content":"     * Read the file and extract the schedule."},{"lineNumber":61,"author":{"gitId":"jessen11"},"content":"     * @return ArrayList of strings of schedules."},{"lineNumber":62,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":64,"author":{"gitId":"jessen11"},"content":"    public ArrayList\u003cString\u003e readFile() throws FileNotFoundException {"},{"lineNumber":65,"author":{"gitId":"jessen11"},"content":"        try {"},{"lineNumber":66,"author":{"gitId":"jessen11"},"content":"            ArrayList\u003cString\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":67,"author":{"gitId":"jessen11"},"content":"            File f \u003d new File(edit);"},{"lineNumber":68,"author":{"gitId":"jessen11"},"content":"            Scanner s \u003d new Scanner(f);"},{"lineNumber":69,"author":{"gitId":"jessen11"},"content":"            while (s.hasNext()) {"},{"lineNumber":70,"author":{"gitId":"jessen11"},"content":"                tasks.add(s.nextLine());"},{"lineNumber":71,"author":{"gitId":"jessen11"},"content":"            }"},{"lineNumber":72,"author":{"gitId":"jessen11"},"content":"            return tasks;"},{"lineNumber":73,"author":{"gitId":"jessen11"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":74,"author":{"gitId":"jessen11"},"content":"            throw new FileNotFoundException(\"No File\");"},{"lineNumber":75,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"jessen11"},"content":"}"}],"authorContributionMap":{"jessen11":77}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"    private final Boolean isDone;"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"    protected final String name;"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"    protected DateTimeFormatter Date;"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"    protected DateTimeFormatter Time;"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"     * Constructor for tasks"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"     * @param name task name."},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"     * @param isDone task status."},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"    Task(String name,Boolean isDone){"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"        this.name \u003d name;"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"        this.Date \u003d DateTimeFormatter.ofPattern(\"MM/dd/yyyy\");"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"        this.Time \u003d DateTimeFormatter.ofPattern(\"hh:mm\");"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"     * Get the name for the task"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"     * @return the task name."},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"    String getName() {"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"        return this.name;"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"     * Get the status for the task"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"     * @return the task status."},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":"    Boolean getIsDone() {"},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"        return this.isDone;"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":"     * Mark the task as done"},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"     * @return the new task."},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":"    Task finish(){"},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"        return new Task(this.getName(), true) ;"},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":"    public String toString(){"},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"        if(this.isDone){"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":"            return \"[X] \" + this.getName();"},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":"        else{"},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"            return \"[ ] \" + this.getName();"},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"}"}],"authorContributionMap":{"jessen11":59}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"public class TaskList {"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"     * Constructor of TaskList class."},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"     * @param tasks list of tasks"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"    public ArrayList\u003cTask\u003e getList() {"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"        return this.tasks;"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"     * Set a task in taskList."},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"     * @param i target index."},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"     * @param task the task"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"    public void set(int i, Task task) {"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"        this.tasks.set(i,task);"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"     * Look at the i-th task."},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"     * @param i target index."},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"     * @return the task"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"    public Task get(int i) {"},{"lineNumber":35,"author":{"gitId":"jessen11"},"content":"        return tasks.get(i);"},{"lineNumber":36,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":38,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"jessen11"},"content":"     * Add a task."},{"lineNumber":40,"author":{"gitId":"jessen11"},"content":"     * @param task the task"},{"lineNumber":41,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":43,"author":{"gitId":"jessen11"},"content":"    public void add(Task task) {"},{"lineNumber":44,"author":{"gitId":"jessen11"},"content":"        tasks.add(task);"},{"lineNumber":45,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":47,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"jessen11"},"content":"     * Remove a task in the i-th index."},{"lineNumber":49,"author":{"gitId":"jessen11"},"content":"     * @param i target index."},{"lineNumber":50,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":52,"author":{"gitId":"jessen11"},"content":"    public void remove(int i) {"},{"lineNumber":53,"author":{"gitId":"jessen11"},"content":"        tasks.remove(i);"},{"lineNumber":54,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":56,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"jessen11"},"content":"     * Find the number of tasks"},{"lineNumber":58,"author":{"gitId":"jessen11"},"content":"     * @return number of tasks"},{"lineNumber":59,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":61,"author":{"gitId":"jessen11"},"content":"    public int size() {"},{"lineNumber":62,"author":{"gitId":"jessen11"},"content":"        return tasks.size();"},{"lineNumber":63,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":65,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"jessen11"},"content":"     * Filter the tasks that match the keyword"},{"lineNumber":67,"author":{"gitId":"jessen11"},"content":"     * @param keyword the target keyword."},{"lineNumber":68,"author":{"gitId":"jessen11"},"content":"     * @return the TaskList containing all desired tasks."},{"lineNumber":69,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":71,"author":{"gitId":"jessen11"},"content":"    public TaskList find(String keyword) {"},{"lineNumber":72,"author":{"gitId":"jessen11"},"content":"        ArrayList\u003cTask\u003e answer \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":73,"author":{"gitId":"jessen11"},"content":"        for(Task i: this.getList()) {"},{"lineNumber":74,"author":{"gitId":"jessen11"},"content":"            if(i.getName().contains(keyword)) {"},{"lineNumber":75,"author":{"gitId":"jessen11"},"content":"                answer.add(i);"},{"lineNumber":76,"author":{"gitId":"jessen11"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"jessen11"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"jessen11"},"content":"        return new TaskList(answer);"},{"lineNumber":79,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"jessen11"},"content":"}"}],"authorContributionMap":{"jessen11":80}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"public class Todo extends Task{"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"     * Constructor of Todo class."},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"     * @param name name of todo."},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"     * @param isDone event status."},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"     Todo(String name,Boolean isDone) {"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"        super(name, isDone);"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"     }"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"     * Mark task as done"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"     * @return new task, marked as done."},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"     @Override"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"     Todo finish() {"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"         return new Todo(this.getName(), true);"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"     }"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"     @Override"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"     public String toString(){"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"         if(this.getIsDone()){"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"             return \"[T][X] \" + this.getName();"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"         }"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"         else {"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"             return \"[T][_] \" + this.getName();"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"         }"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"     }"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"}"}],"authorContributionMap":{"jessen11":33}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"jessen11":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"jessen11":19}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":""},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"public class DukeTest {"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"    public void parseTodoWorks(){"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"        String todo \u003d \"study \";"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"        String[] test \u003d new String[]{\"todo\", \"study\"};"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"        Todo task \u003d new Todo(todo,false);"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":"        Todo task2 \u003d Parser.parseTodo(test);"},{"lineNumber":14,"author":{"gitId":"jessen11"},"content":"        assertEquals(task.toString(),task2.toString(),\"Wrong format\");"},{"lineNumber":15,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"jessen11"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"jessen11"},"content":"    public void taskListSizeIsCorrect(){"},{"lineNumber":18,"author":{"gitId":"jessen11"},"content":"        ArrayList\u003cTask\u003e test \u003d new ArrayList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"jessen11"},"content":"        test.add(new Todo(\"task 1\",false));"},{"lineNumber":20,"author":{"gitId":"jessen11"},"content":"        test.add(new Todo(\"task 2\",false));"},{"lineNumber":21,"author":{"gitId":"jessen11"},"content":"        test.add(new Todo(\"task 3\",true));"},{"lineNumber":22,"author":{"gitId":"jessen11"},"content":"        TaskList list \u003d new TaskList(test);"},{"lineNumber":23,"author":{"gitId":"jessen11"},"content":"        assertEquals(3,list.size(),\"Wrong Answer\");"},{"lineNumber":24,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"jessen11"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"jessen11"},"content":"    public void taskListGetIsCorrect(){"},{"lineNumber":27,"author":{"gitId":"jessen11"},"content":"        ArrayList\u003cTask\u003e test \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"jessen11"},"content":"        test.add(new Todo(\"task 1\",false));"},{"lineNumber":29,"author":{"gitId":"jessen11"},"content":"        test.add(new Todo(\"task 2\",false));"},{"lineNumber":30,"author":{"gitId":"jessen11"},"content":"        test.add(new Todo(\"task 3\",true));"},{"lineNumber":31,"author":{"gitId":"jessen11"},"content":"        TaskList list \u003d new TaskList(test);"},{"lineNumber":32,"author":{"gitId":"jessen11"},"content":"        assertEquals(\"[T][X] task 3\",list.get(2).toString(),\"Wrong Answer\");"},{"lineNumber":33,"author":{"gitId":"jessen11"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"jessen11"},"content":"}"}],"authorContributionMap":{"jessen11":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jessen11"},"content":"todo finish duke level 5"},{"lineNumber":2,"author":{"gitId":"jessen11"},"content":"todo learn chess"},{"lineNumber":3,"author":{"gitId":"jessen11"},"content":"list"},{"lineNumber":4,"author":{"gitId":"jessen11"},"content":"deadline ma1101r homework /by tommorow"},{"lineNumber":5,"author":{"gitId":"jessen11"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"jessen11"},"content":"deadline ma1100 tutorial /by today"},{"lineNumber":7,"author":{"gitId":"jessen11"},"content":"list"},{"lineNumber":8,"author":{"gitId":"jessen11"},"content":"event dinner date /at satuday 7pm - 9pm"},{"lineNumber":9,"author":{"gitId":"jessen11"},"content":"list"},{"lineNumber":10,"author":{"gitId":"jessen11"},"content":"done 3"},{"lineNumber":11,"author":{"gitId":"jessen11"},"content":"list"},{"lineNumber":12,"author":{"gitId":"jessen11"},"content":"bye"},{"lineNumber":13,"author":{"gitId":"jessen11"},"content":""}],"authorContributionMap":{"jessen11":13}}]
