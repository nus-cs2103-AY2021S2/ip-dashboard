[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"ming-00"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"ming-00":1,"-":22}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":" * This class extends the Task class and is used to"},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":" * represent a single item with a deadline that users can add to their list."},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":" */"},{"lineNumber":5,"author":{"gitId":"ming-00"},"content":"public class Deadline extends Task {"},{"lineNumber":6,"author":{"gitId":"ming-00"},"content":"    protected String by;"},{"lineNumber":7,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":8,"author":{"gitId":"ming-00"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":9,"author":{"gitId":"ming-00"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"ming-00"},"content":"        this.by \u003d by;"},{"lineNumber":11,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":13,"author":{"gitId":"ming-00"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"ming-00"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"ming-00"},"content":"        return \"[D] \" + super.toString() + \" (\" + by + \")\";"},{"lineNumber":16,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ming-00"},"content":"}"}],"authorContributionMap":{"ming-00":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":5,"author":{"gitId":"ming-00"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"ming-00"},"content":" * Duke is a personal assistant chat bot that helps users to"},{"lineNumber":7,"author":{"gitId":"ming-00"},"content":" * keep track of various things."},{"lineNumber":8,"author":{"gitId":"ming-00"},"content":" * @author Damith C. Rajapakse, Wu Weiming"},{"lineNumber":9,"author":{"gitId":"ming-00"},"content":" */"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":11,"author":{"gitId":"ming-00"},"content":"    private static final String EXIT_COMMAND \u003d \"bye\";"},{"lineNumber":12,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":13,"author":{"gitId":"ming-00"},"content":"    List\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();"},{"lineNumber":14,"author":{"gitId":"ming-00"},"content":"    Tasks tasks \u003d new Tasks();"},{"lineNumber":15,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":17,"author":{"gitId":"ming-00"},"content":"        Duke e \u003d new Duke();"},{"lineNumber":18,"author":{"gitId":"ming-00"},"content":"        e.run();"},{"lineNumber":19,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":21,"author":{"gitId":"ming-00"},"content":"    public void run() {"},{"lineNumber":22,"author":{"gitId":"ming-00"},"content":"        printHello();"},{"lineNumber":23,"author":{"gitId":"ming-00"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":24,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":25,"author":{"gitId":"ming-00"},"content":"        while (true) {"},{"lineNumber":26,"author":{"gitId":"ming-00"},"content":"            String input \u003d sc.nextLine();"},{"lineNumber":27,"author":{"gitId":"ming-00"},"content":"            if (input.equals(EXIT_COMMAND)) {"},{"lineNumber":28,"author":{"gitId":"ming-00"},"content":"                // close program"},{"lineNumber":29,"author":{"gitId":"ming-00"},"content":"                formatText();"},{"lineNumber":30,"author":{"gitId":"ming-00"},"content":"                System.out.println(\"Bye, see you soon! Don\u0027t miss me too much.\");"},{"lineNumber":31,"author":{"gitId":"ming-00"},"content":"                formatText();"},{"lineNumber":32,"author":{"gitId":"ming-00"},"content":"                break;"},{"lineNumber":33,"author":{"gitId":"ming-00"},"content":"            } else if (input.equals(\"list\")) {"},{"lineNumber":34,"author":{"gitId":"ming-00"},"content":"                // show everything in the list"},{"lineNumber":35,"author":{"gitId":"ming-00"},"content":"                formatText();"},{"lineNumber":36,"author":{"gitId":"ming-00"},"content":"                tasks.iterateList();"},{"lineNumber":37,"author":{"gitId":"ming-00"},"content":"                formatText();"},{"lineNumber":38,"author":{"gitId":"ming-00"},"content":"            } else if (input.split(\" \", 2)[0].equals(\"done\")) {"},{"lineNumber":39,"author":{"gitId":"ming-00"},"content":"                // mark task with the given index as completed"},{"lineNumber":40,"author":{"gitId":"ming-00"},"content":"                tasks.markAsDone(input.split(\" \", 2)[1]);"},{"lineNumber":41,"author":{"gitId":"ming-00"},"content":"            } else if (input.split(\" \", 2)[0].equals(\"delete\")) {"},{"lineNumber":42,"author":{"gitId":"ming-00"},"content":"                tasks.deleteTask(input.split(\" \", 2)[1]);"},{"lineNumber":43,"author":{"gitId":"ming-00"},"content":"            } else {"},{"lineNumber":44,"author":{"gitId":"ming-00"},"content":"                // add new task to list"},{"lineNumber":45,"author":{"gitId":"ming-00"},"content":"                tasks.addTask(input);"},{"lineNumber":46,"author":{"gitId":"ming-00"},"content":"                // need to handle when ppl never put /by or /at"},{"lineNumber":47,"author":{"gitId":"ming-00"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"ming-00"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"ming-00"},"content":"        sc.close();"},{"lineNumber":50,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":52,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"ming-00"},"content":"     * Prints a horizontal line to format text."},{"lineNumber":54,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"ming-00"},"content":"    public static void formatText() {"},{"lineNumber":56,"author":{"gitId":"ming-00"},"content":"        System.out.println(\"******************************************************\");"},{"lineNumber":57,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":59,"author":{"gitId":"ming-00"},"content":"    public void printHello() {"},{"lineNumber":60,"author":{"gitId":"ming-00"},"content":"        String logo \u003d \".------..------..------..------.\\n\""},{"lineNumber":61,"author":{"gitId":"ming-00"},"content":"                + \"|D.--. ||U.--. ||K.--. ||E.--. |\\n\""},{"lineNumber":62,"author":{"gitId":"ming-00"},"content":"                + \"| :/\\\\: || (\\\\/) || :/\\\\: || (\\\\/) |\\n\""},{"lineNumber":63,"author":{"gitId":"ming-00"},"content":"                + \"| (__) || :\\\\/: || :\\\\/: || :\\\\/: |\\n\""},{"lineNumber":64,"author":{"gitId":"ming-00"},"content":"                + \"| \u0027--\u0027D|| \u0027--\u0027U|| \u0027--\u0027K|| \u0027--\u0027E|\\n\""},{"lineNumber":65,"author":{"gitId":"ming-00"},"content":"                + \"`------\u0027`------\u0027`------\u0027`------\u0027\";"},{"lineNumber":66,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":67,"author":{"gitId":"ming-00"},"content":"        System.out.println(\"Hello, this is\\n\" + logo);"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ming-00":65,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":"}"}],"authorContributionMap":{"ming-00":2}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":" * This Event class extends the Task class and is used to"},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":" * represent a single event that users can add to their list."},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":" */"},{"lineNumber":5,"author":{"gitId":"ming-00"},"content":"public class Event extends Task {"},{"lineNumber":6,"author":{"gitId":"ming-00"},"content":"    protected String at;"},{"lineNumber":7,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":8,"author":{"gitId":"ming-00"},"content":"    public Event(String description, String at) {"},{"lineNumber":9,"author":{"gitId":"ming-00"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"ming-00"},"content":"        this.at \u003d at;"},{"lineNumber":11,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":13,"author":{"gitId":"ming-00"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"ming-00"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"ming-00"},"content":"        return \"[E] \" + super.toString() + \" (\" + at + \")\";"},{"lineNumber":16,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ming-00"},"content":"}"}],"authorContributionMap":{"ming-00":17}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":" * This class represents a task that can be created"},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":" * through user command."},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":" */"},{"lineNumber":5,"author":{"gitId":"ming-00"},"content":"public class Task {"},{"lineNumber":6,"author":{"gitId":"ming-00"},"content":"    protected String description;"},{"lineNumber":7,"author":{"gitId":"ming-00"},"content":"    protected boolean isDone;"},{"lineNumber":8,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":9,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"ming-00"},"content":"     * Constructs a Task object."},{"lineNumber":11,"author":{"gitId":"ming-00"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"ming-00"},"content":"     * @param description information on task to be done."},{"lineNumber":13,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"ming-00"},"content":"    public Task(String description) {"},{"lineNumber":15,"author":{"gitId":"ming-00"},"content":"        this.description \u003d description;"},{"lineNumber":16,"author":{"gitId":"ming-00"},"content":"        this.isDone \u003d false;"},{"lineNumber":17,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":19,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"ming-00"},"content":"     * Checks task completion status and returns formatted status icon."},{"lineNumber":21,"author":{"gitId":"ming-00"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"ming-00"},"content":"     * @return formatted status icon."},{"lineNumber":23,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"ming-00"},"content":"    public String getStatusIcon() {"},{"lineNumber":25,"author":{"gitId":"ming-00"},"content":"        return (isDone ? \"[X] \" : \"[ ] \"); //return tick or X symbols"},{"lineNumber":26,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":28,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"ming-00"},"content":"     * Marks a task as completed."},{"lineNumber":30,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"ming-00"},"content":"    public void markAsDone() {"},{"lineNumber":32,"author":{"gitId":"ming-00"},"content":"        this.isDone \u003d true;"},{"lineNumber":33,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":35,"author":{"gitId":"ming-00"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"ming-00"},"content":"    public String toString() {"},{"lineNumber":37,"author":{"gitId":"ming-00"},"content":"        return this.getStatusIcon() + this.description;"},{"lineNumber":38,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"ming-00"},"content":"}"}],"authorContributionMap":{"ming-00":39}},{"path":"src/main/java/Tasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"ming-00"},"content":" * Class to handle all the tasks."},{"lineNumber":6,"author":{"gitId":"ming-00"},"content":" */"},{"lineNumber":7,"author":{"gitId":"ming-00"},"content":"public class Tasks {"},{"lineNumber":8,"author":{"gitId":"ming-00"},"content":"    private static final String ADD_TODO_COMMAND \u003d \"todo\";"},{"lineNumber":9,"author":{"gitId":"ming-00"},"content":"    private static final String ADD_DEADLINE_COMMAND \u003d \"deadline\";"},{"lineNumber":10,"author":{"gitId":"ming-00"},"content":"    private static final String ADD_EVENT_COMMAND \u003d \"event\";"},{"lineNumber":11,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":12,"author":{"gitId":"ming-00"},"content":"    List\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":14,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"ming-00"},"content":"     * Iterates and returns enumerated list of tasks."},{"lineNumber":16,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"ming-00"},"content":"    public void iterateList() {"},{"lineNumber":18,"author":{"gitId":"ming-00"},"content":"        System.out.println(\"Here are the items in your list:\");"},{"lineNumber":19,"author":{"gitId":"ming-00"},"content":"        int i \u003d 1;"},{"lineNumber":20,"author":{"gitId":"ming-00"},"content":"        for (Task item : lst) {"},{"lineNumber":21,"author":{"gitId":"ming-00"},"content":"            System.out.println(i + \". \" + item.toString());"},{"lineNumber":22,"author":{"gitId":"ming-00"},"content":"            i++;"},{"lineNumber":23,"author":{"gitId":"ming-00"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"ming-00"},"content":"    };"},{"lineNumber":25,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":26,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"ming-00"},"content":"     * Checks for task in the given index and marks it as completed if valid."},{"lineNumber":28,"author":{"gitId":"ming-00"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"ming-00"},"content":"     * @param str task number given one-based indexing"},{"lineNumber":30,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"ming-00"},"content":"    public void markAsDone(String str) {"},{"lineNumber":32,"author":{"gitId":"ming-00"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"ming-00"},"content":"            int index \u003d Integer.parseInt(str) - 1;"},{"lineNumber":34,"author":{"gitId":"ming-00"},"content":"            Task task \u003d lst.get(index);"},{"lineNumber":35,"author":{"gitId":"ming-00"},"content":"            task.markAsDone();"},{"lineNumber":36,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":37,"author":{"gitId":"ming-00"},"content":"            Duke.formatText();"},{"lineNumber":38,"author":{"gitId":"ming-00"},"content":"            System.out.println(\"Sweet! I have marked the following task as done:\\n\""},{"lineNumber":39,"author":{"gitId":"ming-00"},"content":"                    + task.toString());"},{"lineNumber":40,"author":{"gitId":"ming-00"},"content":"            Duke.formatText();"},{"lineNumber":41,"author":{"gitId":"ming-00"},"content":"        } catch (final NumberFormatException e) {"},{"lineNumber":42,"author":{"gitId":"ming-00"},"content":"            System.err.println(\"Oof, did you type a valid number or not?\");"},{"lineNumber":43,"author":{"gitId":"ming-00"},"content":"        } catch (IndexOutOfBoundsException exception) {"},{"lineNumber":44,"author":{"gitId":"ming-00"},"content":"            System.err.println(\"You don\u0027t have so many items, dumbass!\");"},{"lineNumber":45,"author":{"gitId":"ming-00"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":48,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"ming-00"},"content":"     * Adds task to list of tasks if it is a valid input."},{"lineNumber":50,"author":{"gitId":"ming-00"},"content":"     * @param input user input in command line"},{"lineNumber":51,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"ming-00"},"content":"    public void addTask(String input) {"},{"lineNumber":53,"author":{"gitId":"ming-00"},"content":"        String[] split \u003d input.split(\" \",2);"},{"lineNumber":54,"author":{"gitId":"ming-00"},"content":"        String command \u003d split[0];"},{"lineNumber":55,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":56,"author":{"gitId":"ming-00"},"content":"        Duke.formatText();"},{"lineNumber":57,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":58,"author":{"gitId":"ming-00"},"content":"        if (!command.equals(ADD_TODO_COMMAND) \u0026\u0026 !command.equals(ADD_DEADLINE_COMMAND)"},{"lineNumber":59,"author":{"gitId":"ming-00"},"content":"                \u0026\u0026 !command.equals(ADD_EVENT_COMMAND)) {"},{"lineNumber":60,"author":{"gitId":"ming-00"},"content":"            // error: unknown command"},{"lineNumber":61,"author":{"gitId":"ming-00"},"content":"            System.out.println(\"Hey! What is this gibberish?\");"},{"lineNumber":62,"author":{"gitId":"ming-00"},"content":"        } else if (split.length \u003c 2) {"},{"lineNumber":63,"author":{"gitId":"ming-00"},"content":"            // error: command empty"},{"lineNumber":64,"author":{"gitId":"ming-00"},"content":"            System.out.println(\"You gotta give me a description to work with, buddy:\\nCommand \\\"\""},{"lineNumber":65,"author":{"gitId":"ming-00"},"content":"                    + command + \"\\\" cannot be empty.\");"},{"lineNumber":66,"author":{"gitId":"ming-00"},"content":"        } else if (command.equals(\"todo\")) {"},{"lineNumber":67,"author":{"gitId":"ming-00"},"content":"            Todo todo \u003d new Todo(split[1]);"},{"lineNumber":68,"author":{"gitId":"ming-00"},"content":"            lst.add(todo);"},{"lineNumber":69,"author":{"gitId":"ming-00"},"content":"            System.out.println(\"You got it! I added this task:\\n   \""},{"lineNumber":70,"author":{"gitId":"ming-00"},"content":"                    + todo.toString());"},{"lineNumber":71,"author":{"gitId":"ming-00"},"content":"            countTasks();"},{"lineNumber":72,"author":{"gitId":"ming-00"},"content":"        } else {"},{"lineNumber":73,"author":{"gitId":"ming-00"},"content":"            String[] separateDetails \u003d split[1].split(\"/\");"},{"lineNumber":74,"author":{"gitId":"ming-00"},"content":"            String description \u003d separateDetails[0];"},{"lineNumber":75,"author":{"gitId":"ming-00"},"content":"            String date \u003d separateDetails[1];"},{"lineNumber":76,"author":{"gitId":"ming-00"},"content":"            if (command.equals(ADD_DEADLINE_COMMAND)) {"},{"lineNumber":77,"author":{"gitId":"ming-00"},"content":"                Deadline deadline \u003d new Deadline(description, date);"},{"lineNumber":78,"author":{"gitId":"ming-00"},"content":"                lst.add(deadline);"},{"lineNumber":79,"author":{"gitId":"ming-00"},"content":"                System.out.println(\"You got it! I added this task:\\n   \""},{"lineNumber":80,"author":{"gitId":"ming-00"},"content":"                        + deadline.toString());"},{"lineNumber":81,"author":{"gitId":"ming-00"},"content":"            } else {"},{"lineNumber":82,"author":{"gitId":"ming-00"},"content":"                // command is ADD_EVENT_COMMAND"},{"lineNumber":83,"author":{"gitId":"ming-00"},"content":"                Event event \u003d new Event(description, date);"},{"lineNumber":84,"author":{"gitId":"ming-00"},"content":"                lst.add(event);"},{"lineNumber":85,"author":{"gitId":"ming-00"},"content":"                System.out.println(\"You got it! I added this task:\\n   \""},{"lineNumber":86,"author":{"gitId":"ming-00"},"content":"                        + event.toString());"},{"lineNumber":87,"author":{"gitId":"ming-00"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"ming-00"},"content":"            countTasks();"},{"lineNumber":89,"author":{"gitId":"ming-00"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"ming-00"},"content":"        Duke.formatText();"},{"lineNumber":91,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":93,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"ming-00"},"content":"     * Deletes task from list of tasks."},{"lineNumber":95,"author":{"gitId":"ming-00"},"content":"     * @param str task number given one-based indexing"},{"lineNumber":96,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"ming-00"},"content":"    public void deleteTask(String str) {"},{"lineNumber":98,"author":{"gitId":"ming-00"},"content":"        try {"},{"lineNumber":99,"author":{"gitId":"ming-00"},"content":"            int index \u003d Integer.parseInt(str) - 1;"},{"lineNumber":100,"author":{"gitId":"ming-00"},"content":"            Task task \u003d lst.get(index);"},{"lineNumber":101,"author":{"gitId":"ming-00"},"content":"            lst.remove(index);"},{"lineNumber":102,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":103,"author":{"gitId":"ming-00"},"content":"            Duke.formatText();"},{"lineNumber":104,"author":{"gitId":"ming-00"},"content":"            System.out.println(\"Sweet! I have deleted the following task:\\n\""},{"lineNumber":105,"author":{"gitId":"ming-00"},"content":"                    + task.toString());"},{"lineNumber":106,"author":{"gitId":"ming-00"},"content":"            countTasks();"},{"lineNumber":107,"author":{"gitId":"ming-00"},"content":"            Duke.formatText();"},{"lineNumber":108,"author":{"gitId":"ming-00"},"content":"        } catch (final NumberFormatException e) {"},{"lineNumber":109,"author":{"gitId":"ming-00"},"content":"            System.err.println(\"Oof, did you type a valid number or not?\");"},{"lineNumber":110,"author":{"gitId":"ming-00"},"content":"        } catch (IndexOutOfBoundsException exception) {"},{"lineNumber":111,"author":{"gitId":"ming-00"},"content":"            System.err.println(\"You don\u0027t have so many items, dumbass!\");"},{"lineNumber":112,"author":{"gitId":"ming-00"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":115,"author":{"gitId":"ming-00"},"content":"    public void countTasks() {"},{"lineNumber":116,"author":{"gitId":"ming-00"},"content":"        System.out.println(\"Now you have \" + lst.size() + \" tasks.\");"},{"lineNumber":117,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"ming-00"},"content":"}"}],"authorContributionMap":{"ming-00":118}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":" * This class extends the Task class and is used to"},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":" * represent a single item that users can add to their list."},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":" */"},{"lineNumber":5,"author":{"gitId":"ming-00"},"content":"public class Todo extends Task {"},{"lineNumber":6,"author":{"gitId":"ming-00"},"content":"    public Todo(String description) {"},{"lineNumber":7,"author":{"gitId":"ming-00"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":10,"author":{"gitId":"ming-00"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"ming-00"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"ming-00"},"content":"        return \"[T] \" + super.toString();"},{"lineNumber":13,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"ming-00"},"content":"}"}],"authorContributionMap":{"ming-00":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"todo buy milk"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":"deadline do essay /by tomorrow"},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":"event go party /at Thursday evening"},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":"done 1"},{"lineNumber":5,"author":{"gitId":"ming-00"},"content":"list"},{"lineNumber":6,"author":{"gitId":"ming-00"},"content":"todo"},{"lineNumber":7,"author":{"gitId":"ming-00"},"content":"bye"}],"authorContributionMap":{"ming-00":7}}]
