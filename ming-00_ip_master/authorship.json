[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"# Duke"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":"Duke is a Personal Assistant Chatbot that helps to keep track of various things."},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":5,"author":{"gitId":"ming-00"},"content":"# Setting up"},{"lineNumber":6,"author":{"gitId":"ming-00"},"content":"Prerequisites:"},{"lineNumber":7,"author":{"gitId":"ming-00"},"content":"* JDK 11"},{"lineNumber":8,"author":{"gitId":"ming-00"},"content":"* Fork this repo and clone it to your computer!"},{"lineNumber":9,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":10,"author":{"gitId":"ming-00"},"content":"Alternatively, check out Duke by downloading the latest jar "},{"lineNumber":11,"author":{"gitId":"ming-00"},"content":"release and run java -jar v0.2.jar on your terminal in the same directory."},{"lineNumber":12,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":13,"author":{"gitId":"ming-00"},"content":"# User Guide"},{"lineNumber":14,"author":{"gitId":"ming-00"},"content":"## Functionality"},{"lineNumber":15,"author":{"gitId":"ming-00"},"content":"* Adding and deleting tasks: todos/ deadlines/ events"},{"lineNumber":16,"author":{"gitId":"ming-00"},"content":"* Updating task description and information"},{"lineNumber":17,"author":{"gitId":"ming-00"},"content":"* Marking task as completed"},{"lineNumber":18,"author":{"gitId":"ming-00"},"content":"* Search for tasks"},{"lineNumber":19,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":20,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":21,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":22,"author":{"gitId":"ming-00"},"content":"## Commands"},{"lineNumber":23,"author":{"gitId":"ming-00"},"content":"**`help` - Returns list of main commands**  "},{"lineNumber":24,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":25,"author":{"gitId":"ming-00"},"content":"**`todo` - Adds a todo task**"},{"lineNumber":26,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":27,"author":{"gitId":"ming-00"},"content":"Format: todo TODO DESCRIPTION"},{"lineNumber":28,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":29,"author":{"gitId":"ming-00"},"content":"Example: todo water the plants  "},{"lineNumber":30,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":31,"author":{"gitId":"ming-00"},"content":"**`event` - Adds an event task**"},{"lineNumber":32,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":33,"author":{"gitId":"ming-00"},"content":"Format: event EVENT DESCRIPTION /at YYYY-MM-DD"},{"lineNumber":34,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":35,"author":{"gitId":"ming-00"},"content":"Example: event baby shower /at 2020-02-01  "},{"lineNumber":36,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":37,"author":{"gitId":"ming-00"},"content":"**`deadline` - Adds a deadline task**"},{"lineNumber":38,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":39,"author":{"gitId":"ming-00"},"content":"Format: deadline DEADLINE DESCRIPTION /by YYYY-MM-DD"},{"lineNumber":40,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":41,"author":{"gitId":"ming-00"},"content":"Example: deadline homework /by 2020-02-01  "},{"lineNumber":42,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":43,"author":{"gitId":"ming-00"},"content":"**`delete` - Deletes a task permanently**"},{"lineNumber":44,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":45,"author":{"gitId":"ming-00"},"content":"Format: delete TASK NUMBER"},{"lineNumber":46,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":47,"author":{"gitId":"ming-00"},"content":"Example: delete 2  "},{"lineNumber":48,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":49,"author":{"gitId":"ming-00"},"content":"**`list` - Returns the list of all tasks**"},{"lineNumber":50,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":51,"author":{"gitId":"ming-00"},"content":"**`done` - Marks a task as complete**"},{"lineNumber":52,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":53,"author":{"gitId":"ming-00"},"content":"Format: done TASK NUMBER"},{"lineNumber":54,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":55,"author":{"gitId":"ming-00"},"content":"Example: done 1  "},{"lineNumber":56,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":57,"author":{"gitId":"ming-00"},"content":"**`find` - Looks for a task from the provided description**"},{"lineNumber":58,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":59,"author":{"gitId":"ming-00"},"content":"Format: find DESCRIPTION"},{"lineNumber":60,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":61,"author":{"gitId":"ming-00"},"content":"Example: find baby shower  "},{"lineNumber":62,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":63,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":64,"author":{"gitId":"ming-00"},"content":""}],"authorContributionMap":{"ming-00":64}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":31,"author":{"gitId":"ming-00"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":32,"author":{"gitId":"-"},"content":"}"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}"},{"lineNumber":42,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":43,"author":{"gitId":"ming-00"},"content":"repositories {"},{"lineNumber":44,"author":{"gitId":"ming-00"},"content":"    mavenCentral()"},{"lineNumber":45,"author":{"gitId":"ming-00"},"content":"}"},{"lineNumber":46,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":47,"author":{"gitId":"ming-00"},"content":"dependencies {"},{"lineNumber":48,"author":{"gitId":"ming-00"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":49,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":50,"author":{"gitId":"ming-00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":51,"author":{"gitId":"ming-00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":52,"author":{"gitId":"ming-00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":53,"author":{"gitId":"ming-00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":54,"author":{"gitId":"ming-00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":55,"author":{"gitId":"ming-00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":56,"author":{"gitId":"ming-00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":57,"author":{"gitId":"ming-00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":58,"author":{"gitId":"ming-00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":59,"author":{"gitId":"ming-00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":60,"author":{"gitId":"ming-00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":61,"author":{"gitId":"ming-00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":62,"author":{"gitId":"ming-00"},"content":"}"}],"authorContributionMap":{"ming-00":22,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"Duke is a Personal Assistant Chatbot that helps to keep track of various things."},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":"## Setting up"},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":"Prerequisites:"},{"lineNumber":5,"author":{"gitId":"ming-00"},"content":"* JDK 11"},{"lineNumber":6,"author":{"gitId":"ming-00"},"content":"* Fork this repo and clone it to your computer!"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"ming-00"},"content":"Alternatively, check out Duke by downloading the latest jar "},{"lineNumber":9,"author":{"gitId":"ming-00"},"content":"release and run java -jar v0.2.jar on your terminal in the same directory."},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"ming-00"},"content":"## User Guide"},{"lineNumber":12,"author":{"gitId":"ming-00"},"content":"# Functionality"},{"lineNumber":13,"author":{"gitId":"ming-00"},"content":"* Adding and deleting tasks: todos/ deadlines/ events"},{"lineNumber":14,"author":{"gitId":"ming-00"},"content":"* Updating task description and information"},{"lineNumber":15,"author":{"gitId":"ming-00"},"content":"* Marking task as completed"},{"lineNumber":16,"author":{"gitId":"ming-00"},"content":"* Search for tasks"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"ming-00"},"content":"# Commands"},{"lineNumber":19,"author":{"gitId":"ming-00"},"content":"**`help` - Returns list of main commands**"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"ming-00"},"content":"**`todo` - Adds a todo task**"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"ming-00"},"content":"Format: todo TODO DESCRIPTION"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"ming-00"},"content":"Example: todo water the plants"},{"lineNumber":26,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":27,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":28,"author":{"gitId":"ming-00"},"content":"**`event` - Adds an event task**"},{"lineNumber":29,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":30,"author":{"gitId":"ming-00"},"content":"Format: event EVENT DESCRIPTION /at YYYY-MM-DD"},{"lineNumber":31,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":32,"author":{"gitId":"ming-00"},"content":"Example: event baby shower /at 2020-02-01"},{"lineNumber":33,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":34,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":35,"author":{"gitId":"ming-00"},"content":"**`deadline` - Adds a deadline task**"},{"lineNumber":36,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":37,"author":{"gitId":"ming-00"},"content":"Format: deadline DEADLINE DESCRIPTION /by YYYY-MM-DD"},{"lineNumber":38,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":39,"author":{"gitId":"ming-00"},"content":"Example: deadline homework /by 2020-02-01"},{"lineNumber":40,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":41,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":42,"author":{"gitId":"ming-00"},"content":"**`delete` - Deletes a task permanently**"},{"lineNumber":43,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":44,"author":{"gitId":"ming-00"},"content":"Format: delete TASK NUMBER"},{"lineNumber":45,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":46,"author":{"gitId":"ming-00"},"content":"Example: delete 2"},{"lineNumber":47,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":48,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":49,"author":{"gitId":"ming-00"},"content":"**`list` - Returns the list of all tasks**"},{"lineNumber":50,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":51,"author":{"gitId":"ming-00"},"content":"**`done` - Marks a task as complete**"},{"lineNumber":52,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":53,"author":{"gitId":"ming-00"},"content":"Format: done TASK NUMBER"},{"lineNumber":54,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":55,"author":{"gitId":"ming-00"},"content":"Example: done 1"},{"lineNumber":56,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":57,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":58,"author":{"gitId":"ming-00"},"content":"**`find` - Looks for a task from the provided description**"},{"lineNumber":59,"author":{"gitId":"ming-00"},"content":"Format: find DESCRIPTION"},{"lineNumber":60,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":61,"author":{"gitId":"ming-00"},"content":"Example: find baby shower"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"ming-00":54,"-":9}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"Todo`true`water the plants"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":"Deadline`true`cs2103 assignment `2021-02-17"},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":"Event`false`cry `2021-02-18"},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":"Todo`true`pick up my kids"}],"authorContributionMap":{"ming-00":4}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":"import java.time.format.FormatStyle;"},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":5,"author":{"gitId":"ming-00"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"ming-00"},"content":" * This class extends the Task class and is used to"},{"lineNumber":7,"author":{"gitId":"ming-00"},"content":" * represent a single item with a deadline that users can add to their list."},{"lineNumber":8,"author":{"gitId":"ming-00"},"content":" */"},{"lineNumber":9,"author":{"gitId":"ming-00"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"ming-00"},"content":"    protected LocalDate by;"},{"lineNumber":11,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":12,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"ming-00"},"content":"     * Overloaded constructor for Deadline class."},{"lineNumber":14,"author":{"gitId":"ming-00"},"content":"     * @param description description of task."},{"lineNumber":15,"author":{"gitId":"ming-00"},"content":"     * @param by deadline of task with deadline."},{"lineNumber":16,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"ming-00"},"content":"    public Deadline(String description, LocalDate by) {"},{"lineNumber":18,"author":{"gitId":"ming-00"},"content":"        super(description);"},{"lineNumber":19,"author":{"gitId":"ming-00"},"content":"        this.by \u003d by;"},{"lineNumber":20,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":22,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"ming-00"},"content":"     * Overloaded constructor for Deadline class."},{"lineNumber":24,"author":{"gitId":"ming-00"},"content":"     * @param isDone whether the task is already marked off as done."},{"lineNumber":25,"author":{"gitId":"ming-00"},"content":"     * @param description description of task."},{"lineNumber":26,"author":{"gitId":"ming-00"},"content":"     * @param by deadline of task with deadline."},{"lineNumber":27,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"ming-00"},"content":"    public Deadline(boolean isDone, String description, LocalDate by) {"},{"lineNumber":29,"author":{"gitId":"ming-00"},"content":"        super(description, isDone);"},{"lineNumber":30,"author":{"gitId":"ming-00"},"content":"        this.by \u003d by;"},{"lineNumber":31,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":33,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"ming-00"},"content":"     * Generates description to be saved in file for later retrieval."},{"lineNumber":35,"author":{"gitId":"ming-00"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"ming-00"},"content":"     * @return record of event to be saved in file."},{"lineNumber":37,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"ming-00"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"ming-00"},"content":"    public String getDescription() {"},{"lineNumber":40,"author":{"gitId":"ming-00"},"content":"        return \"Deadline`\" + this.isDone + \"`\" + this.description + \"`\" + this.by;"},{"lineNumber":41,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":43,"author":{"gitId":"ming-00"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"ming-00"},"content":"    public String toString() {"},{"lineNumber":45,"author":{"gitId":"ming-00"},"content":"        return \"[D] \" + super.toString() + \" (by: \""},{"lineNumber":46,"author":{"gitId":"ming-00"},"content":"                + by.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG)) + \")\";"},{"lineNumber":47,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"ming-00"},"content":"}"}],"authorContributionMap":{"ming-00":48}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"ming-00"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"ming-00"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"ming-00"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"ming-00"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"ming-00"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"ming-00"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"ming-00"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"ming-00"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"ming-00"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":15,"author":{"gitId":"ming-00"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"ming-00"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"ming-00"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"ming-00"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"ming-00"},"content":" */"},{"lineNumber":20,"author":{"gitId":"ming-00"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"ming-00"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"ming-00"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"ming-00"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"ming-00"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":26,"author":{"gitId":"ming-00"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"ming-00"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"ming-00"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"ming-00"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"ming-00"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"ming-00"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"ming-00"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"ming-00"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"ming-00"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":36,"author":{"gitId":"ming-00"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"ming-00"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":40,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"ming-00"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":42,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"ming-00"},"content":"    private void flip() {"},{"lineNumber":44,"author":{"gitId":"ming-00"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":45,"author":{"gitId":"ming-00"},"content":"        Collections.reverse(tmp);"},{"lineNumber":46,"author":{"gitId":"ming-00"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":47,"author":{"gitId":"ming-00"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":48,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":50,"author":{"gitId":"ming-00"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":51,"author":{"gitId":"ming-00"},"content":"        return new DialogBox(text, img);"},{"lineNumber":52,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":54,"author":{"gitId":"ming-00"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"ming-00"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":56,"author":{"gitId":"ming-00"},"content":"        db.flip();"},{"lineNumber":57,"author":{"gitId":"ming-00"},"content":"        return db;"},{"lineNumber":58,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"ming-00"},"content":"}"}],"authorContributionMap":{"ming-00":59}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"ming-00"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"ming-00"},"content":"import javafx.scene.control.Label;"},{"lineNumber":7,"author":{"gitId":"ming-00"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":9,"author":{"gitId":"ming-00"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"ming-00"},"content":" * Duke is a personal assistant chat bot that helps users to"},{"lineNumber":11,"author":{"gitId":"ming-00"},"content":" * keep track of various things."},{"lineNumber":12,"author":{"gitId":"ming-00"},"content":" * @author Damith C. Rajapakse, Wu Weiming"},{"lineNumber":13,"author":{"gitId":"ming-00"},"content":" */"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":15,"author":{"gitId":"ming-00"},"content":"    private TaskList taskList;"},{"lineNumber":16,"author":{"gitId":"ming-00"},"content":"    private Storage storage;"},{"lineNumber":17,"author":{"gitId":"ming-00"},"content":"    private Ui ui;"},{"lineNumber":18,"author":{"gitId":"ming-00"},"content":"    private Parser parser;"},{"lineNumber":19,"author":{"gitId":"ming-00"},"content":"    private boolean shouldExit \u003d false;"},{"lineNumber":20,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":21,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"ming-00"},"content":"     * Main method for Duke class."},{"lineNumber":23,"author":{"gitId":"ming-00"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"ming-00"},"content":"     * @param args"},{"lineNumber":25,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":27,"author":{"gitId":"ming-00"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"ming-00"},"content":"            Duke d \u003d new Duke(\"duke.txt\");"},{"lineNumber":29,"author":{"gitId":"ming-00"},"content":"            d.run();"},{"lineNumber":30,"author":{"gitId":"ming-00"},"content":"        } catch (IOException e) {"},{"lineNumber":31,"author":{"gitId":"ming-00"},"content":"            System.err.println(e);"},{"lineNumber":32,"author":{"gitId":"ming-00"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":35,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"ming-00"},"content":"     * Constructor for Duke class."},{"lineNumber":37,"author":{"gitId":"ming-00"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"ming-00"},"content":"     * @param filePath location where file with task list would be stored."},{"lineNumber":39,"author":{"gitId":"ming-00"},"content":"     * @throws IOException if filePath is invalid."},{"lineNumber":40,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"ming-00"},"content":"    public Duke(String filePath) throws IOException {"},{"lineNumber":42,"author":{"gitId":"ming-00"},"content":"        this.taskList \u003d new TaskList();"},{"lineNumber":43,"author":{"gitId":"ming-00"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":44,"author":{"gitId":"ming-00"},"content":"        this.storage \u003d new Storage(filePath);"},{"lineNumber":45,"author":{"gitId":"ming-00"},"content":"        storage.retrieveTasks(taskList);"},{"lineNumber":46,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":48,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"ming-00"},"content":"     * Generates a response to user input."},{"lineNumber":50,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"ming-00"},"content":"    public String getResponse(String input) throws IOException {"},{"lineNumber":52,"author":{"gitId":"ming-00"},"content":"            parser \u003d new Parser();"},{"lineNumber":53,"author":{"gitId":"ming-00"},"content":"            storage \u003d new Storage(\"duke.txt\");"},{"lineNumber":54,"author":{"gitId":"ming-00"},"content":"            this.shouldExit \u003d parser.isExit(input);"},{"lineNumber":55,"author":{"gitId":"ming-00"},"content":"            return parser.execute(input, taskList, storage);"},{"lineNumber":56,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":58,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":59,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"ming-00"},"content":"     * Runs the Duke application."},{"lineNumber":61,"author":{"gitId":"ming-00"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"ming-00"},"content":"     * @throws IOException if filePath or system input is invalid."},{"lineNumber":63,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":65,"author":{"gitId":"ming-00"},"content":"    public void run() throws IOException {"},{"lineNumber":66,"author":{"gitId":"ming-00"},"content":"        ui.printHello();"},{"lineNumber":67,"author":{"gitId":"ming-00"},"content":"        storage \u003d new Storage(\"duke.txt\");"},{"lineNumber":68,"author":{"gitId":"ming-00"},"content":"        parser \u003d new Parser();"},{"lineNumber":69,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":70,"author":{"gitId":"ming-00"},"content":"        storage.storeTasks(taskList);"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ming-00":68,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":"}"}],"authorContributionMap":{"ming-00":2}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":"import java.time.format.FormatStyle;"},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":5,"author":{"gitId":"ming-00"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"ming-00"},"content":" * This Event class extends the Task class and is used to"},{"lineNumber":7,"author":{"gitId":"ming-00"},"content":" * represent a single event that users can add to their list."},{"lineNumber":8,"author":{"gitId":"ming-00"},"content":" */"},{"lineNumber":9,"author":{"gitId":"ming-00"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"ming-00"},"content":"    protected LocalDate at;"},{"lineNumber":11,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":12,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"ming-00"},"content":"     * Overloaded constructor for Event class."},{"lineNumber":14,"author":{"gitId":"ming-00"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"ming-00"},"content":"     * @param description description of event."},{"lineNumber":16,"author":{"gitId":"ming-00"},"content":"     * @param at timing of event."},{"lineNumber":17,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"ming-00"},"content":"    public Event(String description, LocalDate at) {"},{"lineNumber":19,"author":{"gitId":"ming-00"},"content":"        super(description);"},{"lineNumber":20,"author":{"gitId":"ming-00"},"content":"        this.at \u003d at;"},{"lineNumber":21,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":23,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"ming-00"},"content":"     * Overloaded constructor for Event class"},{"lineNumber":25,"author":{"gitId":"ming-00"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"ming-00"},"content":"     * @param isDone whether the event is already marked off as done."},{"lineNumber":27,"author":{"gitId":"ming-00"},"content":"     * @param description description of event."},{"lineNumber":28,"author":{"gitId":"ming-00"},"content":"     * @param at timing of event."},{"lineNumber":29,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"ming-00"},"content":"    public Event(boolean isDone, String description, LocalDate at) {"},{"lineNumber":31,"author":{"gitId":"ming-00"},"content":"        super(description, isDone);"},{"lineNumber":32,"author":{"gitId":"ming-00"},"content":"        this.at \u003d at;"},{"lineNumber":33,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":35,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"ming-00"},"content":"     * Generates description to be saved in file for later retrieval."},{"lineNumber":37,"author":{"gitId":"ming-00"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"ming-00"},"content":"     * @return record of event to be saved in file."},{"lineNumber":39,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"ming-00"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"ming-00"},"content":"    public String getDescription() {"},{"lineNumber":42,"author":{"gitId":"ming-00"},"content":"        return \"Event`\" + this.isDone + \"`\" + this.description + \"`\" + this.at;"},{"lineNumber":43,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":45,"author":{"gitId":"ming-00"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"ming-00"},"content":"    public String toString() {"},{"lineNumber":47,"author":{"gitId":"ming-00"},"content":"        return \"[E] \" + super.toString() + \" (at: \" +"},{"lineNumber":48,"author":{"gitId":"ming-00"},"content":"                at.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG)) + \")\";"},{"lineNumber":49,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"ming-00"},"content":"}"}],"authorContributionMap":{"ming-00":50}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"ming-00"},"content":" */"},{"lineNumber":6,"author":{"gitId":"ming-00"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"ming-00"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"ming-00"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"ming-00"},"content":"}"}],"authorContributionMap":{"ming-00":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"ming-00"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"ming-00"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"ming-00"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":9,"author":{"gitId":"ming-00"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"ming-00"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"ming-00"},"content":" */"},{"lineNumber":12,"author":{"gitId":"ming-00"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":14,"author":{"gitId":"ming-00"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"ming-00"},"content":"    public void start(Stage stage) {"},{"lineNumber":16,"author":{"gitId":"ming-00"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"ming-00"},"content":"            Duke duke \u003d new Duke(\"duke.txt\");"},{"lineNumber":18,"author":{"gitId":"ming-00"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":19,"author":{"gitId":"ming-00"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":20,"author":{"gitId":"ming-00"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":21,"author":{"gitId":"ming-00"},"content":"            stage.setTitle(\"Duke\");"},{"lineNumber":22,"author":{"gitId":"ming-00"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"ming-00"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":24,"author":{"gitId":"ming-00"},"content":"            stage.show();"},{"lineNumber":25,"author":{"gitId":"ming-00"},"content":"        } catch (IOException e) {"},{"lineNumber":26,"author":{"gitId":"ming-00"},"content":"            e.printStackTrace();"},{"lineNumber":27,"author":{"gitId":"ming-00"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"ming-00"},"content":"}"}],"authorContributionMap":{"ming-00":29}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"import javafx.application.Platform;"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":"import javafx.fxml.FXML;"},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":"import javafx.scene.control.Button;"},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":5,"author":{"gitId":"ming-00"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":6,"author":{"gitId":"ming-00"},"content":"import javafx.scene.image.Image;"},{"lineNumber":7,"author":{"gitId":"ming-00"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"ming-00"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":9,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":10,"author":{"gitId":"ming-00"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"ming-00"},"content":"import java.util.Timer;"},{"lineNumber":12,"author":{"gitId":"ming-00"},"content":"import java.util.TimerTask;"},{"lineNumber":13,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":14,"author":{"gitId":"ming-00"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"ming-00"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":16,"author":{"gitId":"ming-00"},"content":" */"},{"lineNumber":17,"author":{"gitId":"ming-00"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":18,"author":{"gitId":"ming-00"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"ming-00"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":20,"author":{"gitId":"ming-00"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"ming-00"},"content":"    private VBox dialogContainer;"},{"lineNumber":22,"author":{"gitId":"ming-00"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"ming-00"},"content":"    private TextField userInput;"},{"lineNumber":24,"author":{"gitId":"ming-00"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"ming-00"},"content":"    private Button sendButton;"},{"lineNumber":26,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":27,"author":{"gitId":"ming-00"},"content":"    private Duke duke;"},{"lineNumber":28,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":29,"author":{"gitId":"ming-00"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":30,"author":{"gitId":"ming-00"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":31,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":32,"author":{"gitId":"ming-00"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitId":"ming-00"},"content":"    public void initialize() {"},{"lineNumber":34,"author":{"gitId":"ming-00"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":35,"author":{"gitId":"ming-00"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":36,"author":{"gitId":"ming-00"},"content":"                DialogBox.getDukeDialog(Ui.printHello(), dukeImage)"},{"lineNumber":37,"author":{"gitId":"ming-00"},"content":"        );"},{"lineNumber":38,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":40,"author":{"gitId":"ming-00"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":41,"author":{"gitId":"ming-00"},"content":"        duke \u003d d;"},{"lineNumber":42,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":44,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"ming-00"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":46,"author":{"gitId":"ming-00"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":47,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"ming-00"},"content":"    @FXML"},{"lineNumber":49,"author":{"gitId":"ming-00"},"content":"    private void handleUserInput() throws IOException {"},{"lineNumber":50,"author":{"gitId":"ming-00"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":51,"author":{"gitId":"ming-00"},"content":"        String response \u003d \"@-\u003e--\u003e--\\n\";"},{"lineNumber":52,"author":{"gitId":"ming-00"},"content":"        response +\u003d duke.getResponse(input);"},{"lineNumber":53,"author":{"gitId":"ming-00"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":54,"author":{"gitId":"ming-00"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":55,"author":{"gitId":"ming-00"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":56,"author":{"gitId":"ming-00"},"content":"        );"},{"lineNumber":57,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":58,"author":{"gitId":"ming-00"},"content":"        userInput.clear();"},{"lineNumber":59,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":60,"author":{"gitId":"ming-00"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":61,"author":{"gitId":"ming-00"},"content":"            exitProgram();"},{"lineNumber":62,"author":{"gitId":"ming-00"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":65,"author":{"gitId":"ming-00"},"content":"    private void exitProgram() {"},{"lineNumber":66,"author":{"gitId":"ming-00"},"content":"        TimerTask timertask \u003d new TimerTask() {"},{"lineNumber":67,"author":{"gitId":"ming-00"},"content":"            public void run() {"},{"lineNumber":68,"author":{"gitId":"ming-00"},"content":"                Platform.exit();"},{"lineNumber":69,"author":{"gitId":"ming-00"},"content":"                System.exit(0);"},{"lineNumber":70,"author":{"gitId":"ming-00"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"ming-00"},"content":"        };"},{"lineNumber":72,"author":{"gitId":"ming-00"},"content":"        Timer timer \u003d new Timer();"},{"lineNumber":73,"author":{"gitId":"ming-00"},"content":"        timer.schedule(timertask, 800);"},{"lineNumber":74,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"ming-00"},"content":"}"}],"authorContributionMap":{"ming-00":75}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":"public class Parser {"},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":"    private static final String EXIT_COMMAND \u003d \"bye\";"},{"lineNumber":5,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":6,"author":{"gitId":"ming-00"},"content":"    public boolean isExit(String input) {"},{"lineNumber":7,"author":{"gitId":"ming-00"},"content":"        return input.equals(EXIT_COMMAND);"},{"lineNumber":8,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":10,"author":{"gitId":"ming-00"},"content":"    public String execute(String input, TaskList tasks, Storage storage) throws IOException {"},{"lineNumber":11,"author":{"gitId":"ming-00"},"content":"        if (input.equals(EXIT_COMMAND)) {"},{"lineNumber":12,"author":{"gitId":"ming-00"},"content":"            // close program"},{"lineNumber":13,"author":{"gitId":"ming-00"},"content":"            storage.storeTasks(tasks);"},{"lineNumber":14,"author":{"gitId":"ming-00"},"content":"            return Ui.sayGoodbye();"},{"lineNumber":15,"author":{"gitId":"ming-00"},"content":"        } else if (input.equals(\"list\")) {"},{"lineNumber":16,"author":{"gitId":"ming-00"},"content":"            // show everything in the list"},{"lineNumber":17,"author":{"gitId":"ming-00"},"content":"            return tasks.iterateList();"},{"lineNumber":18,"author":{"gitId":"ming-00"},"content":"        } else if (input.equals(\"help\")){"},{"lineNumber":19,"author":{"gitId":"ming-00"},"content":"            return Ui.getHelp();"},{"lineNumber":20,"author":{"gitId":"ming-00"},"content":"        } else if (input.split(\" \", 2)[0].equals(\"done\")) {"},{"lineNumber":21,"author":{"gitId":"ming-00"},"content":"            // mark task with the given index as completed"},{"lineNumber":22,"author":{"gitId":"ming-00"},"content":"            return tasks.markAsDone(input.split(\" \", 2)[1]);"},{"lineNumber":23,"author":{"gitId":"ming-00"},"content":"        } else if (input.split(\" \", 2)[0].equals(\"delete\")) {"},{"lineNumber":24,"author":{"gitId":"ming-00"},"content":"            return tasks.deleteTask(input.split(\" \", 2)[1]);"},{"lineNumber":25,"author":{"gitId":"ming-00"},"content":"        } else if (input.split(\" \", 2)[0].equals(\"find\")) {"},{"lineNumber":26,"author":{"gitId":"ming-00"},"content":"            return tasks.searchTask(input.split(\" \", 2)[1]);"},{"lineNumber":27,"author":{"gitId":"ming-00"},"content":"        } else {"},{"lineNumber":28,"author":{"gitId":"ming-00"},"content":"            // add new task to list"},{"lineNumber":29,"author":{"gitId":"ming-00"},"content":"            return tasks.addTask(input);"},{"lineNumber":30,"author":{"gitId":"ming-00"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":33,"author":{"gitId":"ming-00"},"content":"}"}],"authorContributionMap":{"ming-00":33}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":"import java.io.FileWriter;"},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"ming-00"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":7,"author":{"gitId":"ming-00"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"ming-00"},"content":" * This class deals with loading tasks from a file and saving tasks"},{"lineNumber":9,"author":{"gitId":"ming-00"},"content":" * in a file."},{"lineNumber":10,"author":{"gitId":"ming-00"},"content":" */"},{"lineNumber":11,"author":{"gitId":"ming-00"},"content":"public class Storage {"},{"lineNumber":12,"author":{"gitId":"ming-00"},"content":"    String filePath;"},{"lineNumber":13,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":14,"author":{"gitId":"ming-00"},"content":"    public Storage(String filePath) {"},{"lineNumber":15,"author":{"gitId":"ming-00"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":16,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":18,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"ming-00"},"content":"     * Retrieves existing tasks saved from previous sessions on a file and"},{"lineNumber":20,"author":{"gitId":"ming-00"},"content":"     * transfers the tasks into TaskList."},{"lineNumber":21,"author":{"gitId":"ming-00"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"ming-00"},"content":"     * @param lst list of tasks."},{"lineNumber":23,"author":{"gitId":"ming-00"},"content":"     * @throws IOException if file path is invalid."},{"lineNumber":24,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"ming-00"},"content":"    public void retrieveTasks(TaskList lst) throws IOException {"},{"lineNumber":26,"author":{"gitId":"ming-00"},"content":"        File data \u003d new File(filePath);"},{"lineNumber":27,"author":{"gitId":"ming-00"},"content":"        if (!data.exists()) {"},{"lineNumber":28,"author":{"gitId":"ming-00"},"content":"            data.createNewFile();"},{"lineNumber":29,"author":{"gitId":"ming-00"},"content":"        } else {"},{"lineNumber":30,"author":{"gitId":"ming-00"},"content":"            Scanner s \u003d new Scanner(data);"},{"lineNumber":31,"author":{"gitId":"ming-00"},"content":"            while (s.hasNextLine()) {"},{"lineNumber":32,"author":{"gitId":"ming-00"},"content":"                String txt \u003d s.nextLine();"},{"lineNumber":33,"author":{"gitId":"ming-00"},"content":"                lst.readTask(txt);"},{"lineNumber":34,"author":{"gitId":"ming-00"},"content":"            }"},{"lineNumber":35,"author":{"gitId":"ming-00"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"ming-00"},"content":"        assert data.exists();"},{"lineNumber":37,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":39,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"ming-00"},"content":"     * Stores existing tasks into a file to be retrieved in other sessions by"},{"lineNumber":41,"author":{"gitId":"ming-00"},"content":"     * retrieving the tasks in TaskList."},{"lineNumber":42,"author":{"gitId":"ming-00"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"ming-00"},"content":"     * @param lst list of tasks."},{"lineNumber":44,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"ming-00"},"content":"    public void storeTasks(TaskList lst) throws IOException {"},{"lineNumber":46,"author":{"gitId":"ming-00"},"content":"        File data \u003d new File(filePath);"},{"lineNumber":47,"author":{"gitId":"ming-00"},"content":"        assert data.exists();"},{"lineNumber":48,"author":{"gitId":"ming-00"},"content":"        // store Tasks in a file"},{"lineNumber":49,"author":{"gitId":"ming-00"},"content":"        FileWriter fw \u003d new FileWriter(data, false);"},{"lineNumber":50,"author":{"gitId":"ming-00"},"content":"        List\u003cTask\u003e taskList \u003d lst.fetchTasks();"},{"lineNumber":51,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":52,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":53,"author":{"gitId":"ming-00"},"content":"        taskList.stream().forEach(item -\u003e {"},{"lineNumber":54,"author":{"gitId":"ming-00"},"content":"            try {"},{"lineNumber":55,"author":{"gitId":"ming-00"},"content":"                fw.write(item.getDescription() + \"\\n\");"},{"lineNumber":56,"author":{"gitId":"ming-00"},"content":"            } catch (IOException e) {"},{"lineNumber":57,"author":{"gitId":"ming-00"},"content":"                e.printStackTrace();"},{"lineNumber":58,"author":{"gitId":"ming-00"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"ming-00"},"content":"        });"},{"lineNumber":60,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":61,"author":{"gitId":"ming-00"},"content":"        fw.close();"},{"lineNumber":62,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":64,"author":{"gitId":"ming-00"},"content":"}"}],"authorContributionMap":{"ming-00":64}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":" * This class represents a task that can be created"},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":" * through user command."},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":" */"},{"lineNumber":5,"author":{"gitId":"ming-00"},"content":"public class Task {"},{"lineNumber":6,"author":{"gitId":"ming-00"},"content":"    protected String description;"},{"lineNumber":7,"author":{"gitId":"ming-00"},"content":"    protected boolean isDone;"},{"lineNumber":8,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":9,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"ming-00"},"content":"     * Constructs a Task object."},{"lineNumber":11,"author":{"gitId":"ming-00"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"ming-00"},"content":"     * @param description information on task to be done."},{"lineNumber":13,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"ming-00"},"content":"    public Task(String description) {"},{"lineNumber":15,"author":{"gitId":"ming-00"},"content":"        this.description \u003d description;"},{"lineNumber":16,"author":{"gitId":"ming-00"},"content":"        this.isDone \u003d false;"},{"lineNumber":17,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":19,"author":{"gitId":"ming-00"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":20,"author":{"gitId":"ming-00"},"content":"        this.description \u003d description;"},{"lineNumber":21,"author":{"gitId":"ming-00"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":22,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":24,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"ming-00"},"content":"     * Checks task completion status and returns formatted status icon."},{"lineNumber":26,"author":{"gitId":"ming-00"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"ming-00"},"content":"     * @return formatted status icon."},{"lineNumber":28,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"ming-00"},"content":"    public String getStatusIcon() {"},{"lineNumber":30,"author":{"gitId":"ming-00"},"content":"        return (isDone ? \"[X] \" : \"[ ] \"); //return tick or X symbols"},{"lineNumber":31,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":33,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"ming-00"},"content":"     * Marks a task as completed."},{"lineNumber":35,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"ming-00"},"content":"    public void markAsDone() {"},{"lineNumber":37,"author":{"gitId":"ming-00"},"content":"        this.isDone \u003d true;"},{"lineNumber":38,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":40,"author":{"gitId":"ming-00"},"content":"    public String getDescription() {"},{"lineNumber":41,"author":{"gitId":"ming-00"},"content":"        return this.isDone + \"`\" + this.description;"},{"lineNumber":42,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":44,"author":{"gitId":"ming-00"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"ming-00"},"content":"    public String toString() {"},{"lineNumber":46,"author":{"gitId":"ming-00"},"content":"        return this.getStatusIcon() + this.description;"},{"lineNumber":47,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"ming-00"},"content":"}"}],"authorContributionMap":{"ming-00":48}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":6,"author":{"gitId":"ming-00"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"ming-00"},"content":" * Class to handle all the tasks."},{"lineNumber":8,"author":{"gitId":"ming-00"},"content":" */"},{"lineNumber":9,"author":{"gitId":"ming-00"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"ming-00"},"content":"    private static final String ADD_TODO_COMMAND \u003d \"todo\";"},{"lineNumber":11,"author":{"gitId":"ming-00"},"content":"    private static final String ADD_DEADLINE_COMMAND \u003d \"deadline\";"},{"lineNumber":12,"author":{"gitId":"ming-00"},"content":"    private static final String ADD_EVENT_COMMAND \u003d \"event\";"},{"lineNumber":13,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":14,"author":{"gitId":"ming-00"},"content":"    private static final String ADD_TASK_RESPONSE \u003d \"You got it! I added this task:\\n   \";"},{"lineNumber":15,"author":{"gitId":"ming-00"},"content":"    private static final String ADD_DEADLINE_RESPONSE \u003d \"You got it! I added this deadline:\\n   \";"},{"lineNumber":16,"author":{"gitId":"ming-00"},"content":"    private static final String ADD_EVENT_RESPONSE \u003d \"You got it! I added this event:\\n   \";"},{"lineNumber":17,"author":{"gitId":"ming-00"},"content":"    private static final String DELETE_TASK_RESPONSE \u003d \"Sweet! I have deleted the following task:\\n\";"},{"lineNumber":18,"author":{"gitId":"ming-00"},"content":"    private static final String WRONG_COMMAND_RESPONSE \u003d \"Hey! What is this gibberish?\";"},{"lineNumber":19,"author":{"gitId":"ming-00"},"content":"    private static final String WRONG_FORMAT_RESPONSE \u003d \"Did you format your request properly? \\n This is getting old.\";"},{"lineNumber":20,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":21,"author":{"gitId":"ming-00"},"content":"    List\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();"},{"lineNumber":22,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":23,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"ming-00"},"content":"     * Iterates and returns enumerated list of tasks."},{"lineNumber":25,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"ming-00"},"content":"    public String iterateList() {"},{"lineNumber":27,"author":{"gitId":"ming-00"},"content":"        if (lst.size() \u003d\u003d 0) {"},{"lineNumber":28,"author":{"gitId":"ming-00"},"content":"            return \"There are no items in your list yet.\";"},{"lineNumber":29,"author":{"gitId":"ming-00"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"ming-00"},"content":"        String s \u003d \"Here are the items in your list:\\n\";"},{"lineNumber":31,"author":{"gitId":"ming-00"},"content":"        int i \u003d 1;"},{"lineNumber":32,"author":{"gitId":"ming-00"},"content":"        for (Task item : lst) {"},{"lineNumber":33,"author":{"gitId":"ming-00"},"content":"            s +\u003d i + \". \" + item.toString() + \"\\n\";"},{"lineNumber":34,"author":{"gitId":"ming-00"},"content":"            i++;"},{"lineNumber":35,"author":{"gitId":"ming-00"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"ming-00"},"content":"        return s;"},{"lineNumber":37,"author":{"gitId":"ming-00"},"content":"    };"},{"lineNumber":38,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":39,"author":{"gitId":"ming-00"},"content":"    public List\u003cTask\u003e fetchTasks() {"},{"lineNumber":40,"author":{"gitId":"ming-00"},"content":"        return lst;"},{"lineNumber":41,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":43,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"ming-00"},"content":"     * Checks for task in the given index and marks it as completed if valid."},{"lineNumber":45,"author":{"gitId":"ming-00"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"ming-00"},"content":"     * @param str task number given one-based indexing"},{"lineNumber":47,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"ming-00"},"content":"    public String markAsDone(String str) {"},{"lineNumber":49,"author":{"gitId":"ming-00"},"content":"        try {"},{"lineNumber":50,"author":{"gitId":"ming-00"},"content":"            int index \u003d Integer.parseInt(str) - 1;"},{"lineNumber":51,"author":{"gitId":"ming-00"},"content":"            Task task \u003d lst.get(index);"},{"lineNumber":52,"author":{"gitId":"ming-00"},"content":"            task.markAsDone();"},{"lineNumber":53,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":54,"author":{"gitId":"ming-00"},"content":"            return \"Sweet! I have marked the following task as done:\\n\" + task.toString();"},{"lineNumber":55,"author":{"gitId":"ming-00"},"content":"        } catch (final NumberFormatException e) {"},{"lineNumber":56,"author":{"gitId":"ming-00"},"content":"            return \"Oof, did you type a valid number or not?\";"},{"lineNumber":57,"author":{"gitId":"ming-00"},"content":"        } catch (IndexOutOfBoundsException exception) {"},{"lineNumber":58,"author":{"gitId":"ming-00"},"content":"            return \"You don\u0027t have so many items, dumbass!\";"},{"lineNumber":59,"author":{"gitId":"ming-00"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":62,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"ming-00"},"content":"     * Adds task to list of tasks if it is a valid input."},{"lineNumber":64,"author":{"gitId":"ming-00"},"content":"     * @param input user input in command line"},{"lineNumber":65,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"ming-00"},"content":"    public String addTask(String input) {"},{"lineNumber":67,"author":{"gitId":"ming-00"},"content":"        try {"},{"lineNumber":68,"author":{"gitId":"ming-00"},"content":"            String[] split \u003d input.split(\" \", 2);"},{"lineNumber":69,"author":{"gitId":"ming-00"},"content":"            String command \u003d split[0];"},{"lineNumber":70,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":71,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":72,"author":{"gitId":"ming-00"},"content":"            boolean isValidCommand \u003d command.equals(ADD_TODO_COMMAND) || command.equals(ADD_DEADLINE_COMMAND)"},{"lineNumber":73,"author":{"gitId":"ming-00"},"content":"                    || command.equals(ADD_EVENT_COMMAND);"},{"lineNumber":74,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":75,"author":{"gitId":"ming-00"},"content":"            if (!isValidCommand || split.length \u003c 2) {"},{"lineNumber":76,"author":{"gitId":"ming-00"},"content":"                return WRONG_COMMAND_RESPONSE;"},{"lineNumber":77,"author":{"gitId":"ming-00"},"content":"            } else if (command.equals(\"todo\")) {"},{"lineNumber":78,"author":{"gitId":"ming-00"},"content":"                return addTodo(split[1]);"},{"lineNumber":79,"author":{"gitId":"ming-00"},"content":"            } else {"},{"lineNumber":80,"author":{"gitId":"ming-00"},"content":"                String[] separateDetails \u003d split[1].split(\"/by |/at \");"},{"lineNumber":81,"author":{"gitId":"ming-00"},"content":"                assert separateDetails.length \u003e 1 : WRONG_FORMAT_RESPONSE;"},{"lineNumber":82,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":83,"author":{"gitId":"ming-00"},"content":"                String description \u003d separateDetails[0];"},{"lineNumber":84,"author":{"gitId":"ming-00"},"content":"                String date \u003d separateDetails[1];"},{"lineNumber":85,"author":{"gitId":"ming-00"},"content":"                LocalDate localDate \u003d LocalDate.parse(date);"},{"lineNumber":86,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":87,"author":{"gitId":"ming-00"},"content":"                if (command.startsWith(ADD_DEADLINE_COMMAND)) {"},{"lineNumber":88,"author":{"gitId":"ming-00"},"content":"                    return addDeadline(description, localDate);"},{"lineNumber":89,"author":{"gitId":"ming-00"},"content":"                } else {"},{"lineNumber":90,"author":{"gitId":"ming-00"},"content":"                    return addEvent(description, localDate);"},{"lineNumber":91,"author":{"gitId":"ming-00"},"content":"                }"},{"lineNumber":92,"author":{"gitId":"ming-00"},"content":"            }"},{"lineNumber":93,"author":{"gitId":"ming-00"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":94,"author":{"gitId":"ming-00"},"content":"            return \"Your date formatting is invalid, use YYYY-MM-DD please...\";"},{"lineNumber":95,"author":{"gitId":"ming-00"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":96,"author":{"gitId":"ming-00"},"content":"            return \"Did you format your request properly?\";"},{"lineNumber":97,"author":{"gitId":"ming-00"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":100,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"ming-00"},"content":"     * Adds todo task to task list."},{"lineNumber":102,"author":{"gitId":"ming-00"},"content":"     *"},{"lineNumber":103,"author":{"gitId":"ming-00"},"content":"     * @param description description for todo task"},{"lineNumber":104,"author":{"gitId":"ming-00"},"content":"     * @return response message to user"},{"lineNumber":105,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"ming-00"},"content":"    public String addTodo(String description) {"},{"lineNumber":107,"author":{"gitId":"ming-00"},"content":"        Todo todo \u003d new Todo(description);"},{"lineNumber":108,"author":{"gitId":"ming-00"},"content":"        lst.add(todo);"},{"lineNumber":109,"author":{"gitId":"ming-00"},"content":"        return ADD_TASK_RESPONSE"},{"lineNumber":110,"author":{"gitId":"ming-00"},"content":"                + todo.toString() + \"\\n\""},{"lineNumber":111,"author":{"gitId":"ming-00"},"content":"                + countTasks();"},{"lineNumber":112,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":114,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"ming-00"},"content":"     * Adds deadline task to task list."},{"lineNumber":116,"author":{"gitId":"ming-00"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"ming-00"},"content":"     * @param description description for deadline task"},{"lineNumber":118,"author":{"gitId":"ming-00"},"content":"     * @param localDate deadline for task"},{"lineNumber":119,"author":{"gitId":"ming-00"},"content":"     * @return response message to user"},{"lineNumber":120,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"ming-00"},"content":"    public String addDeadline(String description, LocalDate localDate) {"},{"lineNumber":122,"author":{"gitId":"ming-00"},"content":"        Deadline deadline \u003d new Deadline(description, localDate);"},{"lineNumber":123,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":124,"author":{"gitId":"ming-00"},"content":"        lst.add(deadline);"},{"lineNumber":125,"author":{"gitId":"ming-00"},"content":"        return ADD_DEADLINE_RESPONSE"},{"lineNumber":126,"author":{"gitId":"ming-00"},"content":"                + deadline.toString() + \"\\n\" + countTasks();"},{"lineNumber":127,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":129,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":130,"author":{"gitId":"ming-00"},"content":"     * Adds event to task list."},{"lineNumber":131,"author":{"gitId":"ming-00"},"content":"     *"},{"lineNumber":132,"author":{"gitId":"ming-00"},"content":"     * @param description description for event"},{"lineNumber":133,"author":{"gitId":"ming-00"},"content":"     * @param localDate date for event"},{"lineNumber":134,"author":{"gitId":"ming-00"},"content":"     * @return response message to user"},{"lineNumber":135,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":136,"author":{"gitId":"ming-00"},"content":"    public String addEvent(String description, LocalDate localDate) {"},{"lineNumber":137,"author":{"gitId":"ming-00"},"content":"        Event event \u003d new Event(description, localDate);"},{"lineNumber":138,"author":{"gitId":"ming-00"},"content":"        lst.add(event);"},{"lineNumber":139,"author":{"gitId":"ming-00"},"content":"        return ADD_EVENT_RESPONSE"},{"lineNumber":140,"author":{"gitId":"ming-00"},"content":"                + event.toString() + \"\\n\" + countTasks();"},{"lineNumber":141,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":143,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":144,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":145,"author":{"gitId":"ming-00"},"content":"     * Deletes task from list of tasks."},{"lineNumber":146,"author":{"gitId":"ming-00"},"content":"     * @param str task number given one-based indexing"},{"lineNumber":147,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":148,"author":{"gitId":"ming-00"},"content":"    public String deleteTask(String str) {"},{"lineNumber":149,"author":{"gitId":"ming-00"},"content":"        try {"},{"lineNumber":150,"author":{"gitId":"ming-00"},"content":"            int index \u003d Integer.parseInt(str) - 1;"},{"lineNumber":151,"author":{"gitId":"ming-00"},"content":"            Task task \u003d lst.get(index);"},{"lineNumber":152,"author":{"gitId":"ming-00"},"content":"            lst.remove(index);"},{"lineNumber":153,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":154,"author":{"gitId":"ming-00"},"content":"            return DELETE_TASK_RESPONSE + task.toString() + \"\\n\" + countTasks();"},{"lineNumber":155,"author":{"gitId":"ming-00"},"content":"        } catch (final NumberFormatException e) {"},{"lineNumber":156,"author":{"gitId":"ming-00"},"content":"            return \"Oof, did you type a valid number or not?\";"},{"lineNumber":157,"author":{"gitId":"ming-00"},"content":"        } catch (IndexOutOfBoundsException exception) {"},{"lineNumber":158,"author":{"gitId":"ming-00"},"content":"            return \"You don\u0027t have so many items, dumbass!\";"},{"lineNumber":159,"author":{"gitId":"ming-00"},"content":"        }"},{"lineNumber":160,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":162,"author":{"gitId":"ming-00"},"content":"    public String searchTask(String str) {"},{"lineNumber":163,"author":{"gitId":"ming-00"},"content":"        String s \u003d \"Here are the items that match your search:\";"},{"lineNumber":164,"author":{"gitId":"ming-00"},"content":"        int i \u003d 1;"},{"lineNumber":165,"author":{"gitId":"ming-00"},"content":"        for (Task item : lst) {"},{"lineNumber":166,"author":{"gitId":"ming-00"},"content":"            if (item.description.toLowerCase().contains(str.toLowerCase())) {"},{"lineNumber":167,"author":{"gitId":"ming-00"},"content":"                s +\u003d i + \". \" + item.toString() + \"\\n\";"},{"lineNumber":168,"author":{"gitId":"ming-00"},"content":"                i++;"},{"lineNumber":169,"author":{"gitId":"ming-00"},"content":"            }"},{"lineNumber":170,"author":{"gitId":"ming-00"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"ming-00"},"content":"        return s;"},{"lineNumber":172,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":174,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":175,"author":{"gitId":"ming-00"},"content":"     * Determines if task is Todo, Deadline or Event and handles them accordingly."},{"lineNumber":176,"author":{"gitId":"ming-00"},"content":"     *"},{"lineNumber":177,"author":{"gitId":"ming-00"},"content":"     * @param str input from user."},{"lineNumber":178,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":179,"author":{"gitId":"ming-00"},"content":"    public void readTask(String str) {"},{"lineNumber":180,"author":{"gitId":"ming-00"},"content":"        String[] split \u003d str.split(\"`\");"},{"lineNumber":181,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":182,"author":{"gitId":"ming-00"},"content":"        switch (split[0]) {"},{"lineNumber":183,"author":{"gitId":"ming-00"},"content":"        case \"Todo\":"},{"lineNumber":184,"author":{"gitId":"ming-00"},"content":"            Todo todo \u003d new Todo(split[2], Boolean.parseBoolean(split[1]));"},{"lineNumber":185,"author":{"gitId":"ming-00"},"content":"            lst.add(todo);"},{"lineNumber":186,"author":{"gitId":"ming-00"},"content":"            break;"},{"lineNumber":187,"author":{"gitId":"ming-00"},"content":"        case \"Deadline\":"},{"lineNumber":188,"author":{"gitId":"ming-00"},"content":"            Deadline deadline \u003d new Deadline(Boolean.parseBoolean(split[1]),"},{"lineNumber":189,"author":{"gitId":"ming-00"},"content":"                    split[2], LocalDate.parse(split[3]));"},{"lineNumber":190,"author":{"gitId":"ming-00"},"content":"            lst.add(deadline);"},{"lineNumber":191,"author":{"gitId":"ming-00"},"content":"            break;"},{"lineNumber":192,"author":{"gitId":"ming-00"},"content":"        case \"Event\":"},{"lineNumber":193,"author":{"gitId":"ming-00"},"content":"            Event event \u003d new Event(Boolean.parseBoolean(split[1]),"},{"lineNumber":194,"author":{"gitId":"ming-00"},"content":"                    split[2], LocalDate.parse(split[3]));"},{"lineNumber":195,"author":{"gitId":"ming-00"},"content":"            lst.add(event);"},{"lineNumber":196,"author":{"gitId":"ming-00"},"content":"            break;"},{"lineNumber":197,"author":{"gitId":"ming-00"},"content":"        }"},{"lineNumber":198,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":200,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":201,"author":{"gitId":"ming-00"},"content":"     * Outputs current number of active tasks in the TaskList."},{"lineNumber":202,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":203,"author":{"gitId":"ming-00"},"content":"    public String countTasks() {"},{"lineNumber":204,"author":{"gitId":"ming-00"},"content":"        return \"Now you have \" + lst.size() + \" tasks.\";"},{"lineNumber":205,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":206,"author":{"gitId":"ming-00"},"content":"}"}],"authorContributionMap":{"ming-00":206}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":" * This class extends the Task class and is used to"},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":" * represent a single item that users can add to their list."},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":" */"},{"lineNumber":5,"author":{"gitId":"ming-00"},"content":"public class Todo extends Task {"},{"lineNumber":6,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"ming-00"},"content":"     * Overloaded constructor for Todo class."},{"lineNumber":8,"author":{"gitId":"ming-00"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"ming-00"},"content":"     * @param description description of Todo task."},{"lineNumber":10,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"ming-00"},"content":"    public Todo(String description) {"},{"lineNumber":12,"author":{"gitId":"ming-00"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":15,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"ming-00"},"content":"     * Overloaded constructor for Todo class."},{"lineNumber":17,"author":{"gitId":"ming-00"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"ming-00"},"content":"     * @param description description of Todo task."},{"lineNumber":19,"author":{"gitId":"ming-00"},"content":"     * @param isDone whether Todo is already completed."},{"lineNumber":20,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"ming-00"},"content":"    public Todo(String description, boolean isDone) {"},{"lineNumber":22,"author":{"gitId":"ming-00"},"content":"        super(description, isDone);"},{"lineNumber":23,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":25,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"ming-00"},"content":"     * Generates description to be saved in file for later retrieval."},{"lineNumber":27,"author":{"gitId":"ming-00"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"ming-00"},"content":"     * @return record of event to be saved in file."},{"lineNumber":29,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"ming-00"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"ming-00"},"content":"    public String getDescription() {"},{"lineNumber":32,"author":{"gitId":"ming-00"},"content":"        return \"Todo`\" + this.isDone + \"`\" + this.description;"},{"lineNumber":33,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":35,"author":{"gitId":"ming-00"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"ming-00"},"content":"    public String toString() {"},{"lineNumber":37,"author":{"gitId":"ming-00"},"content":"        return \"[T] \" + super.toString();"},{"lineNumber":38,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"ming-00"},"content":"}"}],"authorContributionMap":{"ming-00":39}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"import java.io.InputStream;"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":"import java.io.PrintStream;"},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":5,"author":{"gitId":"ming-00"},"content":"public class Ui {"},{"lineNumber":6,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":7,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"ming-00"},"content":"     * Prints a welcome message on the console when Duke is first opened."},{"lineNumber":9,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"ming-00"},"content":"    public static String printHello() {"},{"lineNumber":11,"author":{"gitId":"ming-00"},"content":"        return \"Hello, this is \" + \"Duke!\" + \" What can I do for you today? \" +"},{"lineNumber":12,"author":{"gitId":"ming-00"},"content":"                \"\\nFor the list of commands, type \\\"help\\\"\";"},{"lineNumber":13,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":15,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"ming-00"},"content":"     * Prints a goodbye message on the console when Duke is closed after detecting"},{"lineNumber":17,"author":{"gitId":"ming-00"},"content":"     * the exit command."},{"lineNumber":18,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"ming-00"},"content":"    public static String sayGoodbye() {"},{"lineNumber":20,"author":{"gitId":"ming-00"},"content":"        return \"Bye, see you soon! Don\u0027t miss me too much.\";"},{"lineNumber":21,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":23,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"ming-00"},"content":"     * Provides commands available to user."},{"lineNumber":25,"author":{"gitId":"ming-00"},"content":"     * @return list of all usable commands"},{"lineNumber":26,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"ming-00"},"content":"    public static String getHelp() {"},{"lineNumber":28,"author":{"gitId":"ming-00"},"content":"        String introduction \u003d \"Hey! Here are the commands you can give me:\\n\";"},{"lineNumber":29,"author":{"gitId":"ming-00"},"content":"        String addTodo \u003d \"To add a todo, write \\\"todo\\\" followed by a task description.\\n\";"},{"lineNumber":30,"author":{"gitId":"ming-00"},"content":"        String addTask \u003d \"To add a task with deadline, write \\\"task\\\" \" +"},{"lineNumber":31,"author":{"gitId":"ming-00"},"content":"                \"followed by task description, then \\\"by\\\" YYYY-MM-DD.\\n\";"},{"lineNumber":32,"author":{"gitId":"ming-00"},"content":"        String addEvent \u003d \"To add an event, write \\\"event\\\" \" +"},{"lineNumber":33,"author":{"gitId":"ming-00"},"content":"                \"followed by event description, then \\\"at\\\" YYYY-MM-DD.\\n\";"},{"lineNumber":34,"author":{"gitId":"ming-00"},"content":"        String showList \u003d \"Use \\\"list\\\" to see all your tasks.\\n\";"},{"lineNumber":35,"author":{"gitId":"ming-00"},"content":"        String markDone \u003d \"Use \\\"done\\\" and the task\u0027s index to mark your task as complete.\\n\";"},{"lineNumber":36,"author":{"gitId":"ming-00"},"content":"        String deleteItem \u003d \"Use \\\"delete\\\" and the task\u0027s index to delete your task.\\n\";"},{"lineNumber":37,"author":{"gitId":"ming-00"},"content":"        String bye \u003d \"Use \\\"bye\\\" to close me!\";"},{"lineNumber":38,"author":{"gitId":"ming-00"},"content":"        return introduction + addTodo + addTask + addEvent + showList + markDone + deleteItem + bye;"},{"lineNumber":39,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":41,"author":{"gitId":"ming-00"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"ming-00"},"content":"     * Prints a horizontal line to format text."},{"lineNumber":43,"author":{"gitId":"ming-00"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"ming-00"},"content":"    public static void formatText() {"},{"lineNumber":45,"author":{"gitId":"ming-00"},"content":"        System.out.println(\"******************************************************\");"},{"lineNumber":46,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"ming-00"},"content":"}"}],"authorContributionMap":{"ming-00":47}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"ming-00"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"ming-00"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":8,"author":{"gitId":"ming-00"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" minHeight \u003d \"-Infinity\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"ming-00"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"ming-00"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"ming-00"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"ming-00"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"ming-00"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"ming-00"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"ming-00"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"ming-00"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"ming-00":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"ming-00"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"ming-00"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"ming-00"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":9,"author":{"gitId":"ming-00"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"ming-00"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"ming-00"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"ming-00"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"ming-00"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"ming-00"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"ming-00"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"ming-00"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"ming-00"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"ming-00"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"ming-00"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"ming-00":19}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":5,"author":{"gitId":"ming-00"},"content":"public class TaskListTest {"},{"lineNumber":6,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":7,"author":{"gitId":"ming-00"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"ming-00"},"content":"    public void testAddItem() {"},{"lineNumber":9,"author":{"gitId":"ming-00"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":10,"author":{"gitId":"ming-00"},"content":"        taskList.addTask(\"todo homework\");"},{"lineNumber":11,"author":{"gitId":"ming-00"},"content":"        assertEquals(1, taskList.fetchTasks().size());"},{"lineNumber":12,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"ming-00"},"content":"}"}],"authorContributionMap":{"ming-00":13}},{"path":"src/test/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":""},{"lineNumber":5,"author":{"gitId":"ming-00"},"content":"public class TaskTest {"},{"lineNumber":6,"author":{"gitId":"ming-00"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"ming-00"},"content":"    public void testDescription() {"},{"lineNumber":8,"author":{"gitId":"ming-00"},"content":"        Task task \u003d new Task(\"test\");"},{"lineNumber":9,"author":{"gitId":"ming-00"},"content":"        assertEquals(\"false`test\", task.getDescription());"},{"lineNumber":10,"author":{"gitId":"ming-00"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"ming-00"},"content":"}"}],"authorContributionMap":{"ming-00":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ming-00"},"content":"todo buy milk"},{"lineNumber":2,"author":{"gitId":"ming-00"},"content":"deadline do essay /by tomorrow"},{"lineNumber":3,"author":{"gitId":"ming-00"},"content":"event go party /at Thursday evening"},{"lineNumber":4,"author":{"gitId":"ming-00"},"content":"done 1"},{"lineNumber":5,"author":{"gitId":"ming-00"},"content":"list"},{"lineNumber":6,"author":{"gitId":"ming-00"},"content":"todo"},{"lineNumber":7,"author":{"gitId":"ming-00"},"content":"bye"}],"authorContributionMap":{"ming-00":7}}]
