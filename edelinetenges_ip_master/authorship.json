[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"edelinetenges"},"content":"T | 0 | read book"},{"lineNumber":2,"author":{"gitId":"edelinetenges"},"content":"D | 1 | project | 2021-01-28"},{"lineNumber":3,"author":{"gitId":"edelinetenges"},"content":"E | 1 | birthday | 2021-03-07"},{"lineNumber":4,"author":{"gitId":"edelinetenges"},"content":"T | 1 | buy water"},{"lineNumber":5,"author":{"gitId":"edelinetenges"},"content":"E | 0 | meeting | 2021-05-14"}],"authorContributionMap":{"edelinetenges":5}},{"path":"src/main/java/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edelinetenges"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"edelinetenges"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":4,"author":{"gitId":"edelinetenges"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"edelinetenges"},"content":" * Represents deadline type of tasks."},{"lineNumber":6,"author":{"gitId":"edelinetenges"},"content":" */"},{"lineNumber":7,"author":{"gitId":"edelinetenges"},"content":"public class Deadlines extends Task{"},{"lineNumber":8,"author":{"gitId":"edelinetenges"},"content":"    protected LocalDate by;"},{"lineNumber":9,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":10,"author":{"gitId":"edelinetenges"},"content":"    public Deadlines(String description, LocalDate by) {"},{"lineNumber":11,"author":{"gitId":"edelinetenges"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"edelinetenges"},"content":"        this.by \u003d by;"},{"lineNumber":13,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":15,"author":{"gitId":"edelinetenges"},"content":"    public Deadlines(String description, LocalDate by, boolean isDone) {"},{"lineNumber":16,"author":{"gitId":"edelinetenges"},"content":"        super(description, isDone);"},{"lineNumber":17,"author":{"gitId":"edelinetenges"},"content":"        this.by \u003d by;"},{"lineNumber":18,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":20,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"edelinetenges"},"content":"     * Returns String format of deadline"},{"lineNumber":22,"author":{"gitId":"edelinetenges"},"content":"     * @return String format of deadline"},{"lineNumber":23,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"edelinetenges"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"edelinetenges"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"edelinetenges"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":27,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":29,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"edelinetenges"},"content":"     * Returns String of error message for empty description"},{"lineNumber":31,"author":{"gitId":"edelinetenges"},"content":"     * @return String of error message for empty description"},{"lineNumber":32,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"edelinetenges"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"edelinetenges"},"content":"    public String getEmptyDescError() {"},{"lineNumber":35,"author":{"gitId":"edelinetenges"},"content":"        return \"Oops! Description of deadline \" + super.getEmptyDescError();"},{"lineNumber":36,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":38,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"edelinetenges"},"content":"     * Formats data for saving into text file."},{"lineNumber":40,"author":{"gitId":"edelinetenges"},"content":"     * @return D | isDone | description | by"},{"lineNumber":41,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"edelinetenges"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"edelinetenges"},"content":"    public String formatData() {"},{"lineNumber":44,"author":{"gitId":"edelinetenges"},"content":"        return \"D | \" + super.formatData() + \" | \" + by;"},{"lineNumber":45,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"edelinetenges"},"content":"}"}],"authorContributionMap":{"edelinetenges":46}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edelinetenges"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"edelinetenges"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"edelinetenges"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"edelinetenges"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":7,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":8,"author":{"gitId":"edelinetenges"},"content":"    public static void main(String[] args) throws IOException {"},{"lineNumber":9,"author":{"gitId":"edelinetenges"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":10,"author":{"gitId":"edelinetenges"},"content":"        ui.printIntro();"},{"lineNumber":11,"author":{"gitId":"edelinetenges"},"content":"        Scanner scan \u003d new Scanner(System.in);"},{"lineNumber":12,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":13,"author":{"gitId":"edelinetenges"},"content":"        Storage storage \u003d new Storage(System.getProperty(\"user.dir\") + \"/data/duke.txt\");"},{"lineNumber":14,"author":{"gitId":"edelinetenges"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":15,"author":{"gitId":"edelinetenges"},"content":"        TaskList tasklist \u003d new TaskList(storage, ui);"},{"lineNumber":16,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":17,"author":{"gitId":"edelinetenges"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"edelinetenges"},"content":"            storage.loadFileContents(tasklist.tasks);"},{"lineNumber":19,"author":{"gitId":"edelinetenges"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":20,"author":{"gitId":"edelinetenges"},"content":"            storage.createFile();"},{"lineNumber":21,"author":{"gitId":"edelinetenges"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":23,"author":{"gitId":"edelinetenges"},"content":"        loop:"},{"lineNumber":24,"author":{"gitId":"edelinetenges"},"content":"        while (scan.hasNextLine()) {"},{"lineNumber":25,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":26,"author":{"gitId":"edelinetenges"},"content":"            ui.printLine();"},{"lineNumber":27,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":28,"author":{"gitId":"edelinetenges"},"content":"            ArrayList\u003cString\u003e result \u003d parser.parseInputToList(scan);"},{"lineNumber":29,"author":{"gitId":"edelinetenges"},"content":"            String command \u003d result.get(0);"},{"lineNumber":30,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":31,"author":{"gitId":"edelinetenges"},"content":"            String description, date;"},{"lineNumber":32,"author":{"gitId":"edelinetenges"},"content":"            int taskIndex;"},{"lineNumber":33,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":34,"author":{"gitId":"edelinetenges"},"content":"            switch (command) {"},{"lineNumber":35,"author":{"gitId":"edelinetenges"},"content":"                case \"bye\":"},{"lineNumber":36,"author":{"gitId":"edelinetenges"},"content":"                    ui.printBye();"},{"lineNumber":37,"author":{"gitId":"edelinetenges"},"content":"                    break loop;"},{"lineNumber":38,"author":{"gitId":"edelinetenges"},"content":"                case \"list\":"},{"lineNumber":39,"author":{"gitId":"edelinetenges"},"content":"                    tasklist.listTask();"},{"lineNumber":40,"author":{"gitId":"edelinetenges"},"content":"                    break;"},{"lineNumber":41,"author":{"gitId":"edelinetenges"},"content":"                case \"done\":"},{"lineNumber":42,"author":{"gitId":"edelinetenges"},"content":"                    taskIndex \u003d Integer.parseInt(result.get(1));"},{"lineNumber":43,"author":{"gitId":"edelinetenges"},"content":"                    tasklist.doneTask(taskIndex);"},{"lineNumber":44,"author":{"gitId":"edelinetenges"},"content":"                    break;"},{"lineNumber":45,"author":{"gitId":"edelinetenges"},"content":"                case \"delete\":"},{"lineNumber":46,"author":{"gitId":"edelinetenges"},"content":"                    taskIndex \u003d Integer.parseInt(result.get(1));"},{"lineNumber":47,"author":{"gitId":"edelinetenges"},"content":"                    tasklist.deleteTask(taskIndex);"},{"lineNumber":48,"author":{"gitId":"edelinetenges"},"content":"                    break;"},{"lineNumber":49,"author":{"gitId":"edelinetenges"},"content":"                case \"todo\":"},{"lineNumber":50,"author":{"gitId":"edelinetenges"},"content":"                    description \u003d result.get(1);"},{"lineNumber":51,"author":{"gitId":"edelinetenges"},"content":"                    tasklist.addTodo(description);"},{"lineNumber":52,"author":{"gitId":"edelinetenges"},"content":"                    break;"},{"lineNumber":53,"author":{"gitId":"edelinetenges"},"content":"                case \"deadline\":"},{"lineNumber":54,"author":{"gitId":"edelinetenges"},"content":"                    description \u003d result.get(1);"},{"lineNumber":55,"author":{"gitId":"edelinetenges"},"content":"                    date \u003d result.get(2);"},{"lineNumber":56,"author":{"gitId":"edelinetenges"},"content":"                    tasklist.addDeadline(description, date);"},{"lineNumber":57,"author":{"gitId":"edelinetenges"},"content":"                    break;"},{"lineNumber":58,"author":{"gitId":"edelinetenges"},"content":"                case \"event\":"},{"lineNumber":59,"author":{"gitId":"edelinetenges"},"content":"                    description \u003d result.get(1);"},{"lineNumber":60,"author":{"gitId":"edelinetenges"},"content":"                    date \u003d result.get(2);"},{"lineNumber":61,"author":{"gitId":"edelinetenges"},"content":"                    tasklist.addEvent(description, date);"},{"lineNumber":62,"author":{"gitId":"edelinetenges"},"content":"                    break;"},{"lineNumber":63,"author":{"gitId":"edelinetenges"},"content":"                default:"},{"lineNumber":64,"author":{"gitId":"edelinetenges"},"content":"                    ui.printIdkError();"},{"lineNumber":65,"author":{"gitId":"edelinetenges"},"content":"                    break;"},{"lineNumber":66,"author":{"gitId":"edelinetenges"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"edelinetenges"},"content":"            ui.printLine();"},{"lineNumber":68,"author":{"gitId":"edelinetenges"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"edelinetenges":67,"-":3}},{"path":"src/main/java/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edelinetenges"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"edelinetenges"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":4,"author":{"gitId":"edelinetenges"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"edelinetenges"},"content":" * Represents event type of tasks."},{"lineNumber":6,"author":{"gitId":"edelinetenges"},"content":" */"},{"lineNumber":7,"author":{"gitId":"edelinetenges"},"content":"public class Events extends Task {"},{"lineNumber":8,"author":{"gitId":"edelinetenges"},"content":"    LocalDate at;"},{"lineNumber":9,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":10,"author":{"gitId":"edelinetenges"},"content":"    public Events(String description, LocalDate at) {"},{"lineNumber":11,"author":{"gitId":"edelinetenges"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"edelinetenges"},"content":"        this.at \u003d at;"},{"lineNumber":13,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":15,"author":{"gitId":"edelinetenges"},"content":"    public Events(String description, LocalDate at, boolean isDone) {"},{"lineNumber":16,"author":{"gitId":"edelinetenges"},"content":"        super(description, isDone);"},{"lineNumber":17,"author":{"gitId":"edelinetenges"},"content":"        this.at \u003d at;"},{"lineNumber":18,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":20,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"edelinetenges"},"content":"     * Returns String format of event"},{"lineNumber":22,"author":{"gitId":"edelinetenges"},"content":"     * @return String format of event"},{"lineNumber":23,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"edelinetenges"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"edelinetenges"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"edelinetenges"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":27,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":29,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"edelinetenges"},"content":"     * Returns String of error message for empty description"},{"lineNumber":31,"author":{"gitId":"edelinetenges"},"content":"     * @return String of error message for empty description"},{"lineNumber":32,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"edelinetenges"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"edelinetenges"},"content":"    public String getEmptyDescError() {"},{"lineNumber":35,"author":{"gitId":"edelinetenges"},"content":"        return \"Oops! Description of event \" + super.getEmptyDescError();"},{"lineNumber":36,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":38,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"edelinetenges"},"content":"     * Formats data for saving into text file."},{"lineNumber":40,"author":{"gitId":"edelinetenges"},"content":"     * @return E | isDone | description | at"},{"lineNumber":41,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"edelinetenges"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"edelinetenges"},"content":"    public String formatData() {"},{"lineNumber":44,"author":{"gitId":"edelinetenges"},"content":"        return \"E | \" + super.formatData() + \" | \" + at;"},{"lineNumber":45,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"edelinetenges"},"content":"}"}],"authorContributionMap":{"edelinetenges":46}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edelinetenges"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"edelinetenges"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":4,"author":{"gitId":"edelinetenges"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"edelinetenges"},"content":" * Deals with making sense of the user command."},{"lineNumber":6,"author":{"gitId":"edelinetenges"},"content":" */"},{"lineNumber":7,"author":{"gitId":"edelinetenges"},"content":"public class Parser {"},{"lineNumber":8,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":9,"author":{"gitId":"edelinetenges"},"content":"    public Parser() {}"},{"lineNumber":10,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":11,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"edelinetenges"},"content":"     * Parses user input Strings into an arraylist of Strings for easier access."},{"lineNumber":13,"author":{"gitId":"edelinetenges"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"edelinetenges"},"content":"     * @param scan the scanner used to scan user input."},{"lineNumber":15,"author":{"gitId":"edelinetenges"},"content":"     * @return an arraylist of Strings."},{"lineNumber":16,"author":{"gitId":"edelinetenges"},"content":"     * Elements of the arraylist are in the sequence:"},{"lineNumber":17,"author":{"gitId":"edelinetenges"},"content":"     * command name, task index/description, date/error name (if applicable)."},{"lineNumber":18,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"edelinetenges"},"content":"    public ArrayList\u003cString\u003e parseInputToList(Scanner scan) {"},{"lineNumber":20,"author":{"gitId":"edelinetenges"},"content":"        String input \u003d scan.nextLine();"},{"lineNumber":21,"author":{"gitId":"edelinetenges"},"content":"        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();"},{"lineNumber":22,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":23,"author":{"gitId":"edelinetenges"},"content":"        switch (input) {"},{"lineNumber":24,"author":{"gitId":"edelinetenges"},"content":"            case \"bye\":"},{"lineNumber":25,"author":{"gitId":"edelinetenges"},"content":"            case \"list\":"},{"lineNumber":26,"author":{"gitId":"edelinetenges"},"content":"                result.add(input);"},{"lineNumber":27,"author":{"gitId":"edelinetenges"},"content":"                break;"},{"lineNumber":28,"author":{"gitId":"edelinetenges"},"content":"            default:"},{"lineNumber":29,"author":{"gitId":"edelinetenges"},"content":"                try {"},{"lineNumber":30,"author":{"gitId":"edelinetenges"},"content":"                    String[] inputArr \u003d input.split(\" \", 2);"},{"lineNumber":31,"author":{"gitId":"edelinetenges"},"content":"                    String task \u003d inputArr[0];"},{"lineNumber":32,"author":{"gitId":"edelinetenges"},"content":"                    result.add(task);"},{"lineNumber":33,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":34,"author":{"gitId":"edelinetenges"},"content":"                    String scannedInput \u003d inputArr[1];"},{"lineNumber":35,"author":{"gitId":"edelinetenges"},"content":"                    String description, date, taskIndex;"},{"lineNumber":36,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":37,"author":{"gitId":"edelinetenges"},"content":"                    switch (task) {"},{"lineNumber":38,"author":{"gitId":"edelinetenges"},"content":"                        case \"done\":"},{"lineNumber":39,"author":{"gitId":"edelinetenges"},"content":"                        case \"delete\":"},{"lineNumber":40,"author":{"gitId":"edelinetenges"},"content":"                            taskIndex \u003d Integer.toString(Integer.parseInt(scannedInput) - 1);"},{"lineNumber":41,"author":{"gitId":"edelinetenges"},"content":"                            result.add(taskIndex);"},{"lineNumber":42,"author":{"gitId":"edelinetenges"},"content":"                            break;"},{"lineNumber":43,"author":{"gitId":"edelinetenges"},"content":"                        case \"todo\":"},{"lineNumber":44,"author":{"gitId":"edelinetenges"},"content":"                            description \u003d scannedInput;"},{"lineNumber":45,"author":{"gitId":"edelinetenges"},"content":"                            result.add(description);"},{"lineNumber":46,"author":{"gitId":"edelinetenges"},"content":"                            break;"},{"lineNumber":47,"author":{"gitId":"edelinetenges"},"content":"                        case \"deadline\":"},{"lineNumber":48,"author":{"gitId":"edelinetenges"},"content":"                            String[] arrOfInputD \u003d scannedInput.split(\" /by \");"},{"lineNumber":49,"author":{"gitId":"edelinetenges"},"content":"                            description \u003d arrOfInputD[0];"},{"lineNumber":50,"author":{"gitId":"edelinetenges"},"content":"                            date \u003d arrOfInputD[1];"},{"lineNumber":51,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":52,"author":{"gitId":"edelinetenges"},"content":"                            result.add(description);"},{"lineNumber":53,"author":{"gitId":"edelinetenges"},"content":"                            result.add(date);"},{"lineNumber":54,"author":{"gitId":"edelinetenges"},"content":"                            break;"},{"lineNumber":55,"author":{"gitId":"edelinetenges"},"content":"                        case \"event\":"},{"lineNumber":56,"author":{"gitId":"edelinetenges"},"content":"                            String[] arrOfInputE \u003d scannedInput.split(\" /at \");"},{"lineNumber":57,"author":{"gitId":"edelinetenges"},"content":"                            description \u003d arrOfInputE[0];"},{"lineNumber":58,"author":{"gitId":"edelinetenges"},"content":"                            date \u003d arrOfInputE[1];"},{"lineNumber":59,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":60,"author":{"gitId":"edelinetenges"},"content":"                            result.add(description);"},{"lineNumber":61,"author":{"gitId":"edelinetenges"},"content":"                            result.add(date);"},{"lineNumber":62,"author":{"gitId":"edelinetenges"},"content":"                            break;"},{"lineNumber":63,"author":{"gitId":"edelinetenges"},"content":"                        default:"},{"lineNumber":64,"author":{"gitId":"edelinetenges"},"content":"                            break;"},{"lineNumber":65,"author":{"gitId":"edelinetenges"},"content":"                    }"},{"lineNumber":66,"author":{"gitId":"edelinetenges"},"content":"                    break;"},{"lineNumber":67,"author":{"gitId":"edelinetenges"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":68,"author":{"gitId":"edelinetenges"},"content":"                    if (input.equals(\"todo\") || input.equals(\"deadline\") || input.equals(\"event\")"},{"lineNumber":69,"author":{"gitId":"edelinetenges"},"content":"                            || input.equals(\"done\") || input.equals(\"delete\")) {"},{"lineNumber":70,"author":{"gitId":"edelinetenges"},"content":"                        result.add(\"emptyDescError\");"},{"lineNumber":71,"author":{"gitId":"edelinetenges"},"content":"                    } else {"},{"lineNumber":72,"author":{"gitId":"edelinetenges"},"content":"                        result.add(\"idkError\");"},{"lineNumber":73,"author":{"gitId":"edelinetenges"},"content":"                    }"},{"lineNumber":74,"author":{"gitId":"edelinetenges"},"content":"                }"},{"lineNumber":75,"author":{"gitId":"edelinetenges"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"edelinetenges"},"content":"        return result;"},{"lineNumber":77,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":79,"author":{"gitId":"edelinetenges"},"content":"}"}],"authorContributionMap":{"edelinetenges":79}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edelinetenges"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"edelinetenges"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"edelinetenges"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"edelinetenges"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"edelinetenges"},"content":"import java.nio.file.Files;"},{"lineNumber":6,"author":{"gitId":"edelinetenges"},"content":"import java.nio.file.Path;"},{"lineNumber":7,"author":{"gitId":"edelinetenges"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitId":"edelinetenges"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"edelinetenges"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"edelinetenges"},"content":"import java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":12,"author":{"gitId":"edelinetenges"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"edelinetenges"},"content":" * Deals with loading tasks from the file and saving tasks in the file."},{"lineNumber":14,"author":{"gitId":"edelinetenges"},"content":" */"},{"lineNumber":15,"author":{"gitId":"edelinetenges"},"content":"public class Storage {"},{"lineNumber":16,"author":{"gitId":"edelinetenges"},"content":"    public String pathString;"},{"lineNumber":17,"author":{"gitId":"edelinetenges"},"content":"    public StringBuffer stringBufferOfData;"},{"lineNumber":18,"author":{"gitId":"edelinetenges"},"content":"    public int numTasks;"},{"lineNumber":19,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":20,"author":{"gitId":"edelinetenges"},"content":"    public Storage(String pathString) {"},{"lineNumber":21,"author":{"gitId":"edelinetenges"},"content":"        this.pathString \u003d pathString;"},{"lineNumber":22,"author":{"gitId":"edelinetenges"},"content":"        stringBufferOfData \u003d new StringBuffer();"},{"lineNumber":23,"author":{"gitId":"edelinetenges"},"content":"        numTasks \u003d 0;"},{"lineNumber":24,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":26,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"edelinetenges"},"content":"     * Creates data directory and text file."},{"lineNumber":28,"author":{"gitId":"edelinetenges"},"content":"     * @throws IOException for createDirectories and createFile methods."},{"lineNumber":29,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"edelinetenges"},"content":"    public void createFile() throws IOException {"},{"lineNumber":31,"author":{"gitId":"edelinetenges"},"content":"        Path dirPath \u003d Paths.get(System.getProperty(\"user.dir\") + \"/data\");"},{"lineNumber":32,"author":{"gitId":"edelinetenges"},"content":"        Files.createDirectories(dirPath);"},{"lineNumber":33,"author":{"gitId":"edelinetenges"},"content":"        Files.createFile(Paths.get(pathString));"},{"lineNumber":34,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":36,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"edelinetenges"},"content":"     * Scans file for any existing tasks,"},{"lineNumber":38,"author":{"gitId":"edelinetenges"},"content":"     * parses data to separate task type, boolean isDone and description,"},{"lineNumber":39,"author":{"gitId":"edelinetenges"},"content":"     * adds ToDos/Deadlines/Events objects to arraylist of tasks."},{"lineNumber":40,"author":{"gitId":"edelinetenges"},"content":"     * Adds data to a StringBuffer."},{"lineNumber":41,"author":{"gitId":"edelinetenges"},"content":"     * Increments number of tasks accordingly."},{"lineNumber":42,"author":{"gitId":"edelinetenges"},"content":"     * @param tasks arraylist to add tasks to."},{"lineNumber":43,"author":{"gitId":"edelinetenges"},"content":"     * @throws FileNotFoundException if file does not exist yet."},{"lineNumber":44,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"edelinetenges"},"content":"    public void loadFileContents(ArrayList\u003cTask\u003e tasks) throws FileNotFoundException {"},{"lineNumber":46,"author":{"gitId":"edelinetenges"},"content":"        File file \u003d new File(pathString);"},{"lineNumber":47,"author":{"gitId":"edelinetenges"},"content":"        Scanner scanFile \u003d new Scanner(file);"},{"lineNumber":48,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":49,"author":{"gitId":"edelinetenges"},"content":"        while (scanFile.hasNext()) {"},{"lineNumber":50,"author":{"gitId":"edelinetenges"},"content":"            String fileData \u003d scanFile.nextLine();"},{"lineNumber":51,"author":{"gitId":"edelinetenges"},"content":"            if (numTasks \u003c\u003d 0) {"},{"lineNumber":52,"author":{"gitId":"edelinetenges"},"content":"                stringBufferOfData.append(fileData);"},{"lineNumber":53,"author":{"gitId":"edelinetenges"},"content":"            } else {"},{"lineNumber":54,"author":{"gitId":"edelinetenges"},"content":"                stringBufferOfData.append(\"\\n\").append(fileData);"},{"lineNumber":55,"author":{"gitId":"edelinetenges"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":57,"author":{"gitId":"edelinetenges"},"content":"            String[] dataArr \u003d fileData.split(\" \\\\| \", 4);"},{"lineNumber":58,"author":{"gitId":"edelinetenges"},"content":"            String taskType \u003d dataArr[0];"},{"lineNumber":59,"author":{"gitId":"edelinetenges"},"content":"            String isDone \u003d dataArr[1];"},{"lineNumber":60,"author":{"gitId":"edelinetenges"},"content":"            String desc \u003d dataArr[2];"},{"lineNumber":61,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":62,"author":{"gitId":"edelinetenges"},"content":"            switch (taskType) {"},{"lineNumber":63,"author":{"gitId":"edelinetenges"},"content":"                case \"T\":"},{"lineNumber":64,"author":{"gitId":"edelinetenges"},"content":"                    ToDos newTodo \u003d new ToDos(desc, isDone.equals(\"1\"));"},{"lineNumber":65,"author":{"gitId":"edelinetenges"},"content":"                    tasks.add(newTodo);"},{"lineNumber":66,"author":{"gitId":"edelinetenges"},"content":"                    numTasks++;"},{"lineNumber":67,"author":{"gitId":"edelinetenges"},"content":"                    break;"},{"lineNumber":68,"author":{"gitId":"edelinetenges"},"content":"                case \"D\":"},{"lineNumber":69,"author":{"gitId":"edelinetenges"},"content":"                    LocalDate by \u003d LocalDate.parse(dataArr[3]);"},{"lineNumber":70,"author":{"gitId":"edelinetenges"},"content":"                    Deadlines newDeadline \u003d new Deadlines(desc, by, isDone.equals(\"1\"));"},{"lineNumber":71,"author":{"gitId":"edelinetenges"},"content":"                    tasks.add(newDeadline);"},{"lineNumber":72,"author":{"gitId":"edelinetenges"},"content":"                    numTasks++;"},{"lineNumber":73,"author":{"gitId":"edelinetenges"},"content":"                    break;"},{"lineNumber":74,"author":{"gitId":"edelinetenges"},"content":"                case \"E\":"},{"lineNumber":75,"author":{"gitId":"edelinetenges"},"content":"                    LocalDate at \u003d LocalDate.parse(dataArr[3]);"},{"lineNumber":76,"author":{"gitId":"edelinetenges"},"content":"                    Events newEvent \u003d new Events(desc, at, isDone.equals(\"1\"));"},{"lineNumber":77,"author":{"gitId":"edelinetenges"},"content":"                    tasks.add(newEvent);"},{"lineNumber":78,"author":{"gitId":"edelinetenges"},"content":"                    numTasks++;"},{"lineNumber":79,"author":{"gitId":"edelinetenges"},"content":"                    break;"},{"lineNumber":80,"author":{"gitId":"edelinetenges"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"edelinetenges"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":84,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"edelinetenges"},"content":"     * Writes or appends to file"},{"lineNumber":86,"author":{"gitId":"edelinetenges"},"content":"     * depending on whether there is existing data in the file."},{"lineNumber":87,"author":{"gitId":"edelinetenges"},"content":"     * Appends text to StringBuffer."},{"lineNumber":88,"author":{"gitId":"edelinetenges"},"content":"     * @param data text to be added to the file."},{"lineNumber":89,"author":{"gitId":"edelinetenges"},"content":"     * @throws IOException for FileWriter."},{"lineNumber":90,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"edelinetenges"},"content":"    public void addToFile(String data) throws IOException {"},{"lineNumber":92,"author":{"gitId":"edelinetenges"},"content":"        FileWriter fw;"},{"lineNumber":93,"author":{"gitId":"edelinetenges"},"content":"        if (numTasks \u003c\u003d 0) {"},{"lineNumber":94,"author":{"gitId":"edelinetenges"},"content":"            fw \u003d new FileWriter(pathString);"},{"lineNumber":95,"author":{"gitId":"edelinetenges"},"content":"            fw.write(data);"},{"lineNumber":96,"author":{"gitId":"edelinetenges"},"content":"            stringBufferOfData.append(data);"},{"lineNumber":97,"author":{"gitId":"edelinetenges"},"content":"        } else {"},{"lineNumber":98,"author":{"gitId":"edelinetenges"},"content":"            fw \u003d new FileWriter(pathString, true);"},{"lineNumber":99,"author":{"gitId":"edelinetenges"},"content":"            fw.write(System.lineSeparator() + data);"},{"lineNumber":100,"author":{"gitId":"edelinetenges"},"content":"            stringBufferOfData.append(\"\\n\").append(data);"},{"lineNumber":101,"author":{"gitId":"edelinetenges"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":103,"author":{"gitId":"edelinetenges"},"content":"        fw.close();"},{"lineNumber":104,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":106,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"edelinetenges"},"content":"     * Replaces text in StringBuffer"},{"lineNumber":108,"author":{"gitId":"edelinetenges"},"content":"     * and writes to the file."},{"lineNumber":109,"author":{"gitId":"edelinetenges"},"content":"     * @param before text to be replaced."},{"lineNumber":110,"author":{"gitId":"edelinetenges"},"content":"     * @param after new replacement text."},{"lineNumber":111,"author":{"gitId":"edelinetenges"},"content":"     * @throws IOException for FileWriter."},{"lineNumber":112,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":113,"author":{"gitId":"edelinetenges"},"content":"    public void modifyFile(String before, String after) throws IOException {"},{"lineNumber":114,"author":{"gitId":"edelinetenges"},"content":"        int startIndex \u003d stringBufferOfData.indexOf(before);"},{"lineNumber":115,"author":{"gitId":"edelinetenges"},"content":"        int endIndex \u003d startIndex + before.length();"},{"lineNumber":116,"author":{"gitId":"edelinetenges"},"content":"        stringBufferOfData.replace(startIndex, endIndex, after);"},{"lineNumber":117,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":118,"author":{"gitId":"edelinetenges"},"content":"        FileWriter fw \u003d new FileWriter(pathString);"},{"lineNumber":119,"author":{"gitId":"edelinetenges"},"content":"        fw.write(stringBufferOfData.toString());"},{"lineNumber":120,"author":{"gitId":"edelinetenges"},"content":"        fw.close();"},{"lineNumber":121,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":123,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"edelinetenges"},"content":"     * Deletes specified text from StringBuffer,"},{"lineNumber":125,"author":{"gitId":"edelinetenges"},"content":"     * and writes to the file."},{"lineNumber":126,"author":{"gitId":"edelinetenges"},"content":"     * @param data text to be deleted."},{"lineNumber":127,"author":{"gitId":"edelinetenges"},"content":"     * @throws IOException for FileWriter."},{"lineNumber":128,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":129,"author":{"gitId":"edelinetenges"},"content":"    public void deleteFromFile(String data) throws IOException {"},{"lineNumber":130,"author":{"gitId":"edelinetenges"},"content":"        int startIndex \u003d stringBufferOfData.indexOf(data);"},{"lineNumber":131,"author":{"gitId":"edelinetenges"},"content":"        int endIndex \u003d startIndex + data.length() + 1;"},{"lineNumber":132,"author":{"gitId":"edelinetenges"},"content":"        stringBufferOfData.delete(startIndex, endIndex);"},{"lineNumber":133,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":134,"author":{"gitId":"edelinetenges"},"content":"        FileWriter fw \u003d new FileWriter(pathString);"},{"lineNumber":135,"author":{"gitId":"edelinetenges"},"content":"        fw.write(stringBufferOfData.toString());"},{"lineNumber":136,"author":{"gitId":"edelinetenges"},"content":"        fw.close();"},{"lineNumber":137,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"edelinetenges"},"content":"}"}],"authorContributionMap":{"edelinetenges":138}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edelinetenges"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"edelinetenges"},"content":" * Represents tasks."},{"lineNumber":3,"author":{"gitId":"edelinetenges"},"content":" */"},{"lineNumber":4,"author":{"gitId":"edelinetenges"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"edelinetenges"},"content":"    protected String description;"},{"lineNumber":6,"author":{"gitId":"edelinetenges"},"content":"    protected boolean isDone;"},{"lineNumber":7,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":8,"author":{"gitId":"edelinetenges"},"content":"    public Task(String description) {"},{"lineNumber":9,"author":{"gitId":"edelinetenges"},"content":"        this.description \u003d description;"},{"lineNumber":10,"author":{"gitId":"edelinetenges"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":13,"author":{"gitId":"edelinetenges"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":14,"author":{"gitId":"edelinetenges"},"content":"        this.description \u003d description;"},{"lineNumber":15,"author":{"gitId":"edelinetenges"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":16,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":18,"author":{"gitId":"edelinetenges"},"content":"    public String getStatusIcon() {"},{"lineNumber":19,"author":{"gitId":"edelinetenges"},"content":"        return (isDone ? \"X\" : \" \");"},{"lineNumber":20,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":22,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"edelinetenges"},"content":"     * Returns String format of task"},{"lineNumber":24,"author":{"gitId":"edelinetenges"},"content":"     * @return String format of task"},{"lineNumber":25,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"edelinetenges"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"edelinetenges"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":28,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":30,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"edelinetenges"},"content":"     * Changes boolean isDone to true."},{"lineNumber":32,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"edelinetenges"},"content":"    public void markAsDone() {"},{"lineNumber":34,"author":{"gitId":"edelinetenges"},"content":"        this.isDone \u003d true;"},{"lineNumber":35,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":37,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"edelinetenges"},"content":"     * Returns String of error message for empty description"},{"lineNumber":39,"author":{"gitId":"edelinetenges"},"content":"     * @return String of error message for empty description"},{"lineNumber":40,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"edelinetenges"},"content":"    public String getEmptyDescError() {"},{"lineNumber":42,"author":{"gitId":"edelinetenges"},"content":"        return \"cannot be empty.\";"},{"lineNumber":43,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":45,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"edelinetenges"},"content":"     * Formats data for saving into text file."},{"lineNumber":47,"author":{"gitId":"edelinetenges"},"content":"     * @return isDone | description"},{"lineNumber":48,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"edelinetenges"},"content":"    public String formatData() {"},{"lineNumber":50,"author":{"gitId":"edelinetenges"},"content":"        return (isDone ? \"1\" : \"0\") + \" | \" + description;"},{"lineNumber":51,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"edelinetenges"},"content":"}"}],"authorContributionMap":{"edelinetenges":52}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edelinetenges"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"edelinetenges"},"content":"import java.time.LocalDate;"},{"lineNumber":3,"author":{"gitId":"edelinetenges"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"edelinetenges"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":6,"author":{"gitId":"edelinetenges"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"edelinetenges"},"content":" * Contains the task list and all operations to be performed on tasks"},{"lineNumber":8,"author":{"gitId":"edelinetenges"},"content":" * e.g. list tasks, mark as done, delete, add todos, deadlines and events."},{"lineNumber":9,"author":{"gitId":"edelinetenges"},"content":" */"},{"lineNumber":10,"author":{"gitId":"edelinetenges"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"edelinetenges"},"content":"    public ArrayList\u003cTask\u003e tasks;"},{"lineNumber":12,"author":{"gitId":"edelinetenges"},"content":"    public Storage storage;"},{"lineNumber":13,"author":{"gitId":"edelinetenges"},"content":"    public Ui ui;"},{"lineNumber":14,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":15,"author":{"gitId":"edelinetenges"},"content":"    public TaskList(Storage storage, Ui ui) {"},{"lineNumber":16,"author":{"gitId":"edelinetenges"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"edelinetenges"},"content":"        this.storage \u003d storage;"},{"lineNumber":18,"author":{"gitId":"edelinetenges"},"content":"        this.ui \u003d ui;"},{"lineNumber":19,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":21,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"edelinetenges"},"content":"     * Prints list of tasks saved in file."},{"lineNumber":23,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"edelinetenges"},"content":"    public void listTask() {"},{"lineNumber":25,"author":{"gitId":"edelinetenges"},"content":"        ui.printList(tasks, storage.numTasks);"},{"lineNumber":26,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":28,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"edelinetenges"},"content":"     * Marks task as done by modifying task arraylist and file data."},{"lineNumber":30,"author":{"gitId":"edelinetenges"},"content":"     * @param taskIndex arraylist index of the selected task."},{"lineNumber":31,"author":{"gitId":"edelinetenges"},"content":"     * @throws IOException for modifying data."},{"lineNumber":32,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"edelinetenges"},"content":"    public void doneTask(int taskIndex) throws IOException {"},{"lineNumber":34,"author":{"gitId":"edelinetenges"},"content":"        String before \u003d tasks.get(taskIndex).formatData();"},{"lineNumber":35,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":36,"author":{"gitId":"edelinetenges"},"content":"        tasks.get(taskIndex).markAsDone();"},{"lineNumber":37,"author":{"gitId":"edelinetenges"},"content":"        String after \u003d tasks.get(taskIndex).formatData();"},{"lineNumber":38,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":39,"author":{"gitId":"edelinetenges"},"content":"        storage.modifyFile(before, after);"},{"lineNumber":40,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":41,"author":{"gitId":"edelinetenges"},"content":"        ui.printDone(tasks, taskIndex);"},{"lineNumber":42,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":44,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"edelinetenges"},"content":"     * Deletes task by removing from task list and file data."},{"lineNumber":46,"author":{"gitId":"edelinetenges"},"content":"     * Decrements number of tasks."},{"lineNumber":47,"author":{"gitId":"edelinetenges"},"content":"     * @param taskIndex arraylist index of the selected task."},{"lineNumber":48,"author":{"gitId":"edelinetenges"},"content":"     * @throws IOException for deleting from file."},{"lineNumber":49,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"edelinetenges"},"content":"    public void deleteTask(int taskIndex) throws IOException {"},{"lineNumber":51,"author":{"gitId":"edelinetenges"},"content":"        Task deletedTask \u003d tasks.get(taskIndex);"},{"lineNumber":52,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":53,"author":{"gitId":"edelinetenges"},"content":"        storage.deleteFromFile(deletedTask.formatData());"},{"lineNumber":54,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":55,"author":{"gitId":"edelinetenges"},"content":"        tasks.remove(taskIndex);"},{"lineNumber":56,"author":{"gitId":"edelinetenges"},"content":"        ui.printDelete(deletedTask.toString());"},{"lineNumber":57,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":58,"author":{"gitId":"edelinetenges"},"content":"        storage.numTasks--;"},{"lineNumber":59,"author":{"gitId":"edelinetenges"},"content":"        ui.printNumTasks(storage.numTasks);"},{"lineNumber":60,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":62,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"edelinetenges"},"content":"     * Creates ToDos object to add to task list and file data."},{"lineNumber":64,"author":{"gitId":"edelinetenges"},"content":"     * If description is empty, will print prompt to tell user."},{"lineNumber":65,"author":{"gitId":"edelinetenges"},"content":"     * If task addition is successful, increments number of tasks."},{"lineNumber":66,"author":{"gitId":"edelinetenges"},"content":"     * @param description description of todo."},{"lineNumber":67,"author":{"gitId":"edelinetenges"},"content":"     * @throws IOException for adding to file."},{"lineNumber":68,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"edelinetenges"},"content":"    public void addTodo(String description) throws IOException {"},{"lineNumber":70,"author":{"gitId":"edelinetenges"},"content":"        if (description.equals(\"emptyDescError\")) {"},{"lineNumber":71,"author":{"gitId":"edelinetenges"},"content":"            ui.printEmptyDescError(\"todo\");"},{"lineNumber":72,"author":{"gitId":"edelinetenges"},"content":"        } else {"},{"lineNumber":73,"author":{"gitId":"edelinetenges"},"content":"            ToDos todo \u003d new ToDos(description);"},{"lineNumber":74,"author":{"gitId":"edelinetenges"},"content":"            tasks.add(todo);"},{"lineNumber":75,"author":{"gitId":"edelinetenges"},"content":"            ui.printAdd(tasks, storage.numTasks);"},{"lineNumber":76,"author":{"gitId":"edelinetenges"},"content":"            storage.addToFile(todo.formatData());"},{"lineNumber":77,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":78,"author":{"gitId":"edelinetenges"},"content":"            storage.numTasks++;"},{"lineNumber":79,"author":{"gitId":"edelinetenges"},"content":"            ui.printNumTasks(storage.numTasks);"},{"lineNumber":80,"author":{"gitId":"edelinetenges"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":83,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"edelinetenges"},"content":"     * Creates Deadline object to add to task list and file data."},{"lineNumber":85,"author":{"gitId":"edelinetenges"},"content":"     * If description is empty, will print prompt to tell user."},{"lineNumber":86,"author":{"gitId":"edelinetenges"},"content":"     * If date is in wrong format, will print prompt to tell user."},{"lineNumber":87,"author":{"gitId":"edelinetenges"},"content":"     * If task addition is successful, increments number of tasks."},{"lineNumber":88,"author":{"gitId":"edelinetenges"},"content":"     * @param description description of deadline."},{"lineNumber":89,"author":{"gitId":"edelinetenges"},"content":"     * @param date in YYYY-MM-DD format."},{"lineNumber":90,"author":{"gitId":"edelinetenges"},"content":"     * @throws IOException for adding to file."},{"lineNumber":91,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"edelinetenges"},"content":"    public void addDeadline(String description, String date) throws IOException {"},{"lineNumber":93,"author":{"gitId":"edelinetenges"},"content":"        if (description.equals(\"emptyDescError\")) {"},{"lineNumber":94,"author":{"gitId":"edelinetenges"},"content":"            ui.printEmptyDescError(\"deadline\");"},{"lineNumber":95,"author":{"gitId":"edelinetenges"},"content":"        } else {"},{"lineNumber":96,"author":{"gitId":"edelinetenges"},"content":"            LocalDate localDate;"},{"lineNumber":97,"author":{"gitId":"edelinetenges"},"content":"            try {"},{"lineNumber":98,"author":{"gitId":"edelinetenges"},"content":"                localDate \u003d LocalDate.parse(date);"},{"lineNumber":99,"author":{"gitId":"edelinetenges"},"content":"                Deadlines deadline \u003d new Deadlines(description, localDate);"},{"lineNumber":100,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":101,"author":{"gitId":"edelinetenges"},"content":"                tasks.add(deadline);"},{"lineNumber":102,"author":{"gitId":"edelinetenges"},"content":"                ui.printAdd(tasks, storage.numTasks);"},{"lineNumber":103,"author":{"gitId":"edelinetenges"},"content":"                storage.addToFile(deadline.formatData());"},{"lineNumber":104,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":105,"author":{"gitId":"edelinetenges"},"content":"                storage.numTasks++;"},{"lineNumber":106,"author":{"gitId":"edelinetenges"},"content":"                ui.printNumTasks(storage.numTasks);"},{"lineNumber":107,"author":{"gitId":"edelinetenges"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":108,"author":{"gitId":"edelinetenges"},"content":"                ui.printDateError();"},{"lineNumber":109,"author":{"gitId":"edelinetenges"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"edelinetenges"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":113,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"edelinetenges"},"content":"     * Creates Deadline object to add to task list and file data."},{"lineNumber":115,"author":{"gitId":"edelinetenges"},"content":"     * If description is empty, will print prompt to tell user."},{"lineNumber":116,"author":{"gitId":"edelinetenges"},"content":"     * If date is in wrong format, will print prompt to tell user."},{"lineNumber":117,"author":{"gitId":"edelinetenges"},"content":"     * If task addition is successful, increments number of tasks."},{"lineNumber":118,"author":{"gitId":"edelinetenges"},"content":"     * @param description description of event."},{"lineNumber":119,"author":{"gitId":"edelinetenges"},"content":"     * @param date in YYYY-MM-DD format."},{"lineNumber":120,"author":{"gitId":"edelinetenges"},"content":"     * @throws IOException for adding to file."},{"lineNumber":121,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":122,"author":{"gitId":"edelinetenges"},"content":"    public void addEvent(String description, String date) throws IOException {"},{"lineNumber":123,"author":{"gitId":"edelinetenges"},"content":"        if (description.equals(\"emptyDescError\")) {"},{"lineNumber":124,"author":{"gitId":"edelinetenges"},"content":"            ui.printEmptyDescError(\"event\");"},{"lineNumber":125,"author":{"gitId":"edelinetenges"},"content":"        } else {"},{"lineNumber":126,"author":{"gitId":"edelinetenges"},"content":"            try {"},{"lineNumber":127,"author":{"gitId":"edelinetenges"},"content":"                LocalDate localDate \u003d LocalDate.parse(date);"},{"lineNumber":128,"author":{"gitId":"edelinetenges"},"content":"                Events event \u003d new Events(description, localDate);"},{"lineNumber":129,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":130,"author":{"gitId":"edelinetenges"},"content":"                tasks.add(event);"},{"lineNumber":131,"author":{"gitId":"edelinetenges"},"content":"                ui.printAdd(tasks, storage.numTasks);"},{"lineNumber":132,"author":{"gitId":"edelinetenges"},"content":"                storage.addToFile(event.formatData());"},{"lineNumber":133,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":134,"author":{"gitId":"edelinetenges"},"content":"                storage.numTasks++;"},{"lineNumber":135,"author":{"gitId":"edelinetenges"},"content":"                ui.printNumTasks(storage.numTasks);"},{"lineNumber":136,"author":{"gitId":"edelinetenges"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":137,"author":{"gitId":"edelinetenges"},"content":"                ui.printDateError();"},{"lineNumber":138,"author":{"gitId":"edelinetenges"},"content":"            }"},{"lineNumber":139,"author":{"gitId":"edelinetenges"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"edelinetenges"},"content":"}"}],"authorContributionMap":{"edelinetenges":141}},{"path":"src/main/java/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edelinetenges"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"edelinetenges"},"content":" * Represents todos type of tasks."},{"lineNumber":3,"author":{"gitId":"edelinetenges"},"content":" */"},{"lineNumber":4,"author":{"gitId":"edelinetenges"},"content":"public class ToDos extends Task {"},{"lineNumber":5,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":6,"author":{"gitId":"edelinetenges"},"content":"    public ToDos(String description) {"},{"lineNumber":7,"author":{"gitId":"edelinetenges"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":10,"author":{"gitId":"edelinetenges"},"content":"    public ToDos(String description, boolean isDone) {"},{"lineNumber":11,"author":{"gitId":"edelinetenges"},"content":"        super(description, isDone);"},{"lineNumber":12,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":14,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"edelinetenges"},"content":"     * Returns String format of todos"},{"lineNumber":16,"author":{"gitId":"edelinetenges"},"content":"     * @return String format of todos"},{"lineNumber":17,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"edelinetenges"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"edelinetenges"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"edelinetenges"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":21,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":23,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"edelinetenges"},"content":"     * Returns String of error message for empty description"},{"lineNumber":25,"author":{"gitId":"edelinetenges"},"content":"     * @return String of error message for empty description"},{"lineNumber":26,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"edelinetenges"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"edelinetenges"},"content":"    public String getEmptyDescError() {"},{"lineNumber":29,"author":{"gitId":"edelinetenges"},"content":"        return \"Oops! Description of todo \" + super.getEmptyDescError();"},{"lineNumber":30,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":32,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"edelinetenges"},"content":"     * Formats data for saving into text file."},{"lineNumber":34,"author":{"gitId":"edelinetenges"},"content":"     * @return T | isDone | description"},{"lineNumber":35,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"edelinetenges"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"edelinetenges"},"content":"    public String formatData() {"},{"lineNumber":38,"author":{"gitId":"edelinetenges"},"content":"        return \"T | \" + super.formatData();"},{"lineNumber":39,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"edelinetenges"},"content":"}"}],"authorContributionMap":{"edelinetenges":40}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"edelinetenges"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":3,"author":{"gitId":"edelinetenges"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"edelinetenges"},"content":" * Deals with interactions with the user."},{"lineNumber":5,"author":{"gitId":"edelinetenges"},"content":" */"},{"lineNumber":6,"author":{"gitId":"edelinetenges"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"edelinetenges"},"content":"    public static String tab \u003d \"     \";"},{"lineNumber":8,"author":{"gitId":"edelinetenges"},"content":"    public static String line \u003d \"     ............................................................\";"},{"lineNumber":9,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":10,"author":{"gitId":"edelinetenges"},"content":"    public Ui() { }"},{"lineNumber":11,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":12,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"edelinetenges"},"content":"     * Prints Elly logo and introduction message."},{"lineNumber":14,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"edelinetenges"},"content":"    public void printIntro() {"},{"lineNumber":16,"author":{"gitId":"edelinetenges"},"content":"        String logo \u003d"},{"lineNumber":17,"author":{"gitId":"edelinetenges"},"content":"                \" _____   _   _\\n\""},{"lineNumber":18,"author":{"gitId":"edelinetenges"},"content":"                        + \"| ____| | | | |\\n\""},{"lineNumber":19,"author":{"gitId":"edelinetenges"},"content":"                        + \"| |___  | | | | __   __\\n\""},{"lineNumber":20,"author":{"gitId":"edelinetenges"},"content":"                        + \"|  ___| | | | | \\\\ \\\\ / /\\n\""},{"lineNumber":21,"author":{"gitId":"edelinetenges"},"content":"                        + \"| |___  | | | |  \\\\ v /\\n\""},{"lineNumber":22,"author":{"gitId":"edelinetenges"},"content":"                        + \"|_____| |_| |_|  /  /\\n\""},{"lineNumber":23,"author":{"gitId":"edelinetenges"},"content":"                        + \"                /__/\\n\";"},{"lineNumber":24,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":25,"author":{"gitId":"edelinetenges"},"content":"        System.out.println(\"   C H A T   W I T H\\n\" + logo);"},{"lineNumber":26,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":27,"author":{"gitId":"edelinetenges"},"content":"        System.out.println(line + \"\\n\""},{"lineNumber":28,"author":{"gitId":"edelinetenges"},"content":"                + tab + \"Hi there! I\u0027m Elly.\\n\""},{"lineNumber":29,"author":{"gitId":"edelinetenges"},"content":"                + tab + \"How can I help you today?\\n\""},{"lineNumber":30,"author":{"gitId":"edelinetenges"},"content":"                + line);"},{"lineNumber":31,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":33,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"edelinetenges"},"content":"     * Prints line for Elly\u0027s response display."},{"lineNumber":35,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"edelinetenges"},"content":"    public void printLine() {"},{"lineNumber":37,"author":{"gitId":"edelinetenges"},"content":"        System.out.println(line);"},{"lineNumber":38,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":40,"author":{"gitId":"edelinetenges"},"content":"    public void printList(ArrayList\u003cTask\u003e tasks, int numTasks) {"},{"lineNumber":41,"author":{"gitId":"edelinetenges"},"content":"        if (numTasks \u003c\u003d 0) {"},{"lineNumber":42,"author":{"gitId":"edelinetenges"},"content":"            System.out.println(tab + \"Yay! There are no tasks in your list.\");"},{"lineNumber":43,"author":{"gitId":"edelinetenges"},"content":"        } else {"},{"lineNumber":44,"author":{"gitId":"edelinetenges"},"content":"            System.out.println(tab + \"Here are the tasks in your list:\");"},{"lineNumber":45,"author":{"gitId":"edelinetenges"},"content":"            for (int i \u003d 0; i \u003c numTasks; i++) {"},{"lineNumber":46,"author":{"gitId":"edelinetenges"},"content":"                int num \u003d i + 1;"},{"lineNumber":47,"author":{"gitId":"edelinetenges"},"content":"                Task task \u003d tasks.get(i);"},{"lineNumber":48,"author":{"gitId":"edelinetenges"},"content":"                System.out.println("},{"lineNumber":49,"author":{"gitId":"edelinetenges"},"content":"                        tab + num + \".\" + task.toString());"},{"lineNumber":50,"author":{"gitId":"edelinetenges"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"edelinetenges"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":54,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"edelinetenges"},"content":"     * Prints to notify user which task is marked as done."},{"lineNumber":56,"author":{"gitId":"edelinetenges"},"content":"     * Identifies task by index and formats task to String."},{"lineNumber":57,"author":{"gitId":"edelinetenges"},"content":"     * @param tasks arraylist of tasks."},{"lineNumber":58,"author":{"gitId":"edelinetenges"},"content":"     * @param index task index."},{"lineNumber":59,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"edelinetenges"},"content":"    public void printDone(ArrayList\u003cTask\u003e tasks, int index) {"},{"lineNumber":61,"author":{"gitId":"edelinetenges"},"content":"        System.out.println(tab + \"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":62,"author":{"gitId":"edelinetenges"},"content":"        System.out.println(tab + tasks.get(index).toString());"},{"lineNumber":63,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":65,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"edelinetenges"},"content":"     * Prints to notify user which task is deleted."},{"lineNumber":67,"author":{"gitId":"edelinetenges"},"content":"     * @param string String format of deleted task"},{"lineNumber":68,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"edelinetenges"},"content":"    public void printDelete(String string) {"},{"lineNumber":70,"author":{"gitId":"edelinetenges"},"content":"        System.out.println(tab + \"Noted. I\u0027ve removed this task:\");"},{"lineNumber":71,"author":{"gitId":"edelinetenges"},"content":"        System.out.println(tab + string);"},{"lineNumber":72,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":74,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"edelinetenges"},"content":"     * Prints to notify user which task is added."},{"lineNumber":76,"author":{"gitId":"edelinetenges"},"content":"     * Identifies task by index and formats task to String."},{"lineNumber":77,"author":{"gitId":"edelinetenges"},"content":"     * @param tasks arraylist of tasks."},{"lineNumber":78,"author":{"gitId":"edelinetenges"},"content":"     * @param index task index."},{"lineNumber":79,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"edelinetenges"},"content":"    public void printAdd(ArrayList\u003cTask\u003e tasks, int index) {"},{"lineNumber":81,"author":{"gitId":"edelinetenges"},"content":"        System.out.println(tab + \"Got it. I\u0027ve added this task:\");"},{"lineNumber":82,"author":{"gitId":"edelinetenges"},"content":"        System.out.println(tab + tasks.get(index).toString());"},{"lineNumber":83,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":85,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"edelinetenges"},"content":"     * Prints number of tasks in list."},{"lineNumber":87,"author":{"gitId":"edelinetenges"},"content":"     * @param numTasks number of tasks."},{"lineNumber":88,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"edelinetenges"},"content":"    public void printNumTasks(int numTasks) {"},{"lineNumber":90,"author":{"gitId":"edelinetenges"},"content":"        System.out.println(tab + \"Now you have \" + numTasks + \" tasks in the list.\");"},{"lineNumber":91,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":93,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"edelinetenges"},"content":"     * Prints goodbye message followed by a line."},{"lineNumber":95,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"edelinetenges"},"content":"    public void printBye() {"},{"lineNumber":97,"author":{"gitId":"edelinetenges"},"content":"        System.out.println(tab + \"Goodbye, can\u0027t wait to see you again!\");"},{"lineNumber":98,"author":{"gitId":"edelinetenges"},"content":"        System.out.println(line);"},{"lineNumber":99,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":101,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"edelinetenges"},"content":"     * Prints error message that description cannot be empty."},{"lineNumber":103,"author":{"gitId":"edelinetenges"},"content":"     * @param task task type."},{"lineNumber":104,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"edelinetenges"},"content":"    public void printEmptyDescError(String task) {"},{"lineNumber":106,"author":{"gitId":"edelinetenges"},"content":"        System.out.println(tab + \"Oops! Description of \" + task + \" cannot be empty.\");"},{"lineNumber":107,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":109,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"edelinetenges"},"content":"     * Prints error message that command cannot be identified."},{"lineNumber":111,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"edelinetenges"},"content":"    public void printIdkError() {"},{"lineNumber":113,"author":{"gitId":"edelinetenges"},"content":"        System.out.println(tab + \"I\u0027m sorry, I\u0027m not sure what that means.\");"},{"lineNumber":114,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"edelinetenges"},"content":""},{"lineNumber":116,"author":{"gitId":"edelinetenges"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"edelinetenges"},"content":"     * Prints to notify user of formatting requirement for date."},{"lineNumber":118,"author":{"gitId":"edelinetenges"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"edelinetenges"},"content":"    public void printDateError() {"},{"lineNumber":120,"author":{"gitId":"edelinetenges"},"content":"        System.out.println(tab + \"Oops! Date should be in YYYY-MM-DD format.\");"},{"lineNumber":121,"author":{"gitId":"edelinetenges"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"edelinetenges"},"content":"}"}],"authorContributionMap":{"edelinetenges":122}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"edelinetenges"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"edelinetenges"},"content":"deadline assignment /by Sunday 2359"},{"lineNumber":3,"author":{"gitId":"edelinetenges"},"content":"event group meeting /at 2pm"},{"lineNumber":4,"author":{"gitId":"edelinetenges"},"content":"list"},{"lineNumber":5,"author":{"gitId":"edelinetenges"},"content":"bye"}],"authorContributionMap":{"edelinetenges":5}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"edelinetenges"},"content":"if ! javac -cp /Users/SocialMedia/Desktop/cs2103t/ip/src/main/java -Xlint:none -d /Users/SocialMedia/Desktop/cs2103t/ip/bin /Users/SocialMedia/Desktop/cs2103t/ip/src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"edelinetenges"},"content":"java -classpath /Users/SocialMedia/Desktop/cs2103t/ip/bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"edelinetenges":2,"-":36}}]
