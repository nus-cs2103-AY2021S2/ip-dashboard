[{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package main.java.duke;"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":" * A subclass of Task, used for tasks with specified timing."},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":" */"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"    protected static final String TAG \u003d \"[D]\";"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"    public Deadline(String name) {"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"        super(name);"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"        return Deadline.TAG + super.toString();"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"}"}],"authorContributionMap":{"ampan98":17}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package main.java.duke;"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":" * An interactive chat bot made for CS2103 individual project."},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":" */"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"    protected Ui ui;"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"    protected TaskList tasks;"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"    public Duke() {"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"        this.ui \u003d new Ui(new Scanner(System.in));"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"        this.tasks \u003d new TaskList();"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":"     * Runs the Duke chat bot program."},{"lineNumber":21,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"ampan98"},"content":"    public void run() {"},{"lineNumber":23,"author":{"gitId":"ampan98"},"content":"        // Initialise task list and user interface"},{"lineNumber":24,"author":{"gitId":"ampan98"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"ampan98"},"content":"            this.tasks.load();"},{"lineNumber":26,"author":{"gitId":"ampan98"},"content":"        } catch (IOException ex) {"},{"lineNumber":27,"author":{"gitId":"ampan98"},"content":"            System.out.println(\"  Unable to load tasks.\");"},{"lineNumber":28,"author":{"gitId":"ampan98"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"ampan98"},"content":"        this.ui.initialise(this.tasks);"},{"lineNumber":30,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":31,"author":{"gitId":"ampan98"},"content":"        // Run chat bot"},{"lineNumber":32,"author":{"gitId":"ampan98"},"content":"        this.ui.run();"},{"lineNumber":33,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":35,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"ampan98"},"content":"     * Starts the program."},{"lineNumber":37,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"ampan98"},"content":"     * @param args User input."},{"lineNumber":39,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"ampan98"},"content":"    public static void main(String[] args) {"},{"lineNumber":41,"author":{"gitId":"ampan98"},"content":"        new Duke().run();"},{"lineNumber":42,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ampan98":40,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package main.java.duke;"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":"    private final String message;"},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"    public DukeException(String message) {"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"        super(message);"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":"        this.message \u003d message;"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"        return message;"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"}"}],"authorContributionMap":{"ampan98":15}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package main.java.duke;"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":" * A subclass of Task, used for tasks with specified timing."},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":" */"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"    protected static final String TAG \u003d \"[E]\";"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"    public Event(String name) {"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"        super(name);"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"        return Event.TAG + super.toString();"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"}"}],"authorContributionMap":{"ampan98":17}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package main.java.duke;"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":" * Contains the main logic for responses by Duke."},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":" */"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":"public class Parser {"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"     * Executes operations on the task list based on given input and"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"     * returns the response by the program."},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"     * @param input Input from user."},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"     * @param tasks List of tasks."},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"     * @return Program response as a String."},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"     * @throws DukeException If input is not recognised."},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"    public static String process(String input, TaskList tasks) throws DukeException {"},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":"            return null;"},{"lineNumber":21,"author":{"gitId":"ampan98"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":23,"author":{"gitId":"ampan98"},"content":"        StringBuilder output \u003d new StringBuilder();"},{"lineNumber":24,"author":{"gitId":"ampan98"},"content":"        if (input.equals(\"list\")) {"},{"lineNumber":25,"author":{"gitId":"ampan98"},"content":"            output.append(\"  Tasks in list:\\n\");"},{"lineNumber":26,"author":{"gitId":"ampan98"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":27,"author":{"gitId":"ampan98"},"content":"                output.append(\"  \").append(i + 1).append(\".\").append(tasks.get(i)).append(\"\\n\");"},{"lineNumber":28,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"ampan98"},"content":"        } else if (input.split(\" \")[0].equals(\"done\")) {"},{"lineNumber":30,"author":{"gitId":"ampan98"},"content":"            int inputNumber;"},{"lineNumber":31,"author":{"gitId":"ampan98"},"content":"            try {"},{"lineNumber":32,"author":{"gitId":"ampan98"},"content":"                inputNumber \u003d Integer.parseInt(input.split(\" \")[1]);"},{"lineNumber":33,"author":{"gitId":"ampan98"},"content":"            } catch (Exception ex) {"},{"lineNumber":34,"author":{"gitId":"ampan98"},"content":"                throw new DukeException(\"  Please provide an integer.\");"},{"lineNumber":35,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":37,"author":{"gitId":"ampan98"},"content":"            try {"},{"lineNumber":38,"author":{"gitId":"ampan98"},"content":"                tasks.markAsDone(inputNumber - 1);"},{"lineNumber":39,"author":{"gitId":"ampan98"},"content":"            } catch (IndexOutOfBoundsException ex) {"},{"lineNumber":40,"author":{"gitId":"ampan98"},"content":"                throw new DukeException(\"  That number is invalid.\");"},{"lineNumber":41,"author":{"gitId":"ampan98"},"content":"            } catch (IOException ex) {"},{"lineNumber":42,"author":{"gitId":"ampan98"},"content":"                throw new DukeException(\"  Unable to save tasks.\");"},{"lineNumber":43,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":45,"author":{"gitId":"ampan98"},"content":"            output.append(\"  Successfully marked as done:\\n\");"},{"lineNumber":46,"author":{"gitId":"ampan98"},"content":"            output.append(\"  \").append(tasks.get(inputNumber - 1)).append(\"\\n\");"},{"lineNumber":47,"author":{"gitId":"ampan98"},"content":"        } else if (input.split(\" \")[0].equals(\"delete\")) {"},{"lineNumber":48,"author":{"gitId":"ampan98"},"content":"            int inputNumber;"},{"lineNumber":49,"author":{"gitId":"ampan98"},"content":"            try {"},{"lineNumber":50,"author":{"gitId":"ampan98"},"content":"                inputNumber \u003d Integer.parseInt(input.split(\" \")[1]);"},{"lineNumber":51,"author":{"gitId":"ampan98"},"content":"            } catch (Exception ex) {"},{"lineNumber":52,"author":{"gitId":"ampan98"},"content":"                throw new DukeException(\"  Please provide an integer.\");"},{"lineNumber":53,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":55,"author":{"gitId":"ampan98"},"content":"            Task taskToRemove;"},{"lineNumber":56,"author":{"gitId":"ampan98"},"content":"            try {"},{"lineNumber":57,"author":{"gitId":"ampan98"},"content":"                taskToRemove \u003d tasks.remove(inputNumber - 1);"},{"lineNumber":58,"author":{"gitId":"ampan98"},"content":"            } catch (IndexOutOfBoundsException ex) {"},{"lineNumber":59,"author":{"gitId":"ampan98"},"content":"                throw new DukeException(\"  That number is invalid.\");"},{"lineNumber":60,"author":{"gitId":"ampan98"},"content":"            } catch (IOException ex) {"},{"lineNumber":61,"author":{"gitId":"ampan98"},"content":"                throw new DukeException(\"  Unable to save tasks.\");"},{"lineNumber":62,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":64,"author":{"gitId":"ampan98"},"content":"            output.append(\"  Successfully removed:\\n\");"},{"lineNumber":65,"author":{"gitId":"ampan98"},"content":"            output.append(\"    \").append(taskToRemove).append(\"\\n\");"},{"lineNumber":66,"author":{"gitId":"ampan98"},"content":"            output.append(\"  Total tasks in list: \").append(tasks.size()).append(\"\\n\");"},{"lineNumber":67,"author":{"gitId":"ampan98"},"content":"        } else if (input.split(\" \")[0].equals(\"find\")) {"},{"lineNumber":68,"author":{"gitId":"ampan98"},"content":"            String inputString;"},{"lineNumber":69,"author":{"gitId":"ampan98"},"content":"            try {"},{"lineNumber":70,"author":{"gitId":"ampan98"},"content":"                inputString \u003d input.split(\" \")[1].toLowerCase();"},{"lineNumber":71,"author":{"gitId":"ampan98"},"content":"            } catch (Exception ex) {"},{"lineNumber":72,"author":{"gitId":"ampan98"},"content":"                throw new DukeException(\"  Please provide a keyword to search for.\");"},{"lineNumber":73,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":75,"author":{"gitId":"ampan98"},"content":"            output.append(\"  Matching tasks in list:\\n\");"},{"lineNumber":76,"author":{"gitId":"ampan98"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":77,"author":{"gitId":"ampan98"},"content":"                for (String word : tasks.get(i).toString().split(\" \")) {"},{"lineNumber":78,"author":{"gitId":"ampan98"},"content":"                    if (inputString.equals(word.toLowerCase())) {"},{"lineNumber":79,"author":{"gitId":"ampan98"},"content":"                        output.append(\"  \").append(i + 1).append(\".\").append(tasks.get(i)).append(\"\\n\");"},{"lineNumber":80,"author":{"gitId":"ampan98"},"content":"                    }"},{"lineNumber":81,"author":{"gitId":"ampan98"},"content":"                }"},{"lineNumber":82,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"ampan98"},"content":"        } else {"},{"lineNumber":84,"author":{"gitId":"ampan98"},"content":"            Task task;"},{"lineNumber":85,"author":{"gitId":"ampan98"},"content":"            switch (input.split(\" \")[0]) {"},{"lineNumber":86,"author":{"gitId":"ampan98"},"content":"            case \"todo\":"},{"lineNumber":87,"author":{"gitId":"ampan98"},"content":"                if (input.split(\" \").length \u003c\u003d 1) {"},{"lineNumber":88,"author":{"gitId":"ampan98"},"content":"                    throw new DukeException(\"  Please describe the task.\");"},{"lineNumber":89,"author":{"gitId":"ampan98"},"content":"                }"},{"lineNumber":90,"author":{"gitId":"ampan98"},"content":"                task \u003d new Todo(input.substring(5));"},{"lineNumber":91,"author":{"gitId":"ampan98"},"content":"                break;"},{"lineNumber":92,"author":{"gitId":"ampan98"},"content":"            case \"deadline\": {"},{"lineNumber":93,"author":{"gitId":"ampan98"},"content":"                if (input.split(\" \").length \u003c\u003d 1) {"},{"lineNumber":94,"author":{"gitId":"ampan98"},"content":"                    throw new DukeException(\"  Please describe the task.\");"},{"lineNumber":95,"author":{"gitId":"ampan98"},"content":"                }"},{"lineNumber":96,"author":{"gitId":"ampan98"},"content":"                String[] inputs \u003d input.substring(9).split(\"/by\");"},{"lineNumber":97,"author":{"gitId":"ampan98"},"content":"                String name \u003d inputs[0] + \"(by:\" + inputs[1] + \")\";"},{"lineNumber":98,"author":{"gitId":"ampan98"},"content":"                task \u003d new Deadline(name);"},{"lineNumber":99,"author":{"gitId":"ampan98"},"content":"                break;"},{"lineNumber":100,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"ampan98"},"content":"            case \"event\": {"},{"lineNumber":102,"author":{"gitId":"ampan98"},"content":"                if (input.split(\" \").length \u003c\u003d 1) {"},{"lineNumber":103,"author":{"gitId":"ampan98"},"content":"                    throw new DukeException(\"  Please describe the task.\");"},{"lineNumber":104,"author":{"gitId":"ampan98"},"content":"                }"},{"lineNumber":105,"author":{"gitId":"ampan98"},"content":"                String[] inputs \u003d input.substring(6).split(\"/at\");"},{"lineNumber":106,"author":{"gitId":"ampan98"},"content":"                String name \u003d inputs[0] + \"(at:\" + inputs[1] + \")\";"},{"lineNumber":107,"author":{"gitId":"ampan98"},"content":"                task \u003d new Event(name);"},{"lineNumber":108,"author":{"gitId":"ampan98"},"content":"                break;"},{"lineNumber":109,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"ampan98"},"content":"            default:"},{"lineNumber":111,"author":{"gitId":"ampan98"},"content":"                throw new DukeException(\"  That command is invalid.\");"},{"lineNumber":112,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":114,"author":{"gitId":"ampan98"},"content":"            try {"},{"lineNumber":115,"author":{"gitId":"ampan98"},"content":"                tasks.add(task);"},{"lineNumber":116,"author":{"gitId":"ampan98"},"content":"            } catch (IOException ex) {"},{"lineNumber":117,"author":{"gitId":"ampan98"},"content":"                throw new DukeException(\"  Unable to save tasks.\");"},{"lineNumber":118,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":119,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":120,"author":{"gitId":"ampan98"},"content":"            output.append(\"  Task added:\\n\");"},{"lineNumber":121,"author":{"gitId":"ampan98"},"content":"            output.append(\"    \").append(task).append(\"\\n\");"},{"lineNumber":122,"author":{"gitId":"ampan98"},"content":"            output.append(\"  Total tasks in list: \").append(tasks.size()).append(\"\\n\");"},{"lineNumber":123,"author":{"gitId":"ampan98"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"ampan98"},"content":"        return output.toString();"},{"lineNumber":125,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"ampan98"},"content":"}"}],"authorContributionMap":{"ampan98":126}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package main.java.duke;"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"import java.io.BufferedReader;"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"import java.io.BufferedWriter;"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"import java.nio.file.Files;"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"import java.nio.file.Path;"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"import java.nio.file.Paths;"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":" * Handles saving and loading task list using hard disk storage."},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":" */"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"public class Storage {"},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"    protected final Path path;"},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"ampan98"},"content":"     * Initialises storage using a preset file path."},{"lineNumber":22,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"ampan98"},"content":"    public Storage() {"},{"lineNumber":24,"author":{"gitId":"ampan98"},"content":"        this.path \u003d Paths.get(\"data/TaskList.txt\");"},{"lineNumber":25,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":27,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"ampan98"},"content":"     * Loads the task list from pre-made text file."},{"lineNumber":29,"author":{"gitId":"ampan98"},"content":"     * Creates the text file if it does not exist."},{"lineNumber":30,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"ampan98"},"content":"     * @return List of tasks."},{"lineNumber":32,"author":{"gitId":"ampan98"},"content":"     * @throws IOException If unable to load from file."},{"lineNumber":33,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"ampan98"},"content":"    public List\u003cTask\u003e load() throws IOException {"},{"lineNumber":35,"author":{"gitId":"ampan98"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":36,"author":{"gitId":"ampan98"},"content":"        Files.createDirectories(this.path.getParent());"},{"lineNumber":37,"author":{"gitId":"ampan98"},"content":"        if (!Files.exists(this.path)) {"},{"lineNumber":38,"author":{"gitId":"ampan98"},"content":"            Files.createFile(this.path);"},{"lineNumber":39,"author":{"gitId":"ampan98"},"content":"            return tasks;"},{"lineNumber":40,"author":{"gitId":"ampan98"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"ampan98"},"content":"        BufferedReader reader \u003d Files.newBufferedReader(this.path);"},{"lineNumber":42,"author":{"gitId":"ampan98"},"content":"        String taskType \u003d reader.readLine();"},{"lineNumber":43,"author":{"gitId":"ampan98"},"content":"        while (taskType !\u003d null) {"},{"lineNumber":44,"author":{"gitId":"ampan98"},"content":"            Task newTask;"},{"lineNumber":45,"author":{"gitId":"ampan98"},"content":"            String taskName \u003d reader.readLine();"},{"lineNumber":46,"author":{"gitId":"ampan98"},"content":"            switch (taskType) {"},{"lineNumber":47,"author":{"gitId":"ampan98"},"content":"            case \"T\": {"},{"lineNumber":48,"author":{"gitId":"ampan98"},"content":"                newTask \u003d new Todo(taskName);"},{"lineNumber":49,"author":{"gitId":"ampan98"},"content":"                break;"},{"lineNumber":50,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"ampan98"},"content":"            case \"D\": {"},{"lineNumber":52,"author":{"gitId":"ampan98"},"content":"                newTask \u003d new Deadline(taskName);"},{"lineNumber":53,"author":{"gitId":"ampan98"},"content":"                break;"},{"lineNumber":54,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"ampan98"},"content":"            case \"E\": {"},{"lineNumber":56,"author":{"gitId":"ampan98"},"content":"                newTask \u003d new Event(taskName);"},{"lineNumber":57,"author":{"gitId":"ampan98"},"content":"                break;"},{"lineNumber":58,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"ampan98"},"content":"            default:"},{"lineNumber":60,"author":{"gitId":"ampan98"},"content":"                return tasks;"},{"lineNumber":61,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"ampan98"},"content":"            boolean isDone \u003d Boolean.parseBoolean(reader.readLine());"},{"lineNumber":63,"author":{"gitId":"ampan98"},"content":"            if (isDone) {"},{"lineNumber":64,"author":{"gitId":"ampan98"},"content":"                newTask.markAsDone();"},{"lineNumber":65,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"ampan98"},"content":"            tasks.add(newTask);"},{"lineNumber":67,"author":{"gitId":"ampan98"},"content":"            taskType \u003d reader.readLine();"},{"lineNumber":68,"author":{"gitId":"ampan98"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"ampan98"},"content":"        return tasks;"},{"lineNumber":70,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":72,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"ampan98"},"content":"     * Saves the task list into existing text file."},{"lineNumber":74,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"ampan98"},"content":"     * @param tasks List of tasks."},{"lineNumber":76,"author":{"gitId":"ampan98"},"content":"     * @throws IOException If unable to save to file."},{"lineNumber":77,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"ampan98"},"content":"    public void save(List\u003cTask\u003e tasks) throws IOException {"},{"lineNumber":79,"author":{"gitId":"ampan98"},"content":"        BufferedWriter writer \u003d Files.newBufferedWriter(this.path);"},{"lineNumber":80,"author":{"gitId":"ampan98"},"content":"        for (Task task : tasks) {"},{"lineNumber":81,"author":{"gitId":"ampan98"},"content":"            writer.write(task.toString().charAt(1));"},{"lineNumber":82,"author":{"gitId":"ampan98"},"content":"            writer.newLine();"},{"lineNumber":83,"author":{"gitId":"ampan98"},"content":"            writer.write(task.name);"},{"lineNumber":84,"author":{"gitId":"ampan98"},"content":"            writer.newLine();"},{"lineNumber":85,"author":{"gitId":"ampan98"},"content":"            writer.write(Boolean.toString(task.isDone));"},{"lineNumber":86,"author":{"gitId":"ampan98"},"content":"            writer.newLine();"},{"lineNumber":87,"author":{"gitId":"ampan98"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"ampan98"},"content":"        writer.flush();"},{"lineNumber":89,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"ampan98"},"content":"}"}],"authorContributionMap":{"ampan98":90}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package main.java.duke;"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":" * This is used to store information about tasks for use by Duke."},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":" */"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"public class Task {"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"    protected static final DateTimeFormatter INPUT_DATE_FORMAT \u003d"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"    protected static final DateTimeFormatter OUTPUT_DATE_FORMAT \u003d"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"    protected final String name;"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"    protected boolean isDone;"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"    protected final LocalDate date;"},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":"     * Initialises task using task description."},{"lineNumber":21,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"ampan98"},"content":"     * @param name Description of task."},{"lineNumber":23,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"ampan98"},"content":"    public Task(String name) {"},{"lineNumber":25,"author":{"gitId":"ampan98"},"content":"        this.name \u003d name;"},{"lineNumber":26,"author":{"gitId":"ampan98"},"content":"        this.isDone \u003d false;"},{"lineNumber":27,"author":{"gitId":"ampan98"},"content":"        this.date \u003d calculateDate(name);"},{"lineNumber":28,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":30,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"ampan98"},"content":"     * Calculates the date given a task description. Returns null if no date is given."},{"lineNumber":32,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"ampan98"},"content":"     * @param name Task description."},{"lineNumber":34,"author":{"gitId":"ampan98"},"content":"     * @return Date if specified in task description."},{"lineNumber":35,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"ampan98"},"content":"    public LocalDate calculateDate(String name) {"},{"lineNumber":37,"author":{"gitId":"ampan98"},"content":"        String[] inputs \u003d name.substring(0, name.length() - 1).split(\": \");"},{"lineNumber":38,"author":{"gitId":"ampan98"},"content":"        if (inputs.length \u003e 1) {"},{"lineNumber":39,"author":{"gitId":"ampan98"},"content":"            String inputDate \u003d inputs[1].split(\" \")[0];"},{"lineNumber":40,"author":{"gitId":"ampan98"},"content":"            return LocalDate.parse(inputDate, Task.INPUT_DATE_FORMAT);"},{"lineNumber":41,"author":{"gitId":"ampan98"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"ampan98"},"content":"        return null;"},{"lineNumber":43,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":45,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"ampan98"},"content":"     * Sets task as done."},{"lineNumber":47,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"ampan98"},"content":"    public void markAsDone() {"},{"lineNumber":49,"author":{"gitId":"ampan98"},"content":"        this.isDone \u003d true;"},{"lineNumber":50,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":52,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"ampan98"},"content":"     * Provides the task description with a reformatted date if applicable."},{"lineNumber":54,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"ampan98"},"content":"     * @return Reformatted description of task."},{"lineNumber":56,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"ampan98"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"ampan98"},"content":"    public String toString() {"},{"lineNumber":59,"author":{"gitId":"ampan98"},"content":"        String result \u003d this.name;"},{"lineNumber":60,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":61,"author":{"gitId":"ampan98"},"content":"        // Reformat date before converting to string"},{"lineNumber":62,"author":{"gitId":"ampan98"},"content":"        if (this.date !\u003d null) {"},{"lineNumber":63,"author":{"gitId":"ampan98"},"content":"            result \u003d this.name.split(\": \")[0];"},{"lineNumber":64,"author":{"gitId":"ampan98"},"content":"            String[] outputs \u003d this.name.substring(0, name.length() - 1)"},{"lineNumber":65,"author":{"gitId":"ampan98"},"content":"                    .split(\": \")[1].split(\" \");"},{"lineNumber":66,"author":{"gitId":"ampan98"},"content":"            outputs[0] \u003d this.date.format(Task.OUTPUT_DATE_FORMAT);"},{"lineNumber":67,"author":{"gitId":"ampan98"},"content":"            result +\u003d \": \" + outputs[0];"},{"lineNumber":68,"author":{"gitId":"ampan98"},"content":"            for (int i \u003d 1; i \u003c outputs.length; i++) {"},{"lineNumber":69,"author":{"gitId":"ampan98"},"content":"                result +\u003d \" \" + outputs[i];"},{"lineNumber":70,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"ampan98"},"content":"            result +\u003d \")\";"},{"lineNumber":72,"author":{"gitId":"ampan98"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":74,"author":{"gitId":"ampan98"},"content":"        if (this.isDone) {"},{"lineNumber":75,"author":{"gitId":"ampan98"},"content":"            return \"[X] \" + result;"},{"lineNumber":76,"author":{"gitId":"ampan98"},"content":"        } else {"},{"lineNumber":77,"author":{"gitId":"ampan98"},"content":"            return \"[ ] \" + result;"},{"lineNumber":78,"author":{"gitId":"ampan98"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"ampan98"},"content":"}"}],"authorContributionMap":{"ampan98":80}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package main.java.duke;"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":" * Handles initialisation and maintenance of task list."},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":" */"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"public class TaskList {"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"    protected List\u003cTask\u003e tasks;"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"    protected Storage storage;"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"     * Initialises task list using an arraylist and Storage object."},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"    public TaskList() {"},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":"        this.storage \u003d new Storage();"},{"lineNumber":21,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":23,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"ampan98"},"content":"     * Gets size of task list."},{"lineNumber":25,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"ampan98"},"content":"     * @return Number of tasks in task list."},{"lineNumber":27,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"ampan98"},"content":"    public int size() {"},{"lineNumber":29,"author":{"gitId":"ampan98"},"content":"        return this.tasks.size();"},{"lineNumber":30,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":32,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"ampan98"},"content":"     * Gets task at index of task list."},{"lineNumber":34,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"ampan98"},"content":"     * @param index Index of task to return."},{"lineNumber":36,"author":{"gitId":"ampan98"},"content":"     * @return Task at specified index."},{"lineNumber":37,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"ampan98"},"content":"    public Task get(int index) {"},{"lineNumber":39,"author":{"gitId":"ampan98"},"content":"        return this.tasks.get(index);"},{"lineNumber":40,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":42,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"ampan98"},"content":"     * Loads task list from storage."},{"lineNumber":44,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"ampan98"},"content":"     * @throws IOException If unable to load from file."},{"lineNumber":46,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"ampan98"},"content":"    public void load() throws IOException {"},{"lineNumber":48,"author":{"gitId":"ampan98"},"content":"        this.tasks \u003d this.storage.load();"},{"lineNumber":49,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":51,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"ampan98"},"content":"     * Adds a task to list and saves list to storage."},{"lineNumber":53,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"ampan98"},"content":"     * @param task Task to add."},{"lineNumber":55,"author":{"gitId":"ampan98"},"content":"     * @throws IOException If unable to save to file."},{"lineNumber":56,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"ampan98"},"content":"    public void add(Task task) throws IOException {"},{"lineNumber":58,"author":{"gitId":"ampan98"},"content":"        this.tasks.add(task);"},{"lineNumber":59,"author":{"gitId":"ampan98"},"content":"        updateStorage();"},{"lineNumber":60,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":62,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"ampan98"},"content":"     * Removes and returns a task from list and saves list to storage."},{"lineNumber":64,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"ampan98"},"content":"     * @param index Index of task to remove."},{"lineNumber":66,"author":{"gitId":"ampan98"},"content":"     * @return Task that was removed."},{"lineNumber":67,"author":{"gitId":"ampan98"},"content":"     * @throws IOException If unable to save to file."},{"lineNumber":68,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"ampan98"},"content":"    public Task remove(int index) throws IOException {"},{"lineNumber":70,"author":{"gitId":"ampan98"},"content":"        Task task \u003d this.tasks.remove(index);"},{"lineNumber":71,"author":{"gitId":"ampan98"},"content":"        updateStorage();"},{"lineNumber":72,"author":{"gitId":"ampan98"},"content":"        return task;"},{"lineNumber":73,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":75,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"ampan98"},"content":"     * Updates task in list as done."},{"lineNumber":77,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"ampan98"},"content":"     * @param index Index of task to update."},{"lineNumber":79,"author":{"gitId":"ampan98"},"content":"     * @throws IOException If unable to save to file."},{"lineNumber":80,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"ampan98"},"content":"    public void markAsDone(int index) throws IOException {"},{"lineNumber":82,"author":{"gitId":"ampan98"},"content":"        get(index).markAsDone();"},{"lineNumber":83,"author":{"gitId":"ampan98"},"content":"        updateStorage();"},{"lineNumber":84,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":86,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"ampan98"},"content":"     * Updates storage with task list."},{"lineNumber":88,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"ampan98"},"content":"     * @throws IOException If unable to save to file."},{"lineNumber":90,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"ampan98"},"content":"    public void updateStorage() throws IOException {"},{"lineNumber":92,"author":{"gitId":"ampan98"},"content":"        this.storage.save(tasks);"},{"lineNumber":93,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"ampan98"},"content":"}"}],"authorContributionMap":{"ampan98":94}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package main.java.duke;"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":" * A subclass of Task, used for tasks with no timing."},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":" */"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"    protected static final String TAG \u003d \"[T]\";"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"    public Todo(String name) {"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"        super(name);"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"        return Todo.TAG + super.toString();"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"}"}],"authorContributionMap":{"ampan98":17}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package main.java.duke;"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":" * Manages the exchange of user input and program output."},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":" */"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"    public static final String logo \u003d \" ____        _        \\n\""},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"    protected Scanner scanner;"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"    protected TaskList tasks;"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"     * Initialises user interface using scanner to obtain user input."},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":"     * @param sc Scanner for user input."},{"lineNumber":21,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"ampan98"},"content":"    public Ui(Scanner scanner) {"},{"lineNumber":23,"author":{"gitId":"ampan98"},"content":"        this.scanner \u003d scanner;"},{"lineNumber":24,"author":{"gitId":"ampan98"},"content":"        this.tasks \u003d null;"},{"lineNumber":25,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":27,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"ampan98"},"content":"     * Initialises the user interface on startup."},{"lineNumber":29,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"ampan98"},"content":"     * @param tasks List of tasks."},{"lineNumber":31,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"ampan98"},"content":"    public void initialise(TaskList tasks) {"},{"lineNumber":33,"author":{"gitId":"ampan98"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":34,"author":{"gitId":"ampan98"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":35,"author":{"gitId":"ampan98"},"content":"        System.out.println(\"Please input a command.\");"},{"lineNumber":36,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":38,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"ampan98"},"content":"     * Continuously takes in user input and passes it to a parser to get program output."},{"lineNumber":40,"author":{"gitId":"ampan98"},"content":"     * Stops when given a specific input by user."},{"lineNumber":41,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"ampan98"},"content":"    public void run() {"},{"lineNumber":43,"author":{"gitId":"ampan98"},"content":"        while (true) {"},{"lineNumber":44,"author":{"gitId":"ampan98"},"content":"            String input \u003d this.scanner.nextLine();"},{"lineNumber":45,"author":{"gitId":"ampan98"},"content":"            System.out.println(\"  ~~~\");"},{"lineNumber":46,"author":{"gitId":"ampan98"},"content":"            String output \u003d \"\";"},{"lineNumber":47,"author":{"gitId":"ampan98"},"content":"            try {"},{"lineNumber":48,"author":{"gitId":"ampan98"},"content":"                output \u003d Parser.process(input, this.tasks);"},{"lineNumber":49,"author":{"gitId":"ampan98"},"content":"            } catch (DukeException ex) {"},{"lineNumber":50,"author":{"gitId":"ampan98"},"content":"                System.out.println(ex);"},{"lineNumber":51,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"ampan98"},"content":"            if (output \u003d\u003d null) {"},{"lineNumber":53,"author":{"gitId":"ampan98"},"content":"                System.out.println(\"  See you next time.\");"},{"lineNumber":54,"author":{"gitId":"ampan98"},"content":"                System.out.println(\"  ~~~\");"},{"lineNumber":55,"author":{"gitId":"ampan98"},"content":"                break;"},{"lineNumber":56,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"ampan98"},"content":"            System.out.print(output);"},{"lineNumber":58,"author":{"gitId":"ampan98"},"content":"            System.out.println(\"  ~~~\");"},{"lineNumber":59,"author":{"gitId":"ampan98"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"ampan98"},"content":"}"}],"authorContributionMap":{"ampan98":61}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"import main.java.duke.Deadline;"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":" * Used to test Deadline, a subclass of Task."},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":" */"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"public class DeadlineTest {"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"    public void testName() {"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"        Deadline task \u003d new Deadline(\"return book (by: 2020-05-01)\");"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"        assertEquals(\"[D][ ] return book (by: May 01 2020)\", task.toString());"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"    public void testMarkAsDone() {"},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":"        Deadline task \u003d new Deadline(\"return book (by: 2020-05-01)\");"},{"lineNumber":21,"author":{"gitId":"ampan98"},"content":"        task.markAsDone();"},{"lineNumber":22,"author":{"gitId":"ampan98"},"content":"        assertEquals(\"[D][X] return book (by: May 01 2020)\", task.toString());"},{"lineNumber":23,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"ampan98"},"content":"}"}],"authorContributionMap":{"ampan98":24}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"import main.java.duke.Event;"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":" * Used to test Event, a subclass of Task."},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":" */"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"public class EventTest {"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"    public void testName() {"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"        Event task \u003d new Event(\"return book (at: 2020-05-01)\");"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"        assertEquals(\"[E][ ] return book (at: May 01 2020)\", task.toString());"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"    public void testMarkAsDone() {"},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":"        Event task \u003d new Event(\"return book (at: 2020-05-01)\");"},{"lineNumber":21,"author":{"gitId":"ampan98"},"content":"        task.markAsDone();"},{"lineNumber":22,"author":{"gitId":"ampan98"},"content":"        assertEquals(\"[E][X] return book (at: May 01 2020)\", task.toString());"},{"lineNumber":23,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"ampan98"},"content":"}"}],"authorContributionMap":{"ampan98":24}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"import main.java.duke.Todo;"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":" * Used to test Todo, a subclass of Task."},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":" */"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"public class TodoTest {"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"    public void testName() {"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"        Todo task \u003d new Todo(\"borrow books\");"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"        assertEquals(\"[T][ ] borrow books\", task.toString());"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"    public void testMarkAsDone() {"},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":"        Todo task \u003d new Todo(\"borrow books\");"},{"lineNumber":21,"author":{"gitId":"ampan98"},"content":"        task.markAsDone();"},{"lineNumber":22,"author":{"gitId":"ampan98"},"content":"        assertEquals(\"[T][X] borrow books\", task.toString());"},{"lineNumber":23,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"ampan98"},"content":"}"}],"authorContributionMap":{"ampan98":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":"list"},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"delete 1"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"list"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":"bye"}],"authorContributionMap":{"ampan98":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"java -classpath ..\\bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"ampan98":1,"-":20}}]
