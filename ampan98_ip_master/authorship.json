[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"}"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"}"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"ampan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"ampan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"ampan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"ampan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"ampan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"ampan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"ampan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"ampan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"ampan98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"ampan98"},"content":"}"},{"lineNumber":31,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":32,"author":{"gitId":"ampan98"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"ampan98"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":35,"author":{"gitId":"ampan98"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"ampan98"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":38,"author":{"gitId":"ampan98"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"ampan98"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"ampan98"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"ampan98"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"ampan98"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"ampan98"},"content":"}"},{"lineNumber":45,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":46,"author":{"gitId":"ampan98"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"ampan98"},"content":"    getMainClass().set(\"duke.Duke\")"},{"lineNumber":48,"author":{"gitId":"ampan98"},"content":"}"},{"lineNumber":49,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":50,"author":{"gitId":"ampan98"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"ampan98"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"ampan98"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"ampan98"},"content":"}"},{"lineNumber":54,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":55,"author":{"gitId":"ampan98"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"ampan98"},"content":"    toolVersion \u003d \u00278.32\u0027"},{"lineNumber":57,"author":{"gitId":"ampan98"},"content":"}"},{"lineNumber":58,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":59,"author":{"gitId":"ampan98"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"ampan98"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"ampan98"},"content":"}"}],"authorContributionMap":{"ampan98":61}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"ampan98"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"ampan98"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":24,"author":{"gitId":"ampan98"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"ampan98"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":27,"author":{"gitId":"ampan98"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"ampan98"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"ampan98"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"ampan98"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":32,"author":{"gitId":"ampan98"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"ampan98"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":35,"author":{"gitId":"ampan98"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"ampan98"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":38,"author":{"gitId":"ampan98"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"ampan98"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":41,"author":{"gitId":"ampan98"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"ampan98"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"ampan98"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":44,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":45,"author":{"gitId":"ampan98"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"ampan98"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"ampan98"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"ampan98"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"ampan98"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":51,"author":{"gitId":"ampan98"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":53,"author":{"gitId":"ampan98"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"ampan98"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"ampan98"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":57,"author":{"gitId":"ampan98"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":58,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":59,"author":{"gitId":"ampan98"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"ampan98"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"ampan98"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"ampan98"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"ampan98"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":65,"author":{"gitId":"ampan98"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":67,"author":{"gitId":"ampan98"},"content":":init"},{"lineNumber":68,"author":{"gitId":"ampan98"},"content":"@rem Get command-line arguments, handling Windows variants"},{"lineNumber":69,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":70,"author":{"gitId":"ampan98"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":71,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":72,"author":{"gitId":"ampan98"},"content":":win9xME_args"},{"lineNumber":73,"author":{"gitId":"ampan98"},"content":"@rem Slurp the command line arguments."},{"lineNumber":74,"author":{"gitId":"ampan98"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":75,"author":{"gitId":"ampan98"},"content":"set _SKIP\u003d2"},{"lineNumber":76,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":77,"author":{"gitId":"ampan98"},"content":":win9xME_args_slurp"},{"lineNumber":78,"author":{"gitId":"ampan98"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":79,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":80,"author":{"gitId":"ampan98"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":81,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":82,"author":{"gitId":"ampan98"},"content":":execute"},{"lineNumber":83,"author":{"gitId":"ampan98"},"content":"@rem Setup the command line"},{"lineNumber":84,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":85,"author":{"gitId":"ampan98"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":86,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":87,"author":{"gitId":"ampan98"},"content":"@rem Execute Gradle"},{"lineNumber":88,"author":{"gitId":"ampan98"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"},{"lineNumber":89,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":90,"author":{"gitId":"ampan98"},"content":":end"},{"lineNumber":91,"author":{"gitId":"ampan98"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":92,"author":{"gitId":"ampan98"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":93,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":94,"author":{"gitId":"ampan98"},"content":":fail"},{"lineNumber":95,"author":{"gitId":"ampan98"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":96,"author":{"gitId":"ampan98"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":97,"author":{"gitId":"ampan98"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":98,"author":{"gitId":"ampan98"},"content":"exit /b 1"},{"lineNumber":99,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":100,"author":{"gitId":"ampan98"},"content":":mainEnd"},{"lineNumber":101,"author":{"gitId":"ampan98"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":102,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":103,"author":{"gitId":"ampan98"},"content":":omega"}],"authorContributionMap":{"ampan98":103}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":" * A subclass of Task, used for tasks with specified timing."},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":" */"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"    protected static final String TAG \u003d \"[D]\";"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"    public Deadline(String name) {"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"        super(name);"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"        return Deadline.TAG + super.toString();"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"}"}],"authorContributionMap":{"ampan98":17}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":" * An interactive chat bot made for CS2103 individual project."},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":" */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"     * Starts the Duke chat bot program."},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"     * @param args Standard java requirement."},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"    public static void main(String[] args) {"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"        Application.launch(Ui.class, args);"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"ampan98":15,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":"    private final String message;"},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"     * Creates an exception using a message."},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"     * @param message The message to return in toString method."},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"    public DukeException(String message) {"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"        super(message);"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"        this.message \u003d message;"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"        return message;"},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":"}"}],"authorContributionMap":{"ampan98":20}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":" * A subclass of Task, used for tasks with specified timing."},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":" */"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"    protected static final String TAG \u003d \"[E]\";"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"    public Event(String name) {"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"        super(name);"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"        return Event.TAG + super.toString();"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"}"}],"authorContributionMap":{"ampan98":17}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":" * Contains the main logic for responses by Duke."},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":" */"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":"public class Parser {"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"     * Executes operations on the task list based on given input and"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"     * returns the response by the program."},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"     * @param input Input from user."},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"     * @param tasks List of tasks."},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"     * @return Program response as a String."},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"     * @throws DukeException If input is not recognised."},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"    public static String process(String input, TaskList tasks) throws DukeException {"},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":"            return null;"},{"lineNumber":21,"author":{"gitId":"ampan98"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":23,"author":{"gitId":"ampan98"},"content":"        StringBuilder output \u003d new StringBuilder();"},{"lineNumber":24,"author":{"gitId":"ampan98"},"content":"        if (input.equals(\"list\")) {"},{"lineNumber":25,"author":{"gitId":"ampan98"},"content":"            output.append(\"  Tasks in list:\\n\");"},{"lineNumber":26,"author":{"gitId":"ampan98"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":27,"author":{"gitId":"ampan98"},"content":"                output.append(\"  \").append(i + 1).append(\".\").append(tasks.get(i)).append(\"\\n\");"},{"lineNumber":28,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"ampan98"},"content":"        } else if (input.split(\" \")[0].equals(\"done\")) {"},{"lineNumber":30,"author":{"gitId":"ampan98"},"content":"            int inputNumber;"},{"lineNumber":31,"author":{"gitId":"ampan98"},"content":"            try {"},{"lineNumber":32,"author":{"gitId":"ampan98"},"content":"                inputNumber \u003d Integer.parseInt(input.split(\" \")[1]);"},{"lineNumber":33,"author":{"gitId":"ampan98"},"content":"            } catch (Exception ex) {"},{"lineNumber":34,"author":{"gitId":"ampan98"},"content":"                throw new DukeException(\"  Please provide an integer.\");"},{"lineNumber":35,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":37,"author":{"gitId":"ampan98"},"content":"            try {"},{"lineNumber":38,"author":{"gitId":"ampan98"},"content":"                tasks.markAsDone(inputNumber - 1);"},{"lineNumber":39,"author":{"gitId":"ampan98"},"content":"            } catch (IndexOutOfBoundsException ex) {"},{"lineNumber":40,"author":{"gitId":"ampan98"},"content":"                throw new DukeException(\"  That number is invalid.\");"},{"lineNumber":41,"author":{"gitId":"ampan98"},"content":"            } catch (IOException ex) {"},{"lineNumber":42,"author":{"gitId":"ampan98"},"content":"                throw new DukeException(\"  Unable to save tasks.\");"},{"lineNumber":43,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":45,"author":{"gitId":"ampan98"},"content":"            output.append(\"  Successfully marked as done:\\n\");"},{"lineNumber":46,"author":{"gitId":"ampan98"},"content":"            output.append(\"  \").append(tasks.get(inputNumber - 1)).append(\"\\n\");"},{"lineNumber":47,"author":{"gitId":"ampan98"},"content":"        } else if (input.split(\" \")[0].equals(\"delete\")) {"},{"lineNumber":48,"author":{"gitId":"ampan98"},"content":"            int inputNumber;"},{"lineNumber":49,"author":{"gitId":"ampan98"},"content":"            try {"},{"lineNumber":50,"author":{"gitId":"ampan98"},"content":"                inputNumber \u003d Integer.parseInt(input.split(\" \")[1]);"},{"lineNumber":51,"author":{"gitId":"ampan98"},"content":"            } catch (Exception ex) {"},{"lineNumber":52,"author":{"gitId":"ampan98"},"content":"                throw new DukeException(\"  Please provide an integer.\");"},{"lineNumber":53,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":55,"author":{"gitId":"ampan98"},"content":"            Task taskToRemove;"},{"lineNumber":56,"author":{"gitId":"ampan98"},"content":"            try {"},{"lineNumber":57,"author":{"gitId":"ampan98"},"content":"                taskToRemove \u003d tasks.remove(inputNumber - 1);"},{"lineNumber":58,"author":{"gitId":"ampan98"},"content":"            } catch (IndexOutOfBoundsException ex) {"},{"lineNumber":59,"author":{"gitId":"ampan98"},"content":"                throw new DukeException(\"  That number is invalid.\");"},{"lineNumber":60,"author":{"gitId":"ampan98"},"content":"            } catch (IOException ex) {"},{"lineNumber":61,"author":{"gitId":"ampan98"},"content":"                throw new DukeException(\"  Unable to save tasks.\");"},{"lineNumber":62,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":64,"author":{"gitId":"ampan98"},"content":"            output.append(\"  Successfully removed:\\n\");"},{"lineNumber":65,"author":{"gitId":"ampan98"},"content":"            output.append(\"    \").append(taskToRemove).append(\"\\n\");"},{"lineNumber":66,"author":{"gitId":"ampan98"},"content":"            output.append(\"  Total tasks in list: \").append(tasks.size()).append(\"\\n\");"},{"lineNumber":67,"author":{"gitId":"ampan98"},"content":"        } else if (input.split(\" \")[0].equals(\"find\")) {"},{"lineNumber":68,"author":{"gitId":"ampan98"},"content":"            String inputString;"},{"lineNumber":69,"author":{"gitId":"ampan98"},"content":"            try {"},{"lineNumber":70,"author":{"gitId":"ampan98"},"content":"                inputString \u003d input.split(\" \")[1].toLowerCase();"},{"lineNumber":71,"author":{"gitId":"ampan98"},"content":"            } catch (Exception ex) {"},{"lineNumber":72,"author":{"gitId":"ampan98"},"content":"                throw new DukeException(\"  Please provide a keyword to search for.\");"},{"lineNumber":73,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":75,"author":{"gitId":"ampan98"},"content":"            output.append(\"  Matching tasks in list:\\n\");"},{"lineNumber":76,"author":{"gitId":"ampan98"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":77,"author":{"gitId":"ampan98"},"content":"                for (String word : tasks.get(i).toString().split(\" \")) {"},{"lineNumber":78,"author":{"gitId":"ampan98"},"content":"                    if (inputString.equals(word.toLowerCase())) {"},{"lineNumber":79,"author":{"gitId":"ampan98"},"content":"                        output.append(\"  \").append(i + 1).append(\".\").append(tasks.get(i)).append(\"\\n\");"},{"lineNumber":80,"author":{"gitId":"ampan98"},"content":"                    }"},{"lineNumber":81,"author":{"gitId":"ampan98"},"content":"                }"},{"lineNumber":82,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"ampan98"},"content":"        } else {"},{"lineNumber":84,"author":{"gitId":"ampan98"},"content":"            Task task;"},{"lineNumber":85,"author":{"gitId":"ampan98"},"content":"            switch (input.split(\" \")[0]) {"},{"lineNumber":86,"author":{"gitId":"ampan98"},"content":"            case \"todo\":"},{"lineNumber":87,"author":{"gitId":"ampan98"},"content":"                if (input.split(\" \").length \u003c\u003d 1) {"},{"lineNumber":88,"author":{"gitId":"ampan98"},"content":"                    throw new DukeException(\"  Please describe the task.\");"},{"lineNumber":89,"author":{"gitId":"ampan98"},"content":"                }"},{"lineNumber":90,"author":{"gitId":"ampan98"},"content":"                task \u003d new Todo(input.substring(5));"},{"lineNumber":91,"author":{"gitId":"ampan98"},"content":"                break;"},{"lineNumber":92,"author":{"gitId":"ampan98"},"content":"            case \"deadline\": {"},{"lineNumber":93,"author":{"gitId":"ampan98"},"content":"                if (input.split(\" \").length \u003c\u003d 1) {"},{"lineNumber":94,"author":{"gitId":"ampan98"},"content":"                    throw new DukeException(\"  Please describe the task.\");"},{"lineNumber":95,"author":{"gitId":"ampan98"},"content":"                }"},{"lineNumber":96,"author":{"gitId":"ampan98"},"content":"                String[] inputs \u003d input.substring(9).split(\"/by\");"},{"lineNumber":97,"author":{"gitId":"ampan98"},"content":"                String name \u003d inputs[0] + \"(by:\" + inputs[1] + \")\";"},{"lineNumber":98,"author":{"gitId":"ampan98"},"content":"                task \u003d new Deadline(name);"},{"lineNumber":99,"author":{"gitId":"ampan98"},"content":"                break;"},{"lineNumber":100,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"ampan98"},"content":"            case \"event\": {"},{"lineNumber":102,"author":{"gitId":"ampan98"},"content":"                if (input.split(\" \").length \u003c\u003d 1) {"},{"lineNumber":103,"author":{"gitId":"ampan98"},"content":"                    throw new DukeException(\"  Please describe the task.\");"},{"lineNumber":104,"author":{"gitId":"ampan98"},"content":"                }"},{"lineNumber":105,"author":{"gitId":"ampan98"},"content":"                String[] inputs \u003d input.substring(6).split(\"/at\");"},{"lineNumber":106,"author":{"gitId":"ampan98"},"content":"                String name \u003d inputs[0] + \"(at:\" + inputs[1] + \")\";"},{"lineNumber":107,"author":{"gitId":"ampan98"},"content":"                task \u003d new Event(name);"},{"lineNumber":108,"author":{"gitId":"ampan98"},"content":"                break;"},{"lineNumber":109,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"ampan98"},"content":"            default:"},{"lineNumber":111,"author":{"gitId":"ampan98"},"content":"                throw new DukeException(\"  That command is invalid.\");"},{"lineNumber":112,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":114,"author":{"gitId":"ampan98"},"content":"            try {"},{"lineNumber":115,"author":{"gitId":"ampan98"},"content":"                tasks.add(task);"},{"lineNumber":116,"author":{"gitId":"ampan98"},"content":"            } catch (IOException ex) {"},{"lineNumber":117,"author":{"gitId":"ampan98"},"content":"                throw new DukeException(\"  Unable to save tasks.\");"},{"lineNumber":118,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":119,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":120,"author":{"gitId":"ampan98"},"content":"            output.append(\"  Task added:\\n\");"},{"lineNumber":121,"author":{"gitId":"ampan98"},"content":"            output.append(\"    \").append(task).append(\"\\n\");"},{"lineNumber":122,"author":{"gitId":"ampan98"},"content":"            output.append(\"  Total tasks in list: \").append(tasks.size()).append(\"\\n\");"},{"lineNumber":123,"author":{"gitId":"ampan98"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"ampan98"},"content":"        return output.toString();"},{"lineNumber":125,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"ampan98"},"content":"}"}],"authorContributionMap":{"ampan98":126}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":"import java.io.BufferedWriter;"},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"import java.nio.file.Files;"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"import java.nio.file.Path;"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":"import java.nio.file.Paths;"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":" * Handles saving and loading task list using hard disk storage."},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":" */"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"public class Storage {"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"    protected final Path path;"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"     * Initialises storage using a preset file path."},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"ampan98"},"content":"    public Storage() {"},{"lineNumber":22,"author":{"gitId":"ampan98"},"content":"        this.path \u003d Paths.get(\"data/TaskList.txt\");"},{"lineNumber":23,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":25,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"ampan98"},"content":"     * Loads the task list from pre-made text file."},{"lineNumber":27,"author":{"gitId":"ampan98"},"content":"     * Creates the text file if it does not exist."},{"lineNumber":28,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"ampan98"},"content":"     * @return List of tasks."},{"lineNumber":30,"author":{"gitId":"ampan98"},"content":"     * @throws IOException If unable to load from file."},{"lineNumber":31,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"ampan98"},"content":"    public List\u003cTask\u003e load() throws IOException {"},{"lineNumber":33,"author":{"gitId":"ampan98"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":34,"author":{"gitId":"ampan98"},"content":"        Files.createDirectories(this.path.getParent());"},{"lineNumber":35,"author":{"gitId":"ampan98"},"content":"        if (!Files.exists(this.path)) {"},{"lineNumber":36,"author":{"gitId":"ampan98"},"content":"            Files.createFile(this.path);"},{"lineNumber":37,"author":{"gitId":"ampan98"},"content":"            return tasks;"},{"lineNumber":38,"author":{"gitId":"ampan98"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"ampan98"},"content":"        BufferedReader reader \u003d Files.newBufferedReader(this.path);"},{"lineNumber":40,"author":{"gitId":"ampan98"},"content":"        String taskType \u003d reader.readLine();"},{"lineNumber":41,"author":{"gitId":"ampan98"},"content":"        while (taskType !\u003d null) {"},{"lineNumber":42,"author":{"gitId":"ampan98"},"content":"            Task newTask;"},{"lineNumber":43,"author":{"gitId":"ampan98"},"content":"            String taskName \u003d reader.readLine();"},{"lineNumber":44,"author":{"gitId":"ampan98"},"content":"            switch (taskType) {"},{"lineNumber":45,"author":{"gitId":"ampan98"},"content":"            case \"T\": {"},{"lineNumber":46,"author":{"gitId":"ampan98"},"content":"                newTask \u003d new Todo(taskName);"},{"lineNumber":47,"author":{"gitId":"ampan98"},"content":"                break;"},{"lineNumber":48,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"ampan98"},"content":"            case \"D\": {"},{"lineNumber":50,"author":{"gitId":"ampan98"},"content":"                newTask \u003d new Deadline(taskName);"},{"lineNumber":51,"author":{"gitId":"ampan98"},"content":"                break;"},{"lineNumber":52,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"ampan98"},"content":"            case \"E\": {"},{"lineNumber":54,"author":{"gitId":"ampan98"},"content":"                newTask \u003d new Event(taskName);"},{"lineNumber":55,"author":{"gitId":"ampan98"},"content":"                break;"},{"lineNumber":56,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"ampan98"},"content":"            default:"},{"lineNumber":58,"author":{"gitId":"ampan98"},"content":"                return tasks;"},{"lineNumber":59,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"ampan98"},"content":"            boolean isDone \u003d Boolean.parseBoolean(reader.readLine());"},{"lineNumber":61,"author":{"gitId":"ampan98"},"content":"            if (isDone) {"},{"lineNumber":62,"author":{"gitId":"ampan98"},"content":"                newTask.markAsDone();"},{"lineNumber":63,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"ampan98"},"content":"            tasks.add(newTask);"},{"lineNumber":65,"author":{"gitId":"ampan98"},"content":"            taskType \u003d reader.readLine();"},{"lineNumber":66,"author":{"gitId":"ampan98"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"ampan98"},"content":"        return tasks;"},{"lineNumber":68,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":70,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"ampan98"},"content":"     * Saves the task list into existing text file."},{"lineNumber":72,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"ampan98"},"content":"     * @param tasks List of tasks."},{"lineNumber":74,"author":{"gitId":"ampan98"},"content":"     * @throws IOException If unable to save to file."},{"lineNumber":75,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"ampan98"},"content":"    public void save(List\u003cTask\u003e tasks) throws IOException {"},{"lineNumber":77,"author":{"gitId":"ampan98"},"content":"        BufferedWriter writer \u003d Files.newBufferedWriter(this.path);"},{"lineNumber":78,"author":{"gitId":"ampan98"},"content":"        for (Task task : tasks) {"},{"lineNumber":79,"author":{"gitId":"ampan98"},"content":"            writer.write(task.toString().charAt(1));"},{"lineNumber":80,"author":{"gitId":"ampan98"},"content":"            writer.newLine();"},{"lineNumber":81,"author":{"gitId":"ampan98"},"content":"            writer.write(task.name);"},{"lineNumber":82,"author":{"gitId":"ampan98"},"content":"            writer.newLine();"},{"lineNumber":83,"author":{"gitId":"ampan98"},"content":"            writer.write(Boolean.toString(task.isDone));"},{"lineNumber":84,"author":{"gitId":"ampan98"},"content":"            writer.newLine();"},{"lineNumber":85,"author":{"gitId":"ampan98"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"ampan98"},"content":"        writer.flush();"},{"lineNumber":87,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"ampan98"},"content":"}"}],"authorContributionMap":{"ampan98":88}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":" * This is used to store information about tasks for use by Duke."},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":" */"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"public class Task {"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"    protected static final DateTimeFormatter INPUT_DATE_FORMAT \u003d"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"            DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"    protected static final DateTimeFormatter OUTPUT_DATE_FORMAT \u003d"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"            DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"    protected final String name;"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"    protected boolean isDone;"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"    protected final LocalDate date;"},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":"     * Initialises task using task description."},{"lineNumber":21,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"ampan98"},"content":"     * @param name Description of task."},{"lineNumber":23,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"ampan98"},"content":"    public Task(String name) {"},{"lineNumber":25,"author":{"gitId":"ampan98"},"content":"        this.name \u003d name;"},{"lineNumber":26,"author":{"gitId":"ampan98"},"content":"        this.isDone \u003d false;"},{"lineNumber":27,"author":{"gitId":"ampan98"},"content":"        this.date \u003d calculateDate(name);"},{"lineNumber":28,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":30,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"ampan98"},"content":"     * Calculates the date given a task description. Returns null if no date is given."},{"lineNumber":32,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"ampan98"},"content":"     * @param name Task description."},{"lineNumber":34,"author":{"gitId":"ampan98"},"content":"     * @return Date if specified in task description."},{"lineNumber":35,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"ampan98"},"content":"    public LocalDate calculateDate(String name) {"},{"lineNumber":37,"author":{"gitId":"ampan98"},"content":"        String[] inputs \u003d name.substring(0, name.length() - 1).split(\": \");"},{"lineNumber":38,"author":{"gitId":"ampan98"},"content":"        if (inputs.length \u003e 1) {"},{"lineNumber":39,"author":{"gitId":"ampan98"},"content":"            String inputDate \u003d inputs[1].split(\" \")[0];"},{"lineNumber":40,"author":{"gitId":"ampan98"},"content":"            return LocalDate.parse(inputDate, Task.INPUT_DATE_FORMAT);"},{"lineNumber":41,"author":{"gitId":"ampan98"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"ampan98"},"content":"        return null;"},{"lineNumber":43,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":45,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"ampan98"},"content":"     * Sets task as done."},{"lineNumber":47,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"ampan98"},"content":"    public void markAsDone() {"},{"lineNumber":49,"author":{"gitId":"ampan98"},"content":"        this.isDone \u003d true;"},{"lineNumber":50,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":52,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"ampan98"},"content":"     * Provides the task description with a reformatted date if applicable."},{"lineNumber":54,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"ampan98"},"content":"     * @return Reformatted description of task."},{"lineNumber":56,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"ampan98"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"ampan98"},"content":"    public String toString() {"},{"lineNumber":59,"author":{"gitId":"ampan98"},"content":"        String result \u003d this.name;"},{"lineNumber":60,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":61,"author":{"gitId":"ampan98"},"content":"        // Reformat date before converting to string"},{"lineNumber":62,"author":{"gitId":"ampan98"},"content":"        if (this.date !\u003d null) {"},{"lineNumber":63,"author":{"gitId":"ampan98"},"content":"            result \u003d this.name.split(\": \")[0];"},{"lineNumber":64,"author":{"gitId":"ampan98"},"content":"            String[] outputs \u003d this.name.substring(0, name.length() - 1)"},{"lineNumber":65,"author":{"gitId":"ampan98"},"content":"                    .split(\": \")[1].split(\" \");"},{"lineNumber":66,"author":{"gitId":"ampan98"},"content":"            outputs[0] \u003d this.date.format(Task.OUTPUT_DATE_FORMAT);"},{"lineNumber":67,"author":{"gitId":"ampan98"},"content":"            result +\u003d \": \" + outputs[0];"},{"lineNumber":68,"author":{"gitId":"ampan98"},"content":"            for (int i \u003d 1; i \u003c outputs.length; i++) {"},{"lineNumber":69,"author":{"gitId":"ampan98"},"content":"                result +\u003d \" \" + outputs[i];"},{"lineNumber":70,"author":{"gitId":"ampan98"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"ampan98"},"content":"            result +\u003d \")\";"},{"lineNumber":72,"author":{"gitId":"ampan98"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":74,"author":{"gitId":"ampan98"},"content":"        if (this.isDone) {"},{"lineNumber":75,"author":{"gitId":"ampan98"},"content":"            return \"[X] \" + result;"},{"lineNumber":76,"author":{"gitId":"ampan98"},"content":"        } else {"},{"lineNumber":77,"author":{"gitId":"ampan98"},"content":"            return \"[ ] \" + result;"},{"lineNumber":78,"author":{"gitId":"ampan98"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"ampan98"},"content":"}"}],"authorContributionMap":{"ampan98":80}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":" * Handles initialisation and maintenance of task list."},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":" */"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"    protected List\u003cTask\u003e tasks;"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"    protected Storage storage;"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"     * Initialises task list using an arraylist and Storage object."},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"    public TaskList() {"},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"        this.storage \u003d new Storage();"},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":22,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"ampan98"},"content":"     * Gets size of task list."},{"lineNumber":24,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"ampan98"},"content":"     * @return Number of tasks in task list."},{"lineNumber":26,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"ampan98"},"content":"    public int size() {"},{"lineNumber":28,"author":{"gitId":"ampan98"},"content":"        return this.tasks.size();"},{"lineNumber":29,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":31,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"ampan98"},"content":"     * Gets task at index of task list."},{"lineNumber":33,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"ampan98"},"content":"     * @param index Index of task to return."},{"lineNumber":35,"author":{"gitId":"ampan98"},"content":"     * @return Task at specified index."},{"lineNumber":36,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"ampan98"},"content":"    public Task get(int index) {"},{"lineNumber":38,"author":{"gitId":"ampan98"},"content":"        return this.tasks.get(index);"},{"lineNumber":39,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":41,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"ampan98"},"content":"     * Loads task list from storage."},{"lineNumber":43,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"ampan98"},"content":"     * @throws IOException If unable to load from file."},{"lineNumber":45,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"ampan98"},"content":"    public void load() throws IOException {"},{"lineNumber":47,"author":{"gitId":"ampan98"},"content":"        this.tasks \u003d this.storage.load();"},{"lineNumber":48,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":50,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"ampan98"},"content":"     * Adds a task to list and saves list to storage."},{"lineNumber":52,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"ampan98"},"content":"     * @param task Task to add."},{"lineNumber":54,"author":{"gitId":"ampan98"},"content":"     * @throws IOException If unable to save to file."},{"lineNumber":55,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"ampan98"},"content":"    public void add(Task task) throws IOException {"},{"lineNumber":57,"author":{"gitId":"ampan98"},"content":"        this.tasks.add(task);"},{"lineNumber":58,"author":{"gitId":"ampan98"},"content":"        updateStorage();"},{"lineNumber":59,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":61,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"ampan98"},"content":"     * Removes and returns a task from list and saves list to storage."},{"lineNumber":63,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"ampan98"},"content":"     * @param index Index of task to remove."},{"lineNumber":65,"author":{"gitId":"ampan98"},"content":"     * @return Task that was removed."},{"lineNumber":66,"author":{"gitId":"ampan98"},"content":"     * @throws IOException If unable to save to file."},{"lineNumber":67,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"ampan98"},"content":"    public Task remove(int index) throws IOException {"},{"lineNumber":69,"author":{"gitId":"ampan98"},"content":"        Task task \u003d this.tasks.remove(index);"},{"lineNumber":70,"author":{"gitId":"ampan98"},"content":"        updateStorage();"},{"lineNumber":71,"author":{"gitId":"ampan98"},"content":"        return task;"},{"lineNumber":72,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":74,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"ampan98"},"content":"     * Updates task in list as done."},{"lineNumber":76,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"ampan98"},"content":"     * @param index Index of task to update."},{"lineNumber":78,"author":{"gitId":"ampan98"},"content":"     * @throws IOException If unable to save to file."},{"lineNumber":79,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"ampan98"},"content":"    public void markAsDone(int index) throws IOException {"},{"lineNumber":81,"author":{"gitId":"ampan98"},"content":"        get(index).markAsDone();"},{"lineNumber":82,"author":{"gitId":"ampan98"},"content":"        updateStorage();"},{"lineNumber":83,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":85,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"ampan98"},"content":"     * Updates storage with task list."},{"lineNumber":87,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"ampan98"},"content":"     * @throws IOException If unable to save to file."},{"lineNumber":89,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"ampan98"},"content":"    public void updateStorage() throws IOException {"},{"lineNumber":91,"author":{"gitId":"ampan98"},"content":"        this.storage.save(tasks);"},{"lineNumber":92,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"ampan98"},"content":"}"}],"authorContributionMap":{"ampan98":93}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":" * A subclass of Task, used for tasks with no timing."},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":" */"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"    protected static final String TAG \u003d \"[T]\";"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"    public Todo(String name) {"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"        super(name);"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"        return Todo.TAG + super.toString();"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"}"}],"authorContributionMap":{"ampan98":17}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":"import javafx.scene.control.Button;"},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":"import javafx.scene.control.Label;"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"import javafx.scene.layout.Border;"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"import javafx.scene.layout.BorderStroke;"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"import javafx.scene.layout.BorderStrokeStyle;"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":"import javafx.scene.layout.BorderWidths;"},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":21,"author":{"gitId":"ampan98"},"content":"import javafx.scene.paint.Paint;"},{"lineNumber":22,"author":{"gitId":"ampan98"},"content":"import javafx.stage.Stage;"},{"lineNumber":23,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":24,"author":{"gitId":"ampan98"},"content":"/**"},{"lineNumber":25,"author":{"gitId":"ampan98"},"content":" * Manages the exchange of user input and program output."},{"lineNumber":26,"author":{"gitId":"ampan98"},"content":" */"},{"lineNumber":27,"author":{"gitId":"ampan98"},"content":"public class Ui extends Application {"},{"lineNumber":28,"author":{"gitId":"ampan98"},"content":"    public static final String LOGO \u003d \"D U K E\";"},{"lineNumber":29,"author":{"gitId":"ampan98"},"content":"    protected Scanner scanner;"},{"lineNumber":30,"author":{"gitId":"ampan98"},"content":"    protected TaskList tasks;"},{"lineNumber":31,"author":{"gitId":"ampan98"},"content":"    private Stage stage;"},{"lineNumber":32,"author":{"gitId":"ampan98"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":33,"author":{"gitId":"ampan98"},"content":"    private VBox dialogContainer;"},{"lineNumber":34,"author":{"gitId":"ampan98"},"content":"    private TextField userInput;"},{"lineNumber":35,"author":{"gitId":"ampan98"},"content":"    private Button sendButton;"},{"lineNumber":36,"author":{"gitId":"ampan98"},"content":"    private Scene scene;"},{"lineNumber":37,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":38,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"ampan98"},"content":"     * Initialises the input scanner and task list."},{"lineNumber":40,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"ampan98"},"content":"    public void initialise() {"},{"lineNumber":42,"author":{"gitId":"ampan98"},"content":"        scanner \u003d new Scanner(System.in);"},{"lineNumber":43,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":44,"author":{"gitId":"ampan98"},"content":"        // Initialise task list"},{"lineNumber":45,"author":{"gitId":"ampan98"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":46,"author":{"gitId":"ampan98"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"ampan98"},"content":"            tasks.load();"},{"lineNumber":48,"author":{"gitId":"ampan98"},"content":"        } catch (IOException ex) {"},{"lineNumber":49,"author":{"gitId":"ampan98"},"content":"            System.out.println(\"  Unable to load tasks.\");"},{"lineNumber":50,"author":{"gitId":"ampan98"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":53,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"ampan98"},"content":"     * Creates the GUI for user to communicate with Duke."},{"lineNumber":55,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"ampan98"},"content":"     * @param stage The stage for the GUI."},{"lineNumber":57,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"ampan98"},"content":"    @Override"},{"lineNumber":59,"author":{"gitId":"ampan98"},"content":"    public void start(Stage stage) {"},{"lineNumber":60,"author":{"gitId":"ampan98"},"content":"        this.stage \u003d stage;"},{"lineNumber":61,"author":{"gitId":"ampan98"},"content":"        initialise();"},{"lineNumber":62,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":63,"author":{"gitId":"ampan98"},"content":"        // Create nodes for GUI"},{"lineNumber":64,"author":{"gitId":"ampan98"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":65,"author":{"gitId":"ampan98"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":66,"author":{"gitId":"ampan98"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":67,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":68,"author":{"gitId":"ampan98"},"content":"        userInput \u003d new TextField();"},{"lineNumber":69,"author":{"gitId":"ampan98"},"content":"        sendButton \u003d new Button(\"Send\");"},{"lineNumber":70,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":71,"author":{"gitId":"ampan98"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":72,"author":{"gitId":"ampan98"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":73,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":74,"author":{"gitId":"ampan98"},"content":"        scene \u003d new Scene(mainLayout);"},{"lineNumber":75,"author":{"gitId":"ampan98"},"content":"        stage.setScene(scene);"},{"lineNumber":76,"author":{"gitId":"ampan98"},"content":"        stage.show();"},{"lineNumber":77,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":78,"author":{"gitId":"ampan98"},"content":"        // Arrange nodes for GUI"},{"lineNumber":79,"author":{"gitId":"ampan98"},"content":"        stage.setTitle(\"Duke\");"},{"lineNumber":80,"author":{"gitId":"ampan98"},"content":"        stage.setResizable(false);"},{"lineNumber":81,"author":{"gitId":"ampan98"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":82,"author":{"gitId":"ampan98"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":83,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":84,"author":{"gitId":"ampan98"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":85,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":86,"author":{"gitId":"ampan98"},"content":"        scrollPane.setPrefSize(385, 535);"},{"lineNumber":87,"author":{"gitId":"ampan98"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":88,"author":{"gitId":"ampan98"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":89,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":90,"author":{"gitId":"ampan98"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":91,"author":{"gitId":"ampan98"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":92,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":93,"author":{"gitId":"ampan98"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":94,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":95,"author":{"gitId":"ampan98"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":96,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":97,"author":{"gitId":"ampan98"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":98,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":99,"author":{"gitId":"ampan98"},"content":"        // Set anchor points for GUI"},{"lineNumber":100,"author":{"gitId":"ampan98"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":101,"author":{"gitId":"ampan98"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":102,"author":{"gitId":"ampan98"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":103,"author":{"gitId":"ampan98"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);"},{"lineNumber":104,"author":{"gitId":"ampan98"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":105,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":106,"author":{"gitId":"ampan98"},"content":"        // Auto scroll to bottom of screen"},{"lineNumber":107,"author":{"gitId":"ampan98"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":108,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":109,"author":{"gitId":"ampan98"},"content":"        // Display startup message from Duke"},{"lineNumber":110,"author":{"gitId":"ampan98"},"content":"        String startMessage \u003d \"  Hello from\\n    \" + LOGO + \"\\n\""},{"lineNumber":111,"author":{"gitId":"ampan98"},"content":"                + \"  Please input a command.\";"},{"lineNumber":112,"author":{"gitId":"ampan98"},"content":"        displayResponse(startMessage);"},{"lineNumber":113,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":114,"author":{"gitId":"ampan98"},"content":"        // Provide user with interactive actions"},{"lineNumber":115,"author":{"gitId":"ampan98"},"content":"        sendButton.setOnMouseClicked((event) -\u003e processUserInput());"},{"lineNumber":116,"author":{"gitId":"ampan98"},"content":"        userInput.setOnAction((event) -\u003e processUserInput());"},{"lineNumber":117,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":119,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":120,"author":{"gitId":"ampan98"},"content":"     * Processes user input and displays response by Duke."},{"lineNumber":121,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":122,"author":{"gitId":"ampan98"},"content":"    private void processUserInput() {"},{"lineNumber":123,"author":{"gitId":"ampan98"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":124,"author":{"gitId":"ampan98"},"content":"        dialogContainer.getChildren().add(getDialogBox(\"\\n\" + input));"},{"lineNumber":125,"author":{"gitId":"ampan98"},"content":"        userInput.clear();"},{"lineNumber":126,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":127,"author":{"gitId":"ampan98"},"content":"        String output \u003d \"\";"},{"lineNumber":128,"author":{"gitId":"ampan98"},"content":"        try {"},{"lineNumber":129,"author":{"gitId":"ampan98"},"content":"            output \u003d Parser.process(input, this.tasks);"},{"lineNumber":130,"author":{"gitId":"ampan98"},"content":"        } catch (DukeException ex) {"},{"lineNumber":131,"author":{"gitId":"ampan98"},"content":"            displayResponse(ex.toString());"},{"lineNumber":132,"author":{"gitId":"ampan98"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"ampan98"},"content":"        if (output \u003d\u003d null) {"},{"lineNumber":134,"author":{"gitId":"ampan98"},"content":"            displayResponse(\"  Can you read this before the UI closes?\");"},{"lineNumber":135,"author":{"gitId":"ampan98"},"content":"            stage.close();"},{"lineNumber":136,"author":{"gitId":"ampan98"},"content":"        } else if (!output.equals(\"\")) {"},{"lineNumber":137,"author":{"gitId":"ampan98"},"content":"            displayResponse(output);"},{"lineNumber":138,"author":{"gitId":"ampan98"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":141,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":142,"author":{"gitId":"ampan98"},"content":"     * Creates a box with the specified text."},{"lineNumber":143,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":144,"author":{"gitId":"ampan98"},"content":"     * @param text String containing text to add."},{"lineNumber":145,"author":{"gitId":"ampan98"},"content":"     * @return A box with the specified text that has word wrap enabled."},{"lineNumber":146,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":147,"author":{"gitId":"ampan98"},"content":"    private HBox getDialogBox(String text) {"},{"lineNumber":148,"author":{"gitId":"ampan98"},"content":"        Label textToAdd \u003d new Label(text);"},{"lineNumber":149,"author":{"gitId":"ampan98"},"content":"        textToAdd.setWrapText(true);"},{"lineNumber":150,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":151,"author":{"gitId":"ampan98"},"content":"        return new HBox(textToAdd);"},{"lineNumber":152,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":154,"author":{"gitId":"ampan98"},"content":"    /**"},{"lineNumber":155,"author":{"gitId":"ampan98"},"content":"     * Displays the response from Duke in a text box with black border."},{"lineNumber":156,"author":{"gitId":"ampan98"},"content":"     *"},{"lineNumber":157,"author":{"gitId":"ampan98"},"content":"     * @param response String to display."},{"lineNumber":158,"author":{"gitId":"ampan98"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"ampan98"},"content":"    private void displayResponse(String response) {"},{"lineNumber":160,"author":{"gitId":"ampan98"},"content":"        HBox dialogBox \u003d getDialogBox(\"\\n\" + response);"},{"lineNumber":161,"author":{"gitId":"ampan98"},"content":"        dialogBox.setBorder(new Border(new BorderStroke(Paint.valueOf(\"BLACK\"),"},{"lineNumber":162,"author":{"gitId":"ampan98"},"content":"                BorderStrokeStyle.SOLID, CornerRadii.EMPTY, BorderWidths.DEFAULT)));"},{"lineNumber":163,"author":{"gitId":"ampan98"},"content":"        dialogContainer.getChildren().add(dialogBox);"},{"lineNumber":164,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"ampan98"},"content":"}"}],"authorContributionMap":{"ampan98":165}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":" * Used to test Deadline, a subclass of Task."},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":" */"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"public class DeadlineTest {"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"    public void testName() {"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"        Deadline task \u003d new Deadline(\"return book (by: 2020-05-01)\");"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"        assertEquals(\"[D][ ] return book (by: May 01 2020)\", task.toString());"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"    public void testMarkAsDone() {"},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"        Deadline task \u003d new Deadline(\"return book (by: 2020-05-01)\");"},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":"        task.markAsDone();"},{"lineNumber":21,"author":{"gitId":"ampan98"},"content":"        assertEquals(\"[D][X] return book (by: May 01 2020)\", task.toString());"},{"lineNumber":22,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ampan98"},"content":"}"}],"authorContributionMap":{"ampan98":23}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":" * Used to test Event, a subclass of Task."},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":" */"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"public class EventTest {"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"    public void testName() {"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"        Event task \u003d new Event(\"return book (at: 2020-05-01)\");"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"        assertEquals(\"[E][ ] return book (at: May 01 2020)\", task.toString());"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"    public void testMarkAsDone() {"},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"        Event task \u003d new Event(\"return book (at: 2020-05-01)\");"},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":"        task.markAsDone();"},{"lineNumber":21,"author":{"gitId":"ampan98"},"content":"        assertEquals(\"[E][X] return book (at: May 01 2020)\", task.toString());"},{"lineNumber":22,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ampan98"},"content":"}"}],"authorContributionMap":{"ampan98":23}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ampan98"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":3,"author":{"gitId":"ampan98"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":5,"author":{"gitId":"ampan98"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":7,"author":{"gitId":"ampan98"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"ampan98"},"content":" * Used to test Todo, a subclass of Task."},{"lineNumber":9,"author":{"gitId":"ampan98"},"content":" */"},{"lineNumber":10,"author":{"gitId":"ampan98"},"content":"public class TodoTest {"},{"lineNumber":11,"author":{"gitId":"ampan98"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"ampan98"},"content":"    public void testName() {"},{"lineNumber":13,"author":{"gitId":"ampan98"},"content":"        Todo task \u003d new Todo(\"borrow books\");"},{"lineNumber":14,"author":{"gitId":"ampan98"},"content":"        assertEquals(\"[T][ ] borrow books\", task.toString());"},{"lineNumber":15,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"ampan98"},"content":""},{"lineNumber":17,"author":{"gitId":"ampan98"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"ampan98"},"content":"    public void testMarkAsDone() {"},{"lineNumber":19,"author":{"gitId":"ampan98"},"content":"        Todo task \u003d new Todo(\"borrow books\");"},{"lineNumber":20,"author":{"gitId":"ampan98"},"content":"        task.markAsDone();"},{"lineNumber":21,"author":{"gitId":"ampan98"},"content":"        assertEquals(\"[T][X] borrow books\", task.toString());"},{"lineNumber":22,"author":{"gitId":"ampan98"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"ampan98"},"content":"}"}],"authorContributionMap":{"ampan98":23}}]
