[{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"T | 1 | haha"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":"D | 1 | running | 2020-12-21 SUnday"},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"D | 0 | jooing | 2019-10-12 Monday"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":"T | 0 | 99"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"T | 0 | read book"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"T | 0 | haha"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"T | 0 | return book"}],"authorContributionMap":{"xuanqi966":7}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"    protected String by;"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"        this.by \u003d by;"},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":"     * Returns a string of date formatted to the expected format"},{"lineNumber":17,"author":{"gitId":"xuanqi966"},"content":"     * e.g. 2020-12-21 is returned as DEC 21 2020"},{"lineNumber":18,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"xuanqi966"},"content":"     * @param by the userinput for the deadline date"},{"lineNumber":20,"author":{"gitId":"xuanqi966"},"content":"     * @return String of correctly formatted date"},{"lineNumber":21,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"xuanqi966"},"content":"    public String extractDateTime(String by) {"},{"lineNumber":23,"author":{"gitId":"xuanqi966"},"content":"        String[] temp \u003d by.split(\" \");"},{"lineNumber":24,"author":{"gitId":"xuanqi966"},"content":"        LocalDate date \u003d LocalDate.parse(temp[0]);"},{"lineNumber":25,"author":{"gitId":"xuanqi966"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + temp[1];"},{"lineNumber":26,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":28,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"xuanqi966"},"content":"     * Returns a string of the format of task to be saved to text file"},{"lineNumber":30,"author":{"gitId":"xuanqi966"},"content":"     * e.g. D | 1 | running | 2020-12-21 Sunday"},{"lineNumber":31,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"xuanqi966"},"content":"     * @return String of correctly formatted task"},{"lineNumber":33,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"xuanqi966"},"content":"    public String saveToFile() {"},{"lineNumber":35,"author":{"gitId":"xuanqi966"},"content":"        return \"D\" + super.toString() + \" | \" + by;"},{"lineNumber":36,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":38,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"xuanqi966"},"content":"     * Returns a string of the format of task to be printed to console"},{"lineNumber":40,"author":{"gitId":"xuanqi966"},"content":"     * e.g. D | 1 | running | DEC 21 2020 Sunday"},{"lineNumber":41,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"xuanqi966"},"content":"     * @return String of correctly formatted task"},{"lineNumber":43,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"xuanqi966"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"xuanqi966"},"content":"    public String toString() {"},{"lineNumber":46,"author":{"gitId":"xuanqi966"},"content":"        return \"D\" + super.toString() + \" | \" + extractDateTime(by);"},{"lineNumber":47,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":48}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"    private Storage storage;"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"    private TaskList tasks;"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"    private Ui ui;"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"    public Duke(String filePath) {"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":"        ui \u003d new Ui();"},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"xuanqi966"},"content":"            tasks \u003d new TaskList(storage.load()); // returns a List\u003cTask\u003e of all tasks"},{"lineNumber":18,"author":{"gitId":"xuanqi966"},"content":"        } catch (DukeException e) {"},{"lineNumber":19,"author":{"gitId":"xuanqi966"},"content":"            ui.showLoadingError();"},{"lineNumber":20,"author":{"gitId":"xuanqi966"},"content":"            ui.showLine();"},{"lineNumber":21,"author":{"gitId":"xuanqi966"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":22,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":25,"author":{"gitId":"xuanqi966"},"content":"    public void run() {"},{"lineNumber":26,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":27,"author":{"gitId":"xuanqi966"},"content":"        // initialise all necessary variables"},{"lineNumber":28,"author":{"gitId":"xuanqi966"},"content":"        Scanner inputScanner \u003d new Scanner(System.in);"},{"lineNumber":29,"author":{"gitId":"xuanqi966"},"content":"        Boolean terminate \u003d false; // to check if the chatbot should be terminated"},{"lineNumber":30,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":31,"author":{"gitId":"xuanqi966"},"content":"        ui.showLine();"},{"lineNumber":32,"author":{"gitId":"xuanqi966"},"content":"        ui.showWelcomeMsg();"},{"lineNumber":33,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":34,"author":{"gitId":"xuanqi966"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":35,"author":{"gitId":"xuanqi966"},"content":"        String[] parsedInput;"},{"lineNumber":36,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":37,"author":{"gitId":"xuanqi966"},"content":"        while (!terminate) {"},{"lineNumber":38,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":39,"author":{"gitId":"xuanqi966"},"content":"            String userInput \u003d inputScanner.nextLine();"},{"lineNumber":40,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":41,"author":{"gitId":"xuanqi966"},"content":"            try {"},{"lineNumber":42,"author":{"gitId":"xuanqi966"},"content":"                parsedInput \u003d parser.processInput(userInput);"},{"lineNumber":43,"author":{"gitId":"xuanqi966"},"content":"            } catch (DukeException e) {"},{"lineNumber":44,"author":{"gitId":"xuanqi966"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":45,"author":{"gitId":"xuanqi966"},"content":"                continue;"},{"lineNumber":46,"author":{"gitId":"xuanqi966"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"xuanqi966"},"content":"            if (parsedInput[0].equals(\"LST\")) {"},{"lineNumber":48,"author":{"gitId":"xuanqi966"},"content":"                ui.showListMsg();"},{"lineNumber":49,"author":{"gitId":"xuanqi966"},"content":"                tasks.printTask();"},{"lineNumber":50,"author":{"gitId":"xuanqi966"},"content":"                ui.showLine();"},{"lineNumber":51,"author":{"gitId":"xuanqi966"},"content":"            } else if (parsedInput[0].equals(\"BYE\")) {"},{"lineNumber":52,"author":{"gitId":"xuanqi966"},"content":"                ui.showByeMsg();"},{"lineNumber":53,"author":{"gitId":"xuanqi966"},"content":"                ui.showLine();"},{"lineNumber":54,"author":{"gitId":"xuanqi966"},"content":"                terminate \u003d true;"},{"lineNumber":55,"author":{"gitId":"xuanqi966"},"content":"            } else if (parsedInput[0].equals(\"DON\")) {"},{"lineNumber":56,"author":{"gitId":"xuanqi966"},"content":"                int taskIndex \u003d Integer.parseInt(parsedInput[1]);"},{"lineNumber":57,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":58,"author":{"gitId":"xuanqi966"},"content":"                if (tasks.checkTaskExist(taskIndex)) {"},{"lineNumber":59,"author":{"gitId":"xuanqi966"},"content":"                    Task currTask \u003d tasks.getTask(taskIndex);"},{"lineNumber":60,"author":{"gitId":"xuanqi966"},"content":"                    currTask.markAsDone();"},{"lineNumber":61,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":62,"author":{"gitId":"xuanqi966"},"content":"                    ui.showDoneMsg();"},{"lineNumber":63,"author":{"gitId":"xuanqi966"},"content":"                    ui.printTask(currTask);"},{"lineNumber":64,"author":{"gitId":"xuanqi966"},"content":"                    ui.showLine();"},{"lineNumber":65,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":66,"author":{"gitId":"xuanqi966"},"content":"                    storage.save(tasks);"},{"lineNumber":67,"author":{"gitId":"xuanqi966"},"content":"                } else {"},{"lineNumber":68,"author":{"gitId":"xuanqi966"},"content":"                    System.out.println(\"Requested task does not exist\");"},{"lineNumber":69,"author":{"gitId":"xuanqi966"},"content":"                    ui.showLine();"},{"lineNumber":70,"author":{"gitId":"xuanqi966"},"content":"                }"},{"lineNumber":71,"author":{"gitId":"xuanqi966"},"content":"            } else if (parsedInput[0].equals(\"TDO\")) {"},{"lineNumber":72,"author":{"gitId":"xuanqi966"},"content":"                Todo newTodo \u003d new Todo(parsedInput[1]);"},{"lineNumber":73,"author":{"gitId":"xuanqi966"},"content":"                tasks.addTask(newTodo);"},{"lineNumber":74,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":75,"author":{"gitId":"xuanqi966"},"content":"                ui.showTaskMsg();"},{"lineNumber":76,"author":{"gitId":"xuanqi966"},"content":"                ui.printTask(newTodo);"},{"lineNumber":77,"author":{"gitId":"xuanqi966"},"content":"                ui.showTaskCount(tasks.getTaskCount());"},{"lineNumber":78,"author":{"gitId":"xuanqi966"},"content":"                ui.showLine();"},{"lineNumber":79,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":80,"author":{"gitId":"xuanqi966"},"content":"                storage.save(tasks);"},{"lineNumber":81,"author":{"gitId":"xuanqi966"},"content":"            } else if (parsedInput[0].equals(\"DDL\")) {"},{"lineNumber":82,"author":{"gitId":"xuanqi966"},"content":"                Deadline newDl \u003d new Deadline(parsedInput[1], parsedInput[2]);"},{"lineNumber":83,"author":{"gitId":"xuanqi966"},"content":"                tasks.addTask(newDl);"},{"lineNumber":84,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":85,"author":{"gitId":"xuanqi966"},"content":"                ui.showTaskMsg();"},{"lineNumber":86,"author":{"gitId":"xuanqi966"},"content":"                ui.printTask(newDl);"},{"lineNumber":87,"author":{"gitId":"xuanqi966"},"content":"                ui.showTaskCount(tasks.getTaskCount());"},{"lineNumber":88,"author":{"gitId":"xuanqi966"},"content":"                ui.showLine();"},{"lineNumber":89,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":90,"author":{"gitId":"xuanqi966"},"content":"                storage.save(tasks);"},{"lineNumber":91,"author":{"gitId":"xuanqi966"},"content":"            } else if (parsedInput[0].equals(\"ENT\")) {"},{"lineNumber":92,"author":{"gitId":"xuanqi966"},"content":"                Event newEnt \u003d new Event(parsedInput[1], parsedInput[2]);"},{"lineNumber":93,"author":{"gitId":"xuanqi966"},"content":"                tasks.addTask(newEnt);"},{"lineNumber":94,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":95,"author":{"gitId":"xuanqi966"},"content":"                ui.showTaskMsg();"},{"lineNumber":96,"author":{"gitId":"xuanqi966"},"content":"                ui.printTask(newEnt);"},{"lineNumber":97,"author":{"gitId":"xuanqi966"},"content":"                ui.showTaskCount(tasks.getTaskCount());"},{"lineNumber":98,"author":{"gitId":"xuanqi966"},"content":"                ui.showLine();"},{"lineNumber":99,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":100,"author":{"gitId":"xuanqi966"},"content":"                storage.save(tasks);"},{"lineNumber":101,"author":{"gitId":"xuanqi966"},"content":"            } else if (parsedInput[0].equals(\"DLT\")) {"},{"lineNumber":102,"author":{"gitId":"xuanqi966"},"content":"                int taskIndex \u003d Integer.parseInt(parsedInput[1]);"},{"lineNumber":103,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":104,"author":{"gitId":"xuanqi966"},"content":"                if (tasks.checkTaskExist(taskIndex)) {"},{"lineNumber":105,"author":{"gitId":"xuanqi966"},"content":"                    Task currTask \u003d tasks.getTask(taskIndex);"},{"lineNumber":106,"author":{"gitId":"xuanqi966"},"content":"                    tasks.deleteTask(taskIndex);"},{"lineNumber":107,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":108,"author":{"gitId":"xuanqi966"},"content":"                    ui.showDeleteMsg();"},{"lineNumber":109,"author":{"gitId":"xuanqi966"},"content":"                    ui.printTask(currTask);"},{"lineNumber":110,"author":{"gitId":"xuanqi966"},"content":"                    ui.showLine();"},{"lineNumber":111,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":112,"author":{"gitId":"xuanqi966"},"content":"                    storage.save(tasks);"},{"lineNumber":113,"author":{"gitId":"xuanqi966"},"content":"                } else {"},{"lineNumber":114,"author":{"gitId":"xuanqi966"},"content":"                    System.out.println(\"Requested task does not exist\");"},{"lineNumber":115,"author":{"gitId":"xuanqi966"},"content":"                    ui.showLine();"},{"lineNumber":116,"author":{"gitId":"xuanqi966"},"content":"                }"},{"lineNumber":117,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":118,"author":{"gitId":"xuanqi966"},"content":"            } else if (parsedInput[0].equals(\"FND\")) {"},{"lineNumber":119,"author":{"gitId":"xuanqi966"},"content":"                String keyword \u003d parsedInput[1];"},{"lineNumber":120,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":121,"author":{"gitId":"xuanqi966"},"content":"                List\u003cTask\u003e foundTasks \u003d tasks.findTask(keyword);"},{"lineNumber":122,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":123,"author":{"gitId":"xuanqi966"},"content":"                if (foundTasks.isEmpty()) {"},{"lineNumber":124,"author":{"gitId":"xuanqi966"},"content":"                    ui.showCannotFind();"},{"lineNumber":125,"author":{"gitId":"xuanqi966"},"content":"                    ui.showLine();"},{"lineNumber":126,"author":{"gitId":"xuanqi966"},"content":"                } else {"},{"lineNumber":127,"author":{"gitId":"xuanqi966"},"content":"                    ui.showFoundText();"},{"lineNumber":128,"author":{"gitId":"xuanqi966"},"content":"                    int i \u003d 1;"},{"lineNumber":129,"author":{"gitId":"xuanqi966"},"content":"                    for (Task t : foundTasks) {"},{"lineNumber":130,"author":{"gitId":"xuanqi966"},"content":"                        System.out.println(i + \". \" + t.toString());"},{"lineNumber":131,"author":{"gitId":"xuanqi966"},"content":"                        i++;"},{"lineNumber":132,"author":{"gitId":"xuanqi966"},"content":"                    }"},{"lineNumber":133,"author":{"gitId":"xuanqi966"},"content":"                    ui.showLine();"},{"lineNumber":134,"author":{"gitId":"xuanqi966"},"content":"                }"},{"lineNumber":135,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":136,"author":{"gitId":"xuanqi966"},"content":"            } else {"},{"lineNumber":137,"author":{"gitId":"xuanqi966"},"content":"                System.out.println(\"Something went wrong!\");"},{"lineNumber":138,"author":{"gitId":"xuanqi966"},"content":"            }"},{"lineNumber":139,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":142,"author":{"gitId":"xuanqi966"},"content":"    public static void main(String[] args) {"},{"lineNumber":143,"author":{"gitId":"xuanqi966"},"content":"        new Duke(\"data/tasks.txt\").run();"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":3,"xuanqi966":142}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"public class DukeException extends Exception{"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"        super(errorMessage);"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":9}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"    protected String at;"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"    public Event(String description, String at) {"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"        this.at \u003d at;"},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":"     * Returns a string of date formatted to the expected format"},{"lineNumber":17,"author":{"gitId":"xuanqi966"},"content":"     * e.g. 2020-12-21 is returned as DEC 21 2020"},{"lineNumber":18,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"xuanqi966"},"content":"     * @param at the userinput for the event date"},{"lineNumber":20,"author":{"gitId":"xuanqi966"},"content":"     * @return String of correctly formatted date"},{"lineNumber":21,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"xuanqi966"},"content":"    public String extractDateTime(String at) {"},{"lineNumber":23,"author":{"gitId":"xuanqi966"},"content":"        String[] temp \u003d at.split(\" \");"},{"lineNumber":24,"author":{"gitId":"xuanqi966"},"content":"        LocalDate date \u003d LocalDate.parse(temp[0]);"},{"lineNumber":25,"author":{"gitId":"xuanqi966"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + temp[1];"},{"lineNumber":26,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":28,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"xuanqi966"},"content":"     * Returns a string of the format of task to be saved to text file"},{"lineNumber":30,"author":{"gitId":"xuanqi966"},"content":"     * e.g. E | 1 | running | 2020-12-21 Sunday"},{"lineNumber":31,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"xuanqi966"},"content":"     * @return String of correctly formatted task"},{"lineNumber":33,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"xuanqi966"},"content":"    public String saveToFile() {"},{"lineNumber":35,"author":{"gitId":"xuanqi966"},"content":"        return \"E\" + super.toString() + \" | \" + at;"},{"lineNumber":36,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":38,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"xuanqi966"},"content":"     * Returns a string of the format of task to be printed to console"},{"lineNumber":40,"author":{"gitId":"xuanqi966"},"content":"     * e.g. E | 1 | running | DEC 21 2020 Sunday"},{"lineNumber":41,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"xuanqi966"},"content":"     * @return String of correctly formatted task"},{"lineNumber":43,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"xuanqi966"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"xuanqi966"},"content":"    public String toString() {"},{"lineNumber":46,"author":{"gitId":"xuanqi966"},"content":"        return \"E\" + super.toString() + \" | \" + extractDateTime(at);"},{"lineNumber":47,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":48}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"public class Parser {"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"    public Parser() {"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"     * Returns boolean value indicating whether input text is numerical"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"     * @param str string to be tested"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"     * @return boolean value"},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":"    public static boolean isNumber(String str) {"},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":"        // check for null or empty"},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":"        if (str \u003d\u003d null || str.length() \u003d\u003d 0) {"},{"lineNumber":17,"author":{"gitId":"xuanqi966"},"content":"            return false;"},{"lineNumber":18,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":20,"author":{"gitId":"xuanqi966"},"content":"        for (char c : str.toCharArray()) {"},{"lineNumber":21,"author":{"gitId":"xuanqi966"},"content":"            if (!Character.isDigit(c)) {"},{"lineNumber":22,"author":{"gitId":"xuanqi966"},"content":"                return false;"},{"lineNumber":23,"author":{"gitId":"xuanqi966"},"content":"            }"},{"lineNumber":24,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"xuanqi966"},"content":"        return true;"},{"lineNumber":26,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":28,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":29,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"xuanqi966"},"content":"     * Returns an array of strings with processed text inputs"},{"lineNumber":31,"author":{"gitId":"xuanqi966"},"content":"     * e.g. a processed input for deadline reading /by 2019-02-20 8pm will be [\"DDL\", \"0\", \"reading\", \"2019-02-20 8pm\"]"},{"lineNumber":32,"author":{"gitId":"xuanqi966"},"content":"     * the returned array will then be passed to other functions in Duke.java for further processing"},{"lineNumber":33,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"xuanqi966"},"content":"     * @param inputLine input by user"},{"lineNumber":35,"author":{"gitId":"xuanqi966"},"content":"     * @return an array of processes strings"},{"lineNumber":36,"author":{"gitId":"xuanqi966"},"content":"     * @throws DukeException If user input is in invalid formats"},{"lineNumber":37,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"xuanqi966"},"content":"    public String[] processInput(String inputLine) throws DukeException{"},{"lineNumber":39,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":40,"author":{"gitId":"xuanqi966"},"content":"        String[] result \u003d new String[5];"},{"lineNumber":41,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":42,"author":{"gitId":"xuanqi966"},"content":"        if (inputLine.equals(\"list\")) {"},{"lineNumber":43,"author":{"gitId":"xuanqi966"},"content":"            result[0] \u003d \"LST\";"},{"lineNumber":44,"author":{"gitId":"xuanqi966"},"content":"        } else if (inputLine.equals(\"bye\")) {"},{"lineNumber":45,"author":{"gitId":"xuanqi966"},"content":"            result[0] \u003d \"BYE\";"},{"lineNumber":46,"author":{"gitId":"xuanqi966"},"content":"        } else if (inputLine.equals(\"done\")) {"},{"lineNumber":47,"author":{"gitId":"xuanqi966"},"content":"            throw new DukeException(\"The task number of a done cannot be empty. Please try again.\");"},{"lineNumber":48,"author":{"gitId":"xuanqi966"},"content":"        } else if (inputLine.startsWith(\"done\")) {"},{"lineNumber":49,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":50,"author":{"gitId":"xuanqi966"},"content":"            String index \u003d inputLine.substring(5);"},{"lineNumber":51,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":52,"author":{"gitId":"xuanqi966"},"content":"             if (isNumber(index)) {"},{"lineNumber":53,"author":{"gitId":"xuanqi966"},"content":"                 result[0] \u003d \"DON\";"},{"lineNumber":54,"author":{"gitId":"xuanqi966"},"content":"                 result[1] \u003d index;"},{"lineNumber":55,"author":{"gitId":"xuanqi966"},"content":"             } else {"},{"lineNumber":56,"author":{"gitId":"xuanqi966"},"content":"                 throw new DukeException(\"Please enter a numerical task number.\");"},{"lineNumber":57,"author":{"gitId":"xuanqi966"},"content":"             }"},{"lineNumber":58,"author":{"gitId":"xuanqi966"},"content":"        } else if (inputLine.startsWith(\"todo\")) {"},{"lineNumber":59,"author":{"gitId":"xuanqi966"},"content":"            if (inputLine.equals(\"todo\")) {"},{"lineNumber":60,"author":{"gitId":"xuanqi966"},"content":"                throw new DukeException(\"Please enter a todo description.\");"},{"lineNumber":61,"author":{"gitId":"xuanqi966"},"content":"            } else {"},{"lineNumber":62,"author":{"gitId":"xuanqi966"},"content":"                String todoDesc \u003d inputLine.substring(5);"},{"lineNumber":63,"author":{"gitId":"xuanqi966"},"content":"                result[0] \u003d \"TDO\";"},{"lineNumber":64,"author":{"gitId":"xuanqi966"},"content":"                result[1] \u003d todoDesc;"},{"lineNumber":65,"author":{"gitId":"xuanqi966"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"xuanqi966"},"content":"        } else if (inputLine.startsWith(\"deadline\")) {"},{"lineNumber":67,"author":{"gitId":"xuanqi966"},"content":"            if (inputLine.equals(\"deadline\")) {"},{"lineNumber":68,"author":{"gitId":"xuanqi966"},"content":"                throw new DukeException(\"Please enter a deadline description.\");"},{"lineNumber":69,"author":{"gitId":"xuanqi966"},"content":"            } else {"},{"lineNumber":70,"author":{"gitId":"xuanqi966"},"content":"                String dlMsg \u003d inputLine.substring(9);"},{"lineNumber":71,"author":{"gitId":"xuanqi966"},"content":"                String[] temp \u003d dlMsg.split(\" /by \");"},{"lineNumber":72,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":73,"author":{"gitId":"xuanqi966"},"content":"                if (temp.length \u003d\u003d 1) {"},{"lineNumber":74,"author":{"gitId":"xuanqi966"},"content":"                    throw new DukeException(\"Please enter a deadline completion time.\");"},{"lineNumber":75,"author":{"gitId":"xuanqi966"},"content":"                } else {"},{"lineNumber":76,"author":{"gitId":"xuanqi966"},"content":"                    String dlDesc \u003d temp[0];"},{"lineNumber":77,"author":{"gitId":"xuanqi966"},"content":"                    String by \u003d temp[1];"},{"lineNumber":78,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":79,"author":{"gitId":"xuanqi966"},"content":"                    result[0] \u003d \"DDL\";"},{"lineNumber":80,"author":{"gitId":"xuanqi966"},"content":"                    result[1] \u003d dlDesc;"},{"lineNumber":81,"author":{"gitId":"xuanqi966"},"content":"                    result[2] \u003d by;"},{"lineNumber":82,"author":{"gitId":"xuanqi966"},"content":"                }"},{"lineNumber":83,"author":{"gitId":"xuanqi966"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"xuanqi966"},"content":"        } else if (inputLine.startsWith(\"event\")) {"},{"lineNumber":85,"author":{"gitId":"xuanqi966"},"content":"            if (inputLine.equals(\"event\")) {"},{"lineNumber":86,"author":{"gitId":"xuanqi966"},"content":"                throw new DukeException(\"Please enter an event description.\");"},{"lineNumber":87,"author":{"gitId":"xuanqi966"},"content":"            } else {"},{"lineNumber":88,"author":{"gitId":"xuanqi966"},"content":"                String dlMsg \u003d inputLine.substring(6);"},{"lineNumber":89,"author":{"gitId":"xuanqi966"},"content":"                String[] temp \u003d dlMsg.split(\" /at \");"},{"lineNumber":90,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":91,"author":{"gitId":"xuanqi966"},"content":"                if (temp.length \u003d\u003d 1) {"},{"lineNumber":92,"author":{"gitId":"xuanqi966"},"content":"                    throw new DukeException(\"Please enter an event time.\");"},{"lineNumber":93,"author":{"gitId":"xuanqi966"},"content":"                } else {"},{"lineNumber":94,"author":{"gitId":"xuanqi966"},"content":"                    String evDesc \u003d temp[0];"},{"lineNumber":95,"author":{"gitId":"xuanqi966"},"content":"                    String at \u003d temp[1];"},{"lineNumber":96,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":97,"author":{"gitId":"xuanqi966"},"content":"                    result[0] \u003d \"ENT\";"},{"lineNumber":98,"author":{"gitId":"xuanqi966"},"content":"                    result[1] \u003d evDesc;"},{"lineNumber":99,"author":{"gitId":"xuanqi966"},"content":"                    result[2] \u003d at;"},{"lineNumber":100,"author":{"gitId":"xuanqi966"},"content":"                }"},{"lineNumber":101,"author":{"gitId":"xuanqi966"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"xuanqi966"},"content":"        } else if (inputLine.startsWith(\"delete\")) {"},{"lineNumber":103,"author":{"gitId":"xuanqi966"},"content":"            if (inputLine.equals(\"delete\")) {"},{"lineNumber":104,"author":{"gitId":"xuanqi966"},"content":"                throw new DukeException(\"Please tell me which task you\u0027d like to delete.\");"},{"lineNumber":105,"author":{"gitId":"xuanqi966"},"content":"            } else {"},{"lineNumber":106,"author":{"gitId":"xuanqi966"},"content":"                String temp \u003d inputLine.substring(7);"},{"lineNumber":107,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":108,"author":{"gitId":"xuanqi966"},"content":"                if (isNumber(temp)) {"},{"lineNumber":109,"author":{"gitId":"xuanqi966"},"content":"                    result[0] \u003d \"DLT\";"},{"lineNumber":110,"author":{"gitId":"xuanqi966"},"content":"                    result[1] \u003d temp;"},{"lineNumber":111,"author":{"gitId":"xuanqi966"},"content":"                } else {"},{"lineNumber":112,"author":{"gitId":"xuanqi966"},"content":"                    throw new DukeException(\"Please enter a numerical task number.\");"},{"lineNumber":113,"author":{"gitId":"xuanqi966"},"content":"                }"},{"lineNumber":114,"author":{"gitId":"xuanqi966"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":116,"author":{"gitId":"xuanqi966"},"content":"        } else if (inputLine.startsWith(\"find\")) {"},{"lineNumber":117,"author":{"gitId":"xuanqi966"},"content":"            if (inputLine.equals(\"find\")) {"},{"lineNumber":118,"author":{"gitId":"xuanqi966"},"content":"                throw new DukeException(\"Please tell me which task you\u0027d like to find.\");"},{"lineNumber":119,"author":{"gitId":"xuanqi966"},"content":"            } else {"},{"lineNumber":120,"author":{"gitId":"xuanqi966"},"content":"                String temp \u003d inputLine.substring(5);"},{"lineNumber":121,"author":{"gitId":"xuanqi966"},"content":"                result[0] \u003d \"FND\";"},{"lineNumber":122,"author":{"gitId":"xuanqi966"},"content":"                result[1] \u003d temp;"},{"lineNumber":123,"author":{"gitId":"xuanqi966"},"content":"            }"},{"lineNumber":124,"author":{"gitId":"xuanqi966"},"content":"        } else {"},{"lineNumber":125,"author":{"gitId":"xuanqi966"},"content":"            throw new DukeException(\"I\u0027m sorry, I don\u0027t understand what that means.\");"},{"lineNumber":126,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"xuanqi966"},"content":"        return result;"},{"lineNumber":128,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":129}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"import java.io.PrintWriter;"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"public class Storage {"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":"    protected String filePath;"},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":"    public Storage (String filePath) {"},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":17,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":19,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"xuanqi966"},"content":"     * Returns a list of tasks contained in a List\u003cTask\u003e by reading inputs from text file"},{"lineNumber":21,"author":{"gitId":"xuanqi966"},"content":"     * If the text file is empty or there is loading errors, an empty List\u003cTask\u003e is returned"},{"lineNumber":22,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"xuanqi966"},"content":"     * @return tasklist"},{"lineNumber":24,"author":{"gitId":"xuanqi966"},"content":"     * @throws DukeException If there is reading error of the text file"},{"lineNumber":25,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"xuanqi966"},"content":"    public List\u003cTask\u003e load() throws DukeException{"},{"lineNumber":27,"author":{"gitId":"xuanqi966"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":29,"author":{"gitId":"xuanqi966"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"xuanqi966"},"content":"            File f \u003d new File(filePath);"},{"lineNumber":31,"author":{"gitId":"xuanqi966"},"content":"            Scanner s \u003d new Scanner(f);"},{"lineNumber":32,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":33,"author":{"gitId":"xuanqi966"},"content":"            while (s.hasNext()) {"},{"lineNumber":34,"author":{"gitId":"xuanqi966"},"content":"                String currLine \u003d s.nextLine();"},{"lineNumber":35,"author":{"gitId":"xuanqi966"},"content":"                String[] lineArr \u003d currLine.split(\" \\\\| \");"},{"lineNumber":36,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":37,"author":{"gitId":"xuanqi966"},"content":"                // extract tasks from the current line"},{"lineNumber":38,"author":{"gitId":"xuanqi966"},"content":"                if (lineArr[0].equals(\"T\")) {"},{"lineNumber":39,"author":{"gitId":"xuanqi966"},"content":"                    String todoDesc \u003d lineArr[2];"},{"lineNumber":40,"author":{"gitId":"xuanqi966"},"content":"                    Todo newTodo \u003d new Todo(todoDesc);"},{"lineNumber":41,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":42,"author":{"gitId":"xuanqi966"},"content":"                    // check if the task is done"},{"lineNumber":43,"author":{"gitId":"xuanqi966"},"content":"                    String isDone \u003d lineArr[1];"},{"lineNumber":44,"author":{"gitId":"xuanqi966"},"content":"                    if (isDone.equals(\"1\")) {"},{"lineNumber":45,"author":{"gitId":"xuanqi966"},"content":"                        newTodo.markAsDone();"},{"lineNumber":46,"author":{"gitId":"xuanqi966"},"content":"                    }"},{"lineNumber":47,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":48,"author":{"gitId":"xuanqi966"},"content":"                    taskList.add(newTodo);"},{"lineNumber":49,"author":{"gitId":"xuanqi966"},"content":"                } else if (lineArr[0].equals(\"D\")) {"},{"lineNumber":50,"author":{"gitId":"xuanqi966"},"content":"                    String dlDesc \u003d lineArr[2];"},{"lineNumber":51,"author":{"gitId":"xuanqi966"},"content":"                    String dlBy \u003d lineArr[3];"},{"lineNumber":52,"author":{"gitId":"xuanqi966"},"content":"                    Deadline newDL \u003d new Deadline(dlDesc, dlBy);"},{"lineNumber":53,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":54,"author":{"gitId":"xuanqi966"},"content":"                    // check if the task is done"},{"lineNumber":55,"author":{"gitId":"xuanqi966"},"content":"                    String isDone \u003d lineArr[1];"},{"lineNumber":56,"author":{"gitId":"xuanqi966"},"content":"                    if (isDone.equals(\"1\")) {"},{"lineNumber":57,"author":{"gitId":"xuanqi966"},"content":"                        newDL.markAsDone();"},{"lineNumber":58,"author":{"gitId":"xuanqi966"},"content":"                    }"},{"lineNumber":59,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":60,"author":{"gitId":"xuanqi966"},"content":"                    taskList.add(newDL);"},{"lineNumber":61,"author":{"gitId":"xuanqi966"},"content":"                } else if (lineArr[0].equals(\"E\")) {"},{"lineNumber":62,"author":{"gitId":"xuanqi966"},"content":"                    String evDesc \u003d lineArr[2];"},{"lineNumber":63,"author":{"gitId":"xuanqi966"},"content":"                    String evAt \u003d lineArr[3];"},{"lineNumber":64,"author":{"gitId":"xuanqi966"},"content":"                    Deadline newEV \u003d new Deadline(evDesc, evAt);"},{"lineNumber":65,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":66,"author":{"gitId":"xuanqi966"},"content":"                    // check if the task is done"},{"lineNumber":67,"author":{"gitId":"xuanqi966"},"content":"                    String isDone \u003d lineArr[1];"},{"lineNumber":68,"author":{"gitId":"xuanqi966"},"content":"                    if (isDone.equals(\"1\")) {"},{"lineNumber":69,"author":{"gitId":"xuanqi966"},"content":"                        newEV.markAsDone();"},{"lineNumber":70,"author":{"gitId":"xuanqi966"},"content":"                    }"},{"lineNumber":71,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":72,"author":{"gitId":"xuanqi966"},"content":"                    taskList.add(newEV);"},{"lineNumber":73,"author":{"gitId":"xuanqi966"},"content":"                }"},{"lineNumber":74,"author":{"gitId":"xuanqi966"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"xuanqi966"},"content":"        } catch (IOException e) {"},{"lineNumber":76,"author":{"gitId":"xuanqi966"},"content":"            return taskList;"},{"lineNumber":77,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":79,"author":{"gitId":"xuanqi966"},"content":"        return taskList;"},{"lineNumber":80,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":82,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"xuanqi966"},"content":"     * Writes tasklist into text file"},{"lineNumber":84,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"xuanqi966"},"content":"     * @param taskList a list of all the tasks"},{"lineNumber":86,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"xuanqi966"},"content":"    public void save(TaskList taskList) {"},{"lineNumber":88,"author":{"gitId":"xuanqi966"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTaskList();"},{"lineNumber":89,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":90,"author":{"gitId":"xuanqi966"},"content":"        // checking if data folder exists"},{"lineNumber":91,"author":{"gitId":"xuanqi966"},"content":"        File dataFolder \u003d new File(\"/data\");"},{"lineNumber":92,"author":{"gitId":"xuanqi966"},"content":"        if (!dataFolder.exists()) {"},{"lineNumber":93,"author":{"gitId":"xuanqi966"},"content":"            dataFolder.mkdir();"},{"lineNumber":94,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":96,"author":{"gitId":"xuanqi966"},"content":"        try {"},{"lineNumber":97,"author":{"gitId":"xuanqi966"},"content":"            // clear the original file"},{"lineNumber":98,"author":{"gitId":"xuanqi966"},"content":"            FileWriter fe \u003d new FileWriter(filePath);"},{"lineNumber":99,"author":{"gitId":"xuanqi966"},"content":"            fe.close();"},{"lineNumber":100,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":101,"author":{"gitId":"xuanqi966"},"content":"            // write in the file"},{"lineNumber":102,"author":{"gitId":"xuanqi966"},"content":"            FileWriter fw \u003d new FileWriter(filePath, true);"},{"lineNumber":103,"author":{"gitId":"xuanqi966"},"content":"            for (Task t : tasks) {"},{"lineNumber":104,"author":{"gitId":"xuanqi966"},"content":"                fw.write(t.saveToFile() + System.lineSeparator());"},{"lineNumber":105,"author":{"gitId":"xuanqi966"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"xuanqi966"},"content":"            fw.close();"},{"lineNumber":107,"author":{"gitId":"xuanqi966"},"content":"        } catch (IOException e) {"},{"lineNumber":108,"author":{"gitId":"xuanqi966"},"content":"            System.out.println(\"Unable to write in: \" + e.getMessage());"},{"lineNumber":109,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":111}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"public class Task {"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"    protected String description;"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"    protected boolean isDone;"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"    public Task(String description) {"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"        this.description \u003d description;"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"        this.isDone \u003d false;"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":"     * Returns statusIcon in the form of 1 or 0."},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":"     * 1 means done, 0 means undone."},{"lineNumber":17,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"xuanqi966"},"content":"     * @return String representation of statusicon."},{"lineNumber":19,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"xuanqi966"},"content":"    public String getStatusIcon() {"},{"lineNumber":21,"author":{"gitId":"xuanqi966"},"content":"        return (isDone ? \"1\" : \"0\");"},{"lineNumber":22,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":24,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"xuanqi966"},"content":"     * Returns String representation of task description"},{"lineNumber":26,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"xuanqi966"},"content":"     * @return String of description of task"},{"lineNumber":28,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"xuanqi966"},"content":"    public String getDescription() {"},{"lineNumber":30,"author":{"gitId":"xuanqi966"},"content":"        return this.description;"},{"lineNumber":31,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":33,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"xuanqi966"},"content":"     * Marks a task as done by changing the boolean value isDone to true"},{"lineNumber":35,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"xuanqi966"},"content":"    public void markAsDone() {"},{"lineNumber":37,"author":{"gitId":"xuanqi966"},"content":"        this.isDone \u003d true;"},{"lineNumber":38,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":40,"author":{"gitId":"xuanqi966"},"content":"    public String saveToFile() {"},{"lineNumber":41,"author":{"gitId":"xuanqi966"},"content":"        return \" | \" + getStatusIcon() + \" | \" + getDescription();"},{"lineNumber":42,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":44,"author":{"gitId":"xuanqi966"},"content":"    public String toString() {"},{"lineNumber":45,"author":{"gitId":"xuanqi966"},"content":"        return \" | \" + getStatusIcon() + \" | \" + getDescription();"},{"lineNumber":46,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":47}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"public class TaskList {"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"    protected List\u003cTask\u003e taskList;"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"    public TaskList() {"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":"    public TaskList(List\u003cTask\u003e taskList) {"},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":18,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"xuanqi966"},"content":"     * Returns the number of tasks contained in the task list"},{"lineNumber":20,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"xuanqi966"},"content":"     * @return int of the number of tasks"},{"lineNumber":22,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"xuanqi966"},"content":"    public int getTaskCount() {"},{"lineNumber":24,"author":{"gitId":"xuanqi966"},"content":"        return taskList.size();"},{"lineNumber":25,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":27,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"xuanqi966"},"content":"     * Returns the task specified from the task list"},{"lineNumber":29,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"xuanqi966"},"content":"     * @param i the task index of the task to be extracted"},{"lineNumber":31,"author":{"gitId":"xuanqi966"},"content":"     * @return the Task to be extracted"},{"lineNumber":32,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"xuanqi966"},"content":"    public Task getTask(int i) {"},{"lineNumber":34,"author":{"gitId":"xuanqi966"},"content":"        return this.taskList.get(i-1);"},{"lineNumber":35,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":37,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"xuanqi966"},"content":"     * Returns the task list"},{"lineNumber":39,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"xuanqi966"},"content":"     * @return the task list"},{"lineNumber":41,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"xuanqi966"},"content":"    public List\u003cTask\u003e getTaskList() {"},{"lineNumber":43,"author":{"gitId":"xuanqi966"},"content":"        return this.taskList;"},{"lineNumber":44,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":46,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"xuanqi966"},"content":"     * adds a specified task to the task list"},{"lineNumber":48,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"xuanqi966"},"content":"     * @param task the task that is to be added to the task list"},{"lineNumber":50,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"xuanqi966"},"content":"    public void addTask(Task task) {"},{"lineNumber":52,"author":{"gitId":"xuanqi966"},"content":"        this.taskList.add(task);"},{"lineNumber":53,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":55,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"xuanqi966"},"content":"     * deletes a specified task from the task list"},{"lineNumber":57,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"xuanqi966"},"content":"     * @param taskIndex the index of the task that is to be removed from the task list"},{"lineNumber":59,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"xuanqi966"},"content":"    public void deleteTask(int taskIndex) {"},{"lineNumber":61,"author":{"gitId":"xuanqi966"},"content":"        this.taskList.remove(taskIndex-1);"},{"lineNumber":62,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":64,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"xuanqi966"},"content":"     * Returns a boolean value of whether the requested task exists in the task list"},{"lineNumber":66,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"xuanqi966"},"content":"     * @param index the task index of the task requested"},{"lineNumber":68,"author":{"gitId":"xuanqi966"},"content":"     * @return the boolean of whether the task exists"},{"lineNumber":69,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"xuanqi966"},"content":"    public boolean checkTaskExist(int index) {"},{"lineNumber":71,"author":{"gitId":"xuanqi966"},"content":"        if (index \u003c 1 || index \u003e\u003d this.taskList.size()) {"},{"lineNumber":72,"author":{"gitId":"xuanqi966"},"content":"            return false;"},{"lineNumber":73,"author":{"gitId":"xuanqi966"},"content":"        } else {"},{"lineNumber":74,"author":{"gitId":"xuanqi966"},"content":"            return true;"},{"lineNumber":75,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":78,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"xuanqi966"},"content":"     * prints out all tasks to the console in the format"},{"lineNumber":80,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"xuanqi966"},"content":"    public void printTask() {"},{"lineNumber":82,"author":{"gitId":"xuanqi966"},"content":"        int i \u003d 1;"},{"lineNumber":83,"author":{"gitId":"xuanqi966"},"content":"        for (Task t : this.taskList) {"},{"lineNumber":84,"author":{"gitId":"xuanqi966"},"content":"            System.out.println(i + \". \" + t.toString());"},{"lineNumber":85,"author":{"gitId":"xuanqi966"},"content":"            i++;"},{"lineNumber":86,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":89,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"xuanqi966"},"content":"     * Returns a List\u003cTask\u003e consisting of tasks which contain the keyword"},{"lineNumber":91,"author":{"gitId":"xuanqi966"},"content":"     * If nothing is found, an empty List is returned"},{"lineNumber":92,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"xuanqi966"},"content":"     * @param keyword the keyword we aim to find."},{"lineNumber":94,"author":{"gitId":"xuanqi966"},"content":"     * @return List of found tasks"},{"lineNumber":95,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"xuanqi966"},"content":"    public List\u003cTask\u003e findTask(String keyword) {"},{"lineNumber":97,"author":{"gitId":"xuanqi966"},"content":"        List\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":98,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":99,"author":{"gitId":"xuanqi966"},"content":"        for (Task t : this.taskList) {"},{"lineNumber":100,"author":{"gitId":"xuanqi966"},"content":"            String taskDesc \u003d t.getDescription();"},{"lineNumber":101,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":102,"author":{"gitId":"xuanqi966"},"content":"            if (taskDesc.contains(keyword)) {"},{"lineNumber":103,"author":{"gitId":"xuanqi966"},"content":"                foundTasks.add(t);"},{"lineNumber":104,"author":{"gitId":"xuanqi966"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":107,"author":{"gitId":"xuanqi966"},"content":"        return foundTasks;"},{"lineNumber":108,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":110,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":110}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"    public Todo(String description) {"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"     * Returns a string of the format of task to be saved to text file"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"     * e.g. T | 1 | running"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":"     * @return String of correctly formatted task"},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":"    public String saveToFile() {"},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":"        return \"T\" + super.toString();"},{"lineNumber":17,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":19,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"xuanqi966"},"content":"     * Returns a string of the format of task to be printed to console"},{"lineNumber":21,"author":{"gitId":"xuanqi966"},"content":"     * e.g. T | 1 | running"},{"lineNumber":22,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"xuanqi966"},"content":"     * @return String of correctly formatted task"},{"lineNumber":24,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"xuanqi966"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"xuanqi966"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"xuanqi966"},"content":"        return \"T\" + super.toString();"},{"lineNumber":28,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":29}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":"    public Ui() {}"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"    public void showLoadingError() {"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"        System.out.println(\"Error occurred while loading\");"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"    public void showWelcomeMsg() {"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"        System.out.println(\"Good morning comrade, welcome to KGB.\\nWhat can I do for you?\");"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":"    public void showLine() {"},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":"        System.out.println(\"_____________________________________________\");"},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":18,"author":{"gitId":"xuanqi966"},"content":"    public void showError(String msg) {"},{"lineNumber":19,"author":{"gitId":"xuanqi966"},"content":"        System.out.println(\"    \" + msg);"},{"lineNumber":20,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":22,"author":{"gitId":"xuanqi966"},"content":"    public void printTask(Task task) {"},{"lineNumber":23,"author":{"gitId":"xuanqi966"},"content":"        System.out.println(task.toString());"},{"lineNumber":24,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":26,"author":{"gitId":"xuanqi966"},"content":"    // printings related to LIST"},{"lineNumber":27,"author":{"gitId":"xuanqi966"},"content":"    public void showListMsg() {"},{"lineNumber":28,"author":{"gitId":"xuanqi966"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":29,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":31,"author":{"gitId":"xuanqi966"},"content":"    // printings related to BYE"},{"lineNumber":32,"author":{"gitId":"xuanqi966"},"content":"    public void showByeMsg() {"},{"lineNumber":33,"author":{"gitId":"xuanqi966"},"content":"        System.out.println(\"Goodbye comrade. Hope to see you again soon!\");"},{"lineNumber":34,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":36,"author":{"gitId":"xuanqi966"},"content":"    // printings related to DONE"},{"lineNumber":37,"author":{"gitId":"xuanqi966"},"content":"    public void showDoneMsg() {"},{"lineNumber":38,"author":{"gitId":"xuanqi966"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":39,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":41,"author":{"gitId":"xuanqi966"},"content":"    // printings related to tasks"},{"lineNumber":42,"author":{"gitId":"xuanqi966"},"content":"    public void showTaskMsg() {"},{"lineNumber":43,"author":{"gitId":"xuanqi966"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":44,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":46,"author":{"gitId":"xuanqi966"},"content":"    public void showTaskCount(int i) {"},{"lineNumber":47,"author":{"gitId":"xuanqi966"},"content":"        System.out.println(\"Now you have \" + i+ \" tasks in the list.\");"},{"lineNumber":48,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":50,"author":{"gitId":"xuanqi966"},"content":"    // printings related to delete"},{"lineNumber":51,"author":{"gitId":"xuanqi966"},"content":"    public void showDeleteMsg() {"},{"lineNumber":52,"author":{"gitId":"xuanqi966"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":53,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":55,"author":{"gitId":"xuanqi966"},"content":"    // printings related to find"},{"lineNumber":56,"author":{"gitId":"xuanqi966"},"content":"    public void showCannotFind() {"},{"lineNumber":57,"author":{"gitId":"xuanqi966"},"content":"        System.out.println(\"I\u0027m sorry, I can\u0027t find the task requested\");"},{"lineNumber":58,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":60,"author":{"gitId":"xuanqi966"},"content":"    public void showFoundText() {"},{"lineNumber":61,"author":{"gitId":"xuanqi966"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");"},{"lineNumber":62,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":64,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":64}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"public class DeadlineTest {"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"    public void test_toString() {"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"        assertEquals(\"D | 0 | running | Dec 21 2020 Sunday\", new Deadline(\"running\", \"2020-12-21 Sunday\").toString());"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":12}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"public class DukeTest {"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"    public void dummyTest(){"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"        assertEquals(2, 2);"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":12}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"public class EventTest {"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"    public void test_toString() {"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"        assertEquals(\"E | 0 | meeting | Dec 21 2020 Sunday\", new Event(\"meeting\", \"2020-12-21 Sunday\").toString());"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":12}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"public class StorageTest {"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"    public void test_load_empty() throws DukeException {"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"        ArrayList\u003cString\u003e testList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":"        assertEquals(testList, new Storage(\"./testLoad.txt\").load());"},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":15}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"public class TodoTest {"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"    public void test_toString() {"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"        assertEquals(\"T | 0 | homework\", new Todo(\"homework\").toString());"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":"list"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"list"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"bye"}],"authorContributionMap":{"xuanqi966":7}}]
