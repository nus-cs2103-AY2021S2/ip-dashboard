[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"    protected String by;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"        this.by \u003d by;"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"    public static boolean isNumber(String str) {"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"        // check for null or empty"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"        if (str \u003d\u003d null || str.length() \u003d\u003d 0) {"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"            return false;"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":"        for (char c : str.toCharArray()) {"},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":"            if (!Character.isDigit(c)) {"},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":"                return false;"},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":"            }"},{"lineNumber":17,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":19,"author":{"gitId":"xuanqi966"},"content":"        return true;"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":22,"author":{"gitId":"xuanqi966"},"content":"    public static void main(String[] args) throws DukeException{"},{"lineNumber":23,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":24,"author":{"gitId":"xuanqi966"},"content":"        // initialise all necessary variables"},{"lineNumber":25,"author":{"gitId":"xuanqi966"},"content":"        Scanner inputScanner \u003d new Scanner(System.in);"},{"lineNumber":26,"author":{"gitId":"xuanqi966"},"content":"        Boolean terminate \u003d false; // to check if the chatbot should be terminated"},{"lineNumber":27,"author":{"gitId":"xuanqi966"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"xuanqi966"},"content":"        //Task[] taskList \u003d new Task[100]; // to store history of inputs"},{"lineNumber":29,"author":{"gitId":"xuanqi966"},"content":"        int taskCounter \u003d 0;"},{"lineNumber":30,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":31,"author":{"gitId":"xuanqi966"},"content":"        System.out.println(\"    Good morning comrade, welcome to KGB.\\n    What can I do for you?\");"},{"lineNumber":32,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":33,"author":{"gitId":"xuanqi966"},"content":"        // chatbot continues to wait for user input until the user chooses to terminate the bot"},{"lineNumber":34,"author":{"gitId":"xuanqi966"},"content":"        while (!terminate) {"},{"lineNumber":35,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":36,"author":{"gitId":"xuanqi966"},"content":"            String userInput \u003d inputScanner.nextLine();"},{"lineNumber":37,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":38,"author":{"gitId":"xuanqi966"},"content":"            try {"},{"lineNumber":39,"author":{"gitId":"xuanqi966"},"content":"                if (userInput.equals(\"list\")) {"},{"lineNumber":40,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":41,"author":{"gitId":"xuanqi966"},"content":"                    System.out.println(\"    Here are the tasks in your list:\");"},{"lineNumber":42,"author":{"gitId":"xuanqi966"},"content":"                    // print out all tasks"},{"lineNumber":43,"author":{"gitId":"xuanqi966"},"content":"                    int i \u003d 1;"},{"lineNumber":44,"author":{"gitId":"xuanqi966"},"content":"                    for (Task t : taskList) {"},{"lineNumber":45,"author":{"gitId":"xuanqi966"},"content":"                        System.out.println(\"    \" + i + \".\" + t.toString());"},{"lineNumber":46,"author":{"gitId":"xuanqi966"},"content":"                        i++;"},{"lineNumber":47,"author":{"gitId":"xuanqi966"},"content":"                    }"},{"lineNumber":48,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":49,"author":{"gitId":"xuanqi966"},"content":"                } else if (userInput.equals(\"bye\")) {"},{"lineNumber":50,"author":{"gitId":"xuanqi966"},"content":"                    // terminate the chat bot"},{"lineNumber":51,"author":{"gitId":"xuanqi966"},"content":"                    System.out.println(\"    Goodbye comrade. Hope to see you again soon!\");"},{"lineNumber":52,"author":{"gitId":"xuanqi966"},"content":"                    terminate \u003d true;"},{"lineNumber":53,"author":{"gitId":"xuanqi966"},"content":"                } else if (userInput.startsWith(\"done\")) {"},{"lineNumber":54,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":55,"author":{"gitId":"xuanqi966"},"content":"                    // check if nothing follows after done, in which case the input should be invalid"},{"lineNumber":56,"author":{"gitId":"xuanqi966"},"content":"                    if (userInput.equals(\"done\")) {"},{"lineNumber":57,"author":{"gitId":"xuanqi966"},"content":"                        throw new DukeException(\"The task number of a done cannot be empty. Please try again\");"},{"lineNumber":58,"author":{"gitId":"xuanqi966"},"content":"                    }"},{"lineNumber":59,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":60,"author":{"gitId":"xuanqi966"},"content":"                    // mark the specific task as done"},{"lineNumber":61,"author":{"gitId":"xuanqi966"},"content":"                    // extract task index, then mark task as done"},{"lineNumber":62,"author":{"gitId":"xuanqi966"},"content":"                    String temp \u003d userInput.substring(5);"},{"lineNumber":63,"author":{"gitId":"xuanqi966"},"content":"                    int taskIndex;"},{"lineNumber":64,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":65,"author":{"gitId":"xuanqi966"},"content":"                    // check if the task number after done is a valid number"},{"lineNumber":66,"author":{"gitId":"xuanqi966"},"content":"                    if (isNumber(temp)) {"},{"lineNumber":67,"author":{"gitId":"xuanqi966"},"content":"                        taskIndex \u003d Integer.parseInt(temp);"},{"lineNumber":68,"author":{"gitId":"xuanqi966"},"content":"                    } else {"},{"lineNumber":69,"author":{"gitId":"xuanqi966"},"content":"                        throw new DukeException(\"Please enter a numerical task number\");"},{"lineNumber":70,"author":{"gitId":"xuanqi966"},"content":"                    }"},{"lineNumber":71,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":72,"author":{"gitId":"xuanqi966"},"content":"                    // check if the task number entered is valid"},{"lineNumber":73,"author":{"gitId":"xuanqi966"},"content":"                    if (taskIndex \u003c 1 || taskIndex \u003e 101 || taskList.get(taskIndex - 1) \u003d\u003d null) {"},{"lineNumber":74,"author":{"gitId":"xuanqi966"},"content":"                        throw new DukeException(\"Your requested task does not exist!\");"},{"lineNumber":75,"author":{"gitId":"xuanqi966"},"content":"                    }"},{"lineNumber":76,"author":{"gitId":"xuanqi966"},"content":"                    Task currentTask \u003d taskList.get(taskIndex - 1);"},{"lineNumber":77,"author":{"gitId":"xuanqi966"},"content":"                    currentTask.markAsDone();"},{"lineNumber":78,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":79,"author":{"gitId":"xuanqi966"},"content":"                    // print out relevant information"},{"lineNumber":80,"author":{"gitId":"xuanqi966"},"content":"                    System.out.println(\"    Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":81,"author":{"gitId":"xuanqi966"},"content":"                    System.out.println(\"     \" + currentTask.toString());"},{"lineNumber":82,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":83,"author":{"gitId":"xuanqi966"},"content":"                } else if (userInput.startsWith(\"todo\")) {"},{"lineNumber":84,"author":{"gitId":"xuanqi966"},"content":"                    // check if the todos description is provided"},{"lineNumber":85,"author":{"gitId":"xuanqi966"},"content":"                    if (userInput.equals(\"todo\")) {"},{"lineNumber":86,"author":{"gitId":"xuanqi966"},"content":"                        throw new DukeException(\"The todo description should not be empty!\");"},{"lineNumber":87,"author":{"gitId":"xuanqi966"},"content":"                    }"},{"lineNumber":88,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":89,"author":{"gitId":"xuanqi966"},"content":"                    // create new todos and put inside taskList"},{"lineNumber":90,"author":{"gitId":"xuanqi966"},"content":"                    String todoDescription \u003d userInput.substring(5);"},{"lineNumber":91,"author":{"gitId":"xuanqi966"},"content":"                    Todo newTodo \u003d new Todo(todoDescription);"},{"lineNumber":92,"author":{"gitId":"xuanqi966"},"content":"                    taskList.add(newTodo);"},{"lineNumber":93,"author":{"gitId":"xuanqi966"},"content":"                    taskCounter++;"},{"lineNumber":94,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":95,"author":{"gitId":"xuanqi966"},"content":"                    // print out relevant information"},{"lineNumber":96,"author":{"gitId":"xuanqi966"},"content":"                    System.out.println(\"    Got it. I\u0027ve added this task:\");"},{"lineNumber":97,"author":{"gitId":"xuanqi966"},"content":"                    System.out.println(\"     \" + newTodo.toString());"},{"lineNumber":98,"author":{"gitId":"xuanqi966"},"content":"                    System.out.println(\"    Now you have \" + taskCounter + \" tasks in the list.\");"},{"lineNumber":99,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":100,"author":{"gitId":"xuanqi966"},"content":"                } else if (userInput.startsWith(\"deadline\")) {"},{"lineNumber":101,"author":{"gitId":"xuanqi966"},"content":"                    // check if the deadline description is provided"},{"lineNumber":102,"author":{"gitId":"xuanqi966"},"content":"                    if (userInput.equals(\"deadline\")) {"},{"lineNumber":103,"author":{"gitId":"xuanqi966"},"content":"                        throw new DukeException(\"The deadline description should not be empty!\");"},{"lineNumber":104,"author":{"gitId":"xuanqi966"},"content":"                    }"},{"lineNumber":105,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":106,"author":{"gitId":"xuanqi966"},"content":"                    // create new deadline and put inside taskList"},{"lineNumber":107,"author":{"gitId":"xuanqi966"},"content":"                    String dlMsg \u003d userInput.substring(9);"},{"lineNumber":108,"author":{"gitId":"xuanqi966"},"content":"                    String[] temp \u003d dlMsg.split(\" /by \");"},{"lineNumber":109,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":110,"author":{"gitId":"xuanqi966"},"content":"                    // check if the deadline time is provided"},{"lineNumber":111,"author":{"gitId":"xuanqi966"},"content":"                    if (temp.length \u003d\u003d 1) {"},{"lineNumber":112,"author":{"gitId":"xuanqi966"},"content":"                        throw new DukeException(\"The deadline time should not be empty!\");"},{"lineNumber":113,"author":{"gitId":"xuanqi966"},"content":"                    }"},{"lineNumber":114,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":115,"author":{"gitId":"xuanqi966"},"content":"                    String dlDescription \u003d temp[0];"},{"lineNumber":116,"author":{"gitId":"xuanqi966"},"content":"                    String by \u003d temp[1];"},{"lineNumber":117,"author":{"gitId":"xuanqi966"},"content":"                    Deadline newDL \u003d new Deadline(dlDescription, by);"},{"lineNumber":118,"author":{"gitId":"xuanqi966"},"content":"                    taskList.add(newDL);"},{"lineNumber":119,"author":{"gitId":"xuanqi966"},"content":"                    taskCounter++;"},{"lineNumber":120,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":121,"author":{"gitId":"xuanqi966"},"content":"                    // print out relevant information"},{"lineNumber":122,"author":{"gitId":"xuanqi966"},"content":"                    System.out.println(\"    Got it. I\u0027ve added this task:\");"},{"lineNumber":123,"author":{"gitId":"xuanqi966"},"content":"                    System.out.println(\"     \" + newDL.toString());"},{"lineNumber":124,"author":{"gitId":"xuanqi966"},"content":"                    System.out.println(\"    Now you have \" + taskCounter + \" tasks in the list.\");"},{"lineNumber":125,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":126,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":127,"author":{"gitId":"xuanqi966"},"content":"                } else if (userInput.startsWith(\"event\")) {"},{"lineNumber":128,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":129,"author":{"gitId":"xuanqi966"},"content":"                    // create new event and put inside taskList"},{"lineNumber":130,"author":{"gitId":"xuanqi966"},"content":"                    if (userInput.equals(\"event\")) {"},{"lineNumber":131,"author":{"gitId":"xuanqi966"},"content":"                        throw new DukeException(\"The event description should not be empty!\");"},{"lineNumber":132,"author":{"gitId":"xuanqi966"},"content":"                    }"},{"lineNumber":133,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":134,"author":{"gitId":"xuanqi966"},"content":"                    String eMsg \u003d userInput.substring(6);"},{"lineNumber":135,"author":{"gitId":"xuanqi966"},"content":"                    String[] temp \u003d eMsg.split(\" /at \");"},{"lineNumber":136,"author":{"gitId":"xuanqi966"},"content":"                    // check if the deadline time is provided"},{"lineNumber":137,"author":{"gitId":"xuanqi966"},"content":"                    if (temp.length \u003d\u003d 1) {"},{"lineNumber":138,"author":{"gitId":"xuanqi966"},"content":"                        throw new DukeException(\"The event time should not be empty!\");"},{"lineNumber":139,"author":{"gitId":"xuanqi966"},"content":"                    }"},{"lineNumber":140,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":141,"author":{"gitId":"xuanqi966"},"content":"                    String eDescription \u003d temp[0];"},{"lineNumber":142,"author":{"gitId":"xuanqi966"},"content":"                    String at \u003d temp[1];"},{"lineNumber":143,"author":{"gitId":"xuanqi966"},"content":"                    Event newEvent \u003d new Event(eDescription, at);"},{"lineNumber":144,"author":{"gitId":"xuanqi966"},"content":"                    taskList.add(newEvent);"},{"lineNumber":145,"author":{"gitId":"xuanqi966"},"content":"                    taskCounter++;"},{"lineNumber":146,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":147,"author":{"gitId":"xuanqi966"},"content":"                    // print out relevant information"},{"lineNumber":148,"author":{"gitId":"xuanqi966"},"content":"                    System.out.println(\"    Got it. I\u0027ve added this task:\");"},{"lineNumber":149,"author":{"gitId":"xuanqi966"},"content":"                    System.out.println(\"     \" + newEvent.toString());"},{"lineNumber":150,"author":{"gitId":"xuanqi966"},"content":"                    System.out.println(\"    Now you have \" + taskCounter + \" tasks in the list.\");"},{"lineNumber":151,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":152,"author":{"gitId":"xuanqi966"},"content":"                } else if (userInput.startsWith(\"delete\")) {"},{"lineNumber":153,"author":{"gitId":"xuanqi966"},"content":"                    // check if delete index is provided"},{"lineNumber":154,"author":{"gitId":"xuanqi966"},"content":"                    if (userInput.equals(\"delete\")) {"},{"lineNumber":155,"author":{"gitId":"xuanqi966"},"content":"                        throw new DukeException(\"The delete number should not be empty!\");"},{"lineNumber":156,"author":{"gitId":"xuanqi966"},"content":"                    }"},{"lineNumber":157,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":158,"author":{"gitId":"xuanqi966"},"content":"                    // extract task index, then mark task as done"},{"lineNumber":159,"author":{"gitId":"xuanqi966"},"content":"                    String temp \u003d userInput.substring(7);"},{"lineNumber":160,"author":{"gitId":"xuanqi966"},"content":"                    int taskIndex;"},{"lineNumber":161,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":162,"author":{"gitId":"xuanqi966"},"content":"                    // check if the task number after done is a valid number"},{"lineNumber":163,"author":{"gitId":"xuanqi966"},"content":"                    if (isNumber(temp)) {"},{"lineNumber":164,"author":{"gitId":"xuanqi966"},"content":"                        taskIndex \u003d Integer.parseInt(temp);"},{"lineNumber":165,"author":{"gitId":"xuanqi966"},"content":"                    } else {"},{"lineNumber":166,"author":{"gitId":"xuanqi966"},"content":"                        throw new DukeException(\"Please enter a numerical task number\");"},{"lineNumber":167,"author":{"gitId":"xuanqi966"},"content":"                    }"},{"lineNumber":168,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":169,"author":{"gitId":"xuanqi966"},"content":"                    // check if the task number entered is valid"},{"lineNumber":170,"author":{"gitId":"xuanqi966"},"content":"                    if (taskIndex \u003c 1 || taskIndex \u003e 101 || taskList.get(taskIndex - 1) \u003d\u003d null) {"},{"lineNumber":171,"author":{"gitId":"xuanqi966"},"content":"                        throw new DukeException(\"Your requested task does not exist!\");"},{"lineNumber":172,"author":{"gitId":"xuanqi966"},"content":"                    }"},{"lineNumber":173,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":174,"author":{"gitId":"xuanqi966"},"content":"                    Task currentTask \u003d taskList.get(taskIndex - 1);"},{"lineNumber":175,"author":{"gitId":"xuanqi966"},"content":"                    taskList.remove(taskIndex - 1);"},{"lineNumber":176,"author":{"gitId":"xuanqi966"},"content":"                    taskCounter--;"},{"lineNumber":177,"author":{"gitId":"xuanqi966"},"content":"                    System.out.println(\"    Noted. I\u0027ve removed this task:\");"},{"lineNumber":178,"author":{"gitId":"xuanqi966"},"content":"                    System.out.println(\"     \" + currentTask.toString());"},{"lineNumber":179,"author":{"gitId":"xuanqi966"},"content":"                    System.out.println(\"    Now you have \" + taskCounter + \" tasks in the list.\");"},{"lineNumber":180,"author":{"gitId":"xuanqi966"},"content":"                } else {"},{"lineNumber":181,"author":{"gitId":"xuanqi966"},"content":"                    throw new DukeException(\"I\u0027m sorry, I don\u0027t understand what that means.\");"},{"lineNumber":182,"author":{"gitId":"xuanqi966"},"content":"                }"},{"lineNumber":183,"author":{"gitId":"xuanqi966"},"content":"            } catch (DukeException e) {"},{"lineNumber":184,"author":{"gitId":"xuanqi966"},"content":"                System.out.println(\"    \" + e.getMessage());"},{"lineNumber":185,"author":{"gitId":"xuanqi966"},"content":"            }"},{"lineNumber":186,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":4,"xuanqi966":184}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"public class DukeException extends Exception{"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":"        super(errorMessage);"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":7}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"    protected String at;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"    public Event(String description, String at) {"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"        this.at \u003d at;"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"    public String getStatusIcon() {"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"        return (isDone ? \"\\u2713\" : \" \");"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":"    public String getDescription() {"},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":"        return this.description;"},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":18,"author":{"gitId":"xuanqi966"},"content":"    public void markAsDone() {"},{"lineNumber":19,"author":{"gitId":"xuanqi966"},"content":"        this.isDone \u003d true;"},{"lineNumber":20,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":22,"author":{"gitId":"xuanqi966"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"xuanqi966"},"content":"        return \"[\" + getStatusIcon() + \"]\" + \" \" + getDescription();"},{"lineNumber":24,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":25}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"    public Todo(String description) {"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":"        super(description);"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":"list"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"list"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"bye"}],"authorContributionMap":{"xuanqi966":7}}]
