[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"}"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"}"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":18,"author":{"gitId":"xuanqi966"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"xuanqi966"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"xuanqi966"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"xuanqi966"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"xuanqi966"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"xuanqi966"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"xuanqi966"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"xuanqi966"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"xuanqi966"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"xuanqi966"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"xuanqi966"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"xuanqi966"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"xuanqi966"},"content":"}"},{"lineNumber":31,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":32,"author":{"gitId":"xuanqi966"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"xuanqi966"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":35,"author":{"gitId":"xuanqi966"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"xuanqi966"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":38,"author":{"gitId":"xuanqi966"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"xuanqi966"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"xuanqi966"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"xuanqi966"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"xuanqi966"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"xuanqi966"},"content":"}"},{"lineNumber":45,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":46,"author":{"gitId":"xuanqi966"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"xuanqi966"},"content":"    mainClassName \u003d \"seedu.duke.Duke\""},{"lineNumber":48,"author":{"gitId":"xuanqi966"},"content":"}"},{"lineNumber":49,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":50,"author":{"gitId":"xuanqi966"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"xuanqi966"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"xuanqi966"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"xuanqi966"},"content":"}"},{"lineNumber":54,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":55,"author":{"gitId":"xuanqi966"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"xuanqi966"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"xuanqi966"},"content":"}"},{"lineNumber":58,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":59,"author":{"gitId":"xuanqi966"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"xuanqi966"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":61}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"D | 1 | jooing | 2019-10-12 Monday"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":"T | 0 | 99"},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"T | 0 | read book"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":"T | 0 | haha"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"T | 0 | return book"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"T | 0 | haha"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"T | 0 | haha"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"T | 0 | haha"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"T | 0 | joking"}],"authorContributionMap":{"xuanqi966":9}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":17,"author":{"gitId":"xuanqi966"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"xuanqi966"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"xuanqi966"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"xuanqi966"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"xuanqi966"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"xuanqi966"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":24,"author":{"gitId":"xuanqi966"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"xuanqi966"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":27,"author":{"gitId":"xuanqi966"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"xuanqi966"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"xuanqi966"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"xuanqi966"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":32,"author":{"gitId":"xuanqi966"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"xuanqi966"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":35,"author":{"gitId":"xuanqi966"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"xuanqi966"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":38,"author":{"gitId":"xuanqi966"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"xuanqi966"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":41,"author":{"gitId":"xuanqi966"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"xuanqi966"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"xuanqi966"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":44,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":45,"author":{"gitId":"xuanqi966"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"xuanqi966"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"xuanqi966"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"xuanqi966"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"xuanqi966"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":51,"author":{"gitId":"xuanqi966"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":53,"author":{"gitId":"xuanqi966"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"xuanqi966"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"xuanqi966"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":57,"author":{"gitId":"xuanqi966"},"content":"if exist \"%JAVA_EXE%\" goto execute"},{"lineNumber":58,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":59,"author":{"gitId":"xuanqi966"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"xuanqi966"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"xuanqi966"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"xuanqi966"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"xuanqi966"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":65,"author":{"gitId":"xuanqi966"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":67,"author":{"gitId":"xuanqi966"},"content":":execute"},{"lineNumber":68,"author":{"gitId":"xuanqi966"},"content":"@rem Setup the command line"},{"lineNumber":69,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":70,"author":{"gitId":"xuanqi966"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":71,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":72,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":73,"author":{"gitId":"xuanqi966"},"content":"@rem Execute Gradle"},{"lineNumber":74,"author":{"gitId":"xuanqi966"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"},{"lineNumber":75,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":76,"author":{"gitId":"xuanqi966"},"content":":end"},{"lineNumber":77,"author":{"gitId":"xuanqi966"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":78,"author":{"gitId":"xuanqi966"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":79,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":80,"author":{"gitId":"xuanqi966"},"content":":fail"},{"lineNumber":81,"author":{"gitId":"xuanqi966"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":82,"author":{"gitId":"xuanqi966"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":83,"author":{"gitId":"xuanqi966"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":84,"author":{"gitId":"xuanqi966"},"content":"exit /b 1"},{"lineNumber":85,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":86,"author":{"gitId":"xuanqi966"},"content":":mainEnd"},{"lineNumber":87,"author":{"gitId":"xuanqi966"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":88,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":89,"author":{"gitId":"xuanqi966"},"content":":omega"}],"authorContributionMap":{"xuanqi966":89}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":" * This class represents tasks that can be classified as deadlines"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":" */"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"    protected String by;"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":"        this.by \u003d by;"},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":18,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"xuanqi966"},"content":"     * Returns a string of date formatted to the expected format"},{"lineNumber":20,"author":{"gitId":"xuanqi966"},"content":"     * e.g. 2020-12-21 is returned as DEC 21 2020"},{"lineNumber":21,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"xuanqi966"},"content":"     * @param by the userinput for the deadline date"},{"lineNumber":23,"author":{"gitId":"xuanqi966"},"content":"     * @return String of correctly formatted date"},{"lineNumber":24,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"xuanqi966"},"content":"    public String extractDateTime(String by) {"},{"lineNumber":26,"author":{"gitId":"xuanqi966"},"content":"        String[] temp \u003d by.split(\" \");"},{"lineNumber":27,"author":{"gitId":"xuanqi966"},"content":"        LocalDate date \u003d LocalDate.parse(temp[0]);"},{"lineNumber":28,"author":{"gitId":"xuanqi966"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + temp[1];"},{"lineNumber":29,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":31,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"xuanqi966"},"content":"     * Returns a string of the format of task to be saved to text file"},{"lineNumber":33,"author":{"gitId":"xuanqi966"},"content":"     * e.g. D | 1 | running | 2020-12-21 Sunday"},{"lineNumber":34,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"xuanqi966"},"content":"     * @return String of correctly formatted task"},{"lineNumber":36,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"xuanqi966"},"content":"    public String saveToFile() {"},{"lineNumber":38,"author":{"gitId":"xuanqi966"},"content":"        return \"D\" + super.toString() + \" | \" + by;"},{"lineNumber":39,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":41,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"xuanqi966"},"content":"     * Returns a string of the format of task to be printed to console"},{"lineNumber":43,"author":{"gitId":"xuanqi966"},"content":"     * e.g. D | 1 | running | DEC 21 2020 Sunday"},{"lineNumber":44,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"xuanqi966"},"content":"     * @return String of correctly formatted task"},{"lineNumber":46,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"xuanqi966"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"xuanqi966"},"content":"    public String toString() {"},{"lineNumber":49,"author":{"gitId":"xuanqi966"},"content":"        return \"D\" + super.toString() + \" | \" + extractDateTime(by);"},{"lineNumber":50,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":51}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":" * This class is where the logic related to Duke comes together and gets executed"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":" */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"    private Storage storage;"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"    private TaskList tasks;"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"    private Ui ui;"},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":"     * Constructor of Duke"},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"xuanqi966"},"content":"     * @param nil"},{"lineNumber":18,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"xuanqi966"},"content":"    public Duke() {"},{"lineNumber":20,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":21,"author":{"gitId":"xuanqi966"},"content":"        ui \u003d new Ui();"},{"lineNumber":22,"author":{"gitId":"xuanqi966"},"content":"        storage \u003d new Storage(\"data/tasks.txt\");"},{"lineNumber":23,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":24,"author":{"gitId":"xuanqi966"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"xuanqi966"},"content":"            tasks \u003d new TaskList(storage.load()); // returns a List\u003cTask\u003e of all tasks"},{"lineNumber":26,"author":{"gitId":"xuanqi966"},"content":"        } catch (DukeException e) {"},{"lineNumber":27,"author":{"gitId":"xuanqi966"},"content":"            ui.showLoadingError();"},{"lineNumber":28,"author":{"gitId":"xuanqi966"},"content":"            ui.showLine();"},{"lineNumber":29,"author":{"gitId":"xuanqi966"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":30,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":33,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"xuanqi966"},"content":"     * Take user\u0027s input and generate corresponding response back to the user"},{"lineNumber":35,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"xuanqi966"},"content":"     * @param String user input"},{"lineNumber":37,"author":{"gitId":"xuanqi966"},"content":"     * @return String Response to the user"},{"lineNumber":38,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"xuanqi966"},"content":"    public String getResponse(String userInput) {"},{"lineNumber":40,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":41,"author":{"gitId":"xuanqi966"},"content":"        ui.clearResponse();"},{"lineNumber":42,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":43,"author":{"gitId":"xuanqi966"},"content":"        Parser parser \u003d new Parser();"},{"lineNumber":44,"author":{"gitId":"xuanqi966"},"content":"        String[] parsedInput;"},{"lineNumber":45,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":46,"author":{"gitId":"xuanqi966"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"xuanqi966"},"content":"            parsedInput \u003d parser.processInput(userInput);"},{"lineNumber":48,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":49,"author":{"gitId":"xuanqi966"},"content":"            if (parsedInput[0].equals(\"LST\")) {"},{"lineNumber":50,"author":{"gitId":"xuanqi966"},"content":"                ui.showListMsg();"},{"lineNumber":51,"author":{"gitId":"xuanqi966"},"content":"                ui.printTasks(tasks);"},{"lineNumber":52,"author":{"gitId":"xuanqi966"},"content":"                ui.showLine();"},{"lineNumber":53,"author":{"gitId":"xuanqi966"},"content":"            } else if (parsedInput[0].equals(\"BYE\")) {"},{"lineNumber":54,"author":{"gitId":"xuanqi966"},"content":"                ui.showByeMsg();"},{"lineNumber":55,"author":{"gitId":"xuanqi966"},"content":"                ui.showLine();"},{"lineNumber":56,"author":{"gitId":"xuanqi966"},"content":"            } else if (parsedInput[0].equals(\"DON\")) {"},{"lineNumber":57,"author":{"gitId":"xuanqi966"},"content":"                int taskIndex \u003d Integer.parseInt(parsedInput[1]);"},{"lineNumber":58,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":59,"author":{"gitId":"xuanqi966"},"content":"                if (tasks.checkTaskExist(taskIndex)) {"},{"lineNumber":60,"author":{"gitId":"xuanqi966"},"content":"                    Task currTask \u003d tasks.getTask(taskIndex);"},{"lineNumber":61,"author":{"gitId":"xuanqi966"},"content":"                    currTask.markAsDone();"},{"lineNumber":62,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":63,"author":{"gitId":"xuanqi966"},"content":"                    ui.showDoneMsg();"},{"lineNumber":64,"author":{"gitId":"xuanqi966"},"content":"                    ui.printTask(currTask);"},{"lineNumber":65,"author":{"gitId":"xuanqi966"},"content":"                    ui.showLine();"},{"lineNumber":66,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":67,"author":{"gitId":"xuanqi966"},"content":"                    storage.save(tasks);"},{"lineNumber":68,"author":{"gitId":"xuanqi966"},"content":"                } else {"},{"lineNumber":69,"author":{"gitId":"xuanqi966"},"content":"                    ui.showError(\"Requested task does not exist\");"},{"lineNumber":70,"author":{"gitId":"xuanqi966"},"content":"                    ui.showLine();"},{"lineNumber":71,"author":{"gitId":"xuanqi966"},"content":"                }"},{"lineNumber":72,"author":{"gitId":"xuanqi966"},"content":"            } else if (parsedInput[0].equals(\"TDO\")) {"},{"lineNumber":73,"author":{"gitId":"xuanqi966"},"content":"                Todo newTodo \u003d new Todo(parsedInput[1]);"},{"lineNumber":74,"author":{"gitId":"xuanqi966"},"content":"                tasks.addTask(newTodo);"},{"lineNumber":75,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":76,"author":{"gitId":"xuanqi966"},"content":"                ui.showTaskMsg();"},{"lineNumber":77,"author":{"gitId":"xuanqi966"},"content":"                ui.printTask(newTodo);"},{"lineNumber":78,"author":{"gitId":"xuanqi966"},"content":"                ui.showTaskCount(tasks.getTaskCount());"},{"lineNumber":79,"author":{"gitId":"xuanqi966"},"content":"                ui.showLine();"},{"lineNumber":80,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":81,"author":{"gitId":"xuanqi966"},"content":"                storage.save(tasks);"},{"lineNumber":82,"author":{"gitId":"xuanqi966"},"content":"            } else if (parsedInput[0].equals(\"DDL\")) {"},{"lineNumber":83,"author":{"gitId":"xuanqi966"},"content":"                Deadline newDl \u003d new Deadline(parsedInput[1], parsedInput[2]);"},{"lineNumber":84,"author":{"gitId":"xuanqi966"},"content":"                tasks.addTask(newDl);"},{"lineNumber":85,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":86,"author":{"gitId":"xuanqi966"},"content":"                ui.showTaskMsg();"},{"lineNumber":87,"author":{"gitId":"xuanqi966"},"content":"                ui.printTask(newDl);"},{"lineNumber":88,"author":{"gitId":"xuanqi966"},"content":"                ui.showTaskCount(tasks.getTaskCount());"},{"lineNumber":89,"author":{"gitId":"xuanqi966"},"content":"                ui.showLine();"},{"lineNumber":90,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":91,"author":{"gitId":"xuanqi966"},"content":"                storage.save(tasks);"},{"lineNumber":92,"author":{"gitId":"xuanqi966"},"content":"            } else if (parsedInput[0].equals(\"ENT\")) {"},{"lineNumber":93,"author":{"gitId":"xuanqi966"},"content":"                Event newEnt \u003d new Event(parsedInput[1], parsedInput[2]);"},{"lineNumber":94,"author":{"gitId":"xuanqi966"},"content":"                tasks.addTask(newEnt);"},{"lineNumber":95,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":96,"author":{"gitId":"xuanqi966"},"content":"                ui.showTaskMsg();"},{"lineNumber":97,"author":{"gitId":"xuanqi966"},"content":"                ui.printTask(newEnt);"},{"lineNumber":98,"author":{"gitId":"xuanqi966"},"content":"                ui.showTaskCount(tasks.getTaskCount());"},{"lineNumber":99,"author":{"gitId":"xuanqi966"},"content":"                ui.showLine();"},{"lineNumber":100,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":101,"author":{"gitId":"xuanqi966"},"content":"                storage.save(tasks);"},{"lineNumber":102,"author":{"gitId":"xuanqi966"},"content":"            } else if (parsedInput[0].equals(\"DLT\")) {"},{"lineNumber":103,"author":{"gitId":"xuanqi966"},"content":"                int taskIndex \u003d Integer.parseInt(parsedInput[1]);"},{"lineNumber":104,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":105,"author":{"gitId":"xuanqi966"},"content":"                if (tasks.checkTaskExist(taskIndex)) {"},{"lineNumber":106,"author":{"gitId":"xuanqi966"},"content":"                    Task currTask \u003d tasks.getTask(taskIndex);"},{"lineNumber":107,"author":{"gitId":"xuanqi966"},"content":"                    tasks.deleteTask(taskIndex);"},{"lineNumber":108,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":109,"author":{"gitId":"xuanqi966"},"content":"                    ui.showDeleteMsg();"},{"lineNumber":110,"author":{"gitId":"xuanqi966"},"content":"                    ui.printTask(currTask);"},{"lineNumber":111,"author":{"gitId":"xuanqi966"},"content":"                    ui.showLine();"},{"lineNumber":112,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":113,"author":{"gitId":"xuanqi966"},"content":"                    storage.save(tasks);"},{"lineNumber":114,"author":{"gitId":"xuanqi966"},"content":"                } else {"},{"lineNumber":115,"author":{"gitId":"xuanqi966"},"content":"                    ui.showError(\"Requested task does not exist\");"},{"lineNumber":116,"author":{"gitId":"xuanqi966"},"content":"                    ui.showLine();"},{"lineNumber":117,"author":{"gitId":"xuanqi966"},"content":"                }"},{"lineNumber":118,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":119,"author":{"gitId":"xuanqi966"},"content":"            } else if (parsedInput[0].equals(\"FND\")) {"},{"lineNumber":120,"author":{"gitId":"xuanqi966"},"content":"                String keyword \u003d parsedInput[1];"},{"lineNumber":121,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":122,"author":{"gitId":"xuanqi966"},"content":"                List\u003cTask\u003e foundTasks \u003d tasks.findTask(keyword);"},{"lineNumber":123,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":124,"author":{"gitId":"xuanqi966"},"content":"                if (foundTasks.isEmpty()) {"},{"lineNumber":125,"author":{"gitId":"xuanqi966"},"content":"                    ui.showCannotFind();"},{"lineNumber":126,"author":{"gitId":"xuanqi966"},"content":"                    ui.showLine();"},{"lineNumber":127,"author":{"gitId":"xuanqi966"},"content":"                } else {"},{"lineNumber":128,"author":{"gitId":"xuanqi966"},"content":"                    ui.showFoundText();"},{"lineNumber":129,"author":{"gitId":"xuanqi966"},"content":"                    int i \u003d 1;"},{"lineNumber":130,"author":{"gitId":"xuanqi966"},"content":"                    for (Task t : foundTasks) {"},{"lineNumber":131,"author":{"gitId":"xuanqi966"},"content":"                        ui.appendResponse(i + \". \" + t.toString());"},{"lineNumber":132,"author":{"gitId":"xuanqi966"},"content":"                        i++;"},{"lineNumber":133,"author":{"gitId":"xuanqi966"},"content":"                    }"},{"lineNumber":134,"author":{"gitId":"xuanqi966"},"content":"                    ui.showLine();"},{"lineNumber":135,"author":{"gitId":"xuanqi966"},"content":"                }"},{"lineNumber":136,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":137,"author":{"gitId":"xuanqi966"},"content":"            } else {"},{"lineNumber":138,"author":{"gitId":"xuanqi966"},"content":"                ui.showError(\"Something went wrong!\");"},{"lineNumber":139,"author":{"gitId":"xuanqi966"},"content":"            }"},{"lineNumber":140,"author":{"gitId":"xuanqi966"},"content":"        } catch(DukeException e) {"},{"lineNumber":141,"author":{"gitId":"xuanqi966"},"content":"            ui.showError(e.getMessage());"},{"lineNumber":142,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"xuanqi966"},"content":"        System.out.println(ui.getResponse());"},{"lineNumber":144,"author":{"gitId":"xuanqi966"},"content":"        return ui.getResponse();"},{"lineNumber":145,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":2,"xuanqi966":145}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":" * This class represents exceptions which might happen during execution of duke-related processes"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":" */"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"public class DukeException extends Exception{"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"        super(errorMessage);"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":12}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":" * This class represents a task event when user wants to deal with an Event"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":" */"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"    protected String at;"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":"    public Event(String description, String at) {"},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":"        this.at \u003d at;"},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":18,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"xuanqi966"},"content":"     * Returns a string of date formatted to the expected format"},{"lineNumber":20,"author":{"gitId":"xuanqi966"},"content":"     * e.g. 2020-12-21 is returned as DEC 21 2020"},{"lineNumber":21,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"xuanqi966"},"content":"     * @param at the userinput for the event date"},{"lineNumber":23,"author":{"gitId":"xuanqi966"},"content":"     * @return String of correctly formatted date"},{"lineNumber":24,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"xuanqi966"},"content":"    public String extractDateTime(String at) {"},{"lineNumber":26,"author":{"gitId":"xuanqi966"},"content":"        String[] temp \u003d at.split(\" \");"},{"lineNumber":27,"author":{"gitId":"xuanqi966"},"content":"        LocalDate date \u003d LocalDate.parse(temp[0]);"},{"lineNumber":28,"author":{"gitId":"xuanqi966"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + temp[1];"},{"lineNumber":29,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":31,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"xuanqi966"},"content":"     * Returns a string of the format of task to be saved to text file"},{"lineNumber":33,"author":{"gitId":"xuanqi966"},"content":"     * e.g. E | 1 | running | 2020-12-21 Sunday"},{"lineNumber":34,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"xuanqi966"},"content":"     * @return String of correctly formatted task"},{"lineNumber":36,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"xuanqi966"},"content":"    public String saveToFile() {"},{"lineNumber":38,"author":{"gitId":"xuanqi966"},"content":"        return \"E\" + super.toString() + \" | \" + at;"},{"lineNumber":39,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":41,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"xuanqi966"},"content":"     * Returns a string of the format of task to be printed to console"},{"lineNumber":43,"author":{"gitId":"xuanqi966"},"content":"     * e.g. E | 1 | running | DEC 21 2020 Sunday"},{"lineNumber":44,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"xuanqi966"},"content":"     * @return String of correctly formatted task"},{"lineNumber":46,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"xuanqi966"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"xuanqi966"},"content":"    public String toString() {"},{"lineNumber":49,"author":{"gitId":"xuanqi966"},"content":"        return \"E\" + super.toString() + \" | \" + extractDateTime(at);"},{"lineNumber":50,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":51}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"import duke.ui.MainWindow;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"import javafx.application.Application;"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"import javafx.scene.Scene;"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":" * A GUI for Duke using FXML."},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":" */"},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":"public class Main extends Application {"},{"lineNumber":17,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":18,"author":{"gitId":"xuanqi966"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":19,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":20,"author":{"gitId":"xuanqi966"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"xuanqi966"},"content":"    public void start(Stage stage) {"},{"lineNumber":22,"author":{"gitId":"xuanqi966"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"xuanqi966"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":24,"author":{"gitId":"xuanqi966"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":25,"author":{"gitId":"xuanqi966"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":26,"author":{"gitId":"xuanqi966"},"content":"            stage.setScene(scene);"},{"lineNumber":27,"author":{"gitId":"xuanqi966"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":28,"author":{"gitId":"xuanqi966"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().showWelcomeMsg();"},{"lineNumber":29,"author":{"gitId":"xuanqi966"},"content":"            stage.show();"},{"lineNumber":30,"author":{"gitId":"xuanqi966"},"content":"        } catch (IOException e) {"},{"lineNumber":31,"author":{"gitId":"xuanqi966"},"content":"            e.printStackTrace();"},{"lineNumber":32,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":34}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":" * This class is in charge of understanding the user\u0027s input and process input"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":" * to be passed to other classes for further processing"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":" */"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"public class Parser {"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"    public Parser() {"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":"     * Returns boolean value indicating whether input text is numerical"},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":"     * @param str string to be tested"},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":"     * @return boolean value"},{"lineNumber":17,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"xuanqi966"},"content":"    public static boolean isNumber(String str) {"},{"lineNumber":19,"author":{"gitId":"xuanqi966"},"content":"        // check for null or empty"},{"lineNumber":20,"author":{"gitId":"xuanqi966"},"content":"        if (str \u003d\u003d null || str.length() \u003d\u003d 0) {"},{"lineNumber":21,"author":{"gitId":"xuanqi966"},"content":"            return false;"},{"lineNumber":22,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":24,"author":{"gitId":"xuanqi966"},"content":"        for (char c : str.toCharArray()) {"},{"lineNumber":25,"author":{"gitId":"xuanqi966"},"content":"            if (!Character.isDigit(c)) {"},{"lineNumber":26,"author":{"gitId":"xuanqi966"},"content":"                return false;"},{"lineNumber":27,"author":{"gitId":"xuanqi966"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"xuanqi966"},"content":"        return true;"},{"lineNumber":30,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":32,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":33,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"xuanqi966"},"content":"     * Returns an array of strings with processed text inputs"},{"lineNumber":35,"author":{"gitId":"xuanqi966"},"content":"     * e.g. a processed input for deadline reading /by 2019-02-20 8pm will be [\"DDL\", \"0\", \"reading\", \"2019-02-20 8pm\"]"},{"lineNumber":36,"author":{"gitId":"xuanqi966"},"content":"     * the returned array will then be passed to other functions in Duke.java for further processing"},{"lineNumber":37,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"xuanqi966"},"content":"     * @param inputLine input by user"},{"lineNumber":39,"author":{"gitId":"xuanqi966"},"content":"     * @return an array of processes strings"},{"lineNumber":40,"author":{"gitId":"xuanqi966"},"content":"     * @throws DukeException If user input is in invalid formats"},{"lineNumber":41,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"xuanqi966"},"content":"    public String[] processInput(String inputLine) throws DukeException{"},{"lineNumber":43,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":44,"author":{"gitId":"xuanqi966"},"content":"        String[] result \u003d new String[5];"},{"lineNumber":45,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":46,"author":{"gitId":"xuanqi966"},"content":"        if (inputLine.equals(\"list\")) {"},{"lineNumber":47,"author":{"gitId":"xuanqi966"},"content":"            result[0] \u003d \"LST\";"},{"lineNumber":48,"author":{"gitId":"xuanqi966"},"content":"        } else if (inputLine.equals(\"bye\")) {"},{"lineNumber":49,"author":{"gitId":"xuanqi966"},"content":"            result[0] \u003d \"BYE\";"},{"lineNumber":50,"author":{"gitId":"xuanqi966"},"content":"        } else if (inputLine.equals(\"done\")) {"},{"lineNumber":51,"author":{"gitId":"xuanqi966"},"content":"            throw new DukeException(\"The task number of a done cannot be empty. Please try again.\");"},{"lineNumber":52,"author":{"gitId":"xuanqi966"},"content":"        } else if (inputLine.startsWith(\"done\")) {"},{"lineNumber":53,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":54,"author":{"gitId":"xuanqi966"},"content":"            String index \u003d inputLine.substring(5);"},{"lineNumber":55,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":56,"author":{"gitId":"xuanqi966"},"content":"             if (isNumber(index)) {"},{"lineNumber":57,"author":{"gitId":"xuanqi966"},"content":"                 result[0] \u003d \"DON\";"},{"lineNumber":58,"author":{"gitId":"xuanqi966"},"content":"                 result[1] \u003d index;"},{"lineNumber":59,"author":{"gitId":"xuanqi966"},"content":"             } else {"},{"lineNumber":60,"author":{"gitId":"xuanqi966"},"content":"                 throw new DukeException(\"Please enter a numerical task number.\");"},{"lineNumber":61,"author":{"gitId":"xuanqi966"},"content":"             }"},{"lineNumber":62,"author":{"gitId":"xuanqi966"},"content":"        } else if (inputLine.startsWith(\"todo\")) {"},{"lineNumber":63,"author":{"gitId":"xuanqi966"},"content":"            if (inputLine.equals(\"todo\")) {"},{"lineNumber":64,"author":{"gitId":"xuanqi966"},"content":"                throw new DukeException(\"Please enter a todo description.\");"},{"lineNumber":65,"author":{"gitId":"xuanqi966"},"content":"            } else {"},{"lineNumber":66,"author":{"gitId":"xuanqi966"},"content":"                String todoDesc \u003d inputLine.substring(5);"},{"lineNumber":67,"author":{"gitId":"xuanqi966"},"content":"                result[0] \u003d \"TDO\";"},{"lineNumber":68,"author":{"gitId":"xuanqi966"},"content":"                result[1] \u003d todoDesc;"},{"lineNumber":69,"author":{"gitId":"xuanqi966"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"xuanqi966"},"content":"        } else if (inputLine.startsWith(\"deadline\")) {"},{"lineNumber":71,"author":{"gitId":"xuanqi966"},"content":"            if (inputLine.equals(\"deadline\")) {"},{"lineNumber":72,"author":{"gitId":"xuanqi966"},"content":"                throw new DukeException(\"Please enter a deadline description.\");"},{"lineNumber":73,"author":{"gitId":"xuanqi966"},"content":"            } else {"},{"lineNumber":74,"author":{"gitId":"xuanqi966"},"content":"                String dlMsg \u003d inputLine.substring(9);"},{"lineNumber":75,"author":{"gitId":"xuanqi966"},"content":"                String[] temp \u003d dlMsg.split(\" /by \");"},{"lineNumber":76,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":77,"author":{"gitId":"xuanqi966"},"content":"                if (temp.length \u003d\u003d 1) {"},{"lineNumber":78,"author":{"gitId":"xuanqi966"},"content":"                    throw new DukeException(\"Please enter a deadline completion time.\");"},{"lineNumber":79,"author":{"gitId":"xuanqi966"},"content":"                } else {"},{"lineNumber":80,"author":{"gitId":"xuanqi966"},"content":"                    String dlDesc \u003d temp[0];"},{"lineNumber":81,"author":{"gitId":"xuanqi966"},"content":"                    String by \u003d temp[1];"},{"lineNumber":82,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":83,"author":{"gitId":"xuanqi966"},"content":"                    result[0] \u003d \"DDL\";"},{"lineNumber":84,"author":{"gitId":"xuanqi966"},"content":"                    result[1] \u003d dlDesc;"},{"lineNumber":85,"author":{"gitId":"xuanqi966"},"content":"                    result[2] \u003d by;"},{"lineNumber":86,"author":{"gitId":"xuanqi966"},"content":"                }"},{"lineNumber":87,"author":{"gitId":"xuanqi966"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"xuanqi966"},"content":"        } else if (inputLine.startsWith(\"event\")) {"},{"lineNumber":89,"author":{"gitId":"xuanqi966"},"content":"            if (inputLine.equals(\"event\")) {"},{"lineNumber":90,"author":{"gitId":"xuanqi966"},"content":"                throw new DukeException(\"Please enter an event description.\");"},{"lineNumber":91,"author":{"gitId":"xuanqi966"},"content":"            } else {"},{"lineNumber":92,"author":{"gitId":"xuanqi966"},"content":"                String dlMsg \u003d inputLine.substring(6);"},{"lineNumber":93,"author":{"gitId":"xuanqi966"},"content":"                String[] temp \u003d dlMsg.split(\" /at \");"},{"lineNumber":94,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":95,"author":{"gitId":"xuanqi966"},"content":"                if (temp.length \u003d\u003d 1) {"},{"lineNumber":96,"author":{"gitId":"xuanqi966"},"content":"                    throw new DukeException(\"Please enter an event time.\");"},{"lineNumber":97,"author":{"gitId":"xuanqi966"},"content":"                } else {"},{"lineNumber":98,"author":{"gitId":"xuanqi966"},"content":"                    String evDesc \u003d temp[0];"},{"lineNumber":99,"author":{"gitId":"xuanqi966"},"content":"                    String at \u003d temp[1];"},{"lineNumber":100,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":101,"author":{"gitId":"xuanqi966"},"content":"                    result[0] \u003d \"ENT\";"},{"lineNumber":102,"author":{"gitId":"xuanqi966"},"content":"                    result[1] \u003d evDesc;"},{"lineNumber":103,"author":{"gitId":"xuanqi966"},"content":"                    result[2] \u003d at;"},{"lineNumber":104,"author":{"gitId":"xuanqi966"},"content":"                }"},{"lineNumber":105,"author":{"gitId":"xuanqi966"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"xuanqi966"},"content":"        } else if (inputLine.startsWith(\"delete\")) {"},{"lineNumber":107,"author":{"gitId":"xuanqi966"},"content":"            if (inputLine.equals(\"delete\")) {"},{"lineNumber":108,"author":{"gitId":"xuanqi966"},"content":"                throw new DukeException(\"Please tell me which task you\u0027d like to delete.\");"},{"lineNumber":109,"author":{"gitId":"xuanqi966"},"content":"            } else {"},{"lineNumber":110,"author":{"gitId":"xuanqi966"},"content":"                String temp \u003d inputLine.substring(7);"},{"lineNumber":111,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":112,"author":{"gitId":"xuanqi966"},"content":"                if (isNumber(temp)) {"},{"lineNumber":113,"author":{"gitId":"xuanqi966"},"content":"                    result[0] \u003d \"DLT\";"},{"lineNumber":114,"author":{"gitId":"xuanqi966"},"content":"                    result[1] \u003d temp;"},{"lineNumber":115,"author":{"gitId":"xuanqi966"},"content":"                } else {"},{"lineNumber":116,"author":{"gitId":"xuanqi966"},"content":"                    throw new DukeException(\"Please enter a numerical task number.\");"},{"lineNumber":117,"author":{"gitId":"xuanqi966"},"content":"                }"},{"lineNumber":118,"author":{"gitId":"xuanqi966"},"content":"            }"},{"lineNumber":119,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":120,"author":{"gitId":"xuanqi966"},"content":"        } else if (inputLine.startsWith(\"find\")) {"},{"lineNumber":121,"author":{"gitId":"xuanqi966"},"content":"            if (inputLine.equals(\"find\")) {"},{"lineNumber":122,"author":{"gitId":"xuanqi966"},"content":"                throw new DukeException(\"Please tell me which task you\u0027d like to find.\");"},{"lineNumber":123,"author":{"gitId":"xuanqi966"},"content":"            } else {"},{"lineNumber":124,"author":{"gitId":"xuanqi966"},"content":"                String temp \u003d inputLine.substring(5);"},{"lineNumber":125,"author":{"gitId":"xuanqi966"},"content":"                result[0] \u003d \"FND\";"},{"lineNumber":126,"author":{"gitId":"xuanqi966"},"content":"                result[1] \u003d temp;"},{"lineNumber":127,"author":{"gitId":"xuanqi966"},"content":"            }"},{"lineNumber":128,"author":{"gitId":"xuanqi966"},"content":"        } else {"},{"lineNumber":129,"author":{"gitId":"xuanqi966"},"content":"            throw new DukeException(\"I\u0027m sorry, I don\u0027t understand what that means.\");"},{"lineNumber":130,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"xuanqi966"},"content":"        return result;"},{"lineNumber":132,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":133}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"import java.io.PrintWriter;"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":" * This class acts as an agent of communication between the data saved locally under the directory"},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":" * and the program"},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":" */"},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":"public class Storage {"},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":17,"author":{"gitId":"xuanqi966"},"content":"    protected String filePath;"},{"lineNumber":18,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":19,"author":{"gitId":"xuanqi966"},"content":"    public Storage (String filePath) {"},{"lineNumber":20,"author":{"gitId":"xuanqi966"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":21,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":23,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"xuanqi966"},"content":"     * Returns a list of tasks contained in a List\u003cTask\u003e by reading inputs from text file"},{"lineNumber":25,"author":{"gitId":"xuanqi966"},"content":"     * If the text file is empty or there is loading errors, an empty List\u003cTask\u003e is returned"},{"lineNumber":26,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"xuanqi966"},"content":"     * @return tasklist"},{"lineNumber":28,"author":{"gitId":"xuanqi966"},"content":"     * @throws DukeException If there is reading error of the text file"},{"lineNumber":29,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"xuanqi966"},"content":"    public List\u003cTask\u003e load() throws DukeException{"},{"lineNumber":31,"author":{"gitId":"xuanqi966"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":32,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":33,"author":{"gitId":"xuanqi966"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"xuanqi966"},"content":"            File f \u003d new File(filePath);"},{"lineNumber":35,"author":{"gitId":"xuanqi966"},"content":"            Scanner s \u003d new Scanner(f);"},{"lineNumber":36,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":37,"author":{"gitId":"xuanqi966"},"content":"            while (s.hasNext()) {"},{"lineNumber":38,"author":{"gitId":"xuanqi966"},"content":"                String currLine \u003d s.nextLine();"},{"lineNumber":39,"author":{"gitId":"xuanqi966"},"content":"                String[] lineArr \u003d currLine.split(\" \\\\| \");"},{"lineNumber":40,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":41,"author":{"gitId":"xuanqi966"},"content":"                // extract tasks from the current line"},{"lineNumber":42,"author":{"gitId":"xuanqi966"},"content":"                if (lineArr[0].equals(\"T\")) {"},{"lineNumber":43,"author":{"gitId":"xuanqi966"},"content":"                    String todoDesc \u003d lineArr[2];"},{"lineNumber":44,"author":{"gitId":"xuanqi966"},"content":"                    Todo newTodo \u003d new Todo(todoDesc);"},{"lineNumber":45,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":46,"author":{"gitId":"xuanqi966"},"content":"                    // check if the task is done"},{"lineNumber":47,"author":{"gitId":"xuanqi966"},"content":"                    String isDone \u003d lineArr[1];"},{"lineNumber":48,"author":{"gitId":"xuanqi966"},"content":"                    if (isDone.equals(\"1\")) {"},{"lineNumber":49,"author":{"gitId":"xuanqi966"},"content":"                        newTodo.markAsDone();"},{"lineNumber":50,"author":{"gitId":"xuanqi966"},"content":"                    }"},{"lineNumber":51,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":52,"author":{"gitId":"xuanqi966"},"content":"                    taskList.add(newTodo);"},{"lineNumber":53,"author":{"gitId":"xuanqi966"},"content":"                } else if (lineArr[0].equals(\"D\")) {"},{"lineNumber":54,"author":{"gitId":"xuanqi966"},"content":"                    String dlDesc \u003d lineArr[2];"},{"lineNumber":55,"author":{"gitId":"xuanqi966"},"content":"                    String dlBy \u003d lineArr[3];"},{"lineNumber":56,"author":{"gitId":"xuanqi966"},"content":"                    Deadline newDL \u003d new Deadline(dlDesc, dlBy);"},{"lineNumber":57,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":58,"author":{"gitId":"xuanqi966"},"content":"                    // check if the task is done"},{"lineNumber":59,"author":{"gitId":"xuanqi966"},"content":"                    String isDone \u003d lineArr[1];"},{"lineNumber":60,"author":{"gitId":"xuanqi966"},"content":"                    if (isDone.equals(\"1\")) {"},{"lineNumber":61,"author":{"gitId":"xuanqi966"},"content":"                        newDL.markAsDone();"},{"lineNumber":62,"author":{"gitId":"xuanqi966"},"content":"                    }"},{"lineNumber":63,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":64,"author":{"gitId":"xuanqi966"},"content":"                    taskList.add(newDL);"},{"lineNumber":65,"author":{"gitId":"xuanqi966"},"content":"                } else if (lineArr[0].equals(\"E\")) {"},{"lineNumber":66,"author":{"gitId":"xuanqi966"},"content":"                    String evDesc \u003d lineArr[2];"},{"lineNumber":67,"author":{"gitId":"xuanqi966"},"content":"                    String evAt \u003d lineArr[3];"},{"lineNumber":68,"author":{"gitId":"xuanqi966"},"content":"                    Deadline newEV \u003d new Deadline(evDesc, evAt);"},{"lineNumber":69,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":70,"author":{"gitId":"xuanqi966"},"content":"                    // check if the task is done"},{"lineNumber":71,"author":{"gitId":"xuanqi966"},"content":"                    String isDone \u003d lineArr[1];"},{"lineNumber":72,"author":{"gitId":"xuanqi966"},"content":"                    if (isDone.equals(\"1\")) {"},{"lineNumber":73,"author":{"gitId":"xuanqi966"},"content":"                        newEV.markAsDone();"},{"lineNumber":74,"author":{"gitId":"xuanqi966"},"content":"                    }"},{"lineNumber":75,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":76,"author":{"gitId":"xuanqi966"},"content":"                    taskList.add(newEV);"},{"lineNumber":77,"author":{"gitId":"xuanqi966"},"content":"                }"},{"lineNumber":78,"author":{"gitId":"xuanqi966"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"xuanqi966"},"content":"        } catch (IOException e) {"},{"lineNumber":80,"author":{"gitId":"xuanqi966"},"content":"            return taskList;"},{"lineNumber":81,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":83,"author":{"gitId":"xuanqi966"},"content":"        return taskList;"},{"lineNumber":84,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":86,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"xuanqi966"},"content":"     * Writes tasklist into text file"},{"lineNumber":88,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"xuanqi966"},"content":"     * @param taskList a list of all the tasks"},{"lineNumber":90,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"xuanqi966"},"content":"    public void save(TaskList taskList) {"},{"lineNumber":92,"author":{"gitId":"xuanqi966"},"content":"        List\u003cTask\u003e tasks \u003d taskList.getTaskList();"},{"lineNumber":93,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":94,"author":{"gitId":"xuanqi966"},"content":"        // checking if data folder exists"},{"lineNumber":95,"author":{"gitId":"xuanqi966"},"content":"        File dataFolder \u003d new File(\"/data\");"},{"lineNumber":96,"author":{"gitId":"xuanqi966"},"content":"        if (!dataFolder.exists()) {"},{"lineNumber":97,"author":{"gitId":"xuanqi966"},"content":"            dataFolder.mkdir();"},{"lineNumber":98,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":100,"author":{"gitId":"xuanqi966"},"content":"        try {"},{"lineNumber":101,"author":{"gitId":"xuanqi966"},"content":"            // clear the original file"},{"lineNumber":102,"author":{"gitId":"xuanqi966"},"content":"            FileWriter fe \u003d new FileWriter(filePath);"},{"lineNumber":103,"author":{"gitId":"xuanqi966"},"content":"            fe.close();"},{"lineNumber":104,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":105,"author":{"gitId":"xuanqi966"},"content":"            // write in the file"},{"lineNumber":106,"author":{"gitId":"xuanqi966"},"content":"            FileWriter fw \u003d new FileWriter(filePath, true);"},{"lineNumber":107,"author":{"gitId":"xuanqi966"},"content":"            for (Task t : tasks) {"},{"lineNumber":108,"author":{"gitId":"xuanqi966"},"content":"                fw.write(t.saveToFile() + System.lineSeparator());"},{"lineNumber":109,"author":{"gitId":"xuanqi966"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"xuanqi966"},"content":"            fw.close();"},{"lineNumber":111,"author":{"gitId":"xuanqi966"},"content":"        } catch (IOException e) {"},{"lineNumber":112,"author":{"gitId":"xuanqi966"},"content":"            System.out.println(\"Unable to write in: \" + e.getMessage());"},{"lineNumber":113,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":115}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":" * This class is an object-oriented-representation of a task event"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":" */"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"    protected String description;"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"    public Task(String description) {"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"        this.description \u003d description;"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"        this.isDone \u003d false;"},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":"     * Returns statusIcon in the form of 1 or 0."},{"lineNumber":17,"author":{"gitId":"xuanqi966"},"content":"     * 1 means done, 0 means undone."},{"lineNumber":18,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"xuanqi966"},"content":"     * @return String representation of statusicon."},{"lineNumber":20,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"xuanqi966"},"content":"    public String getStatusIcon() {"},{"lineNumber":22,"author":{"gitId":"xuanqi966"},"content":"        return (isDone ? \"1\" : \"0\");"},{"lineNumber":23,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":25,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"xuanqi966"},"content":"     * Returns String representation of task description"},{"lineNumber":27,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"xuanqi966"},"content":"     * @return String of description of task"},{"lineNumber":29,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"xuanqi966"},"content":"    public String getDescription() {"},{"lineNumber":31,"author":{"gitId":"xuanqi966"},"content":"        return this.description;"},{"lineNumber":32,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":34,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"xuanqi966"},"content":"     * Marks a task as done by changing the boolean value isDone to true"},{"lineNumber":36,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"xuanqi966"},"content":"    public void markAsDone() {"},{"lineNumber":38,"author":{"gitId":"xuanqi966"},"content":"        this.isDone \u003d true;"},{"lineNumber":39,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":41,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"xuanqi966"},"content":"     * Returns a segment of text representing the current task, this text is in the format"},{"lineNumber":43,"author":{"gitId":"xuanqi966"},"content":"     * which is to be saved to file"},{"lineNumber":44,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"xuanqi966"},"content":"     * @return String of description of task"},{"lineNumber":46,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"xuanqi966"},"content":"    public String saveToFile() {"},{"lineNumber":48,"author":{"gitId":"xuanqi966"},"content":"        return \" | \" + getStatusIcon() + \" | \" + getDescription();"},{"lineNumber":49,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":51,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"xuanqi966"},"content":"     * Returns a segment of text representing the current task, this text is in the format"},{"lineNumber":53,"author":{"gitId":"xuanqi966"},"content":"     * which is to be displayed to the user"},{"lineNumber":54,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"xuanqi966"},"content":"     * @return String of description of task"},{"lineNumber":56,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"xuanqi966"},"content":"    public String toString() {"},{"lineNumber":58,"author":{"gitId":"xuanqi966"},"content":"        return \" | \" + getStatusIcon() + \" | \" + getDescription();"},{"lineNumber":59,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":60}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":" * This class is a container of multiple tasks"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":" */"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"    protected List\u003cTask\u003e taskList;"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":"    public TaskList() {"},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":17,"author":{"gitId":"xuanqi966"},"content":"    public TaskList(List\u003cTask\u003e taskList) {"},{"lineNumber":18,"author":{"gitId":"xuanqi966"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":19,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":21,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"xuanqi966"},"content":"     * Returns the number of tasks contained in the task list"},{"lineNumber":23,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"xuanqi966"},"content":"     * @return int of the number of tasks"},{"lineNumber":25,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"xuanqi966"},"content":"    public int getTaskCount() {"},{"lineNumber":27,"author":{"gitId":"xuanqi966"},"content":"        return taskList.size();"},{"lineNumber":28,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":30,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"xuanqi966"},"content":"     * Returns the task specified from the task list"},{"lineNumber":32,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"xuanqi966"},"content":"     * @param i the task index of the task to be extracted"},{"lineNumber":34,"author":{"gitId":"xuanqi966"},"content":"     * @return the Task to be extracted"},{"lineNumber":35,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"xuanqi966"},"content":"    public Task getTask(int i) {"},{"lineNumber":37,"author":{"gitId":"xuanqi966"},"content":"        return this.taskList.get(i-1);"},{"lineNumber":38,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":40,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"xuanqi966"},"content":"     * Returns the task list"},{"lineNumber":42,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"xuanqi966"},"content":"     * @return the task list"},{"lineNumber":44,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"xuanqi966"},"content":"    public List\u003cTask\u003e getTaskList() {"},{"lineNumber":46,"author":{"gitId":"xuanqi966"},"content":"        return this.taskList;"},{"lineNumber":47,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":49,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"xuanqi966"},"content":"     * adds a specified task to the task list"},{"lineNumber":51,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"xuanqi966"},"content":"     * @param task the task that is to be added to the task list"},{"lineNumber":53,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"xuanqi966"},"content":"    public void addTask(Task task) {"},{"lineNumber":55,"author":{"gitId":"xuanqi966"},"content":"        this.taskList.add(task);"},{"lineNumber":56,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":58,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"xuanqi966"},"content":"     * deletes a specified task from the task list"},{"lineNumber":60,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"xuanqi966"},"content":"     * @param taskIndex the index of the task that is to be removed from the task list"},{"lineNumber":62,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"xuanqi966"},"content":"    public void deleteTask(int taskIndex) {"},{"lineNumber":64,"author":{"gitId":"xuanqi966"},"content":"        this.taskList.remove(taskIndex-1);"},{"lineNumber":65,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":67,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"xuanqi966"},"content":"     * Returns a boolean value of whether the requested task exists in the task list"},{"lineNumber":69,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"xuanqi966"},"content":"     * @param index the task index of the task requested"},{"lineNumber":71,"author":{"gitId":"xuanqi966"},"content":"     * @return the boolean of whether the task exists"},{"lineNumber":72,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"xuanqi966"},"content":"    public boolean checkTaskExist(int index) {"},{"lineNumber":74,"author":{"gitId":"xuanqi966"},"content":"        if (index \u003c 1 || index \u003e\u003d this.taskList.size()) {"},{"lineNumber":75,"author":{"gitId":"xuanqi966"},"content":"            return false;"},{"lineNumber":76,"author":{"gitId":"xuanqi966"},"content":"        } else {"},{"lineNumber":77,"author":{"gitId":"xuanqi966"},"content":"            return true;"},{"lineNumber":78,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":81,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"xuanqi966"},"content":"     * prints out all tasks to the console in the format"},{"lineNumber":83,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"xuanqi966"},"content":"    public void printTask() {"},{"lineNumber":85,"author":{"gitId":"xuanqi966"},"content":"        int i \u003d 1;"},{"lineNumber":86,"author":{"gitId":"xuanqi966"},"content":"        for (Task t : this.taskList) {"},{"lineNumber":87,"author":{"gitId":"xuanqi966"},"content":"            System.out.println(\"Task loaded: \" + i + \". \" + t.toString());"},{"lineNumber":88,"author":{"gitId":"xuanqi966"},"content":"            i++;"},{"lineNumber":89,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":92,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"xuanqi966"},"content":"     * Returns a List\u003cTask\u003e consisting of tasks which contain the keyword"},{"lineNumber":94,"author":{"gitId":"xuanqi966"},"content":"     * If nothing is found, an empty List is returned"},{"lineNumber":95,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":96,"author":{"gitId":"xuanqi966"},"content":"     * @param keyword the keyword we aim to find."},{"lineNumber":97,"author":{"gitId":"xuanqi966"},"content":"     * @return List of found tasks"},{"lineNumber":98,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"xuanqi966"},"content":"    public List\u003cTask\u003e findTask(String keyword) {"},{"lineNumber":100,"author":{"gitId":"xuanqi966"},"content":"        List\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":101,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":102,"author":{"gitId":"xuanqi966"},"content":"        for (Task t : this.taskList) {"},{"lineNumber":103,"author":{"gitId":"xuanqi966"},"content":"            String taskDesc \u003d t.getDescription();"},{"lineNumber":104,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":105,"author":{"gitId":"xuanqi966"},"content":"            if (taskDesc.contains(keyword)) {"},{"lineNumber":106,"author":{"gitId":"xuanqi966"},"content":"                foundTasks.add(t);"},{"lineNumber":107,"author":{"gitId":"xuanqi966"},"content":"            }"},{"lineNumber":108,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":110,"author":{"gitId":"xuanqi966"},"content":"        return foundTasks;"},{"lineNumber":111,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":113,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":113}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":" * This class represents a todo event"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":" */"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"    public Todo(String description) {"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":"     * Returns a string of the format of task to be saved to text file"},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":"     * e.g. T | 1 | running"},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":"     * @return String of correctly formatted task"},{"lineNumber":17,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"xuanqi966"},"content":"    public String saveToFile() {"},{"lineNumber":19,"author":{"gitId":"xuanqi966"},"content":"        return \"T\" + super.toString();"},{"lineNumber":20,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":22,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"xuanqi966"},"content":"     * Returns a string of the format of task to be printed to console"},{"lineNumber":24,"author":{"gitId":"xuanqi966"},"content":"     * e.g. T | 1 | running"},{"lineNumber":25,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"xuanqi966"},"content":"     * @return String of correctly formatted task"},{"lineNumber":27,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"xuanqi966"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"xuanqi966"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"xuanqi966"},"content":"        return \"T\" + super.toString();"},{"lineNumber":31,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":32}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":" * This class acts as a placeholder for responses to be responded to the user"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":" */"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"    private String response;"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"    public Ui() {"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"        response \u003d \"\";"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":"     * modifies response to an empty string"},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"xuanqi966"},"content":"     * @return void"},{"lineNumber":18,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"xuanqi966"},"content":"    public void clearResponse() {"},{"lineNumber":20,"author":{"gitId":"xuanqi966"},"content":"        response \u003d \"\";"},{"lineNumber":21,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":23,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"xuanqi966"},"content":"     * Returns String of response"},{"lineNumber":25,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"xuanqi966"},"content":"     * @return response"},{"lineNumber":27,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"xuanqi966"},"content":"    public String getResponse() {"},{"lineNumber":29,"author":{"gitId":"xuanqi966"},"content":"        return this.response;"},{"lineNumber":30,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":32,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"xuanqi966"},"content":"     * append the string specified to the response"},{"lineNumber":34,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"xuanqi966"},"content":"     * @param String message to be appended"},{"lineNumber":36,"author":{"gitId":"xuanqi966"},"content":"     * @return void"},{"lineNumber":37,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":39,"author":{"gitId":"xuanqi966"},"content":"    public void appendResponse(String msg) {"},{"lineNumber":40,"author":{"gitId":"xuanqi966"},"content":"        response +\u003d msg;"},{"lineNumber":41,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":43,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"xuanqi966"},"content":"     * append a general error message to the reponse"},{"lineNumber":45,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"xuanqi966"},"content":"     * @return void"},{"lineNumber":47,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"xuanqi966"},"content":"    public void showLoadingError() {"},{"lineNumber":49,"author":{"gitId":"xuanqi966"},"content":"        response +\u003d \"Error occurred while loading\\n\";"},{"lineNumber":50,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":52,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"xuanqi966"},"content":"     * append line to the reponse"},{"lineNumber":54,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"xuanqi966"},"content":"     * @return void"},{"lineNumber":56,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"xuanqi966"},"content":"    public void showLine() {"},{"lineNumber":58,"author":{"gitId":"xuanqi966"},"content":"        response +\u003d \"_____________________________________________\\n\";"},{"lineNumber":59,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":61,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"xuanqi966"},"content":"     * append specified error message to the reponse"},{"lineNumber":63,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"xuanqi966"},"content":"     * @param String error message"},{"lineNumber":65,"author":{"gitId":"xuanqi966"},"content":"     * @return void"},{"lineNumber":66,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"xuanqi966"},"content":"    public void showError(String msg) {"},{"lineNumber":68,"author":{"gitId":"xuanqi966"},"content":"        response +\u003d (msg + \"\\n\");"},{"lineNumber":69,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":71,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"xuanqi966"},"content":"     * appends textual form of task to the response"},{"lineNumber":73,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":74,"author":{"gitId":"xuanqi966"},"content":"     * @param Task task"},{"lineNumber":75,"author":{"gitId":"xuanqi966"},"content":"     * @return void"},{"lineNumber":76,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"xuanqi966"},"content":"    public void printTask(Task task) {"},{"lineNumber":78,"author":{"gitId":"xuanqi966"},"content":"        response +\u003d task.toString() + \"\\n\";"},{"lineNumber":79,"author":{"gitId":"xuanqi966"},"content":"        if (task.toString().isEmpty()) {"},{"lineNumber":80,"author":{"gitId":"xuanqi966"},"content":"            System.out.println(\"Nothing\");"},{"lineNumber":81,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"xuanqi966"},"content":"        System.out.println(\"Print task: \" + task.toString());"},{"lineNumber":83,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":85,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"xuanqi966"},"content":"     * appends textual form of task from a tasklist to the response"},{"lineNumber":87,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"xuanqi966"},"content":"     * @param TaskList taskList"},{"lineNumber":89,"author":{"gitId":"xuanqi966"},"content":"     * @return void"},{"lineNumber":90,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"xuanqi966"},"content":"    public void printTasks(TaskList taskList) {"},{"lineNumber":92,"author":{"gitId":"xuanqi966"},"content":"        int i \u003d 1;"},{"lineNumber":93,"author":{"gitId":"xuanqi966"},"content":"        for (Task t : taskList.getTaskList()) {"},{"lineNumber":94,"author":{"gitId":"xuanqi966"},"content":"            response +\u003d (i + \". \" + t.toString() + \"\\n\");"},{"lineNumber":95,"author":{"gitId":"xuanqi966"},"content":"            i++;"},{"lineNumber":96,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":99,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"xuanqi966"},"content":"     * appends list header message to the response"},{"lineNumber":101,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"xuanqi966"},"content":"     * @return void"},{"lineNumber":103,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"xuanqi966"},"content":"    public void showListMsg() {"},{"lineNumber":105,"author":{"gitId":"xuanqi966"},"content":"        response +\u003d \"Here are the tasks in your list:\\n\";"},{"lineNumber":106,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":108,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"xuanqi966"},"content":"     * appends goodbye message to the response"},{"lineNumber":110,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":111,"author":{"gitId":"xuanqi966"},"content":"     * @return void"},{"lineNumber":112,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":113,"author":{"gitId":"xuanqi966"},"content":"    public void showByeMsg() {"},{"lineNumber":114,"author":{"gitId":"xuanqi966"},"content":"        response +\u003d \"Goodbye comrade. Hope to see you again soon!\\n\";"},{"lineNumber":115,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":117,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":118,"author":{"gitId":"xuanqi966"},"content":"     * appends marking task as done message to the response"},{"lineNumber":119,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":120,"author":{"gitId":"xuanqi966"},"content":"     * @return void"},{"lineNumber":121,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":122,"author":{"gitId":"xuanqi966"},"content":"    public void showDoneMsg() {"},{"lineNumber":123,"author":{"gitId":"xuanqi966"},"content":"        response +\u003d \"Nice! I\u0027ve marked this task as done:\\n\";"},{"lineNumber":124,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":126,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":127,"author":{"gitId":"xuanqi966"},"content":"     * appends added task message to the response"},{"lineNumber":128,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":129,"author":{"gitId":"xuanqi966"},"content":"     * @return void"},{"lineNumber":130,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":131,"author":{"gitId":"xuanqi966"},"content":"    public void showTaskMsg() {"},{"lineNumber":132,"author":{"gitId":"xuanqi966"},"content":"        response +\u003d \"Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":133,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":135,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":136,"author":{"gitId":"xuanqi966"},"content":"     * appends task count message to the response"},{"lineNumber":137,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":138,"author":{"gitId":"xuanqi966"},"content":"     * @return void"},{"lineNumber":139,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":140,"author":{"gitId":"xuanqi966"},"content":"    public void showTaskCount(int i) {"},{"lineNumber":141,"author":{"gitId":"xuanqi966"},"content":"        response +\u003d (\"Now you have \" + i+ \" tasks in the list.\\n\");"},{"lineNumber":142,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":144,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":145,"author":{"gitId":"xuanqi966"},"content":"     * appends delete header message to the response"},{"lineNumber":146,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":147,"author":{"gitId":"xuanqi966"},"content":"     * @return void"},{"lineNumber":148,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":149,"author":{"gitId":"xuanqi966"},"content":"    public void showDeleteMsg() {"},{"lineNumber":150,"author":{"gitId":"xuanqi966"},"content":"        response +\u003d \"Noted. I\u0027ve removed this task:\\n\";"},{"lineNumber":151,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":153,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":154,"author":{"gitId":"xuanqi966"},"content":"     * appends cannot find task message to the response"},{"lineNumber":155,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":156,"author":{"gitId":"xuanqi966"},"content":"     * @return void"},{"lineNumber":157,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":158,"author":{"gitId":"xuanqi966"},"content":"    public void showCannotFind() {"},{"lineNumber":159,"author":{"gitId":"xuanqi966"},"content":"        response +\u003d \"I\u0027m sorry, I can\u0027t find the task requested\\n\";"},{"lineNumber":160,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":162,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":163,"author":{"gitId":"xuanqi966"},"content":"     * appends founded task header message to the response"},{"lineNumber":164,"author":{"gitId":"xuanqi966"},"content":"     *"},{"lineNumber":165,"author":{"gitId":"xuanqi966"},"content":"     * @return void"},{"lineNumber":166,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":167,"author":{"gitId":"xuanqi966"},"content":"    public void showFoundText() {"},{"lineNumber":168,"author":{"gitId":"xuanqi966"},"content":"        response +\u003d \"Here are the matching tasks in your list:\\n\";"},{"lineNumber":169,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":171,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":171}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":17,"author":{"gitId":"xuanqi966"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"xuanqi966"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"xuanqi966"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"xuanqi966"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"xuanqi966"},"content":" */"},{"lineNumber":22,"author":{"gitId":"xuanqi966"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"xuanqi966"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"xuanqi966"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"xuanqi966"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"xuanqi966"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":28,"author":{"gitId":"xuanqi966"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"xuanqi966"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"xuanqi966"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"xuanqi966"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"xuanqi966"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"xuanqi966"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"xuanqi966"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"xuanqi966"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":38,"author":{"gitId":"xuanqi966"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"xuanqi966"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":42,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"xuanqi966"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"xuanqi966"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"xuanqi966"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"xuanqi966"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"xuanqi966"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"xuanqi966"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":52,"author":{"gitId":"xuanqi966"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"xuanqi966"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":56,"author":{"gitId":"xuanqi966"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"xuanqi966"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"xuanqi966"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"xuanqi966"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":61}},{"path":"src/main/java/duke/ui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"import duke.Main;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":" */"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"public class Launcher {"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"    public Launcher() {"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":"    public static void main(String[] args) {"},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":17}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"import javafx.application.Platform;"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"import javafx.scene.control.Button;"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":" */"},{"lineNumber":17,"author":{"gitId":"xuanqi966"},"content":"public class MainWindow {"},{"lineNumber":18,"author":{"gitId":"xuanqi966"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"xuanqi966"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":20,"author":{"gitId":"xuanqi966"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"xuanqi966"},"content":"    private VBox dialogContainer;"},{"lineNumber":22,"author":{"gitId":"xuanqi966"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"xuanqi966"},"content":"    private TextField userInput;"},{"lineNumber":24,"author":{"gitId":"xuanqi966"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"xuanqi966"},"content":"    private Button sendButton;"},{"lineNumber":26,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":27,"author":{"gitId":"xuanqi966"},"content":"    private Duke duke;"},{"lineNumber":28,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":29,"author":{"gitId":"xuanqi966"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":30,"author":{"gitId":"xuanqi966"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":31,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":32,"author":{"gitId":"xuanqi966"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitId":"xuanqi966"},"content":"    public void initialize() {"},{"lineNumber":34,"author":{"gitId":"xuanqi966"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":35,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":37,"author":{"gitId":"xuanqi966"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":38,"author":{"gitId":"xuanqi966"},"content":"        duke \u003d d;"},{"lineNumber":39,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":41,"author":{"gitId":"xuanqi966"},"content":"    public void showWelcomeMsg() {"},{"lineNumber":42,"author":{"gitId":"xuanqi966"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(\"Good morning comrade, welcome to KGB.\\nWhat can I do for you?\", dukeImage));"},{"lineNumber":43,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":45,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"xuanqi966"},"content":"     * Checks if the userinput is bye, returns a boolean value"},{"lineNumber":47,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"xuanqi966"},"content":"    public boolean isTerminating() {"},{"lineNumber":49,"author":{"gitId":"xuanqi966"},"content":"        if (userInput.getText().startsWith(\"bye\")) {"},{"lineNumber":50,"author":{"gitId":"xuanqi966"},"content":"            return true;"},{"lineNumber":51,"author":{"gitId":"xuanqi966"},"content":"        } else {"},{"lineNumber":52,"author":{"gitId":"xuanqi966"},"content":"            return false;"},{"lineNumber":53,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":56,"author":{"gitId":"xuanqi966"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"xuanqi966"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":58,"author":{"gitId":"xuanqi966"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":59,"author":{"gitId":"xuanqi966"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"xuanqi966"},"content":"    @FXML"},{"lineNumber":61,"author":{"gitId":"xuanqi966"},"content":"    private void handleUserInput() {"},{"lineNumber":62,"author":{"gitId":"xuanqi966"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":63,"author":{"gitId":"xuanqi966"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":64,"author":{"gitId":"xuanqi966"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":65,"author":{"gitId":"xuanqi966"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":66,"author":{"gitId":"xuanqi966"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":67,"author":{"gitId":"xuanqi966"},"content":"        );"},{"lineNumber":68,"author":{"gitId":"xuanqi966"},"content":"        if (isTerminating()) {"},{"lineNumber":69,"author":{"gitId":"xuanqi966"},"content":"            Platform.exit();"},{"lineNumber":70,"author":{"gitId":"xuanqi966"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"xuanqi966"},"content":"        userInput.clear();"},{"lineNumber":72,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":73}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"xuanqi966":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"xuanqi966"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"xuanqi966"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"xuanqi966"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"xuanqi966"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"xuanqi966":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"public class DeadlineTest {"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"    public void test_toString() {"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"        assertEquals(\"D | 0 | running | Dec 21 2020 Sunday\", new Deadline(\"running\", \"2020-12-21 Sunday\").toString());"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":12}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"public class DukeTest {"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"    public void dummyTest(){"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"        assertEquals(2, 2);"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":12}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"public class EventTest {"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"    public void test_toString() {"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"        assertEquals(\"E | 0 | meeting | Dec 21 2020 Sunday\", new Event(\"meeting\", \"2020-12-21 Sunday\").toString());"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":12}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"public class StorageTest {"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"    public void test_load_empty() throws DukeException {"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"        ArrayList\u003cString\u003e testList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"xuanqi966"},"content":"        assertEquals(testList, new Storage(\"./testLoad.txt\").load());"},{"lineNumber":14,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":15}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":""},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"public class TodoTest {"},{"lineNumber":8,"author":{"gitId":"xuanqi966"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"xuanqi966"},"content":"    public void test_toString() {"},{"lineNumber":10,"author":{"gitId":"xuanqi966"},"content":"        assertEquals(\"T | 0 | homework\", new Todo(\"homework\").toString());"},{"lineNumber":11,"author":{"gitId":"xuanqi966"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"xuanqi966"},"content":"}"}],"authorContributionMap":{"xuanqi966":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"xuanqi966"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"xuanqi966"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"xuanqi966"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"xuanqi966"},"content":"list"},{"lineNumber":5,"author":{"gitId":"xuanqi966"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"xuanqi966"},"content":"list"},{"lineNumber":7,"author":{"gitId":"xuanqi966"},"content":"bye"}],"authorContributionMap":{"xuanqi966":7}}]
