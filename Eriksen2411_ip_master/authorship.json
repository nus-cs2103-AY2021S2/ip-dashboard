[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"public class Deadline extends Task{"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"    public String dlTime;"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":""},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"    public Deadline(String taskName, String dlTime) {"},{"lineNumber":5,"author":{"gitId":"Eriksen2411"},"content":"        super(taskName);"},{"lineNumber":6,"author":{"gitId":"Eriksen2411"},"content":"        this.dlTime \u003d dlTime;"},{"lineNumber":7,"author":{"gitId":"Eriksen2411"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"Eriksen2411"},"content":""},{"lineNumber":9,"author":{"gitId":"Eriksen2411"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"    public String printTask() {"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"        String ans;"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"        if (taskDone) {"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"            ans \u003d \"[D][X] \" + this.taskName + \" (by: \" + this.dlTime + \")\";"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"        } else {"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":"            ans \u003d \"[D][ ] \" + this.taskName + \" (by: \" + this.dlTime + \")\";"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"        return ans;"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":"}"}],"authorContributionMap":{"Eriksen2411":19}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"Eriksen2411"},"content":"    private final ArrayList\u003cTask\u003e listToDo;"},{"lineNumber":6,"author":{"gitId":"Eriksen2411"},"content":""},{"lineNumber":7,"author":{"gitId":"Eriksen2411"},"content":"    private Duke() {"},{"lineNumber":8,"author":{"gitId":"Eriksen2411"},"content":"        this.listToDo \u003d new ArrayList\u003c\u003e();"},{"lineNumber":9,"author":{"gitId":"Eriksen2411"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"        System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"        System.out.println(logo);"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":"        System.out.println(\"Hello! I\u0027m Danh\u0027s Duke\\nWhat can I do for you, Mr Danh?\");"},{"lineNumber":20,"author":{"gitId":"Eriksen2411"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");"},{"lineNumber":21,"author":{"gitId":"Eriksen2411"},"content":"        Duke myDuke \u003d new Duke();"},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":"        Scanner input \u003d new Scanner(System.in);"},{"lineNumber":23,"author":{"gitId":"Eriksen2411"},"content":"        boolean signalToExit \u003d false;"},{"lineNumber":24,"author":{"gitId":"Eriksen2411"},"content":"        while (!signalToExit \u0026\u0026 input.hasNextLine()) {"},{"lineNumber":25,"author":{"gitId":"Eriksen2411"},"content":"            String command \u003d input.nextLine();"},{"lineNumber":26,"author":{"gitId":"Eriksen2411"},"content":"            if (command.startsWith(\"list\")) {"},{"lineNumber":27,"author":{"gitId":"Eriksen2411"},"content":"                if (command.length() !\u003d 4) {"},{"lineNumber":28,"author":{"gitId":"Eriksen2411"},"content":"                    try {"},{"lineNumber":29,"author":{"gitId":"Eriksen2411"},"content":"                        executeFalseCommand(command);"},{"lineNumber":30,"author":{"gitId":"Eriksen2411"},"content":"                    } catch (DukeException err) {"},{"lineNumber":31,"author":{"gitId":"Eriksen2411"},"content":"                        printErrMsg(err);"},{"lineNumber":32,"author":{"gitId":"Eriksen2411"},"content":"                    }"},{"lineNumber":33,"author":{"gitId":"Eriksen2411"},"content":"                } else {"},{"lineNumber":34,"author":{"gitId":"Eriksen2411"},"content":"                    printList(myDuke);"},{"lineNumber":35,"author":{"gitId":"Eriksen2411"},"content":"                }"},{"lineNumber":36,"author":{"gitId":"Eriksen2411"},"content":"            } else if (command.startsWith(\"bye\")) {"},{"lineNumber":37,"author":{"gitId":"Eriksen2411"},"content":"                if (command.length() !\u003d 3) {"},{"lineNumber":38,"author":{"gitId":"Eriksen2411"},"content":"                    try {"},{"lineNumber":39,"author":{"gitId":"Eriksen2411"},"content":"                        executeFalseCommand(command);"},{"lineNumber":40,"author":{"gitId":"Eriksen2411"},"content":"                    } catch (DukeException err) {"},{"lineNumber":41,"author":{"gitId":"Eriksen2411"},"content":"                        printErrMsg(err);"},{"lineNumber":42,"author":{"gitId":"Eriksen2411"},"content":"                    }"},{"lineNumber":43,"author":{"gitId":"Eriksen2411"},"content":"                } else {"},{"lineNumber":44,"author":{"gitId":"Eriksen2411"},"content":"                    signalToExit \u003d true;"},{"lineNumber":45,"author":{"gitId":"Eriksen2411"},"content":"                }"},{"lineNumber":46,"author":{"gitId":"Eriksen2411"},"content":"            } else if (command.startsWith(\"done \")) {"},{"lineNumber":47,"author":{"gitId":"Eriksen2411"},"content":"                if (command.length() \u003d\u003d 5 || !isNumeric(command.substring(5))) {"},{"lineNumber":48,"author":{"gitId":"Eriksen2411"},"content":"                    try {"},{"lineNumber":49,"author":{"gitId":"Eriksen2411"},"content":"                        executeFalseCommand(command);"},{"lineNumber":50,"author":{"gitId":"Eriksen2411"},"content":"                    } catch (DukeException err) {"},{"lineNumber":51,"author":{"gitId":"Eriksen2411"},"content":"                        printErrMsg(err);"},{"lineNumber":52,"author":{"gitId":"Eriksen2411"},"content":"                    }"},{"lineNumber":53,"author":{"gitId":"Eriksen2411"},"content":"                } else if (Integer.parseInt(command.substring(5)) \u003e myDuke.listToDo.size()) {"},{"lineNumber":54,"author":{"gitId":"Eriksen2411"},"content":"                    try {"},{"lineNumber":55,"author":{"gitId":"Eriksen2411"},"content":"                        executeFalseCommand(command);"},{"lineNumber":56,"author":{"gitId":"Eriksen2411"},"content":"                    } catch (DukeException err) {"},{"lineNumber":57,"author":{"gitId":"Eriksen2411"},"content":"                        printErrMsg(err);"},{"lineNumber":58,"author":{"gitId":"Eriksen2411"},"content":"                    }"},{"lineNumber":59,"author":{"gitId":"Eriksen2411"},"content":"                } else {"},{"lineNumber":60,"author":{"gitId":"Eriksen2411"},"content":"                    markTaskDone(myDuke, Integer.parseInt(command.substring(5)));"},{"lineNumber":61,"author":{"gitId":"Eriksen2411"},"content":"                }"},{"lineNumber":62,"author":{"gitId":"Eriksen2411"},"content":"            } else if (command.startsWith(\"delete \")) {"},{"lineNumber":63,"author":{"gitId":"Eriksen2411"},"content":"                if (command.length() \u003d\u003d 7 || !isNumeric(command.substring(7))) {"},{"lineNumber":64,"author":{"gitId":"Eriksen2411"},"content":"                    try {"},{"lineNumber":65,"author":{"gitId":"Eriksen2411"},"content":"                        executeFalseCommand(command);"},{"lineNumber":66,"author":{"gitId":"Eriksen2411"},"content":"                    } catch (DukeException err) {"},{"lineNumber":67,"author":{"gitId":"Eriksen2411"},"content":"                        printErrMsg(err);"},{"lineNumber":68,"author":{"gitId":"Eriksen2411"},"content":"                    }"},{"lineNumber":69,"author":{"gitId":"Eriksen2411"},"content":"                } else if (Integer.parseInt(command.substring(7)) \u003e myDuke.listToDo.size()) {"},{"lineNumber":70,"author":{"gitId":"Eriksen2411"},"content":"                    try {"},{"lineNumber":71,"author":{"gitId":"Eriksen2411"},"content":"                        executeFalseCommand(command);"},{"lineNumber":72,"author":{"gitId":"Eriksen2411"},"content":"                    } catch (DukeException err) {"},{"lineNumber":73,"author":{"gitId":"Eriksen2411"},"content":"                        printErrMsg(err);"},{"lineNumber":74,"author":{"gitId":"Eriksen2411"},"content":"                    }"},{"lineNumber":75,"author":{"gitId":"Eriksen2411"},"content":"                } else {"},{"lineNumber":76,"author":{"gitId":"Eriksen2411"},"content":"                    deleteTask(myDuke, Integer.parseInt(command.substring(7)));"},{"lineNumber":77,"author":{"gitId":"Eriksen2411"},"content":"                }"},{"lineNumber":78,"author":{"gitId":"Eriksen2411"},"content":"            } else if (command.startsWith(\"todo \")) {"},{"lineNumber":79,"author":{"gitId":"Eriksen2411"},"content":"                if (command.length() \u003d\u003d 5) {"},{"lineNumber":80,"author":{"gitId":"Eriksen2411"},"content":"                    try {"},{"lineNumber":81,"author":{"gitId":"Eriksen2411"},"content":"                        executeFalseCommand(command);"},{"lineNumber":82,"author":{"gitId":"Eriksen2411"},"content":"                    } catch (DukeException err) {"},{"lineNumber":83,"author":{"gitId":"Eriksen2411"},"content":"                        printErrMsg(err);"},{"lineNumber":84,"author":{"gitId":"Eriksen2411"},"content":"                    }"},{"lineNumber":85,"author":{"gitId":"Eriksen2411"},"content":"                } else {"},{"lineNumber":86,"author":{"gitId":"Eriksen2411"},"content":"                    addToList(myDuke, command.substring(5));"},{"lineNumber":87,"author":{"gitId":"Eriksen2411"},"content":"                }"},{"lineNumber":88,"author":{"gitId":"Eriksen2411"},"content":"            } else if (command.startsWith(\"deadline \")) {"},{"lineNumber":89,"author":{"gitId":"Eriksen2411"},"content":"                if (command.length() \u003d\u003d 9 || !command.contains(\"/by \")) {"},{"lineNumber":90,"author":{"gitId":"Eriksen2411"},"content":"                    try {"},{"lineNumber":91,"author":{"gitId":"Eriksen2411"},"content":"                        executeFalseCommand(command);"},{"lineNumber":92,"author":{"gitId":"Eriksen2411"},"content":"                    } catch (DukeException err) {"},{"lineNumber":93,"author":{"gitId":"Eriksen2411"},"content":"                        printErrMsg(err);"},{"lineNumber":94,"author":{"gitId":"Eriksen2411"},"content":"                    }"},{"lineNumber":95,"author":{"gitId":"Eriksen2411"},"content":"                } else if (command.indexOf(\"/by \") + 4 \u003d\u003d command.length()) {"},{"lineNumber":96,"author":{"gitId":"Eriksen2411"},"content":"                    try {"},{"lineNumber":97,"author":{"gitId":"Eriksen2411"},"content":"                        executeFalseCommand(command);"},{"lineNumber":98,"author":{"gitId":"Eriksen2411"},"content":"                    } catch (DukeException err) {"},{"lineNumber":99,"author":{"gitId":"Eriksen2411"},"content":"                        printErrMsg(err);"},{"lineNumber":100,"author":{"gitId":"Eriksen2411"},"content":"                    }"},{"lineNumber":101,"author":{"gitId":"Eriksen2411"},"content":"                } else {"},{"lineNumber":102,"author":{"gitId":"Eriksen2411"},"content":"                    addToList(myDuke, command.substring(9));"},{"lineNumber":103,"author":{"gitId":"Eriksen2411"},"content":"                }"},{"lineNumber":104,"author":{"gitId":"Eriksen2411"},"content":"            } else if (command.startsWith(\"event \")) {"},{"lineNumber":105,"author":{"gitId":"Eriksen2411"},"content":"                if (command.length() \u003d\u003d 6 || !command.contains(\"/at \")) {"},{"lineNumber":106,"author":{"gitId":"Eriksen2411"},"content":"                    try {"},{"lineNumber":107,"author":{"gitId":"Eriksen2411"},"content":"                        executeFalseCommand(command);"},{"lineNumber":108,"author":{"gitId":"Eriksen2411"},"content":"                    } catch (DukeException err) {"},{"lineNumber":109,"author":{"gitId":"Eriksen2411"},"content":"                        printErrMsg(err);"},{"lineNumber":110,"author":{"gitId":"Eriksen2411"},"content":"                    }"},{"lineNumber":111,"author":{"gitId":"Eriksen2411"},"content":"                } else if (command.indexOf(\"/at \") + 4 \u003d\u003d command.length()) {"},{"lineNumber":112,"author":{"gitId":"Eriksen2411"},"content":"                    try {"},{"lineNumber":113,"author":{"gitId":"Eriksen2411"},"content":"                        executeFalseCommand(command);"},{"lineNumber":114,"author":{"gitId":"Eriksen2411"},"content":"                    } catch (DukeException err) {"},{"lineNumber":115,"author":{"gitId":"Eriksen2411"},"content":"                        printErrMsg(err);"},{"lineNumber":116,"author":{"gitId":"Eriksen2411"},"content":"                    }"},{"lineNumber":117,"author":{"gitId":"Eriksen2411"},"content":"                } else {"},{"lineNumber":118,"author":{"gitId":"Eriksen2411"},"content":"                    addToList(myDuke, command.substring(6));"},{"lineNumber":119,"author":{"gitId":"Eriksen2411"},"content":"                }"},{"lineNumber":120,"author":{"gitId":"Eriksen2411"},"content":"            } else {"},{"lineNumber":121,"author":{"gitId":"Eriksen2411"},"content":"                try {"},{"lineNumber":122,"author":{"gitId":"Eriksen2411"},"content":"                    executeFalseCommand(command);"},{"lineNumber":123,"author":{"gitId":"Eriksen2411"},"content":"                } catch (DukeException err) {"},{"lineNumber":124,"author":{"gitId":"Eriksen2411"},"content":"                    printErrMsg(err);"},{"lineNumber":125,"author":{"gitId":"Eriksen2411"},"content":"                }"},{"lineNumber":126,"author":{"gitId":"Eriksen2411"},"content":"            }"},{"lineNumber":127,"author":{"gitId":"Eriksen2411"},"content":"            if (command.equals(\"bye\")) {"},{"lineNumber":128,"author":{"gitId":"Eriksen2411"},"content":"                echoBye();"},{"lineNumber":129,"author":{"gitId":"Eriksen2411"},"content":"            }"},{"lineNumber":130,"author":{"gitId":"Eriksen2411"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"Eriksen2411"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"Eriksen2411"},"content":""},{"lineNumber":133,"author":{"gitId":"Eriksen2411"},"content":"    public static void echoBye() {"},{"lineNumber":134,"author":{"gitId":"Eriksen2411"},"content":"        System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":135,"author":{"gitId":"Eriksen2411"},"content":"        System.out.println(\"     Bye. Hope to see you again soon!\");"},{"lineNumber":136,"author":{"gitId":"Eriksen2411"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"Eriksen2411"},"content":""},{"lineNumber":139,"author":{"gitId":"Eriksen2411"},"content":"    public static void printList(Duke duke) {"},{"lineNumber":140,"author":{"gitId":"Eriksen2411"},"content":"        int index \u003d 1;"},{"lineNumber":141,"author":{"gitId":"Eriksen2411"},"content":"        System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":142,"author":{"gitId":"Eriksen2411"},"content":"        System.out.println(\"     Here are the tasks in your list:\");"},{"lineNumber":143,"author":{"gitId":"Eriksen2411"},"content":"        for (Task task : duke.listToDo) {"},{"lineNumber":144,"author":{"gitId":"Eriksen2411"},"content":"            System.out.format(\"     %d. \" + task.printTask() + \"\\n\", index);"},{"lineNumber":145,"author":{"gitId":"Eriksen2411"},"content":"            index++;"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"Eriksen2411"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");"},{"lineNumber":148,"author":{"gitId":"Eriksen2411"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"Eriksen2411"},"content":""},{"lineNumber":150,"author":{"gitId":"Eriksen2411"},"content":"    public static void addToList(Duke duke, String taskdescription) {"},{"lineNumber":151,"author":{"gitId":"Eriksen2411"},"content":"        System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":152,"author":{"gitId":"Eriksen2411"},"content":"        System.out.println(\"     Got it. I\u0027ve added this task: \");"},{"lineNumber":153,"author":{"gitId":"Eriksen2411"},"content":"        Task task;"},{"lineNumber":154,"author":{"gitId":"Eriksen2411"},"content":"        if (taskdescription.contains(\"/at\")) {"},{"lineNumber":155,"author":{"gitId":"Eriksen2411"},"content":"            String taskName \u003d taskdescription.substring(0, taskdescription.indexOf(\"/at\"));"},{"lineNumber":156,"author":{"gitId":"Eriksen2411"},"content":"            String dlTime \u003d taskdescription.substring(taskdescription.indexOf(\"/at\") + 4);"},{"lineNumber":157,"author":{"gitId":"Eriksen2411"},"content":"            task \u003d new Event(taskName, dlTime);"},{"lineNumber":158,"author":{"gitId":"Eriksen2411"},"content":"        } else if (taskdescription.contains(\"/by\")) {"},{"lineNumber":159,"author":{"gitId":"Eriksen2411"},"content":"            String taskName \u003d taskdescription.substring(0, taskdescription.indexOf(\"/by\"));"},{"lineNumber":160,"author":{"gitId":"Eriksen2411"},"content":"            String dlTime \u003d taskdescription.substring(taskdescription.indexOf(\"/by\") + 4);"},{"lineNumber":161,"author":{"gitId":"Eriksen2411"},"content":"            task \u003d new Deadline(taskName, dlTime);"},{"lineNumber":162,"author":{"gitId":"Eriksen2411"},"content":"        } else {"},{"lineNumber":163,"author":{"gitId":"Eriksen2411"},"content":"            task \u003d new ToDo(taskdescription);"},{"lineNumber":164,"author":{"gitId":"Eriksen2411"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"Eriksen2411"},"content":"        System.out.println(\"       \" + task.printTask());"},{"lineNumber":166,"author":{"gitId":"Eriksen2411"},"content":"        duke.listToDo.add(task);"},{"lineNumber":167,"author":{"gitId":"Eriksen2411"},"content":"        System.out.format(\"     Now you have %d tasks in the list.\\n\", duke.listToDo.size());"},{"lineNumber":168,"author":{"gitId":"Eriksen2411"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");"},{"lineNumber":169,"author":{"gitId":"Eriksen2411"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"Eriksen2411"},"content":""},{"lineNumber":171,"author":{"gitId":"Eriksen2411"},"content":"    public static void markTaskDone(Duke duke, int index) {"},{"lineNumber":172,"author":{"gitId":"Eriksen2411"},"content":"        System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":173,"author":{"gitId":"Eriksen2411"},"content":"        Task task \u003d duke.listToDo.get(index - 1);"},{"lineNumber":174,"author":{"gitId":"Eriksen2411"},"content":"        task.markAsDone();"},{"lineNumber":175,"author":{"gitId":"Eriksen2411"},"content":"        System.out.println(\"     Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":176,"author":{"gitId":"Eriksen2411"},"content":"        System.out.println(\"       \" + task.printTask());"},{"lineNumber":177,"author":{"gitId":"Eriksen2411"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");"},{"lineNumber":178,"author":{"gitId":"Eriksen2411"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"Eriksen2411"},"content":""},{"lineNumber":180,"author":{"gitId":"Eriksen2411"},"content":"    public static void deleteTask(Duke duke, int index) {"},{"lineNumber":181,"author":{"gitId":"Eriksen2411"},"content":"        System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":182,"author":{"gitId":"Eriksen2411"},"content":"        Task task \u003d duke.listToDo.get(index - 1);"},{"lineNumber":183,"author":{"gitId":"Eriksen2411"},"content":"        System.out.println(\"     Noted. I\u0027ve removed this task: \");"},{"lineNumber":184,"author":{"gitId":"Eriksen2411"},"content":"        System.out.println(\"       \" + task.printTask());"},{"lineNumber":185,"author":{"gitId":"Eriksen2411"},"content":"        System.out.format(\"     Now you have %d tasks in the list.\\n\", duke.listToDo.size() - 1);"},{"lineNumber":186,"author":{"gitId":"Eriksen2411"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");"},{"lineNumber":187,"author":{"gitId":"Eriksen2411"},"content":"        duke.listToDo.remove(index - 1);"},{"lineNumber":188,"author":{"gitId":"Eriksen2411"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"Eriksen2411"},"content":""},{"lineNumber":190,"author":{"gitId":"Eriksen2411"},"content":"    public static void executeFalseCommand(String command) throws DukeException {"},{"lineNumber":191,"author":{"gitId":"Eriksen2411"},"content":"        if (command.startsWith(\"list\")) {"},{"lineNumber":192,"author":{"gitId":"Eriksen2411"},"content":"            throw new DukeException(\"     list command should not have body, Sir!\");"},{"lineNumber":193,"author":{"gitId":"Eriksen2411"},"content":"        } else if (command.startsWith(\"bye\")) {"},{"lineNumber":194,"author":{"gitId":"Eriksen2411"},"content":"            throw new DukeException(\"     bye command should not have body, Sir!\");"},{"lineNumber":195,"author":{"gitId":"Eriksen2411"},"content":"        } else if (command.startsWith(\"done \")) {"},{"lineNumber":196,"author":{"gitId":"Eriksen2411"},"content":"            throw new DukeException(\"     No body or wrong body format or unvalid number for done command, Sir!\");"},{"lineNumber":197,"author":{"gitId":"Eriksen2411"},"content":"        } else if (command.startsWith(\"delete \")) {"},{"lineNumber":198,"author":{"gitId":"Eriksen2411"},"content":"            throw new DukeException(\"     No body or wrong body format or unvalid number for delete command, Sir!\");"},{"lineNumber":199,"author":{"gitId":"Eriksen2411"},"content":"        } else if (command.startsWith(\"todo \")) {"},{"lineNumber":200,"author":{"gitId":"Eriksen2411"},"content":"            throw new DukeException(\"     No body detected for todo command, Sir!\");"},{"lineNumber":201,"author":{"gitId":"Eriksen2411"},"content":"        } else if (command.startsWith(\"deadline \")) {"},{"lineNumber":202,"author":{"gitId":"Eriksen2411"},"content":"            throw new DukeException(\"     no body detected or no dlTime detected for deadline command, Sir!\");"},{"lineNumber":203,"author":{"gitId":"Eriksen2411"},"content":"        } else if (command.startsWith(\"event \")) {"},{"lineNumber":204,"author":{"gitId":"Eriksen2411"},"content":"            throw new DukeException(\"     no body detected or no eTime detected for Event command, Sir!\");"},{"lineNumber":205,"author":{"gitId":"Eriksen2411"},"content":"        } else {"},{"lineNumber":206,"author":{"gitId":"Eriksen2411"},"content":"            throw new DukeException(\"     Invalid command format\");"},{"lineNumber":207,"author":{"gitId":"Eriksen2411"},"content":"        }"},{"lineNumber":208,"author":{"gitId":"Eriksen2411"},"content":"    }"},{"lineNumber":209,"author":{"gitId":"Eriksen2411"},"content":""},{"lineNumber":210,"author":{"gitId":"Eriksen2411"},"content":"    public static void printErrMsg(DukeException err) {"},{"lineNumber":211,"author":{"gitId":"Eriksen2411"},"content":"        System.out.println(\"    ____________________________________________________________\\n\" + err.getMessage() + \"\\n\" + \"    ____________________________________________________________\\n\");"},{"lineNumber":212,"author":{"gitId":"Eriksen2411"},"content":"    }"},{"lineNumber":213,"author":{"gitId":"Eriksen2411"},"content":""},{"lineNumber":214,"author":{"gitId":"Eriksen2411"},"content":"    public static boolean isNumeric(String strNum) {"},{"lineNumber":215,"author":{"gitId":"Eriksen2411"},"content":"        if (strNum \u003d\u003d null) {"},{"lineNumber":216,"author":{"gitId":"Eriksen2411"},"content":"            return false;"},{"lineNumber":217,"author":{"gitId":"Eriksen2411"},"content":"        }"},{"lineNumber":218,"author":{"gitId":"Eriksen2411"},"content":"        try {"},{"lineNumber":219,"author":{"gitId":"Eriksen2411"},"content":"            double randomNo \u003d Double.parseDouble(strNum);"},{"lineNumber":220,"author":{"gitId":"Eriksen2411"},"content":"        } catch (NumberFormatException nfe) {"},{"lineNumber":221,"author":{"gitId":"Eriksen2411"},"content":"            return false;"},{"lineNumber":222,"author":{"gitId":"Eriksen2411"},"content":"        }"},{"lineNumber":223,"author":{"gitId":"Eriksen2411"},"content":"        return true;"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}"},{"lineNumber":226,"author":{"gitId":"Eriksen2411"},"content":""},{"lineNumber":227,"author":{"gitId":"Eriksen2411"},"content":""}],"authorContributionMap":{"Eriksen2411":216,"-":11}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"        super(errorMessage);"},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"Eriksen2411"},"content":"}"}],"authorContributionMap":{"Eriksen2411":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"    public String eTime;"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":""},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"    public Event(String taskName, String eTime) {"},{"lineNumber":5,"author":{"gitId":"Eriksen2411"},"content":"        super(taskName);"},{"lineNumber":6,"author":{"gitId":"Eriksen2411"},"content":"        this.eTime \u003d eTime;"},{"lineNumber":7,"author":{"gitId":"Eriksen2411"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"Eriksen2411"},"content":""},{"lineNumber":9,"author":{"gitId":"Eriksen2411"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"    public String printTask() {"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"        String ans;"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"        if (taskDone) {"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"            ans \u003d \"[E][X] \" + this.taskName + \" (at: \" + this.eTime + \")\";"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"        } else {"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":"            ans \u003d \"[E][ ] \" + this.taskName + \" (at: \" + this.eTime + \")\";"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"        return ans;"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":"}"},{"lineNumber":20,"author":{"gitId":"Eriksen2411"},"content":""}],"authorContributionMap":{"Eriksen2411":20}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"    public String taskName;"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"    public boolean taskDone;"},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":""},{"lineNumber":5,"author":{"gitId":"Eriksen2411"},"content":"    public Task(String taskName) {"},{"lineNumber":6,"author":{"gitId":"Eriksen2411"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":7,"author":{"gitId":"Eriksen2411"},"content":"        this.taskDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"Eriksen2411"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"Eriksen2411"},"content":""},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"    public String printTask() {"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"        String ans;"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"        if (taskDone) {"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"            ans \u003d \"[X] \" + this.taskName;"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"        } else {"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":"            ans \u003d \"[ ] \" + this.taskName;"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"Eriksen2411"},"content":"        return ans;"},{"lineNumber":18,"author":{"gitId":"Eriksen2411"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Eriksen2411"},"content":""},{"lineNumber":20,"author":{"gitId":"Eriksen2411"},"content":"    public void markAsDone() {"},{"lineNumber":21,"author":{"gitId":"Eriksen2411"},"content":"        this.taskDone \u003d true;"},{"lineNumber":22,"author":{"gitId":"Eriksen2411"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Eriksen2411"},"content":"}"}],"authorContributionMap":{"Eriksen2411":23}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"public class ToDo extends Task{"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"    public ToDo(String taskName) {"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"        super(taskName);"},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"Eriksen2411"},"content":""},{"lineNumber":6,"author":{"gitId":"Eriksen2411"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"Eriksen2411"},"content":"    public String printTask() {"},{"lineNumber":8,"author":{"gitId":"Eriksen2411"},"content":"        String ans;"},{"lineNumber":9,"author":{"gitId":"Eriksen2411"},"content":"        if (taskDone) {"},{"lineNumber":10,"author":{"gitId":"Eriksen2411"},"content":"            ans \u003d \"[T][X] \" + this.taskName;"},{"lineNumber":11,"author":{"gitId":"Eriksen2411"},"content":"        } else {"},{"lineNumber":12,"author":{"gitId":"Eriksen2411"},"content":"            ans \u003d \"[T][ ] \" + this.taskName;"},{"lineNumber":13,"author":{"gitId":"Eriksen2411"},"content":"        }"},{"lineNumber":14,"author":{"gitId":"Eriksen2411"},"content":"        return ans;"},{"lineNumber":15,"author":{"gitId":"Eriksen2411"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Eriksen2411"},"content":"}"}],"authorContributionMap":{"Eriksen2411":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Eriksen2411"},"content":"todo myjob"},{"lineNumber":2,"author":{"gitId":"Eriksen2411"},"content":"deadline my another job /by 2021"},{"lineNumber":3,"author":{"gitId":"Eriksen2411"},"content":"event my test /at Today"},{"lineNumber":4,"author":{"gitId":"Eriksen2411"},"content":"list"},{"lineNumber":5,"author":{"gitId":"Eriksen2411"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"Eriksen2411"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"Eriksen2411"},"content":"list"},{"lineNumber":8,"author":{"gitId":"Eriksen2411"},"content":"bye"}],"authorContributionMap":{"Eriksen2411":8}}]
