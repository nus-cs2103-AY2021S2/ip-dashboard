[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daniellau88"},"content":"import models.*;"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":3,"author":{"gitId":"daniellau88"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"    private static void printIndentOutput(String output) {"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"        System.out.println(\u0027\\t\u0027 + output);"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"    private static void printHorizontalLine() {"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"        printIndentOutput(\"_____________________________________________________________________\");"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"    private static boolean checkMatchString(String line, String match) {"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"        return line.length() \u003e\u003d match.length() \u0026\u0026 line.substring(0, match.length()).equals(match);"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":"    private static void printTaskListStatus(ArrayList\u003cTask\u003e tasks, Task curTask) {"},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"        printIndentOutput(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"        printIndentOutput(\"   \" + curTask);"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"        printIndentOutput(\"Now you have \" + tasks.size() + \" task(s) in the list.\");"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"    private static String[] getCommandArgs(String line, String errorMessage) throws DukeException {"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"        String[] cmdArgs \u003d line.split(\" \", 2);"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"        if (cmdArgs.length \u003c 2) {"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"            throw new DukeException(errorMessage);"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"        return cmdArgs;"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":34,"author":{"gitId":"daniellau88"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":35,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":42,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":43,"author":{"gitId":"daniellau88"},"content":"        printHorizontalLine();"},{"lineNumber":44,"author":{"gitId":"daniellau88"},"content":"        printIndentOutput(\"What can I do for you?\");"},{"lineNumber":45,"author":{"gitId":"daniellau88"},"content":"        printHorizontalLine();"},{"lineNumber":46,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":47,"author":{"gitId":"daniellau88"},"content":"        Scanner stdin \u003d new Scanner(System.in);"},{"lineNumber":48,"author":{"gitId":"daniellau88"},"content":"        String line \u003d stdin.nextLine();"},{"lineNumber":49,"author":{"gitId":"daniellau88"},"content":"        boolean end \u003d false;"},{"lineNumber":50,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":51,"author":{"gitId":"daniellau88"},"content":"        while (line !\u003d null) {"},{"lineNumber":52,"author":{"gitId":"daniellau88"},"content":"            printHorizontalLine();"},{"lineNumber":53,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":54,"author":{"gitId":"daniellau88"},"content":"            try {"},{"lineNumber":55,"author":{"gitId":"daniellau88"},"content":"                if (line.equals(\"bye\")) {"},{"lineNumber":56,"author":{"gitId":"daniellau88"},"content":"                    printIndentOutput(\"Bye. Hope to see you again soon!\");"},{"lineNumber":57,"author":{"gitId":"daniellau88"},"content":"                    end \u003d true;"},{"lineNumber":58,"author":{"gitId":"daniellau88"},"content":"                } else if (line.equals(\"list\")) {"},{"lineNumber":59,"author":{"gitId":"daniellau88"},"content":"                    if (tasks.size() \u003c\u003d 0) {"},{"lineNumber":60,"author":{"gitId":"daniellau88"},"content":"                        printIndentOutput(\"The current list is empty.\");"},{"lineNumber":61,"author":{"gitId":"daniellau88"},"content":"                    } else {"},{"lineNumber":62,"author":{"gitId":"daniellau88"},"content":"                        printIndentOutput(\"Here are the tasks in you list:\");"},{"lineNumber":63,"author":{"gitId":"daniellau88"},"content":"                        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":64,"author":{"gitId":"daniellau88"},"content":"                            printIndentOutput((i + 1) + \". \" + tasks.get(i));"},{"lineNumber":65,"author":{"gitId":"daniellau88"},"content":"                        }"},{"lineNumber":66,"author":{"gitId":"daniellau88"},"content":"                    }"},{"lineNumber":67,"author":{"gitId":"daniellau88"},"content":"                } else if (checkMatchString(line, \"done \")) {"},{"lineNumber":68,"author":{"gitId":"daniellau88"},"content":"                    String[] cmdArgs \u003d getCommandArgs(line, \"I\u0027m sorry, but done needs the index of a Task.\");"},{"lineNumber":69,"author":{"gitId":"daniellau88"},"content":"                    try {"},{"lineNumber":70,"author":{"gitId":"daniellau88"},"content":"                        int index \u003d Integer.parseInt(cmdArgs[1]);"},{"lineNumber":71,"author":{"gitId":"daniellau88"},"content":"                        Task curTask \u003d tasks.get(index - 1);"},{"lineNumber":72,"author":{"gitId":"daniellau88"},"content":"                        curTask.markAsDone();"},{"lineNumber":73,"author":{"gitId":"daniellau88"},"content":"                        printIndentOutput(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":74,"author":{"gitId":"daniellau88"},"content":"                        printIndentOutput(\"   \" + curTask);"},{"lineNumber":75,"author":{"gitId":"daniellau88"},"content":"                    } catch (NumberFormatException e) {"},{"lineNumber":76,"author":{"gitId":"daniellau88"},"content":"                        throw new DukeException(\"The index of the task needs to be an integer.\");"},{"lineNumber":77,"author":{"gitId":"daniellau88"},"content":"                    } catch (IndexOutOfBoundsException e) {"},{"lineNumber":78,"author":{"gitId":"daniellau88"},"content":"                        throw new DukeException(\"The index of the task needs to be present in the list.\");"},{"lineNumber":79,"author":{"gitId":"daniellau88"},"content":"                    }"},{"lineNumber":80,"author":{"gitId":"daniellau88"},"content":"                } else if (checkMatchString(line, \"todo \")) {"},{"lineNumber":81,"author":{"gitId":"daniellau88"},"content":"                    String[] cmdArgs \u003d getCommandArgs(line, \"The description of a todo cannot be empty.\");"},{"lineNumber":82,"author":{"gitId":"daniellau88"},"content":"                    String taskName \u003d cmdArgs[1];"},{"lineNumber":83,"author":{"gitId":"daniellau88"},"content":"                    Task curTask \u003d new Todo(taskName);"},{"lineNumber":84,"author":{"gitId":"daniellau88"},"content":"                    tasks.add(curTask);"},{"lineNumber":85,"author":{"gitId":"daniellau88"},"content":"                    printTaskListStatus(tasks, curTask);"},{"lineNumber":86,"author":{"gitId":"daniellau88"},"content":"                } else if (checkMatchString(line, \"deadline \")) {"},{"lineNumber":87,"author":{"gitId":"daniellau88"},"content":"                    String[] cmdArgs \u003d getCommandArgs(line, \"The description of a todo cannot be empty.\");"},{"lineNumber":88,"author":{"gitId":"daniellau88"},"content":"                    String[] deadlineArgs \u003d cmdArgs[1].split(\" /by \", 2);"},{"lineNumber":89,"author":{"gitId":"daniellau88"},"content":"                    if (deadlineArgs.length \u003c 2) {"},{"lineNumber":90,"author":{"gitId":"daniellau88"},"content":"                        throw new DukeException(\"The deadline needs to have a date specified with \\\"/by\\\".\");"},{"lineNumber":91,"author":{"gitId":"daniellau88"},"content":"                    }"},{"lineNumber":92,"author":{"gitId":"daniellau88"},"content":"                    String taskName \u003d deadlineArgs[0];"},{"lineNumber":93,"author":{"gitId":"daniellau88"},"content":"                    String deadline \u003d deadlineArgs[1];"},{"lineNumber":94,"author":{"gitId":"daniellau88"},"content":"                    Task curTask \u003d new Deadline(taskName, deadline);"},{"lineNumber":95,"author":{"gitId":"daniellau88"},"content":"                    tasks.add(curTask);"},{"lineNumber":96,"author":{"gitId":"daniellau88"},"content":"                    printTaskListStatus(tasks, curTask);"},{"lineNumber":97,"author":{"gitId":"daniellau88"},"content":"                } else if (checkMatchString(line, \"event \")) {"},{"lineNumber":98,"author":{"gitId":"daniellau88"},"content":"                    String[] cmdArgs \u003d getCommandArgs(line, \"The description of an event cannot be empty.\");"},{"lineNumber":99,"author":{"gitId":"daniellau88"},"content":"                    String[] eventArgs \u003d cmdArgs[1].split(\" /at \", 2);"},{"lineNumber":100,"author":{"gitId":"daniellau88"},"content":"                    if (eventArgs.length \u003c 2) {"},{"lineNumber":101,"author":{"gitId":"daniellau88"},"content":"                        throw new DukeException(\"The event needs to have a date specified with \\\"/at\\\".\");"},{"lineNumber":102,"author":{"gitId":"daniellau88"},"content":"                    }"},{"lineNumber":103,"author":{"gitId":"daniellau88"},"content":"                    String taskName \u003d eventArgs[0];"},{"lineNumber":104,"author":{"gitId":"daniellau88"},"content":"                    String date \u003d eventArgs[1];"},{"lineNumber":105,"author":{"gitId":"daniellau88"},"content":"                    Task curTask \u003d new Event(taskName, date);"},{"lineNumber":106,"author":{"gitId":"daniellau88"},"content":"                    tasks.add(curTask);"},{"lineNumber":107,"author":{"gitId":"daniellau88"},"content":"                    printTaskListStatus(tasks, curTask);"},{"lineNumber":108,"author":{"gitId":"daniellau88"},"content":"                } else if (checkMatchString(line, \"delete \")) {"},{"lineNumber":109,"author":{"gitId":"daniellau88"},"content":"                    String[] cmdArgs \u003d getCommandArgs(line, \"I\u0027m sorry, but delete needs the index of a Task.\");"},{"lineNumber":110,"author":{"gitId":"daniellau88"},"content":"                    try {"},{"lineNumber":111,"author":{"gitId":"daniellau88"},"content":"                        int index \u003d Integer.parseInt(cmdArgs[1]);"},{"lineNumber":112,"author":{"gitId":"daniellau88"},"content":"                        Task curTask \u003d tasks.get(index - 1);"},{"lineNumber":113,"author":{"gitId":"daniellau88"},"content":"                        tasks.remove(index - 1);"},{"lineNumber":114,"author":{"gitId":"daniellau88"},"content":"                        printIndentOutput(\"Nice! I\u0027ve removed this task:\");"},{"lineNumber":115,"author":{"gitId":"daniellau88"},"content":"                        printIndentOutput(\"   \" + curTask);"},{"lineNumber":116,"author":{"gitId":"daniellau88"},"content":"                        printIndentOutput(\"Now you have \" + tasks.size() + \" task(s) in the list.\");"},{"lineNumber":117,"author":{"gitId":"daniellau88"},"content":"                    } catch (NumberFormatException e) {"},{"lineNumber":118,"author":{"gitId":"daniellau88"},"content":"                        throw new DukeException(\"The index of the task needs to be an integer.\");"},{"lineNumber":119,"author":{"gitId":"daniellau88"},"content":"                    } catch (IndexOutOfBoundsException e) {"},{"lineNumber":120,"author":{"gitId":"daniellau88"},"content":"                        throw new DukeException(\"The index of the task needs to be present in the list.\");"},{"lineNumber":121,"author":{"gitId":"daniellau88"},"content":"                    }"},{"lineNumber":122,"author":{"gitId":"daniellau88"},"content":"                } else {"},{"lineNumber":123,"author":{"gitId":"daniellau88"},"content":"                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":124,"author":{"gitId":"daniellau88"},"content":"                }"},{"lineNumber":125,"author":{"gitId":"daniellau88"},"content":"            } catch (DukeException e) {"},{"lineNumber":126,"author":{"gitId":"daniellau88"},"content":"                printIndentOutput(\"OOPSIE!! \" + e.getMessage());"},{"lineNumber":127,"author":{"gitId":"daniellau88"},"content":"            }"},{"lineNumber":128,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":129,"author":{"gitId":"daniellau88"},"content":"            printHorizontalLine();"},{"lineNumber":130,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":131,"author":{"gitId":"daniellau88"},"content":"            if (end) break;"},{"lineNumber":132,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":133,"author":{"gitId":"daniellau88"},"content":"            line \u003d stdin.nextLine();"},{"lineNumber":134,"author":{"gitId":"daniellau88"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"daniellau88":126,"-":10}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daniellau88"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":3,"author":{"gitId":"daniellau88"},"content":"        super(errorMessage);"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"}"}],"authorContributionMap":{"daniellau88":5}},{"path":"src/main/java/models/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daniellau88"},"content":"package models;"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":3,"author":{"gitId":"daniellau88"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"    private String deadline;"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"    public Deadline(String taskName, String deadline) {"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"        super(taskName);"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"}"}],"authorContributionMap":{"daniellau88":15}},{"path":"src/main/java/models/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daniellau88"},"content":"package models;"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":3,"author":{"gitId":"daniellau88"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"    private String date;"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"    public Event(String taskName, String date) {"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"        super(taskName);"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"        this.date \u003d date;"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + date + \")\";"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"}"}],"authorContributionMap":{"daniellau88":15}},{"path":"src/main/java/models/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daniellau88"},"content":"package models;"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":3,"author":{"gitId":"daniellau88"},"content":"public abstract class Task {"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"    private final String taskName;"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"    private boolean isDone;"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"    public Task(String taskName) {"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"    public void markAsDone() {"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"        isDone \u003d true;"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"    public String getTaskName() {"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"        return taskName;"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":20,"author":{"gitId":"daniellau88"},"content":"    public boolean getTaskDone() {"},{"lineNumber":21,"author":{"gitId":"daniellau88"},"content":"        return isDone;"},{"lineNumber":22,"author":{"gitId":"daniellau88"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":24,"author":{"gitId":"daniellau88"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"daniellau88"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"daniellau88"},"content":"        StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":27,"author":{"gitId":"daniellau88"},"content":"        builder.append(\u0027[\u0027);"},{"lineNumber":28,"author":{"gitId":"daniellau88"},"content":"        builder.append(isDone ? \u0027X\u0027 : \u0027 \u0027);"},{"lineNumber":29,"author":{"gitId":"daniellau88"},"content":"        builder.append(\"] \");"},{"lineNumber":30,"author":{"gitId":"daniellau88"},"content":"        builder.append(taskName);"},{"lineNumber":31,"author":{"gitId":"daniellau88"},"content":"        return builder.toString();"},{"lineNumber":32,"author":{"gitId":"daniellau88"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"daniellau88"},"content":"}"}],"authorContributionMap":{"daniellau88":33}},{"path":"src/main/java/models/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"daniellau88"},"content":"package models;"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":3,"author":{"gitId":"daniellau88"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"    public Todo(String taskName) {"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"        super(taskName);"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":""},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"}"}],"authorContributionMap":{"daniellau88":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"daniellau88"},"content":"list"},{"lineNumber":2,"author":{"gitId":"daniellau88"},"content":"todo add book"},{"lineNumber":3,"author":{"gitId":"daniellau88"},"content":"todo throw book"},{"lineNumber":4,"author":{"gitId":"daniellau88"},"content":"list"},{"lineNumber":5,"author":{"gitId":"daniellau88"},"content":"todo store book"},{"lineNumber":6,"author":{"gitId":"daniellau88"},"content":"list"},{"lineNumber":7,"author":{"gitId":"daniellau88"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"daniellau88"},"content":"list"},{"lineNumber":9,"author":{"gitId":"daniellau88"},"content":"deadline read book /by Sunday"},{"lineNumber":10,"author":{"gitId":"daniellau88"},"content":"event book signing /at Monday"},{"lineNumber":11,"author":{"gitId":"daniellau88"},"content":"todo buy new book"},{"lineNumber":12,"author":{"gitId":"daniellau88"},"content":"list"},{"lineNumber":13,"author":{"gitId":"daniellau88"},"content":"done 1"},{"lineNumber":14,"author":{"gitId":"daniellau88"},"content":"done 5"},{"lineNumber":15,"author":{"gitId":"daniellau88"},"content":"list"},{"lineNumber":16,"author":{"gitId":"daniellau88"},"content":"delete 3"},{"lineNumber":17,"author":{"gitId":"daniellau88"},"content":"list"},{"lineNumber":18,"author":{"gitId":"daniellau88"},"content":"bye"}],"authorContributionMap":{"daniellau88":18}}]
