[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"    enableAssertions \u003d true"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":45,"simran-bhadani3":15}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"public class Deadline extends Task {"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"    protected LocalDateTime by;"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"    public Deadline(String description, LocalDateTime by) {"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"        this.by \u003d by;"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"     * Formats string to be stored."},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"     * @return Formatted String."},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"    public String getSaveString() {"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"        return \"D\" + \" | \" + (isDone ? \"1\" : \"0\")"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"                + \" | \" + this.description + \" | \" + formatDateForSaving();"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"    private String formatDate() {"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"        return this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"    private String formatDateForSaving() {"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"        return this.by.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.formatDate() + \")\";"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":37}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":" */"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"    private void flip() {"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"        Collections.reverse(tmp);"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"        return new DialogBox(text, img);"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"        db.flip();"},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"        return db;"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":59}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.scene.control.Label;"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.scene.image.Image;"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"    /** List of tasks added by the user */"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"    private static final List\u003cTask\u003e tasks \u003d Storage.getData();"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"    private VBox dialogContainer;"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"    private TextField userInput;"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"    private Button sendButton;"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"    private Scene scene;"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/Liz.jpg\"));"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/Zee.jpg\"));"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"     * Performs the specified action."},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"     * @param command Command input by the user."},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"     * @throws InvalidCommandException If the command cannot be recognised."},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"    public static String runCommand(String command) throws InvalidCommandException {"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"        String reply;"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"        if (command.equals(\"list\")) {"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"            reply \u003d TaskList.printList(tasks);"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"        } else if (Parser.parseCommand(command).equals(\"done\")) {"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"            int index \u003d Parser.parseDoneIndex(command);"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"            reply \u003d TaskList.markDone(index, tasks);"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"        } else if (Parser.parseCommand(command).equals(\"todo\")) {"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"            try {"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"                reply \u003d TaskList.addTodo(command, tasks);"},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"            } catch (InvalidTodoException e) {"},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"                reply \u003d Ui.printEmptyTodoMessage();"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"        } else if (Parser.parseCommand(command).equals(\"deadline\")) {"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"            try {"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"                reply \u003d TaskList.addDeadline(command, tasks);"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"            } catch (InvalidDateTimeFormatException e) {"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":"                reply \u003d Ui.printInvalidDateFormatMessage();"},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"        } else if (Parser.parseCommand(command).equals(\"event\")) {"},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"            try {"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"                reply \u003d TaskList.addEvent(command, tasks);"},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"            } catch (InvalidDateTimeFormatException e) {"},{"lineNumber":60,"author":{"gitId":"simran-bhadani3"},"content":"                reply \u003d Ui.printInvalidDateFormatMessage();"},{"lineNumber":61,"author":{"gitId":"simran-bhadani3"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"simran-bhadani3"},"content":"        } else if (Parser.parseCommand(command).equals(\"delete\")) {"},{"lineNumber":63,"author":{"gitId":"simran-bhadani3"},"content":"            reply \u003d TaskList.deleteTask(command, tasks);"},{"lineNumber":64,"author":{"gitId":"simran-bhadani3"},"content":"        } else if (Parser.parseCommand(command).equals(\"find\")) {"},{"lineNumber":65,"author":{"gitId":"simran-bhadani3"},"content":"            reply \u003d TaskList.findTask(command, tasks);"},{"lineNumber":66,"author":{"gitId":"simran-bhadani3"},"content":"        } else if(command.equals(\"bye\")) {"},{"lineNumber":67,"author":{"gitId":"simran-bhadani3"},"content":"            reply \u003d Ui.printExitMessage();"},{"lineNumber":68,"author":{"gitId":"simran-bhadani3"},"content":"            System.exit(0);"},{"lineNumber":69,"author":{"gitId":"simran-bhadani3"},"content":"        } else {"},{"lineNumber":70,"author":{"gitId":"simran-bhadani3"},"content":"            throw new InvalidCommandException();"},{"lineNumber":71,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"simran-bhadani3"},"content":"        return reply;"},{"lineNumber":73,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":75,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":77,"author":{"gitId":"simran-bhadani3"},"content":"        Ui.printWelcomeMessage();"},{"lineNumber":78,"author":{"gitId":"simran-bhadani3"},"content":"        Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":79,"author":{"gitId":"simran-bhadani3"},"content":"        String command \u003d scanner.nextLine();"},{"lineNumber":80,"author":{"gitId":"simran-bhadani3"},"content":"        while (!command.equals(\"bye\")) {"},{"lineNumber":81,"author":{"gitId":"simran-bhadani3"},"content":"            try {"},{"lineNumber":82,"author":{"gitId":"simran-bhadani3"},"content":"                runCommand(command);"},{"lineNumber":83,"author":{"gitId":"simran-bhadani3"},"content":"            } catch (InvalidCommandException e) {"},{"lineNumber":84,"author":{"gitId":"simran-bhadani3"},"content":"                Ui.printInvalidCommandMessage();"},{"lineNumber":85,"author":{"gitId":"simran-bhadani3"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"simran-bhadani3"},"content":"            command \u003d scanner.nextLine();"},{"lineNumber":87,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"simran-bhadani3"},"content":"        scanner.close();"},{"lineNumber":89,"author":{"gitId":"simran-bhadani3"},"content":"        Ui.printExitMessage();"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":92,"author":{"gitId":"simran-bhadani3"},"content":"    public String getResponse(String input) {"},{"lineNumber":93,"author":{"gitId":"simran-bhadani3"},"content":"        String reply;"},{"lineNumber":94,"author":{"gitId":"simran-bhadani3"},"content":"        try {"},{"lineNumber":95,"author":{"gitId":"simran-bhadani3"},"content":"            reply \u003d runCommand(input);"},{"lineNumber":96,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (InvalidCommandException e) {"},{"lineNumber":97,"author":{"gitId":"simran-bhadani3"},"content":"            reply \u003d Ui.printInvalidCommandMessage();"},{"lineNumber":98,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"simran-bhadani3"},"content":"        return reply;"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":102,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":103,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":5,"simran-bhadani3":98}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"public class Event extends Task {"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"    protected LocalDateTime at;"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"    public Event(String description, LocalDateTime at) {"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"        this.at \u003d at;"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"    private String formatDate() {"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"        return this.at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"    private String formatDateForSaving() {"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"        return this.at.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"     * Formats string to be stored."},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"     * @return Formatted String."},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"    public String getSaveString() {"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"        return \"E\" + \" | \" + (isDone ? \"1\" : \"0\") + \" | \""},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"                + this.description + \" | \" + formatDateForSaving();"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"        return \"[E]\" + super.toString()"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"                + \" (at: \" + this.formatDate() + \")\";"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":38}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"public class InvalidCommandException extends Exception {"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":3}},{"path":"src/main/java/InvalidDateTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"public class InvalidDateTimeFormatException extends Exception {"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":3}},{"path":"src/main/java/InvalidTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"public class InvalidTodoException extends Exception {"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":3}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":" */"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":" */"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"    public void start(Stage stage) {"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"            stage.show();"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (IOException e) {"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"            e.printStackTrace();"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":29}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.scene.control.Button;"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":" */"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"    @FXML"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"    @FXML"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"    private VBox dialogContainer;"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"    private TextField userInput;"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"    private Button sendButton;"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"    private Duke duke;"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Liz.jpg\"));"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Zee.jpg\"));"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"    public void initialize() {"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"        duke \u003d d;"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"    @FXML"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"    private void handleUserInput() {"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"        );"},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"        userInput.clear();"},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":49}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"public class Parser {"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"     * Parses the command input by the user and returns the action to be carried out."},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"     * @param command Command input by the user."},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"     * @return Action to be carried out."},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"    public static String parseCommand(String command) {"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"        return command.split(\" \")[0];"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"     * Returns the index of the task to be marked as done."},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"     * @param command Command input by the user."},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"     * @return Index of task to be marked as done."},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"    public static int parseDoneIndex(String command) {"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"        return Integer.parseInt(command.split(\" \")[1]) - 1;"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"    private static LocalDateTime DateTimeParser(String input) {"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"        return LocalDateTime.parse(input,"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"     * Parses the stored string and finds the type of task."},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"     * @param task String retrieved from Storage."},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"     * @return Type of task."},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"    public static String parseTypeOfTask(String task) {"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"        String[] split \u003d task.split(\"\\\\|\");"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"        String typeOfTask \u003d split[0].trim();"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"        return typeOfTask;"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"     * Parses the stored string and finds the completion status."},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"     * @param task String retrieved from Storage."},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"     * @return Completion status of the task."},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"    public static String parseCompletionStatus(String task) {"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"        String[] split \u003d task.split(\"\\\\|\");"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"        String isDone \u003d split[1].trim();"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"        return isDone;"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"     * Parses the stored string and returns the description of the task."},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"     * @param task String retrieved from Storage."},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"     * @return Description of the task."},{"lineNumber":60,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"simran-bhadani3"},"content":"    public static String parseName(String task) {"},{"lineNumber":62,"author":{"gitId":"simran-bhadani3"},"content":"        String[] split \u003d task.split(\"\\\\|\");"},{"lineNumber":63,"author":{"gitId":"simran-bhadani3"},"content":"        String name \u003d split[2].trim();"},{"lineNumber":64,"author":{"gitId":"simran-bhadani3"},"content":"        return name;"},{"lineNumber":65,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":67,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"simran-bhadani3"},"content":"     * Parses the stored string and returns date-time data."},{"lineNumber":69,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"simran-bhadani3"},"content":"     * @param task String retrieved from Storage."},{"lineNumber":71,"author":{"gitId":"simran-bhadani3"},"content":"     * @return LocalDateTime object containing the due date/date of event."},{"lineNumber":72,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"simran-bhadani3"},"content":"    public static LocalDateTime parseTime(String task) {"},{"lineNumber":74,"author":{"gitId":"simran-bhadani3"},"content":"        String[] split \u003d task.split(\"\\\\|\");"},{"lineNumber":75,"author":{"gitId":"simran-bhadani3"},"content":"        String typeOfTask \u003d split[0].trim();"},{"lineNumber":76,"author":{"gitId":"simran-bhadani3"},"content":"        LocalDateTime time \u003d typeOfTask.equals(\"T\")"},{"lineNumber":77,"author":{"gitId":"simran-bhadani3"},"content":"                             ? Parser.DateTimeParser(\"01-01-2001 0101\")"},{"lineNumber":78,"author":{"gitId":"simran-bhadani3"},"content":"                             : Parser.DateTimeParser(split[3].trim());"},{"lineNumber":79,"author":{"gitId":"simran-bhadani3"},"content":"        return time;"},{"lineNumber":80,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":82,"author":{"gitId":"simran-bhadani3"},"content":"}"},{"lineNumber":83,"author":{"gitId":"simran-bhadani3"},"content":""}],"authorContributionMap":{"simran-bhadani3":83}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"import java.io.BufferedWriter;"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import java.nio.charset.StandardCharsets;"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"import java.nio.file.Files;"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"import java.nio.file.Paths;"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"    public static ArrayList\u003cTask\u003e data;"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"    private static final Path fileLocation \u003d Paths.get(\"./data\", \"duke.txt\");"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"    private static final Path directoryLocation \u003d Paths.get(\"./data\");"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"    private static void createFile() {"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"            Files.createFile(fileLocation);"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (Exception e) {"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"            System.out.println(e);"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"    private static boolean checkForFile() {"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"        boolean fileExists \u003d Files.exists(fileLocation);"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"        return fileExists;"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"    private static boolean checkForDirectory() {"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"        boolean directoryExists \u003d Files.exists(directoryLocation);"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"        return directoryExists;"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"    private static void createDirectory() {"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"            Files.createDirectory(directoryLocation);"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"            System.out.println(\"directory created\");"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (Exception e) {"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"            System.out.println(e);"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"     * Reads the data file and creates tasks."},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"     * @return ArrayList consisting of all saved tasks."},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"     * @throws UnableToLoadDataException If unable to load data from the file."},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"    public static ArrayList\u003cTask\u003e getDataFromFile() throws UnableToLoadDataException {"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":"        try {"},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"            Files.lines(fileLocation)"},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"                    .map(task -\u003e task.trim())"},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"                    .filter(task -\u003e !task.isEmpty())"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"                    .forEach(task -\u003e {"},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"                        String typeOfTask \u003d Parser.parseTypeOfTask(task);"},{"lineNumber":60,"author":{"gitId":"simran-bhadani3"},"content":"                        String isDone \u003d Parser.parseCompletionStatus(task);"},{"lineNumber":61,"author":{"gitId":"simran-bhadani3"},"content":"                        String name \u003d Parser.parseName(task);"},{"lineNumber":62,"author":{"gitId":"simran-bhadani3"},"content":"                        LocalDateTime time \u003d Parser.parseTime(task);"},{"lineNumber":63,"author":{"gitId":"simran-bhadani3"},"content":"                        if (typeOfTask.equals(\"T\")) {"},{"lineNumber":64,"author":{"gitId":"simran-bhadani3"},"content":"                            tasks.add(new Todo(name));"},{"lineNumber":65,"author":{"gitId":"simran-bhadani3"},"content":"                            if (isDone.equals(\"1\")) {"},{"lineNumber":66,"author":{"gitId":"simran-bhadani3"},"content":"                                tasks.get(tasks.size() - 1).isDone \u003d true;"},{"lineNumber":67,"author":{"gitId":"simran-bhadani3"},"content":"                            }"},{"lineNumber":68,"author":{"gitId":"simran-bhadani3"},"content":"                        }"},{"lineNumber":69,"author":{"gitId":"simran-bhadani3"},"content":"                        if (typeOfTask.equals(\"D\")) {"},{"lineNumber":70,"author":{"gitId":"simran-bhadani3"},"content":"                            tasks.add(new Deadline(name, time));"},{"lineNumber":71,"author":{"gitId":"simran-bhadani3"},"content":"                            if (isDone.equals(\"1\")) {"},{"lineNumber":72,"author":{"gitId":"simran-bhadani3"},"content":"                                tasks.get(tasks.size() - 1).isDone \u003d true;"},{"lineNumber":73,"author":{"gitId":"simran-bhadani3"},"content":"                            }"},{"lineNumber":74,"author":{"gitId":"simran-bhadani3"},"content":"                        }"},{"lineNumber":75,"author":{"gitId":"simran-bhadani3"},"content":"                        if (typeOfTask.equals(\"E\")) {"},{"lineNumber":76,"author":{"gitId":"simran-bhadani3"},"content":"                            tasks.add(new Event(name, time));"},{"lineNumber":77,"author":{"gitId":"simran-bhadani3"},"content":"                            if (isDone.equals(\"1\")) {"},{"lineNumber":78,"author":{"gitId":"simran-bhadani3"},"content":"                                tasks.get(tasks.size() - 1).isDone \u003d true;"},{"lineNumber":79,"author":{"gitId":"simran-bhadani3"},"content":"                            }"},{"lineNumber":80,"author":{"gitId":"simran-bhadani3"},"content":"                        }"},{"lineNumber":81,"author":{"gitId":"simran-bhadani3"},"content":"                    });"},{"lineNumber":82,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (IOException e) {"},{"lineNumber":83,"author":{"gitId":"simran-bhadani3"},"content":"            throw new UnableToLoadDataException();"},{"lineNumber":84,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"simran-bhadani3"},"content":"        return tasks;"},{"lineNumber":86,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":88,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"simran-bhadani3"},"content":"     * Saves tasks input by the user on the data file."},{"lineNumber":90,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"simran-bhadani3"},"content":"     * @param tasks Tasks to be saved on the file."},{"lineNumber":92,"author":{"gitId":"simran-bhadani3"},"content":"     * @throws UnableToSaveDataException If unable to save tasks to the file."},{"lineNumber":93,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"simran-bhadani3"},"content":"     public static void saveDataToFile(List\u003cTask\u003e tasks) throws UnableToSaveDataException {"},{"lineNumber":95,"author":{"gitId":"simran-bhadani3"},"content":"        try {"},{"lineNumber":96,"author":{"gitId":"simran-bhadani3"},"content":"            BufferedWriter writer \u003d Files.newBufferedWriter(fileLocation, StandardCharsets.UTF_8);"},{"lineNumber":97,"author":{"gitId":"simran-bhadani3"},"content":"            for (Task task : tasks) {"},{"lineNumber":98,"author":{"gitId":"simran-bhadani3"},"content":"                writer.write(task.getSaveString());"},{"lineNumber":99,"author":{"gitId":"simran-bhadani3"},"content":"                writer.write(\"\\n\");"},{"lineNumber":100,"author":{"gitId":"simran-bhadani3"},"content":"                writer.flush();"},{"lineNumber":101,"author":{"gitId":"simran-bhadani3"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"simran-bhadani3"},"content":"            writer.close();"},{"lineNumber":103,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (IOException e) {"},{"lineNumber":104,"author":{"gitId":"simran-bhadani3"},"content":"            throw new UnableToSaveDataException();"},{"lineNumber":105,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":108,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"simran-bhadani3"},"content":"     * Returns an ArrayList containing all the tasks retrieved from storage."},{"lineNumber":110,"author":{"gitId":"simran-bhadani3"},"content":"     * Creates data file if it doesn\u0027t exist."},{"lineNumber":111,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":112,"author":{"gitId":"simran-bhadani3"},"content":"     * @return ArrayList of loaded tasks."},{"lineNumber":113,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"simran-bhadani3"},"content":"    public static ArrayList\u003cTask\u003e getData() {"},{"lineNumber":115,"author":{"gitId":"simran-bhadani3"},"content":"        boolean directoryExists \u003d checkForDirectory();"},{"lineNumber":116,"author":{"gitId":"simran-bhadani3"},"content":"        if (!directoryExists) {"},{"lineNumber":117,"author":{"gitId":"simran-bhadani3"},"content":"            createDirectory();"},{"lineNumber":118,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"simran-bhadani3"},"content":"        boolean fileExists \u003d checkForFile();"},{"lineNumber":120,"author":{"gitId":"simran-bhadani3"},"content":"        if (!fileExists) {"},{"lineNumber":121,"author":{"gitId":"simran-bhadani3"},"content":"            createFile();"},{"lineNumber":122,"author":{"gitId":"simran-bhadani3"},"content":"            data \u003d new ArrayList\u003c\u003e();"},{"lineNumber":123,"author":{"gitId":"simran-bhadani3"},"content":"        } else {"},{"lineNumber":124,"author":{"gitId":"simran-bhadani3"},"content":"            try {"},{"lineNumber":125,"author":{"gitId":"simran-bhadani3"},"content":"                data \u003d getDataFromFile();"},{"lineNumber":126,"author":{"gitId":"simran-bhadani3"},"content":"            } catch (UnableToLoadDataException er) {"},{"lineNumber":127,"author":{"gitId":"simran-bhadani3"},"content":"                Ui.printUnableToLoadDataMessage();"},{"lineNumber":128,"author":{"gitId":"simran-bhadani3"},"content":"            }"},{"lineNumber":129,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"simran-bhadani3"},"content":"        return data;"},{"lineNumber":131,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":132}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"     * Returns completion status icon."},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"     * @return Completion status icon."},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"    public String getStatusIcon() {"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"        return (isDone ? \"X\" : \" \");"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"     * Returns description of the task."},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"     * @return Description of the task."},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"    public String getDescription() {"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"        return this.description;"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"     *Marks a task as completed."},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"    public void markAsDone() {"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"        this.isDone \u003d true;"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"     * Formats string to be stored."},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"     * @return Formatted String."},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"    public String getSaveString() {"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"        return \"\";"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"    public String toString() {"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":48}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"public class TaskList {"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"     * Marks the task at a particular index as done."},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"     * @param index Index of the task to be removed."},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"     * @param tasks List of all tasks."},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"    public static String markDone(int index, List\u003cTask\u003e tasks) {"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"        String reply \u003d \"\\n\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\";"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"        tasks.get(index).markAsDone();"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\nGood job, I have marked this task as done!\";"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\n\" + tasks.get(index).toString();"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\";"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"            Storage.saveDataToFile(tasks);"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (UnableToSaveDataException e) {"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"            reply +\u003d \"\\nSorry, unable to save data to the hard disk.\";"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"        return reply;"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"     * Adds a todo task to the list."},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"     * @param command Command input by the user"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"     *                which contains the name of"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"     *                the task."},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"     * @param tasks List of all tasks."},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"     * @throws InvalidTodoException If Todo does not"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"     *                              have a description."},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"    public static String addTodo(String command, List\u003cTask\u003e tasks) throws InvalidTodoException {"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"        String reply \u003d \"\";"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"        if (command.length() \u003c 6) {"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"            throw new InvalidTodoException();"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"        tasks.add(new Todo(command.substring(5)));"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"        int count \u003d tasks.size();"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\n\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\";"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\nGot it. I\u0027ve added this task: \";"},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\n\" + tasks.get(count - 1).toString();"},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\n\" + \"Now you have \" + count"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"                + (count \u003d\u003d 1 ? \" task\" : \" tasks\")"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"                + \" in the list.\";"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\n\" + \"~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\";"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"        try {"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"            Storage.saveDataToFile(tasks);"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (UnableToSaveDataException e) {"},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"            reply +\u003d \"\\n\" + \"Sorry, unable to save data to the hard disk.\";"},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"        return reply;"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":60,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"simran-bhadani3"},"content":"     * Adds a deadline to the list."},{"lineNumber":62,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"simran-bhadani3"},"content":"     * @param command Command input by the user"},{"lineNumber":64,"author":{"gitId":"simran-bhadani3"},"content":"     *                which contains the name of"},{"lineNumber":65,"author":{"gitId":"simran-bhadani3"},"content":"     *                the task and the deadline"},{"lineNumber":66,"author":{"gitId":"simran-bhadani3"},"content":"     *                to submit it by."},{"lineNumber":67,"author":{"gitId":"simran-bhadani3"},"content":"     * @param tasks List of all tasks."},{"lineNumber":68,"author":{"gitId":"simran-bhadani3"},"content":"     * @throws InvalidDateTimeFormatException If the format of the date and time entered is incorrect."},{"lineNumber":69,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":71,"author":{"gitId":"simran-bhadani3"},"content":"    public static String addDeadline(String command, List\u003cTask\u003e tasks) throws InvalidDateTimeFormatException {"},{"lineNumber":72,"author":{"gitId":"simran-bhadani3"},"content":"        String reply \u003d \"\";"},{"lineNumber":73,"author":{"gitId":"simran-bhadani3"},"content":"        try {"},{"lineNumber":74,"author":{"gitId":"simran-bhadani3"},"content":"            tasks.add(new Deadline(command.substring(9).split(\"/\")[0],"},{"lineNumber":75,"author":{"gitId":"simran-bhadani3"},"content":"                    LocalDateTime.parse(command.substring(9)"},{"lineNumber":76,"author":{"gitId":"simran-bhadani3"},"content":"                            .split(\"/\")[1].substring(3), DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));"},{"lineNumber":77,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":78,"author":{"gitId":"simran-bhadani3"},"content":"            throw new InvalidDateTimeFormatException();"},{"lineNumber":79,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"simran-bhadani3"},"content":"        int count \u003d tasks.size();"},{"lineNumber":81,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\n\" + \"\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\";"},{"lineNumber":82,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\n\" + \"Got it. I\u0027ve added this task: \";"},{"lineNumber":83,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\n\" + tasks.get(count - 1).toString();"},{"lineNumber":84,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\n\" + \"Now you have \" + count"},{"lineNumber":85,"author":{"gitId":"simran-bhadani3"},"content":"                + (count \u003d\u003d 1 ? \" task\" : \" tasks\")"},{"lineNumber":86,"author":{"gitId":"simran-bhadani3"},"content":"                + \" in the list.\";"},{"lineNumber":87,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\n\" + \"~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\";"},{"lineNumber":88,"author":{"gitId":"simran-bhadani3"},"content":"        try {"},{"lineNumber":89,"author":{"gitId":"simran-bhadani3"},"content":"            Storage.saveDataToFile(tasks);"},{"lineNumber":90,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (UnableToSaveDataException e) {"},{"lineNumber":91,"author":{"gitId":"simran-bhadani3"},"content":"            reply +\u003d \"\\n\" + \"Sorry, unable to save data to the hard disk.\";"},{"lineNumber":92,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"simran-bhadani3"},"content":"        return reply;"},{"lineNumber":94,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":96,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"simran-bhadani3"},"content":"     * Adds a deadline to the list."},{"lineNumber":98,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":99,"author":{"gitId":"simran-bhadani3"},"content":"     * @param command Command input by the user"},{"lineNumber":100,"author":{"gitId":"simran-bhadani3"},"content":"     *                which contains the name of"},{"lineNumber":101,"author":{"gitId":"simran-bhadani3"},"content":"     *                the event and the date and time."},{"lineNumber":102,"author":{"gitId":"simran-bhadani3"},"content":"     * @param tasks List of all tasks."},{"lineNumber":103,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":105,"author":{"gitId":"simran-bhadani3"},"content":"    public static String addEvent(String command, List\u003cTask\u003e tasks) throws InvalidDateTimeFormatException {"},{"lineNumber":106,"author":{"gitId":"simran-bhadani3"},"content":"        String reply \u003d \"\";"},{"lineNumber":107,"author":{"gitId":"simran-bhadani3"},"content":"        try {"},{"lineNumber":108,"author":{"gitId":"simran-bhadani3"},"content":"            tasks.add(new Event(command.substring(6).split(\"/\")[0],"},{"lineNumber":109,"author":{"gitId":"simran-bhadani3"},"content":"                    LocalDateTime.parse(command.substring(6).split(\"/\")[1].substring(3),"},{"lineNumber":110,"author":{"gitId":"simran-bhadani3"},"content":"                            DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));"},{"lineNumber":111,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":112,"author":{"gitId":"simran-bhadani3"},"content":"            throw new InvalidDateTimeFormatException();"},{"lineNumber":113,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"simran-bhadani3"},"content":"        int count \u003d tasks.size();"},{"lineNumber":115,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\n\" + \"\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\";"},{"lineNumber":116,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\n\" + \"Got it. I\u0027ve added this task: \";"},{"lineNumber":117,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\n\" + tasks.get(count - 1).toString();"},{"lineNumber":118,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\n\" + \"Now you have \" + count"},{"lineNumber":119,"author":{"gitId":"simran-bhadani3"},"content":"                + (count \u003d\u003d 1 ? \" task\" : \" tasks\")"},{"lineNumber":120,"author":{"gitId":"simran-bhadani3"},"content":"                + \" in the list.\";"},{"lineNumber":121,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\n\" + \"~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\";"},{"lineNumber":122,"author":{"gitId":"simran-bhadani3"},"content":"        try {"},{"lineNumber":123,"author":{"gitId":"simran-bhadani3"},"content":"            Storage.saveDataToFile(tasks);"},{"lineNumber":124,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (UnableToSaveDataException e) {"},{"lineNumber":125,"author":{"gitId":"simran-bhadani3"},"content":"            System.out.println(\"Sorry, unable to save data to the hard disk.\");"},{"lineNumber":126,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"simran-bhadani3"},"content":"        return reply;"},{"lineNumber":128,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":130,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":131,"author":{"gitId":"simran-bhadani3"},"content":"     * Deletes the specified task."},{"lineNumber":132,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":133,"author":{"gitId":"simran-bhadani3"},"content":"     * @param command Command input by the user"},{"lineNumber":134,"author":{"gitId":"simran-bhadani3"},"content":"     *                which contains the index of"},{"lineNumber":135,"author":{"gitId":"simran-bhadani3"},"content":"     *                the task to be deleted."},{"lineNumber":136,"author":{"gitId":"simran-bhadani3"},"content":"     * @param tasks List of all tasks."},{"lineNumber":137,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":138,"author":{"gitId":"simran-bhadani3"},"content":"    public static String deleteTask(String command, List\u003cTask\u003e tasks) {"},{"lineNumber":139,"author":{"gitId":"simran-bhadani3"},"content":"        String reply \u003d \"\";"},{"lineNumber":140,"author":{"gitId":"simran-bhadani3"},"content":"        int deleteIndex \u003d Integer.parseInt(command.split(\" \")[1]) - 1;"},{"lineNumber":141,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\n\" + \"\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\";"},{"lineNumber":142,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\n\" + \"I\u0027ve removed the task:\";"},{"lineNumber":143,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\n\" + tasks.get(deleteIndex);"},{"lineNumber":144,"author":{"gitId":"simran-bhadani3"},"content":"        tasks.remove(deleteIndex);"},{"lineNumber":145,"author":{"gitId":"simran-bhadani3"},"content":"        int count \u003d tasks.size();"},{"lineNumber":146,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\n\" + \"Now you have \" + count"},{"lineNumber":147,"author":{"gitId":"simran-bhadani3"},"content":"                + (count \u003d\u003d 1 ? \" task\" : \" tasks\")"},{"lineNumber":148,"author":{"gitId":"simran-bhadani3"},"content":"                + \" in the list.\";"},{"lineNumber":149,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\n\" + \"~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\";"},{"lineNumber":150,"author":{"gitId":"simran-bhadani3"},"content":"        try {"},{"lineNumber":151,"author":{"gitId":"simran-bhadani3"},"content":"            Storage.saveDataToFile(tasks);"},{"lineNumber":152,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (UnableToSaveDataException e) {"},{"lineNumber":153,"author":{"gitId":"simran-bhadani3"},"content":"            Ui.printUnableToSaveDataMessage();"},{"lineNumber":154,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":155,"author":{"gitId":"simran-bhadani3"},"content":"        return reply;"},{"lineNumber":156,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":158,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":159,"author":{"gitId":"simran-bhadani3"},"content":"     * Lists all the tasks that have been input by the user."},{"lineNumber":160,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":161,"author":{"gitId":"simran-bhadani3"},"content":"     * @param tasks List of all tasks."},{"lineNumber":162,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":163,"author":{"gitId":"simran-bhadani3"},"content":"    public static String printList(List\u003cTask\u003e tasks) {"},{"lineNumber":164,"author":{"gitId":"simran-bhadani3"},"content":"        String reply \u003d \"\";"},{"lineNumber":165,"author":{"gitId":"simran-bhadani3"},"content":"        int listCount \u003d 1;"},{"lineNumber":166,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\n\" + \"\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\";"},{"lineNumber":167,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\n\" + \"Here are the tasks in your list:\";"},{"lineNumber":168,"author":{"gitId":"simran-bhadani3"},"content":"        for (Task task : tasks) {"},{"lineNumber":169,"author":{"gitId":"simran-bhadani3"},"content":"            reply +\u003d \"\\n\" + \"  \" + listCount + \".\" + task.toString();"},{"lineNumber":170,"author":{"gitId":"simran-bhadani3"},"content":"            listCount++;"},{"lineNumber":171,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\n\" + \"~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\";"},{"lineNumber":173,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(reply);"},{"lineNumber":174,"author":{"gitId":"simran-bhadani3"},"content":"        return reply;"},{"lineNumber":175,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":177,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":178,"author":{"gitId":"simran-bhadani3"},"content":"     * Searches for task specified by user."},{"lineNumber":179,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":180,"author":{"gitId":"simran-bhadani3"},"content":"     * @param command Command input by user."},{"lineNumber":181,"author":{"gitId":"simran-bhadani3"},"content":"     * @param tasks List of tasks."},{"lineNumber":182,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":183,"author":{"gitId":"simran-bhadani3"},"content":"    public static String findTask(String command, List\u003cTask\u003e tasks) {"},{"lineNumber":184,"author":{"gitId":"simran-bhadani3"},"content":"        String reply \u003d \"\";"},{"lineNumber":185,"author":{"gitId":"simran-bhadani3"},"content":"        int listCount \u003d 1;"},{"lineNumber":186,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\n\" + \"\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\";"},{"lineNumber":187,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\n\" + \"Here are the matching tasks in your list:\";"},{"lineNumber":188,"author":{"gitId":"simran-bhadani3"},"content":"        for (Task task : tasks) {"},{"lineNumber":189,"author":{"gitId":"simran-bhadani3"},"content":"            if (task.toString().contains(command.split(\" \")[1])) {"},{"lineNumber":190,"author":{"gitId":"simran-bhadani3"},"content":"                reply +\u003d \"\\n\" + \"  \" + listCount + \".\" + task.toString();"},{"lineNumber":191,"author":{"gitId":"simran-bhadani3"},"content":"                listCount++;"},{"lineNumber":192,"author":{"gitId":"simran-bhadani3"},"content":"            }"},{"lineNumber":193,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":194,"author":{"gitId":"simran-bhadani3"},"content":"        reply +\u003d \"\\n\" + \"~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\";"},{"lineNumber":195,"author":{"gitId":"simran-bhadani3"},"content":"        return reply;"},{"lineNumber":196,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":198,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":198}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"    public Todo(String description) {"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"        super(description);"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"     * Formats string to be stored."},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"     * @return Formatted String."},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"    public String getSaveString() {"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"        return \"T\" + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + this.description;"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":21}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"public class Ui {"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"     * Prints welcome message when the user runs Duke."},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"    public static void printWelcomeMessage() {"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"        String logo \u003d"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"                \"     ______\\n\" +"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"                        \"    |___  /\\n\" +"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"                        \"       / / \\n\" +"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"                        \"      / /  \\n\" +"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"                        \"     / /__ \\n\" +"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"                        \"    /_____|\\n\";"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"\\n~ Hello! I am Zee :) ~\\n\""},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"                + logo + \"\\n\""},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"                + \"~ What can I do for you today? ~\\n\");"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"     * Prints exit message when the user wants to terminate Duke."},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"    public static String printExitMessage() {"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"        return \"\\n~ Bye! Come back soon! UwU ~\\n\";"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"     * Prints error message when the command is not recognised."},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"    public static String printInvalidCommandMessage() {"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"        return \"\\nI\u0027m sorry, but I don\u0027t know what that means :-(\\n\";"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"     * Prints error message when the description of the todo task is empty."},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"    public static String printEmptyTodoMessage() {"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"        return \"\\nOOPS!!! The description of a todo cannot be empty.\\n\";"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"     * Prints error message when the data can\u0027t be saved."},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"    public static String printUnableToSaveDataMessage() {"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"        return \"Sorry, unable to save data to the hard disk.\";"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"     * Prints error message when the input format for date and time is invalid."},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"    public static String printInvalidDateFormatMessage() {"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"        return \"\\nDate time format is invalid. \" +"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"                \"Please enter the date and time in the following format: DD-MM-YYYY HHMM\\n\";"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"     * Prints error message when the program is unable to load data from the hard disk."},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"    public static String printUnableToLoadDataMessage() {"},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"        return \"\\nI\u0027m sorry, I am not able to load data.\\n\";"},{"lineNumber":60,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":62,"author":{"gitId":"simran-bhadani3"},"content":"}"},{"lineNumber":63,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":64,"author":{"gitId":"simran-bhadani3"},"content":""}],"authorContributionMap":{"simran-bhadani3":64}},{"path":"src/main/java/UnableToLoadDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"public class UnableToLoadDataException extends Exception {"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":3}},{"path":"src/main/java/UnableToSaveDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"public class UnableToSaveDataException extends Exception {"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":3}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"simran-bhadani3":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"simran-bhadani3":19}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"import java.time.Month;"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"public class DeadlineTest {"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"    public void DeadlineTestOne() {"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(\"[D][ ] finish project (by: Apr 15 2021 16:00)\",new Deadline(\"finish project\","},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"                LocalDateTime.of(2021, Month.APRIL, 15, 16, 00)).toString());"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"    public void TodoTestFour() {"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"        Task deadline \u003d new Deadline(\"finish project\","},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"                LocalDateTime.of(2021, Month.APRIL, 15, 16, 00));"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"        deadline.markAsDone();"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(\"[D][X] finish project (by: Apr 15 2021 16:00)\","},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"                deadline.toString());"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":26}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"public class TodoTest {"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"    @Test"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"    public void TodoTestOne() {"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(\"T | 0 | finish project\",new Todo(\"finish project\").getSaveString());"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"    public void TodoTestFour() {"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"        Task todo \u003d new Todo(\"finish project\");"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"        todo.markAsDone();"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(\"T | 1 | finish project\",todo.getSaveString());"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"    public void TodoTestTwo() {"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(\"[T][ ] finish project\",new Todo(\"finish project\").toString());"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"    public void TodoTestThree() {"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"        Task todo \u003d new Todo(\"finish project\");"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"        todo.markAsDone();"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(\"[T][X] finish project\", todo.toString());"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":29}},{"path":"text-ui-test/EXPECTED.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"~ Hello! I am Zee :) ~"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"     ______"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"    |___  /"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"       / / "},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"      / /  "},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"     / /__ "},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"    /_____|"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"~ What can I do for you today? ~"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"[T][ ] draft resume"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"Now you have 1 task in the list."},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"[E][ ] internship briefing  (at: 2-3pm on Tuesday)"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"Now you have 2 tasks in the list."},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"[D][ ] submit assignment  (by: Thursday)"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"Now you have 3 tasks in the list."},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"Here are the tasks in your list:"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"  1.[T][ ] draft resume"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"  2.[E][ ] internship briefing  (at: 2-3pm on Tuesday)"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"  3.[D][ ] submit assignment  (by: Thursday)"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"Good job, I have marked this task as done!"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"[T][X] draft resume"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"Here are the tasks in your list:"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"  1.[T][X] draft resume"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"  2.[E][ ] internship briefing  (at: 2-3pm on Tuesday)"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"  3.[D][ ] submit assignment  (by: Thursday)"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"Good job, I have marked this task as done!"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"[D][X] submit assignment  (by: Thursday)"},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":60,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":61,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":62,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":63,"author":{"gitId":"simran-bhadani3"},"content":"Here are the tasks in your list:"},{"lineNumber":64,"author":{"gitId":"simran-bhadani3"},"content":"  1.[T][X] draft resume"},{"lineNumber":65,"author":{"gitId":"simran-bhadani3"},"content":"  2.[E][ ] internship briefing  (at: 2-3pm on Tuesday)"},{"lineNumber":66,"author":{"gitId":"simran-bhadani3"},"content":"  3.[D][X] submit assignment  (by: Thursday)"},{"lineNumber":67,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":68,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":69,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":70,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":71,"author":{"gitId":"simran-bhadani3"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":72,"author":{"gitId":"simran-bhadani3"},"content":"[D][ ] complete homework  (by: friday morning)"},{"lineNumber":73,"author":{"gitId":"simran-bhadani3"},"content":"Now you have 4 tasks in the list."},{"lineNumber":74,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":75,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":76,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":77,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":78,"author":{"gitId":"simran-bhadani3"},"content":"Here are the tasks in your list:"},{"lineNumber":79,"author":{"gitId":"simran-bhadani3"},"content":"  1.[T][X] draft resume"},{"lineNumber":80,"author":{"gitId":"simran-bhadani3"},"content":"  2.[E][ ] internship briefing  (at: 2-3pm on Tuesday)"},{"lineNumber":81,"author":{"gitId":"simran-bhadani3"},"content":"  3.[D][X] submit assignment  (by: Thursday)"},{"lineNumber":82,"author":{"gitId":"simran-bhadani3"},"content":"  4.[D][ ] complete homework  (by: friday morning)"},{"lineNumber":83,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":84,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":85,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":86,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":87,"author":{"gitId":"simran-bhadani3"},"content":"Good job, I have marked this task as done!"},{"lineNumber":88,"author":{"gitId":"simran-bhadani3"},"content":"[D][X] complete homework  (by: friday morning)"},{"lineNumber":89,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":90,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":91,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":92,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":93,"author":{"gitId":"simran-bhadani3"},"content":"Here are the tasks in your list:"},{"lineNumber":94,"author":{"gitId":"simran-bhadani3"},"content":"  1.[T][X] draft resume"},{"lineNumber":95,"author":{"gitId":"simran-bhadani3"},"content":"  2.[E][ ] internship briefing  (at: 2-3pm on Tuesday)"},{"lineNumber":96,"author":{"gitId":"simran-bhadani3"},"content":"  3.[D][X] submit assignment  (by: Thursday)"},{"lineNumber":97,"author":{"gitId":"simran-bhadani3"},"content":"  4.[D][X] complete homework  (by: friday morning)"},{"lineNumber":98,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":99,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":100,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":101,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":102,"author":{"gitId":"simran-bhadani3"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":103,"author":{"gitId":"simran-bhadani3"},"content":"[T][ ] clean room"},{"lineNumber":104,"author":{"gitId":"simran-bhadani3"},"content":"Now you have 5 tasks in the list."},{"lineNumber":105,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":106,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":107,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":108,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":109,"author":{"gitId":"simran-bhadani3"},"content":"I\u0027ve removed the task:"},{"lineNumber":110,"author":{"gitId":"simran-bhadani3"},"content":"[T][ ] clean room"},{"lineNumber":111,"author":{"gitId":"simran-bhadani3"},"content":"Now you have 4 tasks in the list."},{"lineNumber":112,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":113,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":114,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":115,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":116,"author":{"gitId":"simran-bhadani3"},"content":"Here are the tasks in your list:"},{"lineNumber":117,"author":{"gitId":"simran-bhadani3"},"content":"  1.[T][X] draft resume"},{"lineNumber":118,"author":{"gitId":"simran-bhadani3"},"content":"  2.[E][ ] internship briefing  (at: 2-3pm on Tuesday)"},{"lineNumber":119,"author":{"gitId":"simran-bhadani3"},"content":"  3.[D][X] submit assignment  (by: Thursday)"},{"lineNumber":120,"author":{"gitId":"simran-bhadani3"},"content":"  4.[D][X] complete homework  (by: friday morning)"},{"lineNumber":121,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":122,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":123,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":124,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":125,"author":{"gitId":"simran-bhadani3"},"content":"I\u0027ve removed the task:"},{"lineNumber":126,"author":{"gitId":"simran-bhadani3"},"content":"[D][X] complete homework  (by: friday morning)"},{"lineNumber":127,"author":{"gitId":"simran-bhadani3"},"content":"Now you have 3 tasks in the list."},{"lineNumber":128,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":129,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":130,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":131,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":132,"author":{"gitId":"simran-bhadani3"},"content":"Here are the tasks in your list:"},{"lineNumber":133,"author":{"gitId":"simran-bhadani3"},"content":"  1.[T][X] draft resume"},{"lineNumber":134,"author":{"gitId":"simran-bhadani3"},"content":"  2.[E][ ] internship briefing  (at: 2-3pm on Tuesday)"},{"lineNumber":135,"author":{"gitId":"simran-bhadani3"},"content":"  3.[D][X] submit assignment  (by: Thursday)"},{"lineNumber":136,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":137,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":138,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":139,"author":{"gitId":"simran-bhadani3"},"content":"OOPS!!! The description of a todo cannot be empty."},{"lineNumber":140,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":141,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":142,"author":{"gitId":"simran-bhadani3"},"content":"I\u0027m sorry, but I don\u0027t know what that means :-("},{"lineNumber":143,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":144,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":145,"author":{"gitId":"simran-bhadani3"},"content":"I\u0027m sorry, but I don\u0027t know what that means :-("},{"lineNumber":146,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":147,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":148,"author":{"gitId":"simran-bhadani3"},"content":"I\u0027m sorry, but I don\u0027t know what that means :-("},{"lineNumber":149,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":150,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":151,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":152,"author":{"gitId":"simran-bhadani3"},"content":"Here are the tasks in your list:"},{"lineNumber":153,"author":{"gitId":"simran-bhadani3"},"content":"  1.[T][X] draft resume"},{"lineNumber":154,"author":{"gitId":"simran-bhadani3"},"content":"  2.[E][ ] internship briefing  (at: 2-3pm on Tuesday)"},{"lineNumber":155,"author":{"gitId":"simran-bhadani3"},"content":"  3.[D][X] submit assignment  (by: Thursday)"},{"lineNumber":156,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":157,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":158,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":159,"author":{"gitId":"simran-bhadani3"},"content":"~ Bye! Come back soon! UwU ~"},{"lineNumber":160,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"-":1,"simran-bhadani3":159}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"T | 1 | draft resume"}],"authorContributionMap":{"simran-bhadani3":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"todo draft resume"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"event internship briefing /at 2-3pm on Tuesday"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"deadline submit assignment /by Thursday"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"list"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"list"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"done 3"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"list"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"deadline complete homework /by friday morning"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"list"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"done 4"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"list"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"todo clean room"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"delete 5"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"list"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"delete 4"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"list"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"todo"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"tood eat lunch"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"blah"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"blah"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"list"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"bye"}],"authorContributionMap":{"simran-bhadani3":23}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":4,"author":{"gitId":"-"},"content":"then"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  mkdir ../bin"},{"lineNumber":6,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":9,"author":{"gitId":"-"},"content":"then"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  rm ACTUAL.TXT"},{"lineNumber":11,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":14,"author":{"gitId":"-"},"content":"then"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"  echo \"********** BUILD FAILURE ************\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"  exit 1"},{"lineNumber":17,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.txt"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"diff ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":22,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  echo \"Test result: PASSED\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  exit 0"},{"lineNumber":26,"author":{"gitId":"-"},"content":"else"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  echo \"Test result: FAILED\""},{"lineNumber":28,"author":{"gitId":"-"},"content":"  exit 1"},{"lineNumber":29,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"-":26,"simran-bhadani3":3}}]
