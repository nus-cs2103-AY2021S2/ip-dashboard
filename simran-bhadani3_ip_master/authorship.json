[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"public class Deadline extends Task {"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"    protected LocalDateTime by;"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"    public Deadline(String description, LocalDateTime by) {"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"        this.by \u003d by;"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"     * Formats string to be stored."},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"     * @return Formatted String."},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"    public String getSaveString() {"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"        return \"D\" + \" | \" + (isDone ? \"1\" : \"0\")"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"                + \" | \" + this.description + \" | \" + formatDateForSaving();"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"    private String formatDate() {"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"        return this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"    private String formatDateForSaving() {"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"        return this.by.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.formatDate() + \")\";"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":37}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"    /** List of tasks added by the user */"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"    private static final List\u003cTask\u003e tasks \u003d Storage.getData();"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"     * Performs the specified action."},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"     * @param command Command input by the user."},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"     * @throws InvalidCommandException If the command cannot be recognised."},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"    public static void runCommand(String command) throws InvalidCommandException {"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"        if (command.equals(\"list\")) {"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"            TaskList.printList(tasks);"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"        } else if (Parser.parseCommand(command).equals(\"done\")) {"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"            int index \u003d Parser.parseDoneIndex(command);"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"            TaskList.markDone(index, tasks);"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"        } else if (Parser.parseCommand(command).equals(\"todo\")) {"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"            try {"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"                TaskList.addTodo(command, tasks);"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"            } catch (InvalidTodoException e) {"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"                Ui.printEmptyTodoMessage();"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"        } else if (Parser.parseCommand(command).equals(\"deadline\")) {"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"            try {"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"                TaskList.addDeadline(command, tasks);"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"            } catch (InvalidDateTimeFormatException e) {"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"                Ui.printInvalidDateFormatMessage();"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"        } else if (Parser.parseCommand(command).equals(\"event\")) {"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"            try {"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"                TaskList.addEvent(command, tasks);"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"            } catch (InvalidDateTimeFormatException e) {"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"                Ui.printInvalidDateFormatMessage();"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"        } else if (Parser.parseCommand(command).equals(\"delete\")) {"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"            TaskList.deleteTask(command, tasks);"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"        } else if (Parser.parseCommand(command).equals(\"find\")) {"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"            TaskList.findTask(command, tasks);"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"        } else {"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"            throw new InvalidCommandException();"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"        Ui.printWelcomeMessage();"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"        Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"        String command \u003d scanner.nextLine();"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"        while (!command.equals(\"bye\")) {"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"            try {"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":"                runCommand(command);"},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"            } catch (InvalidCommandException e) {"},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"                Ui.printInvalidCommandMessage();"},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"            command \u003d scanner.nextLine();"},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"simran-bhadani3"},"content":"        scanner.close();"},{"lineNumber":61,"author":{"gitId":"simran-bhadani3"},"content":"        Ui.printExitMessage();"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":4,"simran-bhadani3":59}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"public class Event extends Task {"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"    protected LocalDateTime at;"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"    public Event(String description, LocalDateTime at) {"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"        this.at \u003d at;"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"    private String formatDate() {"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"        return this.at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"    private String formatDateForSaving() {"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"        return this.at.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"     * Formats string to be stored."},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"     * @return Formatted String."},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"    public String getSaveString() {"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"        return \"E\" + \" | \" + (isDone ? \"1\" : \"0\") + \" | \""},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"                + this.description + \" | \" + formatDateForSaving();"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"        return \"[E]\" + super.toString()"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"                + \" (at: \" + this.formatDate() + \")\";"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":38}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"public class InvalidCommandException extends Exception {"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":3}},{"path":"src/main/java/InvalidDateTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"public class InvalidDateTimeFormatException extends Exception {"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":3}},{"path":"src/main/java/InvalidTodoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"public class InvalidTodoException extends Exception {"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":3}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"public class Parser {"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"     * Parses the command input by the user and returns the action to be carried out."},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"     * @param command Command input by the user."},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"     * @return Action to be carried out."},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"    public static String parseCommand(String command) {"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"        return command.split(\" \")[0];"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"     * Returns the index of the task to be marked as done."},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"     * @param command Command input by the user."},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"     * @return Index of task to be marked as done."},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"    public static int parseDoneIndex(String command) {"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"        return Integer.parseInt(command.split(\" \")[1]) - 1;"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"    private static LocalDateTime DateTimeParser(String input) {"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"        return LocalDateTime.parse(input,"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"                DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"));"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"     * Parses the stored string and finds the type of task."},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"     * @param task String retrieved from Storage."},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"     * @return Type of task."},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"    public static String parseTypeOfTask(String task) {"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"        String[] split \u003d task.split(\"\\\\|\");"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"        String typeOfTask \u003d split[0].trim();"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"        return typeOfTask;"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"     * Parses the stored string and finds the completion status."},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"     * @param task String retrieved from Storage."},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"     * @return Completion status of the task."},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"    public static String parseCompletionStatus(String task) {"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"        String[] split \u003d task.split(\"\\\\|\");"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"        String isDone \u003d split[1].trim();"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"        return isDone;"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"     * Parses the stored string and returns the description of the task."},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"     * @param task String retrieved from Storage."},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"     * @return Description of the task."},{"lineNumber":60,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"simran-bhadani3"},"content":"    public static String parseName(String task) {"},{"lineNumber":62,"author":{"gitId":"simran-bhadani3"},"content":"        String[] split \u003d task.split(\"\\\\|\");"},{"lineNumber":63,"author":{"gitId":"simran-bhadani3"},"content":"        String name \u003d split[2].trim();"},{"lineNumber":64,"author":{"gitId":"simran-bhadani3"},"content":"        return name;"},{"lineNumber":65,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":67,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"simran-bhadani3"},"content":"     * Parses the stored string and returns date-time data."},{"lineNumber":69,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"simran-bhadani3"},"content":"     * @param task String retrieved from Storage."},{"lineNumber":71,"author":{"gitId":"simran-bhadani3"},"content":"     * @return LocalDateTime object containing the due date/date of event."},{"lineNumber":72,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"simran-bhadani3"},"content":"    public static LocalDateTime parseTime(String task) {"},{"lineNumber":74,"author":{"gitId":"simran-bhadani3"},"content":"        String[] split \u003d task.split(\"\\\\|\");"},{"lineNumber":75,"author":{"gitId":"simran-bhadani3"},"content":"        String typeOfTask \u003d split[0].trim();"},{"lineNumber":76,"author":{"gitId":"simran-bhadani3"},"content":"        LocalDateTime time \u003d typeOfTask.equals(\"T\")"},{"lineNumber":77,"author":{"gitId":"simran-bhadani3"},"content":"                             ? Parser.DateTimeParser(\"01-01-2001 0101\")"},{"lineNumber":78,"author":{"gitId":"simran-bhadani3"},"content":"                             : Parser.DateTimeParser(split[3].trim());"},{"lineNumber":79,"author":{"gitId":"simran-bhadani3"},"content":"        return time;"},{"lineNumber":80,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":82,"author":{"gitId":"simran-bhadani3"},"content":"}"},{"lineNumber":83,"author":{"gitId":"simran-bhadani3"},"content":""}],"authorContributionMap":{"simran-bhadani3":83}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"import java.io.BufferedWriter;"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import java.nio.charset.StandardCharsets;"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"import java.nio.file.Files;"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"import java.nio.file.Paths;"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"    public static ArrayList\u003cTask\u003e data;"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"    private static final Path fileLocation \u003d Paths.get(\"./data\", \"duke.txt\");"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"    private static final Path directoryLocation \u003d Paths.get(\"./data\");"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"    private static void createFile() {"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"            Files.createFile(fileLocation);"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (Exception e) {"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"            System.out.println(e);"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"    private static boolean checkForFile() {"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"        boolean fileExists \u003d Files.exists(fileLocation);"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"        return fileExists;"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"    private static boolean checkForDirectory() {"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"        boolean directoryExists \u003d Files.exists(directoryLocation);"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"        return directoryExists;"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"    private static void createDirectory() {"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"            Files.createDirectory(directoryLocation);"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"            System.out.println(\"directory created\");"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (Exception e) {"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"            System.out.println(e);"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"     * Reads the data file and creates tasks."},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"     * @return ArrayList consisting of all saved tasks."},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"     * @throws UnableToLoadDataException If unable to load data from the file."},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"    public static ArrayList\u003cTask\u003e getDataFromFile() throws UnableToLoadDataException {"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":"        try {"},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"            Files.lines(fileLocation)"},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"                    .map(task -\u003e task.trim())"},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"                    .filter(task -\u003e !task.isEmpty())"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"                    .forEach(task -\u003e {"},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"                        String typeOfTask \u003d Parser.parseTypeOfTask(task);"},{"lineNumber":60,"author":{"gitId":"simran-bhadani3"},"content":"                        String isDone \u003d Parser.parseCompletionStatus(task);"},{"lineNumber":61,"author":{"gitId":"simran-bhadani3"},"content":"                        String name \u003d Parser.parseName(task);"},{"lineNumber":62,"author":{"gitId":"simran-bhadani3"},"content":"                        LocalDateTime time \u003d Parser.parseTime(task);"},{"lineNumber":63,"author":{"gitId":"simran-bhadani3"},"content":"                        if (typeOfTask.equals(\"T\")) {"},{"lineNumber":64,"author":{"gitId":"simran-bhadani3"},"content":"                            tasks.add(new Todo(name));"},{"lineNumber":65,"author":{"gitId":"simran-bhadani3"},"content":"                            if (isDone.equals(\"1\")) {"},{"lineNumber":66,"author":{"gitId":"simran-bhadani3"},"content":"                                tasks.get(tasks.size() - 1).isDone \u003d true;"},{"lineNumber":67,"author":{"gitId":"simran-bhadani3"},"content":"                            }"},{"lineNumber":68,"author":{"gitId":"simran-bhadani3"},"content":"                        }"},{"lineNumber":69,"author":{"gitId":"simran-bhadani3"},"content":"                        if (typeOfTask.equals(\"D\")) {"},{"lineNumber":70,"author":{"gitId":"simran-bhadani3"},"content":"                            tasks.add(new Deadline(name, time));"},{"lineNumber":71,"author":{"gitId":"simran-bhadani3"},"content":"                            if (isDone.equals(\"1\")) {"},{"lineNumber":72,"author":{"gitId":"simran-bhadani3"},"content":"                                tasks.get(tasks.size() - 1).isDone \u003d true;"},{"lineNumber":73,"author":{"gitId":"simran-bhadani3"},"content":"                            }"},{"lineNumber":74,"author":{"gitId":"simran-bhadani3"},"content":"                        }"},{"lineNumber":75,"author":{"gitId":"simran-bhadani3"},"content":"                        if (typeOfTask.equals(\"E\")) {"},{"lineNumber":76,"author":{"gitId":"simran-bhadani3"},"content":"                            tasks.add(new Event(name, time));"},{"lineNumber":77,"author":{"gitId":"simran-bhadani3"},"content":"                            if (isDone.equals(\"1\")) {"},{"lineNumber":78,"author":{"gitId":"simran-bhadani3"},"content":"                                tasks.get(tasks.size() - 1).isDone \u003d true;"},{"lineNumber":79,"author":{"gitId":"simran-bhadani3"},"content":"                            }"},{"lineNumber":80,"author":{"gitId":"simran-bhadani3"},"content":"                        }"},{"lineNumber":81,"author":{"gitId":"simran-bhadani3"},"content":"                    });"},{"lineNumber":82,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (IOException e) {"},{"lineNumber":83,"author":{"gitId":"simran-bhadani3"},"content":"            throw new UnableToLoadDataException();"},{"lineNumber":84,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"simran-bhadani3"},"content":"        return tasks;"},{"lineNumber":86,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":88,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"simran-bhadani3"},"content":"     * Saves tasks input by the user on the data file."},{"lineNumber":90,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"simran-bhadani3"},"content":"     * @param tasks Tasks to be saved on the file."},{"lineNumber":92,"author":{"gitId":"simran-bhadani3"},"content":"     * @throws UnableToSaveDataException If unable to save tasks to the file."},{"lineNumber":93,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"simran-bhadani3"},"content":"     public static void saveDataToFile(List\u003cTask\u003e tasks) throws UnableToSaveDataException {"},{"lineNumber":95,"author":{"gitId":"simran-bhadani3"},"content":"        try {"},{"lineNumber":96,"author":{"gitId":"simran-bhadani3"},"content":"            BufferedWriter writer \u003d Files.newBufferedWriter(fileLocation, StandardCharsets.UTF_8);"},{"lineNumber":97,"author":{"gitId":"simran-bhadani3"},"content":"            for (Task task : tasks) {"},{"lineNumber":98,"author":{"gitId":"simran-bhadani3"},"content":"                writer.write(task.getSaveString());"},{"lineNumber":99,"author":{"gitId":"simran-bhadani3"},"content":"                writer.write(\"\\n\");"},{"lineNumber":100,"author":{"gitId":"simran-bhadani3"},"content":"                writer.flush();"},{"lineNumber":101,"author":{"gitId":"simran-bhadani3"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"simran-bhadani3"},"content":"            writer.close();"},{"lineNumber":103,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (IOException e) {"},{"lineNumber":104,"author":{"gitId":"simran-bhadani3"},"content":"            throw new UnableToSaveDataException();"},{"lineNumber":105,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":108,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"simran-bhadani3"},"content":"     * Returns an ArrayList containing all the tasks retrieved from storage."},{"lineNumber":110,"author":{"gitId":"simran-bhadani3"},"content":"     * Creates data file if it doesn\u0027t exist."},{"lineNumber":111,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":112,"author":{"gitId":"simran-bhadani3"},"content":"     * @return ArrayList of loaded tasks."},{"lineNumber":113,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"simran-bhadani3"},"content":"    public static ArrayList\u003cTask\u003e getData() {"},{"lineNumber":115,"author":{"gitId":"simran-bhadani3"},"content":"        boolean directoryExists \u003d checkForDirectory();"},{"lineNumber":116,"author":{"gitId":"simran-bhadani3"},"content":"        if (!directoryExists) {"},{"lineNumber":117,"author":{"gitId":"simran-bhadani3"},"content":"            createDirectory();"},{"lineNumber":118,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"simran-bhadani3"},"content":"        boolean fileExists \u003d checkForFile();"},{"lineNumber":120,"author":{"gitId":"simran-bhadani3"},"content":"        if (!fileExists) {"},{"lineNumber":121,"author":{"gitId":"simran-bhadani3"},"content":"            createFile();"},{"lineNumber":122,"author":{"gitId":"simran-bhadani3"},"content":"            data \u003d new ArrayList\u003c\u003e();"},{"lineNumber":123,"author":{"gitId":"simran-bhadani3"},"content":"        } else {"},{"lineNumber":124,"author":{"gitId":"simran-bhadani3"},"content":"            try {"},{"lineNumber":125,"author":{"gitId":"simran-bhadani3"},"content":"                data \u003d getDataFromFile();"},{"lineNumber":126,"author":{"gitId":"simran-bhadani3"},"content":"            } catch (UnableToLoadDataException er) {"},{"lineNumber":127,"author":{"gitId":"simran-bhadani3"},"content":"                Ui.printUnableToLoadDataMessage();"},{"lineNumber":128,"author":{"gitId":"simran-bhadani3"},"content":"            }"},{"lineNumber":129,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"simran-bhadani3"},"content":"        return data;"},{"lineNumber":131,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":132}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"    public Task(String description) {"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"        this.description \u003d description;"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"     * Returns completion status icon."},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"     * @return Completion status icon."},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"    public String getStatusIcon() {"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"        return (isDone ? \"X\" : \" \");"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"     * Returns description of the task."},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"     * @return Description of the task."},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"    public String getDescription() {"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"        return this.description;"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"     *Marks a task as completed."},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"    public void markAsDone() {"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"        this.isDone \u003d true;"},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"     * Formats string to be stored."},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"     * @return Formatted String."},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"    public String getSaveString() {"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"        return \"\";"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"    public String toString() {"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":48}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"public class TaskList {"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"     * Marks the task at a particular index as done."},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"     * @param index Index of the task to be removed."},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"     * @param tasks List of all tasks."},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"    public static void markDone(int index, List\u003cTask\u003e tasks) {"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\");"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"        tasks.get(index).markAsDone();"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"Good job, I have marked this task as done!\");"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(tasks.get(index).toString());"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\");"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"            Storage.saveDataToFile(tasks);"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (UnableToSaveDataException e) {"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"            System.out.println(\"Sorry, unable to save data to the hard disk.\");"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"     * Adds a todo task to the list."},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"     * @param command Command input by the user"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"     *                which contains the name of"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":"     *                the task."},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"     * @param tasks List of all tasks."},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"     * @throws InvalidTodoException If Todo does not"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"     *                              have a description."},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"    public static void addTodo(String command, List\u003cTask\u003e tasks) throws InvalidTodoException {"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"        if (command.length() \u003c 6) {"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"            throw new InvalidTodoException();"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"        tasks.add(new Todo(command.substring(5)));"},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"        int count \u003d tasks.size();"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\");"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(tasks.get(count - 1).toString());"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"Now you have \" + count"},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"                + (count \u003d\u003d 1 ? \" task\" : \" tasks\")"},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"                + \" in the list.\");"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\");"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"            Storage.saveDataToFile(tasks);"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (UnableToSaveDataException e) {"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"            System.out.println(\"Sorry, unable to save data to the hard disk.\");"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"     * Adds a deadline to the list."},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"simran-bhadani3"},"content":"     * @param command Command input by the user"},{"lineNumber":61,"author":{"gitId":"simran-bhadani3"},"content":"     *                which contains the name of"},{"lineNumber":62,"author":{"gitId":"simran-bhadani3"},"content":"     *                the task and the deadline"},{"lineNumber":63,"author":{"gitId":"simran-bhadani3"},"content":"     *                to submit it by."},{"lineNumber":64,"author":{"gitId":"simran-bhadani3"},"content":"     * @param tasks List of all tasks."},{"lineNumber":65,"author":{"gitId":"simran-bhadani3"},"content":"     * @throws InvalidDateTimeFormatException If the format of the date and time entered is incorrect."},{"lineNumber":66,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":68,"author":{"gitId":"simran-bhadani3"},"content":"    public static void addDeadline(String command, List\u003cTask\u003e tasks) throws InvalidDateTimeFormatException {"},{"lineNumber":69,"author":{"gitId":"simran-bhadani3"},"content":"        try {"},{"lineNumber":70,"author":{"gitId":"simran-bhadani3"},"content":"            tasks.add(new Deadline(command.substring(9).split(\"/\")[0],"},{"lineNumber":71,"author":{"gitId":"simran-bhadani3"},"content":"                    LocalDateTime.parse(command.substring(9)"},{"lineNumber":72,"author":{"gitId":"simran-bhadani3"},"content":"                            .split(\"/\")[1].substring(3), DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));"},{"lineNumber":73,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":74,"author":{"gitId":"simran-bhadani3"},"content":"            throw new InvalidDateTimeFormatException();"},{"lineNumber":75,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"simran-bhadani3"},"content":"        int count \u003d tasks.size();"},{"lineNumber":77,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\");"},{"lineNumber":78,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":79,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(tasks.get(count - 1).toString());"},{"lineNumber":80,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"Now you have \" + count"},{"lineNumber":81,"author":{"gitId":"simran-bhadani3"},"content":"                + (count \u003d\u003d 1 ? \" task\" : \" tasks\")"},{"lineNumber":82,"author":{"gitId":"simran-bhadani3"},"content":"                + \" in the list.\");"},{"lineNumber":83,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\");"},{"lineNumber":84,"author":{"gitId":"simran-bhadani3"},"content":"        try {"},{"lineNumber":85,"author":{"gitId":"simran-bhadani3"},"content":"            Storage.saveDataToFile(tasks);"},{"lineNumber":86,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (UnableToSaveDataException e) {"},{"lineNumber":87,"author":{"gitId":"simran-bhadani3"},"content":"            System.out.println(\"Sorry, unable to save data to the hard disk.\");"},{"lineNumber":88,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":91,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"simran-bhadani3"},"content":"     * Adds a deadline to the list."},{"lineNumber":93,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":94,"author":{"gitId":"simran-bhadani3"},"content":"     * @param command Command input by the user"},{"lineNumber":95,"author":{"gitId":"simran-bhadani3"},"content":"     *                which contains the name of"},{"lineNumber":96,"author":{"gitId":"simran-bhadani3"},"content":"     *                the event and the date and time."},{"lineNumber":97,"author":{"gitId":"simran-bhadani3"},"content":"     * @param tasks List of all tasks."},{"lineNumber":98,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":100,"author":{"gitId":"simran-bhadani3"},"content":"    public static void addEvent(String command, List\u003cTask\u003e tasks) throws InvalidDateTimeFormatException {"},{"lineNumber":101,"author":{"gitId":"simran-bhadani3"},"content":"        try {"},{"lineNumber":102,"author":{"gitId":"simran-bhadani3"},"content":"            tasks.add(new Event(command.substring(6).split(\"/\")[0],"},{"lineNumber":103,"author":{"gitId":"simran-bhadani3"},"content":"                    LocalDateTime.parse(command.substring(6).split(\"/\")[1].substring(3),"},{"lineNumber":104,"author":{"gitId":"simran-bhadani3"},"content":"                            DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\"))));"},{"lineNumber":105,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":106,"author":{"gitId":"simran-bhadani3"},"content":"            throw new InvalidDateTimeFormatException();"},{"lineNumber":107,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"simran-bhadani3"},"content":"        int count \u003d tasks.size();"},{"lineNumber":109,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\");"},{"lineNumber":110,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");"},{"lineNumber":111,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(tasks.get(count - 1).toString());"},{"lineNumber":112,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"Now you have \" + count"},{"lineNumber":113,"author":{"gitId":"simran-bhadani3"},"content":"                + (count \u003d\u003d 1 ? \" task\" : \" tasks\")"},{"lineNumber":114,"author":{"gitId":"simran-bhadani3"},"content":"                + \" in the list.\");"},{"lineNumber":115,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\");"},{"lineNumber":116,"author":{"gitId":"simran-bhadani3"},"content":"        try {"},{"lineNumber":117,"author":{"gitId":"simran-bhadani3"},"content":"            Storage.saveDataToFile(tasks);"},{"lineNumber":118,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (UnableToSaveDataException e) {"},{"lineNumber":119,"author":{"gitId":"simran-bhadani3"},"content":"            System.out.println(\"Sorry, unable to save data to the hard disk.\");"},{"lineNumber":120,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":123,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"simran-bhadani3"},"content":"     * Deletes the specified task."},{"lineNumber":125,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":126,"author":{"gitId":"simran-bhadani3"},"content":"     * @param command Command input by the user"},{"lineNumber":127,"author":{"gitId":"simran-bhadani3"},"content":"     *                which contains the index of"},{"lineNumber":128,"author":{"gitId":"simran-bhadani3"},"content":"     *                the task to be deleted."},{"lineNumber":129,"author":{"gitId":"simran-bhadani3"},"content":"     * @param tasks List of all tasks."},{"lineNumber":130,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":131,"author":{"gitId":"simran-bhadani3"},"content":"    public static void deleteTask(String command, List\u003cTask\u003e tasks) {"},{"lineNumber":132,"author":{"gitId":"simran-bhadani3"},"content":"        int deleteIndex \u003d Integer.parseInt(command.split(\" \")[1]) - 1;"},{"lineNumber":133,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\");"},{"lineNumber":134,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"I\u0027ve removed the task:\");"},{"lineNumber":135,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(tasks.get(deleteIndex));"},{"lineNumber":136,"author":{"gitId":"simran-bhadani3"},"content":"        tasks.remove(deleteIndex);"},{"lineNumber":137,"author":{"gitId":"simran-bhadani3"},"content":"        int count \u003d tasks.size();"},{"lineNumber":138,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"Now you have \" + count"},{"lineNumber":139,"author":{"gitId":"simran-bhadani3"},"content":"                + (count \u003d\u003d 1 ? \" task\" : \" tasks\")"},{"lineNumber":140,"author":{"gitId":"simran-bhadani3"},"content":"                + \" in the list.\");"},{"lineNumber":141,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\");"},{"lineNumber":142,"author":{"gitId":"simran-bhadani3"},"content":"        try {"},{"lineNumber":143,"author":{"gitId":"simran-bhadani3"},"content":"            Storage.saveDataToFile(tasks);"},{"lineNumber":144,"author":{"gitId":"simran-bhadani3"},"content":"        } catch (UnableToSaveDataException e) {"},{"lineNumber":145,"author":{"gitId":"simran-bhadani3"},"content":"            Ui.printUnableToSaveDataMessage();"},{"lineNumber":146,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":149,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":150,"author":{"gitId":"simran-bhadani3"},"content":"     * Lists all the tasks that have been input by the user."},{"lineNumber":151,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":152,"author":{"gitId":"simran-bhadani3"},"content":"     * @param tasks List of all tasks."},{"lineNumber":153,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":154,"author":{"gitId":"simran-bhadani3"},"content":"    public static void printList(List\u003cTask\u003e tasks) {"},{"lineNumber":155,"author":{"gitId":"simran-bhadani3"},"content":"        int listCount \u003d 1;"},{"lineNumber":156,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\");"},{"lineNumber":157,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":158,"author":{"gitId":"simran-bhadani3"},"content":"        for (Task task : tasks) {"},{"lineNumber":159,"author":{"gitId":"simran-bhadani3"},"content":"            System.out.println(\"  \" + listCount + \".\" + task.toString());"},{"lineNumber":160,"author":{"gitId":"simran-bhadani3"},"content":"            listCount++;"},{"lineNumber":161,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\");"},{"lineNumber":163,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":165,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":166,"author":{"gitId":"simran-bhadani3"},"content":"     * Searches for task specified by user."},{"lineNumber":167,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":168,"author":{"gitId":"simran-bhadani3"},"content":"     * @param command Command input by user."},{"lineNumber":169,"author":{"gitId":"simran-bhadani3"},"content":"     * @param tasks List of tasks."},{"lineNumber":170,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":171,"author":{"gitId":"simran-bhadani3"},"content":"    public static void findTask(String command, List\u003cTask\u003e tasks) {"},{"lineNumber":172,"author":{"gitId":"simran-bhadani3"},"content":"        int listCount \u003d 1;"},{"lineNumber":173,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"\\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\");"},{"lineNumber":174,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");"},{"lineNumber":175,"author":{"gitId":"simran-bhadani3"},"content":"        for (Task task : tasks) {"},{"lineNumber":176,"author":{"gitId":"simran-bhadani3"},"content":"            if (task.toString().contains(command.split(\" \")[1])) {"},{"lineNumber":177,"author":{"gitId":"simran-bhadani3"},"content":"                System.out.println(\"  \" + listCount + \".\" + task.toString());"},{"lineNumber":178,"author":{"gitId":"simran-bhadani3"},"content":"                listCount++;"},{"lineNumber":179,"author":{"gitId":"simran-bhadani3"},"content":"            }"},{"lineNumber":180,"author":{"gitId":"simran-bhadani3"},"content":"        }"},{"lineNumber":181,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"~~~~~~~~~~~~~~~~~~~~~~~~~~~\\n\");"},{"lineNumber":182,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":184,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":184}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"    public Todo(String description) {"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"        super(description);"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"     * Formats string to be stored."},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"     * @return Formatted String."},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"    public String getSaveString() {"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"        return \"T\" + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + this.description;"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":21}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"public class Ui {"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"     * Prints welcome message when the user runs Duke."},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"    public static void printWelcomeMessage() {"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"        String logo \u003d"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"                \"     ______\\n\" +"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"                        \"    |___  /\\n\" +"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"                        \"       / / \\n\" +"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"                        \"      / /  \\n\" +"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"                        \"     / /__ \\n\" +"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"                        \"    /_____|\\n\";"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"\\n~ Hello! I am Zee :) ~\\n\""},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"                + logo + \"\\n\""},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"                + \"~ What can I do for you today? ~\\n\");"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"     * Prints exit message when the user wants to terminate Duke."},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"    public static void printExitMessage() {"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"\\n~ Bye! Come back soon! UwU ~\\n\");"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"     * Prints error message when the command is not recognised."},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"    public static void printInvalidCommandMessage() {"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"\\nI\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"     * Prints error message when the description of the todo task is empty."},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"    public static void printEmptyTodoMessage() {"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"\\nOOPS!!! The description of a todo cannot be empty.\\n\");"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":"     * Prints error message when the data can\u0027t be saved."},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"    public static void printUnableToSaveDataMessage() {"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"Sorry, unable to save data to the hard disk.\");"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"     * Prints error message when the input format for date and time is invalid."},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"    public static void printInvalidDateFormatMessage() {"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"\\nDate time format is invalid. \" +"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"                \"Please enter the date and time in the following format: DD-MM-YYYY HHMM\\n\");"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"     * Prints error message when the program is unable to load data from the hard disk."},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"    public static void printUnableToLoadDataMessage() {"},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"        System.out.println(\"\\nI\u0027m sorry, I am not able to load data.\\n\");"},{"lineNumber":60,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":62,"author":{"gitId":"simran-bhadani3"},"content":"}"},{"lineNumber":63,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":64,"author":{"gitId":"simran-bhadani3"},"content":""}],"authorContributionMap":{"simran-bhadani3":64}},{"path":"src/main/java/UnableToLoadDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"public class UnableToLoadDataException extends Exception {"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":3}},{"path":"src/main/java/UnableToSaveDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"public class UnableToSaveDataException extends Exception {"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":3}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"import java.time.Month;"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"public class DeadlineTest {"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"    public void DeadlineTestOne() {"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(\"[D][ ] finish project (by: Apr 15 2021 16:00)\",new Deadline(\"finish project\","},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"                LocalDateTime.of(2021, Month.APRIL, 15, 16, 00)).toString());"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"    public void TodoTestFour() {"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"        Task deadline \u003d new Deadline(\"finish project\","},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"                LocalDateTime.of(2021, Month.APRIL, 15, 16, 00));"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"        deadline.markAsDone();"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(\"[D][X] finish project (by: Apr 15 2021 16:00)\","},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"                deadline.toString());"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":26}},{"path":"src/test/java/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"public class TodoTest {"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"    @Test"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"    public void TodoTestOne() {"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(\"T | 0 | finish project\",new Todo(\"finish project\").getSaveString());"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"    public void TodoTestFour() {"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"        Task todo \u003d new Todo(\"finish project\");"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"        todo.markAsDone();"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(\"T | 1 | finish project\",todo.getSaveString());"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"    public void TodoTestTwo() {"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(\"[T][ ] finish project\",new Todo(\"finish project\").toString());"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"    public void TodoTestThree() {"},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"        Task todo \u003d new Todo(\"finish project\");"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":"        todo.markAsDone();"},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":"        assertEquals(\"[T][X] finish project\", todo.toString());"},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"}"}],"authorContributionMap":{"simran-bhadani3":29}},{"path":"text-ui-test/EXPECTED.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"~ Hello! I am Zee :) ~"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"     ______"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"    |___  /"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"       / / "},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"      / /  "},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"     / /__ "},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"    /_____|"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"~ What can I do for you today? ~"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"[T][ ] draft resume"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"Now you have 1 task in the list."},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"[E][ ] internship briefing  (at: 2-3pm on Tuesday)"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"Now you have 2 tasks in the list."},{"lineNumber":24,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":25,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":26,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":27,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":28,"author":{"gitId":"simran-bhadani3"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":29,"author":{"gitId":"simran-bhadani3"},"content":"[D][ ] submit assignment  (by: Thursday)"},{"lineNumber":30,"author":{"gitId":"simran-bhadani3"},"content":"Now you have 3 tasks in the list."},{"lineNumber":31,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":32,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":33,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":34,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":35,"author":{"gitId":"simran-bhadani3"},"content":"Here are the tasks in your list:"},{"lineNumber":36,"author":{"gitId":"simran-bhadani3"},"content":"  1.[T][ ] draft resume"},{"lineNumber":37,"author":{"gitId":"simran-bhadani3"},"content":"  2.[E][ ] internship briefing  (at: 2-3pm on Tuesday)"},{"lineNumber":38,"author":{"gitId":"simran-bhadani3"},"content":"  3.[D][ ] submit assignment  (by: Thursday)"},{"lineNumber":39,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":40,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":41,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":42,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":43,"author":{"gitId":"simran-bhadani3"},"content":"Good job, I have marked this task as done!"},{"lineNumber":44,"author":{"gitId":"simran-bhadani3"},"content":"[T][X] draft resume"},{"lineNumber":45,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":46,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":47,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":48,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":49,"author":{"gitId":"simran-bhadani3"},"content":"Here are the tasks in your list:"},{"lineNumber":50,"author":{"gitId":"simran-bhadani3"},"content":"  1.[T][X] draft resume"},{"lineNumber":51,"author":{"gitId":"simran-bhadani3"},"content":"  2.[E][ ] internship briefing  (at: 2-3pm on Tuesday)"},{"lineNumber":52,"author":{"gitId":"simran-bhadani3"},"content":"  3.[D][ ] submit assignment  (by: Thursday)"},{"lineNumber":53,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":54,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":55,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":56,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":57,"author":{"gitId":"simran-bhadani3"},"content":"Good job, I have marked this task as done!"},{"lineNumber":58,"author":{"gitId":"simran-bhadani3"},"content":"[D][X] submit assignment  (by: Thursday)"},{"lineNumber":59,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":60,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":61,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":62,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":63,"author":{"gitId":"simran-bhadani3"},"content":"Here are the tasks in your list:"},{"lineNumber":64,"author":{"gitId":"simran-bhadani3"},"content":"  1.[T][X] draft resume"},{"lineNumber":65,"author":{"gitId":"simran-bhadani3"},"content":"  2.[E][ ] internship briefing  (at: 2-3pm on Tuesday)"},{"lineNumber":66,"author":{"gitId":"simran-bhadani3"},"content":"  3.[D][X] submit assignment  (by: Thursday)"},{"lineNumber":67,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":68,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":69,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":70,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":71,"author":{"gitId":"simran-bhadani3"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":72,"author":{"gitId":"simran-bhadani3"},"content":"[D][ ] complete homework  (by: friday morning)"},{"lineNumber":73,"author":{"gitId":"simran-bhadani3"},"content":"Now you have 4 tasks in the list."},{"lineNumber":74,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":75,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":76,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":77,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":78,"author":{"gitId":"simran-bhadani3"},"content":"Here are the tasks in your list:"},{"lineNumber":79,"author":{"gitId":"simran-bhadani3"},"content":"  1.[T][X] draft resume"},{"lineNumber":80,"author":{"gitId":"simran-bhadani3"},"content":"  2.[E][ ] internship briefing  (at: 2-3pm on Tuesday)"},{"lineNumber":81,"author":{"gitId":"simran-bhadani3"},"content":"  3.[D][X] submit assignment  (by: Thursday)"},{"lineNumber":82,"author":{"gitId":"simran-bhadani3"},"content":"  4.[D][ ] complete homework  (by: friday morning)"},{"lineNumber":83,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":84,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":85,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":86,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":87,"author":{"gitId":"simran-bhadani3"},"content":"Good job, I have marked this task as done!"},{"lineNumber":88,"author":{"gitId":"simran-bhadani3"},"content":"[D][X] complete homework  (by: friday morning)"},{"lineNumber":89,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":90,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":91,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":92,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":93,"author":{"gitId":"simran-bhadani3"},"content":"Here are the tasks in your list:"},{"lineNumber":94,"author":{"gitId":"simran-bhadani3"},"content":"  1.[T][X] draft resume"},{"lineNumber":95,"author":{"gitId":"simran-bhadani3"},"content":"  2.[E][ ] internship briefing  (at: 2-3pm on Tuesday)"},{"lineNumber":96,"author":{"gitId":"simran-bhadani3"},"content":"  3.[D][X] submit assignment  (by: Thursday)"},{"lineNumber":97,"author":{"gitId":"simran-bhadani3"},"content":"  4.[D][X] complete homework  (by: friday morning)"},{"lineNumber":98,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":99,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":100,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":101,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":102,"author":{"gitId":"simran-bhadani3"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":103,"author":{"gitId":"simran-bhadani3"},"content":"[T][ ] clean room"},{"lineNumber":104,"author":{"gitId":"simran-bhadani3"},"content":"Now you have 5 tasks in the list."},{"lineNumber":105,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":106,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":107,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":108,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":109,"author":{"gitId":"simran-bhadani3"},"content":"I\u0027ve removed the task:"},{"lineNumber":110,"author":{"gitId":"simran-bhadani3"},"content":"[T][ ] clean room"},{"lineNumber":111,"author":{"gitId":"simran-bhadani3"},"content":"Now you have 4 tasks in the list."},{"lineNumber":112,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":113,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":114,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":115,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":116,"author":{"gitId":"simran-bhadani3"},"content":"Here are the tasks in your list:"},{"lineNumber":117,"author":{"gitId":"simran-bhadani3"},"content":"  1.[T][X] draft resume"},{"lineNumber":118,"author":{"gitId":"simran-bhadani3"},"content":"  2.[E][ ] internship briefing  (at: 2-3pm on Tuesday)"},{"lineNumber":119,"author":{"gitId":"simran-bhadani3"},"content":"  3.[D][X] submit assignment  (by: Thursday)"},{"lineNumber":120,"author":{"gitId":"simran-bhadani3"},"content":"  4.[D][X] complete homework  (by: friday morning)"},{"lineNumber":121,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":122,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":123,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":124,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":125,"author":{"gitId":"simran-bhadani3"},"content":"I\u0027ve removed the task:"},{"lineNumber":126,"author":{"gitId":"simran-bhadani3"},"content":"[D][X] complete homework  (by: friday morning)"},{"lineNumber":127,"author":{"gitId":"simran-bhadani3"},"content":"Now you have 3 tasks in the list."},{"lineNumber":128,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":129,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":130,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":131,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":132,"author":{"gitId":"simran-bhadani3"},"content":"Here are the tasks in your list:"},{"lineNumber":133,"author":{"gitId":"simran-bhadani3"},"content":"  1.[T][X] draft resume"},{"lineNumber":134,"author":{"gitId":"simran-bhadani3"},"content":"  2.[E][ ] internship briefing  (at: 2-3pm on Tuesday)"},{"lineNumber":135,"author":{"gitId":"simran-bhadani3"},"content":"  3.[D][X] submit assignment  (by: Thursday)"},{"lineNumber":136,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":137,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":138,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":139,"author":{"gitId":"simran-bhadani3"},"content":"OOPS!!! The description of a todo cannot be empty."},{"lineNumber":140,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":141,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":142,"author":{"gitId":"simran-bhadani3"},"content":"I\u0027m sorry, but I don\u0027t know what that means :-("},{"lineNumber":143,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":144,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":145,"author":{"gitId":"simran-bhadani3"},"content":"I\u0027m sorry, but I don\u0027t know what that means :-("},{"lineNumber":146,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":147,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":148,"author":{"gitId":"simran-bhadani3"},"content":"I\u0027m sorry, but I don\u0027t know what that means :-("},{"lineNumber":149,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":150,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":151,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":152,"author":{"gitId":"simran-bhadani3"},"content":"Here are the tasks in your list:"},{"lineNumber":153,"author":{"gitId":"simran-bhadani3"},"content":"  1.[T][X] draft resume"},{"lineNumber":154,"author":{"gitId":"simran-bhadani3"},"content":"  2.[E][ ] internship briefing  (at: 2-3pm on Tuesday)"},{"lineNumber":155,"author":{"gitId":"simran-bhadani3"},"content":"  3.[D][X] submit assignment  (by: Thursday)"},{"lineNumber":156,"author":{"gitId":"simran-bhadani3"},"content":"~~~~~~~~~~~~~~~~~~~~~~~~~~~"},{"lineNumber":157,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":158,"author":{"gitId":"simran-bhadani3"},"content":""},{"lineNumber":159,"author":{"gitId":"simran-bhadani3"},"content":"~ Bye! Come back soon! UwU ~"},{"lineNumber":160,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"-":1,"simran-bhadani3":159}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"T | 1 | draft resume"}],"authorContributionMap":{"simran-bhadani3":1}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"simran-bhadani3"},"content":"todo draft resume"},{"lineNumber":2,"author":{"gitId":"simran-bhadani3"},"content":"event internship briefing /at 2-3pm on Tuesday"},{"lineNumber":3,"author":{"gitId":"simran-bhadani3"},"content":"deadline submit assignment /by Thursday"},{"lineNumber":4,"author":{"gitId":"simran-bhadani3"},"content":"list"},{"lineNumber":5,"author":{"gitId":"simran-bhadani3"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"simran-bhadani3"},"content":"list"},{"lineNumber":7,"author":{"gitId":"simran-bhadani3"},"content":"done 3"},{"lineNumber":8,"author":{"gitId":"simran-bhadani3"},"content":"list"},{"lineNumber":9,"author":{"gitId":"simran-bhadani3"},"content":"deadline complete homework /by friday morning"},{"lineNumber":10,"author":{"gitId":"simran-bhadani3"},"content":"list"},{"lineNumber":11,"author":{"gitId":"simran-bhadani3"},"content":"done 4"},{"lineNumber":12,"author":{"gitId":"simran-bhadani3"},"content":"list"},{"lineNumber":13,"author":{"gitId":"simran-bhadani3"},"content":"todo clean room"},{"lineNumber":14,"author":{"gitId":"simran-bhadani3"},"content":"delete 5"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"list"},{"lineNumber":16,"author":{"gitId":"simran-bhadani3"},"content":"delete 4"},{"lineNumber":17,"author":{"gitId":"simran-bhadani3"},"content":"list"},{"lineNumber":18,"author":{"gitId":"simran-bhadani3"},"content":"todo"},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"tood eat lunch"},{"lineNumber":20,"author":{"gitId":"simran-bhadani3"},"content":"blah"},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"blah"},{"lineNumber":22,"author":{"gitId":"simran-bhadani3"},"content":"list"},{"lineNumber":23,"author":{"gitId":"simran-bhadani3"},"content":"bye"}],"authorContributionMap":{"simran-bhadani3":23}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":4,"author":{"gitId":"-"},"content":"then"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  mkdir ../bin"},{"lineNumber":6,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":9,"author":{"gitId":"-"},"content":"then"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  rm ACTUAL.TXT"},{"lineNumber":11,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":14,"author":{"gitId":"-"},"content":"then"},{"lineNumber":15,"author":{"gitId":"simran-bhadani3"},"content":"  echo \"********** BUILD FAILURE ************\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"  exit 1"},{"lineNumber":17,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"simran-bhadani3"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.txt"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"simran-bhadani3"},"content":"diff ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":22,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  echo \"Test result: PASSED\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"  exit 0"},{"lineNumber":26,"author":{"gitId":"-"},"content":"else"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  echo \"Test result: FAILED\""},{"lineNumber":28,"author":{"gitId":"-"},"content":"  exit 1"},{"lineNumber":29,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"-":26,"simran-bhadani3":3}}]
