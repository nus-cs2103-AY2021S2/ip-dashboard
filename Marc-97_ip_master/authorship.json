[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"Marc-97"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":15,"author":{"gitId":"Marc-97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"Marc-97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"Marc-97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"Marc-97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"Marc-97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"Marc-97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"Marc-97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"Marc-97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"Marc-97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"Marc-97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"Marc-97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"Marc-97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"Marc-97"},"content":"    mainClassName \u003d \"duke.Duke\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":60,"author":{"gitId":"Marc-97"},"content":"    enableAssertions \u003d true"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"},{"lineNumber":63,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":64,"author":{"gitId":"Marc-97"},"content":"application {"},{"lineNumber":65,"author":{"gitId":"Marc-97"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":66,"author":{"gitId":"Marc-97"},"content":"}"}],"authorContributionMap":{"Marc-97":22,"-":44}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"E | 0 | read | 2019-01-01 | by"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":"D | 0 | read | 2020-01-01 | by"},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"E | 0 | read a book  | 2021-01-01 | by"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":"T | 1 | eat a phone"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"T | 0 | eat a cow"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":"T | 0 | xyz"},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":"T | 0 | eat a chicken"},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":"D | 0 | xyz | 2021-02-15 | by"}],"authorContributionMap":{"Marc-97":8}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":"1. [Add tasks](#todo---adds-a-todo-task)"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"1. [View all tasks](#list---view-all-tasks)"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":"1. [Mark tasks as done](#done---marks-a-task-as-done)"},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":"1. [Delete tasks](#delete---removes-a-task)"},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":"1. [Search for tasks using keyword](#find---search-for-tasks)"},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":"1. [Sort all tasks by date](#sort---search-for-tasks)"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"Marc-97"},"content":"### `todo` - Adds a todo task"},{"lineNumber":14,"author":{"gitId":"Marc-97"},"content":"Adds a todo task with a name."},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"Marc-97"},"content":"Example of usage: "},{"lineNumber":17,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":18,"author":{"gitId":"Marc-97"},"content":"`todo mark a task`"},{"lineNumber":19,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":20,"author":{"gitId":"Marc-97"},"content":"Expected outcome:"},{"lineNumber":21,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":22,"author":{"gitId":"Marc-97"},"content":"```"},{"lineNumber":23,"author":{"gitId":"Marc-97"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":24,"author":{"gitId":"Marc-97"},"content":" [T][] mark a task"},{"lineNumber":25,"author":{"gitId":"Marc-97"},"content":"Now you have 1 tasks in the list."},{"lineNumber":26,"author":{"gitId":"Marc-97"},"content":"```"},{"lineNumber":27,"author":{"gitId":"Marc-97"},"content":"### `event` - Adds a event task "},{"lineNumber":28,"author":{"gitId":"Marc-97"},"content":"Adds a event task with a name and a date."},{"lineNumber":29,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":30,"author":{"gitId":"Marc-97"},"content":"Example of usage: "},{"lineNumber":31,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":32,"author":{"gitId":"Marc-97"},"content":"`event eat a cow /at 2021-09-16`"},{"lineNumber":33,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":34,"author":{"gitId":"Marc-97"},"content":"Expected outcome:"},{"lineNumber":35,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":36,"author":{"gitId":"Marc-97"},"content":"```"},{"lineNumber":37,"author":{"gitId":"Marc-97"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":38,"author":{"gitId":"Marc-97"},"content":" [E][] eat a cow (at: Sep 16 2021)"},{"lineNumber":39,"author":{"gitId":"Marc-97"},"content":"Now you have 2 tasks in the list."},{"lineNumber":40,"author":{"gitId":"Marc-97"},"content":"```"},{"lineNumber":41,"author":{"gitId":"Marc-97"},"content":"### `deadline` - Adds a deadline task"},{"lineNumber":42,"author":{"gitId":"Marc-97"},"content":"Adds a deadline task with a name and a date."},{"lineNumber":43,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":44,"author":{"gitId":"Marc-97"},"content":"Example of usage: "},{"lineNumber":45,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":46,"author":{"gitId":"Marc-97"},"content":"`deadline ip submission /by 2017-01-12`"},{"lineNumber":47,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":48,"author":{"gitId":"Marc-97"},"content":"Expected outcome:"},{"lineNumber":49,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":50,"author":{"gitId":"Marc-97"},"content":"```"},{"lineNumber":51,"author":{"gitId":"Marc-97"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":52,"author":{"gitId":"Marc-97"},"content":" [D][] ip submission (by: Jan 12 2017)"},{"lineNumber":53,"author":{"gitId":"Marc-97"},"content":"Now you have 3 tasks in the list."},{"lineNumber":54,"author":{"gitId":"Marc-97"},"content":"```"},{"lineNumber":55,"author":{"gitId":"Marc-97"},"content":"### `list` - View all tasks"},{"lineNumber":56,"author":{"gitId":"Marc-97"},"content":"View all the tasks."},{"lineNumber":57,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":58,"author":{"gitId":"Marc-97"},"content":"Example of usage: "},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"Marc-97"},"content":"`list`"},{"lineNumber":61,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":62,"author":{"gitId":"Marc-97"},"content":"Expected outcome:"},{"lineNumber":63,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":64,"author":{"gitId":"Marc-97"},"content":"```"},{"lineNumber":65,"author":{"gitId":"Marc-97"},"content":"Here are the tasks in your list:"},{"lineNumber":66,"author":{"gitId":"Marc-97"},"content":"1. [T][] mark a task"},{"lineNumber":67,"author":{"gitId":"Marc-97"},"content":"2. [E][] eat a cow (at: Sep 16 2021)"},{"lineNumber":68,"author":{"gitId":"Marc-97"},"content":"3. [D][] ip submission (by: Jan 12 2017)"},{"lineNumber":69,"author":{"gitId":"Marc-97"},"content":"```"},{"lineNumber":70,"author":{"gitId":"Marc-97"},"content":"### `done` - Marks a task as done "},{"lineNumber":71,"author":{"gitId":"Marc-97"},"content":"Mark a task in the specified position as done."},{"lineNumber":72,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":73,"author":{"gitId":"Marc-97"},"content":"Example of usage: "},{"lineNumber":74,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":75,"author":{"gitId":"Marc-97"},"content":"`done 1`"},{"lineNumber":76,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":77,"author":{"gitId":"Marc-97"},"content":"Expected outcome:"},{"lineNumber":78,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":79,"author":{"gitId":"Marc-97"},"content":"```"},{"lineNumber":80,"author":{"gitId":"Marc-97"},"content":"Got it. I\u0027ve marked this task as done:"},{"lineNumber":81,"author":{"gitId":"Marc-97"},"content":" [T][X] mark a task"},{"lineNumber":82,"author":{"gitId":"Marc-97"},"content":"```"},{"lineNumber":83,"author":{"gitId":"Marc-97"},"content":"### `delete` - Removes a task "},{"lineNumber":84,"author":{"gitId":"Marc-97"},"content":"Removes a task in the specified position."},{"lineNumber":85,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":86,"author":{"gitId":"Marc-97"},"content":"Example of usage: "},{"lineNumber":87,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":88,"author":{"gitId":"Marc-97"},"content":"`delete 1`"},{"lineNumber":89,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":90,"author":{"gitId":"Marc-97"},"content":"Expected outcome:"},{"lineNumber":91,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":92,"author":{"gitId":"Marc-97"},"content":"```"},{"lineNumber":93,"author":{"gitId":"Marc-97"},"content":"Got it. I\u0027ve removed this task:"},{"lineNumber":94,"author":{"gitId":"Marc-97"},"content":"[T][X] mark a task"},{"lineNumber":95,"author":{"gitId":"Marc-97"},"content":"Now you have 2 tasks in the list."},{"lineNumber":96,"author":{"gitId":"Marc-97"},"content":"```"},{"lineNumber":97,"author":{"gitId":"Marc-97"},"content":"### `find` - Search for tasks"},{"lineNumber":98,"author":{"gitId":"Marc-97"},"content":"Search for tasks that matches the specified keyword."},{"lineNumber":99,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":100,"author":{"gitId":"Marc-97"},"content":"Example of usage: "},{"lineNumber":101,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":102,"author":{"gitId":"Marc-97"},"content":"`find submission`"},{"lineNumber":103,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":104,"author":{"gitId":"Marc-97"},"content":"Expected outcome:"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"Marc-97"},"content":"```"},{"lineNumber":107,"author":{"gitId":"Marc-97"},"content":"Here are the matching tasks in your list:"},{"lineNumber":108,"author":{"gitId":"Marc-97"},"content":"1.[D][] ip submission (by: Jan 12 2017)"},{"lineNumber":109,"author":{"gitId":"Marc-97"},"content":"```"},{"lineNumber":110,"author":{"gitId":"Marc-97"},"content":"### `sort` - Search for tasks"},{"lineNumber":111,"author":{"gitId":"Marc-97"},"content":"Sort all tasks by date"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"Marc-97"},"content":"`sort`"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"Marc-97"},"content":"```"},{"lineNumber":120,"author":{"gitId":"Marc-97"},"content":"Here are the tasks in your list:"},{"lineNumber":121,"author":{"gitId":"Marc-97"},"content":"1.[D][] ip submission (by: Jan 12 2017)"},{"lineNumber":122,"author":{"gitId":"Marc-97"},"content":"2.[E][] eat a cow (at: Sep 16 2021)"},{"lineNumber":123,"author":{"gitId":"Marc-97"},"content":"```"}],"authorContributionMap":{"Marc-97":108,"-":15}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":"import duke.exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"import duke.parser.Parser;"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":"import duke.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"Marc-97"},"content":" * Duke is a program for task tracking."},{"lineNumber":12,"author":{"gitId":"Marc-97"},"content":" */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":15,"author":{"gitId":"Marc-97"},"content":"    private Storage storage;"},{"lineNumber":16,"author":{"gitId":"Marc-97"},"content":"    private TaskList tasks;"},{"lineNumber":17,"author":{"gitId":"Marc-97"},"content":"    private Ui ui;"},{"lineNumber":18,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":19,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Marc-97"},"content":"     * Constructor for Duke."},{"lineNumber":21,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"Marc-97"},"content":"    public Duke() {"},{"lineNumber":23,"author":{"gitId":"Marc-97"},"content":"        ui \u003d new Ui();"},{"lineNumber":24,"author":{"gitId":"Marc-97"},"content":"        storage \u003d new Storage(\"data/tasks.txt\");"},{"lineNumber":25,"author":{"gitId":"Marc-97"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"Marc-97"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":27,"author":{"gitId":"Marc-97"},"content":"        } catch (DukeException ex) {"},{"lineNumber":28,"author":{"gitId":"Marc-97"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":29,"author":{"gitId":"Marc-97"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":32,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"Marc-97"},"content":"     * Constructor for Duke."},{"lineNumber":34,"author":{"gitId":"Marc-97"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"Marc-97"},"content":"     * @param filePath a path representing the location of duke save file"},{"lineNumber":36,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"Marc-97"},"content":"    public Duke(String filePath) {"},{"lineNumber":38,"author":{"gitId":"Marc-97"},"content":"        ui \u003d new Ui();"},{"lineNumber":39,"author":{"gitId":"Marc-97"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":40,"author":{"gitId":"Marc-97"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"Marc-97"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":42,"author":{"gitId":"Marc-97"},"content":"        } catch (DukeException ex) {"},{"lineNumber":43,"author":{"gitId":"Marc-97"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":44,"author":{"gitId":"Marc-97"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":47,"author":{"gitId":"Marc-97"},"content":"    public String getResponse(String input) {"},{"lineNumber":48,"author":{"gitId":"Marc-97"},"content":"        String request \u003d input;"},{"lineNumber":49,"author":{"gitId":"Marc-97"},"content":"        Parser parser \u003d new Parser(request);"},{"lineNumber":50,"author":{"gitId":"Marc-97"},"content":"        Command command \u003d parser.parse();"},{"lineNumber":51,"author":{"gitId":"Marc-97"},"content":"        String message \u003d command.execute(tasks, ui, storage);"},{"lineNumber":52,"author":{"gitId":"Marc-97"},"content":"        return message;"},{"lineNumber":53,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Marc-97":53,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Marc-97"},"content":"}"}],"authorContributionMap":{"Marc-97":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"import duke.ui.MainWindow;"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"Marc-97"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":13,"author":{"gitId":"Marc-97"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"Marc-97"},"content":" * A GUI for Duke using FXML."},{"lineNumber":15,"author":{"gitId":"Marc-97"},"content":" */"},{"lineNumber":16,"author":{"gitId":"Marc-97"},"content":"public class Main extends Application {"},{"lineNumber":17,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":18,"author":{"gitId":"Marc-97"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":19,"author":{"gitId":"Marc-97"},"content":"    private Image appIconImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Icon.jpg\"));"},{"lineNumber":20,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":21,"author":{"gitId":"Marc-97"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"Marc-97"},"content":"    public void start(Stage stage) {"},{"lineNumber":23,"author":{"gitId":"Marc-97"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"Marc-97"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":25,"author":{"gitId":"Marc-97"},"content":"            System.out.println(fxmlLoader.getLocation());"},{"lineNumber":26,"author":{"gitId":"Marc-97"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":27,"author":{"gitId":"Marc-97"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":28,"author":{"gitId":"Marc-97"},"content":"            stage.setScene(scene);"},{"lineNumber":29,"author":{"gitId":"Marc-97"},"content":"            stage.setTitle(\"Duke\");"},{"lineNumber":30,"author":{"gitId":"Marc-97"},"content":"            stage.getIcons().add(appIconImage);"},{"lineNumber":31,"author":{"gitId":"Marc-97"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":32,"author":{"gitId":"Marc-97"},"content":"            stage.show();"},{"lineNumber":33,"author":{"gitId":"Marc-97"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"Marc-97"},"content":"            e.printStackTrace();"},{"lineNumber":35,"author":{"gitId":"Marc-97"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Marc-97"},"content":"}"}],"authorContributionMap":{"Marc-97":37}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":"import duke.task.Deadline;"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":"public class AddDeadlineCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":"    private Deadline deadline;"},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":11,"author":{"gitId":"Marc-97"},"content":"    public AddDeadlineCommand(Deadline deadline) {"},{"lineNumber":12,"author":{"gitId":"Marc-97"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":13,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":15,"author":{"gitId":"Marc-97"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"Marc-97"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":17,"author":{"gitId":"Marc-97"},"content":"        String message \u003d ui.getAddMessage(tasks, tasks.addTask(deadline));"},{"lineNumber":18,"author":{"gitId":"Marc-97"},"content":"        storage.save(tasks);"},{"lineNumber":19,"author":{"gitId":"Marc-97"},"content":"        return message;"},{"lineNumber":20,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Marc-97"},"content":"}"}],"authorContributionMap":{"Marc-97":21}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":"import duke.task.Event;"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":"public class AddEventCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":"    private Event event;"},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":11,"author":{"gitId":"Marc-97"},"content":"    public AddEventCommand(Event event) {"},{"lineNumber":12,"author":{"gitId":"Marc-97"},"content":"        this.event \u003d event;"},{"lineNumber":13,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":15,"author":{"gitId":"Marc-97"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"Marc-97"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":17,"author":{"gitId":"Marc-97"},"content":"        String message \u003d ui.getAddMessage(tasks, tasks.addTask(event));"},{"lineNumber":18,"author":{"gitId":"Marc-97"},"content":"        storage.save(tasks);"},{"lineNumber":19,"author":{"gitId":"Marc-97"},"content":"        return message;"},{"lineNumber":20,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Marc-97"},"content":"}"},{"lineNumber":22,"author":{"gitId":"Marc-97"},"content":""}],"authorContributionMap":{"Marc-97":22}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"import duke.task.Todo;"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":"public class AddTodoCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":"    private Todo todo;"},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":11,"author":{"gitId":"Marc-97"},"content":"    public AddTodoCommand(Todo todo) {"},{"lineNumber":12,"author":{"gitId":"Marc-97"},"content":"        this.todo \u003d todo;"},{"lineNumber":13,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":15,"author":{"gitId":"Marc-97"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"Marc-97"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":17,"author":{"gitId":"Marc-97"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"Marc-97"},"content":"            String message \u003d ui.getAddMessage(tasks, tasks.addTask(todo));"},{"lineNumber":19,"author":{"gitId":"Marc-97"},"content":"            storage.save(tasks);"},{"lineNumber":20,"author":{"gitId":"Marc-97"},"content":"            return message;"},{"lineNumber":21,"author":{"gitId":"Marc-97"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":22,"author":{"gitId":"Marc-97"},"content":"            return \"Please enter integer values..\";"},{"lineNumber":23,"author":{"gitId":"Marc-97"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Marc-97"},"content":"}"}],"authorContributionMap":{"Marc-97":25}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":"public class ByeCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":"    public ByeCommand() {"},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":11,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":13,"author":{"gitId":"Marc-97"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"Marc-97"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":15,"author":{"gitId":"Marc-97"},"content":"        return ui.getByeMessage();"},{"lineNumber":16,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Marc-97"},"content":"}"}],"authorContributionMap":{"Marc-97":17}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":"public abstract class Command {"},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage);"},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":"}"}],"authorContributionMap":{"Marc-97":9}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":"    private String index;"},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":"    public DeleteCommand(String index) {"},{"lineNumber":11,"author":{"gitId":"Marc-97"},"content":"        this.index \u003d index;"},{"lineNumber":12,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":14,"author":{"gitId":"Marc-97"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"Marc-97"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":16,"author":{"gitId":"Marc-97"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"Marc-97"},"content":"            String message \u003d ui.getRemoveMessage(tasks, tasks.removeTask(Integer.parseInt(index)));"},{"lineNumber":18,"author":{"gitId":"Marc-97"},"content":"            storage.save(tasks);"},{"lineNumber":19,"author":{"gitId":"Marc-97"},"content":"            return message;"},{"lineNumber":20,"author":{"gitId":"Marc-97"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":21,"author":{"gitId":"Marc-97"},"content":"            return \"Please enter integer values..\";"},{"lineNumber":22,"author":{"gitId":"Marc-97"},"content":"        } catch (DukeException ex) {"},{"lineNumber":23,"author":{"gitId":"Marc-97"},"content":"            return ex.getMessage();"},{"lineNumber":24,"author":{"gitId":"Marc-97"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Marc-97"},"content":"}"}],"authorContributionMap":{"Marc-97":26}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":"public class DoneCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":"    private String index;"},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":"    public DoneCommand(String index) {"},{"lineNumber":11,"author":{"gitId":"Marc-97"},"content":"        this.index \u003d index;"},{"lineNumber":12,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":14,"author":{"gitId":"Marc-97"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"Marc-97"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":16,"author":{"gitId":"Marc-97"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"Marc-97"},"content":"            String message \u003d ui.getMarkMessage(tasks.markDone(Integer.parseInt(index)));"},{"lineNumber":18,"author":{"gitId":"Marc-97"},"content":"            storage.save(tasks);"},{"lineNumber":19,"author":{"gitId":"Marc-97"},"content":"            return message;"},{"lineNumber":20,"author":{"gitId":"Marc-97"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":21,"author":{"gitId":"Marc-97"},"content":"            return \"Please enter integer values..\";"},{"lineNumber":22,"author":{"gitId":"Marc-97"},"content":"        } catch (DukeException ex) {"},{"lineNumber":23,"author":{"gitId":"Marc-97"},"content":"            return ex.getMessage();"},{"lineNumber":24,"author":{"gitId":"Marc-97"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Marc-97"},"content":"}"}],"authorContributionMap":{"Marc-97":26}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":"public class FindCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":"    private String args;"},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":"    public FindCommand(String args) {"},{"lineNumber":11,"author":{"gitId":"Marc-97"},"content":"        this.args \u003d args;"},{"lineNumber":12,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":14,"author":{"gitId":"Marc-97"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"Marc-97"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":16,"author":{"gitId":"Marc-97"},"content":"        return ui.getFoundMessage(tasks.findTask(this.args));"},{"lineNumber":17,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Marc-97"},"content":"}"}],"authorContributionMap":{"Marc-97":18}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":"public class ListCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":"    public ListCommand() {"},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":11,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":13,"author":{"gitId":"Marc-97"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"Marc-97"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":15,"author":{"gitId":"Marc-97"},"content":"        return ui.getListMessage(tasks);"},{"lineNumber":16,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Marc-97"},"content":"}"}],"authorContributionMap":{"Marc-97":17}},{"path":"src/main/java/duke/command/PrintCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":"public class PrintCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":"    private String message;"},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":"    public PrintCommand(String message) {"},{"lineNumber":11,"author":{"gitId":"Marc-97"},"content":"        this.message \u003d message;"},{"lineNumber":12,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":14,"author":{"gitId":"Marc-97"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"Marc-97"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":16,"author":{"gitId":"Marc-97"},"content":"        return this.message;"},{"lineNumber":17,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Marc-97"},"content":"}"}],"authorContributionMap":{"Marc-97":18}},{"path":"src/main/java/duke/command/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"import duke.storage.Storage;"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"import duke.ui.Ui;"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":"public class SortCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":"    public SortCommand() {"},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":11,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":13,"author":{"gitId":"Marc-97"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"Marc-97"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":15,"author":{"gitId":"Marc-97"},"content":"        tasks.sortListByDate();"},{"lineNumber":16,"author":{"gitId":"Marc-97"},"content":"        storage.save(tasks);"},{"lineNumber":17,"author":{"gitId":"Marc-97"},"content":"        return ui.getListMessage(tasks);"},{"lineNumber":18,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Marc-97"},"content":"}"}],"authorContributionMap":{"Marc-97":19}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":" * Custom exception class for Duke"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":"    public DukeException(String message) {"},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":"        super(message);"},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":"}"}],"authorContributionMap":{"Marc-97":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"import duke.command.AddDeadlineCommand;"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":"import duke.command.AddEventCommand;"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"import duke.command.AddTodoCommand;"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":"import duke.command.ByeCommand;"},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":"import duke.command.Command;"},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":"import duke.command.DoneCommand;"},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":"import duke.command.FindCommand;"},{"lineNumber":11,"author":{"gitId":"Marc-97"},"content":"import duke.command.ListCommand;"},{"lineNumber":12,"author":{"gitId":"Marc-97"},"content":"import duke.command.PrintCommand;"},{"lineNumber":13,"author":{"gitId":"Marc-97"},"content":"import duke.command.SortCommand;"},{"lineNumber":14,"author":{"gitId":"Marc-97"},"content":"import duke.exception.DukeException;"},{"lineNumber":15,"author":{"gitId":"Marc-97"},"content":"import duke.task.Deadline;"},{"lineNumber":16,"author":{"gitId":"Marc-97"},"content":"import duke.task.Event;"},{"lineNumber":17,"author":{"gitId":"Marc-97"},"content":"import duke.task.Todo;"},{"lineNumber":18,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":19,"author":{"gitId":"Marc-97"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"Marc-97"},"content":" * A parser for reading user input"},{"lineNumber":21,"author":{"gitId":"Marc-97"},"content":" */"},{"lineNumber":22,"author":{"gitId":"Marc-97"},"content":"public class Parser {"},{"lineNumber":23,"author":{"gitId":"Marc-97"},"content":"    private String msg;"},{"lineNumber":24,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":25,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Marc-97"},"content":"     * Constructor for \u003ccode\u003eParser\u003c/code\u003e."},{"lineNumber":27,"author":{"gitId":"Marc-97"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"Marc-97"},"content":"     * @param msg a string of input from user"},{"lineNumber":29,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"Marc-97"},"content":"    public Parser(String msg) {"},{"lineNumber":31,"author":{"gitId":"Marc-97"},"content":"        this.msg \u003d msg;"},{"lineNumber":32,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":34,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Marc-97"},"content":"     * Process msg and return the request (command) of the input."},{"lineNumber":36,"author":{"gitId":"Marc-97"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"Marc-97"},"content":"     * @return a string of request"},{"lineNumber":38,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"Marc-97"},"content":"    public String getRequest() {"},{"lineNumber":40,"author":{"gitId":"Marc-97"},"content":"        String[] token \u003d msg.split(\" \");"},{"lineNumber":41,"author":{"gitId":"Marc-97"},"content":"        return token[0];"},{"lineNumber":42,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":44,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"Marc-97"},"content":"     * Process msg and return the arguments of the input."},{"lineNumber":46,"author":{"gitId":"Marc-97"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"Marc-97"},"content":"     * @return a string of arguments"},{"lineNumber":48,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"Marc-97"},"content":"    public String getArgs() throws DukeException {"},{"lineNumber":50,"author":{"gitId":"Marc-97"},"content":"        String[] token \u003d msg.split(\" \");"},{"lineNumber":51,"author":{"gitId":"Marc-97"},"content":"        String args \u003d \"\";"},{"lineNumber":52,"author":{"gitId":"Marc-97"},"content":"        if (token.length \u003c\u003d 1) {"},{"lineNumber":53,"author":{"gitId":"Marc-97"},"content":"            throw new DukeException(\"Description is empty!\");"},{"lineNumber":54,"author":{"gitId":"Marc-97"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"Marc-97"},"content":"        for (int i \u003d 1; i \u003c token.length; i++) {"},{"lineNumber":56,"author":{"gitId":"Marc-97"},"content":"            args +\u003d token[i];"},{"lineNumber":57,"author":{"gitId":"Marc-97"},"content":"            if (i \u003c token.length - 1) {"},{"lineNumber":58,"author":{"gitId":"Marc-97"},"content":"                args +\u003d \" \";"},{"lineNumber":59,"author":{"gitId":"Marc-97"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"Marc-97"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"Marc-97"},"content":"        return args;"},{"lineNumber":62,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":64,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"Marc-97"},"content":"     * Process msg and return the formatted command of the input."},{"lineNumber":66,"author":{"gitId":"Marc-97"},"content":"     * This method return an String array of size 3."},{"lineNumber":67,"author":{"gitId":"Marc-97"},"content":"     * The first item represents the name of a task."},{"lineNumber":68,"author":{"gitId":"Marc-97"},"content":"     * The second item represents the date of a task."},{"lineNumber":69,"author":{"gitId":"Marc-97"},"content":"     * The third item represents the preposition of a task."},{"lineNumber":70,"author":{"gitId":"Marc-97"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"Marc-97"},"content":"     * @return an array consisting of name, date, preposition"},{"lineNumber":72,"author":{"gitId":"Marc-97"},"content":"     * @throws DukeException"},{"lineNumber":73,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"Marc-97"},"content":"    public String[] getFormattedCommand() throws DukeException {"},{"lineNumber":75,"author":{"gitId":"Marc-97"},"content":"        try {"},{"lineNumber":76,"author":{"gitId":"Marc-97"},"content":"            String args \u003d getArgs();"},{"lineNumber":77,"author":{"gitId":"Marc-97"},"content":"            String[] formattedArr \u003d new String[3];"},{"lineNumber":78,"author":{"gitId":"Marc-97"},"content":"            formattedArr[0] \u003d args.split(\" /\")[0];"},{"lineNumber":79,"author":{"gitId":"Marc-97"},"content":"            formattedArr[1] \u003d args.split(\"/\")[1].substring(args.split(\"/\")[1]"},{"lineNumber":80,"author":{"gitId":"Marc-97"},"content":"                    .split(\" \")[0].length() + 1, args.split(\"/\")[1].length());"},{"lineNumber":81,"author":{"gitId":"Marc-97"},"content":"            formattedArr[2] \u003d args.split(\"/\")[1].split(\" \")[0];"},{"lineNumber":82,"author":{"gitId":"Marc-97"},"content":"            return formattedArr;"},{"lineNumber":83,"author":{"gitId":"Marc-97"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":84,"author":{"gitId":"Marc-97"},"content":"            throw new DukeException(\"☹ OOPS!!! The format you have entered is wrong.\");"},{"lineNumber":85,"author":{"gitId":"Marc-97"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":88,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"Marc-97"},"content":"     * Parse msg and return the requested command"},{"lineNumber":90,"author":{"gitId":"Marc-97"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"Marc-97"},"content":"     * @return a command for executing"},{"lineNumber":92,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"Marc-97"},"content":"    public Command parse() {"},{"lineNumber":94,"author":{"gitId":"Marc-97"},"content":"        UserRequest request;"},{"lineNumber":95,"author":{"gitId":"Marc-97"},"content":"        try {"},{"lineNumber":96,"author":{"gitId":"Marc-97"},"content":"            request \u003d UserRequest.valueOf(getRequest().trim().toUpperCase());"},{"lineNumber":97,"author":{"gitId":"Marc-97"},"content":"        } catch (IllegalArgumentException ex) {"},{"lineNumber":98,"author":{"gitId":"Marc-97"},"content":"            request \u003d UserRequest.INVALID;"},{"lineNumber":99,"author":{"gitId":"Marc-97"},"content":"        } catch (NullPointerException ex) {"},{"lineNumber":100,"author":{"gitId":"Marc-97"},"content":"            request \u003d UserRequest.INVALID;"},{"lineNumber":101,"author":{"gitId":"Marc-97"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"Marc-97"},"content":"        switch (request) {"},{"lineNumber":103,"author":{"gitId":"Marc-97"},"content":"        case BYE:"},{"lineNumber":104,"author":{"gitId":"Marc-97"},"content":"            return new ByeCommand();"},{"lineNumber":105,"author":{"gitId":"Marc-97"},"content":"        case LIST:"},{"lineNumber":106,"author":{"gitId":"Marc-97"},"content":"            return new ListCommand();"},{"lineNumber":107,"author":{"gitId":"Marc-97"},"content":"        case DONE:"},{"lineNumber":108,"author":{"gitId":"Marc-97"},"content":"            try {"},{"lineNumber":109,"author":{"gitId":"Marc-97"},"content":"                return new DoneCommand(getArgs());"},{"lineNumber":110,"author":{"gitId":"Marc-97"},"content":"            } catch (DukeException ex) {"},{"lineNumber":111,"author":{"gitId":"Marc-97"},"content":"                return new PrintCommand(ex.getMessage());"},{"lineNumber":112,"author":{"gitId":"Marc-97"},"content":"            }"},{"lineNumber":113,"author":{"gitId":"Marc-97"},"content":"        case DELETE:"},{"lineNumber":114,"author":{"gitId":"Marc-97"},"content":"            try {"},{"lineNumber":115,"author":{"gitId":"Marc-97"},"content":"                return new DeleteCommand(getArgs());"},{"lineNumber":116,"author":{"gitId":"Marc-97"},"content":"            } catch (DukeException ex) {"},{"lineNumber":117,"author":{"gitId":"Marc-97"},"content":"                return new PrintCommand(ex.getMessage());"},{"lineNumber":118,"author":{"gitId":"Marc-97"},"content":"            }"},{"lineNumber":119,"author":{"gitId":"Marc-97"},"content":"        case TODO:"},{"lineNumber":120,"author":{"gitId":"Marc-97"},"content":"            try {"},{"lineNumber":121,"author":{"gitId":"Marc-97"},"content":"                return new AddTodoCommand(new Todo(getArgs()));"},{"lineNumber":122,"author":{"gitId":"Marc-97"},"content":"            } catch (DukeException ex) {"},{"lineNumber":123,"author":{"gitId":"Marc-97"},"content":"                return new PrintCommand(ex.getMessage());"},{"lineNumber":124,"author":{"gitId":"Marc-97"},"content":"            }"},{"lineNumber":125,"author":{"gitId":"Marc-97"},"content":"        case DEADLINE:"},{"lineNumber":126,"author":{"gitId":"Marc-97"},"content":"            try {"},{"lineNumber":127,"author":{"gitId":"Marc-97"},"content":"                String[] deadlineStr \u003d getFormattedCommand();"},{"lineNumber":128,"author":{"gitId":"Marc-97"},"content":"                assert(!deadlineStr[0].isEmpty());"},{"lineNumber":129,"author":{"gitId":"Marc-97"},"content":"                assert(!deadlineStr[1].isEmpty());"},{"lineNumber":130,"author":{"gitId":"Marc-97"},"content":"                assert(!deadlineStr[2].isEmpty());"},{"lineNumber":131,"author":{"gitId":"Marc-97"},"content":"                return new AddDeadlineCommand("},{"lineNumber":132,"author":{"gitId":"Marc-97"},"content":"                        new Deadline(deadlineStr[0], deadlineStr[1], deadlineStr[2]));"},{"lineNumber":133,"author":{"gitId":"Marc-97"},"content":"            } catch (DukeException ex) {"},{"lineNumber":134,"author":{"gitId":"Marc-97"},"content":"                return new PrintCommand(ex.getMessage());"},{"lineNumber":135,"author":{"gitId":"Marc-97"},"content":"            }"},{"lineNumber":136,"author":{"gitId":"Marc-97"},"content":"        case EVENT:"},{"lineNumber":137,"author":{"gitId":"Marc-97"},"content":"            try {"},{"lineNumber":138,"author":{"gitId":"Marc-97"},"content":"                String[] eventStr \u003d getFormattedCommand();"},{"lineNumber":139,"author":{"gitId":"Marc-97"},"content":"                assert(!eventStr[0].isEmpty());"},{"lineNumber":140,"author":{"gitId":"Marc-97"},"content":"                assert(!eventStr[1].isEmpty());"},{"lineNumber":141,"author":{"gitId":"Marc-97"},"content":"                assert(!eventStr[2].isEmpty());"},{"lineNumber":142,"author":{"gitId":"Marc-97"},"content":"                return new AddEventCommand("},{"lineNumber":143,"author":{"gitId":"Marc-97"},"content":"                        new Event(eventStr[0], eventStr[1], eventStr[2]));"},{"lineNumber":144,"author":{"gitId":"Marc-97"},"content":"            } catch (DukeException ex) {"},{"lineNumber":145,"author":{"gitId":"Marc-97"},"content":"                return new PrintCommand(ex.getMessage());"},{"lineNumber":146,"author":{"gitId":"Marc-97"},"content":"            }"},{"lineNumber":147,"author":{"gitId":"Marc-97"},"content":"        case FIND:"},{"lineNumber":148,"author":{"gitId":"Marc-97"},"content":"            try {"},{"lineNumber":149,"author":{"gitId":"Marc-97"},"content":"                return new FindCommand(getArgs());"},{"lineNumber":150,"author":{"gitId":"Marc-97"},"content":"            } catch (DukeException ex) {"},{"lineNumber":151,"author":{"gitId":"Marc-97"},"content":"                return new PrintCommand(ex.getMessage());"},{"lineNumber":152,"author":{"gitId":"Marc-97"},"content":"            }"},{"lineNumber":153,"author":{"gitId":"Marc-97"},"content":"        case SORT:"},{"lineNumber":154,"author":{"gitId":"Marc-97"},"content":"            return new SortCommand();"},{"lineNumber":155,"author":{"gitId":"Marc-97"},"content":"        default:"},{"lineNumber":156,"author":{"gitId":"Marc-97"},"content":"            return new PrintCommand(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":157,"author":{"gitId":"Marc-97"},"content":"        }"},{"lineNumber":158,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"Marc-97"},"content":"}"}],"authorContributionMap":{"Marc-97":159}},{"path":"src/main/java/duke/parser/UserRequest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"public enum UserRequest {"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":"    TODO,"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"    DEADLINE,"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":"    EVENT,"},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":"    DONE,"},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":"    LIST,"},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":"    FIND,"},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":"    DELETE,"},{"lineNumber":11,"author":{"gitId":"Marc-97"},"content":"    BYE,"},{"lineNumber":12,"author":{"gitId":"Marc-97"},"content":"    INVALID,"},{"lineNumber":13,"author":{"gitId":"Marc-97"},"content":"    SORT"},{"lineNumber":14,"author":{"gitId":"Marc-97"},"content":"}"}],"authorContributionMap":{"Marc-97":14}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":"import java.util.LinkedList;"},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":"import duke.exception.DukeException;"},{"lineNumber":11,"author":{"gitId":"Marc-97"},"content":"import duke.task.Deadline;"},{"lineNumber":12,"author":{"gitId":"Marc-97"},"content":"import duke.task.Event;"},{"lineNumber":13,"author":{"gitId":"Marc-97"},"content":"import duke.task.Task;"},{"lineNumber":14,"author":{"gitId":"Marc-97"},"content":"import duke.task.TaskList;"},{"lineNumber":15,"author":{"gitId":"Marc-97"},"content":"import duke.task.Todo;"},{"lineNumber":16,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":17,"author":{"gitId":"Marc-97"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"Marc-97"},"content":" * A class for handling saving and loading of data."},{"lineNumber":19,"author":{"gitId":"Marc-97"},"content":" */"},{"lineNumber":20,"author":{"gitId":"Marc-97"},"content":"public class Storage {"},{"lineNumber":21,"author":{"gitId":"Marc-97"},"content":"    private File saveFile;"},{"lineNumber":22,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":23,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Marc-97"},"content":"     * Constructor for \u003ccode\u003eStorage\u003c/code\u003e."},{"lineNumber":25,"author":{"gitId":"Marc-97"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"Marc-97"},"content":"     * @param filePath a path where the file is to be saved or loaded"},{"lineNumber":27,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"Marc-97"},"content":"    public Storage(String filePath) {"},{"lineNumber":29,"author":{"gitId":"Marc-97"},"content":"        saveFile \u003d new File(filePath);"},{"lineNumber":30,"author":{"gitId":"Marc-97"},"content":"        String[] token \u003d filePath.split(\"/\");"},{"lineNumber":31,"author":{"gitId":"Marc-97"},"content":"        String directoryPath \u003d \"\";"},{"lineNumber":32,"author":{"gitId":"Marc-97"},"content":"        for (int i \u003d 0; i \u003c token.length - 1; i++) {"},{"lineNumber":33,"author":{"gitId":"Marc-97"},"content":"            directoryPath +\u003d token[i] + \"/\";"},{"lineNumber":34,"author":{"gitId":"Marc-97"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"Marc-97"},"content":"        File directory \u003d new File(directoryPath);"},{"lineNumber":36,"author":{"gitId":"Marc-97"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"Marc-97"},"content":"            if (!directory.exists()) {"},{"lineNumber":38,"author":{"gitId":"Marc-97"},"content":"                directory.mkdirs();"},{"lineNumber":39,"author":{"gitId":"Marc-97"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"Marc-97"},"content":"            saveFile.createNewFile();"},{"lineNumber":41,"author":{"gitId":"Marc-97"},"content":"        } catch (IOException ex) {"},{"lineNumber":42,"author":{"gitId":"Marc-97"},"content":"            ex.printStackTrace();"},{"lineNumber":43,"author":{"gitId":"Marc-97"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":46,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"Marc-97"},"content":"     * Save \u003ccode\u003eTaskList\u003c/code\u003e by writing to a file."},{"lineNumber":48,"author":{"gitId":"Marc-97"},"content":"     * This method will iterate through \u003ccode\u003eTaskFile\u003c/code\u003e and save it"},{"lineNumber":49,"author":{"gitId":"Marc-97"},"content":"     * into a text file."},{"lineNumber":50,"author":{"gitId":"Marc-97"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"Marc-97"},"content":"     * @param tasks the TaskList needed to save"},{"lineNumber":52,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"Marc-97"},"content":"    public void save(TaskList tasks) {"},{"lineNumber":54,"author":{"gitId":"Marc-97"},"content":"        List\u003cTask\u003e list \u003d tasks.getList();"},{"lineNumber":55,"author":{"gitId":"Marc-97"},"content":"        try {"},{"lineNumber":56,"author":{"gitId":"Marc-97"},"content":"            FileWriter fileWriter \u003d new FileWriter(saveFile);"},{"lineNumber":57,"author":{"gitId":"Marc-97"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":58,"author":{"gitId":"Marc-97"},"content":"                Task task \u003d list.get(i);"},{"lineNumber":59,"author":{"gitId":"Marc-97"},"content":"                fileWriter.write(task.toSaveFormat());"},{"lineNumber":60,"author":{"gitId":"Marc-97"},"content":"                fileWriter.write(\"\\n\");"},{"lineNumber":61,"author":{"gitId":"Marc-97"},"content":"                fileWriter.flush();"},{"lineNumber":62,"author":{"gitId":"Marc-97"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"Marc-97"},"content":"        } catch (IOException ex) {"},{"lineNumber":64,"author":{"gitId":"Marc-97"},"content":"            ex.printStackTrace();"},{"lineNumber":65,"author":{"gitId":"Marc-97"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":68,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"Marc-97"},"content":"     * Return a LinkedList of \u003ccode\u003eTask\u003c/code\u003e by reading from a file."},{"lineNumber":70,"author":{"gitId":"Marc-97"},"content":"     * This method will read through the saved file and return a list of \u003ccode\u003eTask\u003c/code\u003e."},{"lineNumber":71,"author":{"gitId":"Marc-97"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"Marc-97"},"content":"     * @return LinkedList of Task"},{"lineNumber":73,"author":{"gitId":"Marc-97"},"content":"     * @throws DukeException"},{"lineNumber":74,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"Marc-97"},"content":"    public LinkedList\u003cTask\u003e load() throws DukeException {"},{"lineNumber":76,"author":{"gitId":"Marc-97"},"content":"        try {"},{"lineNumber":77,"author":{"gitId":"Marc-97"},"content":"            LinkedList\u003cTask\u003e list \u003d new LinkedList\u003c\u003e();"},{"lineNumber":78,"author":{"gitId":"Marc-97"},"content":"            if (!saveFile.exists()) {"},{"lineNumber":79,"author":{"gitId":"Marc-97"},"content":"                return list;"},{"lineNumber":80,"author":{"gitId":"Marc-97"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"Marc-97"},"content":"            Scanner reader \u003d new Scanner(saveFile);"},{"lineNumber":82,"author":{"gitId":"Marc-97"},"content":"            while (reader.hasNextLine()) {"},{"lineNumber":83,"author":{"gitId":"Marc-97"},"content":"                String line \u003d reader.nextLine();"},{"lineNumber":84,"author":{"gitId":"Marc-97"},"content":"                String[] token \u003d line.split(\" \\\\| \");"},{"lineNumber":85,"author":{"gitId":"Marc-97"},"content":"                Task task;"},{"lineNumber":86,"author":{"gitId":"Marc-97"},"content":"                if (token[0].equals(\"T\")) {"},{"lineNumber":87,"author":{"gitId":"Marc-97"},"content":"                    task \u003d new Todo(token[2]);"},{"lineNumber":88,"author":{"gitId":"Marc-97"},"content":"                } else if (token[0].equals(\"E\")) {"},{"lineNumber":89,"author":{"gitId":"Marc-97"},"content":"                    task \u003d new Event(token[2], token[3], token[4]);"},{"lineNumber":90,"author":{"gitId":"Marc-97"},"content":"                } else if (token[0].equals(\"D\")) {"},{"lineNumber":91,"author":{"gitId":"Marc-97"},"content":"                    task \u003d new Deadline(token[2], token[3], token[4]);"},{"lineNumber":92,"author":{"gitId":"Marc-97"},"content":"                } else {"},{"lineNumber":93,"author":{"gitId":"Marc-97"},"content":"                    throw new DukeException(\"Save file is corrupted ): Will be creating a new file\");"},{"lineNumber":94,"author":{"gitId":"Marc-97"},"content":"                }"},{"lineNumber":95,"author":{"gitId":"Marc-97"},"content":"                if (token[1].equals(\"1\")) {"},{"lineNumber":96,"author":{"gitId":"Marc-97"},"content":"                    task.setDone();"},{"lineNumber":97,"author":{"gitId":"Marc-97"},"content":"                }"},{"lineNumber":98,"author":{"gitId":"Marc-97"},"content":"                list.add(task);"},{"lineNumber":99,"author":{"gitId":"Marc-97"},"content":"            }"},{"lineNumber":100,"author":{"gitId":"Marc-97"},"content":"            return list;"},{"lineNumber":101,"author":{"gitId":"Marc-97"},"content":"        } catch (IOException ex) {"},{"lineNumber":102,"author":{"gitId":"Marc-97"},"content":"            ex.printStackTrace();"},{"lineNumber":103,"author":{"gitId":"Marc-97"},"content":"        } catch (ArrayIndexOutOfBoundsException ex) {"},{"lineNumber":104,"author":{"gitId":"Marc-97"},"content":"            throw new DukeException(\"Save file is corrupted ): Will be creating a new file\");"},{"lineNumber":105,"author":{"gitId":"Marc-97"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"Marc-97"},"content":"        return new LinkedList\u003c\u003e();"},{"lineNumber":107,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"Marc-97"},"content":"}"}],"authorContributionMap":{"Marc-97":108}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":"import duke.exception.DukeException;"},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":"    private LocalDate date;"},{"lineNumber":11,"author":{"gitId":"Marc-97"},"content":"    private String preposition;"},{"lineNumber":12,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":13,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Marc-97"},"content":"     * Constructor for deadline"},{"lineNumber":15,"author":{"gitId":"Marc-97"},"content":"     * @param taskName"},{"lineNumber":16,"author":{"gitId":"Marc-97"},"content":"     * @param date"},{"lineNumber":17,"author":{"gitId":"Marc-97"},"content":"     * @param preposition"},{"lineNumber":18,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"Marc-97"},"content":"    public Deadline(String taskName, String date, String preposition) throws DukeException {"},{"lineNumber":20,"author":{"gitId":"Marc-97"},"content":"        super(taskName);"},{"lineNumber":21,"author":{"gitId":"Marc-97"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"Marc-97"},"content":"            this.date \u003d LocalDate.parse(date);"},{"lineNumber":23,"author":{"gitId":"Marc-97"},"content":"        } catch (DateTimeParseException ex) {"},{"lineNumber":24,"author":{"gitId":"Marc-97"},"content":"            throw new DukeException(\"Please enter a valid date format! YYYY-MM-DD\");"},{"lineNumber":25,"author":{"gitId":"Marc-97"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"Marc-97"},"content":"        this.preposition \u003d preposition;"},{"lineNumber":27,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":29,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Marc-97"},"content":"     * Getter method for date"},{"lineNumber":31,"author":{"gitId":"Marc-97"},"content":"     * @return"},{"lineNumber":32,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Marc-97"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"Marc-97"},"content":"    public LocalDate getDate() {"},{"lineNumber":35,"author":{"gitId":"Marc-97"},"content":"        return date;"},{"lineNumber":36,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":38,"author":{"gitId":"Marc-97"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"Marc-97"},"content":"    public String toString() {"},{"lineNumber":40,"author":{"gitId":"Marc-97"},"content":"        return String.format(\"[%s][%s] %s (%s: %s)\","},{"lineNumber":41,"author":{"gitId":"Marc-97"},"content":"                \"D\","},{"lineNumber":42,"author":{"gitId":"Marc-97"},"content":"                super.isDone() ? \"X\" : \" \","},{"lineNumber":43,"author":{"gitId":"Marc-97"},"content":"                super.getName(),"},{"lineNumber":44,"author":{"gitId":"Marc-97"},"content":"                preposition,"},{"lineNumber":45,"author":{"gitId":"Marc-97"},"content":"                date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"},{"lineNumber":46,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":48,"author":{"gitId":"Marc-97"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"Marc-97"},"content":"    public String toSaveFormat() {"},{"lineNumber":50,"author":{"gitId":"Marc-97"},"content":"        return String.format(\"%s | %s | %s | %s | %s\","},{"lineNumber":51,"author":{"gitId":"Marc-97"},"content":"                \"D\","},{"lineNumber":52,"author":{"gitId":"Marc-97"},"content":"                super.isDone() ? \"1\" : 0,"},{"lineNumber":53,"author":{"gitId":"Marc-97"},"content":"                super.getName(),"},{"lineNumber":54,"author":{"gitId":"Marc-97"},"content":"                this.date,"},{"lineNumber":55,"author":{"gitId":"Marc-97"},"content":"                this.preposition);"},{"lineNumber":56,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"Marc-97"},"content":"}"}],"authorContributionMap":{"Marc-97":57}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":"import duke.exception.DukeException;"},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":"    private LocalDate date;"},{"lineNumber":11,"author":{"gitId":"Marc-97"},"content":"    private String preposition;"},{"lineNumber":12,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":13,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Marc-97"},"content":"     * Constructor for event"},{"lineNumber":15,"author":{"gitId":"Marc-97"},"content":"     * @param taskName"},{"lineNumber":16,"author":{"gitId":"Marc-97"},"content":"     * @param date"},{"lineNumber":17,"author":{"gitId":"Marc-97"},"content":"     * @param preposition"},{"lineNumber":18,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"Marc-97"},"content":"    public Event(String taskName, String date, String preposition) throws DukeException {"},{"lineNumber":20,"author":{"gitId":"Marc-97"},"content":"        super(taskName);"},{"lineNumber":21,"author":{"gitId":"Marc-97"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"Marc-97"},"content":"            this.date \u003d LocalDate.parse(date);"},{"lineNumber":23,"author":{"gitId":"Marc-97"},"content":"        } catch (DateTimeParseException ex) {"},{"lineNumber":24,"author":{"gitId":"Marc-97"},"content":"            throw new DukeException(\"Please enter a valid date format! YYYY-MM-DD\");"},{"lineNumber":25,"author":{"gitId":"Marc-97"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"Marc-97"},"content":"        this.preposition \u003d preposition;"},{"lineNumber":27,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":29,"author":{"gitId":"Marc-97"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"Marc-97"},"content":"    public String toString() {"},{"lineNumber":31,"author":{"gitId":"Marc-97"},"content":"        return String.format(\"[%s][%s] %s (%s: %s)\","},{"lineNumber":32,"author":{"gitId":"Marc-97"},"content":"                \"E\","},{"lineNumber":33,"author":{"gitId":"Marc-97"},"content":"                super.isDone() ? \"X\" : \" \","},{"lineNumber":34,"author":{"gitId":"Marc-97"},"content":"                super.getName(),"},{"lineNumber":35,"author":{"gitId":"Marc-97"},"content":"                preposition,"},{"lineNumber":36,"author":{"gitId":"Marc-97"},"content":"                date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));"},{"lineNumber":37,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":39,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"Marc-97"},"content":"     * Getter method for date"},{"lineNumber":41,"author":{"gitId":"Marc-97"},"content":"     * @return"},{"lineNumber":42,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"Marc-97"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"Marc-97"},"content":"    public LocalDate getDate() {"},{"lineNumber":45,"author":{"gitId":"Marc-97"},"content":"        return date;"},{"lineNumber":46,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":48,"author":{"gitId":"Marc-97"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"Marc-97"},"content":"    public String toSaveFormat() {"},{"lineNumber":50,"author":{"gitId":"Marc-97"},"content":"        return String.format(\"%s | %s | %s | %s | %s\","},{"lineNumber":51,"author":{"gitId":"Marc-97"},"content":"                \"E\","},{"lineNumber":52,"author":{"gitId":"Marc-97"},"content":"                super.isDone() ? \"1\" : 0,"},{"lineNumber":53,"author":{"gitId":"Marc-97"},"content":"                super.getName(),"},{"lineNumber":54,"author":{"gitId":"Marc-97"},"content":"                this.date,"},{"lineNumber":55,"author":{"gitId":"Marc-97"},"content":"                this.preposition);"},{"lineNumber":56,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"Marc-97"},"content":"}"}],"authorContributionMap":{"Marc-97":57}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":" * Represents a task. A \u003ccode\u003eTask\u003c/code\u003e consist of"},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":" * name, type (todo, event, deadline), status and deadline (if applicable)."},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":"public class Task {"},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":"    private String name;"},{"lineNumber":11,"author":{"gitId":"Marc-97"},"content":"    private boolean isDone;"},{"lineNumber":12,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":13,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Marc-97"},"content":"     * Task constructor for todo."},{"lineNumber":15,"author":{"gitId":"Marc-97"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"Marc-97"},"content":"     * @param name name of the task"},{"lineNumber":17,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"Marc-97"},"content":"    public Task(String name) {"},{"lineNumber":19,"author":{"gitId":"Marc-97"},"content":"        this.name \u003d name;"},{"lineNumber":20,"author":{"gitId":"Marc-97"},"content":"        this.isDone \u003d false;"},{"lineNumber":21,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":23,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Marc-97"},"content":"     * Getter method for status."},{"lineNumber":25,"author":{"gitId":"Marc-97"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"Marc-97"},"content":"     * @return the status of the \u003ccode\u003eTask\u003c/code\u003e"},{"lineNumber":27,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"Marc-97"},"content":"    public boolean getDone() {"},{"lineNumber":29,"author":{"gitId":"Marc-97"},"content":"        return isDone;"},{"lineNumber":30,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":32,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"Marc-97"},"content":"     * Getter method for name."},{"lineNumber":34,"author":{"gitId":"Marc-97"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"Marc-97"},"content":"     * @return the name of the \u003ccode\u003eTask\u003c/code\u003e"},{"lineNumber":36,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"Marc-97"},"content":"    public String getName() {"},{"lineNumber":38,"author":{"gitId":"Marc-97"},"content":"        return name;"},{"lineNumber":39,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":41,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"Marc-97"},"content":"     * Setter method for status."},{"lineNumber":43,"author":{"gitId":"Marc-97"},"content":"     * This method set the \u003ccode\u003eTask\u003c/code\u003e status to done."},{"lineNumber":44,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"Marc-97"},"content":"    public void setDone() {"},{"lineNumber":46,"author":{"gitId":"Marc-97"},"content":"        this.isDone \u003d true;"},{"lineNumber":47,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":49,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"Marc-97"},"content":"     * Getter method for isDone."},{"lineNumber":51,"author":{"gitId":"Marc-97"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"Marc-97"},"content":"     * @return the name of the \u003ccode\u003eTask\u003c/code\u003e"},{"lineNumber":53,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"Marc-97"},"content":"    public boolean isDone() {"},{"lineNumber":55,"author":{"gitId":"Marc-97"},"content":"        return isDone;"},{"lineNumber":56,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":58,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"Marc-97"},"content":"     * Returns a readable string representing the task that can"},{"lineNumber":60,"author":{"gitId":"Marc-97"},"content":"     * be used for outputting to user."},{"lineNumber":61,"author":{"gitId":"Marc-97"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"Marc-97"},"content":"     * @return a representative string of \u003ccode\u003eTask\u003c/code\u003e"},{"lineNumber":63,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"Marc-97"},"content":"    @Override"},{"lineNumber":65,"author":{"gitId":"Marc-97"},"content":"    public String toString() {"},{"lineNumber":66,"author":{"gitId":"Marc-97"},"content":"        return String.format(\"[%s][%s] %s\","},{"lineNumber":67,"author":{"gitId":"Marc-97"},"content":"                \"T\","},{"lineNumber":68,"author":{"gitId":"Marc-97"},"content":"                isDone ? \"X\" : \" \","},{"lineNumber":69,"author":{"gitId":"Marc-97"},"content":"                name);"},{"lineNumber":70,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":72,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"Marc-97"},"content":"     * Returns a formatted representative of \u003ccode\u003eTask\u003c/code\u003e."},{"lineNumber":74,"author":{"gitId":"Marc-97"},"content":"     * Fields of \u003ccode\u003eTask\u003c/code\u003e will be formatted with delimiters for"},{"lineNumber":75,"author":{"gitId":"Marc-97"},"content":"     * writing to text file."},{"lineNumber":76,"author":{"gitId":"Marc-97"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"Marc-97"},"content":"     * @return a string that is formatted for writing"},{"lineNumber":78,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"Marc-97"},"content":"    public String toSaveFormat() {"},{"lineNumber":80,"author":{"gitId":"Marc-97"},"content":"        return String.format(\"%s | %s | %s\","},{"lineNumber":81,"author":{"gitId":"Marc-97"},"content":"                \"T\","},{"lineNumber":82,"author":{"gitId":"Marc-97"},"content":"                isDone ? \"1\" : 0,"},{"lineNumber":83,"author":{"gitId":"Marc-97"},"content":"                this.name);"},{"lineNumber":84,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":86,"author":{"gitId":"Marc-97"},"content":"    public LocalDate getDate() {"},{"lineNumber":87,"author":{"gitId":"Marc-97"},"content":"        return null;"},{"lineNumber":88,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"Marc-97"},"content":"}"}],"authorContributionMap":{"Marc-97":89}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"import java.util.Comparator;"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":"import java.util.LinkedList;"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":"import duke.exception.DukeException;"},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":" * Represents a list of task."},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Marc-97"},"content":"public class TaskList {"},{"lineNumber":12,"author":{"gitId":"Marc-97"},"content":"    private LinkedList\u003cTask\u003e list;"},{"lineNumber":13,"author":{"gitId":"Marc-97"},"content":"    private Comparator\u003cTask\u003e compareDate;"},{"lineNumber":14,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Marc-97"},"content":"     * Constructor for \u003ccode\u003eTaskList\u003c/code\u003e."},{"lineNumber":16,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"Marc-97"},"content":"    public TaskList() {"},{"lineNumber":18,"author":{"gitId":"Marc-97"},"content":"        this.list \u003d new LinkedList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"Marc-97"},"content":"        initComparator();"},{"lineNumber":20,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":22,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Marc-97"},"content":"     * Overloaded constructor for \u003ccode\u003eTaskList\u003c/code\u003e."},{"lineNumber":24,"author":{"gitId":"Marc-97"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"Marc-97"},"content":"     * @param list a LinkedList that contains \u003ccode\u003eTask\u003c/code\u003e"},{"lineNumber":26,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Marc-97"},"content":"    public TaskList(LinkedList\u003cTask\u003e list) {"},{"lineNumber":28,"author":{"gitId":"Marc-97"},"content":"        this.list \u003d new LinkedList\u003cTask\u003e(list);"},{"lineNumber":29,"author":{"gitId":"Marc-97"},"content":"        initComparator();"},{"lineNumber":30,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":32,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"Marc-97"},"content":"     * Adds a \u003ccode\u003eTask\u003c/code\u003e into \u003ccode\u003eTaskList\u003c/code\u003e."},{"lineNumber":34,"author":{"gitId":"Marc-97"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"Marc-97"},"content":"     * @param task a task to be added"},{"lineNumber":36,"author":{"gitId":"Marc-97"},"content":"     * @return the task that is added"},{"lineNumber":37,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"Marc-97"},"content":"    public Task addTask(Task task) {"},{"lineNumber":39,"author":{"gitId":"Marc-97"},"content":"        list.add(task);"},{"lineNumber":40,"author":{"gitId":"Marc-97"},"content":"        return task;"},{"lineNumber":41,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":43,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"Marc-97"},"content":"     * Removes a \u003ccode\u003eTask\u003c/code\u003e from \u003ccode\u003eTaskList\u003c/code\u003e."},{"lineNumber":45,"author":{"gitId":"Marc-97"},"content":"     * This method will remove a \u003ccode\u003eTask\u003c/code\u003e by the position in \u003ccode\u003eTaskList\u003c/code\u003e"},{"lineNumber":46,"author":{"gitId":"Marc-97"},"content":"     * and return the removed task."},{"lineNumber":47,"author":{"gitId":"Marc-97"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"Marc-97"},"content":"     * @param pos the position of the task to be removed (1-indexed)"},{"lineNumber":49,"author":{"gitId":"Marc-97"},"content":"     * @return the task that is removed"},{"lineNumber":50,"author":{"gitId":"Marc-97"},"content":"     * @throws DukeException"},{"lineNumber":51,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"Marc-97"},"content":"    public Task removeTask(int pos) throws DukeException {"},{"lineNumber":53,"author":{"gitId":"Marc-97"},"content":"        if (pos \u003e list.size() || pos \u003c 0) {"},{"lineNumber":54,"author":{"gitId":"Marc-97"},"content":"            throw new DukeException("},{"lineNumber":55,"author":{"gitId":"Marc-97"},"content":"                    String.format(\"Tried to delete nothing ????. (Size: %d | Task No: %d)\", list.size(), pos));"},{"lineNumber":56,"author":{"gitId":"Marc-97"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"Marc-97"},"content":"        Task task \u003d this.list.remove(pos - 1);"},{"lineNumber":58,"author":{"gitId":"Marc-97"},"content":"        return task;"},{"lineNumber":59,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":61,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"Marc-97"},"content":"     * Marks a \u003ccode\u003eTask\u003c/code\u003e as done."},{"lineNumber":63,"author":{"gitId":"Marc-97"},"content":"     * This method will mark a \u003ccode\u003eTask\u003c/code\u003e done by the position in \u003ccode\u003eTaskList\u003c/code\u003e and"},{"lineNumber":64,"author":{"gitId":"Marc-97"},"content":"     * return the task that is marked."},{"lineNumber":65,"author":{"gitId":"Marc-97"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"Marc-97"},"content":"     * @param pos the position of the task to be marked (1-indexed)"},{"lineNumber":67,"author":{"gitId":"Marc-97"},"content":"     * @return the task that is marked"},{"lineNumber":68,"author":{"gitId":"Marc-97"},"content":"     * @throws DukeException"},{"lineNumber":69,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"Marc-97"},"content":"    public Task markDone(int pos) throws DukeException {"},{"lineNumber":71,"author":{"gitId":"Marc-97"},"content":"        if (pos \u003e this.list.size() || pos \u003c 0) {"},{"lineNumber":72,"author":{"gitId":"Marc-97"},"content":"            throw new DukeException("},{"lineNumber":73,"author":{"gitId":"Marc-97"},"content":"                    String.format(\"Tried to mark nothing ????. (Size: %d | Task No: %d)\", list.size(), pos));"},{"lineNumber":74,"author":{"gitId":"Marc-97"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"Marc-97"},"content":"        this.list.get(pos - 1).setDone();"},{"lineNumber":76,"author":{"gitId":"Marc-97"},"content":"        return this.list.get(pos - 1);"},{"lineNumber":77,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":79,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"Marc-97"},"content":"     * Returns a LinkedList of all tasks in \u003ccode\u003eTaskList\u003c/code\u003e."},{"lineNumber":81,"author":{"gitId":"Marc-97"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"Marc-97"},"content":"     * @return a LinkedList of tasks"},{"lineNumber":83,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"Marc-97"},"content":"    public LinkedList\u003cTask\u003e getList() {"},{"lineNumber":85,"author":{"gitId":"Marc-97"},"content":"        return this.list;"},{"lineNumber":86,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":88,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"Marc-97"},"content":"     * Search for all the \u003ccode\u003eTask\u003c/code\u003e and return a \u003ccode\u003eTaskList\u003c/code\u003e"},{"lineNumber":90,"author":{"gitId":"Marc-97"},"content":"     * Search for all the \u003ccode\u003eTask\u003c/code\u003e in \u003ccode\u003eTaskList\u003c/code\u003e that contains a series of character."},{"lineNumber":91,"author":{"gitId":"Marc-97"},"content":"     * Return a new \u003ccode\u003eTaskList\u003c/code\u003e"},{"lineNumber":92,"author":{"gitId":"Marc-97"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"Marc-97"},"content":"     * @param str a series of character to use for finding"},{"lineNumber":94,"author":{"gitId":"Marc-97"},"content":"     * @return a new TaskList containing all the found \u003ccode\u003eTask\u003c/code\u003e"},{"lineNumber":95,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"Marc-97"},"content":"    public TaskList findTask(String str) {"},{"lineNumber":97,"author":{"gitId":"Marc-97"},"content":"        LinkedList\u003cTask\u003e foundList \u003d new LinkedList\u003c\u003e();"},{"lineNumber":98,"author":{"gitId":"Marc-97"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":99,"author":{"gitId":"Marc-97"},"content":"            if (list.get(i).getName().contains(str)) {"},{"lineNumber":100,"author":{"gitId":"Marc-97"},"content":"                foundList.add(list.get(i));"},{"lineNumber":101,"author":{"gitId":"Marc-97"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"Marc-97"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"Marc-97"},"content":"        return new TaskList(foundList);"},{"lineNumber":104,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":106,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"Marc-97"},"content":"     * Initialises the comparator for sort by date"},{"lineNumber":108,"author":{"gitId":"Marc-97"},"content":"     * This method will be called when creating a new \u003ccode\u003eTaskList\u003c/code\u003e"},{"lineNumber":109,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"Marc-97"},"content":"    public void initComparator() {"},{"lineNumber":111,"author":{"gitId":"Marc-97"},"content":"        this.compareDate \u003d (x, y) -\u003e {"},{"lineNumber":112,"author":{"gitId":"Marc-97"},"content":"            if (x.getDate() \u003d\u003d null) {"},{"lineNumber":113,"author":{"gitId":"Marc-97"},"content":"                return -1;"},{"lineNumber":114,"author":{"gitId":"Marc-97"},"content":"            } else if (y.getDate() \u003d\u003d null) {"},{"lineNumber":115,"author":{"gitId":"Marc-97"},"content":"                return 1;"},{"lineNumber":116,"author":{"gitId":"Marc-97"},"content":"            } else {"},{"lineNumber":117,"author":{"gitId":"Marc-97"},"content":"                return x.getDate().compareTo(y.getDate());"},{"lineNumber":118,"author":{"gitId":"Marc-97"},"content":"            }"},{"lineNumber":119,"author":{"gitId":"Marc-97"},"content":"        };"},{"lineNumber":120,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":122,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"Marc-97"},"content":"     * Sorts the list by date"},{"lineNumber":124,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":125,"author":{"gitId":"Marc-97"},"content":"    public void sortListByDate() {"},{"lineNumber":126,"author":{"gitId":"Marc-97"},"content":"        list.sort(compareDate);"},{"lineNumber":127,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"Marc-97"},"content":"}"}],"authorContributionMap":{"Marc-97":128}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":"    public Todo(String taskName) {"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"        super(taskName);"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":"}"}],"authorContributionMap":{"Marc-97":7}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"Marc-97"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"Marc-97"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"Marc-97"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"Marc-97"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":15,"author":{"gitId":"Marc-97"},"content":"import javafx.scene.paint.ImagePattern;"},{"lineNumber":16,"author":{"gitId":"Marc-97"},"content":"import javafx.scene.shape.Rectangle;"},{"lineNumber":17,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":18,"author":{"gitId":"Marc-97"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"Marc-97"},"content":" * An example of a custom control using FXML."},{"lineNumber":20,"author":{"gitId":"Marc-97"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":21,"author":{"gitId":"Marc-97"},"content":" * containing text from the speaker."},{"lineNumber":22,"author":{"gitId":"Marc-97"},"content":" */"},{"lineNumber":23,"author":{"gitId":"Marc-97"},"content":"public class DialogBox extends HBox {"},{"lineNumber":24,"author":{"gitId":"Marc-97"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"Marc-97"},"content":"    private Label dialog;"},{"lineNumber":26,"author":{"gitId":"Marc-97"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"Marc-97"},"content":"    private Rectangle displayPicture;"},{"lineNumber":28,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":29,"author":{"gitId":"Marc-97"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":30,"author":{"gitId":"Marc-97"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"Marc-97"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":32,"author":{"gitId":"Marc-97"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":33,"author":{"gitId":"Marc-97"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":34,"author":{"gitId":"Marc-97"},"content":"            fxmlLoader.load();"},{"lineNumber":35,"author":{"gitId":"Marc-97"},"content":"        } catch (IOException e) {"},{"lineNumber":36,"author":{"gitId":"Marc-97"},"content":"            e.printStackTrace();"},{"lineNumber":37,"author":{"gitId":"Marc-97"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"Marc-97"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"Marc-97"},"content":"        displayPicture.setFill(new ImagePattern(img));"},{"lineNumber":40,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":42,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"Marc-97"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"Marc-97"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"Marc-97"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"Marc-97"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"Marc-97"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"Marc-97"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":52,"author":{"gitId":"Marc-97"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"Marc-97"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":56,"author":{"gitId":"Marc-97"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"Marc-97"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"Marc-97"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"Marc-97"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"Marc-97"},"content":"}"}],"authorContributionMap":{"Marc-97":61}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":"import javafx.fxml.FXML;"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"import javafx.geometry.Insets;"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":11,"author":{"gitId":"Marc-97"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":12,"author":{"gitId":"Marc-97"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":13,"author":{"gitId":"Marc-97"},"content":"import javafx.scene.layout.BackgroundImage;"},{"lineNumber":14,"author":{"gitId":"Marc-97"},"content":"import javafx.scene.layout.BackgroundPosition;"},{"lineNumber":15,"author":{"gitId":"Marc-97"},"content":"import javafx.scene.layout.BackgroundRepeat;"},{"lineNumber":16,"author":{"gitId":"Marc-97"},"content":"import javafx.scene.layout.BackgroundSize;"},{"lineNumber":17,"author":{"gitId":"Marc-97"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":18,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":19,"author":{"gitId":"Marc-97"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":20,"author":{"gitId":"Marc-97"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"Marc-97"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":22,"author":{"gitId":"Marc-97"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"Marc-97"},"content":"    private VBox dialogContainer;"},{"lineNumber":24,"author":{"gitId":"Marc-97"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"Marc-97"},"content":"    private TextField userInput;"},{"lineNumber":26,"author":{"gitId":"Marc-97"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"Marc-97"},"content":"    private Button sendButton;"},{"lineNumber":28,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":29,"author":{"gitId":"Marc-97"},"content":"    private Duke duke;"},{"lineNumber":30,"author":{"gitId":"Marc-97"},"content":"    private Ui ui;"},{"lineNumber":31,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":32,"author":{"gitId":"Marc-97"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));"},{"lineNumber":33,"author":{"gitId":"Marc-97"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));"},{"lineNumber":34,"author":{"gitId":"Marc-97"},"content":"    private Image backgroundImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Background.png\"));"},{"lineNumber":35,"author":{"gitId":"Marc-97"},"content":"    private Image sendIconImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/SendIcon.png\"));"},{"lineNumber":36,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":37,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"Marc-97"},"content":"     * Initialises the main window"},{"lineNumber":39,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"Marc-97"},"content":"    @FXML"},{"lineNumber":41,"author":{"gitId":"Marc-97"},"content":"    public void initialize() {"},{"lineNumber":42,"author":{"gitId":"Marc-97"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":43,"author":{"gitId":"Marc-97"},"content":"        BackgroundImage background \u003d new BackgroundImage(backgroundImage,"},{"lineNumber":44,"author":{"gitId":"Marc-97"},"content":"                BackgroundRepeat.REPEAT, BackgroundRepeat.REPEAT, BackgroundPosition.DEFAULT,"},{"lineNumber":45,"author":{"gitId":"Marc-97"},"content":"                BackgroundSize.DEFAULT);"},{"lineNumber":46,"author":{"gitId":"Marc-97"},"content":"        dialogContainer.setBackground(new Background(background));"},{"lineNumber":47,"author":{"gitId":"Marc-97"},"content":"        sendButton.setPadding(Insets.EMPTY);"},{"lineNumber":48,"author":{"gitId":"Marc-97"},"content":"        ImageView sendIconView \u003d new ImageView(sendIconImage);"},{"lineNumber":49,"author":{"gitId":"Marc-97"},"content":"        sendIconView.setFitWidth(25);"},{"lineNumber":50,"author":{"gitId":"Marc-97"},"content":"        sendIconView.setFitHeight(25);"},{"lineNumber":51,"author":{"gitId":"Marc-97"},"content":"        sendButton.setGraphic(sendIconView);"},{"lineNumber":52,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":54,"author":{"gitId":"Marc-97"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":55,"author":{"gitId":"Marc-97"},"content":"        duke \u003d d;"},{"lineNumber":56,"author":{"gitId":"Marc-97"},"content":"        ui \u003d new Ui();"},{"lineNumber":57,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":59,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"Marc-97"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":61,"author":{"gitId":"Marc-97"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":62,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"Marc-97"},"content":"    @FXML"},{"lineNumber":64,"author":{"gitId":"Marc-97"},"content":"    private void handleUserInput() {"},{"lineNumber":65,"author":{"gitId":"Marc-97"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":66,"author":{"gitId":"Marc-97"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":67,"author":{"gitId":"Marc-97"},"content":"        if (response.equals(ui.getByeMessage())) {"},{"lineNumber":68,"author":{"gitId":"Marc-97"},"content":"            System.exit(0);"},{"lineNumber":69,"author":{"gitId":"Marc-97"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"Marc-97"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":71,"author":{"gitId":"Marc-97"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":72,"author":{"gitId":"Marc-97"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":73,"author":{"gitId":"Marc-97"},"content":"        );"},{"lineNumber":74,"author":{"gitId":"Marc-97"},"content":"        userInput.clear();"},{"lineNumber":75,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"Marc-97"},"content":"}"}],"authorContributionMap":{"Marc-97":76}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"import java.util.LinkedList;"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":" * A class for handling input and output for Duke."},{"lineNumber":11,"author":{"gitId":"Marc-97"},"content":" */"},{"lineNumber":12,"author":{"gitId":"Marc-97"},"content":"public class Ui {"},{"lineNumber":13,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":14,"author":{"gitId":"Marc-97"},"content":"    private Scanner scanner;"},{"lineNumber":15,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":16,"author":{"gitId":"Marc-97"},"content":"    public Ui() {"},{"lineNumber":17,"author":{"gitId":"Marc-97"},"content":"        this.scanner \u003d new Scanner(System.in);"},{"lineNumber":18,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":20,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"Marc-97"},"content":"     * Prints the exit message of Duke."},{"lineNumber":22,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Marc-97"},"content":"    public String getByeMessage() {"},{"lineNumber":24,"author":{"gitId":"Marc-97"},"content":"        return \"Bye. Hope to see you again soon!\";"},{"lineNumber":25,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":27,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"Marc-97"},"content":"     * Prints all \u003ccode\u003eTask\u003c/code\u003e in the \u003ccode\u003eTaskList\u003c/code\u003e."},{"lineNumber":29,"author":{"gitId":"Marc-97"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"Marc-97"},"content":"     * @param tasks a \u003ccode\u003eTaskList\u003c/code\u003e consisting of tasks"},{"lineNumber":31,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"Marc-97"},"content":"    public String getListMessage(TaskList tasks) {"},{"lineNumber":33,"author":{"gitId":"Marc-97"},"content":"        LinkedList\u003cTask\u003e lst \u003d tasks.getList();"},{"lineNumber":34,"author":{"gitId":"Marc-97"},"content":"        String msg \u003d \"Here are the tasks in your list:\\n\";"},{"lineNumber":35,"author":{"gitId":"Marc-97"},"content":"        for (int i \u003d 1; i \u003c\u003d lst.size(); i++) {"},{"lineNumber":36,"author":{"gitId":"Marc-97"},"content":"            msg +\u003d i + \". \" + lst.get(i - 1);"},{"lineNumber":37,"author":{"gitId":"Marc-97"},"content":"            if (i \u003c lst.size()) {"},{"lineNumber":38,"author":{"gitId":"Marc-97"},"content":"                msg +\u003d \"\\n\";"},{"lineNumber":39,"author":{"gitId":"Marc-97"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"Marc-97"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"Marc-97"},"content":"        return msg;"},{"lineNumber":42,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":44,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"Marc-97"},"content":"     * Prints a message when \u003ccode\u003eTask\u003c/code\u003e is added."},{"lineNumber":46,"author":{"gitId":"Marc-97"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"Marc-97"},"content":"     * @param tasks the \u003ccode\u003eTaskList\u003c/code\u003e containing all the tasks"},{"lineNumber":48,"author":{"gitId":"Marc-97"},"content":"     * @param task the \u003ccode\u003eTask\u003c/code\u003e that is added"},{"lineNumber":49,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"Marc-97"},"content":"    public String getAddMessage(TaskList tasks, Task task) {"},{"lineNumber":51,"author":{"gitId":"Marc-97"},"content":"        String msg \u003d \"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":52,"author":{"gitId":"Marc-97"},"content":"                + \"  \" + task"},{"lineNumber":53,"author":{"gitId":"Marc-97"},"content":"                + \"\\nNow you have \" + tasks.getList().size() + \" tasks in the list.\";"},{"lineNumber":54,"author":{"gitId":"Marc-97"},"content":"        return msg;"},{"lineNumber":55,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":57,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"Marc-97"},"content":"     * Prints a message when \u003ccode\u003eTask\u003c/code\u003e is removed."},{"lineNumber":59,"author":{"gitId":"Marc-97"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"Marc-97"},"content":"     * @param tasks the \u003ccode\u003eTaskList\u003c/code\u003e containing all the tasks"},{"lineNumber":61,"author":{"gitId":"Marc-97"},"content":"     * @param task the \u003ccode\u003eTask\u003c/code\u003e that is added"},{"lineNumber":62,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"Marc-97"},"content":"    public String getRemoveMessage(TaskList tasks, Task task) {"},{"lineNumber":64,"author":{"gitId":"Marc-97"},"content":"        String msg \u003d \"Got it. I\u0027ve removed this task:\\n\""},{"lineNumber":65,"author":{"gitId":"Marc-97"},"content":"                + \"  \" + task"},{"lineNumber":66,"author":{"gitId":"Marc-97"},"content":"                + \"\\nNow you have \" + tasks.getList().size() + \" tasks in the list.\";"},{"lineNumber":67,"author":{"gitId":"Marc-97"},"content":"        return msg;"},{"lineNumber":68,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":70,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"Marc-97"},"content":"     * Prints a message when \u003ccode\u003eTask\u003c/code\u003e is marked done."},{"lineNumber":72,"author":{"gitId":"Marc-97"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"Marc-97"},"content":"     * @param task the \u003ccode\u003eTask\u003c/code\u003e that is added"},{"lineNumber":74,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"Marc-97"},"content":"    public String getMarkMessage(Task task) {"},{"lineNumber":76,"author":{"gitId":"Marc-97"},"content":"        String msg \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"},{"lineNumber":77,"author":{"gitId":"Marc-97"},"content":"        msg +\u003d \"  \" + task;"},{"lineNumber":78,"author":{"gitId":"Marc-97"},"content":"        return msg;"},{"lineNumber":79,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":81,"author":{"gitId":"Marc-97"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"Marc-97"},"content":"     * Prints all the \u003ccode\u003eTask\u003c/code\u003e in \u003ccode\u003eTaskList\u003c/code\u003e with a message"},{"lineNumber":83,"author":{"gitId":"Marc-97"},"content":"     *"},{"lineNumber":84,"author":{"gitId":"Marc-97"},"content":"     * @param tasks TaskList to be printed"},{"lineNumber":85,"author":{"gitId":"Marc-97"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"Marc-97"},"content":"    public String getFoundMessage(TaskList tasks) {"},{"lineNumber":87,"author":{"gitId":"Marc-97"},"content":"        LinkedList\u003cTask\u003e lst \u003d tasks.getList();"},{"lineNumber":88,"author":{"gitId":"Marc-97"},"content":"        String msg \u003d \"Here are the matching tasks in your list:\\n\";"},{"lineNumber":89,"author":{"gitId":"Marc-97"},"content":"        for (int i \u003d 1; i \u003c\u003d lst.size(); i++) {"},{"lineNumber":90,"author":{"gitId":"Marc-97"},"content":"            msg +\u003d i + \". \" + lst.get(i - 1);"},{"lineNumber":91,"author":{"gitId":"Marc-97"},"content":"            if (i \u003c lst.size()) {"},{"lineNumber":92,"author":{"gitId":"Marc-97"},"content":"                msg +\u003d \"\\n\";"},{"lineNumber":93,"author":{"gitId":"Marc-97"},"content":"            }"},{"lineNumber":94,"author":{"gitId":"Marc-97"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"Marc-97"},"content":"        return msg;"},{"lineNumber":96,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"Marc-97"},"content":"}"}],"authorContributionMap":{"Marc-97":97}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"\u003c?import javafx.scene.layout.BorderPane?\u003e"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":"\u003c?import javafx.scene.shape.Rectangle?\u003e"},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" spacing\u003d\"2.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":11,"author":{"gitId":"Marc-97"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"Marc-97"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: #71e394#71e394; -fx-background-radius: 15;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":13,"author":{"gitId":"Marc-97"},"content":"         \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"Marc-97"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"Marc-97"},"content":"         \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"Marc-97"},"content":"         \u003copaqueInsets\u003e"},{"lineNumber":17,"author":{"gitId":"Marc-97"},"content":"            \u003cInsets /\u003e"},{"lineNumber":18,"author":{"gitId":"Marc-97"},"content":"         \u003c/opaqueInsets\u003e"},{"lineNumber":19,"author":{"gitId":"Marc-97"},"content":"      \u003c/Label\u003e"},{"lineNumber":20,"author":{"gitId":"Marc-97"},"content":"      \u003cVBox maxWidth\u003d\"200.0\" /\u003e"},{"lineNumber":21,"author":{"gitId":"Marc-97"},"content":"      \u003cBorderPane\u003e"},{"lineNumber":22,"author":{"gitId":"Marc-97"},"content":"         \u003cbottom\u003e"},{"lineNumber":23,"author":{"gitId":"Marc-97"},"content":"              \u003cRectangle fx:id\u003d\"displayPicture\" arcHeight\u003d\"5.0\" arcWidth\u003d\"5.0\" fill\u003d\"DODGERBLUE\" height\u003d\"50.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" strokeWidth\u003d\"0.0\" style\u003d\"-fx-arc-height: 50; -fx-arc-width: 50;\" width\u003d\"50.0\" BorderPane.alignment\u003d\"CENTER\" /\u003e"},{"lineNumber":24,"author":{"gitId":"Marc-97"},"content":"         \u003c/bottom\u003e"},{"lineNumber":25,"author":{"gitId":"Marc-97"},"content":"      \u003c/BorderPane\u003e"},{"lineNumber":26,"author":{"gitId":"Marc-97"},"content":"    \u003c/children\u003e"},{"lineNumber":27,"author":{"gitId":"Marc-97"},"content":"    \u003cpadding\u003e"},{"lineNumber":28,"author":{"gitId":"Marc-97"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":29,"author":{"gitId":"Marc-97"},"content":"    \u003c/padding\u003e"},{"lineNumber":30,"author":{"gitId":"Marc-97"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"Marc-97":30}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"585.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"},{"lineNumber":11,"author":{"gitId":"Marc-97"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"Marc-97"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"26.0\" prefWidth\u003d\"370.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":13,"author":{"gitId":"Marc-97"},"content":"        \u003cButton fx:id\u003d\"sendButton\" alignment\u003d\"CENTER\" contentDisplay\u003d\"GRAPHIC_ONLY\" graphicTextGap\u003d\"0.0\" layoutX\u003d\"370.0\" layoutY\u003d\"557.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"26.0\" prefWidth\u003d\"30.0\" style\u003d\"-fx-background-color: white;\" text\u003d\"⇨\" textAlignment\u003d\"CENTER\" textOverrun\u003d\"CLIP\" /\u003e"},{"lineNumber":14,"author":{"gitId":"Marc-97"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":15,"author":{"gitId":"Marc-97"},"content":"            \u003ccontent\u003e"},{"lineNumber":16,"author":{"gitId":"Marc-97"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"555.0\" prefWidth\u003d\"382.0\"\u003e"},{"lineNumber":17,"author":{"gitId":"Marc-97"},"content":"               \u003cpadding\u003e"},{"lineNumber":18,"author":{"gitId":"Marc-97"},"content":"                  \u003cInsets left\u003d\"3.0\" right\u003d\"3.0\" /\u003e"},{"lineNumber":19,"author":{"gitId":"Marc-97"},"content":"               \u003c/padding\u003e\u003c/VBox\u003e"},{"lineNumber":20,"author":{"gitId":"Marc-97"},"content":"            \u003c/content\u003e"},{"lineNumber":21,"author":{"gitId":"Marc-97"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":22,"author":{"gitId":"Marc-97"},"content":"    \u003c/children\u003e"},{"lineNumber":23,"author":{"gitId":"Marc-97"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"Marc-97":23}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":9,"author":{"gitId":"Marc-97"},"content":"import duke.exception.DukeException;"},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":"import duke.parser.Parser;"},{"lineNumber":11,"author":{"gitId":"Marc-97"},"content":"import duke.task.Deadline;"},{"lineNumber":12,"author":{"gitId":"Marc-97"},"content":"import duke.task.Event;"},{"lineNumber":13,"author":{"gitId":"Marc-97"},"content":"import duke.task.Task;"},{"lineNumber":14,"author":{"gitId":"Marc-97"},"content":"import duke.task.Todo;"},{"lineNumber":15,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":16,"author":{"gitId":"Marc-97"},"content":"public class DukeTest {"},{"lineNumber":17,"author":{"gitId":"Marc-97"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"Marc-97"},"content":"    public void dummyTest() {"},{"lineNumber":19,"author":{"gitId":"Marc-97"},"content":"        assertEquals(2, 2);"},{"lineNumber":20,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":22,"author":{"gitId":"Marc-97"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"Marc-97"},"content":"    public void todoTest() {"},{"lineNumber":24,"author":{"gitId":"Marc-97"},"content":"        Task task \u003d new Todo(\"Read a book\");"},{"lineNumber":25,"author":{"gitId":"Marc-97"},"content":"        assertEquals(\"Read a book\", task.getName());"},{"lineNumber":26,"author":{"gitId":"Marc-97"},"content":"        assertEquals(\"[T][ ] Read a book\", task.toString());"},{"lineNumber":27,"author":{"gitId":"Marc-97"},"content":"        assertEquals(\"T | 0 | Read a book\", task.toSaveFormat());"},{"lineNumber":28,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":29,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":31,"author":{"gitId":"Marc-97"},"content":"    @Test"},{"lineNumber":32,"author":{"gitId":"Marc-97"},"content":"    public void eventTest() {"},{"lineNumber":33,"author":{"gitId":"Marc-97"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"Marc-97"},"content":"            Event event \u003d new Event(\"Eat a book\", \"2019-09-16\", \"by\");"},{"lineNumber":35,"author":{"gitId":"Marc-97"},"content":"            LocalDate date \u003d LocalDate.parse(\"2019-09-16\");"},{"lineNumber":36,"author":{"gitId":"Marc-97"},"content":"            assertEquals(\"Eat a book\", event.getName());"},{"lineNumber":37,"author":{"gitId":"Marc-97"},"content":"            assertEquals(date.toString(), event.getDate().toString());"},{"lineNumber":38,"author":{"gitId":"Marc-97"},"content":"            assertEquals(\"[E][ ] Eat a book (by: Sep 16 2019)\", event.toString());"},{"lineNumber":39,"author":{"gitId":"Marc-97"},"content":"            assertEquals(\"E | 0 | Eat a book | 2019-09-16 | by\", event.toSaveFormat());"},{"lineNumber":40,"author":{"gitId":"Marc-97"},"content":"        } catch (DukeException ex) {"},{"lineNumber":41,"author":{"gitId":"Marc-97"},"content":"            assertEquals(1, 0);"},{"lineNumber":42,"author":{"gitId":"Marc-97"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":45,"author":{"gitId":"Marc-97"},"content":"    @Test"},{"lineNumber":46,"author":{"gitId":"Marc-97"},"content":"    public void deadlineTest() {"},{"lineNumber":47,"author":{"gitId":"Marc-97"},"content":"        try {"},{"lineNumber":48,"author":{"gitId":"Marc-97"},"content":"            Deadline deadline \u003d new Deadline(\"Cook a book\", \"2010-05-12\", \"in\");"},{"lineNumber":49,"author":{"gitId":"Marc-97"},"content":"            LocalDate date \u003d LocalDate.parse(\"2010-05-12\");"},{"lineNumber":50,"author":{"gitId":"Marc-97"},"content":"            assertEquals(\"Cook a book\", deadline.getName());"},{"lineNumber":51,"author":{"gitId":"Marc-97"},"content":"            assertEquals(date.toString(), deadline.getDate().toString());"},{"lineNumber":52,"author":{"gitId":"Marc-97"},"content":"            assertEquals(\"[D][ ] Cook a book (in: May 12 2010)\", deadline.toString());"},{"lineNumber":53,"author":{"gitId":"Marc-97"},"content":"            assertEquals(\"D | 0 | Cook a book | 2010-05-12 | in\", deadline.toSaveFormat());"},{"lineNumber":54,"author":{"gitId":"Marc-97"},"content":"        } catch (DukeException ex) {"},{"lineNumber":55,"author":{"gitId":"Marc-97"},"content":"            assertEquals(1, 0);"},{"lineNumber":56,"author":{"gitId":"Marc-97"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Marc-97"},"content":""},{"lineNumber":59,"author":{"gitId":"Marc-97"},"content":"    @Test"},{"lineNumber":60,"author":{"gitId":"Marc-97"},"content":"    public void parserTest() {"},{"lineNumber":61,"author":{"gitId":"Marc-97"},"content":"        try {"},{"lineNumber":62,"author":{"gitId":"Marc-97"},"content":"            Parser parser \u003d new Parser(\"event Write a book /by 2020-09-16\");"},{"lineNumber":63,"author":{"gitId":"Marc-97"},"content":"            assertEquals(\"event\", parser.getRequest());"},{"lineNumber":64,"author":{"gitId":"Marc-97"},"content":"            assertEquals(\"Write a book /by 2020-09-16\", parser.getArgs());"},{"lineNumber":65,"author":{"gitId":"Marc-97"},"content":"            String taskName \u003d parser.getFormattedCommand()[0];"},{"lineNumber":66,"author":{"gitId":"Marc-97"},"content":"            String date \u003d parser.getFormattedCommand()[1];"},{"lineNumber":67,"author":{"gitId":"Marc-97"},"content":"            String preposition \u003d parser.getFormattedCommand()[2];"},{"lineNumber":68,"author":{"gitId":"Marc-97"},"content":"            assertEquals(\"Write a book\", taskName);"},{"lineNumber":69,"author":{"gitId":"Marc-97"},"content":"            assertEquals(\"2020-09-16\", date);"},{"lineNumber":70,"author":{"gitId":"Marc-97"},"content":"            assertEquals(\"by\", preposition);"},{"lineNumber":71,"author":{"gitId":"Marc-97"},"content":"        } catch (DukeException ex) {"},{"lineNumber":72,"author":{"gitId":"Marc-97"},"content":"            assertEquals(0, 1); // force fail"},{"lineNumber":73,"author":{"gitId":"Marc-97"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"Marc-97"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"Marc-97"},"content":"}"}],"authorContributionMap":{"Marc-97":75}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"T | 0 | borrow book"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":"D | 1 | return book | 2019-09-16 | by"},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"E | 0 | project meeting | 2020-11-12 | at"}],"authorContributionMap":{"Marc-97":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Marc-97"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"Marc-97"},"content":"list"},{"lineNumber":3,"author":{"gitId":"Marc-97"},"content":"deadline return book /by 2019-09-16"},{"lineNumber":4,"author":{"gitId":"Marc-97"},"content":"event project meeting /at 2020-11-12"},{"lineNumber":5,"author":{"gitId":"Marc-97"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"Marc-97"},"content":"list"},{"lineNumber":7,"author":{"gitId":"Marc-97"},"content":"bye"}],"authorContributionMap":{"Marc-97":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"Marc-97"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"Marc-97"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"Marc-97":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"Marc-97"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"Marc-97"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"Marc-97":2,"-":36}}]
