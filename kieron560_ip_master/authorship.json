[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":16,"author":{"gitId":"kieron560"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":18,"author":{"gitId":"kieron560"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"kieron560"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"kieron560"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"kieron560"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"kieron560"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"kieron560"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"kieron560"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"kieron560"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"kieron560"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"kieron560"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"kieron560"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"kieron560"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"kieron560"},"content":"    mainClassName \u003d \"Duke\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"kieron560"},"content":"    archiveVersion \u003d \"v0.2\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"kieron560":17,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"D | 1 | return book | 2020-06-06"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":"T | 1 | join sports club"},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":"T | 0 | hi"},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":"T | 0 | hi hi"},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":"T | 0 | Do my Homework"}],"authorContributionMap":{"kieron560":5}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"kieron560"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"kieron560"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"kieron560"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"kieron560"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"kieron560"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"kieron560"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"kieron560"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"kieron560"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":15,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":16,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":17,"author":{"gitId":"kieron560"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"kieron560"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"kieron560"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"kieron560"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"kieron560"},"content":" */"},{"lineNumber":22,"author":{"gitId":"kieron560"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"kieron560"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"kieron560"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"kieron560"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"kieron560"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":28,"author":{"gitId":"kieron560"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"kieron560"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"kieron560"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"kieron560"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"kieron560"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"kieron560"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"kieron560"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"kieron560"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"kieron560"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":38,"author":{"gitId":"kieron560"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"kieron560"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"kieron560"},"content":"        dialog.setWrapText(true);"},{"lineNumber":41,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":43,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"kieron560"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":45,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"kieron560"},"content":"    private void flip() {"},{"lineNumber":47,"author":{"gitId":"kieron560"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":48,"author":{"gitId":"kieron560"},"content":"        Collections.reverse(tmp);"},{"lineNumber":49,"author":{"gitId":"kieron560"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":50,"author":{"gitId":"kieron560"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":51,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":53,"author":{"gitId":"kieron560"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":54,"author":{"gitId":"kieron560"},"content":"        return new DialogBox(text, img);"},{"lineNumber":55,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":57,"author":{"gitId":"kieron560"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":58,"author":{"gitId":"kieron560"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":59,"author":{"gitId":"kieron560"},"content":"        db.flip();"},{"lineNumber":60,"author":{"gitId":"kieron560"},"content":"        return db;"},{"lineNumber":61,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"kieron560"},"content":"}"}],"authorContributionMap":{"kieron560":62}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"import commands.Command;"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":"import exceptions.DukeException;"},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":"import parser.Parser;"},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":"import storage.Storage;"},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":"import tasklist.TaskList;"},{"lineNumber":6,"author":{"gitId":"kieron560"},"content":"import ui.Ui;"},{"lineNumber":7,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"kieron560"},"content":"    private Storage storage;"},{"lineNumber":10,"author":{"gitId":"kieron560"},"content":"    private TaskList tasks;"},{"lineNumber":11,"author":{"gitId":"kieron560"},"content":"    private Ui ui;"},{"lineNumber":12,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":13,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"kieron560"},"content":"     * Constuctor for Duke"},{"lineNumber":15,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"kieron560"},"content":"    public Duke() {"},{"lineNumber":17,"author":{"gitId":"kieron560"},"content":"        this.storage \u003d new Storage();"},{"lineNumber":18,"author":{"gitId":"kieron560"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":19,"author":{"gitId":"kieron560"},"content":"        this.storage \u003d new Storage();"},{"lineNumber":20,"author":{"gitId":"kieron560"},"content":"        ui.preload();"},{"lineNumber":21,"author":{"gitId":"kieron560"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"kieron560"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":23,"author":{"gitId":"kieron560"},"content":"        } catch (DukeException e) {"},{"lineNumber":24,"author":{"gitId":"kieron560"},"content":"            if (e.getMessage().equals(\"LoadFileError\")) {"},{"lineNumber":25,"author":{"gitId":"kieron560"},"content":"                ui.loadFileError();"},{"lineNumber":26,"author":{"gitId":"kieron560"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"kieron560"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":30,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"kieron560"},"content":"     * Method to get response to an input for GUI Duke Program."},{"lineNumber":32,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"kieron560"},"content":"     * @param input input command."},{"lineNumber":34,"author":{"gitId":"kieron560"},"content":"     * @return Response String output."},{"lineNumber":35,"author":{"gitId":"kieron560"},"content":"     * @throws DukeException Different kinds of Duke Exception errors."},{"lineNumber":36,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"kieron560"},"content":"    public String getResponse(String input) throws DukeException {"},{"lineNumber":39,"author":{"gitId":"kieron560"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"kieron560"},"content":"            Command c \u003d Parser.parse(input);"},{"lineNumber":41,"author":{"gitId":"kieron560"},"content":"            return c.execute(tasks, ui, storage);"},{"lineNumber":42,"author":{"gitId":"kieron560"},"content":"        } catch (DukeException e) {"},{"lineNumber":43,"author":{"gitId":"kieron560"},"content":"            if (e.getMessage().equals(\"IndexOutOfBound\")) {"},{"lineNumber":44,"author":{"gitId":"kieron560"},"content":"                return ui.arrayIndexOutOfBoundsError();"},{"lineNumber":45,"author":{"gitId":"kieron560"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"kieron560"},"content":"            if (e.getMessage().equals(\"EmptyIndex\")) {"},{"lineNumber":47,"author":{"gitId":"kieron560"},"content":"                return ui.emptyIndexError();"},{"lineNumber":48,"author":{"gitId":"kieron560"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"kieron560"},"content":"            if (e.getMessage().equals(\"EmptyDescription\")) {"},{"lineNumber":50,"author":{"gitId":"kieron560"},"content":"                return ui.emptyDescriptionError(e.getInfo());"},{"lineNumber":51,"author":{"gitId":"kieron560"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"kieron560"},"content":"            if (e.getMessage().equals(\"EmptyDetails\")) {"},{"lineNumber":53,"author":{"gitId":"kieron560"},"content":"                return ui.emptyDetailsError(e.getInfo());"},{"lineNumber":54,"author":{"gitId":"kieron560"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"kieron560"},"content":"            if (e.getMessage().equals(\"UnknownCommand\")) {"},{"lineNumber":56,"author":{"gitId":"kieron560"},"content":"                return ui.unknownCommandError();"},{"lineNumber":57,"author":{"gitId":"kieron560"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"kieron560"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"kieron560"},"content":"        return \"Error! Please Try Another Command!\";"},{"lineNumber":60,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":62,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"kieron560"},"content":"     * Runs the program for the Text-Based Duke Program."},{"lineNumber":64,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"kieron560"},"content":"    public void run() {"},{"lineNumber":66,"author":{"gitId":"kieron560"},"content":"        ui.introduction();"},{"lineNumber":67,"author":{"gitId":"kieron560"},"content":"        boolean isExit \u003d false;"},{"lineNumber":68,"author":{"gitId":"kieron560"},"content":"        while (!isExit) {"},{"lineNumber":69,"author":{"gitId":"kieron560"},"content":"            try {"},{"lineNumber":70,"author":{"gitId":"kieron560"},"content":"                String fullCommand \u003d ui.readCommand();"},{"lineNumber":71,"author":{"gitId":"kieron560"},"content":"                Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":72,"author":{"gitId":"kieron560"},"content":"                c.execute(tasks, ui, storage);"},{"lineNumber":73,"author":{"gitId":"kieron560"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":74,"author":{"gitId":"kieron560"},"content":"            } catch (DukeException e) {"},{"lineNumber":75,"author":{"gitId":"kieron560"},"content":"                if (e.getMessage().equals(\"IndexOutOfBound\")) {"},{"lineNumber":76,"author":{"gitId":"kieron560"},"content":"                    ui.arrayIndexOutOfBoundsError();"},{"lineNumber":77,"author":{"gitId":"kieron560"},"content":"                }"},{"lineNumber":78,"author":{"gitId":"kieron560"},"content":"                if (e.getMessage().equals(\"EmptyIndex\")) {"},{"lineNumber":79,"author":{"gitId":"kieron560"},"content":"                    ui.emptyIndexError();"},{"lineNumber":80,"author":{"gitId":"kieron560"},"content":"                }"},{"lineNumber":81,"author":{"gitId":"kieron560"},"content":"                if (e.getMessage().equals(\"EmptyDescription\")) {"},{"lineNumber":82,"author":{"gitId":"kieron560"},"content":"                    ui.emptyDescriptionError(e.getInfo());"},{"lineNumber":83,"author":{"gitId":"kieron560"},"content":"                }"},{"lineNumber":84,"author":{"gitId":"kieron560"},"content":"                if (e.getMessage().equals(\"EmptyDetails\")) {"},{"lineNumber":85,"author":{"gitId":"kieron560"},"content":"                    ui.emptyDetailsError(e.getInfo());"},{"lineNumber":86,"author":{"gitId":"kieron560"},"content":"                }"},{"lineNumber":87,"author":{"gitId":"kieron560"},"content":"                if (e.getMessage().equals(\"UnknownCommand\")) {"},{"lineNumber":88,"author":{"gitId":"kieron560"},"content":"                    ui.unknownCommandError();"},{"lineNumber":89,"author":{"gitId":"kieron560"},"content":"                }"},{"lineNumber":90,"author":{"gitId":"kieron560"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"kieron560"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"kieron560":90,"-":3}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":"public class Launcher {"},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":6,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"kieron560"},"content":"}"}],"authorContributionMap":{"kieron560":7}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"kieron560"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"kieron560"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":9,"author":{"gitId":"kieron560"},"content":"public class Main extends Application {"},{"lineNumber":10,"author":{"gitId":"kieron560"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":11,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":12,"author":{"gitId":"kieron560"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"kieron560"},"content":"    public void start(Stage stage) {"},{"lineNumber":14,"author":{"gitId":"kieron560"},"content":"        try {"},{"lineNumber":15,"author":{"gitId":"kieron560"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":16,"author":{"gitId":"kieron560"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":17,"author":{"gitId":"kieron560"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":18,"author":{"gitId":"kieron560"},"content":"            stage.setScene(scene);"},{"lineNumber":19,"author":{"gitId":"kieron560"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":20,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":21,"author":{"gitId":"kieron560"},"content":"            stage.show();"},{"lineNumber":22,"author":{"gitId":"kieron560"},"content":"        } catch (IOException e) {"},{"lineNumber":23,"author":{"gitId":"kieron560"},"content":"            e.printStackTrace();"},{"lineNumber":24,"author":{"gitId":"kieron560"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"kieron560"},"content":"}"}],"authorContributionMap":{"kieron560":26}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"import exceptions.DukeException;"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":"import javafx.fxml.FXML;"},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":"import javafx.scene.control.Button;"},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":6,"author":{"gitId":"kieron560"},"content":"import javafx.scene.image.Image;"},{"lineNumber":7,"author":{"gitId":"kieron560"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"kieron560"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":9,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":10,"author":{"gitId":"kieron560"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"kieron560"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":12,"author":{"gitId":"kieron560"},"content":" */"},{"lineNumber":13,"author":{"gitId":"kieron560"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":14,"author":{"gitId":"kieron560"},"content":"    @FXML"},{"lineNumber":15,"author":{"gitId":"kieron560"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":16,"author":{"gitId":"kieron560"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"kieron560"},"content":"    private VBox dialogContainer;"},{"lineNumber":18,"author":{"gitId":"kieron560"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"kieron560"},"content":"    private TextField userInput;"},{"lineNumber":20,"author":{"gitId":"kieron560"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"kieron560"},"content":"    private Button sendButton;"},{"lineNumber":22,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":23,"author":{"gitId":"kieron560"},"content":"    private Duke duke;"},{"lineNumber":24,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":25,"author":{"gitId":"kieron560"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/puppy.png\"));"},{"lineNumber":26,"author":{"gitId":"kieron560"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/cat.png\"));"},{"lineNumber":27,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":28,"author":{"gitId":"kieron560"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"kieron560"},"content":"    public void initialize() {"},{"lineNumber":30,"author":{"gitId":"kieron560"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":31,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":33,"author":{"gitId":"kieron560"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":34,"author":{"gitId":"kieron560"},"content":"        duke \u003d d;"},{"lineNumber":35,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":37,"author":{"gitId":"kieron560"},"content":"    public void introduction() {"},{"lineNumber":38,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":39,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":41,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"kieron560"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":43,"author":{"gitId":"kieron560"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":44,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"kieron560"},"content":"    @FXML"},{"lineNumber":46,"author":{"gitId":"kieron560"},"content":"    private void handleUserInput() throws DukeException {"},{"lineNumber":47,"author":{"gitId":"kieron560"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":48,"author":{"gitId":"kieron560"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":49,"author":{"gitId":"kieron560"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":50,"author":{"gitId":"kieron560"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":51,"author":{"gitId":"kieron560"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":52,"author":{"gitId":"kieron560"},"content":"        );"},{"lineNumber":53,"author":{"gitId":"kieron560"},"content":"        userInput.clear();"},{"lineNumber":54,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"kieron560"},"content":"}"},{"lineNumber":56,"author":{"gitId":"kieron560"},"content":""}],"authorContributionMap":{"kieron560":56}},{"path":"src/main/java/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":"import storage.Storage;"},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":"import tasklist.TaskList;"},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":"import tasks.DukeTask;"},{"lineNumber":6,"author":{"gitId":"kieron560"},"content":"import ui.Ui;"},{"lineNumber":7,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":8,"author":{"gitId":"kieron560"},"content":"public class AddCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"kieron560"},"content":"    private DukeTask task;"},{"lineNumber":10,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":11,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"kieron560"},"content":"     * Constructor for the Add Command."},{"lineNumber":13,"author":{"gitId":"kieron560"},"content":"     * @param task DukeTask we want to add into the TaskList."},{"lineNumber":14,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"kieron560"},"content":"    public AddCommand(DukeTask task) {"},{"lineNumber":16,"author":{"gitId":"kieron560"},"content":"        super();"},{"lineNumber":17,"author":{"gitId":"kieron560"},"content":"        this.task \u003d task;"},{"lineNumber":18,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":20,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"kieron560"},"content":"      * Executes the Add Command by adding the DukeTask into the TaskList."},{"lineNumber":22,"author":{"gitId":"kieron560"},"content":"      *"},{"lineNumber":23,"author":{"gitId":"kieron560"},"content":"      * @param tasklist Duke TaskList object."},{"lineNumber":24,"author":{"gitId":"kieron560"},"content":"      * @param storage Duke Storage object."},{"lineNumber":25,"author":{"gitId":"kieron560"},"content":"      * @param ui Duke UI object."},{"lineNumber":26,"author":{"gitId":"kieron560"},"content":"      */"},{"lineNumber":27,"author":{"gitId":"kieron560"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"kieron560"},"content":"    public String execute(TaskList tasklist, Ui ui, Storage storage) {"},{"lineNumber":29,"author":{"gitId":"kieron560"},"content":"        tasklist.add(this.task);"},{"lineNumber":30,"author":{"gitId":"kieron560"},"content":"        storage.save(tasklist);"},{"lineNumber":31,"author":{"gitId":"kieron560"},"content":"        return ui.add(this.task, tasklist.size());"},{"lineNumber":32,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"kieron560"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"kieron560"},"content":"    public boolean isExit() {"},{"lineNumber":35,"author":{"gitId":"kieron560"},"content":"        return false;"},{"lineNumber":36,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"kieron560"},"content":"}"}],"authorContributionMap":{"kieron560":37}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":"import storage.Storage;"},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":"import tasklist.TaskList;"},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":"import ui.Ui;"},{"lineNumber":6,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":7,"author":{"gitId":"kieron560"},"content":"public class ByeCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":9,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"kieron560"},"content":"     * Executes the Bye Command by presenting the GoodBye Message."},{"lineNumber":11,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"kieron560"},"content":"     * @param tasklist Duke TaskList object."},{"lineNumber":13,"author":{"gitId":"kieron560"},"content":"     * @param storage Duke Storage object."},{"lineNumber":14,"author":{"gitId":"kieron560"},"content":"     * @param ui Duke UI object."},{"lineNumber":15,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"kieron560"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"kieron560"},"content":"    public String execute(TaskList tasklist, Ui ui, Storage storage) {"},{"lineNumber":18,"author":{"gitId":"kieron560"},"content":"        return ui.goodbye();"},{"lineNumber":19,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":21,"author":{"gitId":"kieron560"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"kieron560"},"content":"    public boolean isExit() {"},{"lineNumber":23,"author":{"gitId":"kieron560"},"content":"        return true;"},{"lineNumber":24,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"kieron560"},"content":"}"}],"authorContributionMap":{"kieron560":25}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":"import exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":"import storage.Storage;"},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":"import tasklist.TaskList;"},{"lineNumber":6,"author":{"gitId":"kieron560"},"content":"import ui.Ui;"},{"lineNumber":7,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":8,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":9,"author":{"gitId":"kieron560"},"content":"public abstract class Command {"},{"lineNumber":10,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":11,"author":{"gitId":"kieron560"},"content":"    Command() { }"},{"lineNumber":12,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":13,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"kieron560"},"content":"     * Abstract method to Executes the Command given."},{"lineNumber":15,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"kieron560"},"content":"     * @param tasklist Duke TaskList object."},{"lineNumber":17,"author":{"gitId":"kieron560"},"content":"     * @param storage Duke Storage object."},{"lineNumber":18,"author":{"gitId":"kieron560"},"content":"     * @param ui Duke UI object."},{"lineNumber":19,"author":{"gitId":"kieron560"},"content":"     * @throws DukeException Depends on the error of the command."},{"lineNumber":20,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"kieron560"},"content":"    public abstract String execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException;"},{"lineNumber":22,"author":{"gitId":"kieron560"},"content":"    public abstract boolean isExit();"},{"lineNumber":23,"author":{"gitId":"kieron560"},"content":"}"}],"authorContributionMap":{"kieron560":23}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":"import exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":"import storage.Storage;"},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":"import tasklist.TaskList;"},{"lineNumber":6,"author":{"gitId":"kieron560"},"content":"import tasks.DukeTask;"},{"lineNumber":7,"author":{"gitId":"kieron560"},"content":"import ui.Ui;"},{"lineNumber":8,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":9,"author":{"gitId":"kieron560"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"kieron560"},"content":"    private final int index;"},{"lineNumber":11,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":12,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"kieron560"},"content":"     * Constructor for the Delete Command."},{"lineNumber":14,"author":{"gitId":"kieron560"},"content":"     * @param index Index of the DukeTask we want to delete from the TaskList."},{"lineNumber":15,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"kieron560"},"content":"    public DeleteCommand(int index) {"},{"lineNumber":17,"author":{"gitId":"kieron560"},"content":"        super();"},{"lineNumber":18,"author":{"gitId":"kieron560"},"content":"        this.index \u003d index;"},{"lineNumber":19,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":21,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"kieron560"},"content":"     * Executes the Delete Command by removing the DukeTask into the TaskList."},{"lineNumber":23,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"kieron560"},"content":"     * @param tasklist Duke TaskList object."},{"lineNumber":25,"author":{"gitId":"kieron560"},"content":"     * @param storage Duke Storage object."},{"lineNumber":26,"author":{"gitId":"kieron560"},"content":"     * @param ui Duke UI object."},{"lineNumber":27,"author":{"gitId":"kieron560"},"content":"     * @throws DukeException If index of the Task is out of bounds"},{"lineNumber":28,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"kieron560"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"kieron560"},"content":"    public String execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":31,"author":{"gitId":"kieron560"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"kieron560"},"content":"            DukeTask task \u003d tasklist.getTask(this.index);"},{"lineNumber":33,"author":{"gitId":"kieron560"},"content":"            tasklist.delete(this.index);"},{"lineNumber":34,"author":{"gitId":"kieron560"},"content":"            storage.save(tasklist);"},{"lineNumber":35,"author":{"gitId":"kieron560"},"content":"            return ui.delete(task, tasklist.size());"},{"lineNumber":36,"author":{"gitId":"kieron560"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":37,"author":{"gitId":"kieron560"},"content":"            throw new DukeException(\"IndexOutOfBound\");"},{"lineNumber":38,"author":{"gitId":"kieron560"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":41,"author":{"gitId":"kieron560"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"kieron560"},"content":"    public boolean isExit() {"},{"lineNumber":43,"author":{"gitId":"kieron560"},"content":"        return false;"},{"lineNumber":44,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"kieron560"},"content":"}"}],"authorContributionMap":{"kieron560":45}},{"path":"src/main/java/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":"import exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":"import storage.Storage;"},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":"import tasklist.TaskList;"},{"lineNumber":6,"author":{"gitId":"kieron560"},"content":"import tasks.DukeTask;"},{"lineNumber":7,"author":{"gitId":"kieron560"},"content":"import ui.Ui;"},{"lineNumber":8,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":9,"author":{"gitId":"kieron560"},"content":"public class DoneCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"kieron560"},"content":"    private final int index;"},{"lineNumber":11,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":12,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"kieron560"},"content":"     * Constructor for the Done Command."},{"lineNumber":14,"author":{"gitId":"kieron560"},"content":"     * @param index Index of the DukeTask we want to mark as done in the TaskList."},{"lineNumber":15,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"kieron560"},"content":"    public DoneCommand(int index) {"},{"lineNumber":17,"author":{"gitId":"kieron560"},"content":"        super();"},{"lineNumber":18,"author":{"gitId":"kieron560"},"content":"        this.index \u003d index;"},{"lineNumber":19,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":21,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"kieron560"},"content":"     * Executes the Done Command by marking the DukeTask in the TaskList as done."},{"lineNumber":23,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"kieron560"},"content":"     * @param tasklist Duke TaskList object."},{"lineNumber":25,"author":{"gitId":"kieron560"},"content":"     * @param storage Duke Storage object."},{"lineNumber":26,"author":{"gitId":"kieron560"},"content":"     * @param ui Duke UI object."},{"lineNumber":27,"author":{"gitId":"kieron560"},"content":"     * @throws DukeException If index of the Task is out of bounds."},{"lineNumber":28,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"kieron560"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"kieron560"},"content":"    public String execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":31,"author":{"gitId":"kieron560"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"kieron560"},"content":"            tasklist.done(this.index);"},{"lineNumber":33,"author":{"gitId":"kieron560"},"content":"            DukeTask task \u003d tasklist.getTask(this.index);"},{"lineNumber":34,"author":{"gitId":"kieron560"},"content":"            storage.save(tasklist);"},{"lineNumber":35,"author":{"gitId":"kieron560"},"content":"            return ui.done(task);"},{"lineNumber":36,"author":{"gitId":"kieron560"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":37,"author":{"gitId":"kieron560"},"content":"            throw new DukeException(\"IndexOutOfBound\");"},{"lineNumber":38,"author":{"gitId":"kieron560"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":41,"author":{"gitId":"kieron560"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"kieron560"},"content":"    public boolean isExit() {"},{"lineNumber":43,"author":{"gitId":"kieron560"},"content":"        return false;"},{"lineNumber":44,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"kieron560"},"content":"}"}],"authorContributionMap":{"kieron560":45}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":"import exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":"import storage.Storage;"},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":"import tasklist.TaskList;"},{"lineNumber":6,"author":{"gitId":"kieron560"},"content":"import ui.Ui;"},{"lineNumber":7,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":8,"author":{"gitId":"kieron560"},"content":"public class FindCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"kieron560"},"content":"    private final String word;"},{"lineNumber":10,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":11,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"kieron560"},"content":"     * Constructor for the Find Command."},{"lineNumber":13,"author":{"gitId":"kieron560"},"content":"     * @param word String that DukeTask contains in the TaskList."},{"lineNumber":14,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"kieron560"},"content":"    public FindCommand(String word) {"},{"lineNumber":16,"author":{"gitId":"kieron560"},"content":"        super();"},{"lineNumber":17,"author":{"gitId":"kieron560"},"content":"        this.word \u003d word;"},{"lineNumber":18,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":20,"author":{"gitId":"kieron560"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"kieron560"},"content":"    public String execute(TaskList tasklist, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":22,"author":{"gitId":"kieron560"},"content":"        return ui.find(tasklist.find(this.word));"},{"lineNumber":23,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":25,"author":{"gitId":"kieron560"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"kieron560"},"content":"    public boolean isExit() {"},{"lineNumber":27,"author":{"gitId":"kieron560"},"content":"        return false;"},{"lineNumber":28,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"kieron560"},"content":"}"}],"authorContributionMap":{"kieron560":29}},{"path":"src/main/java/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":"import storage.Storage;"},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":"import tasklist.TaskList;"},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":"import ui.Ui;"},{"lineNumber":6,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":7,"author":{"gitId":"kieron560"},"content":"public class HelpCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":9,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"kieron560"},"content":"     * Executes the Help Command by presenting the Help Message for the different commands."},{"lineNumber":11,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"kieron560"},"content":"     * @param tasklist Duke TaskList object."},{"lineNumber":13,"author":{"gitId":"kieron560"},"content":"     * @param storage Duke Storage object."},{"lineNumber":14,"author":{"gitId":"kieron560"},"content":"     * @param ui Duke UI object."},{"lineNumber":15,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"kieron560"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"kieron560"},"content":"    public String execute(TaskList tasklist, Ui ui, Storage storage) {"},{"lineNumber":18,"author":{"gitId":"kieron560"},"content":"        return ui.help();"},{"lineNumber":19,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":21,"author":{"gitId":"kieron560"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"kieron560"},"content":"    public boolean isExit() {"},{"lineNumber":23,"author":{"gitId":"kieron560"},"content":"        return false;"},{"lineNumber":24,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"kieron560"},"content":"}"}],"authorContributionMap":{"kieron560":25}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":"import storage.Storage;"},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":"import tasklist.TaskList;"},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":"import ui.Ui;"},{"lineNumber":6,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":7,"author":{"gitId":"kieron560"},"content":"public class ListCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":9,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"kieron560"},"content":"     * Executes the List Command by presenting the displaying the DukeTasks in the TaskList."},{"lineNumber":11,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"kieron560"},"content":"     * @param tasklist Duke TaskList object."},{"lineNumber":13,"author":{"gitId":"kieron560"},"content":"     * @param storage Duke Storage object."},{"lineNumber":14,"author":{"gitId":"kieron560"},"content":"     * @param ui Duke UI object."},{"lineNumber":15,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"kieron560"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"kieron560"},"content":"    public String execute(TaskList tasklist, Ui ui, Storage storage) {"},{"lineNumber":18,"author":{"gitId":"kieron560"},"content":"        return ui.list(tasklist);"},{"lineNumber":19,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":21,"author":{"gitId":"kieron560"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"kieron560"},"content":"    public boolean isExit() {"},{"lineNumber":23,"author":{"gitId":"kieron560"},"content":"        return false;"},{"lineNumber":24,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"kieron560"},"content":"}"}],"authorContributionMap":{"kieron560":25}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":"    private final String info;"},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":6,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"kieron560"},"content":"     * Constructor for the Duke Exception."},{"lineNumber":8,"author":{"gitId":"kieron560"},"content":"     * @param message Message of the Duke Exception."},{"lineNumber":9,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"kieron560"},"content":"    public DukeException(String message) {"},{"lineNumber":11,"author":{"gitId":"kieron560"},"content":"        super(message);"},{"lineNumber":12,"author":{"gitId":"kieron560"},"content":"        this.info \u003d \"\";"},{"lineNumber":13,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":15,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"kieron560"},"content":"     * Constructor for the Duke Exception."},{"lineNumber":17,"author":{"gitId":"kieron560"},"content":"     * @param message Message of the Duke Exception."},{"lineNumber":18,"author":{"gitId":"kieron560"},"content":"     * @param info Additional Information of the Exception."},{"lineNumber":19,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"kieron560"},"content":"    public DukeException(String message, String info) {"},{"lineNumber":21,"author":{"gitId":"kieron560"},"content":"        super(message);"},{"lineNumber":22,"author":{"gitId":"kieron560"},"content":"        this.info \u003d info;"},{"lineNumber":23,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":25,"author":{"gitId":"kieron560"},"content":"    public String getInfo() {"},{"lineNumber":26,"author":{"gitId":"kieron560"},"content":"        return this.info;"},{"lineNumber":27,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":29,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":30,"author":{"gitId":"kieron560"},"content":"}"}],"authorContributionMap":{"kieron560":30}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"package parser;"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":"import commands.AddCommand;"},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":"import commands.ByeCommand;"},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":"import commands.Command;"},{"lineNumber":6,"author":{"gitId":"kieron560"},"content":"import commands.DeleteCommand;"},{"lineNumber":7,"author":{"gitId":"kieron560"},"content":"import commands.DoneCommand;"},{"lineNumber":8,"author":{"gitId":"kieron560"},"content":"import commands.FindCommand;"},{"lineNumber":9,"author":{"gitId":"kieron560"},"content":"import commands.HelpCommand;"},{"lineNumber":10,"author":{"gitId":"kieron560"},"content":"import commands.ListCommand;"},{"lineNumber":11,"author":{"gitId":"kieron560"},"content":"import exceptions.DukeException;"},{"lineNumber":12,"author":{"gitId":"kieron560"},"content":"import tasks.Deadlines;"},{"lineNumber":13,"author":{"gitId":"kieron560"},"content":"import tasks.Events;"},{"lineNumber":14,"author":{"gitId":"kieron560"},"content":"import tasks.Todo;"},{"lineNumber":15,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":16,"author":{"gitId":"kieron560"},"content":"public class Parser {"},{"lineNumber":17,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":18,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"kieron560"},"content":"     * Parses the input given and returns a command to be executed."},{"lineNumber":20,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"kieron560"},"content":"     * @param line  TaskList object."},{"lineNumber":22,"author":{"gitId":"kieron560"},"content":"     * @return The respective Command based on the input."},{"lineNumber":23,"author":{"gitId":"kieron560"},"content":"     * @throws DukeException When the Index, Description or Details are empty based on the different Tasks."},{"lineNumber":24,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"kieron560"},"content":"    public static Command parse(String line) throws DukeException {"},{"lineNumber":26,"author":{"gitId":"kieron560"},"content":"        String[] doneLine \u003d line.split(\" \", 2);"},{"lineNumber":27,"author":{"gitId":"kieron560"},"content":"        line \u003d doneLine[0]; // get the first keyword"},{"lineNumber":28,"author":{"gitId":"kieron560"},"content":"        int index \u003d 0;"},{"lineNumber":29,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":30,"author":{"gitId":"kieron560"},"content":"        if (line.equals(\"done\") || line.equals(\"delete\")) {"},{"lineNumber":31,"author":{"gitId":"kieron560"},"content":"            try {"},{"lineNumber":32,"author":{"gitId":"kieron560"},"content":"                index \u003d Integer.parseInt(doneLine[1]);"},{"lineNumber":33,"author":{"gitId":"kieron560"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":34,"author":{"gitId":"kieron560"},"content":"                throw new DukeException(\"EmptyIndex\");"},{"lineNumber":35,"author":{"gitId":"kieron560"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"kieron560"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":38,"author":{"gitId":"kieron560"},"content":"        switch (line) {"},{"lineNumber":39,"author":{"gitId":"kieron560"},"content":"        case (\"bye\"):"},{"lineNumber":40,"author":{"gitId":"kieron560"},"content":"            return new ByeCommand();"},{"lineNumber":41,"author":{"gitId":"kieron560"},"content":"        case(\"help\"):"},{"lineNumber":42,"author":{"gitId":"kieron560"},"content":"            return new HelpCommand();"},{"lineNumber":43,"author":{"gitId":"kieron560"},"content":"        case (\"list\"):"},{"lineNumber":44,"author":{"gitId":"kieron560"},"content":"            return new ListCommand();"},{"lineNumber":45,"author":{"gitId":"kieron560"},"content":"        case (\"done\"):"},{"lineNumber":46,"author":{"gitId":"kieron560"},"content":"            return new DoneCommand(index);"},{"lineNumber":47,"author":{"gitId":"kieron560"},"content":"        case (\"delete\"):"},{"lineNumber":48,"author":{"gitId":"kieron560"},"content":"            return new DeleteCommand(index);"},{"lineNumber":49,"author":{"gitId":"kieron560"},"content":"        default:"},{"lineNumber":50,"author":{"gitId":"kieron560"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":52,"author":{"gitId":"kieron560"},"content":"        if (line.equals(\"todo\") || line.equals(\"deadline\") || line.equals(\"event\") || line.equals(\"find\")) {"},{"lineNumber":53,"author":{"gitId":"kieron560"},"content":"            if (doneLine.length \u003d\u003d 1) {"},{"lineNumber":54,"author":{"gitId":"kieron560"},"content":"                throw new DukeException(\"EmptyDescription\", line);"},{"lineNumber":55,"author":{"gitId":"kieron560"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"kieron560"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":58,"author":{"gitId":"kieron560"},"content":"        try {"},{"lineNumber":59,"author":{"gitId":"kieron560"},"content":"            switch (line) {"},{"lineNumber":60,"author":{"gitId":"kieron560"},"content":"            case (\"find\"):"},{"lineNumber":61,"author":{"gitId":"kieron560"},"content":"                return new FindCommand(doneLine[1]);"},{"lineNumber":62,"author":{"gitId":"kieron560"},"content":"            case (\"todo\"):"},{"lineNumber":63,"author":{"gitId":"kieron560"},"content":"                return new AddCommand(new Todo(doneLine[1]));"},{"lineNumber":64,"author":{"gitId":"kieron560"},"content":"            case (\"deadline\"):"},{"lineNumber":65,"author":{"gitId":"kieron560"},"content":"                String[] info \u003d doneLine[1].split(\" /by \");"},{"lineNumber":66,"author":{"gitId":"kieron560"},"content":"                return new AddCommand(new Deadlines(info[0], info[1]));"},{"lineNumber":67,"author":{"gitId":"kieron560"},"content":"            case (\"event\"):"},{"lineNumber":68,"author":{"gitId":"kieron560"},"content":"                String[] info2 \u003d doneLine[1].split(\" /at \");"},{"lineNumber":69,"author":{"gitId":"kieron560"},"content":"                String[] information \u003d Events.parseEvent(info2[1]);"},{"lineNumber":70,"author":{"gitId":"kieron560"},"content":"                return new AddCommand(new Events(info2[0], information[0],"},{"lineNumber":71,"author":{"gitId":"kieron560"},"content":"                        information[1], information[2]));"},{"lineNumber":72,"author":{"gitId":"kieron560"},"content":"            default:"},{"lineNumber":73,"author":{"gitId":"kieron560"},"content":"                throw new DukeException(\"UnknownCommand\");"},{"lineNumber":74,"author":{"gitId":"kieron560"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"kieron560"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":76,"author":{"gitId":"kieron560"},"content":"            throw new DukeException(\"EmptyDetails\", line);"},{"lineNumber":77,"author":{"gitId":"kieron560"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"kieron560"},"content":"}"},{"lineNumber":80,"author":{"gitId":"kieron560"},"content":""}],"authorContributionMap":{"kieron560":80}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"package storage;"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"kieron560"},"content":"import java.nio.file.Files;"},{"lineNumber":7,"author":{"gitId":"kieron560"},"content":"import java.nio.file.Path;"},{"lineNumber":8,"author":{"gitId":"kieron560"},"content":"import java.nio.file.Paths;"},{"lineNumber":9,"author":{"gitId":"kieron560"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"kieron560"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"kieron560"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":13,"author":{"gitId":"kieron560"},"content":"import exceptions.DukeException;"},{"lineNumber":14,"author":{"gitId":"kieron560"},"content":"import tasklist.TaskList;"},{"lineNumber":15,"author":{"gitId":"kieron560"},"content":"import tasks.Deadlines;"},{"lineNumber":16,"author":{"gitId":"kieron560"},"content":"import tasks.DukeTask;"},{"lineNumber":17,"author":{"gitId":"kieron560"},"content":"import tasks.Events;"},{"lineNumber":18,"author":{"gitId":"kieron560"},"content":"import tasks.Todo;"},{"lineNumber":19,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":20,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":21,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":22,"author":{"gitId":"kieron560"},"content":"public class Storage {"},{"lineNumber":23,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":24,"author":{"gitId":"kieron560"},"content":"    private final Path dataFolder \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\");"},{"lineNumber":25,"author":{"gitId":"kieron560"},"content":"    private final Path dukeTxt \u003d Paths.get(System.getProperty(\"user.dir\"), \"data\", \"duke.txt\");"},{"lineNumber":26,"author":{"gitId":"kieron560"},"content":"    private List\u003cDukeTask\u003e loadfile;"},{"lineNumber":27,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":28,"author":{"gitId":"kieron560"},"content":"    public Storage() {"},{"lineNumber":29,"author":{"gitId":"kieron560"},"content":"        this.loadfile \u003d new ArrayList\u003c\u003e();"},{"lineNumber":30,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":32,"author":{"gitId":"kieron560"},"content":"    public List\u003cDukeTask\u003e load() throws DukeException {"},{"lineNumber":33,"author":{"gitId":"kieron560"},"content":"        return parseFile(this.getFileFromPath());"},{"lineNumber":34,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":36,"author":{"gitId":"kieron560"},"content":"    public File getFileFromPath() {"},{"lineNumber":37,"author":{"gitId":"kieron560"},"content":"        if (!Files.exists(this.dataFolder) || !Files.exists(this.dukeTxt)) {"},{"lineNumber":38,"author":{"gitId":"kieron560"},"content":"            System.out.println(\"Oops! You don\u0027t seem to have a load file!\");"},{"lineNumber":39,"author":{"gitId":"kieron560"},"content":"            System.out.println(\"Creating one now!!\\n\");"},{"lineNumber":40,"author":{"gitId":"kieron560"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"kieron560"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"kieron560"},"content":"            Files.createDirectory(this.dataFolder);"},{"lineNumber":43,"author":{"gitId":"kieron560"},"content":"            Files.createFile(this.dukeTxt);"},{"lineNumber":44,"author":{"gitId":"kieron560"},"content":"        } catch (IOException e) {"},{"lineNumber":45,"author":{"gitId":"kieron560"},"content":"            System.out.println(\"Nice! We found your load file!\");"},{"lineNumber":46,"author":{"gitId":"kieron560"},"content":"            System.out.println(\"Loading...\\n\");"},{"lineNumber":47,"author":{"gitId":"kieron560"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":49,"author":{"gitId":"kieron560"},"content":"        File loadData \u003d this.dukeTxt.toFile();"},{"lineNumber":50,"author":{"gitId":"kieron560"},"content":"        return loadData;"},{"lineNumber":51,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":53,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"kieron560"},"content":"     * Parses the txt Duke file"},{"lineNumber":55,"author":{"gitId":"kieron560"},"content":"     * @param data File to be parsed."},{"lineNumber":56,"author":{"gitId":"kieron560"},"content":"     * @return A List of DukeTasks."},{"lineNumber":57,"author":{"gitId":"kieron560"},"content":"     * @throws DukeException"},{"lineNumber":58,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"kieron560"},"content":"    public List\u003cDukeTask\u003e parseFile(File data) throws DukeException {"},{"lineNumber":60,"author":{"gitId":"kieron560"},"content":"        try {"},{"lineNumber":61,"author":{"gitId":"kieron560"},"content":"            Scanner reader \u003d new Scanner(data);"},{"lineNumber":62,"author":{"gitId":"kieron560"},"content":"            while (reader.hasNextLine()) {"},{"lineNumber":63,"author":{"gitId":"kieron560"},"content":"                String line \u003d reader.nextLine();"},{"lineNumber":64,"author":{"gitId":"kieron560"},"content":"                String[] lineData \u003d line.split(\" [|] \", 2);"},{"lineNumber":65,"author":{"gitId":"kieron560"},"content":"                String taskType \u003d lineData[0];"},{"lineNumber":66,"author":{"gitId":"kieron560"},"content":"                try {"},{"lineNumber":67,"author":{"gitId":"kieron560"},"content":"                    switch (taskType) {"},{"lineNumber":68,"author":{"gitId":"kieron560"},"content":"                    case (\"T\"):"},{"lineNumber":69,"author":{"gitId":"kieron560"},"content":"                        String[] info \u003d lineData[1].split(\" [|] \", 2);"},{"lineNumber":70,"author":{"gitId":"kieron560"},"content":"                        if (info[0].equals(\"1\")) {"},{"lineNumber":71,"author":{"gitId":"kieron560"},"content":"                            this.loadfile.add(new Todo(info[1], true));"},{"lineNumber":72,"author":{"gitId":"kieron560"},"content":"                        } else {"},{"lineNumber":73,"author":{"gitId":"kieron560"},"content":"                            this.loadfile.add(new Todo(info[1], false));"},{"lineNumber":74,"author":{"gitId":"kieron560"},"content":"                        }"},{"lineNumber":75,"author":{"gitId":"kieron560"},"content":"                        break;"},{"lineNumber":76,"author":{"gitId":"kieron560"},"content":"                    case (\"D\"):"},{"lineNumber":77,"author":{"gitId":"kieron560"},"content":"                        String[] info2 \u003d lineData[1].split(\" [|] \", 3);"},{"lineNumber":78,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":79,"author":{"gitId":"kieron560"},"content":"                        if (info2[0].equals(\"1\")) {"},{"lineNumber":80,"author":{"gitId":"kieron560"},"content":"                            this.loadfile.add(new Deadlines(info2[1], true, info2[2]));"},{"lineNumber":81,"author":{"gitId":"kieron560"},"content":"                        } else {"},{"lineNumber":82,"author":{"gitId":"kieron560"},"content":"                            this.loadfile.add(new Deadlines(info2[1], false, info2[2]));"},{"lineNumber":83,"author":{"gitId":"kieron560"},"content":"                        }"},{"lineNumber":84,"author":{"gitId":"kieron560"},"content":"                        break;"},{"lineNumber":85,"author":{"gitId":"kieron560"},"content":"                    case (\"E\"):"},{"lineNumber":86,"author":{"gitId":"kieron560"},"content":"                        String[] info3 \u003d lineData[1].split(\" [|] \", 3);"},{"lineNumber":87,"author":{"gitId":"kieron560"},"content":"                        String[] information \u003d Events.parseEvent(info3[2]);"},{"lineNumber":88,"author":{"gitId":"kieron560"},"content":"                        if (info3[0].equals(\"1\")) {"},{"lineNumber":89,"author":{"gitId":"kieron560"},"content":"                            this.loadfile.add(new Events(info3[1], true, information[0],"},{"lineNumber":90,"author":{"gitId":"kieron560"},"content":"                                    information[1], information[2]));"},{"lineNumber":91,"author":{"gitId":"kieron560"},"content":"                        } else {"},{"lineNumber":92,"author":{"gitId":"kieron560"},"content":"                            this.loadfile.add(new Events(info3[1], false, information[0],"},{"lineNumber":93,"author":{"gitId":"kieron560"},"content":"                                    information[1], information[2]));"},{"lineNumber":94,"author":{"gitId":"kieron560"},"content":"                        }"},{"lineNumber":95,"author":{"gitId":"kieron560"},"content":"                        break;"},{"lineNumber":96,"author":{"gitId":"kieron560"},"content":"                    default:"},{"lineNumber":97,"author":{"gitId":"kieron560"},"content":"                    }"},{"lineNumber":98,"author":{"gitId":"kieron560"},"content":"                } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":99,"author":{"gitId":"kieron560"},"content":"                    System.out.println(\"It seems one of your tasks is missing some info:\");"},{"lineNumber":100,"author":{"gitId":"kieron560"},"content":"                    System.out.println(\"--\u003e    \" + line);"},{"lineNumber":101,"author":{"gitId":"kieron560"},"content":"                    System.out.println(\"We will be skipping this task!\\n\");"},{"lineNumber":102,"author":{"gitId":"kieron560"},"content":"                }"},{"lineNumber":103,"author":{"gitId":"kieron560"},"content":"            }"},{"lineNumber":104,"author":{"gitId":"kieron560"},"content":"            reader.close();"},{"lineNumber":105,"author":{"gitId":"kieron560"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":106,"author":{"gitId":"kieron560"},"content":"            throw new DukeException(\"LoadFileError\");"},{"lineNumber":107,"author":{"gitId":"kieron560"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"kieron560"},"content":"        return this.loadfile;"},{"lineNumber":109,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":111,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"kieron560"},"content":"     * Saves the current TaskList into the load file."},{"lineNumber":113,"author":{"gitId":"kieron560"},"content":"     * @param updatedList Current TaskList."},{"lineNumber":114,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":115,"author":{"gitId":"kieron560"},"content":"    public void save(TaskList updatedList) {"},{"lineNumber":116,"author":{"gitId":"kieron560"},"content":"        List\u003cString\u003e lister \u003d new ArrayList\u003c\u003e();"},{"lineNumber":117,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":118,"author":{"gitId":"kieron560"},"content":"        for (DukeTask dukes : updatedList.getList()) {"},{"lineNumber":119,"author":{"gitId":"kieron560"},"content":"            lister.add(dukes.formatDuke());"},{"lineNumber":120,"author":{"gitId":"kieron560"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"kieron560"},"content":"        try {"},{"lineNumber":122,"author":{"gitId":"kieron560"},"content":"            Files.write(dukeTxt, lister);"},{"lineNumber":123,"author":{"gitId":"kieron560"},"content":"        } catch (IOException e) {"},{"lineNumber":124,"author":{"gitId":"kieron560"},"content":"            System.out.println(\"Error saving file!\");"},{"lineNumber":125,"author":{"gitId":"kieron560"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"kieron560"},"content":"}"}],"authorContributionMap":{"kieron560":127}},{"path":"src/main/java/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"package tasklist;"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":6,"author":{"gitId":"kieron560"},"content":"import tasks.DukeTask;"},{"lineNumber":7,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":8,"author":{"gitId":"kieron560"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"kieron560"},"content":"    private final List\u003cDukeTask\u003e list;"},{"lineNumber":10,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":11,"author":{"gitId":"kieron560"},"content":"    public TaskList() {"},{"lineNumber":12,"author":{"gitId":"kieron560"},"content":"        this.list \u003d new ArrayList\u003cDukeTask\u003e();"},{"lineNumber":13,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":15,"author":{"gitId":"kieron560"},"content":"    public TaskList(List\u003cDukeTask\u003e list) {"},{"lineNumber":16,"author":{"gitId":"kieron560"},"content":"        this.list \u003d list;"},{"lineNumber":17,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":19,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"kieron560"},"content":"     * Adds a DukeTask into the TaskList."},{"lineNumber":21,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"kieron560"},"content":"     * @param task DukeTask we want to add."},{"lineNumber":23,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"kieron560"},"content":"    public void add(DukeTask task) {"},{"lineNumber":25,"author":{"gitId":"kieron560"},"content":"        this.list.add(task);"},{"lineNumber":26,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":28,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"kieron560"},"content":"     * Marks a DukeTask in the TaskList as done."},{"lineNumber":30,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"kieron560"},"content":"     * @param index Index of DukeTask we want to mark as done."},{"lineNumber":32,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"kieron560"},"content":"    public void done(int index) {"},{"lineNumber":34,"author":{"gitId":"kieron560"},"content":"        DukeTask task \u003d this.list.get(index - 1).markDone();"},{"lineNumber":35,"author":{"gitId":"kieron560"},"content":"        this.list.set(index - 1, task);"},{"lineNumber":36,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":38,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"kieron560"},"content":"     * Deletes a DukeTask in the TaskList."},{"lineNumber":40,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"kieron560"},"content":"     * @param index Index of DukeTask we want to delete."},{"lineNumber":42,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"kieron560"},"content":"    public void delete(int index) {"},{"lineNumber":44,"author":{"gitId":"kieron560"},"content":"        this.list.remove(index - 1);"},{"lineNumber":45,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":47,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":48,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"kieron560"},"content":"     * Returns the size of the TaskList."},{"lineNumber":50,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"kieron560"},"content":"     * @return Number of DukeTasks in the list."},{"lineNumber":52,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"kieron560"},"content":"    public List\u003cDukeTask\u003e find(String word) {"},{"lineNumber":54,"author":{"gitId":"kieron560"},"content":"        List\u003cDukeTask\u003e finder \u003d new ArrayList\u003c\u003e();"},{"lineNumber":55,"author":{"gitId":"kieron560"},"content":"        for (DukeTask task : this.list) {"},{"lineNumber":56,"author":{"gitId":"kieron560"},"content":"            if (task.getName().contains(word)) {"},{"lineNumber":57,"author":{"gitId":"kieron560"},"content":"                finder.add(task);"},{"lineNumber":58,"author":{"gitId":"kieron560"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"kieron560"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"kieron560"},"content":"        return finder;"},{"lineNumber":61,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":63,"author":{"gitId":"kieron560"},"content":"    public int size() {"},{"lineNumber":64,"author":{"gitId":"kieron560"},"content":"        return this.list.size();"},{"lineNumber":65,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":67,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"kieron560"},"content":"     * Returns the List of DukeTasks."},{"lineNumber":69,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"kieron560"},"content":"     * @return List of DukeTasks."},{"lineNumber":71,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"kieron560"},"content":"    public List\u003cDukeTask\u003e getList() {"},{"lineNumber":73,"author":{"gitId":"kieron560"},"content":"        return this.list;"},{"lineNumber":74,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":76,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"kieron560"},"content":"     * Returns the DukeTasks in the TaskList at the specific index."},{"lineNumber":78,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"kieron560"},"content":"     * @param index Index of the DukeTask we want to retrieve"},{"lineNumber":80,"author":{"gitId":"kieron560"},"content":"     * @return The DukeTask we want to retrieve."},{"lineNumber":81,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"kieron560"},"content":"    public DukeTask getTask(int index) {"},{"lineNumber":83,"author":{"gitId":"kieron560"},"content":"        return this.list.get(index - 1);"},{"lineNumber":84,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":86,"author":{"gitId":"kieron560"},"content":"}"}],"authorContributionMap":{"kieron560":86}},{"path":"src/main/java/tasks/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":6,"author":{"gitId":"kieron560"},"content":"public class Deadlines extends DukeTask {"},{"lineNumber":7,"author":{"gitId":"kieron560"},"content":"    private final LocalDate deadline;"},{"lineNumber":8,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":9,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"kieron560"},"content":"     * Constructor for Deadline Task."},{"lineNumber":11,"author":{"gitId":"kieron560"},"content":"     * @param name Name of the DukeTask."},{"lineNumber":12,"author":{"gitId":"kieron560"},"content":"     * @param deadline Date of the Deadline."},{"lineNumber":13,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"kieron560"},"content":"    public Deadlines(String name, String deadline) {"},{"lineNumber":15,"author":{"gitId":"kieron560"},"content":"        super(name, TaskType.DEADLINE);"},{"lineNumber":16,"author":{"gitId":"kieron560"},"content":"        LocalDate date \u003d LocalDate.parse(deadline);"},{"lineNumber":17,"author":{"gitId":"kieron560"},"content":"        this.deadline \u003d date;"},{"lineNumber":18,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":20,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"kieron560"},"content":"     * Constructor for Deadline Task."},{"lineNumber":22,"author":{"gitId":"kieron560"},"content":"     * @param name Name of the DukeTask."},{"lineNumber":23,"author":{"gitId":"kieron560"},"content":"     * @param isDone Boolean of whether Task is done or not."},{"lineNumber":24,"author":{"gitId":"kieron560"},"content":"     * @param deadline Date of the Deadline."},{"lineNumber":25,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"kieron560"},"content":"    public Deadlines(String name, boolean isDone, String deadline) {"},{"lineNumber":27,"author":{"gitId":"kieron560"},"content":"        super(name, isDone, TaskType.DEADLINE);"},{"lineNumber":28,"author":{"gitId":"kieron560"},"content":"        LocalDate date \u003d LocalDate.parse(deadline);"},{"lineNumber":29,"author":{"gitId":"kieron560"},"content":"        this.deadline \u003d date;"},{"lineNumber":30,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":32,"author":{"gitId":"kieron560"},"content":"    private String convertDate() {"},{"lineNumber":33,"author":{"gitId":"kieron560"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d MMM uuuu\");"},{"lineNumber":34,"author":{"gitId":"kieron560"},"content":"        return this.deadline.format(formatter);"},{"lineNumber":35,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"kieron560"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"kieron560"},"content":"    public String toString() {"},{"lineNumber":38,"author":{"gitId":"kieron560"},"content":"        return super.toString() + String.format(\" (by: %s)\", this.convertDate());"},{"lineNumber":39,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":41,"author":{"gitId":"kieron560"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"kieron560"},"content":"    public String formatDuke() {"},{"lineNumber":43,"author":{"gitId":"kieron560"},"content":"        return super.formatDuke() + \" | \" + this.deadline;"},{"lineNumber":44,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":46,"author":{"gitId":"kieron560"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"kieron560"},"content":"    public DukeTask markDone() {"},{"lineNumber":48,"author":{"gitId":"kieron560"},"content":"        return new Deadlines(this.name, true, this.deadline.toString());"},{"lineNumber":49,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"kieron560"},"content":"}"},{"lineNumber":51,"author":{"gitId":"kieron560"},"content":""}],"authorContributionMap":{"kieron560":51}},{"path":"src/main/java/tasks/DukeTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":"public class DukeTask {"},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":"    protected final String name;"},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":"    protected final boolean isDone;"},{"lineNumber":6,"author":{"gitId":"kieron560"},"content":"    protected final TaskType type;"},{"lineNumber":7,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":8,"author":{"gitId":"kieron560"},"content":"    enum TaskType {"},{"lineNumber":9,"author":{"gitId":"kieron560"},"content":"        TODO(\"[T]\"),"},{"lineNumber":10,"author":{"gitId":"kieron560"},"content":"        DEADLINE(\"[D]\"),"},{"lineNumber":11,"author":{"gitId":"kieron560"},"content":"        EVENT(\"[E]\");"},{"lineNumber":12,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":13,"author":{"gitId":"kieron560"},"content":"        private final String type;"},{"lineNumber":14,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":15,"author":{"gitId":"kieron560"},"content":"        TaskType(String code) {"},{"lineNumber":16,"author":{"gitId":"kieron560"},"content":"            this.type \u003d code;"},{"lineNumber":17,"author":{"gitId":"kieron560"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":19,"author":{"gitId":"kieron560"},"content":"        @Override"},{"lineNumber":20,"author":{"gitId":"kieron560"},"content":"        public String toString() {"},{"lineNumber":21,"author":{"gitId":"kieron560"},"content":"            return this.type;"},{"lineNumber":22,"author":{"gitId":"kieron560"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":24,"author":{"gitId":"kieron560"},"content":"        public Character toType() {"},{"lineNumber":25,"author":{"gitId":"kieron560"},"content":"            return this.toString().charAt(1);"},{"lineNumber":26,"author":{"gitId":"kieron560"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":29,"author":{"gitId":"kieron560"},"content":"    public DukeTask(String name, TaskType type) {"},{"lineNumber":30,"author":{"gitId":"kieron560"},"content":"        this(name, false, type);"},{"lineNumber":31,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":33,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"kieron560"},"content":"     * Constructor for DukeTask."},{"lineNumber":35,"author":{"gitId":"kieron560"},"content":"     * @param name Name of the DukeTask."},{"lineNumber":36,"author":{"gitId":"kieron560"},"content":"     * @param isDone Boolean of whether Task is done or not."},{"lineNumber":37,"author":{"gitId":"kieron560"},"content":"     * @param type Type of the DukeTask."},{"lineNumber":38,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"kieron560"},"content":"    public DukeTask(String name, boolean isDone, TaskType type) {"},{"lineNumber":40,"author":{"gitId":"kieron560"},"content":"        this.name \u003d name;"},{"lineNumber":41,"author":{"gitId":"kieron560"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":42,"author":{"gitId":"kieron560"},"content":"        this.type \u003d type;"},{"lineNumber":43,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":45,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"kieron560"},"content":"     * Mark the DukeTask as done."},{"lineNumber":47,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"kieron560"},"content":"     * @return a new DukeTask who is marked as done."},{"lineNumber":49,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"kieron560"},"content":"    public DukeTask markDone() {"},{"lineNumber":51,"author":{"gitId":"kieron560"},"content":"        return new DukeTask(this.name, true, this.type);"},{"lineNumber":52,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":54,"author":{"gitId":"kieron560"},"content":"    public String getStatusIcon() {"},{"lineNumber":55,"author":{"gitId":"kieron560"},"content":"        return (this.isDone) ? \"[X]\" : \"[ ]\";"},{"lineNumber":56,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":58,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"kieron560"},"content":"     * Formats the DukeTask into a String for the load file."},{"lineNumber":60,"author":{"gitId":"kieron560"},"content":"     * @return a formatted String."},{"lineNumber":61,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"kieron560"},"content":"    public String formatDuke() {"},{"lineNumber":63,"author":{"gitId":"kieron560"},"content":"        Character task \u003d this.type.toType();"},{"lineNumber":64,"author":{"gitId":"kieron560"},"content":"        int done \u003d (this.isDone) ? 1 : 0;"},{"lineNumber":65,"author":{"gitId":"kieron560"},"content":"        return String.format(\"%s | %d | %s\", task, done, this.name);"},{"lineNumber":66,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":68,"author":{"gitId":"kieron560"},"content":"    public String getName() {"},{"lineNumber":69,"author":{"gitId":"kieron560"},"content":"        return this.name;"},{"lineNumber":70,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"kieron560"},"content":"    @Override"},{"lineNumber":72,"author":{"gitId":"kieron560"},"content":"    public String toString() {"},{"lineNumber":73,"author":{"gitId":"kieron560"},"content":"        return this.type + this.getStatusIcon() + \" \" + this.name;"},{"lineNumber":74,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"kieron560"},"content":"}"}],"authorContributionMap":{"kieron560":75}},{"path":"src/main/java/tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":"import java.time.LocalTime;"},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":"public class Events extends DukeTask {"},{"lineNumber":6,"author":{"gitId":"kieron560"},"content":"    private final String day;"},{"lineNumber":7,"author":{"gitId":"kieron560"},"content":"    private final LocalTime start;"},{"lineNumber":8,"author":{"gitId":"kieron560"},"content":"    private final LocalTime end;"},{"lineNumber":9,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":10,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"kieron560"},"content":"     * Constructor for Event Task."},{"lineNumber":12,"author":{"gitId":"kieron560"},"content":"     * @param name Name of the Event."},{"lineNumber":13,"author":{"gitId":"kieron560"},"content":"     * @param day Day of the Event."},{"lineNumber":14,"author":{"gitId":"kieron560"},"content":"     * @param start Start Time of the Event."},{"lineNumber":15,"author":{"gitId":"kieron560"},"content":"     * @param end End Time of the Event."},{"lineNumber":16,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"kieron560"},"content":"    public Events(String name, String day, String start, String end) {"},{"lineNumber":18,"author":{"gitId":"kieron560"},"content":"        super(name, TaskType.EVENT);"},{"lineNumber":19,"author":{"gitId":"kieron560"},"content":"        this.day \u003d day;"},{"lineNumber":20,"author":{"gitId":"kieron560"},"content":"        this.start \u003d LocalTime.parse(start);"},{"lineNumber":21,"author":{"gitId":"kieron560"},"content":"        this.end \u003d LocalTime.parse(end);"},{"lineNumber":22,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":24,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"kieron560"},"content":"     * Constructor for Event Task."},{"lineNumber":26,"author":{"gitId":"kieron560"},"content":"     * @param name Name of the Event."},{"lineNumber":27,"author":{"gitId":"kieron560"},"content":"     * @param isDone Boolean of whether Event is done or not."},{"lineNumber":28,"author":{"gitId":"kieron560"},"content":"     * @param day Day of the Event."},{"lineNumber":29,"author":{"gitId":"kieron560"},"content":"     * @param start Start Time of the Event."},{"lineNumber":30,"author":{"gitId":"kieron560"},"content":"     * @param end End Time of the Event."},{"lineNumber":31,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"kieron560"},"content":"    public Events(String name, boolean isDone, String day, String start, String end) {"},{"lineNumber":33,"author":{"gitId":"kieron560"},"content":"        super(name, isDone, TaskType.EVENT);"},{"lineNumber":34,"author":{"gitId":"kieron560"},"content":"        this.day \u003d day;"},{"lineNumber":35,"author":{"gitId":"kieron560"},"content":"        this.start \u003d LocalTime.parse(start);"},{"lineNumber":36,"author":{"gitId":"kieron560"},"content":"        this.end \u003d LocalTime.parse(end);"},{"lineNumber":37,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":39,"author":{"gitId":"kieron560"},"content":"    private String convertDayTime() {"},{"lineNumber":40,"author":{"gitId":"kieron560"},"content":"        return String.format(\"%s %s - %s\", this.day, this.start.toString(), this.end.toString());"},{"lineNumber":41,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":43,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"kieron560"},"content":"     * Parse the date in String form into a String array of date and timings."},{"lineNumber":45,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"kieron560"},"content":"     * @param datetime String of the entire DateTime."},{"lineNumber":47,"author":{"gitId":"kieron560"},"content":"     * @return String array of dates and timings."},{"lineNumber":48,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"kieron560"},"content":"    public static String[] parseEvent(String datetime) {"},{"lineNumber":50,"author":{"gitId":"kieron560"},"content":"        String[] days \u003d datetime.split(\" \", 2);"},{"lineNumber":51,"author":{"gitId":"kieron560"},"content":"        String[] time \u003d days[1].split(\" - \", 2);"},{"lineNumber":52,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":53,"author":{"gitId":"kieron560"},"content":"        return new String[]{days[0], time[0], time[1]};"},{"lineNumber":54,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":56,"author":{"gitId":"kieron560"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"kieron560"},"content":"    public String toString() {"},{"lineNumber":58,"author":{"gitId":"kieron560"},"content":"        return super.toString() + String.format(\" (at: %s)\", this.convertDayTime());"},{"lineNumber":59,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":61,"author":{"gitId":"kieron560"},"content":"    @Override"},{"lineNumber":62,"author":{"gitId":"kieron560"},"content":"    public String formatDuke() {"},{"lineNumber":63,"author":{"gitId":"kieron560"},"content":"        return super.formatDuke() + \" | \" + this.convertDayTime();"},{"lineNumber":64,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":66,"author":{"gitId":"kieron560"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"kieron560"},"content":"    public DukeTask markDone() {"},{"lineNumber":68,"author":{"gitId":"kieron560"},"content":"        return new Events(this.name, true, this.day, this.start.toString(),"},{"lineNumber":69,"author":{"gitId":"kieron560"},"content":"                this.end.toString());"},{"lineNumber":70,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"kieron560"},"content":"}"},{"lineNumber":72,"author":{"gitId":"kieron560"},"content":""}],"authorContributionMap":{"kieron560":72}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":"public class Todo extends DukeTask {"},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":"    public Todo(String name) {"},{"lineNumber":6,"author":{"gitId":"kieron560"},"content":"        super(name, TaskType.TODO);"},{"lineNumber":7,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":9,"author":{"gitId":"kieron560"},"content":"    public Todo(String name, boolean isDone) {"},{"lineNumber":10,"author":{"gitId":"kieron560"},"content":"        super(name, isDone, TaskType.TODO);"},{"lineNumber":11,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":13,"author":{"gitId":"kieron560"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"kieron560"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"kieron560"},"content":"        return super.toString();"},{"lineNumber":16,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":18,"author":{"gitId":"kieron560"},"content":"}"}],"authorContributionMap":{"kieron560":18}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":6,"author":{"gitId":"kieron560"},"content":"import tasklist.TaskList;"},{"lineNumber":7,"author":{"gitId":"kieron560"},"content":"import tasks.DukeTask;"},{"lineNumber":8,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":9,"author":{"gitId":"kieron560"},"content":"public class Ui {"},{"lineNumber":10,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":11,"author":{"gitId":"kieron560"},"content":"    private final String logo \u003d"},{"lineNumber":12,"author":{"gitId":"kieron560"},"content":"            \" ____        _        \\n\""},{"lineNumber":13,"author":{"gitId":"kieron560"},"content":"                    + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":14,"author":{"gitId":"kieron560"},"content":"                    + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":15,"author":{"gitId":"kieron560"},"content":"                    + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":16,"author":{"gitId":"kieron560"},"content":"                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":17,"author":{"gitId":"kieron560"},"content":"    public Ui() { }"},{"lineNumber":18,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":19,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":20,"author":{"gitId":"kieron560"},"content":"    public void printMessage(String message) {"},{"lineNumber":21,"author":{"gitId":"kieron560"},"content":"        System.out.println(message);"},{"lineNumber":22,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":24,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":25,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"kieron560"},"content":"     * Introduction output from the UI."},{"lineNumber":27,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"kieron560"},"content":"     * @return the String output for this command."},{"lineNumber":29,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"kieron560"},"content":"    public String introduction() {"},{"lineNumber":31,"author":{"gitId":"kieron560"},"content":"        return \"Hello from\\n\" + logo"},{"lineNumber":32,"author":{"gitId":"kieron560"},"content":"                + \"Please enter the keyword:\\n\""},{"lineNumber":33,"author":{"gitId":"kieron560"},"content":"                + \"        help\\n\" + \"to see the list of commands\\n\""},{"lineNumber":34,"author":{"gitId":"kieron560"},"content":"                + \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\";"},{"lineNumber":35,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":37,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"kieron560"},"content":"     * Help output from the UI."},{"lineNumber":39,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"kieron560"},"content":"     * @return the String output for this command."},{"lineNumber":41,"author":{"gitId":"kieron560"},"content":"     * */"},{"lineNumber":42,"author":{"gitId":"kieron560"},"content":"    public String help() {"},{"lineNumber":43,"author":{"gitId":"kieron560"},"content":"        return \"Here is the list of commands:\""},{"lineNumber":44,"author":{"gitId":"kieron560"},"content":"                + \"\\nShow list of commands:\\n - help\""},{"lineNumber":45,"author":{"gitId":"kieron560"},"content":"                + \"\\nExit duke:\\n - bye\""},{"lineNumber":46,"author":{"gitId":"kieron560"},"content":"                + \"\\nDisplay list of tasks:\\n - list\""},{"lineNumber":47,"author":{"gitId":"kieron560"},"content":"                + \"\\nDelete task:\\n - delete \u003ctask id\u003e\""},{"lineNumber":48,"author":{"gitId":"kieron560"},"content":"                + \"\\nSet task as completed:\\n - done \u003ctask id\u003e\""},{"lineNumber":49,"author":{"gitId":"kieron560"},"content":"                + \"\\nFilter tasks by keyword (in description):\\n - find \u003ckeyword\u003e\""},{"lineNumber":50,"author":{"gitId":"kieron560"},"content":"                + \"\\nAdd a new task:\\n - todo \u003ctask\u003e\""},{"lineNumber":51,"author":{"gitId":"kieron560"},"content":"                + \"\\nAdd a new deadline:\\n - deadline \u003ctask\u003e /by \u003cyyyy-mm-dd\u003e\""},{"lineNumber":52,"author":{"gitId":"kieron560"},"content":"                + \"\\nAdd a new event:\\n - event \u003cname\u003e /at \u003cyyyy-mm-dd\u003e \u003chh:mm\u003e - \u003chh:mm\u003e\""},{"lineNumber":53,"author":{"gitId":"kieron560"},"content":"                + \"\\n**REMEMBER to exclude the \u003c \u003e when entering keywords\\n\";"},{"lineNumber":54,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":56,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"kieron560"},"content":"     * Pre-loading output from the UI."},{"lineNumber":58,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"kieron560"},"content":"     * @return the String output for this command."},{"lineNumber":60,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"kieron560"},"content":"    public String preload() {"},{"lineNumber":62,"author":{"gitId":"kieron560"},"content":"        return \"--Booting up Application--\\n\""},{"lineNumber":63,"author":{"gitId":"kieron560"},"content":"            + \"Checking if loading data exist...\\n\";"},{"lineNumber":64,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":66,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"kieron560"},"content":"     * Goodbye output from the UI."},{"lineNumber":68,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"kieron560"},"content":"     * @return the String output for this command."},{"lineNumber":70,"author":{"gitId":"kieron560"},"content":"     * */"},{"lineNumber":71,"author":{"gitId":"kieron560"},"content":"    public String goodbye() {"},{"lineNumber":72,"author":{"gitId":"kieron560"},"content":"        return \"Bye. Hope to see you again soon!\";"},{"lineNumber":73,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":75,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"kieron560"},"content":"     * Reads the input by the user."},{"lineNumber":77,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"kieron560"},"content":"     * @return the input by the user."},{"lineNumber":79,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"kieron560"},"content":"    public String readCommand() {"},{"lineNumber":81,"author":{"gitId":"kieron560"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":82,"author":{"gitId":"kieron560"},"content":"        return sc.nextLine();"},{"lineNumber":83,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":85,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"kieron560"},"content":"     * Adding Tasks output from the UI."},{"lineNumber":87,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"kieron560"},"content":"     * @param task The DukeTask Added."},{"lineNumber":89,"author":{"gitId":"kieron560"},"content":"     * @param size The size of the TaskList."},{"lineNumber":90,"author":{"gitId":"kieron560"},"content":"     * @return the String output for this command."},{"lineNumber":91,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"kieron560"},"content":"    public String add(DukeTask task, int size) {"},{"lineNumber":93,"author":{"gitId":"kieron560"},"content":"        return \"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":94,"author":{"gitId":"kieron560"},"content":"                + \"  \" + task + \"\\n\""},{"lineNumber":95,"author":{"gitId":"kieron560"},"content":"                + String.format(\"Now you have %d tasks in the list.\\n\", size);"},{"lineNumber":96,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":98,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"kieron560"},"content":"     * Deleting Tasks output from the UI."},{"lineNumber":100,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":101,"author":{"gitId":"kieron560"},"content":"     * @param task The DukeTask deleted."},{"lineNumber":102,"author":{"gitId":"kieron560"},"content":"     * @param size The size of the TaskList."},{"lineNumber":103,"author":{"gitId":"kieron560"},"content":"     * @return the String output for this command."},{"lineNumber":104,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"kieron560"},"content":"    public String delete(DukeTask task, int size) {"},{"lineNumber":106,"author":{"gitId":"kieron560"},"content":"        return \"Noted. I\u0027ve removed this task:\\n\""},{"lineNumber":107,"author":{"gitId":"kieron560"},"content":"            + \"  \" + task"},{"lineNumber":108,"author":{"gitId":"kieron560"},"content":"            + String.format(\"Now you have %d tasks in the list.\\n\", size);"},{"lineNumber":109,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":111,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"kieron560"},"content":"     * Done output from the UI."},{"lineNumber":113,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":114,"author":{"gitId":"kieron560"},"content":"     * @param task Task marked as done."},{"lineNumber":115,"author":{"gitId":"kieron560"},"content":"     * @return the String output for this command."},{"lineNumber":116,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"kieron560"},"content":"    public String done(DukeTask task) {"},{"lineNumber":118,"author":{"gitId":"kieron560"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n\""},{"lineNumber":119,"author":{"gitId":"kieron560"},"content":"            + \"  \" + task + \"\\n\";"},{"lineNumber":120,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":122,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"kieron560"},"content":"     * Lists the tasks in the taskList."},{"lineNumber":124,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":125,"author":{"gitId":"kieron560"},"content":"     * @param taskList The TaskList."},{"lineNumber":126,"author":{"gitId":"kieron560"},"content":"     * @return the String output for this command."},{"lineNumber":127,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"kieron560"},"content":"    public String list(TaskList taskList) {"},{"lineNumber":129,"author":{"gitId":"kieron560"},"content":"        int i \u003d 1;"},{"lineNumber":130,"author":{"gitId":"kieron560"},"content":"        String output \u003d \"\";"},{"lineNumber":131,"author":{"gitId":"kieron560"},"content":"        output +\u003d \"Here are the tasks in your list:\\n\";"},{"lineNumber":132,"author":{"gitId":"kieron560"},"content":"        for (DukeTask items : taskList.getList()) {"},{"lineNumber":133,"author":{"gitId":"kieron560"},"content":"            output +\u003d String.format(\"%d.%s\\n\", i, items);"},{"lineNumber":134,"author":{"gitId":"kieron560"},"content":"            i++;"},{"lineNumber":135,"author":{"gitId":"kieron560"},"content":"        }"},{"lineNumber":136,"author":{"gitId":"kieron560"},"content":"        return output;"},{"lineNumber":137,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":139,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":140,"author":{"gitId":"kieron560"},"content":"     * Shows the item in the List."},{"lineNumber":141,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":142,"author":{"gitId":"kieron560"},"content":"     * @param taskList List of Tasks containing the keyword."},{"lineNumber":143,"author":{"gitId":"kieron560"},"content":"     * @return the String output for this command."},{"lineNumber":144,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":145,"author":{"gitId":"kieron560"},"content":"    public String find(List\u003cDukeTask\u003e taskList) {"},{"lineNumber":146,"author":{"gitId":"kieron560"},"content":"        int i \u003d 1;"},{"lineNumber":147,"author":{"gitId":"kieron560"},"content":"        String output \u003d \"\";"},{"lineNumber":148,"author":{"gitId":"kieron560"},"content":"        output +\u003d \"Here are the matching tasks in your list:\\n\";"},{"lineNumber":149,"author":{"gitId":"kieron560"},"content":"        for (DukeTask items : taskList) {"},{"lineNumber":150,"author":{"gitId":"kieron560"},"content":"            output +\u003d String.format(\"%d.%s\", i, items);"},{"lineNumber":151,"author":{"gitId":"kieron560"},"content":"            i++;"},{"lineNumber":152,"author":{"gitId":"kieron560"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"kieron560"},"content":"        return output;"},{"lineNumber":154,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":155,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":156,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":157,"author":{"gitId":"kieron560"},"content":"     * Loading File Error output from the UI."},{"lineNumber":158,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":159,"author":{"gitId":"kieron560"},"content":"     * @return the String output for this command."},{"lineNumber":160,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":161,"author":{"gitId":"kieron560"},"content":"    public String loadFileError() {"},{"lineNumber":162,"author":{"gitId":"kieron560"},"content":"        return \"An error occurred while loading!!\";"},{"lineNumber":163,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":165,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":166,"author":{"gitId":"kieron560"},"content":"     * Index Out of Bounds Error output from the UI."},{"lineNumber":167,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":168,"author":{"gitId":"kieron560"},"content":"     * @return the String output for this command."},{"lineNumber":169,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":170,"author":{"gitId":"kieron560"},"content":"    public String arrayIndexOutOfBoundsError() {"},{"lineNumber":171,"author":{"gitId":"kieron560"},"content":"        return \"☹ OOPS!!! The index needs to be in range of the list.\\n\";"},{"lineNumber":172,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":174,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":175,"author":{"gitId":"kieron560"},"content":"     * Empty Index Error output from the UI."},{"lineNumber":176,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":177,"author":{"gitId":"kieron560"},"content":"     * @return the String output for this command."},{"lineNumber":178,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":179,"author":{"gitId":"kieron560"},"content":"    public String emptyIndexError() {"},{"lineNumber":180,"author":{"gitId":"kieron560"},"content":"        return \"☹ OOPS!!! I need the index of the task you want done.\\n\";"},{"lineNumber":181,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":182,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":183,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":184,"author":{"gitId":"kieron560"},"content":"     * Empty Description Error output from the UI."},{"lineNumber":185,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":186,"author":{"gitId":"kieron560"},"content":"     * @param tasktype Type of the Task."},{"lineNumber":187,"author":{"gitId":"kieron560"},"content":"     * @return the String output for this command."},{"lineNumber":188,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":189,"author":{"gitId":"kieron560"},"content":"    public String emptyDescriptionError(String tasktype) {"},{"lineNumber":190,"author":{"gitId":"kieron560"},"content":"        return \"☹ OOPS!!! The description of a \" + tasktype + \" cannot be empty.\\n\";"},{"lineNumber":191,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":192,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":193,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":194,"author":{"gitId":"kieron560"},"content":"     * Empty Details Error output from the UI."},{"lineNumber":195,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":196,"author":{"gitId":"kieron560"},"content":"     * @param tasktype Type of the Task."},{"lineNumber":197,"author":{"gitId":"kieron560"},"content":"     * @return the String output for this command."},{"lineNumber":198,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":199,"author":{"gitId":"kieron560"},"content":"    public String emptyDetailsError(String tasktype) {"},{"lineNumber":200,"author":{"gitId":"kieron560"},"content":"        if (tasktype.equals(\"deadline\")) {"},{"lineNumber":201,"author":{"gitId":"kieron560"},"content":"            return \"☹ OOPS!!! The date of a deadline cannot be empty.\\n\";"},{"lineNumber":202,"author":{"gitId":"kieron560"},"content":"        } else {"},{"lineNumber":203,"author":{"gitId":"kieron560"},"content":"            return \"☹ OOPS!!! The timing of an event cannot be empty.\\n\";"},{"lineNumber":204,"author":{"gitId":"kieron560"},"content":"        }"},{"lineNumber":205,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":206,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":207,"author":{"gitId":"kieron560"},"content":"    /**"},{"lineNumber":208,"author":{"gitId":"kieron560"},"content":"     * Unknown Command Error output from the UI."},{"lineNumber":209,"author":{"gitId":"kieron560"},"content":"     *"},{"lineNumber":210,"author":{"gitId":"kieron560"},"content":"     * @return the String output for this command."},{"lineNumber":211,"author":{"gitId":"kieron560"},"content":"     */"},{"lineNumber":212,"author":{"gitId":"kieron560"},"content":"    public String unknownCommandError() {"},{"lineNumber":213,"author":{"gitId":"kieron560"},"content":"        return \"☹ OOPS!!! Command is not recognized!!\\n\";"},{"lineNumber":214,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":215,"author":{"gitId":"kieron560"},"content":"}"},{"lineNumber":216,"author":{"gitId":"kieron560"},"content":""}],"authorContributionMap":{"kieron560":216}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"kieron560"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":8,"author":{"gitId":"kieron560"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" minHeight\u003d\"-Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"kieron560"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"kieron560"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"},{"lineNumber":11,"author":{"gitId":"kieron560"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"kieron560"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"kieron560"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"kieron560"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"kieron560"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"kieron560"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"kieron560":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"kieron560"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"kieron560"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":9,"author":{"gitId":"kieron560"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"kieron560"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"kieron560"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"kieron560"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"kieron560"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" pannable\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vbarPolicy\u003d\"AS_NEEDED\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"kieron560"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"kieron560"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"kieron560"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"kieron560"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"kieron560"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"kieron560"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"kieron560":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":7,"author":{"gitId":"kieron560"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":9,"author":{"gitId":"kieron560"},"content":"import commands.AddCommand;"},{"lineNumber":10,"author":{"gitId":"kieron560"},"content":"import commands.ByeCommand;"},{"lineNumber":11,"author":{"gitId":"kieron560"},"content":"import commands.DeleteCommand;"},{"lineNumber":12,"author":{"gitId":"kieron560"},"content":"import commands.DoneCommand;"},{"lineNumber":13,"author":{"gitId":"kieron560"},"content":"import commands.ListCommand;"},{"lineNumber":14,"author":{"gitId":"kieron560"},"content":"import exceptions.DukeException;"},{"lineNumber":15,"author":{"gitId":"kieron560"},"content":"import parser.Parser;"},{"lineNumber":16,"author":{"gitId":"kieron560"},"content":"import tasks.Deadlines;"},{"lineNumber":17,"author":{"gitId":"kieron560"},"content":"import tasks.Events;"},{"lineNumber":18,"author":{"gitId":"kieron560"},"content":"import tasks.Todo;"},{"lineNumber":19,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":20,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":21,"author":{"gitId":"kieron560"},"content":"public class DukeTest {"},{"lineNumber":22,"author":{"gitId":"kieron560"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"kieron560"},"content":"    public void parserTest() throws DukeException {"},{"lineNumber":24,"author":{"gitId":"kieron560"},"content":"        assertTrue(Parser.parse(\"bye\") instanceof ByeCommand);"},{"lineNumber":25,"author":{"gitId":"kieron560"},"content":"        assertTrue(Parser.parse(\"list\") instanceof ListCommand);"},{"lineNumber":26,"author":{"gitId":"kieron560"},"content":"        assertTrue(Parser.parse(\"done 1\") instanceof DoneCommand);"},{"lineNumber":27,"author":{"gitId":"kieron560"},"content":"        assertTrue(Parser.parse(\"delete 1\") instanceof DeleteCommand);"},{"lineNumber":28,"author":{"gitId":"kieron560"},"content":"        assertTrue(Parser.parse(\"todo t1\") instanceof AddCommand);"},{"lineNumber":29,"author":{"gitId":"kieron560"},"content":"        assertTrue(Parser.parse(\"deadline d1 /by 2020-06-02\") instanceof AddCommand);"},{"lineNumber":30,"author":{"gitId":"kieron560"},"content":"        assertTrue(Parser.parse(\"event e1 /at Monday 12:00 - 14:00\") instanceof AddCommand);"},{"lineNumber":31,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":33,"author":{"gitId":"kieron560"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"kieron560"},"content":"    public void exitTest() {"},{"lineNumber":35,"author":{"gitId":"kieron560"},"content":"        assertEquals(true, new ByeCommand().isExit());"},{"lineNumber":36,"author":{"gitId":"kieron560"},"content":"        assertEquals(false, new ListCommand().isExit());"},{"lineNumber":37,"author":{"gitId":"kieron560"},"content":"        assertEquals(false, new DoneCommand(0).isExit());"},{"lineNumber":38,"author":{"gitId":"kieron560"},"content":"        assertEquals(false, new DeleteCommand(0).isExit());"},{"lineNumber":39,"author":{"gitId":"kieron560"},"content":"        assertEquals(false, new AddCommand(new Todo(\"test\")).isExit());"},{"lineNumber":40,"author":{"gitId":"kieron560"},"content":"        assertEquals(false, new AddCommand(new Deadlines(\"test\", \"2020-06-02\")).isExit());"},{"lineNumber":41,"author":{"gitId":"kieron560"},"content":"        assertEquals(false, new AddCommand(new Events(\"test\", \"Monday\","},{"lineNumber":42,"author":{"gitId":"kieron560"},"content":"                \"10:00\", \"12:00\")).isExit());"},{"lineNumber":43,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":45,"author":{"gitId":"kieron560"},"content":"}"},{"lineNumber":46,"author":{"gitId":"kieron560"},"content":""}],"authorContributionMap":{"kieron560":46}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":7,"author":{"gitId":"kieron560"},"content":"import tasks.Events;"},{"lineNumber":8,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":9,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":10,"author":{"gitId":"kieron560"},"content":"public class EventTest {"},{"lineNumber":11,"author":{"gitId":"kieron560"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"kieron560"},"content":"    public void printFormat_eventMarkedasDone() {"},{"lineNumber":13,"author":{"gitId":"kieron560"},"content":"        Events testEvent \u003d new Events(\"test\", true, \"Monday\", \"10:00\", \"12:00\");"},{"lineNumber":14,"author":{"gitId":"kieron560"},"content":"        assertEquals(testEvent.toString(), \"[E][X] test (at: Monday 10:00 - 12:00)\");"},{"lineNumber":15,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":17,"author":{"gitId":"kieron560"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"kieron560"},"content":"    public void printFormat_event() {"},{"lineNumber":19,"author":{"gitId":"kieron560"},"content":"        Events testEvent \u003d new Events(\"test\", false, \"Monday\", \"10:00\", \"12:00\");"},{"lineNumber":20,"author":{"gitId":"kieron560"},"content":"        assertEquals(testEvent.toString(), \"[E][ ] test (at: Monday 10:00 - 12:00)\");"},{"lineNumber":21,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"kieron560"},"content":"}"}],"authorContributionMap":{"kieron560":22}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kieron560"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":3,"author":{"gitId":"kieron560"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":5,"author":{"gitId":"kieron560"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":7,"author":{"gitId":"kieron560"},"content":"import tasks.Todo;"},{"lineNumber":8,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":9,"author":{"gitId":"kieron560"},"content":"public class TodoTest {"},{"lineNumber":10,"author":{"gitId":"kieron560"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"kieron560"},"content":"    public void printFormat_todoMarkedasDone() {"},{"lineNumber":12,"author":{"gitId":"kieron560"},"content":"        Todo testTodo \u003d new Todo(\"test\", true);"},{"lineNumber":13,"author":{"gitId":"kieron560"},"content":"        assertEquals(testTodo.toString(), \"[T][X] test\");"},{"lineNumber":14,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":16,"author":{"gitId":"kieron560"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"kieron560"},"content":"    public void printFormat_todo() {"},{"lineNumber":18,"author":{"gitId":"kieron560"},"content":"        Todo testTodo \u003d new Todo(\"test\", false);"},{"lineNumber":19,"author":{"gitId":"kieron560"},"content":"        assertEquals(testTodo.toString(), \"[T][ ] test\");"},{"lineNumber":20,"author":{"gitId":"kieron560"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":22,"author":{"gitId":"kieron560"},"content":""},{"lineNumber":23,"author":{"gitId":"kieron560"},"content":"}"},{"lineNumber":24,"author":{"gitId":"kieron560"},"content":""}],"authorContributionMap":{"kieron560":24}}]
