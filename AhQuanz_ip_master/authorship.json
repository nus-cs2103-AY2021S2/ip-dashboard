[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"AhQuanz"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":18,"author":{"gitId":"AhQuanz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"AhQuanz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"AhQuanz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"AhQuanz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"AhQuanz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"AhQuanz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"AhQuanz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"AhQuanz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"},{"lineNumber":62,"author":{"gitId":"AhQuanz"},"content":""}],"authorContributionMap":{"AhQuanz":15,"-":47}},{"path":"src/main/java/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AhQuanz"},"content":"public class AddCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"    private Task task;"},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"    public AddCommand(Task task) {"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":"        this.task \u003d task;"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":"    public String excute(TaskList taskList) {"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":"        return taskList.addTask(task);"},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"AhQuanz"},"content":"}"}],"authorContributionMap":{"AhQuanz":11}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AhQuanz"},"content":"public abstract class Command {"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"    public abstract String excute(TaskList tasks);"},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"    public boolean isExit() {"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":"        return false;"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":"}"}],"authorContributionMap":{"AhQuanz":7}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AhQuanz"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":"/** Class Deadline that represent a task with a deadline **/"},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"public class Deadline extends Task{"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":"    /** Symbol to represent a deadline task **/"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"    private static final char SYMBOL \u003d \u0027D\u0027;"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":"    /** deadline of the task **/"},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":"    private LocalDateTime deadline;"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"AhQuanz"},"content":"     * Constructor of a Deadline task."},{"lineNumber":12,"author":{"gitId":"AhQuanz"},"content":"     * @param desc Description of the deadline task"},{"lineNumber":13,"author":{"gitId":"AhQuanz"},"content":"     * @param deadline Deadline of the deadline task"},{"lineNumber":14,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"AhQuanz"},"content":"    public Deadline(String desc, LocalDateTime deadline) {"},{"lineNumber":16,"author":{"gitId":"AhQuanz"},"content":"        super(desc);"},{"lineNumber":17,"author":{"gitId":"AhQuanz"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":18,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":20,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"AhQuanz"},"content":"     * Returns the representation of a task."},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"     * @return String representation of a task"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"AhQuanz"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"AhQuanz"},"content":"        return String.format(\"[%c] %s (by: %s)\", SYMBOL, super.toString(), super.format(this.deadline));"},{"lineNumber":27,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":29,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"AhQuanz"},"content":"     * Returns the representation of a task for saving."},{"lineNumber":31,"author":{"gitId":"AhQuanz"},"content":"     * @return String representation of a task for saving"},{"lineNumber":32,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"AhQuanz"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"AhQuanz"},"content":"    public String save() {"},{"lineNumber":35,"author":{"gitId":"AhQuanz"},"content":"        return String.format(\"%c,%s,%s\\n\", SYMBOL, super.save(), super.saveFormat(this.deadline));"},{"lineNumber":36,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":"}"}],"authorContributionMap":{"AhQuanz":37}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AhQuanz"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"    private int option;"},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"    public DeleteCommand(int option) {"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":"        this.option \u003d option;"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":"    public String excute(TaskList taskList) {"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":"        return taskList.deleteTask(option);"},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"AhQuanz"},"content":"}"}],"authorContributionMap":{"AhQuanz":11}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AhQuanz"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"AhQuanz"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"AhQuanz"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"AhQuanz"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":15,"author":{"gitId":"AhQuanz"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"AhQuanz"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"AhQuanz"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"AhQuanz"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":" */"},{"lineNumber":20,"author":{"gitId":"AhQuanz"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"AhQuanz"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":26,"author":{"gitId":"AhQuanz"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"AhQuanz"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"AhQuanz"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"AhQuanz"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"AhQuanz"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"AhQuanz"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"AhQuanz"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"AhQuanz"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"AhQuanz"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":36,"author":{"gitId":"AhQuanz"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":40,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"AhQuanz"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":42,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"AhQuanz"},"content":"    private void flip() {"},{"lineNumber":44,"author":{"gitId":"AhQuanz"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":45,"author":{"gitId":"AhQuanz"},"content":"        Collections.reverse(tmp);"},{"lineNumber":46,"author":{"gitId":"AhQuanz"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":47,"author":{"gitId":"AhQuanz"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":48,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":50,"author":{"gitId":"AhQuanz"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":51,"author":{"gitId":"AhQuanz"},"content":"        return new DialogBox(text, img);"},{"lineNumber":52,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":54,"author":{"gitId":"AhQuanz"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"AhQuanz"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":56,"author":{"gitId":"AhQuanz"},"content":"        db.flip();"},{"lineNumber":57,"author":{"gitId":"AhQuanz"},"content":"        return db;"},{"lineNumber":58,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"AhQuanz"},"content":"}"}],"authorContributionMap":{"AhQuanz":59}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AhQuanz"},"content":"public class DoneCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"    private int option;"},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"    public DoneCommand(int option) {"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":"        this.option \u003d option;"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":"    public String excute(TaskList taskList) {"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":"        return taskList.markAsDone(this.option);"},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"AhQuanz"},"content":"}"}],"authorContributionMap":{"AhQuanz":11}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"    private boolean isSetUp \u003d false;"},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"    public String getResponse(String fullCommand) {"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":"        if (!isSetUp) {"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"            isSetUp \u003d true;"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":"            return Ui.load(fullCommand);"},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":"        }"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":"        return Ui.parseAndPrint(fullCommand);"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"AhQuanz":8,"-":3}},{"path":"src/main/java/DukeDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AhQuanz"},"content":"public class DukeDeadlineException extends Exception {"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"    public DukeDeadlineException(String message) {"},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":"        super(message);"},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":"}"}],"authorContributionMap":{"AhQuanz":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AhQuanz"},"content":"public class DukeException extends Exception{"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"    public DukeException(String message) {"},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":"        super(message);"},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":"}"}],"authorContributionMap":{"AhQuanz":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AhQuanz"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":"/** Class Event that represents a Event task**/"},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"public class Event extends Task{"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":"    /** Symbol to represent a Event task **/"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"    private static final char SYMBOL \u003d \u0027E\u0027;"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":"    /** Start datetime of the event **/"},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":"    private LocalDateTime start;"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":"    /** End datetime of the event **/"},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":"    private LocalDateTime end;"},{"lineNumber":11,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":12,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"AhQuanz"},"content":"     * Constructor of a Event task."},{"lineNumber":14,"author":{"gitId":"AhQuanz"},"content":"     * @param desc Description of the deadline task"},{"lineNumber":15,"author":{"gitId":"AhQuanz"},"content":"     * @param start Start datetime of the event"},{"lineNumber":16,"author":{"gitId":"AhQuanz"},"content":"     * @param end End datetime of the event"},{"lineNumber":17,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"AhQuanz"},"content":"    public Event(String desc, LocalDateTime start, LocalDateTime end) {"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":"        super(desc);"},{"lineNumber":20,"author":{"gitId":"AhQuanz"},"content":"        this.start \u003d start;"},{"lineNumber":21,"author":{"gitId":"AhQuanz"},"content":"        this.end \u003d end;"},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"AhQuanz"},"content":"     * Returns the representation of a task."},{"lineNumber":26,"author":{"gitId":"AhQuanz"},"content":"     * @return String representation of a task"},{"lineNumber":27,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"AhQuanz"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"AhQuanz"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"AhQuanz"},"content":"        return String.format(\"[%c] %s (%s - %s)\", SYMBOL, super.toString(),"},{"lineNumber":31,"author":{"gitId":"AhQuanz"},"content":"                    super.format(this.start), super.format(this.end));"},{"lineNumber":32,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":34,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"AhQuanz"},"content":"     * Returns the representation of a task for saving."},{"lineNumber":36,"author":{"gitId":"AhQuanz"},"content":"     * @return String representation of a task for saving"},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"AhQuanz"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"AhQuanz"},"content":"    public String save() {"},{"lineNumber":40,"author":{"gitId":"AhQuanz"},"content":"        return String.format(\"%c,%s,%s,%s\\n\", SYMBOL, super.save(),"},{"lineNumber":41,"author":{"gitId":"AhQuanz"},"content":"                    super.saveFormat(this.start), super.saveFormat(this.end));"},{"lineNumber":42,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"AhQuanz"},"content":"}"}],"authorContributionMap":{"AhQuanz":43}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AhQuanz"},"content":"public class FindCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"    private String searchTerm;"},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"    public FindCommand(String searchTerm) {"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":"        this.searchTerm \u003d searchTerm;"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":"    public String excute(TaskList taskList) {"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":"        return taskList.search(searchTerm);"},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"AhQuanz"},"content":"}"}],"authorContributionMap":{"AhQuanz":11}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AhQuanz"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":" */"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":"}"}],"authorContributionMap":{"AhQuanz":10}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AhQuanz"},"content":"public class ListCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"    public String excute(TaskList taskList) {"},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":"        return taskList.printAllTask();"},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":"}"}],"authorContributionMap":{"AhQuanz":5}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AhQuanz"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"import javafx.application.Application;"},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"import javafx.scene.Scene;"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"import javafx.stage.Stage;"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":" * A GUI for Duke using FXML."},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":" */"},{"lineNumber":11,"author":{"gitId":"AhQuanz"},"content":"public class Main extends Application {"},{"lineNumber":12,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":13,"author":{"gitId":"AhQuanz"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":14,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":15,"author":{"gitId":"AhQuanz"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"AhQuanz"},"content":"    public void start(Stage stage) {"},{"lineNumber":17,"author":{"gitId":"AhQuanz"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"AhQuanz"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":20,"author":{"gitId":"AhQuanz"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":21,"author":{"gitId":"AhQuanz"},"content":"            stage.setScene(scene);"},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":"            stage.show();"},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":"        } catch (IOException e) {"},{"lineNumber":25,"author":{"gitId":"AhQuanz"},"content":"            e.printStackTrace();"},{"lineNumber":26,"author":{"gitId":"AhQuanz"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"AhQuanz"},"content":"}"}],"authorContributionMap":{"AhQuanz":28}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AhQuanz"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"import javafx.scene.control.Button;"},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":" */"},{"lineNumber":11,"author":{"gitId":"AhQuanz"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":12,"author":{"gitId":"AhQuanz"},"content":"    @FXML"},{"lineNumber":13,"author":{"gitId":"AhQuanz"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":14,"author":{"gitId":"AhQuanz"},"content":"    @FXML"},{"lineNumber":15,"author":{"gitId":"AhQuanz"},"content":"    private VBox dialogContainer;"},{"lineNumber":16,"author":{"gitId":"AhQuanz"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"AhQuanz"},"content":"    private TextField userInput;"},{"lineNumber":18,"author":{"gitId":"AhQuanz"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":"    private Button sendButton;"},{"lineNumber":20,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":21,"author":{"gitId":"AhQuanz"},"content":"    private Duke duke;"},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":25,"author":{"gitId":"AhQuanz"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":26,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":27,"author":{"gitId":"AhQuanz"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"AhQuanz"},"content":"    public void initialize() {"},{"lineNumber":29,"author":{"gitId":"AhQuanz"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":30,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":32,"author":{"gitId":"AhQuanz"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":33,"author":{"gitId":"AhQuanz"},"content":"        duke \u003d d;"},{"lineNumber":34,"author":{"gitId":"AhQuanz"},"content":"        dialogContainer.getChildren().add("},{"lineNumber":35,"author":{"gitId":"AhQuanz"},"content":"                DialogBox.getDukeDialog(Ui.showGreeting(), dukeImage)"},{"lineNumber":36,"author":{"gitId":"AhQuanz"},"content":"        );"},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":39,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"AhQuanz"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":41,"author":{"gitId":"AhQuanz"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":42,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"AhQuanz"},"content":"    @FXML"},{"lineNumber":44,"author":{"gitId":"AhQuanz"},"content":"    private void handleUserInput() {"},{"lineNumber":45,"author":{"gitId":"AhQuanz"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":46,"author":{"gitId":"AhQuanz"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":47,"author":{"gitId":"AhQuanz"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":48,"author":{"gitId":"AhQuanz"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":49,"author":{"gitId":"AhQuanz"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":50,"author":{"gitId":"AhQuanz"},"content":"        );"},{"lineNumber":51,"author":{"gitId":"AhQuanz"},"content":"        userInput.clear();"},{"lineNumber":52,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"AhQuanz"},"content":"}"}],"authorContributionMap":{"AhQuanz":53}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AhQuanz"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"    private static final String ERROR_DESCRIPTION \u003d \"OOPS!!! The description cannot be empty.\";"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":"    private static final String ERROR_SEARCH_TERM \u003d \"OPPS!!! The search term for find cannot be empty.\";"},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":"     * Returns a Command object based on the fullCommand given"},{"lineNumber":11,"author":{"gitId":"AhQuanz"},"content":"     * @param fullCommand (command entered by the user)"},{"lineNumber":12,"author":{"gitId":"AhQuanz"},"content":"     * @return Command comamnd"},{"lineNumber":13,"author":{"gitId":"AhQuanz"},"content":"     * @throws DukeException"},{"lineNumber":14,"author":{"gitId":"AhQuanz"},"content":"     * @throws DukeDeadlineException"},{"lineNumber":15,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"AhQuanz"},"content":"    public static Command parse(String fullCommand) throws DukeException , DukeDeadlineException {"},{"lineNumber":17,"author":{"gitId":"AhQuanz"},"content":"        fullCommand \u003d fullCommand.trim();"},{"lineNumber":18,"author":{"gitId":"AhQuanz"},"content":"        int firstSpace \u003d fullCommand.indexOf(\" \");"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":"        String keyword \u003d firstSpace \u003d\u003d -1 ? fullCommand : fullCommand.substring(0, firstSpace).toLowerCase();"},{"lineNumber":20,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":21,"author":{"gitId":"AhQuanz"},"content":"        if (fullCommand.isEmpty()) {"},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"            throw new DukeException(\"Please enter a command\");"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":25,"author":{"gitId":"AhQuanz"},"content":"        //Commands that does not need a description"},{"lineNumber":26,"author":{"gitId":"AhQuanz"},"content":"        if (keyword.equalsIgnoreCase(\"bye\")) {"},{"lineNumber":27,"author":{"gitId":"AhQuanz"},"content":"            return new SaveCommand(keyword);"},{"lineNumber":28,"author":{"gitId":"AhQuanz"},"content":"        } else if (keyword.equalsIgnoreCase(\"list\")) {"},{"lineNumber":29,"author":{"gitId":"AhQuanz"},"content":"            return new ListCommand();"},{"lineNumber":30,"author":{"gitId":"AhQuanz"},"content":"        } else if (keyword.equalsIgnoreCase(\"done\") || keyword.equalsIgnoreCase(\"delete\")) {"},{"lineNumber":31,"author":{"gitId":"AhQuanz"},"content":"            int option \u003d Integer.parseInt(fullCommand.substring(firstSpace + 1)) - 1;"},{"lineNumber":32,"author":{"gitId":"AhQuanz"},"content":"            switch (keyword) {"},{"lineNumber":33,"author":{"gitId":"AhQuanz"},"content":"            case \"done\" :"},{"lineNumber":34,"author":{"gitId":"AhQuanz"},"content":"                return new DoneCommand(option);"},{"lineNumber":35,"author":{"gitId":"AhQuanz"},"content":"            case \"delete\":"},{"lineNumber":36,"author":{"gitId":"AhQuanz"},"content":"                return new DeleteCommand(option);"},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":"            }"},{"lineNumber":38,"author":{"gitId":"AhQuanz"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":40,"author":{"gitId":"AhQuanz"},"content":"        //Commands that needs a description"},{"lineNumber":41,"author":{"gitId":"AhQuanz"},"content":"        Task task \u003d null;"},{"lineNumber":42,"author":{"gitId":"AhQuanz"},"content":"        if (keyword.equalsIgnoreCase(\"find\")) {"},{"lineNumber":43,"author":{"gitId":"AhQuanz"},"content":"            checkDescription(firstSpace, ERROR_SEARCH_TERM);"},{"lineNumber":44,"author":{"gitId":"AhQuanz"},"content":"            return new FindCommand(fullCommand.substring(firstSpace));"},{"lineNumber":45,"author":{"gitId":"AhQuanz"},"content":"        } else if (keyword.equalsIgnoreCase(\"todo\")) {"},{"lineNumber":46,"author":{"gitId":"AhQuanz"},"content":"            checkDescription(firstSpace, ERROR_DESCRIPTION);"},{"lineNumber":47,"author":{"gitId":"AhQuanz"},"content":"            task \u003d new Todo(fullCommand.substring(firstSpace));"},{"lineNumber":48,"author":{"gitId":"AhQuanz"},"content":"        } else if (keyword.equalsIgnoreCase(\"deadline\") || keyword.equalsIgnoreCase(\"event\")) {"},{"lineNumber":49,"author":{"gitId":"AhQuanz"},"content":"            checkDescription(firstSpace, ERROR_DESCRIPTION);"},{"lineNumber":50,"author":{"gitId":"AhQuanz"},"content":"            task \u003d createTaskWithDeadline(fullCommand, keyword, firstSpace);"},{"lineNumber":51,"author":{"gitId":"AhQuanz"},"content":"        } else {"},{"lineNumber":52,"author":{"gitId":"AhQuanz"},"content":"            return null;"},{"lineNumber":53,"author":{"gitId":"AhQuanz"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":55,"author":{"gitId":"AhQuanz"},"content":"        return new AddCommand(task);"},{"lineNumber":56,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":58,"author":{"gitId":"AhQuanz"},"content":"    private static void checkDescription(int firstSpace, String errorMessage) throws DukeException {"},{"lineNumber":59,"author":{"gitId":"AhQuanz"},"content":"        if (firstSpace \u003d\u003d -1) {"},{"lineNumber":60,"author":{"gitId":"AhQuanz"},"content":"            throw new DukeException(errorMessage);"},{"lineNumber":61,"author":{"gitId":"AhQuanz"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":64,"author":{"gitId":"AhQuanz"},"content":"    private static Task createTaskWithDeadline(String fullCommand, String keyword, int firstSpace) throws DukeDeadlineException {"},{"lineNumber":65,"author":{"gitId":"AhQuanz"},"content":"        Task t \u003d null;"},{"lineNumber":66,"author":{"gitId":"AhQuanz"},"content":"        int firstSlash \u003d fullCommand.indexOf(\"/\");"},{"lineNumber":67,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":68,"author":{"gitId":"AhQuanz"},"content":"        if (firstSlash \u003d\u003d -1) {"},{"lineNumber":69,"author":{"gitId":"AhQuanz"},"content":"            throw new DukeDeadlineException(\"OOPS!!! The deadline of a task cannot be empty.\");"},{"lineNumber":70,"author":{"gitId":"AhQuanz"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":72,"author":{"gitId":"AhQuanz"},"content":"        int nextSpace \u003d fullCommand.indexOf(\" \", firstSlash) + 1;"},{"lineNumber":73,"author":{"gitId":"AhQuanz"},"content":"        String taskDescription \u003d fullCommand.substring(firstSpace, firstSlash);"},{"lineNumber":74,"author":{"gitId":"AhQuanz"},"content":"        String errorMessage;"},{"lineNumber":75,"author":{"gitId":"AhQuanz"},"content":"        switch (keyword) {"},{"lineNumber":76,"author":{"gitId":"AhQuanz"},"content":"        case \"deadline\":"},{"lineNumber":77,"author":{"gitId":"AhQuanz"},"content":"            errorMessage \u003d \"OOPS!!! Format of the deadline of a deadline task should be \""},{"lineNumber":78,"author":{"gitId":"AhQuanz"},"content":"                    + \"(Year-Month-Day time (24 hours)\";"},{"lineNumber":79,"author":{"gitId":"AhQuanz"},"content":"            LocalDateTime deadline \u003d parseDate(fullCommand.substring(nextSpace), errorMessage);"},{"lineNumber":80,"author":{"gitId":"AhQuanz"},"content":"            t \u003d new Deadline(taskDescription, deadline);"},{"lineNumber":81,"author":{"gitId":"AhQuanz"},"content":"            break;"},{"lineNumber":82,"author":{"gitId":"AhQuanz"},"content":"        case \"event\":"},{"lineNumber":83,"author":{"gitId":"AhQuanz"},"content":"            errorMessage \u003d \"OOPS!!! Format of the time period of a Event task should be \""},{"lineNumber":84,"author":{"gitId":"AhQuanz"},"content":"                    + \"(Year-Month-Day Time(24 hours)-Time(24 hours)\";"},{"lineNumber":85,"author":{"gitId":"AhQuanz"},"content":"            LocalDateTime[] deadlines \u003d parseDates(fullCommand.substring(nextSpace), errorMessage);"},{"lineNumber":86,"author":{"gitId":"AhQuanz"},"content":"            t \u003d new Event(taskDescription, deadlines[0], deadlines[1]);"},{"lineNumber":87,"author":{"gitId":"AhQuanz"},"content":"            break;"},{"lineNumber":88,"author":{"gitId":"AhQuanz"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"AhQuanz"},"content":"        return t;"},{"lineNumber":90,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":92,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"AhQuanz"},"content":"     * Returns a array of LocalDateTime object"},{"lineNumber":94,"author":{"gitId":"AhQuanz"},"content":"     * @param data String that contains the date"},{"lineNumber":95,"author":{"gitId":"AhQuanz"},"content":"     * @param errorMessage  error message to display when error is occur during prasing to LocalDateTIme"},{"lineNumber":96,"author":{"gitId":"AhQuanz"},"content":"     * @return LocalDateTime[]."},{"lineNumber":97,"author":{"gitId":"AhQuanz"},"content":"     * @throws DukeDeadlineException"},{"lineNumber":98,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":100,"author":{"gitId":"AhQuanz"},"content":"    public static LocalDateTime[] parseDates(String data, String errorMessage) throws DukeDeadlineException {"},{"lineNumber":101,"author":{"gitId":"AhQuanz"},"content":"        int firstSpace \u003d data.indexOf(\" \");"},{"lineNumber":102,"author":{"gitId":"AhQuanz"},"content":"        String date \u003d data.substring(0,firstSpace);"},{"lineNumber":103,"author":{"gitId":"AhQuanz"},"content":"        data \u003d data.substring(firstSpace + 1);"},{"lineNumber":104,"author":{"gitId":"AhQuanz"},"content":"        String[] timePeriod \u003d data.split(\"-\");"},{"lineNumber":105,"author":{"gitId":"AhQuanz"},"content":"        if (timePeriod.length !\u003d 2) {"},{"lineNumber":106,"author":{"gitId":"AhQuanz"},"content":"            throw new DukeDeadlineException(errorMessage);"},{"lineNumber":107,"author":{"gitId":"AhQuanz"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"AhQuanz"},"content":"        LocalDateTime[] deadline \u003d new LocalDateTime[2];"},{"lineNumber":109,"author":{"gitId":"AhQuanz"},"content":"        for (int i \u003d 0; i \u003c timePeriod.length; i++) {"},{"lineNumber":110,"author":{"gitId":"AhQuanz"},"content":"            deadline[i] \u003d parseDate(date + \" \" + timePeriod[i], errorMessage);"},{"lineNumber":111,"author":{"gitId":"AhQuanz"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"AhQuanz"},"content":"        return deadline;"},{"lineNumber":113,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":115,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"AhQuanz"},"content":"     * Returns LocalDateTime object based on string given"},{"lineNumber":117,"author":{"gitId":"AhQuanz"},"content":"     * @param date String that contains the date in the format of yyyy-M-d hhmm"},{"lineNumber":118,"author":{"gitId":"AhQuanz"},"content":"     * @param errorMessage error message to display when error is occur during prasing to LocalDateTIme"},{"lineNumber":119,"author":{"gitId":"AhQuanz"},"content":"     * @return LocalDateTime"},{"lineNumber":120,"author":{"gitId":"AhQuanz"},"content":"     * @throws DukeDeadlineException"},{"lineNumber":121,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":122,"author":{"gitId":"AhQuanz"},"content":"    public static LocalDateTime parseDate(String date, String errorMessage) throws DukeDeadlineException{"},{"lineNumber":123,"author":{"gitId":"AhQuanz"},"content":"        try {"},{"lineNumber":124,"author":{"gitId":"AhQuanz"},"content":"            return LocalDateTime.parse(date, DateTimeFormatter.ofPattern(\"yyyy-M-d Hmm\"));"},{"lineNumber":125,"author":{"gitId":"AhQuanz"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":126,"author":{"gitId":"AhQuanz"},"content":"            throw new DukeDeadlineException(errorMessage);"},{"lineNumber":127,"author":{"gitId":"AhQuanz"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":130,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":131,"author":{"gitId":"AhQuanz"},"content":"     * Returns a Task Object based on the csvData provided"},{"lineNumber":132,"author":{"gitId":"AhQuanz"},"content":"     * @param csvData (a row from the saved file)"},{"lineNumber":133,"author":{"gitId":"AhQuanz"},"content":"     * @param ui (UI object for pririnting"},{"lineNumber":134,"author":{"gitId":"AhQuanz"},"content":"     * @return"},{"lineNumber":135,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":136,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":137,"author":{"gitId":"AhQuanz"},"content":"    public static Task parseForText(String csvData) throws DukeDeadlineException {"},{"lineNumber":138,"author":{"gitId":"AhQuanz"},"content":"        String errorMessage \u003d \"The deadline for this task is corrupted (Required : yyyy-M-d hhmm\";"},{"lineNumber":139,"author":{"gitId":"AhQuanz"},"content":"        String[] taskArr \u003d csvData.split(\",\");"},{"lineNumber":140,"author":{"gitId":"AhQuanz"},"content":"        Task task \u003d null;"},{"lineNumber":141,"author":{"gitId":"AhQuanz"},"content":"        try {"},{"lineNumber":142,"author":{"gitId":"AhQuanz"},"content":"            switch (taskArr[0]) {"},{"lineNumber":143,"author":{"gitId":"AhQuanz"},"content":"            case \"T\":"},{"lineNumber":144,"author":{"gitId":"AhQuanz"},"content":"                task \u003d new Todo(taskArr[2]);"},{"lineNumber":145,"author":{"gitId":"AhQuanz"},"content":"                break;"},{"lineNumber":146,"author":{"gitId":"AhQuanz"},"content":"            case \"E\":"},{"lineNumber":147,"author":{"gitId":"AhQuanz"},"content":"                String[] deadlineArr \u003d {taskArr[3], taskArr[4]};"},{"lineNumber":148,"author":{"gitId":"AhQuanz"},"content":"                LocalDateTime[] deadlines \u003d new LocalDateTime[2];"},{"lineNumber":149,"author":{"gitId":"AhQuanz"},"content":"                for (int i \u003d 0; i \u003c deadlineArr.length; i++) {"},{"lineNumber":150,"author":{"gitId":"AhQuanz"},"content":"                    deadlines[i] \u003d Parser.parseDate(deadlineArr[i], errorMessage);"},{"lineNumber":151,"author":{"gitId":"AhQuanz"},"content":"                }"},{"lineNumber":152,"author":{"gitId":"AhQuanz"},"content":"                task \u003d new Event(taskArr[2], deadlines[0], deadlines[1]);"},{"lineNumber":153,"author":{"gitId":"AhQuanz"},"content":"                break;"},{"lineNumber":154,"author":{"gitId":"AhQuanz"},"content":"            case \"D\":"},{"lineNumber":155,"author":{"gitId":"AhQuanz"},"content":"                LocalDateTime deadline \u003d Parser.parseDate(taskArr[3], errorMessage);"},{"lineNumber":156,"author":{"gitId":"AhQuanz"},"content":"                task \u003d new Deadline(taskArr[2], deadline);"},{"lineNumber":157,"author":{"gitId":"AhQuanz"},"content":"            }"},{"lineNumber":158,"author":{"gitId":"AhQuanz"},"content":"            if (taskArr[1] \u003d\u003d \"1\") {"},{"lineNumber":159,"author":{"gitId":"AhQuanz"},"content":"                task.markAsDone();"},{"lineNumber":160,"author":{"gitId":"AhQuanz"},"content":"            }"},{"lineNumber":161,"author":{"gitId":"AhQuanz"},"content":"        } catch (DukeDeadlineException e){"},{"lineNumber":162,"author":{"gitId":"AhQuanz"},"content":"            throw e;"},{"lineNumber":163,"author":{"gitId":"AhQuanz"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"AhQuanz"},"content":"        return task;"},{"lineNumber":165,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"AhQuanz"},"content":"}"}],"authorContributionMap":{"AhQuanz":166}},{"path":"src/main/java/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AhQuanz"},"content":"public class SaveCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"    private String command;"},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"    public SaveCommand() {"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":"        this.command \u003d \"\";"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":"    public SaveCommand(String command) {"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":"        this.command \u003d command;"},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":12,"author":{"gitId":"AhQuanz"},"content":"    public String excute(TaskList taskList) {"},{"lineNumber":13,"author":{"gitId":"AhQuanz"},"content":"        Ui.save();"},{"lineNumber":14,"author":{"gitId":"AhQuanz"},"content":"        return Ui.showGoodbye();"},{"lineNumber":15,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":17,"author":{"gitId":"AhQuanz"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"AhQuanz"},"content":"    public boolean isExit() {"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":"        return command.equalsIgnoreCase(\"bye\");"},{"lineNumber":20,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"AhQuanz"},"content":"}"}],"authorContributionMap":{"AhQuanz":21}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AhQuanz"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"import java.io.FileWriter;"},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":"import java.util.Collection;"},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":"public class Storage {"},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":"    private static String fileName;"},{"lineNumber":11,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":12,"author":{"gitId":"AhQuanz"},"content":"    public ArrayList\u003cTask\u003e load(String fileName) throws DukeException, DukeDeadlineException{"},{"lineNumber":13,"author":{"gitId":"AhQuanz"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":14,"author":{"gitId":"AhQuanz"},"content":"        try {"},{"lineNumber":15,"author":{"gitId":"AhQuanz"},"content":"            File f \u003d new File(fileName);"},{"lineNumber":16,"author":{"gitId":"AhQuanz"},"content":"            f.createNewFile();"},{"lineNumber":17,"author":{"gitId":"AhQuanz"},"content":"            Scanner s \u003d new Scanner(f);"},{"lineNumber":18,"author":{"gitId":"AhQuanz"},"content":"            while (s.hasNext()) {"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":"                String strTask \u003d s.nextLine();"},{"lineNumber":20,"author":{"gitId":"AhQuanz"},"content":"                Task task \u003d Parser.parseForText(strTask);"},{"lineNumber":21,"author":{"gitId":"AhQuanz"},"content":"                tasks.add(task);"},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"            }"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":"            this.fileName \u003d fileName;"},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":"            s.close();"},{"lineNumber":25,"author":{"gitId":"AhQuanz"},"content":"        } catch (IOException e) {"},{"lineNumber":26,"author":{"gitId":"AhQuanz"},"content":"            throw new DukeException(\"Unable to create file\");"},{"lineNumber":27,"author":{"gitId":"AhQuanz"},"content":"        } catch (DukeDeadlineException e) {"},{"lineNumber":28,"author":{"gitId":"AhQuanz"},"content":"            throw e;"},{"lineNumber":29,"author":{"gitId":"AhQuanz"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"AhQuanz"},"content":"        return tasks;"},{"lineNumber":31,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":33,"author":{"gitId":"AhQuanz"},"content":"    public void save(ArrayList\u003cTask\u003e taskList) {"},{"lineNumber":34,"author":{"gitId":"AhQuanz"},"content":"        try{"},{"lineNumber":35,"author":{"gitId":"AhQuanz"},"content":"            FileWriter fw \u003d new FileWriter(this.fileName);"},{"lineNumber":36,"author":{"gitId":"AhQuanz"},"content":"            for(Task t : taskList) {"},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":"                fw.write(t.save());"},{"lineNumber":38,"author":{"gitId":"AhQuanz"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"AhQuanz"},"content":"            fw.close();"},{"lineNumber":40,"author":{"gitId":"AhQuanz"},"content":"        } catch (IOException e) {"},{"lineNumber":41,"author":{"gitId":"AhQuanz"},"content":"            System.out.println(\"File cannot be opened\");"},{"lineNumber":42,"author":{"gitId":"AhQuanz"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"AhQuanz"},"content":"}"}],"authorContributionMap":{"AhQuanz":44}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AhQuanz"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":" * Abstract class Task to represent a Task"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":" */"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":"public abstract class Task {"},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":"    /** Description of a class **/"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":"    private String description;"},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":"    /** Completion  Status of the task **/"},{"lineNumber":11,"author":{"gitId":"AhQuanz"},"content":"    private boolean isDone;"},{"lineNumber":12,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":13,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"AhQuanz"},"content":"     * Constructor of the Task object."},{"lineNumber":15,"author":{"gitId":"AhQuanz"},"content":"     * @param desc Description of the task"},{"lineNumber":16,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"AhQuanz"},"content":"    public Task(String desc) {"},{"lineNumber":18,"author":{"gitId":"AhQuanz"},"content":"        this.description \u003d desc;"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":"        this.isDone \u003d false;"},{"lineNumber":20,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":"     * Marks a task a done if the task is not yet done."},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":"     * @return boolean indicating if there is a change"},{"lineNumber":25,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"AhQuanz"},"content":"    public boolean markAsDone() {"},{"lineNumber":27,"author":{"gitId":"AhQuanz"},"content":"        if(!this.isDone) {"},{"lineNumber":28,"author":{"gitId":"AhQuanz"},"content":"            this.isDone \u003d true;"},{"lineNumber":29,"author":{"gitId":"AhQuanz"},"content":"            return true;"},{"lineNumber":30,"author":{"gitId":"AhQuanz"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"AhQuanz"},"content":"        //Return boolean to signal that we have successfully / fail to mark task as done."},{"lineNumber":32,"author":{"gitId":"AhQuanz"},"content":"        return false;"},{"lineNumber":33,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":35,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"AhQuanz"},"content":"     * Returns the task description."},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":"     * @return String , String that contains the task description"},{"lineNumber":38,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"AhQuanz"},"content":"    public String getDescription() {"},{"lineNumber":40,"author":{"gitId":"AhQuanz"},"content":"        return description;"},{"lineNumber":41,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":43,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"AhQuanz"},"content":"     * Returns the representation of a task for saving."},{"lineNumber":45,"author":{"gitId":"AhQuanz"},"content":"     * @return String representation of a task for saving"},{"lineNumber":46,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"AhQuanz"},"content":"    public String save() {"},{"lineNumber":48,"author":{"gitId":"AhQuanz"},"content":"        return String.format(\"%s,%s\", this.isDone ? \"1\" : \"0\", this.description);"},{"lineNumber":49,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":51,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"AhQuanz"},"content":"     * Returns the representation of a task."},{"lineNumber":53,"author":{"gitId":"AhQuanz"},"content":"     * @return String representation of a task"},{"lineNumber":54,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"AhQuanz"},"content":"    public String toString() {"},{"lineNumber":56,"author":{"gitId":"AhQuanz"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);"},{"lineNumber":57,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":59,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"AhQuanz"},"content":"     * Returns a String of the datetime of the format \"MMM d yyyy Hmm\"."},{"lineNumber":61,"author":{"gitId":"AhQuanz"},"content":"     * @param dateTime LocalDateTime object to be formatted"},{"lineNumber":62,"author":{"gitId":"AhQuanz"},"content":"     * @return String , String that conatinas the LocalDateTIme object in the \"MMM d yyyy Hmm\" format"},{"lineNumber":63,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"AhQuanz"},"content":"    public String format(LocalDateTime dateTime) {"},{"lineNumber":65,"author":{"gitId":"AhQuanz"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"MMM d yyyy Hmm\"));"},{"lineNumber":66,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":68,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"AhQuanz"},"content":"     * Returns a Strubg representation of dateTime for saving."},{"lineNumber":70,"author":{"gitId":"AhQuanz"},"content":"     * @param dateTime LocalDateTime object to be formatted"},{"lineNumber":71,"author":{"gitId":"AhQuanz"},"content":"     * @return String, String that contains the LocalDateTime object in the \"yyyy-M-d Hmm\""},{"lineNumber":72,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"AhQuanz"},"content":"    public String saveFormat(LocalDateTime dateTime) {"},{"lineNumber":74,"author":{"gitId":"AhQuanz"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"yyyy-M-d Hmm\"));"},{"lineNumber":75,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":77,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"AhQuanz"},"content":"     * Returns a String representation of the status of the task."},{"lineNumber":79,"author":{"gitId":"AhQuanz"},"content":"     * @return String , String representation of the status of the task"},{"lineNumber":80,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"AhQuanz"},"content":"    public String getStatusIcon() {"},{"lineNumber":82,"author":{"gitId":"AhQuanz"},"content":"        return (this.isDone) ? \"X\" : \" \";"},{"lineNumber":83,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"AhQuanz"},"content":"}"}],"authorContributionMap":{"AhQuanz":84}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AhQuanz"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":"public class TaskList {"},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskCollection) {"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(taskCollection);"},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"AhQuanz"},"content":"     * Provides UI object the representation"},{"lineNumber":12,"author":{"gitId":"AhQuanz"},"content":"            of all the task in the taskList for printing"},{"lineNumber":13,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"AhQuanz"},"content":"    public String printAllTask() {"},{"lineNumber":15,"author":{"gitId":"AhQuanz"},"content":"        String output \u003d \"\";"},{"lineNumber":16,"author":{"gitId":"AhQuanz"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":17,"author":{"gitId":"AhQuanz"},"content":"            output +\u003d Ui.printTask(i + 1 + \".\", tasks.get(i).toString());"},{"lineNumber":18,"author":{"gitId":"AhQuanz"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":"        if (output.isEmpty()) {"},{"lineNumber":20,"author":{"gitId":"AhQuanz"},"content":"            return \"There is no task added!\";"},{"lineNumber":21,"author":{"gitId":"AhQuanz"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"        return output;"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":25,"author":{"gitId":"AhQuanz"},"content":"    private String showOptionError () {"},{"lineNumber":26,"author":{"gitId":"AhQuanz"},"content":"        return Ui.showError(\"Invalid task Option\");"},{"lineNumber":27,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"AhQuanz"},"content":"     * Returns boolean that represent option being valid / invalid"},{"lineNumber":30,"author":{"gitId":"AhQuanz"},"content":"     * @param option Input for checking"},{"lineNumber":31,"author":{"gitId":"AhQuanz"},"content":"     * @return"},{"lineNumber":32,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"AhQuanz"},"content":"    public boolean checkValidOption(int option) {"},{"lineNumber":34,"author":{"gitId":"AhQuanz"},"content":"        boolean result \u003d option \u003c 0 || option \u003e\u003d this.tasks.size();"},{"lineNumber":35,"author":{"gitId":"AhQuanz"},"content":"        return result;"},{"lineNumber":36,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":38,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"AhQuanz"},"content":"     * Marks a specific task based on the number given as done"},{"lineNumber":40,"author":{"gitId":"AhQuanz"},"content":"     * @param option task number entered by the user"},{"lineNumber":41,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"AhQuanz"},"content":"    public String markAsDone(int option) {"},{"lineNumber":43,"author":{"gitId":"AhQuanz"},"content":"        if (!checkValidOption(option)) {"},{"lineNumber":44,"author":{"gitId":"AhQuanz"},"content":"            Task task \u003d tasks.get(option);"},{"lineNumber":45,"author":{"gitId":"AhQuanz"},"content":"            if (!task.markAsDone()) {"},{"lineNumber":46,"author":{"gitId":"AhQuanz"},"content":"                return Ui.showError(\"Task is already marked done\");"},{"lineNumber":47,"author":{"gitId":"AhQuanz"},"content":"            } else {"},{"lineNumber":48,"author":{"gitId":"AhQuanz"},"content":"                return Ui.showSuccessMarkDone(task.toString(), tasks.size());"},{"lineNumber":49,"author":{"gitId":"AhQuanz"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"AhQuanz"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"AhQuanz"},"content":"        return showOptionError();"},{"lineNumber":52,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":54,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"AhQuanz"},"content":"     * Deletes a task in the taskList based on the number given"},{"lineNumber":56,"author":{"gitId":"AhQuanz"},"content":"     * @param option task number entered by the user"},{"lineNumber":57,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"AhQuanz"},"content":"    public String deleteTask(int option) {"},{"lineNumber":59,"author":{"gitId":"AhQuanz"},"content":"        if (!checkValidOption(option)) {"},{"lineNumber":60,"author":{"gitId":"AhQuanz"},"content":"            Task t \u003d tasks.remove(option);"},{"lineNumber":61,"author":{"gitId":"AhQuanz"},"content":"            return Ui.showSuccessDeleteTask(t.toString(), tasks.size());"},{"lineNumber":62,"author":{"gitId":"AhQuanz"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"AhQuanz"},"content":"        return showOptionError();"},{"lineNumber":64,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":66,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"AhQuanz"},"content":"     * Adds a task into the taskList"},{"lineNumber":68,"author":{"gitId":"AhQuanz"},"content":"     * @param task Task object to be adding into the taskList"},{"lineNumber":69,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"AhQuanz"},"content":"    public String addTask(Task task) {"},{"lineNumber":71,"author":{"gitId":"AhQuanz"},"content":"        tasks.add(task);"},{"lineNumber":72,"author":{"gitId":"AhQuanz"},"content":"        return Ui.showSuccessAddTask(task.toString(), tasks.size());"},{"lineNumber":73,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":75,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"AhQuanz"},"content":"     * Prints task that has description containing the search term"},{"lineNumber":77,"author":{"gitId":"AhQuanz"},"content":"     * @param searchTerm String that contains the search term"},{"lineNumber":78,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"AhQuanz"},"content":"    public String search(String searchTerm) {"},{"lineNumber":80,"author":{"gitId":"AhQuanz"},"content":"        int count \u003d 0;"},{"lineNumber":81,"author":{"gitId":"AhQuanz"},"content":"        String output \u003d \"\";"},{"lineNumber":82,"author":{"gitId":"AhQuanz"},"content":"        for (Task t : tasks) {"},{"lineNumber":83,"author":{"gitId":"AhQuanz"},"content":"            if (t.getDescription().indexOf(searchTerm) !\u003d -1) {"},{"lineNumber":84,"author":{"gitId":"AhQuanz"},"content":"                if (count \u003d\u003d -1) {"},{"lineNumber":85,"author":{"gitId":"AhQuanz"},"content":"                    output +\u003d Ui.showSuccessSearch();"},{"lineNumber":86,"author":{"gitId":"AhQuanz"},"content":"                }"},{"lineNumber":87,"author":{"gitId":"AhQuanz"},"content":"                output +\u003d Ui.printTask(++count + \".\", t.toString());"},{"lineNumber":88,"author":{"gitId":"AhQuanz"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"AhQuanz"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"AhQuanz"},"content":"        if (count \u003d\u003d 0) {"},{"lineNumber":91,"author":{"gitId":"AhQuanz"},"content":"            return Ui.showFailSearch(searchTerm);"},{"lineNumber":92,"author":{"gitId":"AhQuanz"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"AhQuanz"},"content":"        return output;"},{"lineNumber":94,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":96,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"AhQuanz"},"content":"     * Returns the TaskList"},{"lineNumber":98,"author":{"gitId":"AhQuanz"},"content":"     * @return ArrayList of Task , taskList"},{"lineNumber":99,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"AhQuanz"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":101,"author":{"gitId":"AhQuanz"},"content":"        return tasks;"},{"lineNumber":102,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"AhQuanz"},"content":"}"}],"authorContributionMap":{"AhQuanz":103}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AhQuanz"},"content":"/** Class Todo that represent a Todo task **/"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"public class Todo extends Task {"},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":"    /** Symbol to represent a Todo task **/"},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"    private static final char SYMBOL \u003d \u0027T\u0027;"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":"     * Constructor of a Event task."},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":"     * @param desc Description of the deadline task"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":"    public Todo(String desc) {"},{"lineNumber":11,"author":{"gitId":"AhQuanz"},"content":"        super(desc);"},{"lineNumber":12,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":14,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"AhQuanz"},"content":"     * Returns the representation of a task."},{"lineNumber":16,"author":{"gitId":"AhQuanz"},"content":"     * @return String representation of a task"},{"lineNumber":17,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"AhQuanz"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"AhQuanz"},"content":"        return String.format(\"[%c] %s\",SYMBOL, super.toString());"},{"lineNumber":21,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"    "},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":"     * Returns the representation of a task for saving."},{"lineNumber":25,"author":{"gitId":"AhQuanz"},"content":"     * @return String representation of a task for saving"},{"lineNumber":26,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"AhQuanz"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"AhQuanz"},"content":"    public String save() {"},{"lineNumber":29,"author":{"gitId":"AhQuanz"},"content":"        return String.format(\"%c,%s\\n\", SYMBOL, super.save());"},{"lineNumber":30,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"AhQuanz"},"content":"}"}],"authorContributionMap":{"AhQuanz":31}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AhQuanz"},"content":"public class Ui {"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"    private static final String GREETING \u003d \"Hello! I`m Duke\\n\""},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":"            + \"Please enter file name to load tasks\\n \";"},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"    private static final String GOODBYE \u003d \"Thank you for using Duke , please come back again\";"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":"    private static final String FAILURE_LOAD_START \u003d \"No task is found in file, what can i do for you? \";"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"    private static final String SUCCESS_LOAD_START \u003d \"File loaded, what can i do for you? \";"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":"    private static TaskList tasks;"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":"    private static Storage storage;"},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":11,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"AhQuanz"},"content":"     * Display greeting messages"},{"lineNumber":13,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"AhQuanz"},"content":"    public static String showGreeting() {"},{"lineNumber":15,"author":{"gitId":"AhQuanz"},"content":"        return GREETING;"},{"lineNumber":16,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":18,"author":{"gitId":"AhQuanz"},"content":"    public static String showGoodbye() {"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":"        return GOODBYE;"},{"lineNumber":20,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"    public static String load(String fileName) {"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":"        storage \u003d new Storage();"},{"lineNumber":24,"author":{"gitId":"AhQuanz"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"AhQuanz"},"content":"            tasks \u003d new TaskList(storage.load(fileName));"},{"lineNumber":26,"author":{"gitId":"AhQuanz"},"content":"        } catch (DukeException e) {"},{"lineNumber":27,"author":{"gitId":"AhQuanz"},"content":"            return showError(e.getMessage());"},{"lineNumber":28,"author":{"gitId":"AhQuanz"},"content":"        } catch (DukeDeadlineException e) {"},{"lineNumber":29,"author":{"gitId":"AhQuanz"},"content":"            return showError(e.getMessage());"},{"lineNumber":30,"author":{"gitId":"AhQuanz"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":32,"author":{"gitId":"AhQuanz"},"content":"        if (tasks.getTaskList().size() \u003d\u003d 0) {"},{"lineNumber":33,"author":{"gitId":"AhQuanz"},"content":"            return FAILURE_LOAD_START;"},{"lineNumber":34,"author":{"gitId":"AhQuanz"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":36,"author":{"gitId":"AhQuanz"},"content":"        return SUCCESS_LOAD_START;"},{"lineNumber":37,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":39,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"AhQuanz"},"content":"     * Reads a file path from the user"},{"lineNumber":41,"author":{"gitId":"AhQuanz"},"content":"     * @return fileName entered by the user;"},{"lineNumber":42,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"AhQuanz"},"content":"    public static String askFilePath() {"},{"lineNumber":44,"author":{"gitId":"AhQuanz"},"content":"        return \"Please enter file name : \";"},{"lineNumber":45,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":47,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"AhQuanz"},"content":"     * Shows error message provided"},{"lineNumber":49,"author":{"gitId":"AhQuanz"},"content":"     * @param error error message"},{"lineNumber":50,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"AhQuanz"},"content":"    public static String showError(String error) {"},{"lineNumber":52,"author":{"gitId":"AhQuanz"},"content":"        return error;"},{"lineNumber":53,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":55,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"AhQuanz"},"content":"     * Prints the representation of task with a numbering"},{"lineNumber":57,"author":{"gitId":"AhQuanz"},"content":"     * @param numbering"},{"lineNumber":58,"author":{"gitId":"AhQuanz"},"content":"     * @param task"},{"lineNumber":59,"author":{"gitId":"AhQuanz"},"content":"     * @return String , message to be printed on GUI"},{"lineNumber":60,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"AhQuanz"},"content":"    public static String printTask(String numbering, String task) {"},{"lineNumber":62,"author":{"gitId":"AhQuanz"},"content":"        return String.format(\"%2s %s\\n\", numbering, task);"},{"lineNumber":63,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":65,"author":{"gitId":"AhQuanz"},"content":"    private static String printExecuteResult(String message, String task , int numTasks, String numbering) {"},{"lineNumber":66,"author":{"gitId":"AhQuanz"},"content":"        String output \u003d message + \"\\n\" + printTask(numbering, task);"},{"lineNumber":67,"author":{"gitId":"AhQuanz"},"content":"        return String.format(\"%s\\nNow you have %d task in the list\\n\", output , numTasks);"},{"lineNumber":68,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":70,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"AhQuanz"},"content":"     * Shows success messages upon marking a task done"},{"lineNumber":72,"author":{"gitId":"AhQuanz"},"content":"     * @param task String representation of a task"},{"lineNumber":73,"author":{"gitId":"AhQuanz"},"content":"     * @param numTasks number of task in the taskList"},{"lineNumber":74,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"AhQuanz"},"content":"    public static String showSuccessMarkDone(String task, int numTasks) {"},{"lineNumber":76,"author":{"gitId":"AhQuanz"},"content":"        String message \u003d \"Got it. I`ve mark this task as done:\";"},{"lineNumber":77,"author":{"gitId":"AhQuanz"},"content":"        return message + printExecuteResult(message, task, numTasks, \"\");"},{"lineNumber":78,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":80,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"AhQuanz"},"content":"     * Shows success message upon deleting a task"},{"lineNumber":82,"author":{"gitId":"AhQuanz"},"content":"     * @param task String representation of a task"},{"lineNumber":83,"author":{"gitId":"AhQuanz"},"content":"     * @param numTasks number of task in the taskList"},{"lineNumber":84,"author":{"gitId":"AhQuanz"},"content":"     * @return String , message to be printed on GUI"},{"lineNumber":85,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"AhQuanz"},"content":"    public static String showSuccessDeleteTask(String task, int numTasks) {"},{"lineNumber":87,"author":{"gitId":"AhQuanz"},"content":"        String message \u003d \"Noted. I`ve removed this task: \\n\";"},{"lineNumber":88,"author":{"gitId":"AhQuanz"},"content":"        return message + printExecuteResult(message, task, numTasks, \"\");"},{"lineNumber":89,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":91,"author":{"gitId":"AhQuanz"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"AhQuanz"},"content":"     * Shows success message upon adding a task"},{"lineNumber":93,"author":{"gitId":"AhQuanz"},"content":"     * @param task String representation of a task"},{"lineNumber":94,"author":{"gitId":"AhQuanz"},"content":"     * @param numTasks number of task in the taskList"},{"lineNumber":95,"author":{"gitId":"AhQuanz"},"content":"     * @return String , message to be printed on GUI"},{"lineNumber":96,"author":{"gitId":"AhQuanz"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"AhQuanz"},"content":"    public static String showSuccessAddTask(String task, int numTasks) {"},{"lineNumber":98,"author":{"gitId":"AhQuanz"},"content":"        String message \u003d \"Got it. I`ve added this task: \\n\";"},{"lineNumber":99,"author":{"gitId":"AhQuanz"},"content":"        return message + printExecuteResult(message, task, numTasks, \"\");"},{"lineNumber":100,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":102,"author":{"gitId":"AhQuanz"},"content":"    public static String showSuccessSearch() {"},{"lineNumber":103,"author":{"gitId":"AhQuanz"},"content":"        return \"Here are the matching tasks in your list:\";"},{"lineNumber":104,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":106,"author":{"gitId":"AhQuanz"},"content":"    public static String showFailSearch(String searchTerm) {"},{"lineNumber":107,"author":{"gitId":"AhQuanz"},"content":"        return \"There are no matching task with \" + searchTerm;"},{"lineNumber":108,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":110,"author":{"gitId":"AhQuanz"},"content":"    public static void save() {"},{"lineNumber":111,"author":{"gitId":"AhQuanz"},"content":"        storage.save(tasks.getTaskList());"},{"lineNumber":112,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":114,"author":{"gitId":"AhQuanz"},"content":"    public static String parseAndPrint(String fullCommand) {"},{"lineNumber":115,"author":{"gitId":"AhQuanz"},"content":"        try {"},{"lineNumber":116,"author":{"gitId":"AhQuanz"},"content":"            Command command \u003d Parser.parse(fullCommand);"},{"lineNumber":117,"author":{"gitId":"AhQuanz"},"content":"            return command.excute(tasks);"},{"lineNumber":118,"author":{"gitId":"AhQuanz"},"content":"        } catch (DukeException e) {"},{"lineNumber":119,"author":{"gitId":"AhQuanz"},"content":"            return showError(e.getMessage());"},{"lineNumber":120,"author":{"gitId":"AhQuanz"},"content":"        } catch (DukeDeadlineException e) {"},{"lineNumber":121,"author":{"gitId":"AhQuanz"},"content":"            return showError(e.getMessage());"},{"lineNumber":122,"author":{"gitId":"AhQuanz"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":123,"author":{"gitId":"AhQuanz"},"content":"            return showError(\"OOPS!!! I`m sorry. but i don`t know what that means :-(\");"},{"lineNumber":124,"author":{"gitId":"AhQuanz"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"AhQuanz"},"content":"}"}],"authorContributionMap":{"AhQuanz":126}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AhQuanz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"AhQuanz"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"AhQuanz"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"AhQuanz"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"AhQuanz"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"AhQuanz"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"AhQuanz"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"AhQuanz":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AhQuanz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"AhQuanz"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"AhQuanz"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"AhQuanz"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"AhQuanz"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"AhQuanz"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"AhQuanz"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"AhQuanz"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"AhQuanz"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"AhQuanz":19}},{"path":"src/test/Java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AhQuanz"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"import java.time.LocalDateTime;"},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"public class DeadlineTest {"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy Hmm\");"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"AhQuanz"},"content":"    public void init_currentDateTime_success() {"},{"lineNumber":12,"author":{"gitId":"AhQuanz"},"content":"        Deadline task \u003d new Deadline(\"SampleTask\", LocalDateTime.now());"},{"lineNumber":13,"author":{"gitId":"AhQuanz"},"content":"        String expectedOutput \u003d \"[D] [ ] SampleTask (by: \" + LocalDateTime.now()"},{"lineNumber":14,"author":{"gitId":"AhQuanz"},"content":"                                        .format(formatter) + \")\";"},{"lineNumber":15,"author":{"gitId":"AhQuanz"},"content":"        assertEquals(expectedOutput,task.toString());"},{"lineNumber":16,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":18,"author":{"gitId":"AhQuanz"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":"    public void format_currentDateTime_success() {"},{"lineNumber":20,"author":{"gitId":"AhQuanz"},"content":"        Deadline task \u003d new Deadline(\"SampleTask\", LocalDateTime.now());"},{"lineNumber":21,"author":{"gitId":"AhQuanz"},"content":"        assertEquals(LocalDateTime.now().format(formatter),task.format(LocalDateTime.now()));"},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"AhQuanz"},"content":"}"}],"authorContributionMap":{"AhQuanz":23}},{"path":"src/test/Java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AhQuanz"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":"public class TaskListTest {"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":""},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":"    public void checkValidOption_lessThanZero_returnTrue() {"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":"        assertTrue(taskList.checkValidOption(-1));"},{"lineNumber":11,"author":{"gitId":"AhQuanz"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"AhQuanz"},"content":"}"}],"authorContributionMap":{"AhQuanz":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AhQuanz"},"content":"duke.txt"},{"lineNumber":2,"author":{"gitId":"AhQuanz"},"content":"todo read book"},{"lineNumber":3,"author":{"gitId":"AhQuanz"},"content":"deadline return book /by 2020-2-10 1800"},{"lineNumber":4,"author":{"gitId":"AhQuanz"},"content":"event project meeting /at 2020-5-10 1400-1600"},{"lineNumber":5,"author":{"gitId":"AhQuanz"},"content":"list"},{"lineNumber":6,"author":{"gitId":"AhQuanz"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"AhQuanz"},"content":"done 4"},{"lineNumber":8,"author":{"gitId":"AhQuanz"},"content":"list"},{"lineNumber":9,"author":{"gitId":"AhQuanz"},"content":"todo join sports club"},{"lineNumber":10,"author":{"gitId":"AhQuanz"},"content":"list"},{"lineNumber":11,"author":{"gitId":"AhQuanz"},"content":"done 4"},{"lineNumber":12,"author":{"gitId":"AhQuanz"},"content":"list"},{"lineNumber":13,"author":{"gitId":"AhQuanz"},"content":"todo"},{"lineNumber":14,"author":{"gitId":"AhQuanz"},"content":"blah"},{"lineNumber":15,"author":{"gitId":"AhQuanz"},"content":"deadline"},{"lineNumber":16,"author":{"gitId":"AhQuanz"},"content":"deadline buy book"},{"lineNumber":17,"author":{"gitId":"AhQuanz"},"content":"event"},{"lineNumber":18,"author":{"gitId":"AhQuanz"},"content":"event buy book"},{"lineNumber":19,"author":{"gitId":"AhQuanz"},"content":"deadline buy book /by 2020-02"},{"lineNumber":20,"author":{"gitId":"AhQuanz"},"content":"deadline buy book /by 1800"},{"lineNumber":21,"author":{"gitId":"AhQuanz"},"content":"event project meeting /at 2020-10-10 1400"},{"lineNumber":22,"author":{"gitId":"AhQuanz"},"content":"bye"}],"authorContributionMap":{"AhQuanz":22}}]
