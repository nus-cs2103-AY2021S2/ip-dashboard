[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"# duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"1. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"khiaxeng":2,"-":21}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"    mainClassName \u003d \"duke.Duke\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":"    archiveVersion \u003d \"v0.2\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"khiaxeng":2,"-":45}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"T | 1 | read book"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":"T | 0 | read"},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"T | 0 | read"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"T | 0 | read book"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"T | 0 | read book"}],"authorContributionMap":{"khiaxeng":5}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import duke.exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import duke.parser.Parser;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import duke.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":" * Main class for Duke application."},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":" */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    private final Ui ui;"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"    private final TaskList tasks;"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    private final Storage storage;"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"     * Initializes a Duke object."},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"    public Duke() {"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"        this.tasks \u003d new TaskList();"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"        this.storage \u003d new Storage();"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"            storage.readFile(tasks);"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"        } catch (DukeException e) {"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"            ui.printError(e.getMessage());"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"     * Starts reading inputs and executing Duke\u0027s program."},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"    public void run() {"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"        ui.showGreeting();"},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":"        boolean isExit \u003d false;"},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":"        while (!isExit) {"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":"            try {"},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":"                String fullCommand \u003d ui.readCommand();"},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":"                Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":"                c.execute(tasks, ui, storage);"},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"                isExit \u003d c.isExitCommand();"},{"lineNumber":44,"author":{"gitId":"khiaxeng"},"content":"            } catch (DukeException e) {"},{"lineNumber":45,"author":{"gitId":"khiaxeng"},"content":"                ui.showError(e.getMessage());"},{"lineNumber":46,"author":{"gitId":"khiaxeng"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":50,"author":{"gitId":"khiaxeng"},"content":"    public static void main(String[] args) {"},{"lineNumber":51,"author":{"gitId":"khiaxeng"},"content":"        new Duke().run();"},{"lineNumber":52,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"khiaxeng":51,"-":2}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"public class ByeCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"        ui.printExitMsg();"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"        storage.write(tasks);"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"    public boolean isExitCommand() {"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"        return true;"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":20}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"public abstract class Command {"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"    public abstract boolean isExitCommand();"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":12}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import duke.parser.Parser;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import duke.task.Deadline;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"import java.time.LocalDateTime;"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    private final Deadline deadline;"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    private static final String NO_ARGUMENT_ERROR \u003d \"Please specify a deadline!\";"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"    public DeadlineCommand(String description) throws DukeException {"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"            if (description.isBlank()) {"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"                throw new DukeException(NO_ARGUMENT_ERROR);"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"            }"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"            String[] descArr \u003d description.split(\" /by \");"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"            if (descArr.length \u003c 2) {"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"                throw new DukeException(NO_ARGUMENT_ERROR);"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"            LocalDateTime time \u003d Parser.parseInputToDateTime(descArr[1]);"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"            this.deadline \u003d new Deadline(descArr[0], time);"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"        } catch (DukeException e) {"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(e.getMessage());"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"        tasks.addTask(this.deadline);"},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":"        ui.printAddTaskAck(this.deadline, tasks);"},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":"        storage.write(tasks);"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":"    public boolean isExitCommand() {"},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"        return false;"},{"lineNumber":44,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":45}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import duke.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"    private final int index;"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"    private static final String NO_INDEX_ERROR \u003d \"Please specify a duke.task to delete!\";"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    private static final String INDEX_NOT_INT_ERROR \u003d \"Please specify a number instead!\";"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"    private static final String OUT_OF_BOUND_ERROR \u003d \"Not in the list!\";"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"    public DeleteCommand(String index) throws DukeException {"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"        if (index.isBlank()) {"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(NO_INDEX_ERROR);"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"            this.index \u003d Integer.parseInt(index.trim());"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(INDEX_NOT_INT_ERROR);"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":"            Task targetTask \u003d tasks.getTask(index);"},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"            tasks.deleteTask(index);"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"            ui.printDeleteMsg(targetTask, tasks);"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"            storage.write(tasks);"},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(OUT_OF_BOUND_ERROR);"},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":"    public boolean isExitCommand() {"},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":"        return false;"},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":44}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import duke.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"public class DoneCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"    private final int index;"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"    private static final String NO_INDEX_ERROR \u003d \"Please specify a duke.task index!\";"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    private static final String INDEX_NOT_INT_ERROR \u003d \"Please specify a number instead!\";"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"    private static final String OUT_OF_BOUND_ERROR \u003d \"Not in the list!\";"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"    public DoneCommand(String index) throws DukeException {"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"        if (index.equals(\"\")) {"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(NO_INDEX_ERROR);"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"            this.index \u003d Integer.parseInt(index.trim());"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(INDEX_NOT_INT_ERROR);"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":"            Task targetTask \u003d tasks.getTask(index);"},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"            targetTask.setDone(true);"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"            ui.printDoneMsg(targetTask);"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"            storage.write(tasks);"},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(OUT_OF_BOUND_ERROR);"},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":"    public boolean isExitCommand() {"},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":"        return false;"},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":44}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import duke.parser.Parser;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import duke.task.Event;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"import java.time.LocalDateTime;"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"public class EventCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    private final Event event;"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    private static final String NO_ARGUMENT_ERROR \u003d \"Please specify a valid event!\";"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"    public EventCommand(String description) throws DukeException {"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"            if (description.isEmpty()) {"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"                throw new DukeException(NO_ARGUMENT_ERROR);"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"            }"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"            String[] descArr \u003d description.split(\" /at \");"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"            if (descArr.length \u003c 2) {"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"                throw new DukeException(NO_ARGUMENT_ERROR);"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"            LocalDateTime time \u003d Parser.parseInputToDateTime(descArr[1]);"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"            this.event \u003d new Event(descArr[0], time);"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"        } catch (DukeException e) {"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(e.getMessage());"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"        tasks.addTask(this.event);"},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":"        ui.printAddTaskAck(this.event, tasks);"},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":"        storage.write(tasks);"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":"    public boolean isExitCommand() {"},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"        return false;"},{"lineNumber":44,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":45}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"public class FindCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"    private String keyword;"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"    public FindCommand(String keyword) throws DukeException {"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"        if (keyword.trim().isEmpty()) {"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(\"Please enter a keyword!\");"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"        TaskList result \u003d tasks.find(keyword);"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"        ui.printTaskList(result);"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"    public boolean isExitCommand() {"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"        return false;"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":28}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"public class ListCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"    private static final String ERROR_MSG \u003d \"Try typing \u0027list\u0027 only!\";"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"    public ListCommand(String description) throws DukeException {"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"        if (!description.equals(\"\")) {"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(ERROR_MSG);"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"        ui.printTaskList(tasks);"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"        storage.write(tasks);"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"    public boolean isExitCommand() {"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"        return false;"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":28}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"public class TodoCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"    private final Todo todo;"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"    public TodoCommand(String description) throws DukeException {"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"        if (description.equals(\"\")) {"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(\"Argument not specified!\");"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"        this.todo \u003d new Todo(description);"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"        tasks.addTask(todo);"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"        ui.printAddTaskAck(todo, tasks);"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"        storage.write(tasks);"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"    public boolean isExitCommand() {"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"        return false;"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":30}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"    public DukeException(String s) {"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"        super(s);"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":7}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.command.*;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import duke.exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import duke.ui.CommandType;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"import static duke.ui.CommandType.*;"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"public class Parser {"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"     * Parses the input string from the user and returns a Command according to the input."},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"     * @param inputString input string from user"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"     * @return Command object according to user\u0027s input"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"     * @throws DukeException"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"    public static Command parse(String inputString) throws DukeException {"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"        String[] splitInput \u003d inputString.split(\" \", 2);"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"        if (splitInput.length \u003c 2) {"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"            splitInput \u003d new String[]{splitInput[0], \"\"};"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"        String argument \u003d splitInput[1].trim();"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"        CommandType commandType \u003d valueOf(splitInput[0].trim()"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"                .toUpperCase());"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":"        switch (commandType) {"},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"        case BYE:"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"            return new ByeCommand();"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"        case LIST:"},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"            return new ListCommand(argument);"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"        case DONE:"},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":"            return new DoneCommand(argument);"},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":"        case TODO:"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":"            return new TodoCommand(argument);"},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":"        case DEADLINE:"},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":"            return new DeadlineCommand(argument);"},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":"        case EVENT:"},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"            return new EventCommand(argument);"},{"lineNumber":44,"author":{"gitId":"khiaxeng"},"content":"        case DELETE:"},{"lineNumber":45,"author":{"gitId":"khiaxeng"},"content":"            return new DeleteCommand(argument);"},{"lineNumber":46,"author":{"gitId":"khiaxeng"},"content":"        case FIND:"},{"lineNumber":47,"author":{"gitId":"khiaxeng"},"content":"            return new FindCommand(argument);"},{"lineNumber":48,"author":{"gitId":"khiaxeng"},"content":"        default:"},{"lineNumber":49,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(\"Sorry, I don\u0027t quite understand!\");"},{"lineNumber":50,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":53,"author":{"gitId":"khiaxeng"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"khiaxeng"},"content":"     * Parses an input String and returns a LocalDateTime in the \"d/MM/yyyy Hmm\" format."},{"lineNumber":55,"author":{"gitId":"khiaxeng"},"content":"     * @param dateTime date and time String specified by user input"},{"lineNumber":56,"author":{"gitId":"khiaxeng"},"content":"     * @return LocalDateTime object in the \"d/MM/yyyy Hmm\" format."},{"lineNumber":57,"author":{"gitId":"khiaxeng"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"khiaxeng"},"content":"    public static LocalDateTime parseInputToDateTime(String dateTime) {"},{"lineNumber":59,"author":{"gitId":"khiaxeng"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy Hmm\");"},{"lineNumber":60,"author":{"gitId":"khiaxeng"},"content":"        return LocalDateTime.parse(dateTime, format);"},{"lineNumber":61,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":63,"author":{"gitId":"khiaxeng"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"khiaxeng"},"content":"     * Parses an input String according to the format of a saved Task in /data/duke.txt and"},{"lineNumber":65,"author":{"gitId":"khiaxeng"},"content":"     * returns LocalDateTime object in the \"d/MM/yyyy Hmm\" format."},{"lineNumber":66,"author":{"gitId":"khiaxeng"},"content":"     * @param dateTime date and time String in the saved Task format"},{"lineNumber":67,"author":{"gitId":"khiaxeng"},"content":"     * @return LocalDateTime object in the \"d/MM/yyyy Hmm\" format."},{"lineNumber":68,"author":{"gitId":"khiaxeng"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"khiaxeng"},"content":"    public static LocalDateTime parseSaveToDateTime(String dateTime) {"},{"lineNumber":70,"author":{"gitId":"khiaxeng"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");"},{"lineNumber":71,"author":{"gitId":"khiaxeng"},"content":"        return LocalDateTime.parse(dateTime, format);"},{"lineNumber":72,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":74,"author":{"gitId":"khiaxeng"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"khiaxeng"},"content":"     * Parses a LocalDateTime object and returns a String according to the output format."},{"lineNumber":76,"author":{"gitId":"khiaxeng"},"content":"     * @param dateTime LocalDateTime object"},{"lineNumber":77,"author":{"gitId":"khiaxeng"},"content":"     * @return a String object that conforms to the output format"},{"lineNumber":78,"author":{"gitId":"khiaxeng"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"khiaxeng"},"content":"    public static String parseDateTimeToString(LocalDateTime dateTime) {"},{"lineNumber":80,"author":{"gitId":"khiaxeng"},"content":"        DateTimeFormatter pattern \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");"},{"lineNumber":81,"author":{"gitId":"khiaxeng"},"content":"        return dateTime.format(pattern);"},{"lineNumber":82,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":83}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import duke.parser.Parser;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import duke.task.*;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"import java.io.File;"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"import java.io.FileWriter;"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    private final File file;"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    public Storage() {"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"        this.file \u003d new File(\"data\", \"duke.txt\");"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"     * Checks if parent and file directory exists. Creates the parent and file directory"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"     * if they do not exist."},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"     * @throws DukeException"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"    public void createNewFile() throws DukeException {"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"            if (!this.file.getParentFile().exists()) {"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"                this.file.getParentFile().mkdirs();"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"            if (!this.file.exists()) {"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":"                this.file.createNewFile();"},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(\"There is an error creating\""},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"                    + \"file: \" + this.file.getName());"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":"     * Reads saved txt file and adds the tasks to Duke\u0027s TaskList."},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":"     * @param tasks Duke\u0027s TaskList"},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":"     * @throws DukeException"},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"khiaxeng"},"content":"    public void readFile(TaskList tasks) throws DukeException {"},{"lineNumber":45,"author":{"gitId":"khiaxeng"},"content":"        createNewFile();"},{"lineNumber":46,"author":{"gitId":"khiaxeng"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"khiaxeng"},"content":"            Scanner sc \u003d new Scanner(file);"},{"lineNumber":48,"author":{"gitId":"khiaxeng"},"content":"            while (sc.hasNextLine()) {"},{"lineNumber":49,"author":{"gitId":"khiaxeng"},"content":"                String[] taskSplit \u003d sc.nextLine().split(\"\\\\|\");"},{"lineNumber":50,"author":{"gitId":"khiaxeng"},"content":"                switch (taskSplit[0].trim()) {"},{"lineNumber":51,"author":{"gitId":"khiaxeng"},"content":"                case \"T\":"},{"lineNumber":52,"author":{"gitId":"khiaxeng"},"content":"                    Todo t \u003d new Todo(taskSplit[2]);"},{"lineNumber":53,"author":{"gitId":"khiaxeng"},"content":"                    addToTasks(tasks, t, taskSplit[1]);"},{"lineNumber":54,"author":{"gitId":"khiaxeng"},"content":"                    break;"},{"lineNumber":55,"author":{"gitId":"khiaxeng"},"content":"                case \"D\":"},{"lineNumber":56,"author":{"gitId":"khiaxeng"},"content":"                    Deadline d \u003d new Deadline(taskSplit[2],"},{"lineNumber":57,"author":{"gitId":"khiaxeng"},"content":"                            Parser.parseSaveToDateTime(taskSplit[3].trim()));"},{"lineNumber":58,"author":{"gitId":"khiaxeng"},"content":"                    addToTasks(tasks, d, taskSplit[1]);"},{"lineNumber":59,"author":{"gitId":"khiaxeng"},"content":"                    break;"},{"lineNumber":60,"author":{"gitId":"khiaxeng"},"content":"                case \"E\":"},{"lineNumber":61,"author":{"gitId":"khiaxeng"},"content":"                    Event e \u003d new Event(taskSplit[2],"},{"lineNumber":62,"author":{"gitId":"khiaxeng"},"content":"                            Parser.parseSaveToDateTime(taskSplit[3].trim()));"},{"lineNumber":63,"author":{"gitId":"khiaxeng"},"content":"                    addToTasks(tasks, e, taskSplit[1]);"},{"lineNumber":64,"author":{"gitId":"khiaxeng"},"content":"                    break;"},{"lineNumber":65,"author":{"gitId":"khiaxeng"},"content":"                default:"},{"lineNumber":66,"author":{"gitId":"khiaxeng"},"content":"                    break;"},{"lineNumber":67,"author":{"gitId":"khiaxeng"},"content":"                }"},{"lineNumber":68,"author":{"gitId":"khiaxeng"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"khiaxeng"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":70,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(\"File not found!\");"},{"lineNumber":71,"author":{"gitId":"khiaxeng"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":72,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(\"Index OOB error!\");"},{"lineNumber":73,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":76,"author":{"gitId":"khiaxeng"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"khiaxeng"},"content":"     * Helper function to add tasks to TaskList."},{"lineNumber":78,"author":{"gitId":"khiaxeng"},"content":"     * @param tasks Duke\u0027s TaskList"},{"lineNumber":79,"author":{"gitId":"khiaxeng"},"content":"     * @param t input Task"},{"lineNumber":80,"author":{"gitId":"khiaxeng"},"content":"     * @param isDone isDone boolean value of task t"},{"lineNumber":81,"author":{"gitId":"khiaxeng"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"khiaxeng"},"content":"    private void addToTasks(TaskList tasks, Task t, String isDone) {"},{"lineNumber":83,"author":{"gitId":"khiaxeng"},"content":"        if (isDone.trim().equals(\"1\")) {"},{"lineNumber":84,"author":{"gitId":"khiaxeng"},"content":"            t.setDone(true);"},{"lineNumber":85,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"khiaxeng"},"content":"        tasks.addTask(t);"},{"lineNumber":87,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":89,"author":{"gitId":"khiaxeng"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"khiaxeng"},"content":"     * Writes the current TaskList to txt file."},{"lineNumber":91,"author":{"gitId":"khiaxeng"},"content":"     * @param tasks Duke\u0027s TaskList"},{"lineNumber":92,"author":{"gitId":"khiaxeng"},"content":"     * @throws DukeException"},{"lineNumber":93,"author":{"gitId":"khiaxeng"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"khiaxeng"},"content":"    public void write(TaskList tasks) throws DukeException {"},{"lineNumber":95,"author":{"gitId":"khiaxeng"},"content":"        try {"},{"lineNumber":96,"author":{"gitId":"khiaxeng"},"content":"            FileWriter fw \u003d new FileWriter(this.file);"},{"lineNumber":97,"author":{"gitId":"khiaxeng"},"content":"            for (Task t : tasks.getTaskList()) {"},{"lineNumber":98,"author":{"gitId":"khiaxeng"},"content":"                fw.write(t.getSaveFormat() + System.lineSeparator());"},{"lineNumber":99,"author":{"gitId":"khiaxeng"},"content":"            }"},{"lineNumber":100,"author":{"gitId":"khiaxeng"},"content":"            fw.close();"},{"lineNumber":101,"author":{"gitId":"khiaxeng"},"content":"        } catch (IOException e) {"},{"lineNumber":102,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(\"There is an error writing to file.\");"},{"lineNumber":103,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":106,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":106}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.parser.Parser;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"    protected LocalDateTime by;"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"    public Deadline(String description, LocalDateTime by) {"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"        this.by \u003d by;"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + Parser.parseDateTimeToString(by) + \")\";"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"    public String getSaveFormat() {"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"        return \"D | \" + (isDone() ? \"1\" : \"0\") + \" | \" + description +"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"                \" | \" + Parser.parseDateTimeToString(by);"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":26}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.parser.Parser;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"    protected LocalDateTime time;"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"    public Event(String description, LocalDateTime time) {"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"        this.time \u003d time;"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + Parser.parseDateTimeToString(time) + \")\";"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"    public String getSaveFormat() {"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"        return \"E | \" + (isDone() ? \"1\" : \"0\") + \" | \" + description +"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"                \" | \" + Parser.parseDateTimeToString(time);"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":26}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"    protected boolean done;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"        this.done \u003d false;"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"    public String getStatusIcon() {"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"        return (done ? \"X\" : \" \"); // return X for done or empty string for pending"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    public String getDescription() {"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"        return this.description;"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"    public boolean isDone() {"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"        return this.done;"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"    public void setDone(boolean b) {"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"        this.done \u003d b;"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"    public String getSaveFormat() {"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"        return getStatusIcon() + \" | \" + this.description;"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"    public String toString() {"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":36}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"public class TaskList {"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"    private final ArrayList\u003cTask\u003e tasks;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"    public TaskList() {"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"    public void addTask(Task t) {"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"        tasks.add(t);"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    public void deleteTask(int index) {"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"        tasks.remove(index - 1);"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"    public Task getTask(int index) {"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"        return tasks.get(index - 1);"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"    public int getTasksSize() {"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"        return tasks.size();"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"        return tasks;"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"    public TaskList find(String keyword) {"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"        TaskList results \u003d new TaskList();"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"        keyword \u003d keyword.toLowerCase();"},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"        for (Task t : tasks) {"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"            String description \u003d t.getDescription().toLowerCase();"},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":"            if (description.contains(keyword)) {"},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":"                results.addTask(t);"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":"        return results;"},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":43}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"    public Todo(String description) {"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    public String getSaveFormat() {"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"        return \"T | \" + (isDone() ? \"1\" : \"0\") + \" | \" + description;"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":17}},{"path":"src/main/java/duke/ui/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"public enum CommandType {"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"    BYE,"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"    LIST,"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"    DONE,"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"    TODO,"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"    DEADLINE,"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"    EVENT,"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"    DELETE,"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"    FIND"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":12}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import java.io.InputStream;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"import java.io.PrintStream;"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"public class Ui {"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"    private static final String INDENTATION \u003d \"    \";"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"    private static final String BORDER \u003d INDENTATION + \"--------------------------------\""},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"            + \"--------------------------------------\";"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\""},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"    private static final String ADD_TASK_ACK \u003d \"Got it. I\u0027ve added this task:\";"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"    private final Scanner sc;"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"    private final PrintStream out;"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"    public Ui(InputStream in, PrintStream out) {"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"        this.sc \u003d new Scanner(in);"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"        this.out \u003d out;"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":"    public Ui() {"},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"        this(System.in, System.out);"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"    public void display(String... msg) {"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"        out.println(BORDER);"},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":"        for (String m : msg) {"},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":"            out.println(INDENTATION + m);"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":"        out.println(BORDER);"},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"    public void showGreeting() {"},{"lineNumber":44,"author":{"gitId":"khiaxeng"},"content":"        display(\"Hello from \\n\" + LOGO, \"How may I help you?\");"},{"lineNumber":45,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":47,"author":{"gitId":"khiaxeng"},"content":"    public String readCommand() {"},{"lineNumber":48,"author":{"gitId":"khiaxeng"},"content":"        return sc.nextLine().trim();"},{"lineNumber":49,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":51,"author":{"gitId":"khiaxeng"},"content":"    public void showError(String msg) {"},{"lineNumber":52,"author":{"gitId":"khiaxeng"},"content":"        display(msg);"},{"lineNumber":53,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":55,"author":{"gitId":"khiaxeng"},"content":"    public void printAddTaskAck(Task t, TaskList tasks) {"},{"lineNumber":56,"author":{"gitId":"khiaxeng"},"content":"        String taskCountMsg \u003d \"You now have \" + tasks.getTasksSize() + \" task(s) in the list.\";"},{"lineNumber":57,"author":{"gitId":"khiaxeng"},"content":"        display(ADD_TASK_ACK, \" \" + t.toString(), taskCountMsg);"},{"lineNumber":58,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":60,"author":{"gitId":"khiaxeng"},"content":"    public void printExitMsg() {"},{"lineNumber":61,"author":{"gitId":"khiaxeng"},"content":"        display(\"Bye. Hope to see you again soon!\");"},{"lineNumber":62,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":64,"author":{"gitId":"khiaxeng"},"content":"    public void printTaskList(TaskList tasks) {"},{"lineNumber":65,"author":{"gitId":"khiaxeng"},"content":"        String[] msg \u003d new String[tasks.getTasksSize()];"},{"lineNumber":66,"author":{"gitId":"khiaxeng"},"content":"        for (int i \u003d 0; i \u003c tasks.getTasksSize(); i++) {"},{"lineNumber":67,"author":{"gitId":"khiaxeng"},"content":"            msg[i] \u003d (i + 1) + \". \" + tasks.getTask(i + 1);"},{"lineNumber":68,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"khiaxeng"},"content":"        display(msg);"},{"lineNumber":70,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":72,"author":{"gitId":"khiaxeng"},"content":"    public void printDoneMsg(Task task) {"},{"lineNumber":73,"author":{"gitId":"khiaxeng"},"content":"        String[] msg \u003d new String[2];"},{"lineNumber":74,"author":{"gitId":"khiaxeng"},"content":"        msg[0] \u003d \"Nice! I\u0027ve marked this task as done.\";"},{"lineNumber":75,"author":{"gitId":"khiaxeng"},"content":"        msg[1] \u003d task.toString();"},{"lineNumber":76,"author":{"gitId":"khiaxeng"},"content":"        display(msg);"},{"lineNumber":77,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":79,"author":{"gitId":"khiaxeng"},"content":"    public void printDeleteMsg(Task task, TaskList tasks) {"},{"lineNumber":80,"author":{"gitId":"khiaxeng"},"content":"        String[] msg \u003d new String[3];"},{"lineNumber":81,"author":{"gitId":"khiaxeng"},"content":"        msg[0] \u003d \"Noted. I\u0027ve removed this task.\";"},{"lineNumber":82,"author":{"gitId":"khiaxeng"},"content":"        msg[1] \u003d \" \" + task.toString();"},{"lineNumber":83,"author":{"gitId":"khiaxeng"},"content":"        msg[2] \u003d \"Now you have \" + tasks.getTasksSize() +"},{"lineNumber":84,"author":{"gitId":"khiaxeng"},"content":"                \" task(s) in the list.\";"},{"lineNumber":85,"author":{"gitId":"khiaxeng"},"content":"        display(msg);"},{"lineNumber":86,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":88,"author":{"gitId":"khiaxeng"},"content":"    public void printError(String msg) {"},{"lineNumber":89,"author":{"gitId":"khiaxeng"},"content":"        display(msg);"},{"lineNumber":90,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":92,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":92}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"public class TaskTest {"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"    void setDone_testTask_false() {"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"        Task t \u003d new Task(\"test\");"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"        t.setDone(false);"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"        assertFalse(t.isDone());"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    void setDone_testTask_true() {"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"        Task t \u003d new Task(\"test\");"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"        t.setDone(true);"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"        assertTrue(t.isDone());"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":"todo asdqwe"},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"list"}],"authorContributionMap":{"khiaxeng":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"javac  -cp ..\\src\\main\\java\\Main.java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"khiaxeng":2,"-":19}}]
