[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"# duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"1. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"khiaxeng":2,"-":21}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"khiaxeng"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"khiaxeng"},"content":"    archiveBaseName \u003d \"Hayate\""},{"lineNumber":52,"author":{"gitId":"khiaxeng"},"content":"    archiveVersion \u003d \"v0.4\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"khiaxeng":18,"-":44}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"T | 0 | Watch CS2103T lecture"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":"D | 0 | iP Project | Feb 19 2021 11:59 PM"},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"T | 0 | read"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"T | 0 | read"}],"authorContributionMap":{"khiaxeng":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"# Hayate User Guide"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":"***"},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"Hayate is a **productivity app** to help you keep track of your"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"**daily tasks**. It is a Command Line Interface (CLI) based app"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"optimized for **fast typers**! Keeping track of your tasks will"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"now be a breeze (é£Ž) !"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"## Quick Start"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"1. Ensure you have `Java 11` or above installed on your computer."},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"2. Download the latest release of `Hayate.jar` from [here](https://github.com/khiaxeng/ip/releases/tag/v0.4)."},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"3. Copy `Hayate.jar` to a directory of your choice."},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"4. Double-click `Hayate.jar` to run the app."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"## Command List"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"**Commands** | **Usage**"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"------------ | ----------"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"`todo` | Adds a `todo` to the list"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"`deadline \u003cdeadlineDescription\u003e /by dd/MM/yyyy HHmm` | Adds a `deadline` to the list"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"`event \u003ceventDescription\u003e /at dd/MM/yyyy HHmm` | Adds an `event` to the list"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"`list` | Display the list of all tasks"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"`done \u003ctaskIndex\u003e` | Marks the task positioned at `\u003ctaskIndex\u003e` in the list as `done`"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"`delete \u003ctaskIndex\u003e` | Deletes the task positioned at `\u003ctaskIndex\u003e` in the list"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"`update \u003ctaskIndex\u003e \u003cnewDescription\u003e` | Updates the description of the task positioned at `\u003ctaskIndex\u003e`"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"`bye` | Exits the app"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"### 1. `todo` - Adds a `todo` to the list"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":"Example of usage:"},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"`todo House chores`"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"Expected outcome:"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":"```"},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":" [T][ ] House chores"},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":"You now have 4 task(s) in the list."},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":"```"},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"### 2. `deadline` - Adds a `deadline` to the list"},{"lineNumber":44,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":45,"author":{"gitId":"khiaxeng"},"content":"Example of usage:"},{"lineNumber":46,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":47,"author":{"gitId":"khiaxeng"},"content":"`deadline CS2103T Project /by 19/02/2021 2359`"},{"lineNumber":48,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":49,"author":{"gitId":"khiaxeng"},"content":"Expected outcome:"},{"lineNumber":50,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":51,"author":{"gitId":"khiaxeng"},"content":"```"},{"lineNumber":52,"author":{"gitId":"khiaxeng"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":53,"author":{"gitId":"khiaxeng"},"content":" [D][ ] CS2103T Project (by: Feb 19 2021 11:59 PM)"},{"lineNumber":54,"author":{"gitId":"khiaxeng"},"content":"You now have 5 task(s) in the list."},{"lineNumber":55,"author":{"gitId":"khiaxeng"},"content":"```"},{"lineNumber":56,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":57,"author":{"gitId":"khiaxeng"},"content":"### 3. `event` - Adds an `event` to the list"},{"lineNumber":58,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":59,"author":{"gitId":"khiaxeng"},"content":"Example of usage:"},{"lineNumber":60,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":61,"author":{"gitId":"khiaxeng"},"content":"`event Vivian\u0027s birthday /at 21/02/2021 1700`"},{"lineNumber":62,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":63,"author":{"gitId":"khiaxeng"},"content":"Expected outcome:"},{"lineNumber":64,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":65,"author":{"gitId":"khiaxeng"},"content":"```"},{"lineNumber":66,"author":{"gitId":"khiaxeng"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":67,"author":{"gitId":"khiaxeng"},"content":" [E][ ] Vivian\u0027s birthday (at: Feb 21 2021 05:00 PM)"},{"lineNumber":68,"author":{"gitId":"khiaxeng"},"content":"You now have 6 task(s) in the list."},{"lineNumber":69,"author":{"gitId":"khiaxeng"},"content":"```"},{"lineNumber":70,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":71,"author":{"gitId":"khiaxeng"},"content":"### 4. `list` - Display the list of all tasks"},{"lineNumber":72,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":73,"author":{"gitId":"khiaxeng"},"content":"Example of usage:"},{"lineNumber":74,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":75,"author":{"gitId":"khiaxeng"},"content":"`list`"},{"lineNumber":76,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":77,"author":{"gitId":"khiaxeng"},"content":"Expected outcome:"},{"lineNumber":78,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":79,"author":{"gitId":"khiaxeng"},"content":"```"},{"lineNumber":80,"author":{"gitId":"khiaxeng"},"content":"1. [T][ ] Watch CS2103T lecture"},{"lineNumber":81,"author":{"gitId":"khiaxeng"},"content":"2. [D][ ] iP Project (by: Feb 19 2021 11:59 PM)"},{"lineNumber":82,"author":{"gitId":"khiaxeng"},"content":"3. [T][ ] House chores"},{"lineNumber":83,"author":{"gitId":"khiaxeng"},"content":"4. [D][ ] CS2103T Project (by: Feb 19 2021 11:59 PM)"},{"lineNumber":84,"author":{"gitId":"khiaxeng"},"content":"5. [E][ ] Vivian\u0027s birthday (at: Feb 21 2021 05:00 PM)"},{"lineNumber":85,"author":{"gitId":"khiaxeng"},"content":"```"},{"lineNumber":86,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":87,"author":{"gitId":"khiaxeng"},"content":"### 5. `done` - Marks the task positioned at `\u003ctaskIndex\u003e` in the list as `done`"},{"lineNumber":88,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":89,"author":{"gitId":"khiaxeng"},"content":"Example of usage:"},{"lineNumber":90,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":91,"author":{"gitId":"khiaxeng"},"content":"`done 2`"},{"lineNumber":92,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":93,"author":{"gitId":"khiaxeng"},"content":"Expected outcome:"},{"lineNumber":94,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":95,"author":{"gitId":"khiaxeng"},"content":"```"},{"lineNumber":96,"author":{"gitId":"khiaxeng"},"content":"Nice! I\u0027ve marked this task as done."},{"lineNumber":97,"author":{"gitId":"khiaxeng"},"content":"[D][X] iP Project (by: Feb 19 2021 11:59 PM)"},{"lineNumber":98,"author":{"gitId":"khiaxeng"},"content":"```"},{"lineNumber":99,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":100,"author":{"gitId":"khiaxeng"},"content":"### 6. `delete` - Deletes the task positioned at `\u003ctaskIndex\u003e` in the list"},{"lineNumber":101,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":102,"author":{"gitId":"khiaxeng"},"content":"Example of usage:"},{"lineNumber":103,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":104,"author":{"gitId":"khiaxeng"},"content":"`delete 2`"},{"lineNumber":105,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":106,"author":{"gitId":"khiaxeng"},"content":"Expected outcome:"},{"lineNumber":107,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":108,"author":{"gitId":"khiaxeng"},"content":"```"},{"lineNumber":109,"author":{"gitId":"khiaxeng"},"content":"Noted. I\u0027ve removed this task."},{"lineNumber":110,"author":{"gitId":"khiaxeng"},"content":" [D][X] iP Project (by: Feb 19 2021 11:59 PM)"},{"lineNumber":111,"author":{"gitId":"khiaxeng"},"content":"Now you have 4 task(s) in the list."},{"lineNumber":112,"author":{"gitId":"khiaxeng"},"content":"```"},{"lineNumber":113,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":114,"author":{"gitId":"khiaxeng"},"content":"### 7. `update` - Updates the description of the task positioned at `\u003ctaskIndex\u003e`"},{"lineNumber":115,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":116,"author":{"gitId":"khiaxeng"},"content":"Example of usage:"},{"lineNumber":117,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":118,"author":{"gitId":"khiaxeng"},"content":"`update 2 Wash dishes`"},{"lineNumber":119,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":120,"author":{"gitId":"khiaxeng"},"content":"Expected outcome:"},{"lineNumber":121,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":122,"author":{"gitId":"khiaxeng"},"content":"```"},{"lineNumber":123,"author":{"gitId":"khiaxeng"},"content":"Noted. I\u0027ve updated this task."},{"lineNumber":124,"author":{"gitId":"khiaxeng"},"content":" [T][ ] Wash dishes"},{"lineNumber":125,"author":{"gitId":"khiaxeng"},"content":"```"},{"lineNumber":126,"author":{"gitId":"-"},"content":""},{"lineNumber":127,"author":{"gitId":"khiaxeng"},"content":"### 8. `bye` - Exits the app"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"khiaxeng"},"content":"`bye`"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"khiaxeng"},"content":"```"},{"lineNumber":136,"author":{"gitId":"khiaxeng"},"content":"Bye. Hope to see you again soon!"},{"lineNumber":137,"author":{"gitId":"khiaxeng"},"content":"```"}],"authorContributionMap":{"khiaxeng":124,"-":13}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":" */"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"khiaxeng"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"khiaxeng"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"khiaxeng"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"khiaxeng"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"khiaxeng"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"khiaxeng"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":52,"author":{"gitId":"khiaxeng"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"khiaxeng"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":56,"author":{"gitId":"khiaxeng"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"khiaxeng"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"khiaxeng"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"khiaxeng"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import duke.exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import duke.parser.Parser;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import duke.storage.Storage;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":" * Main class for Duke application."},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":" */"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    private final Ui ui;"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"    private final TaskList tasks;"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    private final Storage storage;"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"    private boolean isExit \u003d false;"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"     * Initializes a Duke object."},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"    public Duke() {"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"        this.tasks \u003d new TaskList();"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"        this.storage \u003d new Storage();"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"            storage.readFile(tasks);"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"        } catch (DukeException e) {"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"            ui.printError(e.getMessage());"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"     * Returns greeting message String."},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"     * @return greeting message String"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":"    public String greet() {"},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":"        return ui.getGreeetingMsg();"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":"    public boolean getExitStatus() {"},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":"        return isExit;"},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":45,"author":{"gitId":"khiaxeng"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"khiaxeng"},"content":"     * You should have your own function to generate a response to user input."},{"lineNumber":47,"author":{"gitId":"khiaxeng"},"content":"     * Replace this stub with your completed method."},{"lineNumber":48,"author":{"gitId":"khiaxeng"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"khiaxeng"},"content":"    public String getResponse(String input) {"},{"lineNumber":50,"author":{"gitId":"khiaxeng"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"khiaxeng"},"content":"            Command c \u003d Parser.parse(input);"},{"lineNumber":52,"author":{"gitId":"khiaxeng"},"content":"            isExit \u003d c.isExitCommand();"},{"lineNumber":53,"author":{"gitId":"khiaxeng"},"content":"            return c.execute(tasks, ui, storage);"},{"lineNumber":54,"author":{"gitId":"khiaxeng"},"content":"        } catch (DukeException e) {"},{"lineNumber":55,"author":{"gitId":"khiaxeng"},"content":"            return ui.getError(e.getMessage());"},{"lineNumber":56,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"khiaxeng":57,"-":1}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":" */"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":" * A GUI for Duke using FXML."},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":" */"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"    private final Duke duke \u003d new Duke();"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"            stage.setTitle(\"Hayate\");"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"            stage.getIcons().add(new Image(\"/images/icon.png\"));"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"            stage.setScene(scene);"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"            stage.show();"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"        } catch (IOException e) {"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":"            e.printStackTrace();"},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":34}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import javafx.application.Platform;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import javafx.fxml.FXML;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":" */"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"    private VBox dialogContainer;"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"    private TextField userInput;"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"    private Button sendButton;"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"    private Duke duke;"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/woman.png\"));"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/cat.png\"));"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":"    public void initialize() {"},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"        duke \u003d d;"},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":"        dialogContainer.getChildren().add("},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":"                DialogBox.getDukeDialog(d.greet(), dukeImage)"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":"        );"},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":44,"author":{"gitId":"khiaxeng"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":45,"author":{"gitId":"khiaxeng"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"khiaxeng"},"content":"    @FXML"},{"lineNumber":47,"author":{"gitId":"khiaxeng"},"content":"    private void handleUserInput() {"},{"lineNumber":48,"author":{"gitId":"khiaxeng"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":49,"author":{"gitId":"khiaxeng"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":50,"author":{"gitId":"khiaxeng"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":51,"author":{"gitId":"khiaxeng"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":52,"author":{"gitId":"khiaxeng"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":53,"author":{"gitId":"khiaxeng"},"content":"        );"},{"lineNumber":54,"author":{"gitId":"khiaxeng"},"content":"        userInput.clear();"},{"lineNumber":55,"author":{"gitId":"khiaxeng"},"content":"        if (duke.getExitStatus()) {"},{"lineNumber":56,"author":{"gitId":"khiaxeng"},"content":"            Platform.exit();"},{"lineNumber":57,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":59}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"public class ByeCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"        storage.write(tasks);"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"        return ui.getExitMsg();"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"    public boolean isExitCommand() {"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"        return true;"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":20}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"public abstract class Command {"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"    public abstract boolean isExitCommand();"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":12}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import duke.parser.Parser;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import duke.task.Deadline;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"import java.time.LocalDateTime;"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"    private final Deadline deadline;"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"    private static final String NO_ARGUMENT_ERROR \u003d \"Please specify a deadline!\";"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"    private static final String INVALID_DATE_ERROR \u003d \"Please specify a valid date!\";"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"    public DeadlineCommand(String description) throws DukeException {"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"            if (description.isBlank()) {"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"                throw new DukeException(NO_ARGUMENT_ERROR);"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"            }"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"            String[] descArr \u003d description.split(\" /by \");"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"            if (descArr.length \u003c 2) {"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"                throw new DukeException(NO_ARGUMENT_ERROR);"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"            LocalDateTime time \u003d Parser.parseInputToDateTime(descArr[1]);"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"            this.deadline \u003d new Deadline(descArr[0], time);"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(INVALID_DATE_ERROR);"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"        } catch (DukeException e) {"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(e.getMessage());"},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":"        tasks.addTask(this.deadline);"},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":"        storage.write(tasks);"},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":"        return ui.getAddTaskAck(this.deadline, tasks);"},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":45,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"khiaxeng"},"content":"    public boolean isExitCommand() {"},{"lineNumber":47,"author":{"gitId":"khiaxeng"},"content":"        return false;"},{"lineNumber":48,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":49}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import duke.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"    private final int index;"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"    private static final String NO_INDEX_ERROR \u003d \"Please specify a duke.task to delete!\";"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    private static final String INDEX_NOT_INT_ERROR \u003d \"Please specify a number instead!\";"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"    private static final String OUT_OF_BOUND_ERROR \u003d \"Not in the list!\";"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"    public DeleteCommand(String index) throws DukeException {"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"        if (index.isBlank()) {"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(NO_INDEX_ERROR);"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"            this.index \u003d Integer.parseInt(index.trim());"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(INDEX_NOT_INT_ERROR);"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":"            Task targetTask \u003d tasks.getTask(index);"},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"            tasks.deleteTask(index);"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"            storage.write(tasks);"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"            return ui.getDeleteMsg(targetTask, tasks);"},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(OUT_OF_BOUND_ERROR);"},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":"    public boolean isExitCommand() {"},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":"        return false;"},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":44}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import duke.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"public class DoneCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"    private final int index;"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"    private static final String NO_INDEX_ERROR \u003d \"Please specify a duke.task index!\";"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    private static final String INDEX_NOT_INT_ERROR \u003d \"Please specify a number instead!\";"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"    private static final String OUT_OF_BOUND_ERROR \u003d \"Not in the list!\";"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"    public DoneCommand(String index) throws DukeException {"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"        if (index.equals(\"\")) {"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(NO_INDEX_ERROR);"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"            this.index \u003d Integer.parseInt(index.trim());"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(INDEX_NOT_INT_ERROR);"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":"            Task targetTask \u003d tasks.getTask(index);"},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"            targetTask.setDone(true);"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"            storage.write(tasks);"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"            return ui.getDoneMsg(targetTask);"},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(OUT_OF_BOUND_ERROR);"},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":"    public boolean isExitCommand() {"},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":"        return false;"},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":44}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import duke.parser.Parser;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import duke.storage.Storage;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import duke.task.Event;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"import duke.task.TaskList;"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"import java.time.LocalDateTime;"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"public class EventCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"    private final Event event;"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"    private static final String NO_ARGUMENT_ERROR \u003d \"Please specify a valid event!\";"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"    private static final String INVALID_DATE_ERROR \u003d \"Please specify a valid date!\";"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"    public EventCommand(String description) throws DukeException {"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"            if (description.isEmpty()) {"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"                throw new DukeException(NO_ARGUMENT_ERROR);"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"            }"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"            String[] descArr \u003d description.split(\" /at \");"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"            if (descArr.length \u003c 2) {"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"                throw new DukeException(NO_ARGUMENT_ERROR);"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"            LocalDateTime time \u003d Parser.parseInputToDateTime(descArr[1]);"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"            this.event \u003d new Event(descArr[0], time);"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(INVALID_DATE_ERROR);"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"        } catch (DukeException e) {"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(e.getMessage());"},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":"        tasks.addTask(this.event);"},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":"        storage.write(tasks);"},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":"        return ui.getAddTaskAck(this.event, tasks);"},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":45,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"khiaxeng"},"content":"    public boolean isExitCommand() {"},{"lineNumber":47,"author":{"gitId":"khiaxeng"},"content":"        return false;"},{"lineNumber":48,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":49}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"public class FindCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"    private final String keyword;"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"    public FindCommand(String keyword) throws DukeException {"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"        if (keyword.trim().isEmpty()) {"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(\"Please enter a keyword!\");"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"        TaskList result \u003d tasks.find(keyword);"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"        return ui.printTaskList(result);"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"    public boolean isExitCommand() {"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"        return false;"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":28}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"public class ListCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"    private static final String ERROR_MSG \u003d \"Try typing \u0027list\u0027 only!\";"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"    public ListCommand(String description) throws DukeException {"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"        if (!description.equals(\"\")) {"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(ERROR_MSG);"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"        storage.write(tasks);"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"        return ui.printTaskList(tasks);"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"    public boolean isExitCommand() {"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"        return false;"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":28}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import duke.task.TaskList;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import duke.task.Todo;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"public class TodoCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"    private final Todo todo;"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"    public TodoCommand(String description) throws DukeException {"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"        if (description.equals(\"\")) {"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(\"Argument not specified!\");"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"        this.todo \u003d new Todo(description);"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"        tasks.addTask(todo);"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"        storage.write(tasks);"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"        return ui.getAddTaskAck(todo, tasks);"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"    public boolean isExitCommand() {"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"        return false;"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":30}},{"path":"src/main/java/duke/command/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import duke.storage.Storage;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import duke.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"import duke.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"public class UpdateCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"    private final int index;"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"    private final String newDescription;"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    private static final String EMPTY_DESCRIPTION_ERROR \u003d \"No blank descriptions allowed!\";"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"    private static final String OUT_OF_BOUND_ERROR \u003d \"Not in the list!\";"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"    public UpdateCommand(String argument) throws DukeException {"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"            if(argument.equals(\"\")) {"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"                throw new DukeException(EMPTY_DESCRIPTION_ERROR);"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"            }"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"            String[] argumentArray \u003d argument.split(\" \", 2);"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"            index \u003d Integer.parseInt(argumentArray[0]);"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"            newDescription \u003d argumentArray[1];"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"        } catch (DukeException | NumberFormatException | IndexOutOfBoundsException e) {"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(e.getMessage());"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"            Task targetTask \u003d tasks.editTask(index, newDescription);"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"            storage.write(tasks);"},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"            return ui.getUpdatedTaskMsg(targetTask, tasks);"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(OUT_OF_BOUND_ERROR);"},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":"    public boolean isExitCommand() {"},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"        return false;"},{"lineNumber":44,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":45}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"    public DukeException(String s) {"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"        super(s);"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":7}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import duke.command.*;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import duke.exception.DukeException;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"import duke.ui.CommandType;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"import java.time.LocalDateTime;"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"import static duke.ui.CommandType.*;"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"public class Parser {"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"    private static final String INVALID_ARGUMENT_ERROR \u003d \"Sorry! I don\u0027t know what that means.\";"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"     * Parses the input string from the user and returns a Command according to the input."},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"     * @param inputString input string from user"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"     * @return Command object according to user\u0027s input"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"     * @throws DukeException Invalid user input"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"    public static Command parse(String inputString) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"        String[] splitInput \u003d inputString.split(\" \", 2);"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"        if (splitInput.length \u003c 2) {"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"            splitInput \u003d new String[]{splitInput[0], \"\"};"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"        String argument \u003d splitInput[1].trim();"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":"        CommandType commandType;"},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"            commandType \u003d valueOf(splitInput[0].trim()"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"                    .toUpperCase());"},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(INVALID_ARGUMENT_ERROR);"},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":"        switch (commandType) {"},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":"        case BYE:"},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":"            return new ByeCommand();"},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":"        case LIST:"},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"            return new ListCommand(argument);"},{"lineNumber":44,"author":{"gitId":"khiaxeng"},"content":"        case DONE:"},{"lineNumber":45,"author":{"gitId":"khiaxeng"},"content":"            return new DoneCommand(argument);"},{"lineNumber":46,"author":{"gitId":"khiaxeng"},"content":"        case TODO:"},{"lineNumber":47,"author":{"gitId":"khiaxeng"},"content":"            return new TodoCommand(argument);"},{"lineNumber":48,"author":{"gitId":"khiaxeng"},"content":"        case DEADLINE:"},{"lineNumber":49,"author":{"gitId":"khiaxeng"},"content":"            return new DeadlineCommand(argument);"},{"lineNumber":50,"author":{"gitId":"khiaxeng"},"content":"        case EVENT:"},{"lineNumber":51,"author":{"gitId":"khiaxeng"},"content":"            return new EventCommand(argument);"},{"lineNumber":52,"author":{"gitId":"khiaxeng"},"content":"        case DELETE:"},{"lineNumber":53,"author":{"gitId":"khiaxeng"},"content":"            return new DeleteCommand(argument);"},{"lineNumber":54,"author":{"gitId":"khiaxeng"},"content":"        case FIND:"},{"lineNumber":55,"author":{"gitId":"khiaxeng"},"content":"            return new FindCommand(argument);"},{"lineNumber":56,"author":{"gitId":"khiaxeng"},"content":"        case UPDATE:"},{"lineNumber":57,"author":{"gitId":"khiaxeng"},"content":"            return new UpdateCommand(argument);"},{"lineNumber":58,"author":{"gitId":"khiaxeng"},"content":"        default:"},{"lineNumber":59,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(INVALID_ARGUMENT_ERROR);"},{"lineNumber":60,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":63,"author":{"gitId":"khiaxeng"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"khiaxeng"},"content":"     * Parses an input String and returns a LocalDateTime in the \"d/MM/yyyy Hmm\" format."},{"lineNumber":65,"author":{"gitId":"khiaxeng"},"content":"     * @param dateTime date and time String specified by user input"},{"lineNumber":66,"author":{"gitId":"khiaxeng"},"content":"     * @return LocalDateTime object in the \"d/MM/yyyy Hmm\" format."},{"lineNumber":67,"author":{"gitId":"khiaxeng"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"khiaxeng"},"content":"    public static LocalDateTime parseInputToDateTime(String dateTime) {"},{"lineNumber":69,"author":{"gitId":"khiaxeng"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy Hmm\");"},{"lineNumber":70,"author":{"gitId":"khiaxeng"},"content":"        return LocalDateTime.parse(dateTime, format);"},{"lineNumber":71,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":73,"author":{"gitId":"khiaxeng"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"khiaxeng"},"content":"     * Parses an input String according to the format of a saved Task in /data/duke.txt and"},{"lineNumber":75,"author":{"gitId":"khiaxeng"},"content":"     * returns LocalDateTime object in the \"d/MM/yyyy Hmm\" format."},{"lineNumber":76,"author":{"gitId":"khiaxeng"},"content":"     * @param dateTime date and time String in the saved Task format"},{"lineNumber":77,"author":{"gitId":"khiaxeng"},"content":"     * @return LocalDateTime object in the \"d/MM/yyyy Hmm\" format."},{"lineNumber":78,"author":{"gitId":"khiaxeng"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"khiaxeng"},"content":"    public static LocalDateTime parseSaveToDateTime(String dateTime) {"},{"lineNumber":80,"author":{"gitId":"khiaxeng"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");"},{"lineNumber":81,"author":{"gitId":"khiaxeng"},"content":"        return LocalDateTime.parse(dateTime, format);"},{"lineNumber":82,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":84,"author":{"gitId":"khiaxeng"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"khiaxeng"},"content":"     * Parses a LocalDateTime object and returns a String according to the output format."},{"lineNumber":86,"author":{"gitId":"khiaxeng"},"content":"     * @param dateTime LocalDateTime object"},{"lineNumber":87,"author":{"gitId":"khiaxeng"},"content":"     * @return a String object that conforms to the output format"},{"lineNumber":88,"author":{"gitId":"khiaxeng"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"khiaxeng"},"content":"    public static String parseDateTimeToString(LocalDateTime dateTime) {"},{"lineNumber":90,"author":{"gitId":"khiaxeng"},"content":"        DateTimeFormatter pattern \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy hh:mm a\");"},{"lineNumber":91,"author":{"gitId":"khiaxeng"},"content":"        return dateTime.format(pattern);"},{"lineNumber":92,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":93}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import duke.parser.Parser;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import duke.task.*;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"import java.io.File;"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"import java.io.FileWriter;"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    private final File file;"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    public Storage() {"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"        this.file \u003d new File(\"data\", \"duke.txt\");"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"     * Checks if parent and file directory exists. Creates the parent and file directory"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"     * if they do not exist."},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"     * @throws DukeException Error during creation of file"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"    public void createNewFile() throws DukeException {"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"            if (!this.file.getParentFile().exists()) {"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"                this.file.getParentFile().mkdirs();"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"            if (!this.file.exists()) {"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":"                this.file.createNewFile();"},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(\"There is an error creating\""},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"                    + \"file: \" + this.file.getName());"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":"     * Reads saved txt file and adds the tasks to Duke\u0027s TaskList."},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":"     * @param tasks Duke\u0027s TaskList"},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"    public void readFile(TaskList tasks) throws DukeException {"},{"lineNumber":44,"author":{"gitId":"khiaxeng"},"content":"        createNewFile();"},{"lineNumber":45,"author":{"gitId":"khiaxeng"},"content":"        try {"},{"lineNumber":46,"author":{"gitId":"khiaxeng"},"content":"            Scanner sc \u003d new Scanner(file);"},{"lineNumber":47,"author":{"gitId":"khiaxeng"},"content":"            while (sc.hasNextLine()) {"},{"lineNumber":48,"author":{"gitId":"khiaxeng"},"content":"                String[] taskSplit \u003d sc.nextLine().split(\" \\\\| \");"},{"lineNumber":49,"author":{"gitId":"khiaxeng"},"content":"                switch (taskSplit[0].trim()) {"},{"lineNumber":50,"author":{"gitId":"khiaxeng"},"content":"                case \"T\":"},{"lineNumber":51,"author":{"gitId":"khiaxeng"},"content":"                    Todo t \u003d new Todo(taskSplit[2]);"},{"lineNumber":52,"author":{"gitId":"khiaxeng"},"content":"                    addToTasks(tasks, t, taskSplit[1]);"},{"lineNumber":53,"author":{"gitId":"khiaxeng"},"content":"                    break;"},{"lineNumber":54,"author":{"gitId":"khiaxeng"},"content":"                case \"D\":"},{"lineNumber":55,"author":{"gitId":"khiaxeng"},"content":"                    Deadline d \u003d new Deadline(taskSplit[2],"},{"lineNumber":56,"author":{"gitId":"khiaxeng"},"content":"                            Parser.parseSaveToDateTime(taskSplit[3].trim()));"},{"lineNumber":57,"author":{"gitId":"khiaxeng"},"content":"                    addToTasks(tasks, d, taskSplit[1]);"},{"lineNumber":58,"author":{"gitId":"khiaxeng"},"content":"                    break;"},{"lineNumber":59,"author":{"gitId":"khiaxeng"},"content":"                case \"E\":"},{"lineNumber":60,"author":{"gitId":"khiaxeng"},"content":"                    Event e \u003d new Event(taskSplit[2],"},{"lineNumber":61,"author":{"gitId":"khiaxeng"},"content":"                            Parser.parseSaveToDateTime(taskSplit[3].trim()));"},{"lineNumber":62,"author":{"gitId":"khiaxeng"},"content":"                    addToTasks(tasks, e, taskSplit[1]);"},{"lineNumber":63,"author":{"gitId":"khiaxeng"},"content":"                    break;"},{"lineNumber":64,"author":{"gitId":"khiaxeng"},"content":"                default:"},{"lineNumber":65,"author":{"gitId":"khiaxeng"},"content":"                    break;"},{"lineNumber":66,"author":{"gitId":"khiaxeng"},"content":"                }"},{"lineNumber":67,"author":{"gitId":"khiaxeng"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"khiaxeng"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":69,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(\"File not found!\");"},{"lineNumber":70,"author":{"gitId":"khiaxeng"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":71,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(\"Index OOB error!\");"},{"lineNumber":72,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":75,"author":{"gitId":"khiaxeng"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"khiaxeng"},"content":"     * Helper function to add tasks to TaskList."},{"lineNumber":77,"author":{"gitId":"khiaxeng"},"content":"     * @param tasks Duke\u0027s TaskList"},{"lineNumber":78,"author":{"gitId":"khiaxeng"},"content":"     * @param t input Task"},{"lineNumber":79,"author":{"gitId":"khiaxeng"},"content":"     * @param isDone isDone boolean value of task t"},{"lineNumber":80,"author":{"gitId":"khiaxeng"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"khiaxeng"},"content":"    private void addToTasks(TaskList tasks, Task t, String isDone) {"},{"lineNumber":82,"author":{"gitId":"khiaxeng"},"content":"        if (isDone.trim().equals(\"1\")) {"},{"lineNumber":83,"author":{"gitId":"khiaxeng"},"content":"            t.setDone(true);"},{"lineNumber":84,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"khiaxeng"},"content":"        tasks.addTask(t);"},{"lineNumber":86,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":88,"author":{"gitId":"khiaxeng"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"khiaxeng"},"content":"     * Writes the current TaskList to txt file."},{"lineNumber":90,"author":{"gitId":"khiaxeng"},"content":"     * @param tasks Duke\u0027s TaskList"},{"lineNumber":91,"author":{"gitId":"khiaxeng"},"content":"     * @throws DukeException Error when writing to file"},{"lineNumber":92,"author":{"gitId":"khiaxeng"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"khiaxeng"},"content":"    public void write(TaskList tasks) throws DukeException {"},{"lineNumber":94,"author":{"gitId":"khiaxeng"},"content":"        try {"},{"lineNumber":95,"author":{"gitId":"khiaxeng"},"content":"            FileWriter fw \u003d new FileWriter(this.file);"},{"lineNumber":96,"author":{"gitId":"khiaxeng"},"content":"            for (Task t : tasks.getTaskList()) {"},{"lineNumber":97,"author":{"gitId":"khiaxeng"},"content":"                fw.write(t.getSaveFormat() + System.lineSeparator());"},{"lineNumber":98,"author":{"gitId":"khiaxeng"},"content":"            }"},{"lineNumber":99,"author":{"gitId":"khiaxeng"},"content":"            fw.close();"},{"lineNumber":100,"author":{"gitId":"khiaxeng"},"content":"        } catch (IOException e) {"},{"lineNumber":101,"author":{"gitId":"khiaxeng"},"content":"            throw new DukeException(\"There is an error writing to file.\");"},{"lineNumber":102,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":104}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.parser.Parser;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"    protected LocalDateTime by;"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"    public Deadline(String description, LocalDateTime by) {"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"        this.by \u003d by;"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + Parser.parseDateTimeToString(by) + \")\";"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"    public String getSaveFormat() {"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"        return \"D | \" + (isDone() ? \"1\" : \"0\") + \" | \" + description +"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"                \" | \" + Parser.parseDateTimeToString(by);"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":26}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.parser.Parser;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"    protected LocalDateTime time;"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"    public Event(String description, LocalDateTime time) {"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"        this.time \u003d time;"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + Parser.parseDateTimeToString(time) + \")\";"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"    public String getSaveFormat() {"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"        return \"E | \" + (isDone() ? \"1\" : \"0\") + \" | \" + description +"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"                \" | \" + Parser.parseDateTimeToString(time);"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":26}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"    protected boolean done;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"        this.done \u003d false;"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"    public String getStatusIcon() {"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"        return (done ? \"X\" : \" \"); // return X for done or empty string for pending"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    public String getDescription() {"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"        return this.description;"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"    public boolean isDone() {"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"        return this.done;"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"    public void setDone(boolean b) {"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"        this.done \u003d b;"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"    public String getSaveFormat() {"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"        return getStatusIcon() + \" | \" + this.description;"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"    public String toString() {"},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":"    public void setDescription(String description) {"},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":"        this.description \u003d description;"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":40}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"public class TaskList {"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"    private final ArrayList\u003cTask\u003e tasks;"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"    public TaskList() {"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"    public void addTask(Task t) {"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"        tasks.add(t);"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    public void deleteTask(int index) {"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"        tasks.remove(index - 1);"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"    public Task getTask(int index) {"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"        return tasks.get(index - 1);"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"    public int getTasksSize() {"},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"        return tasks.size();"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":"        return tasks;"},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":"     * Returns a TaskList containing tasks that have the keyword String in their descriptions."},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"     * @param keyword Keyword String to find relevant tasks"},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"     * @return TaskList containing tasks that have keyword String in their descriptions"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":"    public TaskList find(String keyword) {"},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":"        TaskList results \u003d new TaskList();"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":"        keyword \u003d keyword.toLowerCase();"},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":"        for (Task t : tasks) {"},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":"            String description \u003d t.getDescription().toLowerCase();"},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":"            if (description.contains(keyword)) {"},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"                results.addTask(t);"},{"lineNumber":44,"author":{"gitId":"khiaxeng"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"khiaxeng"},"content":"        return results;"},{"lineNumber":47,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":49,"author":{"gitId":"khiaxeng"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"khiaxeng"},"content":"     * Changes the description of a Task at position index in the TaskList"},{"lineNumber":51,"author":{"gitId":"khiaxeng"},"content":"     * @param index Position of Task in TaskList"},{"lineNumber":52,"author":{"gitId":"khiaxeng"},"content":"     * @param newDescription New description of Task"},{"lineNumber":53,"author":{"gitId":"khiaxeng"},"content":"     * @return Returns the updated Task"},{"lineNumber":54,"author":{"gitId":"khiaxeng"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"khiaxeng"},"content":"    public Task editTask(int index, String newDescription) {"},{"lineNumber":56,"author":{"gitId":"khiaxeng"},"content":"        Task targetTask \u003d getTask(index);"},{"lineNumber":57,"author":{"gitId":"khiaxeng"},"content":"        targetTask.setDescription(newDescription);"},{"lineNumber":58,"author":{"gitId":"khiaxeng"},"content":"        return targetTask;"},{"lineNumber":59,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":60}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"    public Todo(String description) {"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"    public String getSaveFormat() {"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"        return \"T | \" + (isDone() ? \"1\" : \"0\") + \" | \" + description;"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":17}},{"path":"src/main/java/duke/ui/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"public enum CommandType {"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"    BYE,"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"    LIST,"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"    DONE,"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"    TODO,"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"    DEADLINE,"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"    EVENT,"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"    DELETE,"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"    FIND,"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"    UPDATE"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":13}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"import duke.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"    private static final String ADD_TASK_ACK \u003d \"Got it. I\u0027ve added this task:\";"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"    public String formatString(String... msg) {"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"        String outputString \u003d \"\";"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"        for (String m : msg) {"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"            outputString +\u003d m + \"\\n\";"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"        return outputString;"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"    public String getGreeetingMsg() {"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"        return formatString(\"Hello from Hayate! How may I help you?\");"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"    public String getError(String msg) {"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"        return formatString(msg);"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":25,"author":{"gitId":"khiaxeng"},"content":"    public String getAddTaskAck(Task t, TaskList tasks) {"},{"lineNumber":26,"author":{"gitId":"khiaxeng"},"content":"        String taskCountMsg \u003d \"You now have \" + tasks.getTasksSize() + \" task(s) in the list.\";"},{"lineNumber":27,"author":{"gitId":"khiaxeng"},"content":"        return formatString(ADD_TASK_ACK, \" \" + t.toString(), taskCountMsg);"},{"lineNumber":28,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":30,"author":{"gitId":"khiaxeng"},"content":"    public String getExitMsg() {"},{"lineNumber":31,"author":{"gitId":"khiaxeng"},"content":"        return formatString(\"Bye. Hope to see you again soon!\");"},{"lineNumber":32,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":34,"author":{"gitId":"khiaxeng"},"content":"    public String printTaskList(TaskList tasks) {"},{"lineNumber":35,"author":{"gitId":"khiaxeng"},"content":"        String[] msg \u003d new String[tasks.getTasksSize()];"},{"lineNumber":36,"author":{"gitId":"khiaxeng"},"content":"        for (int i \u003d 0; i \u003c tasks.getTasksSize(); i++) {"},{"lineNumber":37,"author":{"gitId":"khiaxeng"},"content":"            msg[i] \u003d (i + 1) + \". \" + tasks.getTask(i + 1);"},{"lineNumber":38,"author":{"gitId":"khiaxeng"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"khiaxeng"},"content":"        return formatString(msg);"},{"lineNumber":40,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":42,"author":{"gitId":"khiaxeng"},"content":"    public String getDoneMsg(Task task) {"},{"lineNumber":43,"author":{"gitId":"khiaxeng"},"content":"        String[] msg \u003d new String[2];"},{"lineNumber":44,"author":{"gitId":"khiaxeng"},"content":"        msg[0] \u003d \"Nice! I\u0027ve marked this task as done.\";"},{"lineNumber":45,"author":{"gitId":"khiaxeng"},"content":"        msg[1] \u003d task.toString();"},{"lineNumber":46,"author":{"gitId":"khiaxeng"},"content":"        return formatString(msg);"},{"lineNumber":47,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":49,"author":{"gitId":"khiaxeng"},"content":"    public String getDeleteMsg(Task task, TaskList tasks) {"},{"lineNumber":50,"author":{"gitId":"khiaxeng"},"content":"        String[] msg \u003d new String[3];"},{"lineNumber":51,"author":{"gitId":"khiaxeng"},"content":"        msg[0] \u003d \"Noted. I\u0027ve removed this task.\";"},{"lineNumber":52,"author":{"gitId":"khiaxeng"},"content":"        msg[1] \u003d \" \" + task.toString();"},{"lineNumber":53,"author":{"gitId":"khiaxeng"},"content":"        msg[2] \u003d \"Now you have \" + tasks.getTasksSize() +"},{"lineNumber":54,"author":{"gitId":"khiaxeng"},"content":"                \" task(s) in the list.\";"},{"lineNumber":55,"author":{"gitId":"khiaxeng"},"content":"        return formatString(msg);"},{"lineNumber":56,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":58,"author":{"gitId":"khiaxeng"},"content":"    public void printError(String msg) {"},{"lineNumber":59,"author":{"gitId":"khiaxeng"},"content":"        formatString(msg);"},{"lineNumber":60,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":62,"author":{"gitId":"khiaxeng"},"content":"    public String getUpdatedTaskMsg(Task task, TaskList tasks) {"},{"lineNumber":63,"author":{"gitId":"khiaxeng"},"content":"        String[] msg \u003d new String[2];"},{"lineNumber":64,"author":{"gitId":"khiaxeng"},"content":"        msg[0] \u003d \"Noted. I\u0027ve updated this task.\";"},{"lineNumber":65,"author":{"gitId":"khiaxeng"},"content":"        msg[1] \u003d \" \" + task.toString();"},{"lineNumber":66,"author":{"gitId":"khiaxeng"},"content":"        return formatString(msg);"},{"lineNumber":67,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":68}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"        \u003cLabel fx:id\u003d\"dialog\" depthTest\u003d\"DISABLE\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: #9BC3E1; -fx-background-insets: -8; -fx-background-radius: 10;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"            \u003cHBox.margin\u003e"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"                \u003cInsets left\u003d\"18.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"            \u003c/HBox.margin\u003e"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"         \u003cfont\u003e"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"            \u003cFont name\u003d\"Franklin Gothic Medium\" size\u003d\"12.0\" /\u003e"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"         \u003c/font\u003e"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"        \u003c/Label\u003e"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"75.0\" fitWidth\u003d\"65.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"    \u003c/children\u003e"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"    \u003cpadding\u003e"},{"lineNumber":22,"author":{"gitId":"khiaxeng"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":23,"author":{"gitId":"khiaxeng"},"content":"    \u003c/padding\u003e"},{"lineNumber":24,"author":{"gitId":"khiaxeng"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"khiaxeng":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"khiaxeng":19}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":5,"author":{"gitId":"khiaxeng"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":6,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":7,"author":{"gitId":"khiaxeng"},"content":"public class TaskTest {"},{"lineNumber":8,"author":{"gitId":"khiaxeng"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"khiaxeng"},"content":"    void setDone_testTask_false() {"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"        Task t \u003d new Task(\"test\");"},{"lineNumber":11,"author":{"gitId":"khiaxeng"},"content":"        t.setDone(false);"},{"lineNumber":12,"author":{"gitId":"khiaxeng"},"content":"        assertFalse(t.isDone());"},{"lineNumber":13,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"khiaxeng"},"content":""},{"lineNumber":15,"author":{"gitId":"khiaxeng"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"khiaxeng"},"content":"    void setDone_testTask_true() {"},{"lineNumber":17,"author":{"gitId":"khiaxeng"},"content":"        Task t \u003d new Task(\"test\");"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"        t.setDone(true);"},{"lineNumber":19,"author":{"gitId":"khiaxeng"},"content":"        assertTrue(t.isDone());"},{"lineNumber":20,"author":{"gitId":"khiaxeng"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"khiaxeng"},"content":"}"}],"authorContributionMap":{"khiaxeng":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"khiaxeng"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"khiaxeng"},"content":"todo asdqwe"},{"lineNumber":3,"author":{"gitId":"khiaxeng"},"content":"list"}],"authorContributionMap":{"khiaxeng":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"khiaxeng"},"content":"javac  -cp ..\\src\\main\\java\\Main.java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"khiaxeng"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"khiaxeng":2,"-":19}}]
