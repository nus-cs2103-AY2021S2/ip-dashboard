[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"    "},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"RuiXiong2211"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":16,"-":45}},{"path":"data/saveFile.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"T0  clean house"}],"authorContributionMap":{"RuiXiong2211":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"# Diamant Chatbox User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"# Introduction"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"Diamant is a custom chatbox made for the CS2103T module individual project. "},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"It is inspired by the diamond hand memes during the production of the application (January 2021)."},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"Jozu (the bot) will help you (diamond hand retard) keep track of tasks that you have to do."},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"Tasks that are complete have a `✓`, while tasks that are incomplete have a `✘`."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"# Features "},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"## GUI"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"A graphical user interface to provide stronger interaction between the user and the chatbox."},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"## Add different types of task"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"You can add 3 different types of tasks for Jozu to consolidate."},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"1. ToDo "},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"2. Event"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"3. Deadline"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"## Delete tasks"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"If you do not need a specific task anymore, Jozu will help you delete it."},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"## Clear tasks"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"If you give up and want out, Jozu can clear all your outstanding tasks and give you a need fresh start."},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"## Find tasks"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"By entering a keyword, you can get a list of tasks that are contain the keyword."},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"## List tasks"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"Lists all the tasks in the sequential order you have keyed in by."},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"## Done tasks"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"Marks the task stored by Jozu as done, as depicted by a `✓`"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"## Bye"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"Closes the program and saves all your tasks that you have input."},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"## In-depth commands and expected output"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"### Add ToDo task - `todo` "},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"Format: `todo DESCRIPTION_OF_TASK`"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"Key in the command `todo` and the description of the task to add a ToDo task. "},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"Example of usage: "},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"`todo HODL GME`"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":47,"author":{"gitId":"RuiXiong2211"},"content":"Expected outcome:"},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"```"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":"COMMAND RECEIVED! "},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"ALRIGHT. I HAVE ALREADY ADDED THE TASK!!! "},{"lineNumber":51,"author":{"gitId":"RuiXiong2211"},"content":"[T][✘] HODL GME "},{"lineNumber":52,"author":{"gitId":"RuiXiong2211"},"content":"Now you have 1 tasks in the list."},{"lineNumber":53,"author":{"gitId":"RuiXiong2211"},"content":"```"},{"lineNumber":54,"author":{"gitId":"RuiXiong2211"},"content":"### Add Event task - `event` "},{"lineNumber":55,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":56,"author":{"gitId":"RuiXiong2211"},"content":"Format: `event DESCRIPTION_OF_TASK /at yyyy-mm-dd`"},{"lineNumber":57,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":58,"author":{"gitId":"RuiXiong2211"},"content":"Key in the command `event`, the description of the event and the date of the event to add an event task. "},{"lineNumber":59,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":60,"author":{"gitId":"RuiXiong2211"},"content":"Example of usage: "},{"lineNumber":61,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":62,"author":{"gitId":"RuiXiong2211"},"content":"`event project meeting /at 2019-10-19`"},{"lineNumber":63,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":64,"author":{"gitId":"RuiXiong2211"},"content":"Expected outcome:"},{"lineNumber":65,"author":{"gitId":"RuiXiong2211"},"content":"```"},{"lineNumber":66,"author":{"gitId":"RuiXiong2211"},"content":"COMMAND RECEIVED! "},{"lineNumber":67,"author":{"gitId":"RuiXiong2211"},"content":"ALRIGHT. I HAVE ALREADY ADDED THE TASK!!! "},{"lineNumber":68,"author":{"gitId":"RuiXiong2211"},"content":"[E][✘] project meeting (at:Oct 19 2019)"},{"lineNumber":69,"author":{"gitId":"RuiXiong2211"},"content":"Now you have 2 tasks in the list."},{"lineNumber":70,"author":{"gitId":"RuiXiong2211"},"content":"```"},{"lineNumber":71,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":72,"author":{"gitId":"RuiXiong2211"},"content":"### Add Deadline task - `deadline` "},{"lineNumber":73,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":74,"author":{"gitId":"RuiXiong2211"},"content":"Format: `deadline DESCRIPTION_OF_TASK /by yyyy-mm-dd`"},{"lineNumber":75,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":76,"author":{"gitId":"RuiXiong2211"},"content":"Key in the command `deadline`, the description of the deadline and the date of the deadline to add a deadline task. "},{"lineNumber":77,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":78,"author":{"gitId":"RuiXiong2211"},"content":"Example of usage: "},{"lineNumber":79,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":80,"author":{"gitId":"RuiXiong2211"},"content":"`deadline return book /by 2019-10-15`"},{"lineNumber":81,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":82,"author":{"gitId":"RuiXiong2211"},"content":"Expected outcome:"},{"lineNumber":83,"author":{"gitId":"RuiXiong2211"},"content":"```"},{"lineNumber":84,"author":{"gitId":"RuiXiong2211"},"content":"COMMAND RECEIVED! "},{"lineNumber":85,"author":{"gitId":"RuiXiong2211"},"content":"ALRIGHT. I HAVE ALREADY ADDED THE TASK!!! "},{"lineNumber":86,"author":{"gitId":"RuiXiong2211"},"content":"[D][✘] return book (by:Oct 15 2019)"},{"lineNumber":87,"author":{"gitId":"RuiXiong2211"},"content":"Now you have 3 tasks in the list."},{"lineNumber":88,"author":{"gitId":"RuiXiong2211"},"content":"```"},{"lineNumber":89,"author":{"gitId":"RuiXiong2211"},"content":"### Delete tasks - `delete` "},{"lineNumber":90,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":91,"author":{"gitId":"RuiXiong2211"},"content":"Format: `delete TASK_NUMBER_TO_DELETE`"},{"lineNumber":92,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":93,"author":{"gitId":"RuiXiong2211"},"content":"Key in the command `delete` and the number of the task from the list ordering to delete it."},{"lineNumber":94,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":95,"author":{"gitId":"RuiXiong2211"},"content":"Example of usage: "},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"RuiXiong2211"},"content":"`delete 3`"},{"lineNumber":98,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":99,"author":{"gitId":"RuiXiong2211"},"content":"Expected outcome:"},{"lineNumber":100,"author":{"gitId":"RuiXiong2211"},"content":"```"},{"lineNumber":101,"author":{"gitId":"RuiXiong2211"},"content":"COMMAND RECEIVED! "},{"lineNumber":102,"author":{"gitId":"RuiXiong2211"},"content":"OK. TASK REMOVED."},{"lineNumber":103,"author":{"gitId":"RuiXiong2211"},"content":"[D][✘] return book (by:Oct 15 2019)"},{"lineNumber":104,"author":{"gitId":"RuiXiong2211"},"content":"Now you have 2 tasks in the list."},{"lineNumber":105,"author":{"gitId":"RuiXiong2211"},"content":"```"},{"lineNumber":106,"author":{"gitId":"RuiXiong2211"},"content":"### Delete all tasks - `clear\u0027"},{"lineNumber":107,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":108,"author":{"gitId":"RuiXiong2211"},"content":"Format: `clear`"},{"lineNumber":109,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":110,"author":{"gitId":"RuiXiong2211"},"content":"Key in the command `clear` to delete all tasks currently stored by Jozu."},{"lineNumber":111,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":112,"author":{"gitId":"RuiXiong2211"},"content":"Example of usage: "},{"lineNumber":113,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":114,"author":{"gitId":"RuiXiong2211"},"content":"`clear`"},{"lineNumber":115,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":116,"author":{"gitId":"RuiXiong2211"},"content":"Expected outcome:"},{"lineNumber":117,"author":{"gitId":"RuiXiong2211"},"content":"```"},{"lineNumber":118,"author":{"gitId":"RuiXiong2211"},"content":"COMMAND RECEIVED! "},{"lineNumber":119,"author":{"gitId":"RuiXiong2211"},"content":"List has been cleared."},{"lineNumber":120,"author":{"gitId":"RuiXiong2211"},"content":"```"},{"lineNumber":121,"author":{"gitId":"RuiXiong2211"},"content":"### Find tasks - `find` "},{"lineNumber":122,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":123,"author":{"gitId":"RuiXiong2211"},"content":"Format: `find DESCRIPTION_OF_LIST_ITEM`"},{"lineNumber":124,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":125,"author":{"gitId":"RuiXiong2211"},"content":"Key in the command `find` and a description of the task you are looking for to find all tasks related to the description."},{"lineNumber":126,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":127,"author":{"gitId":"RuiXiong2211"},"content":"Example of usage: "},{"lineNumber":128,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":129,"author":{"gitId":"RuiXiong2211"},"content":"`find GME`"},{"lineNumber":130,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":131,"author":{"gitId":"RuiXiong2211"},"content":"Expected outcome:"},{"lineNumber":132,"author":{"gitId":"RuiXiong2211"},"content":"```"},{"lineNumber":133,"author":{"gitId":"RuiXiong2211"},"content":"COMMAND RECEIVED! "},{"lineNumber":134,"author":{"gitId":"RuiXiong2211"},"content":"-----------------"},{"lineNumber":135,"author":{"gitId":"RuiXiong2211"},"content":"Here are the matching tasks in your list."},{"lineNumber":136,"author":{"gitId":"RuiXiong2211"},"content":"1. [T][✘] HODL GME "},{"lineNumber":137,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":138,"author":{"gitId":"RuiXiong2211"},"content":"```"},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"RuiXiong2211"},"content":"### List tasks - `list` "},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"RuiXiong2211"},"content":"Format: `delete TASK_NUMBER_TO_DELETE`"},{"lineNumber":144,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":145,"author":{"gitId":"RuiXiong2211"},"content":"Key in the command `list` to display all tasks currently stored by Jozu."},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"RuiXiong2211"},"content":"`list`"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":152,"author":{"gitId":"RuiXiong2211"},"content":"```"},{"lineNumber":153,"author":{"gitId":"RuiXiong2211"},"content":"COMMAND RECEIVED! "},{"lineNumber":154,"author":{"gitId":"RuiXiong2211"},"content":"Here are the tasks."},{"lineNumber":155,"author":{"gitId":"RuiXiong2211"},"content":"1. [T][✘] HODL GME "},{"lineNumber":156,"author":{"gitId":"RuiXiong2211"},"content":"2. [E][✘] project meeting (at:Oct 19 2019)"},{"lineNumber":157,"author":{"gitId":"RuiXiong2211"},"content":"```"},{"lineNumber":158,"author":{"gitId":"RuiXiong2211"},"content":"### Done tasks - `done` "},{"lineNumber":159,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":160,"author":{"gitId":"RuiXiong2211"},"content":"Format: `done TASK_NUMBER_TO_MARK_AS_DONE`"},{"lineNumber":161,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":162,"author":{"gitId":"RuiXiong2211"},"content":"Key in the command `done` and a number from the task list to mark the task as complete."},{"lineNumber":163,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":164,"author":{"gitId":"RuiXiong2211"},"content":"Example of usage: "},{"lineNumber":165,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":166,"author":{"gitId":"RuiXiong2211"},"content":"`done 1`"},{"lineNumber":167,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":168,"author":{"gitId":"RuiXiong2211"},"content":"Expected outcome:"},{"lineNumber":169,"author":{"gitId":"RuiXiong2211"},"content":"```"},{"lineNumber":170,"author":{"gitId":"RuiXiong2211"},"content":"COMMAND RECEIVED! "},{"lineNumber":171,"author":{"gitId":"RuiXiong2211"},"content":"ALRIGHT. THIS TASKS HAS BEEN MARKED AS COMPLETE."},{"lineNumber":172,"author":{"gitId":"RuiXiong2211"},"content":"1. [T][✓] HODL GME "},{"lineNumber":173,"author":{"gitId":"RuiXiong2211"},"content":"```"},{"lineNumber":174,"author":{"gitId":"RuiXiong2211"},"content":"### Exiting the program and save - `bye` "},{"lineNumber":175,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":176,"author":{"gitId":"RuiXiong2211"},"content":"Format: `bye`"},{"lineNumber":177,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":178,"author":{"gitId":"RuiXiong2211"},"content":"Key in the command `bye` to exit and save all changes."},{"lineNumber":179,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":180,"author":{"gitId":"RuiXiong2211"},"content":"Example of usage: "},{"lineNumber":181,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":182,"author":{"gitId":"RuiXiong2211"},"content":"`bye`"},{"lineNumber":183,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":184,"author":{"gitId":"RuiXiong2211"},"content":"Expected outcome:"},{"lineNumber":185,"author":{"gitId":"RuiXiong2211"},"content":"```"},{"lineNumber":186,"author":{"gitId":"RuiXiong2211"},"content":"Program exits."},{"lineNumber":187,"author":{"gitId":"RuiXiong2211"},"content":"```"},{"lineNumber":188,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":189,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":190,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"RuiXiong2211":175,"-":15}},{"path":"src/main/java/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":" * class that handles the command to add ToDo, Events or Deadlines."},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":" */"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"public class AddCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"    private TaskList tasks;"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"    private Task task;"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"    public AddCommand(TaskList tasks, Task task) {"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"        this.task \u003d task;"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"    public Result execute() {"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"        String output \u003d \"\";"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"        boolean hasDuplicate \u003d tasks.checkForDuplicate(this.tasks.getDuplicateChecker(), task);"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"        if (!hasDuplicate) {"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"            tasks.getStorage().add(task);"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"            output +\u003d \"ALRIGHT. I HAVE ALREADY ADDED THE TASK!!!\\n\""},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"                    + task.toString()"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"                    + \"\\n\""},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"                    + \"Now you have \" + tasks.getStorage().size()"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"                    + \" tasks in the list.\";"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"        } else {"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"            output +\u003d \"Item is a duplicate and has already been added.\\n\""},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"                    + \"Please check again.\";"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"        assert output !\u003d \"\" : \"output should not be empty.\";"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"        Result result \u003d new Result(output);"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"        return result;"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":33}},{"path":"src/main/java/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":" * Class that handles the command to exit the programme."},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":" */"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"public class ByeCommand extends Command{"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"    private Scanner scanner;"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"    public ByeCommand(Scanner scanner) {"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"        this.scanner \u003d scanner;"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"    public Result execute() {"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"        this.scanner.close();"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"        Result result \u003d new Result(\"Bye. See you again!\");"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"        return result;"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":18}},{"path":"src/main/java/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.Set;"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":" * Class that handles the Clear command, emptying the"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":" * storage list of things to do."},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":" */"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"public class ClearCommand {"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"    private TaskList tasks;"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"    public ClearCommand(TaskList tasks) {"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"    public Result execute() {"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"        ArrayList\u003cTask\u003e storage \u003d tasks.getStorage();"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"        Set\u003cTask\u003e setOfTasks \u003d tasks.getDuplicateChecker();"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"        storage.clear();"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"        setOfTasks.clear();"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"        Result result \u003d new Result(\"List has been cleared.\");"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"        return result;"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":24}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":" * base abstract class that all commands inherit from."},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":" */"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"public abstract class Command {"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"    public abstract Result execute() throws DukeException, InterruptedException;"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":7}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"public class Deadline extends Task {"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"    private LocalDate by;"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"    private char type;"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"    public Deadline(String task, String by) {"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"        super(task);"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"        by \u003d by.replaceFirst(\" \", \"\");"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"        this.by \u003d LocalDate.parse(by);"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"        this.type \u003d \u0027D\u0027;"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    public Deadline(String task, boolean isDone, String by) {"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"        super(task, isDone);"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"        this.type \u003d \u0027D\u0027;"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"        by \u003d by.replaceFirst(\" \", \"\");"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"        this.by \u003d LocalDate.parse(by);"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"        return \"[\" + type + \"]\"  + super.toString()"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"                + \"(by:\" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"    public String getData() {"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"        return \"[\" + type + \"]\"  + super.toString()"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"                + \" (by:\" + by + \")\";"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":35}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"    private TaskList tasks;"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"    private int value;"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"    public DeleteCommand(TaskList tasks, int value) {"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"        this.value \u003d value;"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"    public Result execute() throws DukeException {"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"        String output \u003d \"\";"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"        int sizeAfterDelete \u003d tasks.getStorage().size() - 1;"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"        if (value \u003c\u003d 0 || value \u003e tasks.getStorage().size()) {"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"            throw new DukeException(\"No such list item.\");"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"        output +\u003d \"OK. TASK REMOVED.\\n\""},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"                + tasks.getStorage().get(value - 1)"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"                + \"\\n\""},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"                + \"Now you have \""},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"                + sizeAfterDelete"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"                + \" tasks in the list.\";"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"        tasks.getDuplicateChecker().remove(tasks.getStorage().get(value - 1));"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"        tasks.getStorage().remove(value - 1);"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"        assert sizeAfterDelete \u003e\u003d 0 : \"size cannot be negative.\";"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"        assert output !\u003d \"\" : \"output should not be empty.\";"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"        Result result \u003d new Result(output);"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"        return result;"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":32}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"import java.awt.*;"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.Collections;"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"import javafx.fxml.FXML;"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"import javafx.geometry.Pos;"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"import javafx.scene.Node;"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"import javafx.scene.control.Label;"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"import javafx.scene.image.Image;"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":" * An example of a custom control using FXML."},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":" * containing text from the speaker."},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":" */"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"public class DialogBox extends HBox {"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"    private Label dialog;"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"    private ImageView displayPicture;"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"            fxmlLoader.load();"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"            e.printStackTrace();"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"    private void flip() {"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"        Collections.reverse(tmp);"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":47,"author":{"gitId":"RuiXiong2211"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":51,"author":{"gitId":"RuiXiong2211"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":52,"author":{"gitId":"RuiXiong2211"},"content":"        db.setDesign();"},{"lineNumber":53,"author":{"gitId":"RuiXiong2211"},"content":"        return db;"},{"lineNumber":54,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":56,"author":{"gitId":"RuiXiong2211"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"RuiXiong2211"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"RuiXiong2211"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":60,"author":{"gitId":"RuiXiong2211"},"content":"        // if invalid command, set background to pink."},{"lineNumber":61,"author":{"gitId":"RuiXiong2211"},"content":"        if (Parser.warning) {"},{"lineNumber":62,"author":{"gitId":"RuiXiong2211"},"content":"            db.setWarning();"},{"lineNumber":63,"author":{"gitId":"RuiXiong2211"},"content":"        } else {"},{"lineNumber":64,"author":{"gitId":"RuiXiong2211"},"content":"            db.setReplyDesign();"},{"lineNumber":65,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":67,"author":{"gitId":"RuiXiong2211"},"content":"        return db;"},{"lineNumber":68,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":70,"author":{"gitId":"RuiXiong2211"},"content":"    private void setWelcomeSettings() {"},{"lineNumber":71,"author":{"gitId":"RuiXiong2211"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":72,"author":{"gitId":"RuiXiong2211"},"content":"        Collections.reverse(tmp);"},{"lineNumber":73,"author":{"gitId":"RuiXiong2211"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":74,"author":{"gitId":"RuiXiong2211"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":75,"author":{"gitId":"RuiXiong2211"},"content":"        this.setStyle(\"-fx-background-color: #EEC5A9;\""},{"lineNumber":76,"author":{"gitId":"RuiXiong2211"},"content":"                + \"-fx-background-radius: 10.0\");"},{"lineNumber":77,"author":{"gitId":"RuiXiong2211"},"content":"        dialog.setStyle(\"-fx-font-size: 16;\""},{"lineNumber":78,"author":{"gitId":"RuiXiong2211"},"content":"                + \"-fx-text-fill: white;\""},{"lineNumber":79,"author":{"gitId":"RuiXiong2211"},"content":"                + \"-fx-alignment: baseline-right;\");"},{"lineNumber":80,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":82,"author":{"gitId":"RuiXiong2211"},"content":"    public static DialogBox welcomeMessage(String text, Image img) {"},{"lineNumber":83,"author":{"gitId":"RuiXiong2211"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":84,"author":{"gitId":"RuiXiong2211"},"content":"        db.setWelcomeSettings();"},{"lineNumber":85,"author":{"gitId":"RuiXiong2211"},"content":"        return db;"},{"lineNumber":86,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":88,"author":{"gitId":"RuiXiong2211"},"content":"    private void setDesign() {"},{"lineNumber":89,"author":{"gitId":"RuiXiong2211"},"content":"        this.dialog.setStyle(\"-fx-background-color: #121212;\""},{"lineNumber":90,"author":{"gitId":"RuiXiong2211"},"content":"                + \"-fx-text-fill: white;\""},{"lineNumber":91,"author":{"gitId":"RuiXiong2211"},"content":"                + \"-fx-min-width: 150px;\""},{"lineNumber":92,"author":{"gitId":"RuiXiong2211"},"content":"                + \"-fx-font-size: 14;\""},{"lineNumber":93,"author":{"gitId":"RuiXiong2211"},"content":"                + \"-fx-alignment: baseline-center;\""},{"lineNumber":94,"author":{"gitId":"RuiXiong2211"},"content":"                + \"-fx-border-width: 10;\""},{"lineNumber":95,"author":{"gitId":"RuiXiong2211"},"content":"                + \"-fx-background-radius: 15.0;\""},{"lineNumber":96,"author":{"gitId":"RuiXiong2211"},"content":"                + \"-fx-padding: 10.0\");"},{"lineNumber":97,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":99,"author":{"gitId":"RuiXiong2211"},"content":"    private void setWarning() {"},{"lineNumber":100,"author":{"gitId":"RuiXiong2211"},"content":"        this.dialog.setStyle(\"-fx-background-color: hotpink;\""},{"lineNumber":101,"author":{"gitId":"RuiXiong2211"},"content":"                + \"-fx-text-fill: white;\""},{"lineNumber":102,"author":{"gitId":"RuiXiong2211"},"content":"                + \"-fx-min-width: 150px;\""},{"lineNumber":103,"author":{"gitId":"RuiXiong2211"},"content":"                + \"-fx-font-size: 14;\""},{"lineNumber":104,"author":{"gitId":"RuiXiong2211"},"content":"                + \"-fx-alignment: baseline-center;\""},{"lineNumber":105,"author":{"gitId":"RuiXiong2211"},"content":"                + \"-fx-border-width: 10;\""},{"lineNumber":106,"author":{"gitId":"RuiXiong2211"},"content":"                + \"-fx-background-radius: 15.0;\""},{"lineNumber":107,"author":{"gitId":"RuiXiong2211"},"content":"                + \"-fx-padding: 10.0\");"},{"lineNumber":108,"author":{"gitId":"RuiXiong2211"},"content":"        Parser.warning \u003d false;"},{"lineNumber":109,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":111,"author":{"gitId":"RuiXiong2211"},"content":"    private void setReplyDesign() {"},{"lineNumber":112,"author":{"gitId":"RuiXiong2211"},"content":"        this.dialog.setStyle(\"-fx-background-color: #696969;\""},{"lineNumber":113,"author":{"gitId":"RuiXiong2211"},"content":"                + \"-fx-text-fill: white;\""},{"lineNumber":114,"author":{"gitId":"RuiXiong2211"},"content":"                + \"-fx-min-width: 150px;\""},{"lineNumber":115,"author":{"gitId":"RuiXiong2211"},"content":"                + \"-fx-font-size: 14;\""},{"lineNumber":116,"author":{"gitId":"RuiXiong2211"},"content":"                + \"-fx-alignment: baseline-center;\""},{"lineNumber":117,"author":{"gitId":"RuiXiong2211"},"content":"                + \"-fx-border-width: 10;\""},{"lineNumber":118,"author":{"gitId":"RuiXiong2211"},"content":"                + \"-fx-background-radius: 15.0;\""},{"lineNumber":119,"author":{"gitId":"RuiXiong2211"},"content":"                + \"-fx-padding: 10.0\");"},{"lineNumber":120,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":121}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":" * Class that handles the Done command. Marking a task as complete in the"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":" * current list of existing entries."},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":" */"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"public class DoneCommand extends Command{"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"    private TaskList tasks;"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"    private int value;"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"    public DoneCommand(TaskList tasks, int value) {"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"        this.value \u003d value;"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"    public Result execute() throws DukeException {"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"        String output \u003d \"\";"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"        if (value \u003c\u003d 0 || value \u003e tasks.getStorage().size()) {"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"            throw new DukeException(\"No such list item.\");"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"        tasks.getStorage().get(value - 1).setDone();"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"        output +\u003d \"ALRIGHT. THIS TASK HAS BEEN MARKED AS COMPLETE\\n\""},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"                + tasks.getStorage().get(value - 1)"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"                + \"\\n\";"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"        assert output !\u003d \"\" : \"output should not be empty.\";"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"        Result result \u003d new Result(output);"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"        return result;"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":28}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"    public DukeException(String message) {"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"        super(message);"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"public class Event extends Task {"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"    private char type;"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"    private LocalDate at;"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"    public Event(String task, String at) {"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"        super(task);"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"        at \u003d at.replaceFirst(\" \", \"\");"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"        this.at \u003d LocalDate.parse(at);"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"        this.type \u003d \u0027E\u0027;"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    public Event(String task, boolean isDone, String at) {"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"        super(task, isDone);"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"        this.type \u003d \u0027E\u0027;"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"        at \u003d at.replaceFirst(\" \", \"\");"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"        this.at \u003d LocalDate.parse(at);"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"        return \"[\" + type + \"]\" + super.toString()"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"                + \"(at:\" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"    public String getData() {"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"        return \"[\" + type + \"]\" + super.toString()"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"                + \" (at:\" + at + \")\";"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":35}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"import java.lang.reflect.Array;"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":" * class that handles the command \"find\""},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":" * that searches the storage list and stores"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":" * them in the find list."},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":" */"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"public class FindCommand extends Command{"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"    private TaskList tasks;"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"    private String keyword;"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"    public FindCommand(TaskList tasks, String keyword) {"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"     * Method that searches through the list of tasks and returns"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"     * the result of tasks that have similar descriptions."},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"    public Result execute() {"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"        String output \u003d \"\";"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"        boolean isEmpty \u003d true;"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"        output +\u003d \"--------------------------\" + \"\\n\";"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"        output +\u003d \"Here are the matching tasks in your list:\" + \"\\n\";"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"        ArrayList\u003cTask\u003e storage \u003d tasks.getStorage();"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"        for (int i \u003d 0; i \u003c storage.size(); i++) {"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"            Task task \u003d storage.get(i);"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"            String description \u003d task.getDescription();"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"            assert description !\u003d null : \"description should not be empty\";"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"            if (description.contains(keyword)) {"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"                output +\u003d (i + 1) + \". \" + task + \"\\n\";"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"                isEmpty \u003d false;"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"        if (isEmpty) {"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"            output +\u003d \"No similar descriptions found. \\n\";"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"RuiXiong2211"},"content":"        assert output !\u003d \"\" : \"output should not be empty.\";"},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"        Result result \u003d new Result(output);"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":"        return result;"},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":51}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"public class Launcher {"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":7}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.Set;"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":" * Class that handles the List command, returning the result of all existing entries."},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":" */"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"public class ListCommand {"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"    private TaskList tasks;"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"    public ListCommand(TaskList tasks) {"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"    public Result execute() {"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"        String output \u003d \"\";"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"        ArrayList\u003cTask\u003e storage \u003d tasks.getStorage();"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"        if (storage.isEmpty()) {"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"            output +\u003d \"Empty List\\n\";"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"        } else {"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"            output +\u003d \"Here are the tasks.\\n\";"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"            for (int j \u003d 0; j \u003c storage.size(); j++) {"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"                output +\u003d (j + 1) + \". \""},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"                        + storage.get(j)"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"                        + \"\\n\";"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"        assert output !\u003d \"\" : \"output should not be empty.\";"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"        Result result \u003d new Result(output);"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"        return result;"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":33}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":" */"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"    private Skeleton duke \u003d new Skeleton();"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    public void start(Stage stage) {"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setSkeleton(duke);"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"            stage.show();"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"            duke.run();"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"        } catch (IOException e) {"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"            e.printStackTrace();"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":31}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"import javafx.scene.control.Button;"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import javafx.scene.control.Label;"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"import javafx.scene.image.Image;"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":" */"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"    @FXML"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    private VBox dialogContainer;"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"    private TextField userInput;"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"    private Button sendButton;"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"    private Skeleton skeleton;"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DiamondHands.png\"));"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Jozu.png\"));"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"    private Image welcomeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/CrazyDiamond.png\"));"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"    public void initialize() {"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"        // welcome message"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"        DialogBox welcomeMessage \u003d DialogBox.welcomeMessage(\"Welcome. How can I help you?\", welcomeImage);"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"        dialogContainer.getChildren().addAll(welcomeMessage);"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"        // set background image."},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"        dialogContainer.setStyle(\"-fx-background-image: url(\u0027images/Diamonds.png\u0027);\""},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"                + \"-fx-background-repeat: repeat-y\");"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"    public void setSkeleton(Skeleton s) {"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"        skeleton \u003d s;"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":47,"author":{"gitId":"RuiXiong2211"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":"    @FXML"},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"    private void handleUserInput() {"},{"lineNumber":51,"author":{"gitId":"RuiXiong2211"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":52,"author":{"gitId":"RuiXiong2211"},"content":"        String response \u003d skeleton.getResponse(input);"},{"lineNumber":53,"author":{"gitId":"RuiXiong2211"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":54,"author":{"gitId":"RuiXiong2211"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":55,"author":{"gitId":"RuiXiong2211"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":56,"author":{"gitId":"RuiXiong2211"},"content":"        );"},{"lineNumber":57,"author":{"gitId":"RuiXiong2211"},"content":"        userInput.clear();"},{"lineNumber":58,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":59}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import static java.lang.System.exit;"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":" * Class that deals with the user input and pushes out the appropriate command"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":" */"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"public class Parser {"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"    Scanner sc;"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"    static boolean warning;"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"    public Parser() {"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"        this.sc \u003d new Scanner(System.in);"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"        this.warning \u003d false;"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"     * method that deals with the user input"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"     * @param tasks the TaskList obj that contains the current list"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"     * @param fm    the data.txt save file of the current user"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"    Result readCommands(TaskList tasks, Storage fm, String input) {"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"        // splits the input string into 2 parts, separating the command and the info of the command."},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"        String[] commands \u003d input.split(\" \", 2);"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"        String command \u003d commands[0];"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"        Result result \u003d null;"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"            try {"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"                switch (command) {"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"                case \"bye\":"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"                    fm.saveFile(tasks);"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"                    ByeCommand byeCommand \u003d new ByeCommand(sc);"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"                    result \u003d byeCommand.execute();"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"                    Thread.sleep(500);"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"                    exit(0);"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"                    break;"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"                case \"list\":"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"                    ListCommand lstCmd \u003d new ListCommand(tasks);"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"                    result \u003d lstCmd.execute();"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"                    break;"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"                case \"todo\":"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"                    String info \u003d commands[1];"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"                    AddCommand todo \u003d new AddCommand(tasks, new ToDo(info));"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"                    result \u003d todo.execute();"},{"lineNumber":47,"author":{"gitId":"RuiXiong2211"},"content":"                    break;"},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"                case \"deadline\":"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":"                    String rest \u003d commands[1];"},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"                    String[] parts \u003d rest.split(\"/by\");"},{"lineNumber":51,"author":{"gitId":"RuiXiong2211"},"content":"                    AddCommand deadline \u003d new AddCommand(tasks, new Deadline(parts[0], parts[1]));"},{"lineNumber":52,"author":{"gitId":"RuiXiong2211"},"content":"                    result \u003d deadline.execute();"},{"lineNumber":53,"author":{"gitId":"RuiXiong2211"},"content":"                    break;"},{"lineNumber":54,"author":{"gitId":"RuiXiong2211"},"content":"                case \"event\":"},{"lineNumber":55,"author":{"gitId":"RuiXiong2211"},"content":"                    String rest1 \u003d commands[1];"},{"lineNumber":56,"author":{"gitId":"RuiXiong2211"},"content":"                    String[] parts1 \u003d rest1.split(\"/at\");"},{"lineNumber":57,"author":{"gitId":"RuiXiong2211"},"content":"                    AddCommand event \u003d new AddCommand(tasks, new Event(parts1[0], parts1[1]));"},{"lineNumber":58,"author":{"gitId":"RuiXiong2211"},"content":"                    result \u003d event.execute();"},{"lineNumber":59,"author":{"gitId":"RuiXiong2211"},"content":"                    break;"},{"lineNumber":60,"author":{"gitId":"RuiXiong2211"},"content":"                case \"done\":"},{"lineNumber":61,"author":{"gitId":"RuiXiong2211"},"content":"                    int number \u003d Integer.valueOf(commands[1]);"},{"lineNumber":62,"author":{"gitId":"RuiXiong2211"},"content":"                    DoneCommand dneCmd \u003d new DoneCommand(tasks, number);"},{"lineNumber":63,"author":{"gitId":"RuiXiong2211"},"content":"                    result \u003d dneCmd.execute();"},{"lineNumber":64,"author":{"gitId":"RuiXiong2211"},"content":"                    break;"},{"lineNumber":65,"author":{"gitId":"RuiXiong2211"},"content":"                case \"delete\":"},{"lineNumber":66,"author":{"gitId":"RuiXiong2211"},"content":"                    int no \u003d Integer.valueOf(commands[1]);"},{"lineNumber":67,"author":{"gitId":"RuiXiong2211"},"content":"                    DeleteCommand delCmd \u003d new DeleteCommand(tasks, no);"},{"lineNumber":68,"author":{"gitId":"RuiXiong2211"},"content":"                    result \u003d delCmd.execute();"},{"lineNumber":69,"author":{"gitId":"RuiXiong2211"},"content":"                    break;"},{"lineNumber":70,"author":{"gitId":"RuiXiong2211"},"content":"                case \"find\":"},{"lineNumber":71,"author":{"gitId":"RuiXiong2211"},"content":"                    String keyword \u003d commands[1];"},{"lineNumber":72,"author":{"gitId":"RuiXiong2211"},"content":"                    FindCommand fc \u003d new FindCommand(tasks, keyword);"},{"lineNumber":73,"author":{"gitId":"RuiXiong2211"},"content":"                    result \u003d fc.execute();"},{"lineNumber":74,"author":{"gitId":"RuiXiong2211"},"content":"                    break;"},{"lineNumber":75,"author":{"gitId":"RuiXiong2211"},"content":"                case \"clear\":"},{"lineNumber":76,"author":{"gitId":"RuiXiong2211"},"content":"                    ClearCommand clrCmd \u003d new ClearCommand(tasks);"},{"lineNumber":77,"author":{"gitId":"RuiXiong2211"},"content":"                    result \u003d clrCmd.execute();"},{"lineNumber":78,"author":{"gitId":"RuiXiong2211"},"content":"                    break;"},{"lineNumber":79,"author":{"gitId":"RuiXiong2211"},"content":"                default:"},{"lineNumber":80,"author":{"gitId":"RuiXiong2211"},"content":"                    result \u003d new Result(\"Invalid command!\");"},{"lineNumber":81,"author":{"gitId":"RuiXiong2211"},"content":"                    warning \u003d true;"},{"lineNumber":82,"author":{"gitId":"RuiXiong2211"},"content":"                    break;"},{"lineNumber":83,"author":{"gitId":"RuiXiong2211"},"content":"                }"},{"lineNumber":84,"author":{"gitId":"RuiXiong2211"},"content":"            } catch (DukeException | InterruptedException E) {"},{"lineNumber":85,"author":{"gitId":"RuiXiong2211"},"content":"                return new Result(E.getMessage());"},{"lineNumber":86,"author":{"gitId":"RuiXiong2211"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"RuiXiong2211"},"content":"            return result;"},{"lineNumber":88,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":89}},{"path":"src/main/java/Result.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"public class Result {"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"    public String output;"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"    public Result(String output) {"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"        this.output \u003d output;"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"        return this.output;"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":12}},{"path":"src/main/java/Skeleton.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"import static java.lang.System.exit;"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"import static java.lang.System.out;"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":" * Skeleton class for the Duke chatbox."},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":" */"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"public class Skeleton {"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"    private Storage storage;"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"    private TaskList tasks;"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"    private Parser parser;"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    public Skeleton() {"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"        this.storage \u003d new Storage();"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"        this.tasks \u003d new TaskList();"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"        this.parser \u003d new Parser();"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"    public void run() {"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"        storage.loadFile(tasks);"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"    public static void main(String[] args) {"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"        Skeleton skeleton \u003d new Skeleton();"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"        skeleton.run();"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"    public String getResponse(String input) {"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"        String output \u003d parser.readCommands(tasks, storage, input).toString();"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"        return \"COMMAND RECEIVED!\" + \"\\n\" + output;"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":36}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"import java.io.FileWriter;"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import java.nio.file.Files;"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"import java.nio.file.Paths;"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":" * Class that sets up the save/load system in project Duke."},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":" */"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"    static Path dir \u003d Paths.get(\"data\");"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"    static Path file \u003d Paths.get(\"data/saveFile.txt\");"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"    public Storage() {"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"        if (!Files.isDirectory(dir)) {"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"            try {"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"                Files.createDirectory(dir);"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"                if (!Files.exists(file)) {"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"                    Files.createFile(file);"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"                }"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"            } catch (IOException E) {"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"                System.out.println(E.getMessage() + \" IO Exception detected.\");"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"     * Saves the tasklist in /data/saveFile.txt"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"     * @param store the current tasklist of the user"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"    public void saveFile(TaskList store) {"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"        ArrayList\u003cTask\u003e storage \u003d store.getStorage();"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"            String save \u003d \"\";"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"            for (int i \u003d 0; i \u003c storage.size(); i++) {"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"                save +\u003d storage.get(i).getData() + \"\\n\";"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"            save \u003d reformatString(save);"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"            Files.writeString(Paths.get(\"data/saveFile.txt\"), save);"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"        } catch (IOException E) {"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"            System.out.println(E.getMessage() + \"IO Exception.\");"},{"lineNumber":47,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"RuiXiong2211"},"content":"     * Function that loads the file from previous usages of the chatbot Duke."},{"lineNumber":52,"author":{"gitId":"RuiXiong2211"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"RuiXiong2211"},"content":"    public void loadFile(TaskList store) {"},{"lineNumber":54,"author":{"gitId":"RuiXiong2211"},"content":"        ArrayList\u003cTask\u003e storage \u003d store.getStorage();"},{"lineNumber":55,"author":{"gitId":"RuiXiong2211"},"content":"        try {"},{"lineNumber":56,"author":{"gitId":"RuiXiong2211"},"content":"            List\u003cString\u003e contents \u003d Files.readAllLines(Paths.get(\"data/saveFile.txt\"));"},{"lineNumber":57,"author":{"gitId":"RuiXiong2211"},"content":"            storage.clear();"},{"lineNumber":58,"author":{"gitId":"RuiXiong2211"},"content":"            for (int i \u003d 0; i \u003c contents.size(); i++) {"},{"lineNumber":59,"author":{"gitId":"RuiXiong2211"},"content":"                char type \u003d contents.get(i).charAt(0);"},{"lineNumber":60,"author":{"gitId":"RuiXiong2211"},"content":"                char status \u003d contents.get(i).charAt(1);"},{"lineNumber":61,"author":{"gitId":"RuiXiong2211"},"content":"                boolean isDone \u003d status \u003d\u003d \u00271\u0027;"},{"lineNumber":62,"author":{"gitId":"RuiXiong2211"},"content":"                String rest \u003d contents.get(i).substring(2);"},{"lineNumber":63,"author":{"gitId":"RuiXiong2211"},"content":"                rest \u003d rest.replaceFirst(\"^\\\\s*\", \" \");"},{"lineNumber":64,"author":{"gitId":"RuiXiong2211"},"content":"                switch (type) {"},{"lineNumber":65,"author":{"gitId":"RuiXiong2211"},"content":"                case \u0027T\u0027:"},{"lineNumber":66,"author":{"gitId":"RuiXiong2211"},"content":"                    storage.add(new ToDo(rest, isDone));"},{"lineNumber":67,"author":{"gitId":"RuiXiong2211"},"content":"                    break;"},{"lineNumber":68,"author":{"gitId":"RuiXiong2211"},"content":"                case \u0027D\u0027:"},{"lineNumber":69,"author":{"gitId":"RuiXiong2211"},"content":"                    String[] restD1 \u003d rest.split(\"by:\");"},{"lineNumber":70,"author":{"gitId":"RuiXiong2211"},"content":"                    storage.add(new Deadline(restD1[0], isDone, restD1[1]));"},{"lineNumber":71,"author":{"gitId":"RuiXiong2211"},"content":"                    break;"},{"lineNumber":72,"author":{"gitId":"RuiXiong2211"},"content":"                case \u0027E\u0027:"},{"lineNumber":73,"author":{"gitId":"RuiXiong2211"},"content":"                    String[] restE1 \u003d rest.split(\"at:\");"},{"lineNumber":74,"author":{"gitId":"RuiXiong2211"},"content":"                    storage.add(new Event(restE1[0], isDone, restE1[1]));"},{"lineNumber":75,"author":{"gitId":"RuiXiong2211"},"content":"                    break;"},{"lineNumber":76,"author":{"gitId":"RuiXiong2211"},"content":"                default:"},{"lineNumber":77,"author":{"gitId":"RuiXiong2211"},"content":"                    break;"},{"lineNumber":78,"author":{"gitId":"RuiXiong2211"},"content":"                }"},{"lineNumber":79,"author":{"gitId":"RuiXiong2211"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"RuiXiong2211"},"content":"        } catch (IOException E) {"},{"lineNumber":81,"author":{"gitId":"RuiXiong2211"},"content":"            System.out.println(E.getMessage() + \"IO Exception.\");"},{"lineNumber":82,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":85,"author":{"gitId":"RuiXiong2211"},"content":"    public String reformatString(String string) {"},{"lineNumber":86,"author":{"gitId":"RuiXiong2211"},"content":"        String save \u003d string;"},{"lineNumber":87,"author":{"gitId":"RuiXiong2211"},"content":"        save \u003d save.replaceAll(\"\\u2713\", \"1\");"},{"lineNumber":88,"author":{"gitId":"RuiXiong2211"},"content":"        save \u003d save.replaceAll(\"\\u2718\", \"0\");"},{"lineNumber":89,"author":{"gitId":"RuiXiong2211"},"content":"        save \u003d save.replaceAll(\"\\\\[\", \"\");"},{"lineNumber":90,"author":{"gitId":"RuiXiong2211"},"content":"        save \u003d save.replaceAll(\"]\", \"\");"},{"lineNumber":91,"author":{"gitId":"RuiXiong2211"},"content":"        save \u003d save.replaceAll(\"\\\\(\", \"\");"},{"lineNumber":92,"author":{"gitId":"RuiXiong2211"},"content":"        save \u003d save.replaceAll(\"\\\\)\", \"\");"},{"lineNumber":93,"author":{"gitId":"RuiXiong2211"},"content":"        return save;"},{"lineNumber":94,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":95}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":" * Class that represents the type of task, description of task"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":" * and whether the task is done. Subclasses may include the date"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":" * and time of the task."},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":" */"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"public class Task {"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"    private String description;"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"    private boolean isDone;"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"    private char type;"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"        this.description \u003d description;"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"        this.type \u003d 0;"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"    public Task(String description) {"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"        this.description \u003d description;"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"        this.isDone \u003d false;"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"        this.type \u003d 0;"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"    public String getStatusIcon() {"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"        return (isDone? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"    public boolean getStatus() {"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"        return this.isDone;"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"    public void setDone() {"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"        this.isDone \u003d true;"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"    public char getType() {"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"        return this.type;"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"    public String getData() {"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"    public String getDescription() {"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"        return this.description;"},{"lineNumber":47,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"    public String toString() {"},{"lineNumber":51,"author":{"gitId":"RuiXiong2211"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":52,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":54,"author":{"gitId":"RuiXiong2211"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"RuiXiong2211"},"content":"    public boolean equals(Object obj) {"},{"lineNumber":56,"author":{"gitId":"RuiXiong2211"},"content":"        if (this \u003d\u003d obj) {"},{"lineNumber":57,"author":{"gitId":"RuiXiong2211"},"content":"            return true;"},{"lineNumber":58,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"RuiXiong2211"},"content":"        if (obj \u003d\u003d null || obj.getClass() !\u003d this.getClass()) {"},{"lineNumber":60,"author":{"gitId":"RuiXiong2211"},"content":"            return false;"},{"lineNumber":61,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"RuiXiong2211"},"content":"        Task task \u003d (Task) obj;"},{"lineNumber":63,"author":{"gitId":"RuiXiong2211"},"content":"        return task.description.equals(this.description)"},{"lineNumber":64,"author":{"gitId":"RuiXiong2211"},"content":"                \u0026\u0026 task.type \u003d\u003d this.type"},{"lineNumber":65,"author":{"gitId":"RuiXiong2211"},"content":"                \u0026\u0026 task.isDone \u003d\u003d this.isDone;"},{"lineNumber":66,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":68,"author":{"gitId":"RuiXiong2211"},"content":"    @Override"},{"lineNumber":69,"author":{"gitId":"RuiXiong2211"},"content":"    public int hashCode() {"},{"lineNumber":70,"author":{"gitId":"RuiXiong2211"},"content":"        // prime number 17 is used."},{"lineNumber":71,"author":{"gitId":"RuiXiong2211"},"content":"        int result \u003d 17;"},{"lineNumber":72,"author":{"gitId":"RuiXiong2211"},"content":"        result \u003d 31 * result + description.hashCode();"},{"lineNumber":73,"author":{"gitId":"RuiXiong2211"},"content":"        return result;"},{"lineNumber":74,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":75}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.HashSet;"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.Set;"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":" * Class that handles the backend of the program,"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":" * storing all the tasklists of the user and handles"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":" * each command."},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":" */"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"public class TaskList {"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"    private ArrayList\u003cTask\u003e storage;"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"    private Set\u003cTask\u003e duplicateChecker;"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    public TaskList() {"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"        this.storage \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"        this.duplicateChecker \u003d new HashSet\u003cTask\u003e();"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"        duplicateChecker.addAll(storage);"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"/*"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"    String add(Task task) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"        String output \u003d \"\";"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"        boolean hasDuplicate \u003d checkForDuplicate(duplicateChecker, task);"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"        if (!hasDuplicate) {"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"            storage.add(task);"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"            output +\u003d \"ALRIGHT. I HAVE ALREADY ADDED THE TASK!!!\\n\""},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"                    + task.toString()"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"                    + \"\\n\""},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"                    + \"Now you have \" + storage.size()"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"                    + \" tasks in the list.\";"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"        } else {"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"            output +\u003d \"Item is a duplicate and has already been added.\\n\""},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"                    + \"Please check again.\";"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"        assert output !\u003d \"\" : \"output should not be empty.\";"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"        return output;"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"*/"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"    String done(int value) throws DukeException {"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"        String output \u003d \"\";"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"        if (value \u003c\u003d 0 || value \u003e storage.size()) {"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"            throw new DukeException(\"No such list item.\");"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"        storage.get(value - 1).setDone();"},{"lineNumber":47,"author":{"gitId":"RuiXiong2211"},"content":"        output +\u003d \"ALRIGHT. THIS TASK HAS BEEN MARKED AS COMPLETE\\n\""},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"                + storage.get(value - 1)"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":"                + \"\\n\";"},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"        assert output !\u003d \"\" : \"output should not be empty.\";"},{"lineNumber":51,"author":{"gitId":"RuiXiong2211"},"content":"        return output;"},{"lineNumber":52,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":54,"author":{"gitId":"RuiXiong2211"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"RuiXiong2211"},"content":"     * Method that deletes the item from the tasklist."},{"lineNumber":56,"author":{"gitId":"RuiXiong2211"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"RuiXiong2211"},"content":"     * @param value the position of the item to be deleted."},{"lineNumber":58,"author":{"gitId":"RuiXiong2211"},"content":"     * @throws DukeException"},{"lineNumber":59,"author":{"gitId":"RuiXiong2211"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"RuiXiong2211"},"content":"    String delete(int value) throws DukeException {"},{"lineNumber":61,"author":{"gitId":"RuiXiong2211"},"content":"        String output \u003d \"\";"},{"lineNumber":62,"author":{"gitId":"RuiXiong2211"},"content":"        int sizeAfterDelete \u003d storage.size() - 1;"},{"lineNumber":63,"author":{"gitId":"RuiXiong2211"},"content":"        if (value \u003c\u003d 0 || value \u003e storage.size()) {"},{"lineNumber":64,"author":{"gitId":"RuiXiong2211"},"content":"            throw new DukeException(\"No such list item.\");"},{"lineNumber":65,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"RuiXiong2211"},"content":"        output +\u003d \"OK. TASK REMOVED.\\n\""},{"lineNumber":67,"author":{"gitId":"RuiXiong2211"},"content":"                + storage.get(value - 1)"},{"lineNumber":68,"author":{"gitId":"RuiXiong2211"},"content":"                + \"\\n\""},{"lineNumber":69,"author":{"gitId":"RuiXiong2211"},"content":"                + \"Now you have \""},{"lineNumber":70,"author":{"gitId":"RuiXiong2211"},"content":"                + sizeAfterDelete"},{"lineNumber":71,"author":{"gitId":"RuiXiong2211"},"content":"                + \" tasks in the list.\";"},{"lineNumber":72,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":73,"author":{"gitId":"RuiXiong2211"},"content":"        duplicateChecker.remove(storage.get(value - 1));"},{"lineNumber":74,"author":{"gitId":"RuiXiong2211"},"content":"        storage.remove(value - 1);"},{"lineNumber":75,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":76,"author":{"gitId":"RuiXiong2211"},"content":"        assert sizeAfterDelete \u003e\u003d 0 : \"size cannot be negative.\";"},{"lineNumber":77,"author":{"gitId":"RuiXiong2211"},"content":"        assert output !\u003d \"\" : \"output should not be empty.\";"},{"lineNumber":78,"author":{"gitId":"RuiXiong2211"},"content":"        return output;"},{"lineNumber":79,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":81,"author":{"gitId":"RuiXiong2211"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"RuiXiong2211"},"content":"     * Method that lists out all items in the current tasklist."},{"lineNumber":83,"author":{"gitId":"RuiXiong2211"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"RuiXiong2211"},"content":"    String listItems() {"},{"lineNumber":85,"author":{"gitId":"RuiXiong2211"},"content":"        String output \u003d \"\";"},{"lineNumber":86,"author":{"gitId":"RuiXiong2211"},"content":"        if (storage.isEmpty()) {"},{"lineNumber":87,"author":{"gitId":"RuiXiong2211"},"content":"            output +\u003d \"Empty List\\n\";"},{"lineNumber":88,"author":{"gitId":"RuiXiong2211"},"content":"        } else {"},{"lineNumber":89,"author":{"gitId":"RuiXiong2211"},"content":"            output +\u003d \"Here are the tasks.\\n\";"},{"lineNumber":90,"author":{"gitId":"RuiXiong2211"},"content":"            for (int j \u003d 0; j \u003c storage.size(); j++) {"},{"lineNumber":91,"author":{"gitId":"RuiXiong2211"},"content":"                output +\u003d (j + 1) + \". \""},{"lineNumber":92,"author":{"gitId":"RuiXiong2211"},"content":"                        + storage.get(j)"},{"lineNumber":93,"author":{"gitId":"RuiXiong2211"},"content":"                        + \"\\n\";"},{"lineNumber":94,"author":{"gitId":"RuiXiong2211"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"RuiXiong2211"},"content":"        assert output !\u003d \"\" : \"output should not be empty.\";"},{"lineNumber":97,"author":{"gitId":"RuiXiong2211"},"content":"        return output;"},{"lineNumber":98,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":100,"author":{"gitId":"RuiXiong2211"},"content":"    ArrayList\u003cTask\u003e getStorage() {"},{"lineNumber":101,"author":{"gitId":"RuiXiong2211"},"content":"        return this.storage;"},{"lineNumber":102,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":104,"author":{"gitId":"RuiXiong2211"},"content":"    boolean checkForDuplicate(Set\u003cTask\u003e tasks, Task task) {"},{"lineNumber":105,"author":{"gitId":"RuiXiong2211"},"content":"        int originalCount \u003d tasks.size();"},{"lineNumber":106,"author":{"gitId":"RuiXiong2211"},"content":"        tasks.add(task);"},{"lineNumber":107,"author":{"gitId":"RuiXiong2211"},"content":"        int postCount \u003d tasks.size();"},{"lineNumber":108,"author":{"gitId":"RuiXiong2211"},"content":"        return originalCount \u003d\u003d postCount;"},{"lineNumber":109,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":111,"author":{"gitId":"RuiXiong2211"},"content":"    Set\u003cTask\u003e getDuplicateChecker() {"},{"lineNumber":112,"author":{"gitId":"RuiXiong2211"},"content":"        return this.duplicateChecker;"},{"lineNumber":113,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":115,"author":{"gitId":"RuiXiong2211"},"content":"    String clearList() {"},{"lineNumber":116,"author":{"gitId":"RuiXiong2211"},"content":"        storage.clear();"},{"lineNumber":117,"author":{"gitId":"RuiXiong2211"},"content":"        duplicateChecker.clear();"},{"lineNumber":118,"author":{"gitId":"RuiXiong2211"},"content":"        return \"List has been cleared.\";"},{"lineNumber":119,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":120}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"public class ToDo extends Task{"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"    protected char type;"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"    public ToDo(String task) {"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"        super(task);"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"        this.type \u003d \u0027T\u0027;"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"    public ToDo(String task, boolean isDone) {"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"        super(task, isDone);"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"        this.type \u003d \u0027T\u0027;"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"        return \"[\" + type + \"]\" + super.toString();"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"    public String getData() {"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"        return \"[\" + type + \"]\" + super.toString();"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":24}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"\u003c?import java.net.URL?\u003e"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"\u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-border-radius: 25;\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"    \u003c/children\u003e"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"    \u003cpadding\u003e"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    \u003c/padding\u003e"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"RuiXiong2211":18}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"RuiXiong2211":19}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"public class DeadlineTest {"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"    @Test"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"    public void deadlineTesting() {"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"        assertEquals(\"[D][✘] tea party (by:2019-10-15)\", new Deadline(\"tea party\", \"2019-10-15\").getData());"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":9}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"public class EventTest {"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"    @Test"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"    public void eventTesting(){"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"        assertEquals(\"[E][✘] osakai (at:2019-10-15)\", new Event(\"osakai\", \"2019-10-15\").getData());"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"list"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"deadline return book /by 2019-10-15"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"event project meeting /at 2019-10-19"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"list"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"bye"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":""}],"authorContributionMap":{"RuiXiong2211":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"java -classpath ..\\bin Skeleton \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"RuiXiong2211":1,"-":20}}]
