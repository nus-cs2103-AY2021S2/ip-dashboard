[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"    mainClassName \u003d \"Skeleton\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":1,"-":45}},{"path":"data/saveFile.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"T0  borrow book"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"D1  return book      by:2019-10-15"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"E0  project meeting      at:2019-10-19"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"T0  borrow book"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"D0  return book      by:2019-10-15"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"E0  project meeting      at:2019-10-19"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"T0  borrow book"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"D0  return book      by:2019-10-15"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"E0  project meeting      at:2019-10-19"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"T0  borrow book"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"D0  return book     by:2019-10-15"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"E0  project meeting     at:2019-10-19"}],"authorContributionMap":{"RuiXiong2211":12}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"public class Deadline extends Task {"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"    public LocalDate by;"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"    protected char type;"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"    public Deadline(String task, String by) {"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"        super(task);"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"        by \u003d by.replaceFirst(\" \", \"\");"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"        this.by \u003d LocalDate.parse(by);"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"        this.type \u003d \u0027D\u0027;"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    public Deadline(String task, boolean isDone, String by) {"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"        super(task, isDone);"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"        this.type \u003d \u0027D\u0027;"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"        by \u003d by.replaceFirst(\" \", \"\");"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"        this.by \u003d LocalDate.parse(by);"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"        return \"[\" + type + \"]\"  + super.toString()"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"                + \"(by:\" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"    public String getData() {"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"        return \"[\" + type + \"]\"  + super.toString()"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"                + \" (by:\" + by + \")\";"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":35}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"    public DukeException(String message) {"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"        super(message);"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"public class Event extends Task {"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"    protected char type;"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"    public LocalDate at;"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"    public Event(String task, String at) {"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"        super(task);"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"        at \u003d at.replaceFirst(\" \", \"\");"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"        this.at \u003d LocalDate.parse(at);"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"        this.type \u003d \u0027E\u0027;"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    public Event(String task, boolean isDone, String at) {"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"        super(task, isDone);"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"        this.type \u003d \u0027E\u0027;"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"        at \u003d at.replaceFirst(\" \", \"\");"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"        this.at \u003d LocalDate.parse(at);"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"        return \"[\" + type + \"]\" + super.toString()"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"                + \"(at:\" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"    public String getData() {"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"        return \"[\" + type + \"]\" + super.toString()"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"                + \" (at:\" + at + \")\";"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":35}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"import java.lang.reflect.Array;"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":" * class that handles the command \"find\""},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":" * that searches the storage list and stores"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":" * them in the find list."},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":" */"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"public class FindCommand {"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"    public ArrayList\u003cTask\u003e findList;"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"    public FindCommand() {"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"        this.findList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    public void find(TaskList tasks, String keyword) {"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"        for (int i \u003d 0; i \u003c tasks.storage.size(); i++) {"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"            if (tasks.storage.get(i).getDescription().contains(keyword)) {"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"                findList.add(tasks.storage.get(i));"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"            }"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(\"------------------------------\");"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(\"Here are the matching tasks in your list: \");"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"        for (int i \u003d 0; i \u003c findList.size(); i++) {"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"            System.out.println((i + 1) + \".\" + findList.get(i));"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(\"------------------------------\");"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":30}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import static java.lang.System.exit;"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":" * Class that deals with the user input and pushes out the appropriate command"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":" */"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"public class Parser {"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"    Scanner sc;"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"    public Parser() {"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"        this.sc \u003d new Scanner(System.in);"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"     * method that deals with the user input."},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"     * @param tasks the TaskList obj that contains the current list"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"     * @param fm    the data.txt save file of the current user"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"    void readCommands(TaskList tasks, Storage fm) {"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"        String cmd \u003d sc.next();"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"        while (true) {"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"            try {"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"                switch (cmd) {"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"                case \"bye\":"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"                    fm.saveFile(tasks);"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"                    terminate();"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"                    break;"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"                case \"list\":"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"                    tasks.listItems();"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"                    break;"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"                case \"todo\":"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"                    tasks.add(new ToDo(sc.nextLine()));"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"                    break;"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"                case \"deadline\":"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"                    String rest \u003d sc.nextLine();"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"                    String[] parts \u003d rest.split(\"/by\");"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"                    tasks.add(new Deadline(parts[0], parts[1]));"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"                    break;"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"                case \"event\":"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"                    String rest1 \u003d sc.nextLine();"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"                    String[] parts1 \u003d rest1.split(\"/at\");"},{"lineNumber":47,"author":{"gitId":"RuiXiong2211"},"content":"                    tasks.add(new Event(parts1[0], parts1[1]));"},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"                    break;"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":"                case \"done\":"},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"                    int number \u003d sc.nextInt();"},{"lineNumber":51,"author":{"gitId":"RuiXiong2211"},"content":"                    tasks.done(number);"},{"lineNumber":52,"author":{"gitId":"RuiXiong2211"},"content":"                    break;"},{"lineNumber":53,"author":{"gitId":"RuiXiong2211"},"content":"                case \"delete\":"},{"lineNumber":54,"author":{"gitId":"RuiXiong2211"},"content":"                    int no \u003d sc.nextInt();"},{"lineNumber":55,"author":{"gitId":"RuiXiong2211"},"content":"                    tasks.delete(no);"},{"lineNumber":56,"author":{"gitId":"RuiXiong2211"},"content":"                    break;"},{"lineNumber":57,"author":{"gitId":"RuiXiong2211"},"content":"                case \"find\":"},{"lineNumber":58,"author":{"gitId":"RuiXiong2211"},"content":"                    String keyword \u003d sc.nextLine();"},{"lineNumber":59,"author":{"gitId":"RuiXiong2211"},"content":"                    FindCommand fc \u003d new FindCommand();"},{"lineNumber":60,"author":{"gitId":"RuiXiong2211"},"content":"                    fc.find(tasks, keyword);"},{"lineNumber":61,"author":{"gitId":"RuiXiong2211"},"content":"                    break;"},{"lineNumber":62,"author":{"gitId":"RuiXiong2211"},"content":"                default:"},{"lineNumber":63,"author":{"gitId":"RuiXiong2211"},"content":"                    break;"},{"lineNumber":64,"author":{"gitId":"RuiXiong2211"},"content":"                }"},{"lineNumber":65,"author":{"gitId":"RuiXiong2211"},"content":"            } catch (DukeException E) {"},{"lineNumber":66,"author":{"gitId":"RuiXiong2211"},"content":"                //System.out.println(\"Caught DukeException.\");"},{"lineNumber":67,"author":{"gitId":"RuiXiong2211"},"content":"                System.out.println(E);"},{"lineNumber":68,"author":{"gitId":"RuiXiong2211"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"RuiXiong2211"},"content":"            cmd \u003d sc.next();"},{"lineNumber":70,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":73,"author":{"gitId":"RuiXiong2211"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"RuiXiong2211"},"content":"     * Method that exits the program."},{"lineNumber":75,"author":{"gitId":"RuiXiong2211"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"RuiXiong2211"},"content":"    void terminate() {"},{"lineNumber":77,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(\"GOOD BYE SEE YOU AGAIN!\");"},{"lineNumber":78,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println();"},{"lineNumber":79,"author":{"gitId":"RuiXiong2211"},"content":"        sc.close();"},{"lineNumber":80,"author":{"gitId":"RuiXiong2211"},"content":"        exit(0);"},{"lineNumber":81,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":82}},{"path":"src/main/java/Skeleton.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"import static java.lang.System.exit;"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":" * Skeleton class for the Duke chatbox."},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":" */"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"public class Skeleton {"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"    private Storage storage;"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"    private TaskList tasks;"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"    private UI ui;"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"    private Parser parser;"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    public Skeleton() {"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"        this.storage \u003d new Storage();"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"        this.tasks \u003d new TaskList();"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"        this.ui \u003d new UI();"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"        this.parser \u003d new Parser();"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"    public void run() {"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"        ui.greeting();"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"        storage.loadFile(tasks);"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"        parser.readCommands(tasks, storage);"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"    public static void main(String[] args) {"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"        Skeleton skeleton \u003d new Skeleton();"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"        skeleton.run();"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":34}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"import java.io.FileWriter;"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import java.nio.file.Files;"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"import java.nio.file.Paths;"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":" * Class that sets up the save/load system in project Duke."},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":" */"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"    static Path dir \u003d Paths.get(\"data\");"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"    static Path file \u003d Paths.get(\"data/saveFile.txt\");"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    public Storage() {"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"        if (!Files.isDirectory(dir)) {"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"            try {"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"                Files.createDirectory(dir);"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"                if (!Files.exists(file)) {"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"                    Files.createFile(file);"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"                }"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"            } catch (IOException E) {"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"                System.out.println(E.getMessage() + \" IO Exception detected.\");"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"     * Saves the tasklist in /data/saveFile.txt"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"     * @param store the current tasklist of the user"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"    public void saveFile(TaskList store) {"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"            String save \u003d \"\";"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"            for (int i \u003d 0; i \u003c store.storage.size(); i++) {"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"                save +\u003d store.storage.get(i).getData() + \"\\n\";"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"            save \u003d save.replaceAll(\"\\u2713\", \"1\");"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"            save \u003d save.replaceAll(\"\\u2718\", \"0\");"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"            save \u003d save.replaceAll(\"\\\\[\", \"\");"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"            save \u003d save.replaceAll(\"]\", \"\");"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"            save \u003d save.replaceAll(\"\\\\(\", \"\");"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"            save \u003d save.replaceAll(\"\\\\)\", \"\");"},{"lineNumber":47,"author":{"gitId":"RuiXiong2211"},"content":"            Files.writeString(Paths.get(\"data/saveFile.txt\"), save);"},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"        } catch (IOException E) {"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":"            System.out.println(E.getMessage() + \"IO Exception.\");"},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":53,"author":{"gitId":"RuiXiong2211"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"RuiXiong2211"},"content":"     * Function that loads the file from previous usages of the chatbot Duke."},{"lineNumber":55,"author":{"gitId":"RuiXiong2211"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"RuiXiong2211"},"content":"    public void loadFile(TaskList store) {"},{"lineNumber":57,"author":{"gitId":"RuiXiong2211"},"content":"        try {"},{"lineNumber":58,"author":{"gitId":"RuiXiong2211"},"content":"            List\u003cString\u003e contents \u003d Files.readAllLines(Paths.get(\"data/saveFile.txt\"));"},{"lineNumber":59,"author":{"gitId":"RuiXiong2211"},"content":"            store.storage.clear();"},{"lineNumber":60,"author":{"gitId":"RuiXiong2211"},"content":"            for (int i \u003d 0; i \u003c contents.size(); i++) {"},{"lineNumber":61,"author":{"gitId":"RuiXiong2211"},"content":"                char type \u003d contents.get(i).charAt(0);"},{"lineNumber":62,"author":{"gitId":"RuiXiong2211"},"content":"                char isDone \u003d contents.get(i).charAt(1);"},{"lineNumber":63,"author":{"gitId":"RuiXiong2211"},"content":"                boolean status \u003d isDone \u003d\u003d \u00271\u0027;"},{"lineNumber":64,"author":{"gitId":"RuiXiong2211"},"content":"                String rest \u003d contents.get(i).substring(2);"},{"lineNumber":65,"author":{"gitId":"RuiXiong2211"},"content":"                rest \u003d rest.replaceFirst(\"^\\\\s*\", \" \");"},{"lineNumber":66,"author":{"gitId":"RuiXiong2211"},"content":"                switch (type) {"},{"lineNumber":67,"author":{"gitId":"RuiXiong2211"},"content":"                case \u0027T\u0027:"},{"lineNumber":68,"author":{"gitId":"RuiXiong2211"},"content":"                    store.storage.add(new ToDo(rest, status));"},{"lineNumber":69,"author":{"gitId":"RuiXiong2211"},"content":"                    break;"},{"lineNumber":70,"author":{"gitId":"RuiXiong2211"},"content":"                case \u0027D\u0027:"},{"lineNumber":71,"author":{"gitId":"RuiXiong2211"},"content":"                    String[] restD1 \u003d rest.split(\"by:\");"},{"lineNumber":72,"author":{"gitId":"RuiXiong2211"},"content":"                    store.storage.add(new Deadline(restD1[0], status, restD1[1]));"},{"lineNumber":73,"author":{"gitId":"RuiXiong2211"},"content":"                    break;"},{"lineNumber":74,"author":{"gitId":"RuiXiong2211"},"content":"                case \u0027E\u0027:"},{"lineNumber":75,"author":{"gitId":"RuiXiong2211"},"content":"                    String[] restE1 \u003d rest.split(\"at:\");"},{"lineNumber":76,"author":{"gitId":"RuiXiong2211"},"content":"                    store.storage.add(new Event(restE1[0], status, restE1[1]));"},{"lineNumber":77,"author":{"gitId":"RuiXiong2211"},"content":"                    break;"},{"lineNumber":78,"author":{"gitId":"RuiXiong2211"},"content":"                default:"},{"lineNumber":79,"author":{"gitId":"RuiXiong2211"},"content":"                    break;"},{"lineNumber":80,"author":{"gitId":"RuiXiong2211"},"content":"                }"},{"lineNumber":81,"author":{"gitId":"RuiXiong2211"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"RuiXiong2211"},"content":"        } catch (IOException E) {"},{"lineNumber":83,"author":{"gitId":"RuiXiong2211"},"content":"            System.out.println(E.getMessage() + \"IO Exception.\");"},{"lineNumber":84,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":86}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":" * Class that represents the type of task, description of task"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":" * and whether the task is done. Subclasses may include the date"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":" * and time of the task."},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":" */"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"public class Task {"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"    protected String description;"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"    protected boolean isDone;"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"    protected char type;"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"        this.description \u003d description;"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"        this.type \u003d 0;"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"    public Task(String description) {"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"        this.description \u003d description;"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"        this.isDone \u003d false;"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"        this.type \u003d 0;"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"    public String getStatusIcon() {"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"        return (isDone? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"    public boolean getStatus() {"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"        return this.isDone;"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"    public void setDone() {"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"        this.isDone \u003d true;"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"    public char getType() {"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"        return this.type;"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"    public String toString() {"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"    public String getData() {"},{"lineNumber":47,"author":{"gitId":"RuiXiong2211"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"    public String getDescription() {"},{"lineNumber":51,"author":{"gitId":"RuiXiong2211"},"content":"        return this.description;"},{"lineNumber":52,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":53}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":" * Class that handles the backend of the program,"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":" * storing all the tasklists of the user and handles"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":" * each command."},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":" */"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"    public ArrayList\u003cTask\u003e storage;"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"    public TaskList() {"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"        this.storage \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"    void add(Task task) throws DukeException {"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"        storage.add(task);"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(\"ALRIGHT. I HAVE ALREADY ADDED THE TASK!!!\");"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(task);"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(\"Now you have \" + storage.size() + \" tasks in the list.\");"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println();"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"    void done(int value) throws DukeException {"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"        if (value \u003c\u003d 0 || value \u003e storage.size()) {"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"            throw new DukeException(\"No such list item.\");"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"        storage.get(value - 1).setDone();"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(\"ALRIGHT. THIS TASK HAS BEEN MARKED AS COMPLETE\");"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(storage.get(value - 1));"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println();"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"     * Method that deletes the item from the tasklist."},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"     * @param value the position of the item to be deleted."},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"     * @throws DukeException"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"    void delete(int value) throws DukeException {"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"        if (value \u003c\u003d 0 || value \u003e storage.size()) {"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"            throw new DukeException(\"No such list item.\");"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(\"OK. TASK REMOVED.\");"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(storage.get(value - 1));"},{"lineNumber":47,"author":{"gitId":"RuiXiong2211"},"content":"        storage.remove(value - 1);"},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(\"Now you have \" + storage.size() + \" tasks in the list.\");"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println();"},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":52,"author":{"gitId":"RuiXiong2211"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"RuiXiong2211"},"content":"     * Method that lists out all items in the current tasklist."},{"lineNumber":54,"author":{"gitId":"RuiXiong2211"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"RuiXiong2211"},"content":"     void listItems() {"},{"lineNumber":56,"author":{"gitId":"RuiXiong2211"},"content":"        if (storage.isEmpty()) {"},{"lineNumber":57,"author":{"gitId":"RuiXiong2211"},"content":"            System.out.println(\"Empty list\");"},{"lineNumber":58,"author":{"gitId":"RuiXiong2211"},"content":"            System.out.println();"},{"lineNumber":59,"author":{"gitId":"RuiXiong2211"},"content":"        } else {"},{"lineNumber":60,"author":{"gitId":"RuiXiong2211"},"content":"            System.out.println(\"HERE ARE THE TASKS\");"},{"lineNumber":61,"author":{"gitId":"RuiXiong2211"},"content":"            for (int j \u003d 0; j \u003c storage.size(); j++) {"},{"lineNumber":62,"author":{"gitId":"RuiXiong2211"},"content":"                System.out.println((j+1) + \". \" + storage.get(j));"},{"lineNumber":63,"author":{"gitId":"RuiXiong2211"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"RuiXiong2211"},"content":"            System.out.println();"},{"lineNumber":65,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":67}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"public class ToDo extends Task{"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"    protected char type;"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"    public ToDo(String task) {"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"        super(task);"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"        this.type \u003d \u0027T\u0027;"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"    public ToDo(String task, boolean isDone) {"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"        super(task, isDone);"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"        this.type \u003d \u0027T\u0027;"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"        return \"[\" + type + \"]\" + super.toString();"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"    public String getData() {"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"        return \"[\" + type + \"]\" + super.toString();"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":22}},{"path":"src/main/java/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":" * Class that handles the user interface the user sees"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":" * when opening up the app and closing the app."},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":" */"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"public class UI {"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"    public UI() {"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"    void greeting() {"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"        String textart \u003d \"█░░░░░░██████████░░░░░░█░░░░░░░░░░░░░░█░░░░░░█████████░░░░░░░░░░░░░░█░░░░░░░░░░░░░░█░░░░░░██████████░░░░░░█░░░░░░░░░░░░░░█\\n\" +"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"                \"█░░▄▀░░██████████░░▄▀░░█░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀░░█████████░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀░░░░░░░░░░░░░░▄▀░░█░░▄▀▄▀▄▀▄▀▄▀░░█\\n\" +"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"                \"█░░▄▀░░██████████░░▄▀░░█░░▄▀░░░░░░░░░░█░░▄▀░░█████████░░▄▀░░░░░░░░░░█░░▄▀░░░░░░▄▀░░█░░▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀░░█░░▄▀░░░░░░░░░░█\\n\" +"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"                \"█░░▄▀░░██████████░░▄▀░░█░░▄▀░░█████████░░▄▀░░█████████░░▄▀░░█████████░░▄▀░░██░░▄▀░░█░░▄▀░░░░░░▄▀░░░░░░▄▀░░█░░▄▀░░█████████\\n\" +"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"                \"█░░▄▀░░██░░░░░░██░░▄▀░░█░░▄▀░░░░░░░░░░█░░▄▀░░█████████░░▄▀░░█████████░░▄▀░░██░░▄▀░░█░░▄▀░░██░░▄▀░░██░░▄▀░░█░░▄▀░░░░░░░░░░█\\n\" +"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"                \"█░░▄▀░░██░░▄▀░░██░░▄▀░░█░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀░░█████████░░▄▀░░█████████░░▄▀░░██░░▄▀░░█░░▄▀░░██░░▄▀░░██░░▄▀░░█░░▄▀▄▀▄▀▄▀▄▀░░█\\n\" +"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"                \"█░░▄▀░░██░░▄▀░░██░░▄▀░░█░░▄▀░░░░░░░░░░█░░▄▀░░█████████░░▄▀░░█████████░░▄▀░░██░░▄▀░░█░░▄▀░░██░░░░░░██░░▄▀░░█░░▄▀░░░░░░░░░░█\\n\" +"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"                \"█░░▄▀░░░░░░▄▀░░░░░░▄▀░░█░░▄▀░░█████████░░▄▀░░█████████░░▄▀░░█████████░░▄▀░░██░░▄▀░░█░░▄▀░░██████████░░▄▀░░█░░▄▀░░█████████\\n\" +"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"                \"█░░▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀▄▀░░█░░▄▀░░░░░░░░░░█░░▄▀░░░░░░░░░░█░░▄▀░░░░░░░░░░█░░▄▀░░░░░░▄▀░░█░░▄▀░░██████████░░▄▀░░█░░▄▀░░░░░░░░░░█\\n\" +"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"                \"█░░▄▀░░░░░░▄▀░░░░░░▄▀░░█░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀▄▀▄▀▄▀▄▀░░█░░▄▀░░██████████░░▄▀░░█░░▄▀▄▀▄▀▄▀▄▀░░█\\n\" +"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"                \"█░░░░░░██░░░░░░██░░░░░░█░░░░░░░░░░░░░░█░░░░░░░░░░░░░░█░░░░░░░░░░░░░░█░░░░░░░░░░░░░░█░░░░░░██████████░░░░░░█░░░░░░░░░░░░░░█\\n\" +"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"                \"██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████\";"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(textart);"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(\"HELLO! I AM YOUR ROBOT\");"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(\"WHAT DO YOU WANT?\");"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(\"***********\");"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":29}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"public class DeadlineTest {"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"    @Test"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"    public void deadlineTesting() {"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"        assertEquals(\"[D][✘] tea party (by:2019-10-15)\", new Deadline(\"tea party\", \"2019-10-15\").getData());"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":9}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"public class EventTest {"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"    @Test"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"    public void eventTesting(){"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"        assertEquals(\"[E][✘] osakai (at:2019-10-15)\", new Event(\"osakai\", \"2019-10-15\").getData());"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":9}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"list"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"deadline return book /by 2019-10-15"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"event project meeting /at 2019-10-19"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"list"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"bye"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":""}],"authorContributionMap":{"RuiXiong2211":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"java -classpath ..\\bin Skeleton \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"RuiXiong2211":1,"-":20}}]
