[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"    String by;"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"    public Deadline(String task, String by) {"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"        super(task);"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"        this.by \u003d by;"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"        return \"[D]\"  + super.toString() + \"(by:\" + by + \")\";"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":12}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"    public DukeException(String message) {"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"        super(message);"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"public class Event extends Task{"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"    protected String by;"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"    public Event(String task, String by) {"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"        super(task);"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"        this.by \u003d by;"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"        return \"[E]\"  + super.toString() + \"(at:\" + by + \")\";"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":12}},{"path":"src/main/java/Skeleton.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"import java.lang.reflect.Array;"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"import static java.lang.System.exit;"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":" * Skeleton class for the Duke chatbox."},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":" */"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"public class Skeleton {"},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"    static Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"    static String cmd;"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":"    static ArrayList\u003cTask\u003e storage \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"    static int current  \u003d 0;"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"    public static void main(String[] args) {"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"        String word \u003d \"\";"},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"        String rest \u003d \"\";"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"        greet();"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"        while (true) {"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"            try {"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"                cmd \u003d sc.nextLine();"},{"lineNumber":24,"author":{"gitId":"RuiXiong2211"},"content":"                int i \u003d cmd.indexOf(\u0027 \u0027);"},{"lineNumber":25,"author":{"gitId":"RuiXiong2211"},"content":"                if (i \u003e\u003d 0) {"},{"lineNumber":26,"author":{"gitId":"RuiXiong2211"},"content":"                    word \u003d cmd.substring(0, i);"},{"lineNumber":27,"author":{"gitId":"RuiXiong2211"},"content":"                    rest \u003d cmd.substring(i);"},{"lineNumber":28,"author":{"gitId":"RuiXiong2211"},"content":"                }"},{"lineNumber":29,"author":{"gitId":"RuiXiong2211"},"content":"                if (cmd.equals(\"bye\")) {"},{"lineNumber":30,"author":{"gitId":"RuiXiong2211"},"content":"                    terminate();"},{"lineNumber":31,"author":{"gitId":"RuiXiong2211"},"content":"                } else if (cmd.equals(\"list\")) {"},{"lineNumber":32,"author":{"gitId":"RuiXiong2211"},"content":"                    listItems();"},{"lineNumber":33,"author":{"gitId":"RuiXiong2211"},"content":"                } else if (word.equals(\"done\")) {"},{"lineNumber":34,"author":{"gitId":"RuiXiong2211"},"content":"                    int value \u003d Integer.parseInt(rest.replaceAll(\"[^0-9]\", \"\"));"},{"lineNumber":35,"author":{"gitId":"RuiXiong2211"},"content":"                    done(value);"},{"lineNumber":36,"author":{"gitId":"RuiXiong2211"},"content":"                } else if (word.equals(\"delete\")) {"},{"lineNumber":37,"author":{"gitId":"RuiXiong2211"},"content":"                    int value \u003d Integer.parseInt(rest.replaceAll(\"[^0-9]\", \"\"));"},{"lineNumber":38,"author":{"gitId":"RuiXiong2211"},"content":"                    delete(value);"},{"lineNumber":39,"author":{"gitId":"RuiXiong2211"},"content":"                } else {"},{"lineNumber":40,"author":{"gitId":"RuiXiong2211"},"content":"                    add(word, rest);"},{"lineNumber":41,"author":{"gitId":"RuiXiong2211"},"content":"                }"},{"lineNumber":42,"author":{"gitId":"RuiXiong2211"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"RuiXiong2211"},"content":"            catch (DukeException E) {"},{"lineNumber":44,"author":{"gitId":"RuiXiong2211"},"content":"                //System.out.println(\"Caught DukeException.\");"},{"lineNumber":45,"author":{"gitId":"RuiXiong2211"},"content":"                System.out.println(E);"},{"lineNumber":46,"author":{"gitId":"RuiXiong2211"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":50,"author":{"gitId":"RuiXiong2211"},"content":"    /** function that adds to a storage list the type of task the user has input. */"},{"lineNumber":51,"author":{"gitId":"RuiXiong2211"},"content":"    static void add(String type, String rest) throws DukeException {"},{"lineNumber":52,"author":{"gitId":"RuiXiong2211"},"content":"        if (type.equals(\"todo\") \u0026\u0026 rest.equals(\"\")) {"},{"lineNumber":53,"author":{"gitId":"RuiXiong2211"},"content":"            throw new DukeException(\"Description cannot be empty\");"},{"lineNumber":54,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"RuiXiong2211"},"content":"        if (type.equals(\"todo\")) {"},{"lineNumber":56,"author":{"gitId":"RuiXiong2211"},"content":"            storage.add(new Todo(rest));"},{"lineNumber":57,"author":{"gitId":"RuiXiong2211"},"content":"        } else if (type.equals(\"deadline\")) {"},{"lineNumber":58,"author":{"gitId":"RuiXiong2211"},"content":"            int i \u003d rest.indexOf(\"/\") + 3;"},{"lineNumber":59,"author":{"gitId":"RuiXiong2211"},"content":"            String by \u003d rest.substring(i);"},{"lineNumber":60,"author":{"gitId":"RuiXiong2211"},"content":"            rest \u003d rest.substring(0, i - 3);"},{"lineNumber":61,"author":{"gitId":"RuiXiong2211"},"content":"            storage.add(new Deadline(rest, by));"},{"lineNumber":62,"author":{"gitId":"RuiXiong2211"},"content":"        } else if (type.equals(\"event\")) {"},{"lineNumber":63,"author":{"gitId":"RuiXiong2211"},"content":"            int i \u003d rest.indexOf(\"/\") + 3;"},{"lineNumber":64,"author":{"gitId":"RuiXiong2211"},"content":"            String by \u003d rest.substring(i);"},{"lineNumber":65,"author":{"gitId":"RuiXiong2211"},"content":"            rest \u003d rest.substring(0, i - 3);"},{"lineNumber":66,"author":{"gitId":"RuiXiong2211"},"content":"            storage.add(new Event(rest, by));"},{"lineNumber":67,"author":{"gitId":"RuiXiong2211"},"content":"        } else {"},{"lineNumber":68,"author":{"gitId":"RuiXiong2211"},"content":"            throw new DukeException(\"Command UNKNOWN\");"},{"lineNumber":69,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(\"Wagata. Mou added shi mashita.\");"},{"lineNumber":71,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(storage.get(current));"},{"lineNumber":72,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(\"Now you have \" + storage.size() + \" tasks in the list.\");"},{"lineNumber":73,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println();"},{"lineNumber":74,"author":{"gitId":"RuiXiong2211"},"content":"        current++;"},{"lineNumber":75,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":77,"author":{"gitId":"RuiXiong2211"},"content":"    static void done(int value) throws DukeException {"},{"lineNumber":78,"author":{"gitId":"RuiXiong2211"},"content":"        if (value \u003c\u003d 0 || value \u003e storage.size()) {"},{"lineNumber":79,"author":{"gitId":"RuiXiong2211"},"content":"            throw new DukeException(\"No such list item.\");"},{"lineNumber":80,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"RuiXiong2211"},"content":"        storage.get(value-1).markAsDone();"},{"lineNumber":82,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(\"YOSHA! KONNO TASK GA OWARIMASHITA! GANBARE\");"},{"lineNumber":83,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(storage.get(value - 1));"},{"lineNumber":84,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println();"},{"lineNumber":85,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":87,"author":{"gitId":"RuiXiong2211"},"content":"    /** function that deletes en entry in the list*/"},{"lineNumber":88,"author":{"gitId":"RuiXiong2211"},"content":"    static void delete(int value) {"},{"lineNumber":89,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(\"OK. TASK REMOVED.\");"},{"lineNumber":90,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(storage.get(value - 1));"},{"lineNumber":91,"author":{"gitId":"RuiXiong2211"},"content":"        storage.remove(value - 1);"},{"lineNumber":92,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(\"Now you have \" + storage.size() + \" tasks in the list.\");"},{"lineNumber":93,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println();"},{"lineNumber":94,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"RuiXiong2211"},"content":"    /** function that lists whatever the user has stored.*/"},{"lineNumber":96,"author":{"gitId":"RuiXiong2211"},"content":"    static void listItems() {"},{"lineNumber":97,"author":{"gitId":"RuiXiong2211"},"content":"        if (storage.isEmpty()) {"},{"lineNumber":98,"author":{"gitId":"RuiXiong2211"},"content":"            System.out.println(\"Empty list\");"},{"lineNumber":99,"author":{"gitId":"RuiXiong2211"},"content":"            System.out.println();"},{"lineNumber":100,"author":{"gitId":"RuiXiong2211"},"content":"            cmd \u003d sc.nextLine();"},{"lineNumber":101,"author":{"gitId":"RuiXiong2211"},"content":"        } else {"},{"lineNumber":102,"author":{"gitId":"RuiXiong2211"},"content":"            System.out.println(\"HERE ARE THE TASKS\");"},{"lineNumber":103,"author":{"gitId":"RuiXiong2211"},"content":"            for (int j \u003d 0; j \u003c storage.size(); j++) {"},{"lineNumber":104,"author":{"gitId":"RuiXiong2211"},"content":"                System.out.println((j+1) + \". \" + storage.get(j));"},{"lineNumber":105,"author":{"gitId":"RuiXiong2211"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"RuiXiong2211"},"content":"            System.out.println();"},{"lineNumber":107,"author":{"gitId":"RuiXiong2211"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"RuiXiong2211"},"content":"    /** function that exits the program when the user types bye*/"},{"lineNumber":110,"author":{"gitId":"RuiXiong2211"},"content":"    static void terminate(){"},{"lineNumber":111,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(\"Sayonara, mata ne!\");"},{"lineNumber":112,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println();"},{"lineNumber":113,"author":{"gitId":"RuiXiong2211"},"content":"        sc.close();"},{"lineNumber":114,"author":{"gitId":"RuiXiong2211"},"content":"        exit(0);"},{"lineNumber":115,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":117,"author":{"gitId":"RuiXiong2211"},"content":"    /** function that greets the user*/"},{"lineNumber":118,"author":{"gitId":"RuiXiong2211"},"content":"    static void greet(){"},{"lineNumber":119,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(\"Konnichiwa! watashi wa Duke desu\");"},{"lineNumber":120,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(\"Dou shi mashi taka?\");"},{"lineNumber":121,"author":{"gitId":"RuiXiong2211"},"content":"        System.out.println(\"***********\");"},{"lineNumber":122,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":123}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"    protected String description;"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"    protected boolean isDone;"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"    public Task(String description) {"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"        this.description \u003d description;"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"        this.isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":11,"author":{"gitId":"RuiXiong2211"},"content":"    public String getStatusIcon() {"},{"lineNumber":12,"author":{"gitId":"RuiXiong2211"},"content":"        return (isDone? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":13,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":15,"author":{"gitId":"RuiXiong2211"},"content":"    public void markAsDone() {"},{"lineNumber":16,"author":{"gitId":"RuiXiong2211"},"content":"        this.isDone \u003d true;"},{"lineNumber":17,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":19,"author":{"gitId":"RuiXiong2211"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"RuiXiong2211"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"RuiXiong2211"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":22,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":23}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"public class Todo extends Task{"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"    public Todo(String task) {"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"        super(task);"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"    public String toString() {"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"RuiXiong2211"},"content":"}"}],"authorContributionMap":{"RuiXiong2211":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"RuiXiong2211"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"RuiXiong2211"},"content":"list"},{"lineNumber":3,"author":{"gitId":"RuiXiong2211"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"RuiXiong2211"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"RuiXiong2211"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"RuiXiong2211"},"content":"list"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"bye"},{"lineNumber":8,"author":{"gitId":"RuiXiong2211"},"content":""},{"lineNumber":9,"author":{"gitId":"RuiXiong2211"},"content":""}],"authorContributionMap":{"RuiXiong2211":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"RuiXiong2211"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"RuiXiong2211"},"content":"java -classpath ..\\bin Skeleton \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"RuiXiong2211":2,"-":19}}]
