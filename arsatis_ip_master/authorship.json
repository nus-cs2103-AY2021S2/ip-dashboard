[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"import main.java.exceptions.EmptyDescriptionException;"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"import main.java.exceptions.EmptyTimeException;"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"import main.java.exceptions.InvalidInputException;"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"import main.java.exceptions.ListOutOfBoundsException;"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"import main.java.subfiles.TaskManager;"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":" * The Duke program is an interactive application which"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":" * enables users to store and modify their tasks."},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":" * @version 1.0"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":" * @since   2021-01-19"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"    /** Task manager which manages the tasks created by user input */"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"    private static TaskManager taskManager \u003d new TaskManager();"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"     * Greets the user upon execution of the program."},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"    private static void greet() {"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     * Bids the user farewell before termination of the program."},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"    private static void exit() {"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"     * Calls the task manager to mark a specified task as done"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"     * upon receiving a user input that attempts to mark a task"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     * as done."},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     * @param index Index of the task to be marked as done"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     *              in the list of tasks."},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"    private static void inputDone(String index) {"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"        try {"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"            taskManager.markDone(index);"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"        } catch (InvalidInputException | ListOutOfBoundsException e) {"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"     * Calls the task manager to delete a specified task from"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"     * the list upon receiving a user input that attempts to"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"     * delete a task from the list."},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"     * @param index Index of the task to be deleted"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"     *              in the list of tasks."},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"    private static void inputDelete(String index) {"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"        try {"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"            taskManager.deleteTask(index);"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"        } catch (InvalidInputException | ListOutOfBoundsException e) {"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"     * Calls the task manager to add a specified task to the"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"     * list upon receiving a user input that attempts to add"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"     * a task to the list."},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"     * @param s The user input which demanded for a task to be"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"     *          added to the list."},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"    private static void inputAdd(String s) {"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"        try {"},{"lineNumber":81,"author":{"gitId":"arsatis"},"content":"            taskManager.addTask(s);"},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":"        } catch (EmptyDescriptionException | EmptyTimeException | InvalidInputException e) {"},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"     * Calls the task manager to perform either task addition,"},{"lineNumber":89,"author":{"gitId":"arsatis"},"content":"     * deletion, printing, or marking as done, based on the"},{"lineNumber":90,"author":{"gitId":"arsatis"},"content":"     * user input. Also terminates the program if a terminating"},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":"     * input is supplied by the user."},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"     * @param s A user input."},{"lineNumber":94,"author":{"gitId":"arsatis"},"content":"     * @return True if the user input is not a terminating"},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":"     *         input, and false otherwise."},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"    private static boolean executeInput(String s) {"},{"lineNumber":98,"author":{"gitId":"arsatis"},"content":"        String[] sArray \u003d s.split(\" \");"},{"lineNumber":99,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":100,"author":{"gitId":"arsatis"},"content":"        switch (sArray[0]) {"},{"lineNumber":101,"author":{"gitId":"arsatis"},"content":"        case \"bye\":"},{"lineNumber":102,"author":{"gitId":"arsatis"},"content":"            return false;"},{"lineNumber":103,"author":{"gitId":"arsatis"},"content":"        case \"list\":"},{"lineNumber":104,"author":{"gitId":"arsatis"},"content":"            taskManager.printTasks();"},{"lineNumber":105,"author":{"gitId":"arsatis"},"content":"            break;"},{"lineNumber":106,"author":{"gitId":"arsatis"},"content":"        case \"done\":"},{"lineNumber":107,"author":{"gitId":"arsatis"},"content":"            inputDone(sArray[1]);"},{"lineNumber":108,"author":{"gitId":"arsatis"},"content":"            break;"},{"lineNumber":109,"author":{"gitId":"arsatis"},"content":"        case \"delete\":"},{"lineNumber":110,"author":{"gitId":"arsatis"},"content":"            inputDelete(sArray[1]);"},{"lineNumber":111,"author":{"gitId":"arsatis"},"content":"            break;"},{"lineNumber":112,"author":{"gitId":"arsatis"},"content":"        default:"},{"lineNumber":113,"author":{"gitId":"arsatis"},"content":"            inputAdd(s);"},{"lineNumber":114,"author":{"gitId":"arsatis"},"content":"            break;"},{"lineNumber":115,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"arsatis"},"content":"        return true;"},{"lineNumber":117,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":119,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":120,"author":{"gitId":"arsatis"},"content":"     * The main method which is executed when the Duke program"},{"lineNumber":121,"author":{"gitId":"arsatis"},"content":"     * is run."},{"lineNumber":122,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":123,"author":{"gitId":"arsatis"},"content":"     * @param args Unused."},{"lineNumber":124,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":125,"author":{"gitId":"arsatis"},"content":"    public static void main(String[] args) {"},{"lineNumber":126,"author":{"gitId":"arsatis"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":127,"author":{"gitId":"arsatis"},"content":"        boolean hasInput \u003d true;"},{"lineNumber":128,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":129,"author":{"gitId":"arsatis"},"content":"        greet();"},{"lineNumber":130,"author":{"gitId":"arsatis"},"content":"        while (hasInput) {"},{"lineNumber":131,"author":{"gitId":"arsatis"},"content":"            String s \u003d sc.nextLine();"},{"lineNumber":132,"author":{"gitId":"arsatis"},"content":"            hasInput \u003d executeInput(s);"},{"lineNumber":133,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"arsatis"},"content":"        exit();"},{"lineNumber":135,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":136,"author":{"gitId":"arsatis"},"content":"        sc.close();"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"arsatis":136,"-":3}},{"path":"src/main/java/exceptions/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package main.java.exceptions;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":" * The EmptyDescriptionException class is an exception thrown"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":" * by the Task Manager when a description is not supplied for a"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":" * task by the user input."},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * @version 1.0"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" * @since   2021-01-19"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"public class EmptyDescriptionException extends Exception {"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the EmptyDescriptionException class."},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     * @param s The type of task which triggered this exception."},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"    public EmptyDescriptionException(String s) {"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"        super(\"OOPS!!! The description of a \" + s + \" cannot be empty.\");"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":23}},{"path":"src/main/java/exceptions/EmptyTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package main.java.exceptions;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":" * The EmptyTimeException class is an exception thrown"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":" * by the Task Manager when a time is not supplied for a"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":" * deadline or event by the user input."},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * @version 1.0"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" * @since   2021-01-19"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"public class EmptyTimeException extends Exception {"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the EmptyTimeException class."},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     * @param s The type of task which triggered this exception."},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"    public EmptyTimeException(String s) {"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"        super(\"OOPS!!! The time of a \" + s + \" cannot be empty.\");"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":23}},{"path":"src/main/java/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package main.java.exceptions;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":" * The InvalidInputException class is an exception thrown"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":" * by the Task Manager when an invalid input or command is"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":" * supplied by the user."},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * @version 1.0"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" * @since   2021-01-19"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"public class InvalidInputException extends Exception {"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the InvalidInputException class."},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"    public InvalidInputException() {"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":21}},{"path":"src/main/java/exceptions/ListOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package main.java.exceptions;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":" * The ListOutOfBoundsException class is an exception thrown"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":" * by the Task Manager when the user attempts to mark a task"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":" * that is not in the list as done, or delete a task that is"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * not in the list."},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" * @version 1.0"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" * @since   2021-01-19"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"public class ListOutOfBoundsException extends Exception {"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the ListOutOfBoundsException class."},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     * @param size The current size of the list in a TaskManager"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     *             object."},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"    public ListOutOfBoundsException(int size) {"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"        super(\"OOPS!!! The list currently only has \" + size + \" elements.\");"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":25}},{"path":"src/main/java/subfiles/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package main.java.subfiles;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":" * The Deadline class represents a single deadline created by"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":" * the user via user input to the Duke program. It contains"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":" * functions which enable the user to mark the task as done,"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * and a date which the deadline is due."},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" * @version 1.0"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" * @since   2021-01-19"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"public class Deadline extends Task {"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"    /** Date which the deadline is due */"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"    private String date;"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the Deadline class."},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     * @param name Description of the deadline."},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     * @param date Date which the deadline is due."},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    public Deadline(String name, String date) {"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"        super(name);"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"        this.date \u003d date;"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"     * Returns a description of the deadline, formatted with its"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     * type, followed by an \"X\" if it has been marked as done."},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * @return Formatted description of the deadline."},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"        return \"[D][\" + (isDone ? \"X\" : \" \") + \"] \" + name + \" (by: \" + date + \")\";"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":39}},{"path":"src/main/java/subfiles/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package main.java.subfiles;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":" * The Event class represents a single event created by the"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":" * user via user input to the Duke program. It contains"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":" * functions which enable the user to mark the task as done,"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * and a date which the event is held on."},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" * @version 1.0"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" * @since   2021-01-19"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"public class Event extends Task {"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"    /** Date which the event is held on */"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"    private String date;"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the Event class."},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     * @param name Description of the event."},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     * @param date Date which the event is held on."},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    public Event(String name, String date) {"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"        super(name);"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"        this.date \u003d date;"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"     * Returns a description of the event, formatted with its"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     * type, followed by an \"X\" if it has been marked as done."},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * @return Formatted description of the event."},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"        return \"[E][\" + (isDone ? \"X\" : \" \") + \"] \" + name + \" (at: \" + date + \")\";"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":39}},{"path":"src/main/java/subfiles/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package main.java.subfiles;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":" * The Task class represents a single task created by the"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":" * user via user input to the Duke program. It contains"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":" * functions which enable the user to mark the task as done."},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * @version 1.0"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" * @since   2021-01-19"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"public class Task {"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"    /** Description of the task */"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"    protected String name;"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"    /** Indicates whether the task has been done by the user */"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"    protected boolean isDone;"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the Task class."},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     * @param name Description of the task."},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"    public Task(String name) {"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"        this.name \u003d name;"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"        isDone \u003d false;"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     * Checks whether the task has been marked as done."},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * @return True if the task has been marked as done, and"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     *         false otherwise."},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"    public boolean isDone() {"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"        return isDone;"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"     * Sets the isDone field to true, indicating that the task"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"     * has been marked as done."},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"    public void setDone() {"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"        isDone \u003d true;"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"     * Returns a description of the task, formatted with an"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     * \"X\" if it has been marked as done."},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"     * @return Formatted description of the task."},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"    public String toString() {"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"        return \"[ ][\" + (isDone ? \"X\" : \" \") + \"] \" + name;"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":58}},{"path":"src/main/java/subfiles/TaskManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package main.java.subfiles;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"import main.java.exceptions.EmptyDescriptionException;"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"import main.java.exceptions.EmptyTimeException;"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"import main.java.exceptions.InvalidInputException;"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"import main.java.exceptions.ListOutOfBoundsException;"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" * The TaskManager class contains a list of tasks created by"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":" * user input, and allows the user to add, print, or delete"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":" * tasks, as well as to mark a task in the list as done."},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":" * @version 1.0"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":" * @since   2021-01-19"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"public class TaskManager {"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    /** List of tasks created by user input */"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the TaskManager class."},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"    public TaskManager() {"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     * Adds a to-do to the list of tasks."},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     * @param s User input triggering the addition of a to-do"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     *          to the list of tasks."},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     * @throws EmptyDescriptionException If no description is provided"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     *                                   for the to-do."},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"    private void addTodo(String s)"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"            throws EmptyDescriptionException {"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"            s \u003d s.substring(5);"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"            tasks.add(new ToDo(s));"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"            throw new EmptyDescriptionException(\"todo\");"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     * Adds a deadline to the list of tasks."},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"     * @param s User input triggering the addition of a deadline"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"     *          to the list of tasks."},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"     * @throws EmptyDescriptionException If no description is provided"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     *                                   for the deadline."},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"     * @throws EmptyTimeException If no date or time is specified for"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"     *                            the deadline."},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"    private void addDeadline(String s)"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"            throws EmptyDescriptionException, EmptyTimeException {"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"        try {"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"            String[] sArray \u003d s.split(\"/\", 2);"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"            s \u003d sArray[0].substring(9, sArray[0].length() - 1);"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"            String t \u003d sArray[1].substring(3);"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"            tasks.add(new Deadline(s, t));"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"            throw new EmptyDescriptionException(\"deadline\");"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"            throw new EmptyTimeException(\"deadline\");"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"     * Adds an event to the list of tasks."},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"     * @param s User input triggering the addition of an event"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"     *          to the list of tasks."},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"     * @throws EmptyDescriptionException If no description is provided"},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"     *                                   for the event."},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"     * @throws EmptyTimeException If no date or time is specified for"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"     *                            the event."},{"lineNumber":81,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":"    private void addEvent(String s)"},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"            throws EmptyDescriptionException, EmptyTimeException {"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"        try {"},{"lineNumber":85,"author":{"gitId":"arsatis"},"content":"            String[] sArray \u003d s.split(\"/\", 2);"},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":"            s \u003d sArray[0].substring(6, sArray[0].length() - 1);"},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":"            String t \u003d sArray[1].substring(3);"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"            tasks.add(new Event(s, t));"},{"lineNumber":89,"author":{"gitId":"arsatis"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":90,"author":{"gitId":"arsatis"},"content":"            throw new EmptyDescriptionException(\"event\");"},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"            throw new EmptyTimeException(\"event\");"},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"     * Adds a task to the list of tasks. Calls either addTodo,"},{"lineNumber":98,"author":{"gitId":"arsatis"},"content":"     * addDeadline, or addEvent, depending on the type of task"},{"lineNumber":99,"author":{"gitId":"arsatis"},"content":"     * specified by the user."},{"lineNumber":100,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":101,"author":{"gitId":"arsatis"},"content":"     * @param s User input triggering the addition of a task"},{"lineNumber":102,"author":{"gitId":"arsatis"},"content":"     *          to the list of tasks."},{"lineNumber":103,"author":{"gitId":"arsatis"},"content":"     * @throws EmptyDescriptionException If no description is provided"},{"lineNumber":104,"author":{"gitId":"arsatis"},"content":"     *                                   for the task."},{"lineNumber":105,"author":{"gitId":"arsatis"},"content":"     * @throws EmptyTimeException If no date or time is specified for"},{"lineNumber":106,"author":{"gitId":"arsatis"},"content":"     *                            the task, which is either a deadline"},{"lineNumber":107,"author":{"gitId":"arsatis"},"content":"     *                            or an event."},{"lineNumber":108,"author":{"gitId":"arsatis"},"content":"     * @throws InvalidInputException If the task is neither a to-do, a"},{"lineNumber":109,"author":{"gitId":"arsatis"},"content":"     *                               deadline, nor an event."},{"lineNumber":110,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"arsatis"},"content":"    public void addTask(String s)"},{"lineNumber":112,"author":{"gitId":"arsatis"},"content":"            throws EmptyDescriptionException, EmptyTimeException, InvalidInputException {"},{"lineNumber":113,"author":{"gitId":"arsatis"},"content":"        String command \u003d s.split(\" \", 2)[0];"},{"lineNumber":114,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":115,"author":{"gitId":"arsatis"},"content":"        switch (command) {"},{"lineNumber":116,"author":{"gitId":"arsatis"},"content":"        case \"todo\":"},{"lineNumber":117,"author":{"gitId":"arsatis"},"content":"            addTodo(s);"},{"lineNumber":118,"author":{"gitId":"arsatis"},"content":"            break;"},{"lineNumber":119,"author":{"gitId":"arsatis"},"content":"        case \"deadline\":"},{"lineNumber":120,"author":{"gitId":"arsatis"},"content":"            addDeadline(s);"},{"lineNumber":121,"author":{"gitId":"arsatis"},"content":"            break;"},{"lineNumber":122,"author":{"gitId":"arsatis"},"content":"        case \"event\":"},{"lineNumber":123,"author":{"gitId":"arsatis"},"content":"            addEvent(s);"},{"lineNumber":124,"author":{"gitId":"arsatis"},"content":"            break;"},{"lineNumber":125,"author":{"gitId":"arsatis"},"content":"        default:"},{"lineNumber":126,"author":{"gitId":"arsatis"},"content":"            throw new InvalidInputException();"},{"lineNumber":127,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":129,"author":{"gitId":"arsatis"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":130,"author":{"gitId":"arsatis"},"content":"        System.out.println(tasks.get(tasks.size() - 1).toString());"},{"lineNumber":131,"author":{"gitId":"arsatis"},"content":"        System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":132,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":134,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"arsatis"},"content":"     * Prints the list of tasks added by the user till this point,"},{"lineNumber":136,"author":{"gitId":"arsatis"},"content":"     * based on the order they were added by the user."},{"lineNumber":137,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":138,"author":{"gitId":"arsatis"},"content":"    public void printTasks() {"},{"lineNumber":139,"author":{"gitId":"arsatis"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":140,"author":{"gitId":"arsatis"},"content":"        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {"},{"lineNumber":141,"author":{"gitId":"arsatis"},"content":"            Task task \u003d tasks.get(i - 1);"},{"lineNumber":142,"author":{"gitId":"arsatis"},"content":"            System.out.println(i + \". \" + task.toString());"},{"lineNumber":143,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":144,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":146,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":147,"author":{"gitId":"arsatis"},"content":"     * Marks a task that is specified by the user as done. The"},{"lineNumber":148,"author":{"gitId":"arsatis"},"content":"     * user should specify the index of the task in the list"},{"lineNumber":149,"author":{"gitId":"arsatis"},"content":"     * which he or she intends to mark as done."},{"lineNumber":150,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":151,"author":{"gitId":"arsatis"},"content":"     * @param s Index of the task to be marked as done"},{"lineNumber":152,"author":{"gitId":"arsatis"},"content":"     *          in the list of tasks, in String format."},{"lineNumber":153,"author":{"gitId":"arsatis"},"content":"     * @throws InvalidInputException If the user provided a non-integer index"},{"lineNumber":154,"author":{"gitId":"arsatis"},"content":"     *                               in the user input."},{"lineNumber":155,"author":{"gitId":"arsatis"},"content":"     * @throws ListOutOfBoundsException If the user provided an index which is"},{"lineNumber":156,"author":{"gitId":"arsatis"},"content":"     *                                  not in the list."},{"lineNumber":157,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":158,"author":{"gitId":"arsatis"},"content":"    public void markDone(String s)"},{"lineNumber":159,"author":{"gitId":"arsatis"},"content":"            throws InvalidInputException, ListOutOfBoundsException {"},{"lineNumber":160,"author":{"gitId":"arsatis"},"content":"        try {"},{"lineNumber":161,"author":{"gitId":"arsatis"},"content":"            int index \u003d Integer.parseInt(s) - 1;"},{"lineNumber":162,"author":{"gitId":"arsatis"},"content":"            tasks.get(index).setDone();"},{"lineNumber":163,"author":{"gitId":"arsatis"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":164,"author":{"gitId":"arsatis"},"content":"            System.out.println(tasks.get(index).toString());"},{"lineNumber":165,"author":{"gitId":"arsatis"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":166,"author":{"gitId":"arsatis"},"content":"            throw new InvalidInputException();"},{"lineNumber":167,"author":{"gitId":"arsatis"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":168,"author":{"gitId":"arsatis"},"content":"            throw new ListOutOfBoundsException(tasks.size());"},{"lineNumber":169,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":170,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":172,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":173,"author":{"gitId":"arsatis"},"content":"     * Deletes a task that is specified by the user from the"},{"lineNumber":174,"author":{"gitId":"arsatis"},"content":"     * list of tasks. The user should specify the index of the"},{"lineNumber":175,"author":{"gitId":"arsatis"},"content":"     * task in the list which he or she intends to delete."},{"lineNumber":176,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":177,"author":{"gitId":"arsatis"},"content":"     * @param s Index of the task to be marked as done"},{"lineNumber":178,"author":{"gitId":"arsatis"},"content":"     *          in the list of tasks, in String format."},{"lineNumber":179,"author":{"gitId":"arsatis"},"content":"     * @throws InvalidInputException If the user provided a non-integer index"},{"lineNumber":180,"author":{"gitId":"arsatis"},"content":"     *                               in the user input."},{"lineNumber":181,"author":{"gitId":"arsatis"},"content":"     * @throws ListOutOfBoundsException If the user provided an index which is"},{"lineNumber":182,"author":{"gitId":"arsatis"},"content":"     *                                  not in the list."},{"lineNumber":183,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":184,"author":{"gitId":"arsatis"},"content":"    public void deleteTask(String s) throws InvalidInputException, ListOutOfBoundsException {"},{"lineNumber":185,"author":{"gitId":"arsatis"},"content":"        try {"},{"lineNumber":186,"author":{"gitId":"arsatis"},"content":"            int index \u003d Integer.parseInt(s) - 1;"},{"lineNumber":187,"author":{"gitId":"arsatis"},"content":"            Task t \u003d tasks.remove(index);"},{"lineNumber":188,"author":{"gitId":"arsatis"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":189,"author":{"gitId":"arsatis"},"content":"            System.out.println(t.toString());"},{"lineNumber":190,"author":{"gitId":"arsatis"},"content":"            System.out.println(\"Now you have \" + tasks.size() + \" tasks in the list.\");"},{"lineNumber":191,"author":{"gitId":"arsatis"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":192,"author":{"gitId":"arsatis"},"content":"            throw new InvalidInputException();"},{"lineNumber":193,"author":{"gitId":"arsatis"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":194,"author":{"gitId":"arsatis"},"content":"            throw new ListOutOfBoundsException(tasks.size());"},{"lineNumber":195,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":196,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":198,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":198}},{"path":"src/main/java/subfiles/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package main.java.subfiles;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":" * The ToDo class represents a single to-do item created by the"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":" * user via user input to the Duke program. It contains"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":" * functions which enable the user to mark the to-do as done."},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * @version 1.0"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" * @since   2021-01-19"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"public class ToDo extends Task {"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the ToDo class."},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     * @param name Description of the to-do."},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"    public ToDo(String name) {"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"        super(name);"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"     * Returns a description of the to-do, formatted with its"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"     * type, followed by an \"X\" if it has been marked as done."},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     * @return Formatted description of the to-do."},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"    public String toString() {"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"        return \"[T][\" + (isDone ? \"X\" : \" \") + \"] \" + name;"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"list"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"done 4"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"delete 3"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"delete 3"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"list"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"bye"}],"authorContributionMap":{"arsatis":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"javac -sourcepath ..\\src -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"java -classpath ..\\bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"arsatis":2,"-":19}}]
