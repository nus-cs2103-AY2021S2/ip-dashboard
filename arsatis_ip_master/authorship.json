[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"    mainClassName \u003d \"chadbot.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"    archiveBaseName \u003d \"chadbot\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"    toolVersion \u003d \u00278.32\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"    enableAssertions \u003d true"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"arsatis":19,"-":43}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"# Chadbot - User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"## Introduction"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"**Chadbot** is a greenfield Java project modified from the _Duke_ project. The project was created for NUS\u0027s software"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"engineering module, CS2103T."},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"Chadbot is a simple application which will help you keep track of your tasks. Chadbot differentiates between the"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"following types of tasks:"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"* Todos: Tasks without any special features."},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"* Deadlines: Tasks which are to be completed by a specified date."},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"* Events: Tasks which are held on a specified date."},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"## Features"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"1. **Create:** adds a task into the task list."},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"    ```"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"   todo \u003cdescription\u003e"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"   deadline \u003cdescription\u003e /by \u003cdate\u003e"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"   event \u003cdescription\u003e /at \u003cdate\u003e"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"1. **Read:** shows the tasks in the task list."},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"    ```"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"   list"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"   ```"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"1. **Update:** edits a task in the task list."},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"    ```"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"   edit \u003cindex\u003e /desc \u003cdescription\u003e"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"   edit \u003cindex\u003e /date \u003cdate\u003e"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"   ```"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"1. **Delete:** removes a task from the task list."},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"    ```"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"   delete \u003cindex\u003e"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"   ```"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"1. **Exit:** terminates Chadbot."},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"    ```"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"   bye"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"   ```"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"1. **Search:** finds a list of tasks associated with a date or containing a keyword."},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"    ```"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"   list \u003cdate\u003e"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"   find \u003ckeyword\u003e"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"   ```"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"1. **Mark:** marks a task in the task list as done."},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"    ```"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"   done \u003cindex\u003e"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"   ```"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"1. **Arrange:** sorts the list of tasks into the specified ordering."},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"    ```"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"   sort"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"   sort /by type"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"   sort /by date"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"   ```"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"1. **Stats:** shows the tally of to-dos, deadlines, and events in the task list."},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"    ```"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"   stats"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"   ```"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"1. **Help:** displays a help page containing commands supported by Chadbot."},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"    ```"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"   help"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"   help /more"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"   ```"},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":63,"author":{"gitId":"-"},"content":""},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"1. ### Create"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"    * `todo \u003cdescription\u003e` - Adds a _to-do_ to the task list."},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"        **Example of usage:** `todo cs2103t ip`"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"        "},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"        Adds a simple _to-do_ with description \"cs2103t ip\" to the back of the task list."},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"        **Expected outcome:**"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"        "},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"        ![todo](images/todo.png)"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"    * `deadline \u003cdescription\u003e /by \u003cdate\u003e` - Adds a _deadline_ to the task list."},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"        **Example of usage:** `deadline cs2104 tutorial /by 2021-02-12`"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"        "},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"        Adds a _deadline_ with description \"cs2104 tutorial\" and due date \"2021-02-12\" to the back of the task list."},{"lineNumber":81,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":"        **Expected outcome:**"},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"        ![deadline](images/deadline.png)"},{"lineNumber":85,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":"    * `event \u003cdescription\u003e /at \u003cdate\u003e` - Adds an _event_ to the task list."},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"        **Example of usage:** `event cs2105 exam /at 2021-03-21`"},{"lineNumber":89,"author":{"gitId":"arsatis"},"content":"        "},{"lineNumber":90,"author":{"gitId":"arsatis"},"content":"        Adds an _event_ with description \"cs2105 exam\" and date \"2021-03-21\" to the back of the task list."},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"        **Expected outcome:**"},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":94,"author":{"gitId":"arsatis"},"content":"        ![event](images/event.png)"},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"1. ### Read"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":" "},{"lineNumber":98,"author":{"gitId":"arsatis"},"content":"    * `list` - Shows all task(s) in the task list."},{"lineNumber":99,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":100,"author":{"gitId":"arsatis"},"content":"        **Example of usage:** `list`"},{"lineNumber":101,"author":{"gitId":"arsatis"},"content":"        "},{"lineNumber":102,"author":{"gitId":"arsatis"},"content":"        Prints the three tasks that were previously added on the GUI."},{"lineNumber":103,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":104,"author":{"gitId":"arsatis"},"content":"        **Expected outcome:**"},{"lineNumber":105,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":106,"author":{"gitId":"arsatis"},"content":"        ![list](images/list.png)"},{"lineNumber":107,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":108,"author":{"gitId":"arsatis"},"content":"1. ### Update"},{"lineNumber":109,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":110,"author":{"gitId":"arsatis"},"content":"    * `edit \u003cindex\u003e /desc \u003cdescription\u003e` - Edits the description of a task in the task list."},{"lineNumber":111,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":112,"author":{"gitId":"arsatis"},"content":"        **Example of usage:** `edit 1 /desc cs2103t tp-gui`"},{"lineNumber":113,"author":{"gitId":"arsatis"},"content":"        "},{"lineNumber":114,"author":{"gitId":"arsatis"},"content":"        Updates the description of the task at index 1 to \"cs2103t tp-gui\"."},{"lineNumber":115,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":116,"author":{"gitId":"arsatis"},"content":"        **Expected outcome:**"},{"lineNumber":117,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":118,"author":{"gitId":"arsatis"},"content":"        ![edit-description](images/edit-desc.png)"},{"lineNumber":119,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":120,"author":{"gitId":"arsatis"},"content":"    * `edit \u003cindex\u003e /date \u003cdate\u003e` - Edits the date of a task in the task list."},{"lineNumber":121,"author":{"gitId":"arsatis"},"content":"    "},{"lineNumber":122,"author":{"gitId":"arsatis"},"content":"        **Example of usage:** `edit 2 /date 2021-03-01`"},{"lineNumber":123,"author":{"gitId":"arsatis"},"content":"        "},{"lineNumber":124,"author":{"gitId":"arsatis"},"content":"        Updates the date of the task at index 2 to \"2021-03-01\"."},{"lineNumber":125,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":126,"author":{"gitId":"arsatis"},"content":"        **Expected outcome:**"},{"lineNumber":127,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":128,"author":{"gitId":"arsatis"},"content":"        ![edit-date](images/edit-date.png)"},{"lineNumber":129,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":130,"author":{"gitId":"arsatis"},"content":"1. ### Delete"},{"lineNumber":131,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":132,"author":{"gitId":"arsatis"},"content":"    * `delete \u003cindex\u003e` - Removes a task from the task list."},{"lineNumber":133,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":134,"author":{"gitId":"arsatis"},"content":"        **Example of usage:** `delete 1`"},{"lineNumber":135,"author":{"gitId":"arsatis"},"content":"        "},{"lineNumber":136,"author":{"gitId":"arsatis"},"content":"        Deletes the task at index 1 from the task list."},{"lineNumber":137,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":138,"author":{"gitId":"arsatis"},"content":"        **Expected outcome:**"},{"lineNumber":139,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":140,"author":{"gitId":"arsatis"},"content":"        ![delete](images/delete.png)"},{"lineNumber":141,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":142,"author":{"gitId":"arsatis"},"content":"1. ### Exit"},{"lineNumber":143,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":144,"author":{"gitId":"arsatis"},"content":"    * `bye` - Terminates the Chadbot application."},{"lineNumber":145,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":146,"author":{"gitId":"arsatis"},"content":"        **Example of usage:** `bye`"},{"lineNumber":147,"author":{"gitId":"arsatis"},"content":"        "},{"lineNumber":148,"author":{"gitId":"arsatis"},"content":"        A bye message appears, and the application closes after a 0.5 second delay."},{"lineNumber":149,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":150,"author":{"gitId":"arsatis"},"content":"        **Expected outcome:**"},{"lineNumber":151,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":152,"author":{"gitId":"arsatis"},"content":"        ![bye](images/bye.png)"},{"lineNumber":153,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":154,"author":{"gitId":"arsatis"},"content":"1. ### Search"},{"lineNumber":155,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":156,"author":{"gitId":"arsatis"},"content":"    * `list \u003cdate\u003e` - Finds a list of deadlines and events associated with the given date."},{"lineNumber":157,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":158,"author":{"gitId":"arsatis"},"content":"        **Example of usage:** `list 2021-03-01`"},{"lineNumber":159,"author":{"gitId":"arsatis"},"content":"        "},{"lineNumber":160,"author":{"gitId":"arsatis"},"content":"        Prints a list of deadlines due and events happening on \"2021-03-01\"."},{"lineNumber":161,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":162,"author":{"gitId":"arsatis"},"content":"        **Expected outcome:**"},{"lineNumber":163,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":164,"author":{"gitId":"arsatis"},"content":"        ![find-date](images/find-date.png)"},{"lineNumber":165,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":166,"author":{"gitId":"arsatis"},"content":"    * `find \u003ckeyword\u003e` - Finds a list of tasks associated with the given keyword."},{"lineNumber":167,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":168,"author":{"gitId":"arsatis"},"content":"        **Example of usage:** `find cs2105`"},{"lineNumber":169,"author":{"gitId":"arsatis"},"content":"        "},{"lineNumber":170,"author":{"gitId":"arsatis"},"content":"        Prints a list of tasks containing the keyword \"cs2105\"."},{"lineNumber":171,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":172,"author":{"gitId":"arsatis"},"content":"        **Expected outcome:**"},{"lineNumber":173,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":174,"author":{"gitId":"arsatis"},"content":"        ![find-keyword](images/find-keyword.png)"},{"lineNumber":175,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":176,"author":{"gitId":"arsatis"},"content":"1. ### Mark"},{"lineNumber":177,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":178,"author":{"gitId":"arsatis"},"content":"    * `done \u003cindex\u003e` - Marks a task in the task list as done."},{"lineNumber":179,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":180,"author":{"gitId":"arsatis"},"content":"        **Example of usage:** `done 1`"},{"lineNumber":181,"author":{"gitId":"arsatis"},"content":"        "},{"lineNumber":182,"author":{"gitId":"arsatis"},"content":"        Marks the task at index 1 as done."},{"lineNumber":183,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":184,"author":{"gitId":"arsatis"},"content":"        **Expected outcome:**"},{"lineNumber":185,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":186,"author":{"gitId":"arsatis"},"content":"        ![done](images/done.png)"},{"lineNumber":187,"author":{"gitId":"arsatis"},"content":"        "},{"lineNumber":188,"author":{"gitId":"arsatis"},"content":"1. ### Arrange"},{"lineNumber":189,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":190,"author":{"gitId":"arsatis"},"content":"    * `sort` - Sorts the task list into alphabetical ordering."},{"lineNumber":191,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":192,"author":{"gitId":"arsatis"},"content":"        **Example of usage:** `sort`"},{"lineNumber":193,"author":{"gitId":"arsatis"},"content":"        "},{"lineNumber":194,"author":{"gitId":"arsatis"},"content":"        Sorts the task list into alphabetical ordering."},{"lineNumber":195,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":196,"author":{"gitId":"arsatis"},"content":"        **Expected outcome:**"},{"lineNumber":197,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":198,"author":{"gitId":"arsatis"},"content":"        ![sort-1](images/sort-part-1.png) ![sort-2](images/sort-part-2.png)"},{"lineNumber":199,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":200,"author":{"gitId":"arsatis"},"content":"    * `sort /by type` - Sorts the task list based on the type of the tasks."},{"lineNumber":201,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":202,"author":{"gitId":"arsatis"},"content":"        **Example of usage:** `sort /by type`"},{"lineNumber":203,"author":{"gitId":"arsatis"},"content":"        "},{"lineNumber":204,"author":{"gitId":"arsatis"},"content":"        Sorts the task list into an order beginning with to-dos, followed by deadlines, and then events."},{"lineNumber":205,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":206,"author":{"gitId":"arsatis"},"content":"        **Expected outcome:**"},{"lineNumber":207,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":208,"author":{"gitId":"arsatis"},"content":"        ![sort-type-1](images/sort-type-1.png) ![sort-type-2](images/sort-type-2.png)"},{"lineNumber":209,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":210,"author":{"gitId":"arsatis"},"content":"    * `sort /by date` - Sorts the task list based on the type of the tasks, and then by their date."},{"lineNumber":211,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":212,"author":{"gitId":"arsatis"},"content":"        **Example of usage:** `sort /by date`"},{"lineNumber":213,"author":{"gitId":"arsatis"},"content":"        "},{"lineNumber":214,"author":{"gitId":"arsatis"},"content":"        Sorts the task list first by their type, and then by their date."},{"lineNumber":215,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":216,"author":{"gitId":"arsatis"},"content":"        **Expected outcome:**"},{"lineNumber":217,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":218,"author":{"gitId":"arsatis"},"content":"        ![sort-date-1](images/sort-date-1.png) ![sort-date-2](images/sort-date-2.png)"},{"lineNumber":219,"author":{"gitId":"arsatis"},"content":"        "},{"lineNumber":220,"author":{"gitId":"arsatis"},"content":"1. ### Stats"},{"lineNumber":221,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":222,"author":{"gitId":"arsatis"},"content":"    * `stats` - Shows the tally of to-dos, deadlines, and events in the task list."},{"lineNumber":223,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":224,"author":{"gitId":"arsatis"},"content":"        **Example of usage:** `stats`"},{"lineNumber":225,"author":{"gitId":"arsatis"},"content":"        "},{"lineNumber":226,"author":{"gitId":"arsatis"},"content":"        Shows the tally of to-dos, deadlines, and events in the task list."},{"lineNumber":227,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":228,"author":{"gitId":"arsatis"},"content":"        **Expected outcome:**"},{"lineNumber":229,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":230,"author":{"gitId":"arsatis"},"content":"        ![stats](images/stats.png)"},{"lineNumber":231,"author":{"gitId":"arsatis"},"content":"        "},{"lineNumber":232,"author":{"gitId":"arsatis"},"content":"1. ### Help"},{"lineNumber":233,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":234,"author":{"gitId":"arsatis"},"content":"    * `help` - Displays a help page containing commands supported by Chadbot."},{"lineNumber":235,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":236,"author":{"gitId":"arsatis"},"content":"        **Example of usage:** `help`"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        "},{"lineNumber":238,"author":{"gitId":"arsatis"},"content":"        Shows the first page of the help sheet."},{"lineNumber":239,"author":{"gitId":"-"},"content":""},{"lineNumber":240,"author":{"gitId":"arsatis"},"content":"        **Expected outcome:**"},{"lineNumber":241,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":242,"author":{"gitId":"arsatis"},"content":"        ![help](images/help-1.png)"},{"lineNumber":243,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":244,"author":{"gitId":"arsatis"},"content":"    * `help /more` - Displays a help page containing commands supported by Chadbot."},{"lineNumber":245,"author":{"gitId":"-"},"content":""},{"lineNumber":246,"author":{"gitId":"arsatis"},"content":"        **Example of usage:** `help /more`"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        "},{"lineNumber":248,"author":{"gitId":"arsatis"},"content":"        Shows the second page of the help sheet."},{"lineNumber":249,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":250,"author":{"gitId":"arsatis"},"content":"        **Expected outcome:**"},{"lineNumber":251,"author":{"gitId":"-"},"content":""},{"lineNumber":252,"author":{"gitId":"arsatis"},"content":"        ![help-more](images/help-2.png)"}],"authorContributionMap":{"arsatis":242,"-":10}},{"path":"src/main/java/chadbot/Chadbot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import chadbot.command.Command;"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import chadbot.subfiles.Parser;"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"import chadbot.subfiles.Storage;"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"import chadbot.subfiles.TaskList;"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"import chadbot.subfiles.Ui;"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" * The Chadbot program is an interactive application which enables users to store and modify their tasks."},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":" * @version 1.2"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":" * @since   2021-02-08"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"public class Chadbot {"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"    /** Task list which manages the tasks created by user input. */"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"    private TaskList taskList;"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    /** Storage which manages the loading and storing of tasks. */"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"    private Storage storage;"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    /** Ui which manages interactions with the user. */"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"    private Ui ui;"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the Duke class."},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"    public Chadbot() {"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"        String pathToFile \u003d \"../data\";"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"        String filename \u003d \"duke.txt\";"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"        taskList \u003d new TaskList();"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"        storage \u003d new Storage(pathToFile, filename);"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"        ui \u003d new Ui();"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"     * Runs the Duke program."},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"    private void run() {"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"        boolean isExit \u003d false;"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"        ui.greet();"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"        storage.loadData(taskList);"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"        while (!isExit) {"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"            String s \u003d ui.readCommand();"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"            ui.showDots();"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"            Command c \u003d Parser.parse(s);"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"            c.execute(taskList, ui);"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"            isExit \u003d c.isExit();"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"            if (!isExit) {"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"                ui.showLine();"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"        storage.saveData(taskList);"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"        ui.bye();"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"     * The main method which is executed when the Chadbot program is executed."},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"     * @param args Unused."},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"    public static void main(String[] args) {"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"        new Chadbot().run();"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"     * Returns the storage associated with this Chadbot object."},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"     * @return The storage associated with this Chadbot object."},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"    public Storage getStorage() {"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"        return storage;"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"     * Returns the task list associated with this Chadbot object."},{"lineNumber":81,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":"     * @return The task list associated with this Chadbot object."},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"    public TaskList getTaskList() {"},{"lineNumber":85,"author":{"gitId":"arsatis"},"content":"        return taskList;"},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"arsatis"},"content":"     * Generates a response to the user input."},{"lineNumber":90,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":"     * @param input User input."},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"     * @return Duke\u0027s response to the user input."},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"arsatis"},"content":"    public String getResponse(String input) {"},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":"        Command c \u003d Parser.parse(input);"},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"        return c.execute(taskList, ui);"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":99,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"arsatis":98,"-":1}},{"path":"src/main/java/chadbot/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * @version 1.2"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" * @since   2021-02-08"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"public class Launcher {"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the Launcher class."},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     * @param args Unused."},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"    public static void main(String[] args) {"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":23}},{"path":"src/main/java/chadbot/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"import chadbot.gui.MainWindow;"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":" * A GUI for Duke using FXML."},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":" * @version 1.2"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":" * @since   2021-02-08"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"public class Main extends Application {"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    /** Duke object which crafts responses for user inputs. */"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"    private Chadbot chadbot \u003d new Chadbot();"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"     * Runs the GUI for the Duke program."},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     * @param stage The stage for the application."},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"    public void start(Stage stage) {"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"            String filename \u003d \"/view/MainWindow.fxml\";"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(filename));"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"            stage.setScene(scene);"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(chadbot);"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"            stage.show();"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"        } catch (IOException e) {"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"            e.printStackTrace();"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":44}},{"path":"src/main/java/chadbot/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.command;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import chadbot.exceptions.DateFormatException;"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import chadbot.exceptions.EmptyDateException;"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"import chadbot.exceptions.EmptyDescriptionException;"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"import chadbot.exceptions.InvalidInputException;"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"import chadbot.subfiles.TaskList;"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"import chadbot.subfiles.Ui;"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" * The AddCommand class is a command whose execution triggers the addition of a task into the TaskList,"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":" * based on the user input."},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":" * @version 1.2"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":" * @since   2021-02-08"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"public class AddCommand extends Command {"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the AddCommand class."},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"     * @param command The user input formatted as a String object."},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"    public AddCommand(String command) {"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"        super(command);"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     * Calls the task manager to add a specified task to the list upon receiving a user input that attempts to"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     * add a task to the list."},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     * @param taskList A TaskList object containing the list of tasks which the program currently has."},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     * @param ui A Ui object which the current program is using to manage interactions with the user."},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     * @return Duke\u0027s response to the user."},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"    public String execute(TaskList taskList, Ui ui) {"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"            return taskList.addTask(command);"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"        } catch (EmptyDescriptionException | EmptyDateException | InvalidInputException"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"                | DateFormatException e) {"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"            ui.showError(e.getMessage());"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"            return e.getMessage();"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     * Returns true if the command is an ExitCommand, and false otherwise."},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"     * @return False, since this is not an ExitCommand."},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"    public boolean isExit() {"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"        return false;"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":58}},{"path":"src/main/java/chadbot/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.command;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import chadbot.subfiles.TaskList;"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import chadbot.subfiles.Ui;"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * The Command class is an abstract class which provides methods which the other Command subclasses"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" * have to necessarily implement."},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" * @version 1.2"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":" * @since   2021-02-08"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"public abstract class Command {"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"    /** The user input formatted as a String object. */"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"    protected String command;"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the Command class."},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     * @param command The user input formatted as a String object."},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    public Command(String command) {"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"        this.command \u003d command;"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"     * Executes an action, based on the type of the command."},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     * @param taskList A TaskList object containing the list of tasks which the program currently has."},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     * @param ui A Ui object which the current program is using to manage interactions with the user."},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * @return Duke\u0027s response to the user."},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"    public abstract String execute(TaskList taskList, Ui ui);"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"     * Returns true if the command is an ExitCommand, and false otherwise."},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"    public abstract boolean isExit();"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":41}},{"path":"src/main/java/chadbot/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.command;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import chadbot.exceptions.InvalidInputException;"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import chadbot.exceptions.ListOutOfBoundsException;"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"import chadbot.subfiles.TaskList;"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"import chadbot.subfiles.Ui;"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * The DeleteCommand class is a command whose execution triggers the deletion of a task from the TaskList,"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" * based on the user input."},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":" * @version 1.2"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":" * @since   2021-02-08"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the DeleteCommand class."},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     * @param command The user input formatted as a String object."},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    public DeleteCommand(String command) {"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"        super(command);"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"        assert(command !\u003d null \u0026\u0026 !command.equals(\"\"));"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     * Calls the task manager to delete a specified task from the list upon receiving a user input that attempts"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     * to delete a task from the list."},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     * @param taskList A TaskList object containing the list of tasks which the program currently has."},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     * @param ui A Ui object which the current program is using to manage interactions with the user."},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     * @return Duke\u0027s response to the user."},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"    public String execute(TaskList taskList, Ui ui) {"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"            return taskList.deleteTask(command);"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"        } catch (InvalidInputException | ListOutOfBoundsException e) {"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"            ui.showError(e.getMessage());"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"            return e.getMessage();"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"     * Returns true if the command is an ExitCommand, and false otherwise."},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"     * @return False, since this is not an ExitCommand."},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"    public boolean isExit() {"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"        return false;"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":57}},{"path":"src/main/java/chadbot/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.command;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import chadbot.exceptions.InvalidInputException;"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import chadbot.exceptions.ListOutOfBoundsException;"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"import chadbot.subfiles.TaskList;"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"import chadbot.subfiles.Ui;"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * The DoneCommand class is a command whose execution triggers the marking of a task in the TaskList as done,"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" * based on the user input."},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":" * @version 1.2"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":" * @since   2021-02-08"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"public class DoneCommand extends Command {"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the DoneCommand class."},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     * @param command The user input formatted as a String object."},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    public DoneCommand(String command) {"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"        super(command);"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"        assert(command !\u003d null \u0026\u0026 !command.equals(\"\"));"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     * Calls the task manager to mark a specified task as done upon receiving a user input that attempts to"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     * mark a task as done."},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     * @param taskList A TaskList object containing the list of tasks which the program currently has."},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     * @param ui A Ui object which the current program is using to manage interactions with the user."},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     * @return Duke\u0027s response to the user."},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"    public String execute(TaskList taskList, Ui ui) {"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"            return taskList.markDone(command);"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"        } catch (InvalidInputException | ListOutOfBoundsException e) {"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"            ui.showError(e.getMessage());"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"            return e.getMessage();"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"     * Returns true if the command is an ExitCommand, and false otherwise."},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"     * @return False, since this is not an ExitCommand."},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"    public boolean isExit() {"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"        return false;"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":57}},{"path":"src/main/java/chadbot/command/EditCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.command;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import chadbot.exceptions.DateFormatException;"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import chadbot.exceptions.InvalidInputException;"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"import chadbot.exceptions.ListOutOfBoundsException;"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"import chadbot.exceptions.TaskTypeErrorException;"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"import chadbot.subfiles.TaskList;"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"import chadbot.subfiles.Ui;"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" * The EditCommand class is a command whose execution triggers the editing of a task in the TaskList,"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":" * based on the user input."},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":" * @version 1.2"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":" * @since   2021-02-08"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"public class EditCommand extends Command {"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the EditCommand class."},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"     * @param command The user input formatted as a String object."},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"    public EditCommand(String command) {"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"        super(command);"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"        assert(command !\u003d null \u0026\u0026 !command.equals(\"\"));"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * Calls the task manager to edit a specified task."},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     * @param taskList A TaskList object containing the list of tasks which the program currently has."},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     * @param ui A Ui object which the current program is using to manage interactions with the user."},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     * @return Duke\u0027s response to the user."},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"    public String execute(TaskList taskList, Ui ui) {"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"            return taskList.editTask(command);"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"        } catch (InvalidInputException | ListOutOfBoundsException | TaskTypeErrorException | DateFormatException e) {"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"            ui.showError(e.getMessage());"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"            return e.getMessage();"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     * Returns true if the command is an ExitCommand, and false otherwise."},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"     * @return False, since this is not an ExitCommand."},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"    public boolean isExit() {"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"        return false;"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":58}},{"path":"src/main/java/chadbot/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.command;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import chadbot.subfiles.TaskList;"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import chadbot.subfiles.Ui;"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * The ExitCommand class is a command whose execution triggers the Duke program to terminate its execution."},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" * @version 1.2"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" * @since   2021-02-08"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"public class ExitCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the ExitCommand class."},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"    public ExitCommand() {"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"        super(\"\");"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"     * Does nothing."},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"     * @param taskList A TaskList object containing the list of tasks which the program currently has."},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     * @param ui A Ui object which the current program is using to manage interactions with the user."},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     * @return An empty response by Duke."},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"    public String execute(TaskList taskList, Ui ui) {"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"        return \"Bye :)\";"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     * Returns true if the command is an ExitCommand, and false otherwise."},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"     * @return True, since this is the ExitCommand."},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"    public boolean isExit() {"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"        return true;"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":44}},{"path":"src/main/java/chadbot/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.command;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import chadbot.subfiles.TaskList;"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import chadbot.subfiles.Ui;"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * The FindCommand class is a command whose execution triggers the printing of tasks in the TaskList"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" * containing a keyword specified by user input."},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" * @version 1.2"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":" * @since   2021-02-08"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"public class FindCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the FindCommand class."},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     * @param command The user input formatted as a String object."},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"    public FindCommand(String command) {"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"        super(command);"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"        assert(command !\u003d null \u0026\u0026 !command.equals(\"\"));"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"     * Calls the task manager to print a list of tasks in the TaskList containing the specified keyword."},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     * @param taskList A TaskList object containing the list of tasks which the program currently has."},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     * @param ui A Ui object which the current program is using to manage interactions with the user."},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * @return Duke\u0027s response to the user."},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"    public String execute(TaskList taskList, Ui ui) {"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"        return taskList.findTasksWithKeyword(command);"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"     * Returns true if the command is an ExitCommand, and false otherwise."},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     * @return False, since this is not an ExitCommand."},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"    public boolean isExit() {"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"        return false;"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":48}},{"path":"src/main/java/chadbot/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.command;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import chadbot.subfiles.TaskList;"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import chadbot.subfiles.Ui;"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * The HelpCommand class is a command whose execution triggers the display of a help page to users."},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" * @version 1.2"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" * @since   2021-02-08"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"public class HelpCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the HelpCommand class."},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"    public HelpCommand(String command) {"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"        super(command);"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"        assert(command !\u003d null \u0026\u0026 !command.equals(\"\"));"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"     * Calls the task manager to display a help page containing a list of commands which the user could execute."},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     * @param taskList A TaskList object containing the list of tasks which the program currently has."},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"     * @param ui A Ui object which the current program is using to manage interactions with the user."},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"     * @return Duke\u0027s response to the user."},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"    public String execute(TaskList taskList, Ui ui) {"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"        String output \u003d command.toLowerCase().contains(\"/more\")"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"                ? ui.getMoreHelp()"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"                : ui.getHelp();"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"        System.out.println(output);"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"        return output;"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"     * Returns true if the command is an ExitCommand, and false otherwise."},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"     * @return False, since this is not an ExitCommand."},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"    public boolean isExit() {"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"        return false;"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":50}},{"path":"src/main/java/chadbot/command/PrintCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.command;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import chadbot.exceptions.DateFormatException;"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import chadbot.subfiles.TaskList;"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"import chadbot.subfiles.Ui;"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" * The PrintCommand class is a command whose execution triggers the printing of tasks in the TaskList,"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * based on the user input."},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":" * @version 1.2"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":" * @since   2021-02-08"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"public class PrintCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the PrintCommand class."},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     * @param command The user input formatted as a String object."},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"    public PrintCommand(String command) {"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"        super(command);"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"        assert(command !\u003d null \u0026\u0026 !command.equals(\"\"));"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"     * Calls the task manager to either print the entire list of tasks in the TaskList,"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     * or the deadlines and events that are due or happening on the specified date."},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * @param taskList A TaskList object containing the list of tasks which the program currently has."},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     * @param ui A Ui object which the current program is using to manage interactions with the user."},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     * @return Duke\u0027s response to the user."},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"    public String execute(TaskList taskList, Ui ui) {"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"        String[] sArray \u003d command.split(\" \");"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"        if (sArray.length \u003d\u003d 1) {"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"            return taskList.printTasks();"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"        } else {"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"            try {"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"                return taskList.printTasksOnDate(sArray[1]);"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"            } catch (DateFormatException e) {"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"                ui.showError(e.getMessage());"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"                return e.getMessage();"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"     * Returns true if the command is an ExitCommand, and false otherwise."},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"     * @return False, since this is not an ExitCommand."},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"    public boolean isExit() {"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"        return false;"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":62}},{"path":"src/main/java/chadbot/command/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.command;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import chadbot.subfiles.TaskList;"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import chadbot.subfiles.Ui;"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * The SortCommand class is a command whose execution triggers the sorting of the TaskList,"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" * the type of sorting done is based on the user input."},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" * @version 1.2"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":" * @since   2021-02-08"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"public class SortCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the SortCommand class."},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     * @param command The user input formatted as a String object."},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"    public SortCommand(String command) {"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"        super(command);"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"        assert(command !\u003d null \u0026\u0026 !command.equals(\"\"));"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"     * Calls the task manager to sort the task list upon receiving a user input that attempts to sort the list."},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"     * The default mode of sorting is by alphabetical ordering of the tasks."},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     * @param taskList A TaskList object containing the list of tasks which the program currently has."},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * @param ui A Ui object which the current program is using to manage interactions with the user."},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     * @return Duke\u0027s response to the user."},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"    public String execute(TaskList taskList, Ui ui) {"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"        if (command.contains(\"date\")) {"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"            taskList.sortTasksByTypeAndDate();"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"        } else if (command.contains(\"type\")) {"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"            taskList.sortTasksByType();"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"        } else {"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"            taskList.sortTasksByName();"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"        String output \u003d \"Tasks sorted!\";"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"        System.out.println(output);"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"        return output;"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"     * Returns true if the command is an ExitCommand, and false otherwise."},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"     * @return False, since this is not an ExitCommand."},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"    public boolean isExit() {"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"        return false;"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":60}},{"path":"src/main/java/chadbot/command/StatsCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.command;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import chadbot.subfiles.TaskList;"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import chadbot.subfiles.Ui;"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * The StatsCommand class is a command whose execution triggers the output of the current number of tasks"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" * the user has in his or her task list."},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" * @version 1.2"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":" * @since   2021-02-08"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"public class StatsCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the StatsCommand class."},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"    public StatsCommand() {"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"        super(\"\");"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"     * Calls the task manager to output the number of to-dos, deadlines, and events that the user currently has."},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     * @param taskList A TaskList object containing the list of tasks which the program currently has."},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     * @param ui A Ui object which the current program is using to manage interactions with the user."},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"     * @return Duke\u0027s response to the user."},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"    public String execute(TaskList taskList, Ui ui) {"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"        String output \u003d taskList.displayStats();"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"        System.out.println(output);"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"        return output;"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"     * Returns true if the command is an ExitCommand, and false otherwise."},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"     * @return False, since this is not an ExitCommand."},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"    public boolean isExit() {"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"        return false;"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":47}},{"path":"src/main/java/chadbot/exceptions/DateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.exceptions;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":" * The DateFormatException class is an exception thrown by the TaskList when the date specified by the user input"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":" * is incorrectly formatted."},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" * @version 1.1"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * @since   2021-01-26"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"public class DateFormatException extends Exception {"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"    /** The message carried by the DateFormatException. */"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"    private static final String MESSAGE \u003d \"I\u0027m sorry, please give your date in the format YYYY-MM-DD.\";"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the DateFormatException class."},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"    public DateFormatException() {"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"        super(MESSAGE);"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":22}},{"path":"src/main/java/chadbot/exceptions/EmptyDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.exceptions;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":" * The EmptyDateException class is an exception thrown by the TaskList when a date is not supplied for a"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":" * deadline or event by the user input."},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" * @version 1.0"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * @since   2021-01-19"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"public class EmptyDateException extends Exception {"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the EmptyDateException class."},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"     * @param s The type of task which triggered this exception."},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"    public EmptyDateException(String s) {"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"        super(\"I\u0027m sorry, the date of a \" + s + \" cannot be empty.\");"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":22}},{"path":"src/main/java/chadbot/exceptions/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.exceptions;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":" * The EmptyDescriptionException class is an exception thrown by the TaskList when a description is not supplied"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":" * for a task by the user input."},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" * @version 1.0"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * @since   2021-01-19"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"public class EmptyDescriptionException extends Exception {"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the EmptyDescriptionException class."},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"     * @param s The type of task which triggered this exception."},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"    public EmptyDescriptionException(String s) {"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"        super(\"I\u0027m sorry, the description of a \" + s + \" cannot be empty.\");"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":22}},{"path":"src/main/java/chadbot/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.exceptions;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":" * The InvalidInputException class is an exception thrown by the TaskList when an invalid input or command is"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":" * supplied by the user."},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" * @version 1.0"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * @since   2021-01-19"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"public class InvalidInputException extends Exception {"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"    /** The message carried by the InvalidInputException. */"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"    private static final String MESSAGE \u003d \"I\u0027m sorry, but I don\u0027t know what that means.\\n\""},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"            + \"Enter \\\"help\\\" to see a list of functions supported by Chadbot.\";"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the InvalidInputException class."},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"    public InvalidInputException() {"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"        super(MESSAGE);"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"     * Returns the message carried by the InvalidInputException as a String."},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     * @return The message carried by the InvalidInputException."},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"    public static String getExceptionMessage() {"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"        return MESSAGE;"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":32}},{"path":"src/main/java/chadbot/exceptions/ListOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.exceptions;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":" * The ListOutOfBoundsException class is an exception thrown by the TaskList when the user attempts to mark a"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":" * task that is not in the list as done, or delete a task that is not in the list."},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" * @version 1.0"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * @since   2021-01-19"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"public class ListOutOfBoundsException extends Exception {"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the ListOutOfBoundsException class."},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"     * @param size The current size of the list in a TaskList object."},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"    public ListOutOfBoundsException(int size) {"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"        super(\"I\u0027m sorry, the list currently only has \" + size + \" elements.\");"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":22}},{"path":"src/main/java/chadbot/exceptions/LoadFailureException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.exceptions;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":" * The LoadFailureException class is an exception thrown by the TaskList when Duke fails to add the data from"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":" * the saved file into the task list."},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" * @version 1.2"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * @since   2021-02-08"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"public class LoadFailureException extends Exception {"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"    /** The message carried by the DateFormatException. */"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"    private static final String MESSAGE \u003d \"Something went wrong during the loading of your save file.\";"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the LoadFailureException class."},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"    public LoadFailureException() {"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"        super(MESSAGE);"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":22}},{"path":"src/main/java/chadbot/exceptions/TaskTypeErrorException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.exceptions;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":" * The TaskTypeErrorException class is an exception thrown by the TaskList the user attempts to modify the date"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":" * of a task that is neither a deadline nor an event."},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" * @version 1.2"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * @since   2021-02-08"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"public class TaskTypeErrorException extends Exception {"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"    /** The message carried by the TaskTypeErrorException. */"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"    private static final String MESSAGE \u003d \"I\u0027m sorry, you can only modify the date of a deadline or an event.\";"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the TaskTypeErrorException class."},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"    public TaskTypeErrorException() {"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"        super(MESSAGE);"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":22}},{"path":"src/main/java/chadbot/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.gui;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"import javafx.geometry.Insets;"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"import javafx.geometry.Pos;"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"import javafx.scene.Node;"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"import javafx.scene.control.Label;"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"import javafx.scene.image.Image;"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":" * An example of a custom control using FXML."},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":" * containing text from the speaker."},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":" * @version 1.2"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":" * @since   2021-02-08"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"public class DialogBox extends HBox {"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"    private Label dialog;"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"    @FXML"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"    private ImageView displayPicture;"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"            String filename \u003d \"/view/DialogBox.fxml\";"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(filename));"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"            fxmlLoader.load();"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"        } catch (IOException e) {"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"            e.printStackTrace();"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"        dialog.setText(text);"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"        displayPicture.setImage(img);"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"    private void flip() {"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"        Collections.reverse(tmp);"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"     * Creates a dialog box containing the user\u0027s input and avatar."},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"     * @param text The user\u0027s input."},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"     * @param img The user\u0027s avatar."},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"     * @return The dialog box containing the user\u0027s input and avatar."},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"        BackgroundFill fill \u003d new BackgroundFill("},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"                Color.web(\"#bec2cb\"),"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"                new CornerRadii(45),"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"                Insets.EMPTY"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"        );"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"        db.setBackground(new Background(fill));"},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"        return db;"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":81,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":"     * Creates a dialog box containing Duke\u0027s response and avatar."},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"     * @param text Duke\u0027s response to the user input."},{"lineNumber":85,"author":{"gitId":"arsatis"},"content":"     * @param img Duke\u0027s avatar."},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":"     * @return The dialog box containing Duke\u0027s response and avatar."},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":89,"author":{"gitId":"arsatis"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":90,"author":{"gitId":"arsatis"},"content":"        BackgroundFill fill \u003d new BackgroundFill("},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":"                Color.web(\"#e5cfaa\"),"},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"                new CornerRadii(45),"},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"                Insets.EMPTY"},{"lineNumber":94,"author":{"gitId":"arsatis"},"content":"        );"},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":"        db.setBackground(new Background(fill));"},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"        db.flip();"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"        return db;"},{"lineNumber":98,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":100,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":100}},{"path":"src/main/java/chadbot/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.gui;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import chadbot.Chadbot;"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import chadbot.exceptions.InvalidInputException;"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"import javafx.application.Platform;"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"import javafx.scene.control.Button;"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":" * @version 1.2"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":" * @since   2021-02-08"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"    private VBox dialogContainer;"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"    private TextField userInput;"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"    private Button sendButton;"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"    private Chadbot chadbot;"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"    private Image chadRImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaChadR.png\"));"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"    private Image chadLImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaChadL.png\"));"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"    private Image soyjakCry \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaSoyjakCry.png\"));"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"    private Image soyjakSmirk \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaSoyjakSmirk.png\"));"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"     * Initializes the GUI."},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"    @FXML"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"    public void initialize() {"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     * Sets the duke object in the Main class to be the duke object in the GUI."},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"     * @param c The duke object in the Main class."},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"    public void setDuke(Chadbot c) {"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"        String greetingMessage \u003d \"Welcome to Chadbot.\\nWhat can I do for you?\";"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"        chadbot \u003d c;"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"        chadbot.getStorage().loadData(chadbot.getTaskList());"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"                DialogBox.getDukeDialog(greetingMessage, chadLImage)"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"        );"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"    @FXML"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"    private void handleUserInput() {"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"        String errorResponse \u003d InvalidInputException.getExceptionMessage();"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"        String byeResponse \u003d \"Bye :)\";"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"        String response \u003d chadbot.getResponse(input);"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"        boolean isHelpRequest \u003d input.toLowerCase().contains(\"help\");"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"                DialogBox.getUserDialog(input, chadRImage),"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"                DialogBox.getDukeDialog(response, (isHelpRequest || response.equals(byeResponse))"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"                        ? soyjakSmirk"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"                        : response.equals(errorResponse)"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"                        ? soyjakCry"},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"                        : chadLImage"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"                )"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"        );"},{"lineNumber":81,"author":{"gitId":"arsatis"},"content":"        userInput.clear();"},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"        if (response.equals(byeResponse)) {"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"            chadbot.getStorage().saveData(chadbot.getTaskList());"},{"lineNumber":85,"author":{"gitId":"arsatis"},"content":"            Platform.runLater(() -\u003e {"},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":"                try {"},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":"                    Thread.sleep(500);"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"                    Platform.exit();"},{"lineNumber":89,"author":{"gitId":"arsatis"},"content":"                } catch (InterruptedException e) {"},{"lineNumber":90,"author":{"gitId":"arsatis"},"content":"                    dialogContainer.getChildren().addAll("},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":"                            DialogBox.getUserDialog(e.getMessage(), chadRImage)"},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"                    );"},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"                }"},{"lineNumber":94,"author":{"gitId":"arsatis"},"content":"            });"},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":98,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":98}},{"path":"src/main/java/chadbot/subfiles/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.subfiles;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import chadbot.command.AddCommand;"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import chadbot.command.Command;"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"import chadbot.command.DeleteCommand;"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"import chadbot.command.DoneCommand;"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"import chadbot.command.EditCommand;"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"import chadbot.command.ExitCommand;"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"import chadbot.command.FindCommand;"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"import chadbot.command.HelpCommand;"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"import chadbot.command.PrintCommand;"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"import chadbot.command.SortCommand;"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"import chadbot.command.StatsCommand;"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":" * The Parser class parses the user input as a Command."},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":" * @version 1.1"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":" * @since   2021-01-26"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"public class Parser {"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"     * Parses the user input as either an ExitCommand, PrintCommand, FindCommand, DoneCommand,"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     * DeleteCommand, SortCommand, HelpCommand, or AddCommand, based on the user input."},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"     * @param s The user input."},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"     * @return A Command, whose type is based on the user input."},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"    public static Command parse(String s) {"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"        String splitRegex \u003d \" \";"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"        String[] sArray \u003d s.split(splitRegex);"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"        switch (sArray[0]) {"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"        case \"bye\":"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"            return new ExitCommand();"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"        case \"list\":"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"            return new PrintCommand(s);"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"        case \"find\":"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"            return new FindCommand(s);"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"        case \"done\":"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"            return new DoneCommand(s);"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"        case \"edit\":"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"            return new EditCommand(s);"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"        case \"delete\":"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"            return new DeleteCommand(s);"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"        case \"sort\":"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"            return new SortCommand(s);"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"        case \"help\":"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"            return new HelpCommand(s);"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"        case \"stats\":"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"            return new StatsCommand();"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"        default:"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"            return new AddCommand(s);"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":59}},{"path":"src/main/java/chadbot/subfiles/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.subfiles;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"import chadbot.exceptions.DateFormatException;"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"import chadbot.exceptions.LoadFailureException;"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"import chadbot.task.Deadline;"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"import chadbot.task.Event;"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"import chadbot.task.Task;"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"import chadbot.task.ToDo;"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":" * The Storage class manages the loading and storing of tasks."},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":" * @version 1.1"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":" * @since   2021-01-26"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"public class Storage {"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"    /** The path leading to the save file. */"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"    private String path;"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"    /** The name of the save file. */"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"    private String filename;"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the Storage class."},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     * @param filenames The path leading to and the name of the save file."},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"    @SafeVarargs"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"    public Storage(String... filenames) {"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"        assert(filenames !\u003d null);"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"        this.path \u003d filenames[0];"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"        this.filename \u003d filenames[1];"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     * Loads the data stored in the save file."},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"     * @param taskList The list of tasks that the user has in the current execution of the Duke program."},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"    public void loadData(TaskList taskList) {"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"        File pathToFile \u003d new File(path);"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"        if (!pathToFile.exists()) {"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"            pathToFile.mkdir();"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"        File file \u003d new File(path + filename);"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"        try {"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"            Scanner sc \u003d new Scanner(file);"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"            while (sc.hasNext()) {"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"                taskList.addTaskFromData(sc.nextLine());"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"            try {"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"                file.createNewFile();"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"            } catch (IOException ex) {"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"                System.out.println(\"Something went wrong during the creation of your save file.\");"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"        } catch (DateFormatException e) {"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"            System.out.println(\"There is an error with the format of a date in your save file.\");"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"        } catch (LoadFailureException e) {"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"     * Saves the list of tasks that the user currently has in the save file."},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"     * @param taskList The list of tasks that the user has in the current execution of the Duke program."},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"    public void saveData(TaskList taskList) {"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"        try {"},{"lineNumber":81,"author":{"gitId":"arsatis"},"content":"            FileWriter fw \u003d new FileWriter(path + filename);"},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":"            ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();"},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"            for (Task t : tasks) {"},{"lineNumber":85,"author":{"gitId":"arsatis"},"content":"                if (t instanceof ToDo) {"},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":"                    String writeData \u003d \"T | \" + (t.isDone() ? 1 : 0) + \" | \" + t.getName();"},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":"                    fw.write(writeData);"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"                } else if (t instanceof Deadline) {"},{"lineNumber":89,"author":{"gitId":"arsatis"},"content":"                    Deadline d \u003d (Deadline) t;"},{"lineNumber":90,"author":{"gitId":"arsatis"},"content":"                    String writeData \u003d \"D | \" + (d.isDone() ? 1 : 0) + \" | \" + d.getName() + \" | \" + d.getDate();"},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":"                    fw.write(writeData);"},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"                } else if (t instanceof Event) {"},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"                    Event e \u003d (Event) t;"},{"lineNumber":94,"author":{"gitId":"arsatis"},"content":"                    String writeData \u003d \"E | \" + (e.isDone() ? 1 : 0) + \" | \" + e.getName() + \" | \" + e.getDate();"},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":"                    fw.write(writeData);"},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"                }"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":98,"author":{"gitId":"arsatis"},"content":"                fw.write(System.lineSeparator());"},{"lineNumber":99,"author":{"gitId":"arsatis"},"content":"            }"},{"lineNumber":100,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":101,"author":{"gitId":"arsatis"},"content":"            fw.close();"},{"lineNumber":102,"author":{"gitId":"arsatis"},"content":"        } catch (IOException e) {"},{"lineNumber":103,"author":{"gitId":"arsatis"},"content":"            System.out.println(\"Something went wrong during the saving of your file.\");"},{"lineNumber":104,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":107,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":107}},{"path":"src/main/java/chadbot/subfiles/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.subfiles;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"import java.util.Collections;"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"import chadbot.exceptions.DateFormatException;"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"import chadbot.exceptions.EmptyDateException;"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"import chadbot.exceptions.EmptyDescriptionException;"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"import chadbot.exceptions.InvalidInputException;"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"import chadbot.exceptions.ListOutOfBoundsException;"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"import chadbot.exceptions.LoadFailureException;"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"import chadbot.exceptions.TaskTypeErrorException;"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"import chadbot.task.Deadline;"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"import chadbot.task.Event;"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"import chadbot.task.Task;"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"import chadbot.task.TaskComparator;"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"import chadbot.task.ToDo;"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":" * The TaskList class contains a list of tasks created by user input,"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":" * and allows the user to add, print, or delete tasks, as well as to mark a task in the list as done."},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":" * @version 1.2"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":" * @since   2021-02-08"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"public class TaskList {"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"    /** List of tasks created by user input. */"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the TaskList class."},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"    public TaskList() {"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"     * Returns the task description specified in the user input."},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"     * @param input The user input."},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     * @param startIndex Start index of the description in the user input."},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     * @return The task description specified in the user input."},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"    private String getTaskDescription(String input, int startIndex) {"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"        int splitLimit \u003d 2;"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"        String splitRegex \u003d \" /\";"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"        String[] tempArray \u003d input.split(splitRegex, splitLimit);"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"        return tempArray[0].substring(startIndex);"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"     * Returns the date specified in the user input."},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"     * @param input The user input."},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"     * @return The date specified in the user input."},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"     * @throws DateTimeParseException If the specified date is incorrectly formatted."},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"    private LocalDate getTaskDate(String input) throws DateTimeParseException {"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"        int splitLimit \u003d 2;"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"        int startIndex \u003d 3;"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"        String splitRegex \u003d \" /\";"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"        String[] tempArray \u003d input.split(splitRegex, splitLimit);"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"        return LocalDate.parse(tempArray[1].substring(startIndex));"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"     * Adds a to-do to the list of tasks."},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"     * @param input User input triggering the addition of a to-do to the list of tasks."},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"     * @throws EmptyDescriptionException If no description is provided for the to-do."},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"    private void addTodo(String input) throws EmptyDescriptionException {"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"        String taskType \u003d \"todo\";"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"        try {"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"            int startOfDescription \u003d 5;"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"            String description \u003d getTaskDescription(input, startOfDescription);"},{"lineNumber":81,"author":{"gitId":"arsatis"},"content":"            tasks.add(new ToDo(description));"},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"            throw new EmptyDescriptionException(taskType);"},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"     * Adds a deadline to the list of tasks."},{"lineNumber":89,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"arsatis"},"content":"     * @param input User input triggering the addition of a deadline to the list of tasks."},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":"     * @throws EmptyDescriptionException If no description is provided for the deadline."},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"     * @throws EmptyDateException If no date is specified for the deadline."},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"     * @throws DateFormatException If the specified date is incorrectly formatted."},{"lineNumber":94,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":"    private void addDeadline(String input) throws EmptyDescriptionException, EmptyDateException,"},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"            DateFormatException {"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"        String taskType \u003d \"deadline\";"},{"lineNumber":98,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":99,"author":{"gitId":"arsatis"},"content":"        try {"},{"lineNumber":100,"author":{"gitId":"arsatis"},"content":"            int startOfDescription \u003d 9;"},{"lineNumber":101,"author":{"gitId":"arsatis"},"content":"            String description \u003d getTaskDescription(input, startOfDescription);"},{"lineNumber":102,"author":{"gitId":"arsatis"},"content":"            LocalDate date \u003d getTaskDate(input);"},{"lineNumber":103,"author":{"gitId":"arsatis"},"content":"            tasks.add(new Deadline(description, date));"},{"lineNumber":104,"author":{"gitId":"arsatis"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":105,"author":{"gitId":"arsatis"},"content":"            throw new EmptyDescriptionException(taskType);"},{"lineNumber":106,"author":{"gitId":"arsatis"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":107,"author":{"gitId":"arsatis"},"content":"            throw new EmptyDateException(taskType);"},{"lineNumber":108,"author":{"gitId":"arsatis"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":109,"author":{"gitId":"arsatis"},"content":"            throw new DateFormatException();"},{"lineNumber":110,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":113,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"arsatis"},"content":"     * Adds an event to the list of tasks."},{"lineNumber":115,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":116,"author":{"gitId":"arsatis"},"content":"     * @param input User input triggering the addition of an event to the list of tasks."},{"lineNumber":117,"author":{"gitId":"arsatis"},"content":"     * @throws EmptyDescriptionException If no description is provided for the event."},{"lineNumber":118,"author":{"gitId":"arsatis"},"content":"     * @throws EmptyDateException If no date is specified for the event."},{"lineNumber":119,"author":{"gitId":"arsatis"},"content":"     * @throws DateFormatException If the specified date is incorrectly formatted."},{"lineNumber":120,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"arsatis"},"content":"    private void addEvent(String input) throws EmptyDescriptionException, EmptyDateException,"},{"lineNumber":122,"author":{"gitId":"arsatis"},"content":"            DateFormatException {"},{"lineNumber":123,"author":{"gitId":"arsatis"},"content":"        String taskType \u003d \"event\";"},{"lineNumber":124,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":125,"author":{"gitId":"arsatis"},"content":"        try {"},{"lineNumber":126,"author":{"gitId":"arsatis"},"content":"            int startOfDescription \u003d 6;"},{"lineNumber":127,"author":{"gitId":"arsatis"},"content":"            String description \u003d getTaskDescription(input, startOfDescription);"},{"lineNumber":128,"author":{"gitId":"arsatis"},"content":"            LocalDate date \u003d getTaskDate(input);"},{"lineNumber":129,"author":{"gitId":"arsatis"},"content":"            tasks.add(new Event(description, date));"},{"lineNumber":130,"author":{"gitId":"arsatis"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":131,"author":{"gitId":"arsatis"},"content":"            throw new EmptyDescriptionException(taskType);"},{"lineNumber":132,"author":{"gitId":"arsatis"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":133,"author":{"gitId":"arsatis"},"content":"            throw new EmptyDateException(taskType);"},{"lineNumber":134,"author":{"gitId":"arsatis"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":135,"author":{"gitId":"arsatis"},"content":"            throw new DateFormatException();"},{"lineNumber":136,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":139,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":140,"author":{"gitId":"arsatis"},"content":"     * Adds a task to the list of tasks. Calls either addTodo,  addDeadline, or addEvent,"},{"lineNumber":141,"author":{"gitId":"arsatis"},"content":"     * depending on the type of task specified by the user."},{"lineNumber":142,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":143,"author":{"gitId":"arsatis"},"content":"     * @param input User input triggering the addition of a task to the list of tasks."},{"lineNumber":144,"author":{"gitId":"arsatis"},"content":"     * @return Duke\u0027s response to the user."},{"lineNumber":145,"author":{"gitId":"arsatis"},"content":"     * @throws EmptyDescriptionException If no description is provided for the task."},{"lineNumber":146,"author":{"gitId":"arsatis"},"content":"     * @throws EmptyDateException If no date or time is specified for the task,"},{"lineNumber":147,"author":{"gitId":"arsatis"},"content":"     *                            which is either a deadline or an event."},{"lineNumber":148,"author":{"gitId":"arsatis"},"content":"     * @throws InvalidInputException If the task is neither a to-do, a deadline, nor an event."},{"lineNumber":149,"author":{"gitId":"arsatis"},"content":"     * @throws DateFormatException If the specified date is incorrectly formatted."},{"lineNumber":150,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":151,"author":{"gitId":"arsatis"},"content":"    public String addTask(String input) throws EmptyDescriptionException, EmptyDateException,"},{"lineNumber":152,"author":{"gitId":"arsatis"},"content":"            InvalidInputException, DateFormatException {"},{"lineNumber":153,"author":{"gitId":"arsatis"},"content":"        int splitLimit \u003d 2;"},{"lineNumber":154,"author":{"gitId":"arsatis"},"content":"        String splitRegex \u003d \" \";"},{"lineNumber":155,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":156,"author":{"gitId":"arsatis"},"content":"        String command \u003d input.split(splitRegex, splitLimit)[0];"},{"lineNumber":157,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":158,"author":{"gitId":"arsatis"},"content":"        switch (command) {"},{"lineNumber":159,"author":{"gitId":"arsatis"},"content":"        case \"todo\":"},{"lineNumber":160,"author":{"gitId":"arsatis"},"content":"            addTodo(input);"},{"lineNumber":161,"author":{"gitId":"arsatis"},"content":"            break;"},{"lineNumber":162,"author":{"gitId":"arsatis"},"content":"        case \"deadline\":"},{"lineNumber":163,"author":{"gitId":"arsatis"},"content":"            addDeadline(input);"},{"lineNumber":164,"author":{"gitId":"arsatis"},"content":"            break;"},{"lineNumber":165,"author":{"gitId":"arsatis"},"content":"        case \"event\":"},{"lineNumber":166,"author":{"gitId":"arsatis"},"content":"            addEvent(input);"},{"lineNumber":167,"author":{"gitId":"arsatis"},"content":"            break;"},{"lineNumber":168,"author":{"gitId":"arsatis"},"content":"        default:"},{"lineNumber":169,"author":{"gitId":"arsatis"},"content":"            throw new InvalidInputException();"},{"lineNumber":170,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":172,"author":{"gitId":"arsatis"},"content":"        String output \u003d \"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":173,"author":{"gitId":"arsatis"},"content":"                + tasks.get(tasks.size() - 1).toString() + \"\\n\""},{"lineNumber":174,"author":{"gitId":"arsatis"},"content":"                + \"Now you have \" + tasks.size() + \" tasks in the list.\";"},{"lineNumber":175,"author":{"gitId":"arsatis"},"content":"        System.out.println(output);"},{"lineNumber":176,"author":{"gitId":"arsatis"},"content":"        return output;"},{"lineNumber":177,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":179,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":180,"author":{"gitId":"arsatis"},"content":"     * Adds a to-do, deadline, or event, to the list of tasks, based on previously saved data."},{"lineNumber":181,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":182,"author":{"gitId":"arsatis"},"content":"     * @param data A line from the user\u0027s save data."},{"lineNumber":183,"author":{"gitId":"arsatis"},"content":"     * @throws DateFormatException If the specified date is incorrectly formatted."},{"lineNumber":184,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":185,"author":{"gitId":"arsatis"},"content":"    public void addTaskFromData(String data) throws DateFormatException, LoadFailureException {"},{"lineNumber":186,"author":{"gitId":"arsatis"},"content":"        String splitRegex \u003d \" \\\\| \";"},{"lineNumber":187,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":188,"author":{"gitId":"arsatis"},"content":"        String[] sArray \u003d data.split(splitRegex);"},{"lineNumber":189,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":190,"author":{"gitId":"arsatis"},"content":"        try {"},{"lineNumber":191,"author":{"gitId":"arsatis"},"content":"            switch (sArray[0]) {"},{"lineNumber":192,"author":{"gitId":"arsatis"},"content":"            case \"T\":"},{"lineNumber":193,"author":{"gitId":"arsatis"},"content":"                tasks.add(new ToDo(sArray[2]));"},{"lineNumber":194,"author":{"gitId":"arsatis"},"content":"                break;"},{"lineNumber":195,"author":{"gitId":"arsatis"},"content":"            case \"D\":"},{"lineNumber":196,"author":{"gitId":"arsatis"},"content":"                tasks.add(new Deadline(sArray[2], LocalDate.parse(sArray[3])));"},{"lineNumber":197,"author":{"gitId":"arsatis"},"content":"                break;"},{"lineNumber":198,"author":{"gitId":"arsatis"},"content":"            case \"E\":"},{"lineNumber":199,"author":{"gitId":"arsatis"},"content":"                tasks.add(new Event(sArray[2], LocalDate.parse(sArray[3])));"},{"lineNumber":200,"author":{"gitId":"arsatis"},"content":"                break;"},{"lineNumber":201,"author":{"gitId":"arsatis"},"content":"            default:"},{"lineNumber":202,"author":{"gitId":"arsatis"},"content":"                throw new LoadFailureException();"},{"lineNumber":203,"author":{"gitId":"arsatis"},"content":"            }"},{"lineNumber":204,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":205,"author":{"gitId":"arsatis"},"content":"            String doneIndicator \u003d \"1\";"},{"lineNumber":206,"author":{"gitId":"arsatis"},"content":"            if (sArray[1].equals(doneIndicator)) {"},{"lineNumber":207,"author":{"gitId":"arsatis"},"content":"                tasks.get(tasks.size() - 1).setDone();"},{"lineNumber":208,"author":{"gitId":"arsatis"},"content":"            }"},{"lineNumber":209,"author":{"gitId":"arsatis"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":210,"author":{"gitId":"arsatis"},"content":"            throw new DateFormatException();"},{"lineNumber":211,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":212,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":213,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":214,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":215,"author":{"gitId":"arsatis"},"content":"     * Prints the list of tasks added by the user till this point, based on the order they were added by the user."},{"lineNumber":216,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":217,"author":{"gitId":"arsatis"},"content":"     * @return Duke\u0027s response to the user."},{"lineNumber":218,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":219,"author":{"gitId":"arsatis"},"content":"    public String printTasks() {"},{"lineNumber":220,"author":{"gitId":"arsatis"},"content":"        StringBuilder output \u003d new StringBuilder(\"Here are the tasks in your list:\");"},{"lineNumber":221,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":222,"author":{"gitId":"arsatis"},"content":"        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {"},{"lineNumber":223,"author":{"gitId":"arsatis"},"content":"            Task task \u003d tasks.get(i - 1);"},{"lineNumber":224,"author":{"gitId":"arsatis"},"content":"            output.append(\"\\n\").append(i).append(\". \").append(task.toString());"},{"lineNumber":225,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":226,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":227,"author":{"gitId":"arsatis"},"content":"        System.out.println(output);"},{"lineNumber":228,"author":{"gitId":"arsatis"},"content":"        return output.toString();"},{"lineNumber":229,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":230,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":231,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":232,"author":{"gitId":"arsatis"},"content":"     * Prints the list of deadlines added by the user till this point, due on the date specified by the user,"},{"lineNumber":233,"author":{"gitId":"arsatis"},"content":"     * based on the order they were added by the user."},{"lineNumber":234,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":235,"author":{"gitId":"arsatis"},"content":"     * @param date The date specified by the user."},{"lineNumber":236,"author":{"gitId":"arsatis"},"content":"     * @return Duke\u0027s response to the user."},{"lineNumber":237,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":238,"author":{"gitId":"arsatis"},"content":"    private String printDeadlinesOnDate(LocalDate date) {"},{"lineNumber":239,"author":{"gitId":"arsatis"},"content":"        StringBuilder output;"},{"lineNumber":240,"author":{"gitId":"arsatis"},"content":"        ArrayList\u003cDeadline\u003e deadlines \u003d new ArrayList\u003c\u003e();"},{"lineNumber":241,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":242,"author":{"gitId":"arsatis"},"content":"        for (Task t : tasks) {"},{"lineNumber":243,"author":{"gitId":"arsatis"},"content":"            if (t instanceof Deadline) {"},{"lineNumber":244,"author":{"gitId":"arsatis"},"content":"                Deadline d \u003d (Deadline) t;"},{"lineNumber":245,"author":{"gitId":"arsatis"},"content":"                if (d.getDateAsLocalDate().equals(date)) {"},{"lineNumber":246,"author":{"gitId":"arsatis"},"content":"                    deadlines.add(d);"},{"lineNumber":247,"author":{"gitId":"arsatis"},"content":"                }"},{"lineNumber":248,"author":{"gitId":"arsatis"},"content":"            }"},{"lineNumber":249,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":250,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":251,"author":{"gitId":"arsatis"},"content":"        if (deadlines.size() \u003d\u003d 0) {"},{"lineNumber":252,"author":{"gitId":"arsatis"},"content":"            output \u003d new StringBuilder(\"You have no deadlines due on \" + date.toString() + \".\");"},{"lineNumber":253,"author":{"gitId":"arsatis"},"content":"        } else {"},{"lineNumber":254,"author":{"gitId":"arsatis"},"content":"            int i \u003d 1;"},{"lineNumber":255,"author":{"gitId":"arsatis"},"content":"            output \u003d new StringBuilder(\"Here are the deadlines due on \" + date.toString() + \":\");"},{"lineNumber":256,"author":{"gitId":"arsatis"},"content":"            for (Deadline d : deadlines) {"},{"lineNumber":257,"author":{"gitId":"arsatis"},"content":"                output.append(\"\\n\").append(i).append(\". \").append(d.toString());"},{"lineNumber":258,"author":{"gitId":"arsatis"},"content":"                i++;"},{"lineNumber":259,"author":{"gitId":"arsatis"},"content":"            }"},{"lineNumber":260,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":261,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":262,"author":{"gitId":"arsatis"},"content":"        System.out.println(output);"},{"lineNumber":263,"author":{"gitId":"arsatis"},"content":"        return output.toString();"},{"lineNumber":264,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":265,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":266,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":267,"author":{"gitId":"arsatis"},"content":"     * Prints the list of events added by the user till this point, happening on the date specified by the user,"},{"lineNumber":268,"author":{"gitId":"arsatis"},"content":"     * based on the order they were added by the user."},{"lineNumber":269,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":270,"author":{"gitId":"arsatis"},"content":"     * @param date The date specified by the user."},{"lineNumber":271,"author":{"gitId":"arsatis"},"content":"     * @return Duke\u0027s response to the user."},{"lineNumber":272,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":273,"author":{"gitId":"arsatis"},"content":"    private String printEventsOnDate(LocalDate date) {"},{"lineNumber":274,"author":{"gitId":"arsatis"},"content":"        StringBuilder output;"},{"lineNumber":275,"author":{"gitId":"arsatis"},"content":"        ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();"},{"lineNumber":276,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":277,"author":{"gitId":"arsatis"},"content":"        for (Task t : tasks) {"},{"lineNumber":278,"author":{"gitId":"arsatis"},"content":"            if (t instanceof Event) {"},{"lineNumber":279,"author":{"gitId":"arsatis"},"content":"                Event e \u003d (Event) t;"},{"lineNumber":280,"author":{"gitId":"arsatis"},"content":"                if (e.getDateAsLocalDate().equals(date)) {"},{"lineNumber":281,"author":{"gitId":"arsatis"},"content":"                    events.add(e);"},{"lineNumber":282,"author":{"gitId":"arsatis"},"content":"                }"},{"lineNumber":283,"author":{"gitId":"arsatis"},"content":"            }"},{"lineNumber":284,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":285,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":286,"author":{"gitId":"arsatis"},"content":"        if (events.size() \u003d\u003d 0) {"},{"lineNumber":287,"author":{"gitId":"arsatis"},"content":"            output \u003d new StringBuilder(\"You have no events occurring on \" + date.toString() + \".\");"},{"lineNumber":288,"author":{"gitId":"arsatis"},"content":"        } else {"},{"lineNumber":289,"author":{"gitId":"arsatis"},"content":"            int i \u003d 1;"},{"lineNumber":290,"author":{"gitId":"arsatis"},"content":"            output \u003d new StringBuilder(\"Here are the events occurring on \" + date.toString() + \":\");"},{"lineNumber":291,"author":{"gitId":"arsatis"},"content":"            for (Event e : events) {"},{"lineNumber":292,"author":{"gitId":"arsatis"},"content":"                output.append(\"\\n\").append(i).append(\". \").append(e.toString());"},{"lineNumber":293,"author":{"gitId":"arsatis"},"content":"                i++;"},{"lineNumber":294,"author":{"gitId":"arsatis"},"content":"            }"},{"lineNumber":295,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":296,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":297,"author":{"gitId":"arsatis"},"content":"        System.out.println(output);"},{"lineNumber":298,"author":{"gitId":"arsatis"},"content":"        return output.toString();"},{"lineNumber":299,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":300,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":301,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":302,"author":{"gitId":"arsatis"},"content":"     * Prints the list of deadlines and events added by the user till this point,"},{"lineNumber":303,"author":{"gitId":"arsatis"},"content":"     * due or happening on the date specified by the user, based on the order they were added by the user."},{"lineNumber":304,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":305,"author":{"gitId":"arsatis"},"content":"     * @param input The date specified by the user."},{"lineNumber":306,"author":{"gitId":"arsatis"},"content":"     * @return Duke\u0027s response to the user."},{"lineNumber":307,"author":{"gitId":"arsatis"},"content":"     * @throws DateFormatException If the specified date is incorrectly formatted."},{"lineNumber":308,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":309,"author":{"gitId":"arsatis"},"content":"    public String printTasksOnDate(String input) throws DateFormatException {"},{"lineNumber":310,"author":{"gitId":"arsatis"},"content":"        try {"},{"lineNumber":311,"author":{"gitId":"arsatis"},"content":"            LocalDate date \u003d LocalDate.parse(input);"},{"lineNumber":312,"author":{"gitId":"arsatis"},"content":"            String upperOutput \u003d printDeadlinesOnDate(date);"},{"lineNumber":313,"author":{"gitId":"arsatis"},"content":"            String lowerOutput \u003d printEventsOnDate(date);"},{"lineNumber":314,"author":{"gitId":"arsatis"},"content":"            return upperOutput + \"\\n\\n\" + lowerOutput;"},{"lineNumber":315,"author":{"gitId":"arsatis"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":316,"author":{"gitId":"arsatis"},"content":"            throw new DateFormatException();"},{"lineNumber":317,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":318,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":319,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":320,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":321,"author":{"gitId":"arsatis"},"content":"     * Prints the list of tasks added by the user till this point, containing the keyword specified by the user,"},{"lineNumber":322,"author":{"gitId":"arsatis"},"content":"     * ordered based on the current ordering of the list."},{"lineNumber":323,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":324,"author":{"gitId":"arsatis"},"content":"     * @param input User input containing the keyword."},{"lineNumber":325,"author":{"gitId":"arsatis"},"content":"     * @return Duke\u0027s response to the user."},{"lineNumber":326,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":327,"author":{"gitId":"arsatis"},"content":"    public String findTasksWithKeyword(String input) {"},{"lineNumber":328,"author":{"gitId":"arsatis"},"content":"        int splitLimit \u003d 2;"},{"lineNumber":329,"author":{"gitId":"arsatis"},"content":"        String splitRegex \u003d \" \";"},{"lineNumber":330,"author":{"gitId":"arsatis"},"content":"        StringBuilder output;"},{"lineNumber":331,"author":{"gitId":"arsatis"},"content":"        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":332,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":333,"author":{"gitId":"arsatis"},"content":"        String keyword \u003d input.split(splitRegex, splitLimit)[1].toLowerCase();"},{"lineNumber":334,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":335,"author":{"gitId":"arsatis"},"content":"        for (Task t : tasks) {"},{"lineNumber":336,"author":{"gitId":"arsatis"},"content":"            if (t.getName().toLowerCase().contains(keyword)) {"},{"lineNumber":337,"author":{"gitId":"arsatis"},"content":"                matchingTasks.add(t);"},{"lineNumber":338,"author":{"gitId":"arsatis"},"content":"            }"},{"lineNumber":339,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":340,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":341,"author":{"gitId":"arsatis"},"content":"        if (matchingTasks.size() \u003d\u003d 0) {"},{"lineNumber":342,"author":{"gitId":"arsatis"},"content":"            output \u003d new StringBuilder(\"You have no matching tasks in your list.\");"},{"lineNumber":343,"author":{"gitId":"arsatis"},"content":"        } else {"},{"lineNumber":344,"author":{"gitId":"arsatis"},"content":"            int i \u003d 1;"},{"lineNumber":345,"author":{"gitId":"arsatis"},"content":"            output \u003d new StringBuilder(\"Here are the matching tasks in your list:\");"},{"lineNumber":346,"author":{"gitId":"arsatis"},"content":"            for (Task t : matchingTasks) {"},{"lineNumber":347,"author":{"gitId":"arsatis"},"content":"                output.append(\"\\n\").append(i).append(\". \").append(t.toString());"},{"lineNumber":348,"author":{"gitId":"arsatis"},"content":"                i++;"},{"lineNumber":349,"author":{"gitId":"arsatis"},"content":"            }"},{"lineNumber":350,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":351,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":352,"author":{"gitId":"arsatis"},"content":"        System.out.println(output);"},{"lineNumber":353,"author":{"gitId":"arsatis"},"content":"        return output.toString();"},{"lineNumber":354,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":355,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":356,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":357,"author":{"gitId":"arsatis"},"content":"     * Returns the index specified by the user after parsing it as an int."},{"lineNumber":358,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":359,"author":{"gitId":"arsatis"},"content":"     * @param input User input."},{"lineNumber":360,"author":{"gitId":"arsatis"},"content":"     * @return Index specified by the user, parsed as an int."},{"lineNumber":361,"author":{"gitId":"arsatis"},"content":"     * @throws InvalidInputException If the user provided a non-integer index in the user input."},{"lineNumber":362,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":363,"author":{"gitId":"arsatis"},"content":"    private int getIndex(String input) throws InvalidInputException {"},{"lineNumber":364,"author":{"gitId":"arsatis"},"content":"        try {"},{"lineNumber":365,"author":{"gitId":"arsatis"},"content":"            int offset \u003d 1;"},{"lineNumber":366,"author":{"gitId":"arsatis"},"content":"            String splitRegex \u003d \" \";"},{"lineNumber":367,"author":{"gitId":"arsatis"},"content":"            String[] sArray \u003d input.split(splitRegex);"},{"lineNumber":368,"author":{"gitId":"arsatis"},"content":"            return Integer.parseInt(sArray[1]) - offset;"},{"lineNumber":369,"author":{"gitId":"arsatis"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {"},{"lineNumber":370,"author":{"gitId":"arsatis"},"content":"            throw new InvalidInputException();"},{"lineNumber":371,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":372,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":373,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":374,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":375,"author":{"gitId":"arsatis"},"content":"     * Marks a task that is specified by the user as done. The user should specify the index of the task"},{"lineNumber":376,"author":{"gitId":"arsatis"},"content":"     * in the list which he or she intends to mark as done."},{"lineNumber":377,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":378,"author":{"gitId":"arsatis"},"content":"     * @param input User input containing the index of the task to be marked as done in the list of tasks,"},{"lineNumber":379,"author":{"gitId":"arsatis"},"content":"     *              in String format."},{"lineNumber":380,"author":{"gitId":"arsatis"},"content":"     * @return Duke\u0027s response to the user."},{"lineNumber":381,"author":{"gitId":"arsatis"},"content":"     * @throws InvalidInputException If the user provided a non-integer index in the user input."},{"lineNumber":382,"author":{"gitId":"arsatis"},"content":"     * @throws ListOutOfBoundsException If the user provided an index which is not in the list."},{"lineNumber":383,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":384,"author":{"gitId":"arsatis"},"content":"    public String markDone(String input) throws InvalidInputException, ListOutOfBoundsException {"},{"lineNumber":385,"author":{"gitId":"arsatis"},"content":"        int index \u003d getIndex(input);"},{"lineNumber":386,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":387,"author":{"gitId":"arsatis"},"content":"        try {"},{"lineNumber":388,"author":{"gitId":"arsatis"},"content":"            tasks.get(index).setDone();"},{"lineNumber":389,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":390,"author":{"gitId":"arsatis"},"content":"            String output \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + tasks.get(index).toString();"},{"lineNumber":391,"author":{"gitId":"arsatis"},"content":"            System.out.println(output);"},{"lineNumber":392,"author":{"gitId":"arsatis"},"content":"            return output;"},{"lineNumber":393,"author":{"gitId":"arsatis"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":394,"author":{"gitId":"arsatis"},"content":"            throw new ListOutOfBoundsException(tasks.size());"},{"lineNumber":395,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":396,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":397,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":398,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":399,"author":{"gitId":"arsatis"},"content":"     * Deletes a task that is specified by the user from the list of tasks. The user should specify the index"},{"lineNumber":400,"author":{"gitId":"arsatis"},"content":"     * of the task in the list which he or she intends to delete."},{"lineNumber":401,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":402,"author":{"gitId":"arsatis"},"content":"     * @param input User input containing the index of the task to be deleted from the list of tasks,"},{"lineNumber":403,"author":{"gitId":"arsatis"},"content":"     *              in String format."},{"lineNumber":404,"author":{"gitId":"arsatis"},"content":"     * @return Duke\u0027s response to the user."},{"lineNumber":405,"author":{"gitId":"arsatis"},"content":"     * @throws InvalidInputException If the user provided a non-integer index in the user input."},{"lineNumber":406,"author":{"gitId":"arsatis"},"content":"     * @throws ListOutOfBoundsException If the user provided an index which is not in the list."},{"lineNumber":407,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":408,"author":{"gitId":"arsatis"},"content":"    public String deleteTask(String input) throws InvalidInputException, ListOutOfBoundsException {"},{"lineNumber":409,"author":{"gitId":"arsatis"},"content":"        int index \u003d getIndex(input);"},{"lineNumber":410,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":411,"author":{"gitId":"arsatis"},"content":"        try {"},{"lineNumber":412,"author":{"gitId":"arsatis"},"content":"            Task t \u003d tasks.remove(index);"},{"lineNumber":413,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":414,"author":{"gitId":"arsatis"},"content":"            String output \u003d \"Noted. I\u0027ve removed this task:\\n\""},{"lineNumber":415,"author":{"gitId":"arsatis"},"content":"                    + t.toString() + \"\\n\""},{"lineNumber":416,"author":{"gitId":"arsatis"},"content":"                    + \"Now you have \" + tasks.size() + \" tasks in the list.\";"},{"lineNumber":417,"author":{"gitId":"arsatis"},"content":"            System.out.println(output);"},{"lineNumber":418,"author":{"gitId":"arsatis"},"content":"            return output;"},{"lineNumber":419,"author":{"gitId":"arsatis"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":420,"author":{"gitId":"arsatis"},"content":"            throw new ListOutOfBoundsException(tasks.size());"},{"lineNumber":421,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":422,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":423,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":424,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":425,"author":{"gitId":"arsatis"},"content":"     * Modifies the date of a deadline or event."},{"lineNumber":426,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":427,"author":{"gitId":"arsatis"},"content":"     * @param task The task which the user is trying to modify."},{"lineNumber":428,"author":{"gitId":"arsatis"},"content":"     * @param date The new date of the deadline or event."},{"lineNumber":429,"author":{"gitId":"arsatis"},"content":"     * @throws TaskTypeErrorException If the user attempts to modify the date of a non-deadline and non-event."},{"lineNumber":430,"author":{"gitId":"arsatis"},"content":"     * @throws DateFormatException If the specified date is incorrectly formatted."},{"lineNumber":431,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":432,"author":{"gitId":"arsatis"},"content":"    private void editTaskDate(Task task, String date) throws TaskTypeErrorException, DateFormatException {"},{"lineNumber":433,"author":{"gitId":"arsatis"},"content":"        try {"},{"lineNumber":434,"author":{"gitId":"arsatis"},"content":"            if (task instanceof Deadline) {"},{"lineNumber":435,"author":{"gitId":"arsatis"},"content":"                Deadline d \u003d (Deadline) task;"},{"lineNumber":436,"author":{"gitId":"arsatis"},"content":"                d.setDate(LocalDate.parse(date));"},{"lineNumber":437,"author":{"gitId":"arsatis"},"content":"            } else if (task instanceof Event) {"},{"lineNumber":438,"author":{"gitId":"arsatis"},"content":"                Event e \u003d (Event) task;"},{"lineNumber":439,"author":{"gitId":"arsatis"},"content":"                e.setDate(LocalDate.parse(date));"},{"lineNumber":440,"author":{"gitId":"arsatis"},"content":"            } else {"},{"lineNumber":441,"author":{"gitId":"arsatis"},"content":"                throw new TaskTypeErrorException();"},{"lineNumber":442,"author":{"gitId":"arsatis"},"content":"            }"},{"lineNumber":443,"author":{"gitId":"arsatis"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":444,"author":{"gitId":"arsatis"},"content":"            throw new DateFormatException();"},{"lineNumber":445,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":446,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":447,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":448,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":449,"author":{"gitId":"arsatis"},"content":"     * Modifies the description of a task."},{"lineNumber":450,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":451,"author":{"gitId":"arsatis"},"content":"     * @param task The task which the user is trying to modify."},{"lineNumber":452,"author":{"gitId":"arsatis"},"content":"     * @param description The new description of the task."},{"lineNumber":453,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":454,"author":{"gitId":"arsatis"},"content":"    private void editTaskDescription(Task task, String description) {"},{"lineNumber":455,"author":{"gitId":"arsatis"},"content":"        task.setName(description);"},{"lineNumber":456,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":457,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":458,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":459,"author":{"gitId":"arsatis"},"content":"     * Edit a task that is specified by the user from the list of tasks. The user should specify the index"},{"lineNumber":460,"author":{"gitId":"arsatis"},"content":"     * of the task in the list which he or she intends to edit, and the new description or date."},{"lineNumber":461,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":462,"author":{"gitId":"arsatis"},"content":"     * @param input User input containing the index of the task to be edited, in String format."},{"lineNumber":463,"author":{"gitId":"arsatis"},"content":"     * @return Duke\u0027s response to the user."},{"lineNumber":464,"author":{"gitId":"arsatis"},"content":"     * @throws InvalidInputException If the user provided a non-integer index in the user input."},{"lineNumber":465,"author":{"gitId":"arsatis"},"content":"     * @throws ListOutOfBoundsException If the user provided an index which is not in the list."},{"lineNumber":466,"author":{"gitId":"arsatis"},"content":"     * @throws TaskTypeErrorException If the user attempts to modify the date of a non-deadline and non-event."},{"lineNumber":467,"author":{"gitId":"arsatis"},"content":"     * @throws DateFormatException If the specified date is incorrectly formatted."},{"lineNumber":468,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":469,"author":{"gitId":"arsatis"},"content":"    public String editTask(String input) throws InvalidInputException, ListOutOfBoundsException,"},{"lineNumber":470,"author":{"gitId":"arsatis"},"content":"            TaskTypeErrorException, DateFormatException {"},{"lineNumber":471,"author":{"gitId":"arsatis"},"content":"        int index \u003d getIndex(input);"},{"lineNumber":472,"author":{"gitId":"arsatis"},"content":"        int splitLimit \u003d 4;"},{"lineNumber":473,"author":{"gitId":"arsatis"},"content":"        String splitRegex \u003d \" \";"},{"lineNumber":474,"author":{"gitId":"arsatis"},"content":"        String[] sArray \u003d input.split(splitRegex, splitLimit);"},{"lineNumber":475,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":476,"author":{"gitId":"arsatis"},"content":"        try {"},{"lineNumber":477,"author":{"gitId":"arsatis"},"content":"            int commandType \u003d 2;"},{"lineNumber":478,"author":{"gitId":"arsatis"},"content":"            int leftover \u003d 3;"},{"lineNumber":479,"author":{"gitId":"arsatis"},"content":"            String typeDate \u003d \"/date\";"},{"lineNumber":480,"author":{"gitId":"arsatis"},"content":"            String typeDescription \u003d \"/desc\";"},{"lineNumber":481,"author":{"gitId":"arsatis"},"content":"            Task t \u003d tasks.get(index);"},{"lineNumber":482,"author":{"gitId":"arsatis"},"content":"            String originalOutput \u003d t.toString();"},{"lineNumber":483,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":484,"author":{"gitId":"arsatis"},"content":"            if (sArray.length \u003c 4) {"},{"lineNumber":485,"author":{"gitId":"arsatis"},"content":"                throw new InvalidInputException();"},{"lineNumber":486,"author":{"gitId":"arsatis"},"content":"            }"},{"lineNumber":487,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":488,"author":{"gitId":"arsatis"},"content":"            if (sArray[commandType].equals(typeDate)) {"},{"lineNumber":489,"author":{"gitId":"arsatis"},"content":"                editTaskDate(t, sArray[leftover]);"},{"lineNumber":490,"author":{"gitId":"arsatis"},"content":"            } else if (sArray[commandType].equals(typeDescription)) {"},{"lineNumber":491,"author":{"gitId":"arsatis"},"content":"                editTaskDescription(t, sArray[leftover]);"},{"lineNumber":492,"author":{"gitId":"arsatis"},"content":"            } else {"},{"lineNumber":493,"author":{"gitId":"arsatis"},"content":"                throw new InvalidInputException();"},{"lineNumber":494,"author":{"gitId":"arsatis"},"content":"            }"},{"lineNumber":495,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":496,"author":{"gitId":"arsatis"},"content":"            String output \u003d \"Noted. I\u0027ve edited this task:\\n\""},{"lineNumber":497,"author":{"gitId":"arsatis"},"content":"                    + originalOutput + \"\\n \\uD83E\\uDC13 \\n\""},{"lineNumber":498,"author":{"gitId":"arsatis"},"content":"                    + t.toString() + \"\\n\";"},{"lineNumber":499,"author":{"gitId":"arsatis"},"content":"            System.out.println(output);"},{"lineNumber":500,"author":{"gitId":"arsatis"},"content":"            return output;"},{"lineNumber":501,"author":{"gitId":"arsatis"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":502,"author":{"gitId":"arsatis"},"content":"            throw new ListOutOfBoundsException(tasks.size());"},{"lineNumber":503,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":504,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":505,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":506,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":507,"author":{"gitId":"arsatis"},"content":"     * Returns the list of tasks which the user currently has in his/her task list."},{"lineNumber":508,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":509,"author":{"gitId":"arsatis"},"content":"     * @return The list of tasks which the user currently has."},{"lineNumber":510,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":511,"author":{"gitId":"arsatis"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":512,"author":{"gitId":"arsatis"},"content":"        return tasks;"},{"lineNumber":513,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":514,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":515,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":516,"author":{"gitId":"arsatis"},"content":"     * Function which helps to separate the list of tasks into three separate lists, based on their type."},{"lineNumber":517,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":518,"author":{"gitId":"arsatis"},"content":"     * @param todos The list which will be containing the to-dos."},{"lineNumber":519,"author":{"gitId":"arsatis"},"content":"     * @param deadlines The list which will be containing the deadlines."},{"lineNumber":520,"author":{"gitId":"arsatis"},"content":"     * @param events The list which will be containing the events."},{"lineNumber":521,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":522,"author":{"gitId":"arsatis"},"content":"    private void separateTasksByType(ArrayList\u003cToDo\u003e todos, ArrayList\u003cDeadline\u003e deadlines, ArrayList\u003cEvent\u003e events) {"},{"lineNumber":523,"author":{"gitId":"arsatis"},"content":"        while (!tasks.isEmpty()) {"},{"lineNumber":524,"author":{"gitId":"arsatis"},"content":"            Task t \u003d tasks.remove(0);"},{"lineNumber":525,"author":{"gitId":"arsatis"},"content":"            if (t instanceof ToDo) {"},{"lineNumber":526,"author":{"gitId":"arsatis"},"content":"                todos.add((ToDo) t);"},{"lineNumber":527,"author":{"gitId":"arsatis"},"content":"            } else if (t instanceof Deadline) {"},{"lineNumber":528,"author":{"gitId":"arsatis"},"content":"                deadlines.add((Deadline) t);"},{"lineNumber":529,"author":{"gitId":"arsatis"},"content":"            } else if (t instanceof Event) {"},{"lineNumber":530,"author":{"gitId":"arsatis"},"content":"                events.add((Event) t);"},{"lineNumber":531,"author":{"gitId":"arsatis"},"content":"            }"},{"lineNumber":532,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":533,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":534,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":535,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":536,"author":{"gitId":"arsatis"},"content":"     * Sorts the list of tasks first based on their type, followed by their date."},{"lineNumber":537,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":538,"author":{"gitId":"arsatis"},"content":"    public void sortTasksByTypeAndDate() {"},{"lineNumber":539,"author":{"gitId":"arsatis"},"content":"        ArrayList\u003cToDo\u003e todos \u003d new ArrayList\u003c\u003e();"},{"lineNumber":540,"author":{"gitId":"arsatis"},"content":"        ArrayList\u003cDeadline\u003e deadlines \u003d new ArrayList\u003c\u003e();"},{"lineNumber":541,"author":{"gitId":"arsatis"},"content":"        ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();"},{"lineNumber":542,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":543,"author":{"gitId":"arsatis"},"content":"        separateTasksByType(todos, deadlines, events);"},{"lineNumber":544,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":545,"author":{"gitId":"arsatis"},"content":"        Collections.sort(deadlines);"},{"lineNumber":546,"author":{"gitId":"arsatis"},"content":"        Collections.sort(events);"},{"lineNumber":547,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":548,"author":{"gitId":"arsatis"},"content":"        tasks.addAll(todos);"},{"lineNumber":549,"author":{"gitId":"arsatis"},"content":"        tasks.addAll(deadlines);"},{"lineNumber":550,"author":{"gitId":"arsatis"},"content":"        tasks.addAll(events);"},{"lineNumber":551,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":552,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":553,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":554,"author":{"gitId":"arsatis"},"content":"     * Sorts the list of tasks based on their type."},{"lineNumber":555,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":556,"author":{"gitId":"arsatis"},"content":"    public void sortTasksByType() {"},{"lineNumber":557,"author":{"gitId":"arsatis"},"content":"        ArrayList\u003cToDo\u003e todos \u003d new ArrayList\u003c\u003e();"},{"lineNumber":558,"author":{"gitId":"arsatis"},"content":"        ArrayList\u003cDeadline\u003e deadlines \u003d new ArrayList\u003c\u003e();"},{"lineNumber":559,"author":{"gitId":"arsatis"},"content":"        ArrayList\u003cEvent\u003e events \u003d new ArrayList\u003c\u003e();"},{"lineNumber":560,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":561,"author":{"gitId":"arsatis"},"content":"        separateTasksByType(todos, deadlines, events);"},{"lineNumber":562,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":563,"author":{"gitId":"arsatis"},"content":"        tasks.addAll(todos);"},{"lineNumber":564,"author":{"gitId":"arsatis"},"content":"        tasks.addAll(deadlines);"},{"lineNumber":565,"author":{"gitId":"arsatis"},"content":"        tasks.addAll(events);"},{"lineNumber":566,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":567,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":568,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":569,"author":{"gitId":"arsatis"},"content":"     * Sorts the list of tasks based on their name, in alphabetical ordering."},{"lineNumber":570,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":571,"author":{"gitId":"arsatis"},"content":"    public void sortTasksByName() {"},{"lineNumber":572,"author":{"gitId":"arsatis"},"content":"        tasks.sort(new TaskComparator());"},{"lineNumber":573,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":574,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":575,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":576,"author":{"gitId":"arsatis"},"content":"     * Displays the number of to-dos, deadlines, and events that the user currently has."},{"lineNumber":577,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":578,"author":{"gitId":"arsatis"},"content":"     * @return The number of to-dos, deadlines, and events that the user currently has."},{"lineNumber":579,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":580,"author":{"gitId":"arsatis"},"content":"    public String displayStats() {"},{"lineNumber":581,"author":{"gitId":"arsatis"},"content":"        int numTodos \u003d 0;"},{"lineNumber":582,"author":{"gitId":"arsatis"},"content":"        int numDeadlines \u003d 0;"},{"lineNumber":583,"author":{"gitId":"arsatis"},"content":"        int numEvents \u003d 0;"},{"lineNumber":584,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":585,"author":{"gitId":"arsatis"},"content":"        for (Task t : tasks) {"},{"lineNumber":586,"author":{"gitId":"arsatis"},"content":"            if (t instanceof ToDo) {"},{"lineNumber":587,"author":{"gitId":"arsatis"},"content":"                numTodos++;"},{"lineNumber":588,"author":{"gitId":"arsatis"},"content":"            } else if (t instanceof Deadline) {"},{"lineNumber":589,"author":{"gitId":"arsatis"},"content":"                numDeadlines++;"},{"lineNumber":590,"author":{"gitId":"arsatis"},"content":"            } else if (t instanceof Event) {"},{"lineNumber":591,"author":{"gitId":"arsatis"},"content":"                numEvents++;"},{"lineNumber":592,"author":{"gitId":"arsatis"},"content":"            }"},{"lineNumber":593,"author":{"gitId":"arsatis"},"content":"        }"},{"lineNumber":594,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":595,"author":{"gitId":"arsatis"},"content":"        String output \u003d \"Your task list currently consists of:\\n\""},{"lineNumber":596,"author":{"gitId":"arsatis"},"content":"                + numTodos + \" to-dos,\\n\""},{"lineNumber":597,"author":{"gitId":"arsatis"},"content":"                + numDeadlines + \" deadlines, and\\n\""},{"lineNumber":598,"author":{"gitId":"arsatis"},"content":"                + numEvents + \" events.\";"},{"lineNumber":599,"author":{"gitId":"arsatis"},"content":"        System.out.println(output);"},{"lineNumber":600,"author":{"gitId":"arsatis"},"content":"        return output;"},{"lineNumber":601,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":602,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":603,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":603}},{"path":"src/main/java/chadbot/subfiles/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.subfiles;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":" * The Ui class manages interactions with the user, based on user input."},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * @version 1.2"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" * @since   2021-02-08"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"public class Ui {"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"    /** Scanner class used to read user input. */"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"    private Scanner sc;"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the Ui class."},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"    public Ui() {"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"        sc \u003d new Scanner(System.in);"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"     * Greets the user upon execution of the program."},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"    public void greet() {"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"        System.out.println(\"Welcome to Chadbot.\\nWhat can I do for you?\");"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"        showLine();"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     * Bids the user farewell before termination of the program."},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"    public void bye() {"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"        sc.close();"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"     * Reads the user\u0027s input from the command line."},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     * @return The user\u0027s input formatted as a String object."},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"    public String readCommand() {"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"        return sc.nextLine();"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"     * Displays a horizontal line on the GUI."},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"    public void showLine() {"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"        System.out.println(\"__________\");"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"     * Displays a horizontal line of dots on the GUI."},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"    public void showDots() {"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"        System.out.println(\"..........\");"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"     * Displays the error message produced by a command."},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"     * @param s The error message produced by the command."},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"    public void showError(String s) {"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"        System.out.println(s);"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"     * Returns a help page formatted as a String."},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"     * @return A help page formatted as a String."},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"    public String getHelp() {"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"        String helpPage \u003d \"So you need help, eh?\\n\""},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"                + \"--------------------------------------------------\\n\""},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"                + \"Enter \\\"help\\\" to access this help page again.\\n\""},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"                + \"Enter \\\"help /more\\\" to get access to additional commands supported by Chadbot.\\n\""},{"lineNumber":81,"author":{"gitId":"arsatis"},"content":"                + \"--------------------------------------------------\\n\""},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":"                + \"Enter \\\"todo \u003cdescription\u003e\\\" to add a todo with the description into your list of tasks.\\n\""},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"                + \"Enter \\\"deadline \u003cdescription\u003e /by \u003cdate\u003e\\\" to add a deadline with the specified description\""},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"                + \" and date into your list of tasks.\\n\""},{"lineNumber":85,"author":{"gitId":"arsatis"},"content":"                + \"Enter \\\"event \u003cdescription\u003e /at \u003cdate\u003e\\\" to add an event with the specified description\""},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":"                + \" and date into your list of tasks.\\n\""},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":"                + \"--------------------------------------------------\\n\""},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"                + \"Enter \\\"list\\\" to display the list of tasks you currently have.\\n\""},{"lineNumber":89,"author":{"gitId":"arsatis"},"content":"                + \"Enter \\\"list \u003cdate\u003e\\\" to display the list of deadlines due and events happening on your\""},{"lineNumber":90,"author":{"gitId":"arsatis"},"content":"                + \" specified date.\\n\""},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":"                + \"--------------------------------------------------\\n\""},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"                + \"Enter \\\"delete \u003cindex\u003e\\\" to delete a task at the specified index.\\n\""},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"                + \"--------------------------------------------------\\n\""},{"lineNumber":94,"author":{"gitId":"arsatis"},"content":"                + \"Enter \\\"bye\\\" to terminate the program.\\n\";"},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":"        System.out.println(helpPage);"},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"        return helpPage;"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":99,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"arsatis"},"content":"     * Returns a second help page formatted as a String."},{"lineNumber":101,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"arsatis"},"content":"     * @return A second help page formatted as a String."},{"lineNumber":103,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"arsatis"},"content":"    public String getMoreHelp() {"},{"lineNumber":105,"author":{"gitId":"arsatis"},"content":"        String helpPage \u003d \"What are you so desperately trying to find?\\n\""},{"lineNumber":106,"author":{"gitId":"arsatis"},"content":"                + \"--------------------------------------------------\\n\""},{"lineNumber":107,"author":{"gitId":"arsatis"},"content":"                + \"Enter \\\"help\\\" to access the previous help page.\\n\""},{"lineNumber":108,"author":{"gitId":"arsatis"},"content":"                + \"Enter \\\"help /more\\\" to access this help page again.\\n\""},{"lineNumber":109,"author":{"gitId":"arsatis"},"content":"                + \"--------------------------------------------------\\n\""},{"lineNumber":110,"author":{"gitId":"arsatis"},"content":"                + \"Enter \\\"edit \u003cindex\u003e /desc \u003cdescription\u003e\\\" to edit the description of a task at the specified\""},{"lineNumber":111,"author":{"gitId":"arsatis"},"content":"                + \" index.\\n\""},{"lineNumber":112,"author":{"gitId":"arsatis"},"content":"                + \"Enter \\\"edit \u003cindex\u003e /date \u003cdate\u003e\\\" to edit the date of a deadline or event at the specified\""},{"lineNumber":113,"author":{"gitId":"arsatis"},"content":"                + \" index.\\n\""},{"lineNumber":114,"author":{"gitId":"arsatis"},"content":"                + \"--------------------------------------------------\\n\""},{"lineNumber":115,"author":{"gitId":"arsatis"},"content":"                + \"Enter \\\"done \u003cindex\u003e\\\" to mark a task at the specified index as done.\\n\""},{"lineNumber":116,"author":{"gitId":"arsatis"},"content":"                + \"--------------------------------------------------\\n\""},{"lineNumber":117,"author":{"gitId":"arsatis"},"content":"                + \"Enter \\\"find \u003ckeyword\u003e\\\" to find tasks containing the specified keyword.\\n\""},{"lineNumber":118,"author":{"gitId":"arsatis"},"content":"                + \"--------------------------------------------------\\n\""},{"lineNumber":119,"author":{"gitId":"arsatis"},"content":"                + \"Enter \\\"sort\\\" to sort your list of tasks into alphabetical ordering.\\n\""},{"lineNumber":120,"author":{"gitId":"arsatis"},"content":"                + \"Enter \\\"sort /by type\\\" to sort your list of tasks by their type.\\n\""},{"lineNumber":121,"author":{"gitId":"arsatis"},"content":"                + \"Enter \\\"sort /by date\\\" to sort your list of tasks first by their type, then by their date.\\n\""},{"lineNumber":122,"author":{"gitId":"arsatis"},"content":"                + \"--------------------------------------------------\\n\""},{"lineNumber":123,"author":{"gitId":"arsatis"},"content":"                + \"Enter \\\"stats\\\" to see the number of to-dos, deadlines, and events you currently have.\\n\";"},{"lineNumber":124,"author":{"gitId":"arsatis"},"content":"        System.out.println(helpPage);"},{"lineNumber":125,"author":{"gitId":"arsatis"},"content":"        return helpPage;"},{"lineNumber":126,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":128,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":128}},{"path":"src/main/java/chadbot/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.task;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * The Deadline class represents a single deadline created by the user via user input to the Duke program."},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" * It contains functions which enable the user to mark the task as done,"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * and a date which the deadline is due."},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":" * @version 1.2"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":" * @since   2021-02-08"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"public class Deadline extends Task implements Comparable\u003cDeadline\u003e {"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"    /** Date which the deadline is due. */"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"    private LocalDate date;"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the Deadline class."},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     * @param name Description of the deadline."},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"     * @param date Date which the deadline is due."},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"    public Deadline(String name, LocalDate date) {"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"        super(name);"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"        this.date \u003d date;"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"        assert(this.name !\u003d null \u0026\u0026 this.date !\u003d null);"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     * Returns the date the Deadline is due on, formatted as a String."},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     * @return The date the Deadline is due on, formatted as a String."},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"    public String getDate() {"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"        return date.toString();"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     * Returns the date the Deadline is due on, formatted as a LocalDate."},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     * @return The date the Deadline is due on, formatted as a LocalDate."},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"    public LocalDate getDateAsLocalDate() {"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"        return date;"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"     * Modifies the date the Deadline is due on."},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"    public void setDate(LocalDate date) {"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"        this.date \u003d date;"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"     * Returns a description of the deadline, formatted with its type,"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"     * followed by an \"X\" if it has been marked as done."},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"     * @return Formatted description of the deadline."},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"    public String toString() {"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"        return \"[D][\" + (isDone ? \"X\" : \" \") + \"] \" + name + \" (by: \""},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"     * Compares this deadline with another deadline, by comparing their due dates."},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"     * @param other The deadline that is being compared to."},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"     * @return The difference between this deadline and the deadline that is being compared to, in terms of days."},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"    public int compareTo(Deadline other) {"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"        return date.compareTo(other.getDateAsLocalDate());"},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":80}},{"path":"src/main/java/chadbot/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.task;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * The Event class represents a single event created by the user via user input to the Duke program."},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" * It contains functions which enable the user to mark the task as done,"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * and a date which the event is held on."},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":" * @version 1.2"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":" * @since   2021-02-08"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"public class Event extends Task implements Comparable\u003cEvent\u003e {"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"    /** Date which the event is held on. */"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"    private LocalDate date;"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the Event class."},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     * @param name Description of the event."},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"     * @param date Date which the event is held on."},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"    public Event(String name, LocalDate date) {"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"        super(name);"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"        this.date \u003d date;"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"        assert(this.name !\u003d null \u0026\u0026 this.date !\u003d null);"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"     * Returns the date the Event is held on, formatted as a String."},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"     * @return The date the Event is held on, formatted as a String."},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"    public String getDate() {"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"        return date.toString();"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"     * Returns the date the Event is held on, formatted as a LocalDate."},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"     * @return The date the Event is held on, formatted as a LocalDate."},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"    public LocalDate getDateAsLocalDate() {"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"        return date;"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"     * Modifies the date the Event is held on."},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"    public void setDate(LocalDate date) {"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"        this.date \u003d date;"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"     * Returns a description of the event, formatted with its type,"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"     * followed by an \"X\" if it has been marked as done."},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"     * @return Formatted description of the event."},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"    public String toString() {"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"        return \"[E][\" + (isDone ? \"X\" : \" \") + \"] \" + name + \" (at: \""},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":"     * Compares this event with another event, by comparing the dates they are held on."},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"     * @param other The event that is being compared to."},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"     * @return The difference between this event and the event that is being compared to, in terms of days."},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"    public int compareTo(Event other) {"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"        return date.compareTo(other.getDateAsLocalDate());"},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":79}},{"path":"src/main/java/chadbot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.task;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":" * The Task class represents a single task created by the user via user input to the Duke program."},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":" * It contains functions which enable the user to mark the task as done."},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" * @version 1.1"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * @since   2021-01-26"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"public abstract class Task {"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"    /** Description of the task. */"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"    protected String name;"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"    /** Indicates whether the task has been done by the user. */"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"    protected boolean isDone;"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the Task class."},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"     * @param name Description of the task."},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    public Task(String name) {"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"        this.name \u003d name;"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"        isDone \u003d false;"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"     * Checks whether the task has been marked as done."},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"     * @return True if the task has been marked as done, and false otherwise."},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"    public boolean isDone() {"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"        return isDone;"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"     * Sets the isDone field to true, indicating that the task has been marked as done."},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"    public void setDone() {"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"        isDone \u003d true;"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"     * Returns the name (description) of the task."},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"     * @return The name (description) of the task."},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"    public String getName() {"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"        return name;"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"     * Modifies the description of the Task."},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"    public void setName(String name) {"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"        this.name \u003d name;"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":60}},{"path":"src/main/java/chadbot/task/TaskComparator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.task;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import java.util.Comparator;"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":" * The TaskComparator class is used to compare two tasks based on the lexicographical ordering of their names."},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * @version 1.2"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" * @since   2021-02-08"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"public class TaskComparator implements Comparator\u003cTask\u003e {"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"     * Compares the two tasks by the lexicographical ordering of their names."},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     * @param t1 The first task to be compared."},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"     * @param t2 The second task to be compared."},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"     * @return A negative integer if t1 is lexicographically smaller than t2, and a positive integer otherwise."},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"    public int compare(Task t1, Task t2) {"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"        return t1.getName().compareTo(t2.getName());"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":26}},{"path":"src/main/java/chadbot/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"package chadbot.task;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":" * The To-Do class represents a single to-do item created by the user via user input to the Duke program."},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":" * It contains functions which enable the user to mark the to-do as done."},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":" *"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":" * @author  arsatis"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":" * @version 1.2"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":" * @since   2021-02-08"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":" */"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"public class ToDo extends Task {"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"     * Default constructor for the To-Do class."},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"     * @param name Description of the to-do."},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"    public ToDo(String name) {"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"        super(name);"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"        assert(this.name !\u003d null);"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"     * Returns a description of the to-do, formatted with its type,"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"     * followed by an \"X\" if it has been marked as done."},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"     * @return Formatted description of the to-do."},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"        return \"[T][\" + (isDone ? \"X\" : \" \") + \"] \" + name;"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":35}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"  \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"80.0\" fitWidth\u003d\"80.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"  \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"  \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"  \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"arsatis":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"\u003c?import javafx.scene.Group?\u003e"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"626.0\" prefWidth\u003d\"426.0\" styleClass\u003d\"main\" stylesheets\u003d\"@mainwindow.css\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"chadbot.gui.MainWindow\"\u003e"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"  \u003cchildren\u003e"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"    \u003cGroup layoutX\u003d\"14.0\" layoutY\u003d\"745.0\" AnchorPane.bottomAnchor\u003d\"14.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"      \u003cchildren\u003e"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" styleClass\u003d\"userinput\" stylesheets\u003d\"@mainwindow.css\" /\u003e"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"      \u003c/children\u003e"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"    \u003c/Group\u003e"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" cacheHint\u003d\"QUALITY\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutX\u003d\"14.0\" layoutY\u003d\"12.0\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"545.0\" prefWidth\u003d\"400.0\" styleClass\u003d\"scrollpane\" stylesheets\u003d\"@mainwindow.css\" vvalue\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"14.0\" AnchorPane.rightAnchor\u003d\"12.0\"\u003e"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"      \u003ccontent\u003e"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" blendMode\u003d\"MULTIPLY\" cache\u003d\"true\" prefWidth\u003d\"388.0\" spacing\u003d\"20.0\" styleClass\u003d\"vbox\" stylesheets\u003d\"@mainwindow.css\"\u003e"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"          \u003cpadding\u003e"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"20.0\" right\u003d\"20.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"          \u003c/padding\u003e"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"        \u003c/VBox\u003e"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"      \u003c/content\u003e"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"  \u003c/children\u003e"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"arsatis":29}},{"path":"src/test/java/ParseTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"import chadbot.command.AddCommand;"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"import chadbot.command.DeleteCommand;"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"import chadbot.command.DoneCommand;"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"import chadbot.command.ExitCommand;"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"import chadbot.command.PrintCommand;"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"import chadbot.subfiles.Parser;"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"public class ParseTest {"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"    public void parseAsExitCommand() {"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"        assertTrue(Parser.parse(\"bye\") instanceof ExitCommand);"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"        assertTrue(Parser.parse(\"bye Duke\") instanceof ExitCommand);"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    public void parseAsPrintCommand() {"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"        assertTrue(Parser.parse(\"list\") instanceof PrintCommand);"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"        assertTrue(Parser.parse(\"list abcde\") instanceof PrintCommand);"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"        assertTrue(Parser.parse(\"list 1111-11-11\") instanceof PrintCommand);"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"    public void parseAsDoneCommand() {"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"        assertTrue(Parser.parse(\"done\") instanceof DoneCommand);"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":"        assertTrue(Parser.parse(\"done abcde\") instanceof DoneCommand);"},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"        assertTrue(Parser.parse(\"done 1\") instanceof DoneCommand);"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":"    public void parseAsDeleteCommand() {"},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"        assertTrue(Parser.parse(\"delete\") instanceof DeleteCommand);"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"        assertTrue(Parser.parse(\"delete abcde\") instanceof DeleteCommand);"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"        assertTrue(Parser.parse(\"delete 1\") instanceof DeleteCommand);"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":"    public void parseAsAddCommand() {"},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"        assertTrue(Parser.parse(\"\") instanceof AddCommand);"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"        assertTrue(Parser.parse(\"todo abcde\") instanceof AddCommand);"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"        assertTrue(Parser.parse(\"deadline abcde\") instanceof AddCommand);"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"        assertTrue(Parser.parse(\"deadline abcde /by 1111-11-11\") instanceof AddCommand);"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"        assertTrue(Parser.parse(\"event abcde\") instanceof AddCommand);"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"        assertTrue(Parser.parse(\"event abcde /at 1111-11-11\") instanceof AddCommand);"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":49}},{"path":"src/test/java/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"import chadbot.task.Deadline;"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"import chadbot.task.Event;"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"import chadbot.task.Task;"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"import chadbot.task.ToDo;"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"public class TaskTest {"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"    public void setTaskAsDone_beforeSetDone() {"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"        assertFalse(new Task(\"\").isDone());"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":20,"author":{"gitId":"arsatis"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"arsatis"},"content":"    public void setToDoAsDone_beforeSetDone() {"},{"lineNumber":22,"author":{"gitId":"arsatis"},"content":"        assertFalse(new ToDo(\"\").isDone());"},{"lineNumber":23,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":25,"author":{"gitId":"arsatis"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"arsatis"},"content":"    public void setDeadlineAsDone_beforeSetDone() {"},{"lineNumber":27,"author":{"gitId":"arsatis"},"content":"        assertFalse(new Deadline(\"\", LocalDate.parse(\"1111-11-11\")).isDone());"},{"lineNumber":28,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":30,"author":{"gitId":"arsatis"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"arsatis"},"content":"    public void setEventAsDone_beforeSetDone() {"},{"lineNumber":32,"author":{"gitId":"arsatis"},"content":"        assertFalse(new Event(\"\", LocalDate.parse(\"1111-11-11\")).isDone());"},{"lineNumber":33,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":35,"author":{"gitId":"arsatis"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"arsatis"},"content":"    public void setTaskAsDone_afterSetDone() {"},{"lineNumber":37,"author":{"gitId":"arsatis"},"content":"        Task task \u003d new Task(\"\");"},{"lineNumber":38,"author":{"gitId":"arsatis"},"content":"        task.setDone();"},{"lineNumber":39,"author":{"gitId":"arsatis"},"content":"        assertTrue(task.isDone());"},{"lineNumber":40,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":42,"author":{"gitId":"arsatis"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"arsatis"},"content":"    public void setToDoAsDone_afterSetDone() {"},{"lineNumber":44,"author":{"gitId":"arsatis"},"content":"        ToDo todo \u003d new ToDo(\"\");"},{"lineNumber":45,"author":{"gitId":"arsatis"},"content":"        todo.setDone();"},{"lineNumber":46,"author":{"gitId":"arsatis"},"content":"        assertTrue(todo.isDone());"},{"lineNumber":47,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":49,"author":{"gitId":"arsatis"},"content":"    @Test"},{"lineNumber":50,"author":{"gitId":"arsatis"},"content":"    public void setDeadlineAsDone_afterSetDone() {"},{"lineNumber":51,"author":{"gitId":"arsatis"},"content":"        Deadline deadline \u003d new Deadline(\"\", LocalDate.parse(\"1111-11-11\"));"},{"lineNumber":52,"author":{"gitId":"arsatis"},"content":"        deadline.setDone();"},{"lineNumber":53,"author":{"gitId":"arsatis"},"content":"        assertTrue(deadline.isDone());"},{"lineNumber":54,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":56,"author":{"gitId":"arsatis"},"content":"    @Test"},{"lineNumber":57,"author":{"gitId":"arsatis"},"content":"    public void setEventAsDone_afterSetDone() {"},{"lineNumber":58,"author":{"gitId":"arsatis"},"content":"        Event event \u003d new Event(\"\", LocalDate.parse(\"1111-11-11\"));"},{"lineNumber":59,"author":{"gitId":"arsatis"},"content":"        event.setDone();"},{"lineNumber":60,"author":{"gitId":"arsatis"},"content":"        assertTrue(event.isDone());"},{"lineNumber":61,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":63,"author":{"gitId":"arsatis"},"content":"    @Test"},{"lineNumber":64,"author":{"gitId":"arsatis"},"content":"    public void getTaskName() {"},{"lineNumber":65,"author":{"gitId":"arsatis"},"content":"        assertEquals(\"\", new Task(\"\").getName());"},{"lineNumber":66,"author":{"gitId":"arsatis"},"content":"        assertEquals(\"hi\", new Task(\"hi\").getName());"},{"lineNumber":67,"author":{"gitId":"arsatis"},"content":"        assertEquals(\"qwertyuiopasdfghjklzxcvbnm\","},{"lineNumber":68,"author":{"gitId":"arsatis"},"content":"                new Task(\"qwertyuiopasdfghjklzxcvbnm\").getName());"},{"lineNumber":69,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":71,"author":{"gitId":"arsatis"},"content":"    @Test"},{"lineNumber":72,"author":{"gitId":"arsatis"},"content":"    public void getTodoName() {"},{"lineNumber":73,"author":{"gitId":"arsatis"},"content":"        assertEquals(\"\", new ToDo(\"\").getName());"},{"lineNumber":74,"author":{"gitId":"arsatis"},"content":"        assertEquals(\"hi\", new ToDo(\"hi\").getName());"},{"lineNumber":75,"author":{"gitId":"arsatis"},"content":"        assertEquals(\"qwertyuiopasdfghjklzxcvbnm\","},{"lineNumber":76,"author":{"gitId":"arsatis"},"content":"                new ToDo(\"qwertyuiopasdfghjklzxcvbnm\").getName());"},{"lineNumber":77,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":79,"author":{"gitId":"arsatis"},"content":"    @Test"},{"lineNumber":80,"author":{"gitId":"arsatis"},"content":"    public void getDeadlineName() {"},{"lineNumber":81,"author":{"gitId":"arsatis"},"content":"        assertEquals(\"\", new Deadline(\"\", LocalDate.parse(\"1111-11-11\")).getName());"},{"lineNumber":82,"author":{"gitId":"arsatis"},"content":"        assertEquals(\"hi\", new Deadline(\"hi\", LocalDate.parse(\"1111-11-11\")).getName());"},{"lineNumber":83,"author":{"gitId":"arsatis"},"content":"        assertEquals(\"qwertyuiopasdfghjklzxcvbnm\","},{"lineNumber":84,"author":{"gitId":"arsatis"},"content":"                new Deadline(\"qwertyuiopasdfghjklzxcvbnm\", LocalDate.parse(\"1111-11-11\")).getName());"},{"lineNumber":85,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":87,"author":{"gitId":"arsatis"},"content":"    @Test"},{"lineNumber":88,"author":{"gitId":"arsatis"},"content":"    public void getEventName() {"},{"lineNumber":89,"author":{"gitId":"arsatis"},"content":"        assertEquals(\"\", new Event(\"\", LocalDate.parse(\"1111-11-11\")).getName());"},{"lineNumber":90,"author":{"gitId":"arsatis"},"content":"        assertEquals(\"hi\", new Event(\"hi\", LocalDate.parse(\"1111-11-11\")).getName());"},{"lineNumber":91,"author":{"gitId":"arsatis"},"content":"        assertEquals(\"qwertyuiopasdfghjklzxcvbnm\","},{"lineNumber":92,"author":{"gitId":"arsatis"},"content":"                new Event(\"qwertyuiopasdfghjklzxcvbnm\", LocalDate.parse(\"1111-11-11\")).getName());"},{"lineNumber":93,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":95,"author":{"gitId":"arsatis"},"content":"    @Test"},{"lineNumber":96,"author":{"gitId":"arsatis"},"content":"    public void getTaskToString() {"},{"lineNumber":97,"author":{"gitId":"arsatis"},"content":"        Task t \u003d new Task(\"say hi\");"},{"lineNumber":98,"author":{"gitId":"arsatis"},"content":"        assertEquals(\"[ ][ ] say hi\", t.toString());"},{"lineNumber":99,"author":{"gitId":"arsatis"},"content":"        t.setDone();"},{"lineNumber":100,"author":{"gitId":"arsatis"},"content":"        assertEquals(\"[ ][X] say hi\", t.toString());"},{"lineNumber":101,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":103,"author":{"gitId":"arsatis"},"content":"    @Test"},{"lineNumber":104,"author":{"gitId":"arsatis"},"content":"    public void getToDoToString() {"},{"lineNumber":105,"author":{"gitId":"arsatis"},"content":"        ToDo t \u003d new ToDo(\"say hi\");"},{"lineNumber":106,"author":{"gitId":"arsatis"},"content":"        assertEquals(\"[T][ ] say hi\", t.toString());"},{"lineNumber":107,"author":{"gitId":"arsatis"},"content":"        t.setDone();"},{"lineNumber":108,"author":{"gitId":"arsatis"},"content":"        assertEquals(\"[T][X] say hi\", t.toString());"},{"lineNumber":109,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":111,"author":{"gitId":"arsatis"},"content":"    @Test"},{"lineNumber":112,"author":{"gitId":"arsatis"},"content":"    public void getDeadlineToString() {"},{"lineNumber":113,"author":{"gitId":"arsatis"},"content":"        Deadline d \u003d new Deadline(\"say hi\", LocalDate.parse(\"1111-11-11\"));"},{"lineNumber":114,"author":{"gitId":"arsatis"},"content":"        assertEquals(\"[D][ ] say hi (by: Nov 11 1111)\", d.toString());"},{"lineNumber":115,"author":{"gitId":"arsatis"},"content":"        d.setDone();"},{"lineNumber":116,"author":{"gitId":"arsatis"},"content":"        assertEquals(\"[D][X] say hi (by: Nov 11 1111)\", d.toString());"},{"lineNumber":117,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":119,"author":{"gitId":"arsatis"},"content":"    @Test"},{"lineNumber":120,"author":{"gitId":"arsatis"},"content":"    public void getEventToString() {"},{"lineNumber":121,"author":{"gitId":"arsatis"},"content":"        Event e \u003d new Event(\"say hi\", LocalDate.parse(\"1111-11-11\"));"},{"lineNumber":122,"author":{"gitId":"arsatis"},"content":"        assertEquals(\"[E][ ] say hi (at: Nov 11 1111)\", e.toString());"},{"lineNumber":123,"author":{"gitId":"arsatis"},"content":"        e.setDone();"},{"lineNumber":124,"author":{"gitId":"arsatis"},"content":"        assertEquals(\"[E][X] say hi (at: Nov 11 1111)\", e.toString());"},{"lineNumber":125,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":127,"author":{"gitId":"arsatis"},"content":"    @Test"},{"lineNumber":128,"author":{"gitId":"arsatis"},"content":"    public void getDeadlineDate() {"},{"lineNumber":129,"author":{"gitId":"arsatis"},"content":"        assertEquals(\"1111-11-11\","},{"lineNumber":130,"author":{"gitId":"arsatis"},"content":"                new Deadline(\"\", LocalDate.parse(\"1111-11-11\")).getDate());"},{"lineNumber":131,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":133,"author":{"gitId":"arsatis"},"content":"    @Test"},{"lineNumber":134,"author":{"gitId":"arsatis"},"content":"    public void getEventDate() {"},{"lineNumber":135,"author":{"gitId":"arsatis"},"content":"        assertEquals(\"1111-11-11\","},{"lineNumber":136,"author":{"gitId":"arsatis"},"content":"                new Event(\"\", LocalDate.parse(\"1111-11-11\")).getDate());"},{"lineNumber":137,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":139,"author":{"gitId":"arsatis"},"content":"    @Test"},{"lineNumber":140,"author":{"gitId":"arsatis"},"content":"    public void getDeadlineDateAsLocalDate() {"},{"lineNumber":141,"author":{"gitId":"arsatis"},"content":"        assertEquals(LocalDate.parse(\"1111-11-11\"),"},{"lineNumber":142,"author":{"gitId":"arsatis"},"content":"                new Deadline(\"\", LocalDate.parse(\"1111-11-11\")).getDateAsLocalDate());"},{"lineNumber":143,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"arsatis"},"content":""},{"lineNumber":145,"author":{"gitId":"arsatis"},"content":"    @Test"},{"lineNumber":146,"author":{"gitId":"arsatis"},"content":"    public void getEventDateAsLocalDate() {"},{"lineNumber":147,"author":{"gitId":"arsatis"},"content":"        assertEquals(LocalDate.parse(\"1111-11-11\"),"},{"lineNumber":148,"author":{"gitId":"arsatis"},"content":"                new Event(\"\", LocalDate.parse(\"1111-11-11\")).getDateAsLocalDate());"},{"lineNumber":149,"author":{"gitId":"arsatis"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"arsatis"},"content":"}"}],"authorContributionMap":{"arsatis":150}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"arsatis"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"arsatis"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"arsatis"},"content":"deadline return book /by 2011-11-11"},{"lineNumber":4,"author":{"gitId":"arsatis"},"content":"deadline return book /by 2019-01-01"},{"lineNumber":5,"author":{"gitId":"arsatis"},"content":"deadline return book /by 2034-02-28"},{"lineNumber":6,"author":{"gitId":"arsatis"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":7,"author":{"gitId":"arsatis"},"content":"event project meeting /at 2034-02-28"},{"lineNumber":8,"author":{"gitId":"arsatis"},"content":"list"},{"lineNumber":9,"author":{"gitId":"arsatis"},"content":"done 2"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"done 4"},{"lineNumber":11,"author":{"gitId":"arsatis"},"content":"delete 3"},{"lineNumber":12,"author":{"gitId":"arsatis"},"content":"delete 3"},{"lineNumber":13,"author":{"gitId":"arsatis"},"content":"list"},{"lineNumber":14,"author":{"gitId":"arsatis"},"content":"list Mon 2-4pm"},{"lineNumber":15,"author":{"gitId":"arsatis"},"content":"list 1111-11-11"},{"lineNumber":16,"author":{"gitId":"arsatis"},"content":"list 2034-02-28"},{"lineNumber":17,"author":{"gitId":"arsatis"},"content":"bye"}],"authorContributionMap":{"arsatis":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"arsatis"},"content":"javac -sourcepath ..\\src -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"arsatis"},"content":"java -classpath ..\\bin main.java.duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"arsatis":2,"-":19}}]
