[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":" * Represents a task with a deadline specified in the by argument."},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":" */"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"public class Deadline extends Task {"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"    protected String by;"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":""},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"     * Creates a task with a deadline specified in the by argument."},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"     * @param description Describes the task."},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"     * @param by          Specifies the deadline of this task."},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"        this.by \u003d by;"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":""},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"}"}],"authorContributionMap":{"LimJunxue":22}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":""},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":" * Encompasses the behavior of the Duke chat-bot."},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":" */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"    private static List\u003cTask\u003e tasks;"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" +"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"                \"What can I do for you?\");"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":""},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"        Scanner scan \u003d new Scanner(System.in);"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"        while (scan.hasNextLine()) {"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"            String command \u003d scan.nextLine();"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"            dispatch(command);"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"            if (command.equals(\"bye\")) {"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"                break;"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"        scan.close();"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":""},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"LimJunxue"},"content":"     * Carries out the corresponding actions of the command."},{"lineNumber":35,"author":{"gitId":"LimJunxue"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"LimJunxue"},"content":"     * @param command A string of the command to be carried out."},{"lineNumber":37,"author":{"gitId":"LimJunxue"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"LimJunxue"},"content":"    private static void dispatch(String command) {"},{"lineNumber":39,"author":{"gitId":"LimJunxue"},"content":"        printLine();"},{"lineNumber":40,"author":{"gitId":"LimJunxue"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"LimJunxue"},"content":"            switch (command.split(\" \")[0]) {"},{"lineNumber":42,"author":{"gitId":"LimJunxue"},"content":"                case \"bye\":"},{"lineNumber":43,"author":{"gitId":"LimJunxue"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":44,"author":{"gitId":"LimJunxue"},"content":"                    break;"},{"lineNumber":45,"author":{"gitId":"LimJunxue"},"content":"                case \"list\":"},{"lineNumber":46,"author":{"gitId":"LimJunxue"},"content":"                    printList();"},{"lineNumber":47,"author":{"gitId":"LimJunxue"},"content":"                    break;"},{"lineNumber":48,"author":{"gitId":"LimJunxue"},"content":"                case \"done\":"},{"lineNumber":49,"author":{"gitId":"LimJunxue"},"content":"                    handleDone(command);"},{"lineNumber":50,"author":{"gitId":"LimJunxue"},"content":"                    break;"},{"lineNumber":51,"author":{"gitId":"LimJunxue"},"content":"                case \"delete\":"},{"lineNumber":52,"author":{"gitId":"LimJunxue"},"content":"                    handleDelete(command);"},{"lineNumber":53,"author":{"gitId":"LimJunxue"},"content":"                    break;"},{"lineNumber":54,"author":{"gitId":"LimJunxue"},"content":"                case \"todo\":"},{"lineNumber":55,"author":{"gitId":"LimJunxue"},"content":"                    Task toDoTask \u003d createToDo(command);"},{"lineNumber":56,"author":{"gitId":"LimJunxue"},"content":"                    addTask(toDoTask);"},{"lineNumber":57,"author":{"gitId":"LimJunxue"},"content":"                    break;"},{"lineNumber":58,"author":{"gitId":"LimJunxue"},"content":"                case \"deadline\":"},{"lineNumber":59,"author":{"gitId":"LimJunxue"},"content":"                    Task deadlineTask \u003d createDeadline(command);"},{"lineNumber":60,"author":{"gitId":"LimJunxue"},"content":"                    addTask(deadlineTask);"},{"lineNumber":61,"author":{"gitId":"LimJunxue"},"content":"                    break;"},{"lineNumber":62,"author":{"gitId":"LimJunxue"},"content":"                case \"event\":"},{"lineNumber":63,"author":{"gitId":"LimJunxue"},"content":"                    Task eventTask \u003d createEvent(command);"},{"lineNumber":64,"author":{"gitId":"LimJunxue"},"content":"                    addTask(eventTask);"},{"lineNumber":65,"author":{"gitId":"LimJunxue"},"content":"                    break;"},{"lineNumber":66,"author":{"gitId":"LimJunxue"},"content":"                default:"},{"lineNumber":67,"author":{"gitId":"LimJunxue"},"content":"                    throwIllegalArgumentEx(command);"},{"lineNumber":68,"author":{"gitId":"LimJunxue"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"LimJunxue"},"content":"        } catch (DukeException | IllegalArgumentException e) {"},{"lineNumber":70,"author":{"gitId":"LimJunxue"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":71,"author":{"gitId":"LimJunxue"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"LimJunxue"},"content":"        printLine();"},{"lineNumber":73,"author":{"gitId":"LimJunxue"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"LimJunxue"},"content":""},{"lineNumber":75,"author":{"gitId":"LimJunxue"},"content":"    private static void printLine() {"},{"lineNumber":76,"author":{"gitId":"LimJunxue"},"content":"        System.out.println(\"------------------------------\");"},{"lineNumber":77,"author":{"gitId":"LimJunxue"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"LimJunxue"},"content":""},{"lineNumber":79,"author":{"gitId":"LimJunxue"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"LimJunxue"},"content":"     * Prints each Task in the list with its index, and remarks if the list is empty."},{"lineNumber":81,"author":{"gitId":"LimJunxue"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"LimJunxue"},"content":"    private static void printList() {"},{"lineNumber":83,"author":{"gitId":"LimJunxue"},"content":"        if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":84,"author":{"gitId":"LimJunxue"},"content":"            System.out.println(\"Your list is empty!\");"},{"lineNumber":85,"author":{"gitId":"LimJunxue"},"content":"        } else {"},{"lineNumber":86,"author":{"gitId":"LimJunxue"},"content":"            System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":87,"author":{"gitId":"LimJunxue"},"content":"            for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"},{"lineNumber":88,"author":{"gitId":"LimJunxue"},"content":"                System.out.println(i + \".\" + tasks.get(i - 1));"},{"lineNumber":89,"author":{"gitId":"LimJunxue"},"content":"            }"},{"lineNumber":90,"author":{"gitId":"LimJunxue"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"LimJunxue"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"LimJunxue"},"content":""},{"lineNumber":93,"author":{"gitId":"LimJunxue"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"LimJunxue"},"content":"     * Finds and marks task specified in the command string after calling done."},{"lineNumber":95,"author":{"gitId":"LimJunxue"},"content":"     * Handles exceptions that include index out of bounds and number format."},{"lineNumber":96,"author":{"gitId":"LimJunxue"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"LimJunxue"},"content":"     * @param command Command inputted into the console handled by dispatch method."},{"lineNumber":98,"author":{"gitId":"LimJunxue"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"LimJunxue"},"content":"    private static void handleDone(String command) {"},{"lineNumber":100,"author":{"gitId":"LimJunxue"},"content":"        try {"},{"lineNumber":101,"author":{"gitId":"LimJunxue"},"content":"            Task currTask \u003d tasks.get(Integer.parseInt(command.split(\" \")[1]) - 1);"},{"lineNumber":102,"author":{"gitId":"LimJunxue"},"content":"            currTask.markTask();"},{"lineNumber":103,"author":{"gitId":"LimJunxue"},"content":"            System.out.println(\"Swee chai. It\u0027s done.\\n\" + currTask);"},{"lineNumber":104,"author":{"gitId":"LimJunxue"},"content":"        } catch (Exception e) {"},{"lineNumber":105,"author":{"gitId":"LimJunxue"},"content":"            if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":106,"author":{"gitId":"LimJunxue"},"content":"                System.out.println(\"Your list is empty!\");"},{"lineNumber":107,"author":{"gitId":"LimJunxue"},"content":"            } else {"},{"lineNumber":108,"author":{"gitId":"LimJunxue"},"content":"                System.out.println(\"Please enter a number from 1 to \" + tasks.size() + \" after done!\");"},{"lineNumber":109,"author":{"gitId":"LimJunxue"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"LimJunxue"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"LimJunxue"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"LimJunxue"},"content":""},{"lineNumber":113,"author":{"gitId":"LimJunxue"},"content":"    private static void handleDelete(String command) {"},{"lineNumber":114,"author":{"gitId":"LimJunxue"},"content":"        try {"},{"lineNumber":115,"author":{"gitId":"LimJunxue"},"content":"            Task currTask \u003d tasks.remove(Integer.parseInt(command.split(\" \")[1]) - 1);"},{"lineNumber":116,"author":{"gitId":"LimJunxue"},"content":"            System.out.println(\"See la. It\u0027s deleted.\\n\" + currTask +"},{"lineNumber":117,"author":{"gitId":"LimJunxue"},"content":"                    \"\\nYou currently have \" + tasks.size() + \" task(s) in the list.\");"},{"lineNumber":118,"author":{"gitId":"LimJunxue"},"content":"        } catch (Exception e) {"},{"lineNumber":119,"author":{"gitId":"LimJunxue"},"content":"            if (tasks.size() \u003d\u003d 0) {"},{"lineNumber":120,"author":{"gitId":"LimJunxue"},"content":"                System.out.println(\"Your list is empty!\");"},{"lineNumber":121,"author":{"gitId":"LimJunxue"},"content":"            } else {"},{"lineNumber":122,"author":{"gitId":"LimJunxue"},"content":"                System.out.println(\"Please enter a number from 1 to \" + tasks.size() + \" after delete!\");"},{"lineNumber":123,"author":{"gitId":"LimJunxue"},"content":"            }"},{"lineNumber":124,"author":{"gitId":"LimJunxue"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"LimJunxue"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"LimJunxue"},"content":""},{"lineNumber":127,"author":{"gitId":"LimJunxue"},"content":"    /**"},{"lineNumber":128,"author":{"gitId":"LimJunxue"},"content":"     * Adds specified task into task list and prints user feedback."},{"lineNumber":129,"author":{"gitId":"LimJunxue"},"content":"     *"},{"lineNumber":130,"author":{"gitId":"LimJunxue"},"content":"     * @param task Task to be added."},{"lineNumber":131,"author":{"gitId":"LimJunxue"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"LimJunxue"},"content":"    private static void addTask(Task task) {"},{"lineNumber":133,"author":{"gitId":"LimJunxue"},"content":"        tasks.add(task);"},{"lineNumber":134,"author":{"gitId":"LimJunxue"},"content":"        System.out.println(\"Your task has been added: \" + task +"},{"lineNumber":135,"author":{"gitId":"LimJunxue"},"content":"                \"\\nYou currently have \" + tasks.size() + \" task(s) in the list.\");"},{"lineNumber":136,"author":{"gitId":"LimJunxue"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"LimJunxue"},"content":""},{"lineNumber":138,"author":{"gitId":"LimJunxue"},"content":"    /**"},{"lineNumber":139,"author":{"gitId":"LimJunxue"},"content":"     * Creates Task from the command with todo."},{"lineNumber":140,"author":{"gitId":"LimJunxue"},"content":"     *"},{"lineNumber":141,"author":{"gitId":"LimJunxue"},"content":"     * @param command User input with the command todo."},{"lineNumber":142,"author":{"gitId":"LimJunxue"},"content":"     * @return Task created."},{"lineNumber":143,"author":{"gitId":"LimJunxue"},"content":"     * @throws DukeException if there is no description of the task."},{"lineNumber":144,"author":{"gitId":"LimJunxue"},"content":"     */"},{"lineNumber":145,"author":{"gitId":"LimJunxue"},"content":"    private static Task createToDo(String command) throws DukeException {"},{"lineNumber":146,"author":{"gitId":"LimJunxue"},"content":"        if (command.substring(4).trim().length() \u003d\u003d 0) {"},{"lineNumber":147,"author":{"gitId":"LimJunxue"},"content":"            throw new DukeException(\"Expected argument describing task after \\\"todo\\\"\");"},{"lineNumber":148,"author":{"gitId":"LimJunxue"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"LimJunxue"},"content":"        return new ToDo(command.substring(5));"},{"lineNumber":150,"author":{"gitId":"LimJunxue"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"LimJunxue"},"content":""},{"lineNumber":152,"author":{"gitId":"LimJunxue"},"content":"    /**"},{"lineNumber":153,"author":{"gitId":"LimJunxue"},"content":"     * Creates Task from the command with deadline."},{"lineNumber":154,"author":{"gitId":"LimJunxue"},"content":"     *"},{"lineNumber":155,"author":{"gitId":"LimJunxue"},"content":"     * @param command User input with the command deadline."},{"lineNumber":156,"author":{"gitId":"LimJunxue"},"content":"     * @return Task created."},{"lineNumber":157,"author":{"gitId":"LimJunxue"},"content":"     * @throws DukeException if there is no description of the task."},{"lineNumber":158,"author":{"gitId":"LimJunxue"},"content":"     * @throws DukeException if there is no deadline specified by \"/by\"."},{"lineNumber":159,"author":{"gitId":"LimJunxue"},"content":"     */"},{"lineNumber":160,"author":{"gitId":"LimJunxue"},"content":"    private static Task createDeadline(String command) throws DukeException {"},{"lineNumber":161,"author":{"gitId":"LimJunxue"},"content":"        String[] splitCommand \u003d command.substring(8).split(\"/by\");"},{"lineNumber":162,"author":{"gitId":"LimJunxue"},"content":"        if (splitCommand[0].trim().length() \u003d\u003d 0) {"},{"lineNumber":163,"author":{"gitId":"LimJunxue"},"content":"            throw new DukeException(\"Expected argument describing task after \\\"deadline\\\"\");"},{"lineNumber":164,"author":{"gitId":"LimJunxue"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"LimJunxue"},"content":"        if (splitCommand.length \u003d\u003d 1 || splitCommand[1].trim().length() \u003d\u003d 0) {"},{"lineNumber":166,"author":{"gitId":"LimJunxue"},"content":"            throw new DukeException(\"Expected argument \\\"/by\\\" specifying deadline of task for \\\"deadline\\\"\");"},{"lineNumber":167,"author":{"gitId":"LimJunxue"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"LimJunxue"},"content":"        return new Deadline(splitCommand[0].trim(), splitCommand[1].trim());"},{"lineNumber":169,"author":{"gitId":"LimJunxue"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"LimJunxue"},"content":""},{"lineNumber":171,"author":{"gitId":"LimJunxue"},"content":"    /**"},{"lineNumber":172,"author":{"gitId":"LimJunxue"},"content":"     * Creates Task from the command with event."},{"lineNumber":173,"author":{"gitId":"LimJunxue"},"content":"     *"},{"lineNumber":174,"author":{"gitId":"LimJunxue"},"content":"     * @param command User input with the command event."},{"lineNumber":175,"author":{"gitId":"LimJunxue"},"content":"     * @return Task created."},{"lineNumber":176,"author":{"gitId":"LimJunxue"},"content":"     * @throws DukeException if there is no description of the task."},{"lineNumber":177,"author":{"gitId":"LimJunxue"},"content":"     * @throws DukeException if there is no duration specified by \"/at\"."},{"lineNumber":178,"author":{"gitId":"LimJunxue"},"content":"     */"},{"lineNumber":179,"author":{"gitId":"LimJunxue"},"content":"    private static Task createEvent(String command) throws DukeException {"},{"lineNumber":180,"author":{"gitId":"LimJunxue"},"content":"        String[] splitCommand \u003d command.substring(5).split(\"/at\");"},{"lineNumber":181,"author":{"gitId":"LimJunxue"},"content":"        if (splitCommand[0].trim().length() \u003d\u003d 0) {"},{"lineNumber":182,"author":{"gitId":"LimJunxue"},"content":"            throw new DukeException(\"Expected argument describing task after \\\"event\\\"\");"},{"lineNumber":183,"author":{"gitId":"LimJunxue"},"content":"        }"},{"lineNumber":184,"author":{"gitId":"LimJunxue"},"content":"        if (splitCommand.length \u003d\u003d 1 || splitCommand[1].trim().length() \u003d\u003d 0) {"},{"lineNumber":185,"author":{"gitId":"LimJunxue"},"content":"            throw new DukeException(\"Expected argument \\\"/at\\\" specifying duration of task for \\\"event\\\"\");"},{"lineNumber":186,"author":{"gitId":"LimJunxue"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"LimJunxue"},"content":"        return new Event(splitCommand[0].trim(), splitCommand[1].trim());"},{"lineNumber":188,"author":{"gitId":"LimJunxue"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"LimJunxue"},"content":""},{"lineNumber":190,"author":{"gitId":"LimJunxue"},"content":"    /**"},{"lineNumber":191,"author":{"gitId":"LimJunxue"},"content":"     * Throws IllegalArgumentException if the first word of the command is wrong or absent."},{"lineNumber":192,"author":{"gitId":"LimJunxue"},"content":"     *"},{"lineNumber":193,"author":{"gitId":"LimJunxue"},"content":"     * @param command User input provided."},{"lineNumber":194,"author":{"gitId":"LimJunxue"},"content":"     * @throws IllegalArgumentException if the first word of the command is wrong or absent."},{"lineNumber":195,"author":{"gitId":"LimJunxue"},"content":"     */"},{"lineNumber":196,"author":{"gitId":"LimJunxue"},"content":"    private static void throwIllegalArgumentEx(String command) throws IllegalArgumentException {"},{"lineNumber":197,"author":{"gitId":"LimJunxue"},"content":"        if (command.trim().length() \u003e 0) {"},{"lineNumber":198,"author":{"gitId":"LimJunxue"},"content":"            throw new IllegalArgumentException(\"That is not a valid command!\\n\" +"},{"lineNumber":199,"author":{"gitId":"LimJunxue"},"content":"                    \"These are the possible commands:\\n\" +"},{"lineNumber":200,"author":{"gitId":"LimJunxue"},"content":"                    \"\\\"list\\\" \\\"done\\\" \\\"todo\\\" \\\"deadline\\\" \\\"event\\\"\");"},{"lineNumber":201,"author":{"gitId":"LimJunxue"},"content":"        } else {"},{"lineNumber":202,"author":{"gitId":"LimJunxue"},"content":"            throw new IllegalArgumentException(\"What are you trying to say?\\n\" +"},{"lineNumber":203,"author":{"gitId":"LimJunxue"},"content":"                    \"Please enter something ...\");"},{"lineNumber":204,"author":{"gitId":"LimJunxue"},"content":"        }"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"LimJunxue":196,"-":10}},{"path":"src/main/java/DukeActions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":" * Represents actions that can be used on Duke."},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":" * Actions are the first word in user input commands."},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":" */"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"public enum DukeActions {"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"    BYE(\"bye\"),"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"    LIST(\"list\"),"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"    DONE(\"done\"),"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"    DELETE(\"delete\"),"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"    TODO(\"todo\"),"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"    DEADLINE(\"deadline\"),"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"    EVENT(\"event\");"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":""},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"     * The String form of each action."},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"    public final String str;"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"    DukeActions(String str) {"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"        this.str \u003d str;"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"}"}],"authorContributionMap":{"LimJunxue":21}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":" * Represents unchecked exceptions specific to Duke."},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":" */"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"public class DukeException extends RuntimeException {"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"     * Creates a RuntimeException specific to Duke."},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"     * @param errorMessage Message when the exception is thrown."},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"        super(errorMessage);"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"}"}],"authorContributionMap":{"LimJunxue":13}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":" * Represents a task with a duration specified in the at argument."},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":" */"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"public class Event extends Task {"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"    protected String at;"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":""},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"     * Creates a task with a duration specified in the by argument."},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"     * @param description Describes the task."},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"     * @param at          Specifies the duration of this task."},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"    public Event(String description, String at) {"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"        this.at \u003d at;"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":""},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"}"}],"authorContributionMap":{"LimJunxue":22}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":" * Represents a task listed in Duke and can be marked as done."},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":" */"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"public class Task {"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"    protected String description;"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":""},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"     * Creates a task with the specified description."},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"     * @param description The task\u0027s description."},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"    public Task(String description) {"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"        this.description \u003d description;"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"        this.isDone \u003d false;"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":""},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"     * Marks this task as done."},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"    public void markTask() {"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"        this.isDone \u003d true;"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":""},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"        String symbol \u003d \" \";"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"        if (isDone) {"},{"lineNumber":29,"author":{"gitId":"LimJunxue"},"content":"            symbol \u003d \"X\";"},{"lineNumber":30,"author":{"gitId":"LimJunxue"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"LimJunxue"},"content":"        return \"[\" + symbol + \"] \" + this.description;"},{"lineNumber":32,"author":{"gitId":"LimJunxue"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"LimJunxue"},"content":"}"}],"authorContributionMap":{"LimJunxue":33}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":" * Represents a task without any date/time attached."},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":" */"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"public class ToDo extends Task {"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"     * Creates a task to be done, without any date/time attached."},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"     * @param description Describes the task."},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"    public ToDo(String description) {"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":""},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"}"}],"authorContributionMap":{"LimJunxue":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"LimJunxue"},"content":"hi"},{"lineNumber":2,"author":{"gitId":"LimJunxue"},"content":"list"},{"lineNumber":3,"author":{"gitId":"LimJunxue"},"content":"done"},{"lineNumber":4,"author":{"gitId":"LimJunxue"},"content":"done 1"},{"lineNumber":5,"author":{"gitId":"LimJunxue"},"content":"delete"},{"lineNumber":6,"author":{"gitId":"LimJunxue"},"content":"todo hustle"},{"lineNumber":7,"author":{"gitId":"LimJunxue"},"content":"todo"},{"lineNumber":8,"author":{"gitId":"LimJunxue"},"content":"event grinding"},{"lineNumber":9,"author":{"gitId":"LimJunxue"},"content":"event grinding /at"},{"lineNumber":10,"author":{"gitId":"LimJunxue"},"content":"event"},{"lineNumber":11,"author":{"gitId":"LimJunxue"},"content":"event grinding /at all day err day"},{"lineNumber":12,"author":{"gitId":"LimJunxue"},"content":"deadline profit"},{"lineNumber":13,"author":{"gitId":"LimJunxue"},"content":"deadline profit /by 2022"},{"lineNumber":14,"author":{"gitId":"LimJunxue"},"content":"deadline"},{"lineNumber":15,"author":{"gitId":"LimJunxue"},"content":"deadline profit /by"},{"lineNumber":16,"author":{"gitId":"LimJunxue"},"content":"list"},{"lineNumber":17,"author":{"gitId":"LimJunxue"},"content":"done 2"},{"lineNumber":18,"author":{"gitId":"LimJunxue"},"content":"done 3"},{"lineNumber":19,"author":{"gitId":"LimJunxue"},"content":"done 4"},{"lineNumber":20,"author":{"gitId":"LimJunxue"},"content":"list"},{"lineNumber":21,"author":{"gitId":"LimJunxue"},"content":"done 1"},{"lineNumber":22,"author":{"gitId":"LimJunxue"},"content":"done ah"},{"lineNumber":23,"author":{"gitId":"LimJunxue"},"content":"delete"},{"lineNumber":24,"author":{"gitId":"LimJunxue"},"content":"delete ah"},{"lineNumber":25,"author":{"gitId":"LimJunxue"},"content":"delete 2"},{"lineNumber":26,"author":{"gitId":"LimJunxue"},"content":"list"},{"lineNumber":27,"author":{"gitId":"LimJunxue"},"content":"can i yolo"},{"lineNumber":28,"author":{"gitId":"LimJunxue"},"content":"bye"}],"authorContributionMap":{"LimJunxue":28}}]
