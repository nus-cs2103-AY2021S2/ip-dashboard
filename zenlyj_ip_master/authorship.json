[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"# duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"1. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"zenlyj":2,"-":21}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":48,"author":{"gitId":"zenlyj"},"content":"    mainClassName \u003d \"duke.gui.Launcher\""},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":61,"author":{"gitId":"zenlyj"},"content":"    enableAssertions \u003d true"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zenlyj":18,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"### Task Management"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"- Add/Delete a task."},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"- Mark a task as completed."},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"### Different Types of Tasks"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"- To-Do. A task that only has a description."},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"- Deadline. A task to be completed by a given Date and Time."},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"- Event. A task that is conducted at a given Date and Time."},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"### View Tasks"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"- Display the entire list of tasks."},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"### Search for Tasks"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"- Find tasks using a keyword."},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"### Undo Action"},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"- Undo a Task Management operation."},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"### `todo` - Add To-Do Task"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"Add a task that only has a description."},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"`todo do laundry`"},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"Expected Outcome:"},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"```"},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":"[T][X] do laundry"},{"lineNumber":45,"author":{"gitId":"zenlyj"},"content":"You have 1 task in your list"},{"lineNumber":46,"author":{"gitId":"zenlyj"},"content":"```"},{"lineNumber":47,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":48,"author":{"gitId":"zenlyj"},"content":"### `deadline` - Add a Deadline"},{"lineNumber":49,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":50,"author":{"gitId":"zenlyj"},"content":"Add a task that has to be completed by a given Date and Time."},{"lineNumber":51,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":52,"author":{"gitId":"zenlyj"},"content":"Example of usage:"},{"lineNumber":53,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":54,"author":{"gitId":"zenlyj"},"content":"`deadline homework /by 2021-02-28 2359`"},{"lineNumber":55,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":56,"author":{"gitId":"zenlyj"},"content":"Expected Outcome:"},{"lineNumber":57,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":58,"author":{"gitId":"zenlyj"},"content":"```"},{"lineNumber":59,"author":{"gitId":"zenlyj"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":60,"author":{"gitId":"zenlyj"},"content":"[D][X] homework (by: FEBRUARY 28 2021 11:59 PM)"},{"lineNumber":61,"author":{"gitId":"zenlyj"},"content":"You have 2 task in your list"},{"lineNumber":62,"author":{"gitId":"zenlyj"},"content":"```"},{"lineNumber":63,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":64,"author":{"gitId":"zenlyj"},"content":"### `event` - Add an Event"},{"lineNumber":65,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":66,"author":{"gitId":"zenlyj"},"content":"Add a task that is conducted at a given Date and Time."},{"lineNumber":67,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":68,"author":{"gitId":"zenlyj"},"content":"Example of usage:"},{"lineNumber":69,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":70,"author":{"gitId":"zenlyj"},"content":"`event concert /by 2021-05-11 1900`"},{"lineNumber":71,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":72,"author":{"gitId":"zenlyj"},"content":"Expected Outcome:"},{"lineNumber":73,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":74,"author":{"gitId":"zenlyj"},"content":"```"},{"lineNumber":75,"author":{"gitId":"zenlyj"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":76,"author":{"gitId":"zenlyj"},"content":"[E][X] concert (at: MAY 11 2021 7:00 PM)"},{"lineNumber":77,"author":{"gitId":"zenlyj"},"content":"You have 3 task in your list"},{"lineNumber":78,"author":{"gitId":"zenlyj"},"content":"```"},{"lineNumber":79,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":80,"author":{"gitId":"zenlyj"},"content":"### `list` - List All Tasks"},{"lineNumber":81,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":82,"author":{"gitId":"zenlyj"},"content":"Display all user\u0027s tasks."},{"lineNumber":83,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":84,"author":{"gitId":"zenlyj"},"content":"Example of usage:"},{"lineNumber":85,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":86,"author":{"gitId":"zenlyj"},"content":"`list`"},{"lineNumber":87,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":88,"author":{"gitId":"zenlyj"},"content":"Expected Outcome:"},{"lineNumber":89,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":90,"author":{"gitId":"zenlyj"},"content":"```"},{"lineNumber":91,"author":{"gitId":"zenlyj"},"content":"Your tasks:"},{"lineNumber":92,"author":{"gitId":"zenlyj"},"content":"1.[T][X] do laundry"},{"lineNumber":93,"author":{"gitId":"zenlyj"},"content":"2.[D][X] homework (by: FEBRUARY 28 2021 11:59 PM)"},{"lineNumber":94,"author":{"gitId":"zenlyj"},"content":"3.[E][X] concert (at: MAY 11 2021 7:00 PM)"},{"lineNumber":95,"author":{"gitId":"zenlyj"},"content":"```"},{"lineNumber":96,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":97,"author":{"gitId":"zenlyj"},"content":"###  `delete` - Delete Task"},{"lineNumber":98,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":99,"author":{"gitId":"zenlyj"},"content":"Delete task at a given list index."},{"lineNumber":100,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":101,"author":{"gitId":"zenlyj"},"content":"Example of Usage:"},{"lineNumber":102,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":103,"author":{"gitId":"zenlyj"},"content":"`delete 2`"},{"lineNumber":104,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":105,"author":{"gitId":"zenlyj"},"content":"Expected Outcome:"},{"lineNumber":106,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":107,"author":{"gitId":"zenlyj"},"content":"```"},{"lineNumber":108,"author":{"gitId":"zenlyj"},"content":"I\u0027ve removed this task:"},{"lineNumber":109,"author":{"gitId":"zenlyj"},"content":"[D][X] homework (by: FEBRUARY 28 2021 11:59 PM)"},{"lineNumber":110,"author":{"gitId":"zenlyj"},"content":"You have 2 tasks in your list"},{"lineNumber":111,"author":{"gitId":"zenlyj"},"content":"```"},{"lineNumber":112,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":113,"author":{"gitId":"zenlyj"},"content":"### `done` - Complete Task"},{"lineNumber":114,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":115,"author":{"gitId":"zenlyj"},"content":"Set task at given list index as done."},{"lineNumber":116,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":117,"author":{"gitId":"zenlyj"},"content":"Example of Usage:"},{"lineNumber":118,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":119,"author":{"gitId":"zenlyj"},"content":"`done 1`"},{"lineNumber":120,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":121,"author":{"gitId":"zenlyj"},"content":"Expected Outcome:"},{"lineNumber":122,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":123,"author":{"gitId":"zenlyj"},"content":"```"},{"lineNumber":124,"author":{"gitId":"zenlyj"},"content":"Nice! I have marked this task as done:"},{"lineNumber":125,"author":{"gitId":"zenlyj"},"content":"[T][✓] do laundry"},{"lineNumber":126,"author":{"gitId":"zenlyj"},"content":"```"},{"lineNumber":127,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":128,"author":{"gitId":"zenlyj"},"content":"### `find` - Search for Tasks"},{"lineNumber":129,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":130,"author":{"gitId":"zenlyj"},"content":"Search for tasks that match a given keyword."},{"lineNumber":131,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":132,"author":{"gitId":"zenlyj"},"content":"Example of Usage:"},{"lineNumber":133,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":134,"author":{"gitId":"zenlyj"},"content":"`find laundry`"},{"lineNumber":135,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":136,"author":{"gitId":"zenlyj"},"content":"Expected Outcome:"},{"lineNumber":137,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":138,"author":{"gitId":"zenlyj"},"content":"```"},{"lineNumber":139,"author":{"gitId":"zenlyj"},"content":"I have found tasks with the given keyword:"},{"lineNumber":140,"author":{"gitId":"zenlyj"},"content":"[T][✓] do laundry"},{"lineNumber":141,"author":{"gitId":"zenlyj"},"content":"```"},{"lineNumber":142,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":143,"author":{"gitId":"zenlyj"},"content":"### `undo` - Undo Action"},{"lineNumber":144,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":145,"author":{"gitId":"zenlyj"},"content":"Reverse the previous Task Management operation."},{"lineNumber":146,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":147,"author":{"gitId":"zenlyj"},"content":"Example of Usage:"},{"lineNumber":148,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":149,"author":{"gitId":"zenlyj"},"content":"`undo` is called after `homework` deadline is deleted."},{"lineNumber":150,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":151,"author":{"gitId":"zenlyj"},"content":"Expected Outcome:"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"zenlyj"},"content":"```"},{"lineNumber":154,"author":{"gitId":"zenlyj"},"content":"DELETE undone, the following task is added:"},{"lineNumber":155,"author":{"gitId":"zenlyj"},"content":"[D][X] homework (by: FEBRUARY 28 2021 11:59 PM)"},{"lineNumber":156,"author":{"gitId":"zenlyj"},"content":"You have 3 tasks in your list"},{"lineNumber":157,"author":{"gitId":"zenlyj"},"content":"```"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"zenlyj"},"content":"### `bye` - Exit the application"}],"authorContributionMap":{"zenlyj":146,"-":13}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import duke.exception.DukeStorageException;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import duke.util.MessageFormatter;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"import duke.util.Parser;"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"import duke.util.TaskList;"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"import duke.util.TaskStorage;"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":" * Class representing chat bot, Duke."},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"    private final TaskList tasks;"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"    private final TaskStorage storage;"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"    private final MessageFormatter messageFormatter;"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"    private boolean isActive;"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"     * Constructor of Duke."},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"    public Duke() throws DukeStorageException {"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"        messageFormatter \u003d new MessageFormatter();"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"        storage \u003d new TaskStorage(\"data/tasks.txt\");"},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"        tasks \u003d storage.retrieveData();"},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"        isActive \u003d true;"},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"     * Interprets user input, executes Command and returns Duke\u0027s response."},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"     * @param input The input of the user."},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"     * @return String representing Duke\u0027s response."},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"    public String getResponse(String input) {"},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"        if (input.isBlank()) {"},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"            return \"You have not entered a command!\";"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"        Command cmd \u003d Parser.parse(input, tasks);"},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"        String response \u003d cmd.execute(tasks, messageFormatter, storage);"},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"        isActive \u003d !cmd.toExit();"},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"        return response;"},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":45,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"zenlyj"},"content":"     * Gets the status of Duke."},{"lineNumber":47,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"zenlyj"},"content":"     * @return true if Duke is still running, false if Duke is no longer running."},{"lineNumber":49,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"zenlyj"},"content":"    public boolean isActive() {"},{"lineNumber":51,"author":{"gitId":"zenlyj"},"content":"        return isActive;"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zenlyj":50,"-":3}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import duke.exception.DukeStorageException;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"import duke.gui.MainWindow;"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"import javafx.application.Application;"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"import javafx.scene.Scene;"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":" * A GUI for Duke using FXML."},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"public class Main extends Application {"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"    private Duke duke;"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"     * Initializes and starts the application."},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"     * @param stage Top level JavaFx container."},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"    public void start(Stage stage) {"},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"            duke \u003d new Duke();"},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"            stage.setScene(scene);"},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"            stage.setTitle(\"Duke ChatBot\");"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"            stage.show();"},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"            e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"        } catch (DukeStorageException e) {"},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"            e.printStackTrace();"},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":42}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import duke.exception.DukeStorageException;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import duke.util.MessageFormatter;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"import duke.util.TaskList;"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"import duke.util.TaskStorage;"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":" * Class representing an Add command in Duke."},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"public class AddCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"    private final Task toAdd;"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"     * Constructor of AddCommand."},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"     * @param toAdd The task to be added to the list of tasks."},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"    public AddCommand(Task toAdd) {"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"        this.toAdd \u003d toAdd;"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"     * Executes the add command."},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"     * Adds new task to existing list of tasks."},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"     * Updates the task storage of new task."},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"     * Prompts the user that the task has been added and show the total number of tasks."},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"     * @param tasks List of tasks."},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"     * @param messageFormatter Formats Duke\u0027s response into a String."},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"     * @param storage Updates tasks.txt of the new task."},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"     * @return Duke\u0027s response after adding task to the list."},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"    public String execute(TaskList tasks, MessageFormatter messageFormatter, TaskStorage storage) {"},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"            tasks.addTask(toAdd);"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"            storage.storeData(tasks);"},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"            return messageFormatter.formatAddMsg(toAdd, tasks);"},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"        } catch (DukeStorageException e) {"},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"            return e.getMessage();"},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":44}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import duke.util.MessageFormatter;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import duke.util.TaskList;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import duke.util.TaskStorage;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":" * Class representing a Command."},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"public abstract class Command {"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"     * Executes the command."},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"     * @param tasks List of tasks."},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"     * @param messageFormatter Formats Duke\u0027s response into a String."},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"     * @param storage Updates the tasks.txt file after executing commands modifying TaskList/tasks."},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"     * @return Duke\u0027s response after executing the command."},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"    public abstract String execute(TaskList tasks, MessageFormatter messageFormatter, TaskStorage storage);"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"     * Returns whether the user has requested to exit the application."},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"     * @return false for all commands except the ExitCommand, which overrides this method."},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"    public boolean toExit() {"},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"        return false;"},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":29}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import duke.exception.DukeStorageException;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import duke.util.MessageFormatter;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"import duke.util.TaskList;"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"import duke.util.TaskStorage;"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":" * Class representing a Delete Command."},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"    private final int indexToDelete;"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"     * Constructor of DeleteCommand."},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"     * @param indexToDelete The index of the task to be deleted."},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"    public DeleteCommand(int indexToDelete) {"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"        this.indexToDelete \u003d indexToDelete;"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"     * Executes the delete command."},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"     * Removes task from list of tasks."},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"     * Updates the task storage."},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"     * Prompts the user that the task has been removed and shows the total number of tasks."},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"     * @param tasks List of tasks."},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"     * @param messageFormatter Formats Duke\u0027s response into a String."},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"     * @param storage Updates tasks.txt of the removed task."},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"     * @return Duke\u0027s response after deleting task from the list."},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"    public String execute(TaskList tasks, MessageFormatter messageFormatter, TaskStorage storage) {"},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"            Task taskRemoved \u003d tasks.deleteTask(indexToDelete);"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"            storage.storeData(tasks);"},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"            return messageFormatter.formatRemoveMsg(taskRemoved, tasks);"},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"        } catch (DukeStorageException e) {"},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"            return e.getMessage();"},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":44}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import duke.exception.DukeStorageException;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import duke.util.MessageFormatter;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"import duke.util.TaskList;"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"import duke.util.TaskStorage;"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":" * Class representing a Done Command."},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"public class DoneCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"    private final int completedTaskIdx;"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"     * Constructor for DoneCommand."},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"     * @param completedTaskIdx The index of the completed task."},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"    public DoneCommand(int completedTaskIdx) {"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"        this.completedTaskIdx \u003d completedTaskIdx;"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"     * Executes the done command."},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"     * Marks the task as done."},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"     * Updates the task storage."},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"     * Prompts the user that the task has been marked done."},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"     * @param tasks List of tasks."},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"     * @param messageFormatter Formats Duke\u0027s response into a String."},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"     * @param storage Updates tasks.txt of the completed task."},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"     * @return Duke\u0027s response after setting task as done."},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"    public String execute(TaskList tasks, MessageFormatter messageFormatter, TaskStorage storage) {"},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"            Task completedTask \u003d tasks.getTask(completedTaskIdx);"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"            completedTask.setDone();"},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"            storage.storeData(tasks);"},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"            return messageFormatter.formatDoneMsg(completedTask);"},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"        } catch (DukeStorageException e) {"},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"            return e.getMessage();"},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":45}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import duke.util.MessageFormatter;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import duke.util.TaskList;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import duke.util.TaskStorage;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":" * Class representing an Exit Command."},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"public class ExitCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"     * Executes the exit command."},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"     * @param tasks List of tasks."},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"     * @param messageFormatter Formats Duke\u0027s response into a String."},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"     * @param storage Storage of tasks."},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"     * @return A goodbye message from Duke."},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"    public String execute(TaskList tasks, MessageFormatter messageFormatter, TaskStorage storage) {"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"        return (\"Goodbye. See you later!\");"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"     * Returns whether the user has requested to exit the application."},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"     * @return true, as this is the Exit Command."},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"    public boolean toExit() {"},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"        return true;"},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":32}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import java.util.ListIterator;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"import duke.task.Task;"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"import duke.util.MessageFormatter;"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"import duke.util.TaskList;"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"import duke.util.TaskStorage;"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":" * Class representing the Find Command."},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"public class FindCommand extends Command {"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"    private final String keyword;"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"     * Constructor of FindCommand class."},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"     * @param keyword The keyword entered by the user."},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"    public FindCommand(String keyword) {"},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"     * Executes the Find command."},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"     * Searches through all tasks and checks whether task descriptions contain the keyword."},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"     * If task description contains the keyword, corresponding task is printed."},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"     * @param tasks List of tasks."},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"     * @param messageFormatter Formats Duke\u0027s response into a String."},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"     * @param storage Storage of tasks."},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"     * @return A list of tasks with descriptions that matches the keyword entered by the user."},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"    public String execute(TaskList tasks, MessageFormatter messageFormatter, TaskStorage storage) {"},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"        ListIterator\u003cTask\u003e iterator \u003d tasks.getIterator();"},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"        while (iterator.hasNext()) {"},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"            Task task \u003d iterator.next();"},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":"            String description \u003d task.getDescription();"},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":"            if (description.contains(keyword)) {"},{"lineNumber":45,"author":{"gitId":"zenlyj"},"content":"                matchingTasks.add(task);"},{"lineNumber":46,"author":{"gitId":"zenlyj"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"zenlyj"},"content":"        return messageFormatter.formatFindMsg(new TaskList(matchingTasks));"},{"lineNumber":49,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":50}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import duke.util.MessageFormatter;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import duke.util.TaskList;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import duke.util.TaskStorage;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":" * Class representing an Invalid Command."},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"public class InvalidCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"    private final String errorMessage;"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"     * Constructor of the InvalidCommand class."},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"     * @param errorMessage The error message corresponding to the invalid user command."},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"    public InvalidCommand(String errorMessage) {"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"        this.errorMessage \u003d errorMessage;"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"     * Prompts user of invalid command."},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"     * @param tasks List of tasks."},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"     * @param messageFormatter Formats Duke\u0027s response into a String."},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"     * @param storage Storage of tasks."},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"     * @return An error message corresponding to the invalid user command."},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"    public String execute(TaskList tasks, MessageFormatter messageFormatter, TaskStorage storage) {"},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"        return errorMessage;"},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":33}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import duke.util.MessageFormatter;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import duke.util.TaskList;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import duke.util.TaskStorage;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":" * Class representing a List Command."},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"public class ListCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"     * Executes the List command."},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"     * Shows all the tasks to user."},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"     * @param tasks List of tasks."},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"     * @param messageFormatter Formats Duke\u0027s response into a String."},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"     * @param storage Storage of tasks."},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"     * @return All current tasks."},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"    public String execute(TaskList tasks, MessageFormatter messageFormatter, TaskStorage storage) {"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"        return messageFormatter.formatListMsg(tasks);"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":23}},{"path":"src/main/java/duke/command/UndoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import duke.exception.DukeStorageException;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"import duke.util.COMMAND;"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"import duke.util.Cache;"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"import duke.util.MessageFormatter;"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"import duke.util.TaskList;"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"import duke.util.TaskStorage;"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"import javafx.util.Pair;"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":" * Class representing the Undo command in Duke."},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"public class UndoCommand extends Command {"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"     * Executes the Undo command."},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"     * @param tasks List of tasks."},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"     * @param messageFormatter Formats Duke\u0027s response into a String."},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"     * @param storage Updates the tasks.txt file after executing commands modifying TaskList/tasks."},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"     * @return Duke\u0027s response after executing the Undo command."},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"    public String execute(TaskList tasks, MessageFormatter messageFormatter, TaskStorage storage) {"},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"            if (Cache.isEmpty()) {"},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"                return \"No actions to undo!\";"},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"            Pair\u003cPair\u003cTask, Integer\u003e, String\u003e p \u003d Cache.pop();"},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"            Pair\u003cTask, Integer\u003e taskIdxPair \u003d p.getKey();"},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"            Task task \u003d taskIdxPair.getKey();"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"            int taskIdx \u003d taskIdxPair.getValue();"},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"            String command \u003d p.getValue();"},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"            String undoMsg;"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"            if (command.equals(COMMAND.TODO) || command.equals(COMMAND.DEADLINE) || command.equals(COMMAND.EVENT)) {"},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"                undoMsg \u003d undoAdd(taskIdx, tasks, messageFormatter);"},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"            } else if (command.equals(COMMAND.DELETE)) {"},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"                undoMsg \u003d undoDelete(taskIdx, task, tasks, messageFormatter);"},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"            } else if (command.equals(COMMAND.DONE)) {"},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":"                undoMsg \u003d undoDone(task, messageFormatter);"},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":"            } else {"},{"lineNumber":45,"author":{"gitId":"zenlyj"},"content":"                undoMsg \u003d \"Unknown command type, aborting...\";"},{"lineNumber":46,"author":{"gitId":"zenlyj"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"zenlyj"},"content":"            storage.storeData(tasks);"},{"lineNumber":48,"author":{"gitId":"zenlyj"},"content":"            return undoMsg;"},{"lineNumber":49,"author":{"gitId":"zenlyj"},"content":"        } catch (DukeStorageException e) {"},{"lineNumber":50,"author":{"gitId":"zenlyj"},"content":"            return e.getMessage();"},{"lineNumber":51,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":54,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"zenlyj"},"content":"     * Removes a task from the list."},{"lineNumber":56,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"zenlyj"},"content":"     * @param taskIdx The index of the task."},{"lineNumber":58,"author":{"gitId":"zenlyj"},"content":"     * @param tasks The list of tasks."},{"lineNumber":59,"author":{"gitId":"zenlyj"},"content":"     * @param messageFormatter Formats Duke\u0027s response into a String."},{"lineNumber":60,"author":{"gitId":"zenlyj"},"content":"     * @return Duke\u0027s response after removing a task from the list."},{"lineNumber":61,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"zenlyj"},"content":"    private String undoAdd(int taskIdx, TaskList tasks, MessageFormatter messageFormatter) {"},{"lineNumber":63,"author":{"gitId":"zenlyj"},"content":"        Task removedTask \u003d tasks.getTask(taskIdx);"},{"lineNumber":64,"author":{"gitId":"zenlyj"},"content":"        tasks.deleteTask(taskIdx);"},{"lineNumber":65,"author":{"gitId":"zenlyj"},"content":"        return messageFormatter.formatUndoAdd(removedTask, tasks);"},{"lineNumber":66,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":68,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"zenlyj"},"content":"     * Adds a task back into the list."},{"lineNumber":70,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"zenlyj"},"content":"     * @param taskIdx The index of the task."},{"lineNumber":72,"author":{"gitId":"zenlyj"},"content":"     * @param task The task to be added back into the list."},{"lineNumber":73,"author":{"gitId":"zenlyj"},"content":"     * @param tasks The list of tasks."},{"lineNumber":74,"author":{"gitId":"zenlyj"},"content":"     * @param messageFormatter Formats Duke\u0027s response into a String."},{"lineNumber":75,"author":{"gitId":"zenlyj"},"content":"     * @return Duke\u0027s response after adding a task back into the list."},{"lineNumber":76,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"zenlyj"},"content":"    private String undoDelete(int taskIdx, Task task, TaskList tasks, MessageFormatter messageFormatter) {"},{"lineNumber":78,"author":{"gitId":"zenlyj"},"content":"        tasks.addTask(task, taskIdx);"},{"lineNumber":79,"author":{"gitId":"zenlyj"},"content":"        return messageFormatter.formatUndoDelete(task, tasks);"},{"lineNumber":80,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":82,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"zenlyj"},"content":"     * Sets a task as not done."},{"lineNumber":84,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"zenlyj"},"content":"     * @param task The task to be set as not done."},{"lineNumber":86,"author":{"gitId":"zenlyj"},"content":"     * @param messageFormatter Formats Duke\u0027s response into a String."},{"lineNumber":87,"author":{"gitId":"zenlyj"},"content":"     * @return Duke\u0027s response after setting a task as not done."},{"lineNumber":88,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"zenlyj"},"content":"    private String undoDone(Task task, MessageFormatter messageFormatter) {"},{"lineNumber":90,"author":{"gitId":"zenlyj"},"content":"        task.setNotDone();"},{"lineNumber":91,"author":{"gitId":"zenlyj"},"content":"        return messageFormatter.formatUndoDone(task);"},{"lineNumber":92,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":93}},{"path":"src/main/java/duke/exception/DukeArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":" * Class representing an Invalid Argument Exception in Duke, sub-class of DukeException."},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"public class DukeArgumentException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"     * Constructor of DukeArgumentException."},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"     * @param errorMsg Error Message prompting user of invalid argument."},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"    public DukeArgumentException(String errorMsg) {"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"        super(errorMsg);"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":15}},{"path":"src/main/java/duke/exception/DukeDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":" * Class representing Date Time Exception in Duke, sub-class of DukeException."},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"public class DukeDateTimeException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"     * Constructor of DukeDateTimeException."},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"     * @param errorMsg Error message prompting user of invalid date/time."},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"    public DukeDateTimeException(String errorMsg) {"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"        super(errorMsg);"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":15}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":" * Class representing Exceptions in Duke."},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"     * Constructor of DukeException."},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"     * @param errorMsg Error message to prompt user of error."},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"    protected DukeException(String errorMsg) {"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"        super(errorMsg);"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":15}},{"path":"src/main/java/duke/exception/DukeStorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":" * Class representing Storage exceptions in Duke, sub-class of DukeException."},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"public class DukeStorageException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"     * Constructor of DukeStorageException."},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"     * @param errorMsg Error message prompting user of error when saving/retrieving tasks"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"     *                 from storage."},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"    public DukeStorageException(String errorMsg) {"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"        super(errorMsg);"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":16}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":" * An example of a custom control using FXML."},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":" * containing text from the speaker."},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"public class DialogBox extends HBox {"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"    private Label dialog;"},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"    private ImageView displayPicture;"},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"     * Constructor of DialogBox class."},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"     * @param text User input or Duke\u0027s response."},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"     * @param img Image of user or Duke."},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"            fxmlLoader.load();"},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"        } catch (IOException e) {"},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"            e.printStackTrace();"},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":45,"author":{"gitId":"zenlyj"},"content":"        dialog.setText(text);"},{"lineNumber":46,"author":{"gitId":"zenlyj"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);"},{"lineNumber":47,"author":{"gitId":"zenlyj"},"content":"        displayPicture.setImage(img);"},{"lineNumber":48,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":50,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"zenlyj"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":52,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"zenlyj"},"content":"    private void flip() {"},{"lineNumber":54,"author":{"gitId":"zenlyj"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":55,"author":{"gitId":"zenlyj"},"content":"        Collections.reverse(tmp);"},{"lineNumber":56,"author":{"gitId":"zenlyj"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":57,"author":{"gitId":"zenlyj"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":58,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":60,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"zenlyj"},"content":"     * Creates a dialog box displaying the user input, as well as an image of the user."},{"lineNumber":62,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"zenlyj"},"content":"     * @param text The user input."},{"lineNumber":64,"author":{"gitId":"zenlyj"},"content":"     * @param img An image representing the user."},{"lineNumber":65,"author":{"gitId":"zenlyj"},"content":"     * @return A dialog box containing the user input and image."},{"lineNumber":66,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"zenlyj"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":68,"author":{"gitId":"zenlyj"},"content":"        return new DialogBox(text, img);"},{"lineNumber":69,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":71,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"zenlyj"},"content":"     * Creates a dialog box displaying Duke\u0027s response, as well as an image of Duke."},{"lineNumber":73,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":74,"author":{"gitId":"zenlyj"},"content":"     * @param text The response of Duke."},{"lineNumber":75,"author":{"gitId":"zenlyj"},"content":"     * @param img An image representing Duke."},{"lineNumber":76,"author":{"gitId":"zenlyj"},"content":"     * @return A dialog box containing Duke\u0027s response and image."},{"lineNumber":77,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"zenlyj"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":79,"author":{"gitId":"zenlyj"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":80,"author":{"gitId":"zenlyj"},"content":"        db.flip();"},{"lineNumber":81,"author":{"gitId":"zenlyj"},"content":"        return db;"},{"lineNumber":82,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":83}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import duke.Main;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"public class Launcher {"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"    public static void main(String[] args) {"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":13}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import java.util.Timer;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import java.util.TimerTask;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"import duke.Duke;"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"import javafx.application.Platform;"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"import javafx.scene.control.Button;"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"import javafx.scene.image.Image;"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"    private VBox dialogContainer;"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"    private TextField userInput;"},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"    private Button sendButton;"},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"    private Duke duke;"},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"     * Initializes Main window and display the welcome message by Duke."},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"    @FXML"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"    public void initialize() {"},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"                DialogBox.getUserDialog(\"Hello, my name is Duke. How can I help you?\","},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"                        dukeImage)"},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":"        );"},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":46,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"zenlyj"},"content":"     * Sets a delay before exiting from the application."},{"lineNumber":48,"author":{"gitId":"zenlyj"},"content":"     * A 1.5 second delay is set to allow the user to view the farewell message by Duke."},{"lineNumber":49,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"zenlyj"},"content":"    public void shutdown() {"},{"lineNumber":51,"author":{"gitId":"zenlyj"},"content":"        Timer timer \u003d new Timer();"},{"lineNumber":52,"author":{"gitId":"zenlyj"},"content":"        int delay \u003d 1500;"},{"lineNumber":53,"author":{"gitId":"zenlyj"},"content":"        timer.schedule(new TimerTask() {"},{"lineNumber":54,"author":{"gitId":"zenlyj"},"content":"            @Override"},{"lineNumber":55,"author":{"gitId":"zenlyj"},"content":"            public void run() {"},{"lineNumber":56,"author":{"gitId":"zenlyj"},"content":"                Platform.exit();"},{"lineNumber":57,"author":{"gitId":"zenlyj"},"content":"                System.exit(0);"},{"lineNumber":58,"author":{"gitId":"zenlyj"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"zenlyj"},"content":"        }, delay);"},{"lineNumber":60,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":62,"author":{"gitId":"zenlyj"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":63,"author":{"gitId":"zenlyj"},"content":"        duke \u003d d;"},{"lineNumber":64,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":66,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"zenlyj"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":68,"author":{"gitId":"zenlyj"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":69,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"zenlyj"},"content":"    @FXML"},{"lineNumber":71,"author":{"gitId":"zenlyj"},"content":"    private void handleUserInput() {"},{"lineNumber":72,"author":{"gitId":"zenlyj"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":73,"author":{"gitId":"zenlyj"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":74,"author":{"gitId":"zenlyj"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":75,"author":{"gitId":"zenlyj"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":76,"author":{"gitId":"zenlyj"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":77,"author":{"gitId":"zenlyj"},"content":"        );"},{"lineNumber":78,"author":{"gitId":"zenlyj"},"content":"        userInput.clear();"},{"lineNumber":79,"author":{"gitId":"zenlyj"},"content":"        if (!duke.isActive()) {"},{"lineNumber":80,"author":{"gitId":"zenlyj"},"content":"            shutdown();"},{"lineNumber":81,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":83}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import java.time.Month;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":" * Class representing a Deadline, a sub-class of Task."},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"public class Deadline extends Task {"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"    private final LocalDateTime deadline;"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"     * Constructor of the Deadline class."},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"     * @param description A brief description of the Deadline."},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"     * @param deadline Date and Time of the Deadline."},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"    public Deadline(String description, LocalDateTime deadline) {"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"        super(description, \"0\");"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"     * Constructor of the Deadline class."},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"     * @param description A brief description of the deadline."},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"     * @param isDone \"0\" if task is not done. \"1\" if task is done."},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"    public Deadline(String description, String isDone, LocalDateTime deadline) {"},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"        super(description, isDone);"},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"     * Returns the Date and Time of the Deadline."},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"     * @return A String representing the deadline in the following format: \"YYYY-MM-DD HHmm\"."},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"    public String getDateTime() {"},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"        return deadline.toLocalDate().toString()"},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":"                + \" \" + deadline.toLocalTime().format(DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":46,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"zenlyj"},"content":"     * Returns a String representation of the Deadline to be displayed to the user."},{"lineNumber":48,"author":{"gitId":"zenlyj"},"content":"     * Shows the description, date and time of the Deadline, as well as whether it is done."},{"lineNumber":49,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"zenlyj"},"content":"     * @return A String representing the Deadline."},{"lineNumber":51,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"zenlyj"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"zenlyj"},"content":"    public String toString() {"},{"lineNumber":54,"author":{"gitId":"zenlyj"},"content":"        int dayOfMonth \u003d deadline.getDayOfMonth();"},{"lineNumber":55,"author":{"gitId":"zenlyj"},"content":"        Month month \u003d deadline.getMonth();"},{"lineNumber":56,"author":{"gitId":"zenlyj"},"content":"        int year \u003d deadline.getYear();"},{"lineNumber":57,"author":{"gitId":"zenlyj"},"content":"        LocalTime time \u003d deadline.toLocalTime();"},{"lineNumber":58,"author":{"gitId":"zenlyj"},"content":"        String twelveHrTime \u003d time.format(DateTimeFormatter.ofPattern(\"h:mm a\"));"},{"lineNumber":59,"author":{"gitId":"zenlyj"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + month.toString()"},{"lineNumber":60,"author":{"gitId":"zenlyj"},"content":"                + \" \" + dayOfMonth + \" \" + year + \" \" + twelveHrTime + \")\";"},{"lineNumber":61,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":62}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import java.time.Month;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":" * Class representing an Event, a sub-class of Task."},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"public class Event extends Task {"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"    private final LocalDateTime eventTime;"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"     * Constructor of the Event class."},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"     * @param description A brief description of the Event."},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"     * @param eventTime Date and Time of the Event."},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"    public Event(String description, LocalDateTime eventTime) {"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"        super(description, \"0\");"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"     * Constructor of the Event class."},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"     * @param description A brief description of the Event."},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"     * @param isDone \"0\" if the task is not done. \"1\" if the task is done."},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"     * @param eventTime Date and Time of the Event."},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"    public Event(String description, String isDone, LocalDateTime eventTime) {"},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"        super(description, isDone);"},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"     * Returns the Date and Time of the Event."},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"     * @return A String representing the event date and time in the following format: \"YYYY-MM-DD HHmm\"."},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"    public String getDateTime() {"},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":"        return eventTime.toLocalDate().toString()"},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":"                + \" \" + eventTime.toLocalTime().format(DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":45,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":47,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"zenlyj"},"content":"     * Returns a String representation of the Event to be displayed to the user."},{"lineNumber":49,"author":{"gitId":"zenlyj"},"content":"     * Shows the description, date and time of the Event, as well as whether it is done."},{"lineNumber":50,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"zenlyj"},"content":"     * @return A String representing the Event."},{"lineNumber":52,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"zenlyj"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"zenlyj"},"content":"    public String toString() {"},{"lineNumber":55,"author":{"gitId":"zenlyj"},"content":"        int dayOfMonth \u003d eventTime.getDayOfMonth();"},{"lineNumber":56,"author":{"gitId":"zenlyj"},"content":"        Month month \u003d eventTime.getMonth();"},{"lineNumber":57,"author":{"gitId":"zenlyj"},"content":"        int year \u003d eventTime.getYear();"},{"lineNumber":58,"author":{"gitId":"zenlyj"},"content":"        LocalTime time \u003d eventTime.toLocalTime();"},{"lineNumber":59,"author":{"gitId":"zenlyj"},"content":"        String twelveHrTime \u003d time.format(DateTimeFormatter.ofPattern(\"h:mm a\"));"},{"lineNumber":60,"author":{"gitId":"zenlyj"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + month.toString()"},{"lineNumber":61,"author":{"gitId":"zenlyj"},"content":"                + \" \" + dayOfMonth + \" \" + year + \" \" + twelveHrTime + \")\";"},{"lineNumber":62,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":63}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":" * Class representing a Task."},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"    protected String description;"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"     * Constructor of the Task class"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"     * @param description A brief description of the task."},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"     * @param isDone \"0\" if the task is done. \"1\" if the task is not done."},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"    protected Task(String description, String isDone) {"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"        this.description \u003d description;"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"        this.isDone \u003d isDone.equals(\"1\") ? true : false;"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"     * Displays whether a task is done."},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"     * @return A cross symbol if task is not done, a tick symbol if task is done."},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"    private String getStatusIcon() {"},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"     * Returns the description of the task."},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"     * @return A String describing the task."},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"    public String getDescription() {"},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"        return description;"},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"     * Returns the status of the task, whether it is done or not."},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"     * @return True if the task is done, false if task is not done."},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":"    public boolean isDone() {"},{"lineNumber":45,"author":{"gitId":"zenlyj"},"content":"        return isDone;"},{"lineNumber":46,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":48,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"zenlyj"},"content":"     * Updates the task as completed."},{"lineNumber":50,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"zenlyj"},"content":"    public void setDone() {"},{"lineNumber":52,"author":{"gitId":"zenlyj"},"content":"        this.isDone \u003d true;"},{"lineNumber":53,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":55,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"zenlyj"},"content":"     * Updates the task as incomplete."},{"lineNumber":57,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"zenlyj"},"content":"    public void setNotDone() {"},{"lineNumber":59,"author":{"gitId":"zenlyj"},"content":"        this.isDone \u003d false;"},{"lineNumber":60,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":62,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"zenlyj"},"content":"     * Returns the status and the description of the task."},{"lineNumber":64,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"zenlyj"},"content":"     * @return A tick/cross symbol and the description of the task."},{"lineNumber":66,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"zenlyj"},"content":"    @Override"},{"lineNumber":68,"author":{"gitId":"zenlyj"},"content":"    public String toString() {"},{"lineNumber":69,"author":{"gitId":"zenlyj"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;"},{"lineNumber":70,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":71}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":" * Class representing a ToDo task, a sub-class of Task."},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"public class ToDo extends Task {"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"     * Constructor of the ToDo class."},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"     * @param description A brief description of the ToDo task."},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"    public ToDo(String description) {"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"        super(description, \"0\");"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"     * Constructor of the ToDo class."},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"     * @param description A brief description of the ToDo task."},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"     * @param isDone \"0\" if the task is not done. \"1\" if the task is done."},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"    public ToDo(String description, String isDone) {"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"        super(description, isDone);"},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"     * Returns a String representation of the ToDo task to be displayed to the user."},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"     * Shows the description of the task, as well as whether it is done."},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"     * @return A String representing the ToDo task."},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":37}},{"path":"src/main/java/duke/util/COMMAND.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.util;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":" * A class that contains all constants for user commands."},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"public class COMMAND {"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"    public static final String EVENT \u003d \"event\";"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"    public static final String DEADLINE \u003d \"deadline\";"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"    public static final String TODO \u003d \"todo\";"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"    public static final String FIND \u003d \"find\";"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"    public static final String LIST \u003d \"list\";"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"    public static final String DONE \u003d \"done\";"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"    public static final String DELETE \u003d \"delete\";"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"    public static final String UNDO \u003d \"undo\";"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"    public static final String EXIT \u003d \"bye\";"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":16}},{"path":"src/main/java/duke/util/Cache.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.util;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import java.util.LinkedList;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"import javafx.util.Pair;"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":" * Class that serves as a Cache for Add, Delete, Done operations."},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"public class Cache {"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"    private static final LinkedList\u003cPair\u003cPair\u003cTask, Integer\u003e, String\u003e\u003e stack \u003d new LinkedList\u003c\u003e();"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"     * Stores command into the cache."},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"     * @param task The task relevant to the command."},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"     * @param taskIdx The index of the task relevant to the command."},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"     * @param command The command to be stored."},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"    public static void cache(Task task, int taskIdx, String command) {"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"        Pair\u003cTask, Integer\u003e taskIdxPair \u003d new Pair\u003c\u003e(task, taskIdx);"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"        Pair\u003cPair\u003cTask, Integer\u003e, String\u003e toCache \u003d new Pair\u003c\u003e(taskIdxPair, command);"},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"        stack.push(toCache);"},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"     * Retrieves the most recent command executed."},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"     * @return Data regarding the most recent command."},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"    public static Pair\u003cPair\u003cTask, Integer\u003e, String\u003e pop() {"},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"        return stack.pop();"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"     * Checks if the cache is empty."},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"     * @return True if the user has not executed any commands. False otherwise."},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"    public static boolean isEmpty() {"},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":"        return stack.isEmpty();"},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":45}},{"path":"src/main/java/duke/util/MessageFormatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.util;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import java.util.ListIterator;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":" * Class containing methods that formats Duke\u0027s messages to the user."},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"public class MessageFormatter {"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"     * Formats Duke\u0027s message to the user after adding a task."},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"     * @param taskAdded The task added by Duke."},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"     * @param tasks The list of tasks."},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"     * @return A String that lets the user know which task was added, as well as the"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"     *          current size of the list of tasks."},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"    public String formatAddMsg(Task taskAdded, TaskList tasks) {"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"        return (\"Got it. I\u0027ve added this task:\\n\" + taskAdded"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"                + \"\\nYou have \""},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"                + tasks.getSize()"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"                + (tasks.getSize() \u003d\u003d 1 ? \" task\" : \" tasks\")"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"                + \" in your list\");"},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"     * Formats Duke\u0027s message to the user after removing a task."},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"     * @param taskRemoved The task removed by Duke."},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"     * @param tasks The list of tasks."},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"     * @return A String that lets the user know which task was deleted, as well as the"},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"     *          current size of the list of tasks."},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"    public String formatRemoveMsg(Task taskRemoved, TaskList tasks) {"},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"        return (\"I\u0027ve removed this task:\\n\""},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"                + taskRemoved"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"                + \"\\nYou have \""},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"                + tasks.getSize()"},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"                + (tasks.getSize() \u003d\u003d 1 ? \" task\" : \" tasks\")"},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"                + \" in your list\");"},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"zenlyj"},"content":"     * Formats Duke\u0027s message to the user after setting a task as completed."},{"lineNumber":46,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"zenlyj"},"content":"     * @param taskDone The task that was set as completed."},{"lineNumber":48,"author":{"gitId":"zenlyj"},"content":"     * @return A String that lets the user know which task was set as completed."},{"lineNumber":49,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"zenlyj"},"content":"    public String formatDoneMsg(Task taskDone) {"},{"lineNumber":51,"author":{"gitId":"zenlyj"},"content":"        return (\"Nice! I have marked this task as done:\\n\""},{"lineNumber":52,"author":{"gitId":"zenlyj"},"content":"                + taskDone);"},{"lineNumber":53,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":55,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"zenlyj"},"content":"     * Formats Duke\u0027s message to the user after setting a task as not complete."},{"lineNumber":57,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"zenlyj"},"content":"     * @param taskUndone The task that was set as not complete."},{"lineNumber":59,"author":{"gitId":"zenlyj"},"content":"     * @return A String that lets the user know which task was set as not complete."},{"lineNumber":60,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"zenlyj"},"content":"    public String formatUndoDone(Task taskUndone) {"},{"lineNumber":62,"author":{"gitId":"zenlyj"},"content":"        return (\"I have marked this task as not done:\\n\""},{"lineNumber":63,"author":{"gitId":"zenlyj"},"content":"                + taskUndone);"},{"lineNumber":64,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":66,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"zenlyj"},"content":"     * Formats Duke\u0027s message to the user after searching for tasks that matches"},{"lineNumber":68,"author":{"gitId":"zenlyj"},"content":"     * the keyword provided by the user."},{"lineNumber":69,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"zenlyj"},"content":"     * @param matchingTasks A list of tasks that matches the keyword provided by the user."},{"lineNumber":71,"author":{"gitId":"zenlyj"},"content":"     * @return A String that displays all the tasks that matches the keyword provided."},{"lineNumber":72,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"zenlyj"},"content":"    public String formatFindMsg(TaskList matchingTasks) {"},{"lineNumber":74,"author":{"gitId":"zenlyj"},"content":"        if (matchingTasks.getSize() \u003d\u003d 0) {"},{"lineNumber":75,"author":{"gitId":"zenlyj"},"content":"            return \"There are no tasks with such keyword!\";"},{"lineNumber":76,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"zenlyj"},"content":"        ListIterator\u003cTask\u003e iterator \u003d matchingTasks.getIterator();"},{"lineNumber":78,"author":{"gitId":"zenlyj"},"content":"        String msg \u003d \"I have found tasks with the given keyword:\\n\";"},{"lineNumber":79,"author":{"gitId":"zenlyj"},"content":"        while (iterator.hasNext()) {"},{"lineNumber":80,"author":{"gitId":"zenlyj"},"content":"            Task task \u003d iterator.next();"},{"lineNumber":81,"author":{"gitId":"zenlyj"},"content":"            msg +\u003d (task + (iterator.hasNext() ? \"\\n\" : \"\"));"},{"lineNumber":82,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"zenlyj"},"content":"        return msg;"},{"lineNumber":84,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":86,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"zenlyj"},"content":"     * Formats Duke\u0027s message to the user after retrieving all user\u0027s tasks."},{"lineNumber":88,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"zenlyj"},"content":"     * @param allTasks All tasks of the user."},{"lineNumber":90,"author":{"gitId":"zenlyj"},"content":"     * @return A String that displays all tasks of the user."},{"lineNumber":91,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"zenlyj"},"content":"    public String formatListMsg(TaskList allTasks) {"},{"lineNumber":93,"author":{"gitId":"zenlyj"},"content":"        if (allTasks.getSize() \u003d\u003d 0) {"},{"lineNumber":94,"author":{"gitId":"zenlyj"},"content":"            return \"There are no tasks to display!\";"},{"lineNumber":95,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"zenlyj"},"content":"        ListIterator\u003cTask\u003e iterator \u003d allTasks.getIterator();"},{"lineNumber":97,"author":{"gitId":"zenlyj"},"content":"        String msg \u003d \"Your tasks:\\n\";"},{"lineNumber":98,"author":{"gitId":"zenlyj"},"content":"        int count \u003d 1;"},{"lineNumber":99,"author":{"gitId":"zenlyj"},"content":"        while (iterator.hasNext()) {"},{"lineNumber":100,"author":{"gitId":"zenlyj"},"content":"            Task task \u003d iterator.next();"},{"lineNumber":101,"author":{"gitId":"zenlyj"},"content":"            msg +\u003d (count + \".\""},{"lineNumber":102,"author":{"gitId":"zenlyj"},"content":"                    + task"},{"lineNumber":103,"author":{"gitId":"zenlyj"},"content":"                    + (iterator.hasNext() ? \"\\n\" : \"\"));"},{"lineNumber":104,"author":{"gitId":"zenlyj"},"content":"            count++;"},{"lineNumber":105,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"zenlyj"},"content":"        return msg;"},{"lineNumber":107,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":109,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"zenlyj"},"content":"     * Formats Duke\u0027s message to the user after undoing an Add command."},{"lineNumber":111,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":112,"author":{"gitId":"zenlyj"},"content":"     * @param removedTask The task that was removed."},{"lineNumber":113,"author":{"gitId":"zenlyj"},"content":"     * @param tasks The list of tasks."},{"lineNumber":114,"author":{"gitId":"zenlyj"},"content":"     * @return A String that lets the user know which task was removed."},{"lineNumber":115,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"zenlyj"},"content":"    public String formatUndoAdd(Task removedTask, TaskList tasks) {"},{"lineNumber":117,"author":{"gitId":"zenlyj"},"content":"        return (\"ADD undone, the following task is removed:\\n\""},{"lineNumber":118,"author":{"gitId":"zenlyj"},"content":"                + removedTask"},{"lineNumber":119,"author":{"gitId":"zenlyj"},"content":"                + \"\\nYou have \""},{"lineNumber":120,"author":{"gitId":"zenlyj"},"content":"                + tasks.getSize()"},{"lineNumber":121,"author":{"gitId":"zenlyj"},"content":"                + (tasks.getSize() \u003d\u003d 1 ? \" task\" : \" tasks\")"},{"lineNumber":122,"author":{"gitId":"zenlyj"},"content":"                + \" in your list\");"},{"lineNumber":123,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":125,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"zenlyj"},"content":"     * Formats Duke\u0027s message to the user after undoing a Delete command."},{"lineNumber":127,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":128,"author":{"gitId":"zenlyj"},"content":"     * @param addedTask The task that was added back into the list."},{"lineNumber":129,"author":{"gitId":"zenlyj"},"content":"     * @param tasks The list of tasks."},{"lineNumber":130,"author":{"gitId":"zenlyj"},"content":"     * @return A String that lets the user know which task was added back into the list."},{"lineNumber":131,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"zenlyj"},"content":"    public String formatUndoDelete(Task addedTask, TaskList tasks) {"},{"lineNumber":133,"author":{"gitId":"zenlyj"},"content":"        return (\"DELETE undone, the following task is added:\\n\""},{"lineNumber":134,"author":{"gitId":"zenlyj"},"content":"                + addedTask"},{"lineNumber":135,"author":{"gitId":"zenlyj"},"content":"                + \"\\nYou have \""},{"lineNumber":136,"author":{"gitId":"zenlyj"},"content":"                + tasks.getSize()"},{"lineNumber":137,"author":{"gitId":"zenlyj"},"content":"                + (tasks.getSize() \u003d\u003d 1 ? \" task\" : \" tasks\")"},{"lineNumber":138,"author":{"gitId":"zenlyj"},"content":"                + \" in your list\");"},{"lineNumber":139,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":140}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.util;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"import duke.command.AddCommand;"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"import duke.command.Command;"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"import duke.command.DoneCommand;"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"import duke.command.ExitCommand;"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"import duke.command.FindCommand;"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"import duke.command.InvalidCommand;"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"import duke.command.ListCommand;"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"import duke.command.UndoCommand;"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"import duke.exception.DukeArgumentException;"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"import duke.exception.DukeDateTimeException;"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"import duke.exception.DukeException;"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"import duke.task.Deadline;"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"import duke.task.Event;"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"import duke.task.Task;"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"import duke.task.ToDo;"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":" * Class representing a Parser."},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"public class Parser {"},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"     * Parses user input and returns a Command corresponding to user input."},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"     * @param userInput The input of the user."},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"     * @param tasks List of tasks."},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"     * @return An executable command."},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"    public static Command parse(String userInput, TaskList tasks) {"},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"        String[] split \u003d userInput.split(\"\\\\s+\");"},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"        assert(split.length \u003e\u003d 1);"},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"        String command \u003d split[0];"},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"        Command res;"},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":"            switch (command) {"},{"lineNumber":45,"author":{"gitId":"zenlyj"},"content":"            case COMMAND.TODO:"},{"lineNumber":46,"author":{"gitId":"zenlyj"},"content":"                res \u003d handleToDo(split, userInput, tasks);"},{"lineNumber":47,"author":{"gitId":"zenlyj"},"content":"                break;"},{"lineNumber":48,"author":{"gitId":"zenlyj"},"content":"            case COMMAND.DEADLINE:"},{"lineNumber":49,"author":{"gitId":"zenlyj"},"content":"                res \u003d handleDateTimeTasks(split, userInput, COMMAND.DEADLINE, tasks);"},{"lineNumber":50,"author":{"gitId":"zenlyj"},"content":"                break;"},{"lineNumber":51,"author":{"gitId":"zenlyj"},"content":"            case COMMAND.EVENT:"},{"lineNumber":52,"author":{"gitId":"zenlyj"},"content":"                res \u003d handleDateTimeTasks(split, userInput, COMMAND.EVENT, tasks);"},{"lineNumber":53,"author":{"gitId":"zenlyj"},"content":"                break;"},{"lineNumber":54,"author":{"gitId":"zenlyj"},"content":"            case COMMAND.LIST:"},{"lineNumber":55,"author":{"gitId":"zenlyj"},"content":"                res \u003d new ListCommand();"},{"lineNumber":56,"author":{"gitId":"zenlyj"},"content":"                break;"},{"lineNumber":57,"author":{"gitId":"zenlyj"},"content":"            case COMMAND.DONE:"},{"lineNumber":58,"author":{"gitId":"zenlyj"},"content":"                res \u003d handleTaskOps(split, tasks, COMMAND.DONE);"},{"lineNumber":59,"author":{"gitId":"zenlyj"},"content":"                break;"},{"lineNumber":60,"author":{"gitId":"zenlyj"},"content":"            case COMMAND.DELETE:"},{"lineNumber":61,"author":{"gitId":"zenlyj"},"content":"                res \u003d handleTaskOps(split, tasks, COMMAND.DELETE);"},{"lineNumber":62,"author":{"gitId":"zenlyj"},"content":"                break;"},{"lineNumber":63,"author":{"gitId":"zenlyj"},"content":"            case COMMAND.FIND:"},{"lineNumber":64,"author":{"gitId":"zenlyj"},"content":"                res \u003d handleFind(split, userInput);"},{"lineNumber":65,"author":{"gitId":"zenlyj"},"content":"                break;"},{"lineNumber":66,"author":{"gitId":"zenlyj"},"content":"            case COMMAND.UNDO:"},{"lineNumber":67,"author":{"gitId":"zenlyj"},"content":"                res \u003d new UndoCommand();"},{"lineNumber":68,"author":{"gitId":"zenlyj"},"content":"                break;"},{"lineNumber":69,"author":{"gitId":"zenlyj"},"content":"            case COMMAND.EXIT:"},{"lineNumber":70,"author":{"gitId":"zenlyj"},"content":"                res \u003d new ExitCommand();"},{"lineNumber":71,"author":{"gitId":"zenlyj"},"content":"                break;"},{"lineNumber":72,"author":{"gitId":"zenlyj"},"content":"            default:"},{"lineNumber":73,"author":{"gitId":"zenlyj"},"content":"                res \u003d new InvalidCommand(\"No such command!\");"},{"lineNumber":74,"author":{"gitId":"zenlyj"},"content":"                break;"},{"lineNumber":75,"author":{"gitId":"zenlyj"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"zenlyj"},"content":"        } catch (DukeException e) {"},{"lineNumber":77,"author":{"gitId":"zenlyj"},"content":"            return new InvalidCommand(e.getMessage());"},{"lineNumber":78,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"zenlyj"},"content":"        return res;"},{"lineNumber":80,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":82,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"zenlyj"},"content":"     * Handles the case when user enters a ToDo command."},{"lineNumber":84,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"zenlyj"},"content":"     * @param split Array of substrings obtained from removing blank spaces from user input."},{"lineNumber":86,"author":{"gitId":"zenlyj"},"content":"     * @param userInput String that represents user input."},{"lineNumber":87,"author":{"gitId":"zenlyj"},"content":"     * @param tasks A list of tasks."},{"lineNumber":88,"author":{"gitId":"zenlyj"},"content":"     * @return An executable command that adds a ToDo task."},{"lineNumber":89,"author":{"gitId":"zenlyj"},"content":"     * @throws DukeArgumentException If user did not enter any task description."},{"lineNumber":90,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"zenlyj"},"content":"    private static AddCommand handleToDo("},{"lineNumber":92,"author":{"gitId":"zenlyj"},"content":"            String[] split, String userInput, TaskList tasks) throws DukeArgumentException {"},{"lineNumber":93,"author":{"gitId":"zenlyj"},"content":"        checkStringArgument(split, COMMAND.TODO);"},{"lineNumber":94,"author":{"gitId":"zenlyj"},"content":"        String description \u003d userInput.substring(5).trim();"},{"lineNumber":95,"author":{"gitId":"zenlyj"},"content":"        assert(!description.isBlank());"},{"lineNumber":96,"author":{"gitId":"zenlyj"},"content":"        Task toAdd \u003d new ToDo(description);"},{"lineNumber":97,"author":{"gitId":"zenlyj"},"content":"        Cache.cache(toAdd, tasks.getSize(), COMMAND.TODO);"},{"lineNumber":98,"author":{"gitId":"zenlyj"},"content":"        return new AddCommand(toAdd);"},{"lineNumber":99,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":101,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"zenlyj"},"content":"     * Handles the case when user enters a Deadline or Event command."},{"lineNumber":103,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":104,"author":{"gitId":"zenlyj"},"content":"     * @param split Array of substrings obtained from removing blank spaces from user input."},{"lineNumber":105,"author":{"gitId":"zenlyj"},"content":"     * @param userInput String that represents user input."},{"lineNumber":106,"author":{"gitId":"zenlyj"},"content":"     * @param command The name of the command."},{"lineNumber":107,"author":{"gitId":"zenlyj"},"content":"     * @param tasks A list of tasks."},{"lineNumber":108,"author":{"gitId":"zenlyj"},"content":"     * @return An executable command that adds a Deadline/Event task."},{"lineNumber":109,"author":{"gitId":"zenlyj"},"content":"     * @throws DukeArgumentException If user did not enter any task description."},{"lineNumber":110,"author":{"gitId":"zenlyj"},"content":"     * @throws DukeDateTimeException If user did not enter any Date and Time."},{"lineNumber":111,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"zenlyj"},"content":"    private static AddCommand handleDateTimeTasks(String[] split, String userInput, String command, TaskList tasks)"},{"lineNumber":113,"author":{"gitId":"zenlyj"},"content":"            throws DukeArgumentException, DukeDateTimeException {"},{"lineNumber":114,"author":{"gitId":"zenlyj"},"content":"        checkStringArgument(split, command);"},{"lineNumber":115,"author":{"gitId":"zenlyj"},"content":"        int detailsIdx \u003d command.equals(COMMAND.DEADLINE) ? 9 : 6;"},{"lineNumber":116,"author":{"gitId":"zenlyj"},"content":"        String regex \u003d command.equals(COMMAND.DEADLINE) ? \" /by \" : \" /at \";"},{"lineNumber":117,"author":{"gitId":"zenlyj"},"content":"        String[] taskDetails \u003d userInput.substring(detailsIdx).split(regex);"},{"lineNumber":118,"author":{"gitId":"zenlyj"},"content":"        checkDateTime(taskDetails);"},{"lineNumber":119,"author":{"gitId":"zenlyj"},"content":"        assert(taskDetails.length \u003d\u003d 2);"},{"lineNumber":120,"author":{"gitId":"zenlyj"},"content":"        String description \u003d taskDetails[0].trim();"},{"lineNumber":121,"author":{"gitId":"zenlyj"},"content":"        assert(!description.isBlank());"},{"lineNumber":122,"author":{"gitId":"zenlyj"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(taskDetails[1].trim(), formatter);"},{"lineNumber":123,"author":{"gitId":"zenlyj"},"content":"        Task toAdd \u003d command.equals(COMMAND.DEADLINE) ? new Deadline(description, dateTime)"},{"lineNumber":124,"author":{"gitId":"zenlyj"},"content":"                                                      : new Event(description, dateTime);"},{"lineNumber":125,"author":{"gitId":"zenlyj"},"content":"        Cache.cache(toAdd, tasks.getSize(), command);"},{"lineNumber":126,"author":{"gitId":"zenlyj"},"content":"        return new AddCommand(toAdd);"},{"lineNumber":127,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":129,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":130,"author":{"gitId":"zenlyj"},"content":"     * Handles the case when user enters a Find command."},{"lineNumber":131,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":132,"author":{"gitId":"zenlyj"},"content":"     * @param split Array of substrings obtained from removing blank spaces from user input."},{"lineNumber":133,"author":{"gitId":"zenlyj"},"content":"     * @param userInput String that represents user input."},{"lineNumber":134,"author":{"gitId":"zenlyj"},"content":"     * @return An executable command that searches for all tasks related to the keyword."},{"lineNumber":135,"author":{"gitId":"zenlyj"},"content":"     * @throws DukeArgumentException If user did not enter any keyword to search for."},{"lineNumber":136,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":137,"author":{"gitId":"zenlyj"},"content":"    private static FindCommand handleFind(String[] split, String userInput) throws DukeArgumentException {"},{"lineNumber":138,"author":{"gitId":"zenlyj"},"content":"        checkStringArgument(split, COMMAND.FIND);"},{"lineNumber":139,"author":{"gitId":"zenlyj"},"content":"        String keyword \u003d userInput.substring(5).trim();"},{"lineNumber":140,"author":{"gitId":"zenlyj"},"content":"        return new FindCommand(keyword);"},{"lineNumber":141,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":143,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":144,"author":{"gitId":"zenlyj"},"content":"     * Handles the case when user enters a Done or Delete command."},{"lineNumber":145,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":146,"author":{"gitId":"zenlyj"},"content":"     * @param split Array of substrings obtained from removing blank spaces from user input."},{"lineNumber":147,"author":{"gitId":"zenlyj"},"content":"     * @param tasks A list of tasks."},{"lineNumber":148,"author":{"gitId":"zenlyj"},"content":"     * @param command The name of the command."},{"lineNumber":149,"author":{"gitId":"zenlyj"},"content":"     * @return An executable command that deletes a task from the list or sets a task as done."},{"lineNumber":150,"author":{"gitId":"zenlyj"},"content":"     * @throws DukeArgumentException If user did not enter any task index, or if task index is invalid."},{"lineNumber":151,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":152,"author":{"gitId":"zenlyj"},"content":"    private static Command handleTaskOps(String[] split, TaskList tasks, String command) throws DukeArgumentException {"},{"lineNumber":153,"author":{"gitId":"zenlyj"},"content":"        int taskIdx \u003d checkNumericalArgument(split, tasks);"},{"lineNumber":154,"author":{"gitId":"zenlyj"},"content":"        assert(taskIdx \u003e\u003d 0 \u0026\u0026 (taskIdx \u003c tasks.getSize()));"},{"lineNumber":155,"author":{"gitId":"zenlyj"},"content":"        Cache.cache(tasks.getTask(taskIdx), taskIdx, command);"},{"lineNumber":156,"author":{"gitId":"zenlyj"},"content":"        return command.equals(COMMAND.DONE) ? new DoneCommand(taskIdx)"},{"lineNumber":157,"author":{"gitId":"zenlyj"},"content":"                                            : new DeleteCommand(taskIdx);"},{"lineNumber":158,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":160,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":161,"author":{"gitId":"zenlyj"},"content":"     * Checks whether the user has entered a description for the task to be added."},{"lineNumber":162,"author":{"gitId":"zenlyj"},"content":"     * Checks whether the user has entered a keyword for find function."},{"lineNumber":163,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":164,"author":{"gitId":"zenlyj"},"content":"     * @param split Array of substrings obtained from removing blank spaces from user input."},{"lineNumber":165,"author":{"gitId":"zenlyj"},"content":"     * @throws DukeArgumentException when user did not enter a keyword or description."},{"lineNumber":166,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":167,"author":{"gitId":"zenlyj"},"content":"    private static void checkStringArgument(String[] split, String command) throws DukeArgumentException {"},{"lineNumber":168,"author":{"gitId":"zenlyj"},"content":"        if (split.length \u003d\u003d 1 \u0026\u0026 command.equals(COMMAND.FIND)) {"},{"lineNumber":169,"author":{"gitId":"zenlyj"},"content":"            throw new DukeArgumentException(\"You have not entered a keyword!\");"},{"lineNumber":170,"author":{"gitId":"zenlyj"},"content":"        } else if (split.length \u003d\u003d 1) {"},{"lineNumber":171,"author":{"gitId":"zenlyj"},"content":"            throw new DukeArgumentException(\"You have not entered a task description!\");"},{"lineNumber":172,"author":{"gitId":"zenlyj"},"content":"        } else if (split.length \u003e 1 \u0026\u0026 (split[1].equals(\"/by\") || split[1].equals(\"/at\"))) {"},{"lineNumber":173,"author":{"gitId":"zenlyj"},"content":"            throw new DukeArgumentException(\"You have not entered a task description!\");"},{"lineNumber":174,"author":{"gitId":"zenlyj"},"content":"        } else {"},{"lineNumber":175,"author":{"gitId":"zenlyj"},"content":"            // Do nothing if a keyword or task description is provided."},{"lineNumber":176,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":177,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":179,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":180,"author":{"gitId":"zenlyj"},"content":"     * Checks whether the user has entered a date and time."},{"lineNumber":181,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":182,"author":{"gitId":"zenlyj"},"content":"     * @param details Pair of substrings obtained from removing \"/by\" or \"/at\" from user input."},{"lineNumber":183,"author":{"gitId":"zenlyj"},"content":"     * @throws DukeDateTimeException When user has not entered a date and time."},{"lineNumber":184,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":185,"author":{"gitId":"zenlyj"},"content":"    private static void checkDateTime(String[] details) throws DukeDateTimeException {"},{"lineNumber":186,"author":{"gitId":"zenlyj"},"content":"        if (details.length \u003c 2 || details[1].isBlank()) {"},{"lineNumber":187,"author":{"gitId":"zenlyj"},"content":"            throw new DukeDateTimeException(\"You have not entered a date and time!\");"},{"lineNumber":188,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":189,"author":{"gitId":"zenlyj"},"content":"        try {"},{"lineNumber":190,"author":{"gitId":"zenlyj"},"content":"            LocalDateTime.parse(details[1].trim(), formatter);"},{"lineNumber":191,"author":{"gitId":"zenlyj"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":192,"author":{"gitId":"zenlyj"},"content":"            throw new DukeDateTimeException("},{"lineNumber":193,"author":{"gitId":"zenlyj"},"content":"                    \"Please make sure that you enter the Date and Time \""},{"lineNumber":194,"author":{"gitId":"zenlyj"},"content":"                            + \"in the following format: yyyy-mm-dd HHmm\");"},{"lineNumber":195,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":196,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":198,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":199,"author":{"gitId":"zenlyj"},"content":"     * Checks whether the user has entered a valid task index."},{"lineNumber":200,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":201,"author":{"gitId":"zenlyj"},"content":"     * @param split Array of substrings obtained from removing blank spaces from user input."},{"lineNumber":202,"author":{"gitId":"zenlyj"},"content":"     * @param tasks List of tasks."},{"lineNumber":203,"author":{"gitId":"zenlyj"},"content":"     * @return Task index entered by user if it is valid."},{"lineNumber":204,"author":{"gitId":"zenlyj"},"content":"     * @throws DukeArgumentException When user enters a non-integer, an out of bounds index or if user"},{"lineNumber":205,"author":{"gitId":"zenlyj"},"content":"     *                               did not enter any index."},{"lineNumber":206,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":207,"author":{"gitId":"zenlyj"},"content":"    private static int checkNumericalArgument(String[] split, TaskList tasks) throws DukeArgumentException {"},{"lineNumber":208,"author":{"gitId":"zenlyj"},"content":"        if (split.length \u003e 2) {"},{"lineNumber":209,"author":{"gitId":"zenlyj"},"content":"            throw new DukeArgumentException(\"Please enter a numerical value for the task index!\");"},{"lineNumber":210,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":211,"author":{"gitId":"zenlyj"},"content":"        try {"},{"lineNumber":212,"author":{"gitId":"zenlyj"},"content":"            int taskIndex \u003d Integer.parseInt(split[1]) - 1;"},{"lineNumber":213,"author":{"gitId":"zenlyj"},"content":"            tasks.getTask(taskIndex);"},{"lineNumber":214,"author":{"gitId":"zenlyj"},"content":"            return taskIndex;"},{"lineNumber":215,"author":{"gitId":"zenlyj"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":216,"author":{"gitId":"zenlyj"},"content":"            throw new DukeArgumentException(\"Please enter a numerical value for the task index!\");"},{"lineNumber":217,"author":{"gitId":"zenlyj"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":218,"author":{"gitId":"zenlyj"},"content":"            if (split.length \u003d\u003d 1) {"},{"lineNumber":219,"author":{"gitId":"zenlyj"},"content":"                throw new DukeArgumentException(\"You have not entered a task index!\");"},{"lineNumber":220,"author":{"gitId":"zenlyj"},"content":"            } else {"},{"lineNumber":221,"author":{"gitId":"zenlyj"},"content":"                throw new DukeArgumentException(\"Please enter a valid task index!\");"},{"lineNumber":222,"author":{"gitId":"zenlyj"},"content":"            }"},{"lineNumber":223,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":224,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":225,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":225}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.util;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import java.util.ListIterator;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"import duke.task.Task;"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":" * Class representing A List of Tasks."},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"public class TaskList {"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"    private final List\u003cTask\u003e tasks;"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"     * Constructor for TaskList."},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"     * Constructs an empty TaskList."},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"    public TaskList() {"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"     * Constructor for TaskList."},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"     * Constructs a TaskList with existing tasks specified in the method parameter."},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"     * @param tasks List of tasks."},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"    public TaskList(List\u003cTask\u003e tasks) {"},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"     * Returns an iterator for the list of tasks."},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"     * @return A task list iterator."},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"    public ListIterator\u003cTask\u003e getIterator() {"},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"        return this.tasks.listIterator();"},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":"     * Retrieves a task from the list of tasks."},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"zenlyj"},"content":"     * @param taskIndex The index of the task to be retrieved."},{"lineNumber":46,"author":{"gitId":"zenlyj"},"content":"     * @return A task from the list of tasks."},{"lineNumber":47,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"zenlyj"},"content":"    public Task getTask(int taskIndex) {"},{"lineNumber":49,"author":{"gitId":"zenlyj"},"content":"        return tasks.get(taskIndex);"},{"lineNumber":50,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":52,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"zenlyj"},"content":"     * Gets the size of TaskList."},{"lineNumber":54,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"zenlyj"},"content":"     * @return An integer representing the number of tasks in the list."},{"lineNumber":56,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"zenlyj"},"content":"    public int getSize() {"},{"lineNumber":58,"author":{"gitId":"zenlyj"},"content":"        return this.tasks.size();"},{"lineNumber":59,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":61,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"zenlyj"},"content":"     * Adds task to the list."},{"lineNumber":63,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"zenlyj"},"content":"     * @param task The task to be added to the list of tasks."},{"lineNumber":65,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"zenlyj"},"content":"    public void addTask(Task task) {"},{"lineNumber":67,"author":{"gitId":"zenlyj"},"content":"        tasks.add(task);"},{"lineNumber":68,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":70,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"zenlyj"},"content":"     * Adds task to a specific index of the list."},{"lineNumber":72,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"zenlyj"},"content":"     * @param task The task to be added to the list."},{"lineNumber":74,"author":{"gitId":"zenlyj"},"content":"     * @param taskIdx The index where the task is added."},{"lineNumber":75,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"zenlyj"},"content":"    public void addTask(Task task, int taskIdx) {"},{"lineNumber":77,"author":{"gitId":"zenlyj"},"content":"        tasks.add(taskIdx, task);"},{"lineNumber":78,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":80,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"zenlyj"},"content":"     * Removes task from the list."},{"lineNumber":82,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"zenlyj"},"content":"     * @param taskIndex The index of the task to be removed."},{"lineNumber":84,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"zenlyj"},"content":"    public Task deleteTask(int taskIndex) {"},{"lineNumber":86,"author":{"gitId":"zenlyj"},"content":"        Task toRemove \u003d tasks.get(taskIndex);"},{"lineNumber":87,"author":{"gitId":"zenlyj"},"content":"        toRemove.setNotDone();"},{"lineNumber":88,"author":{"gitId":"zenlyj"},"content":"        tasks.remove(taskIndex);"},{"lineNumber":89,"author":{"gitId":"zenlyj"},"content":"        return toRemove;"},{"lineNumber":90,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":91}},{"path":"src/main/java/duke/util/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.util;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"import java.util.ListIterator;"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"import java.util.Scanner;"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"import duke.exception.DukeStorageException;"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"import duke.task.Deadline;"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"import duke.task.Event;"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"import duke.task.Task;"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"import duke.task.ToDo;"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":" * Class representing a storage for the user\u0027s tasks."},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"public class TaskStorage {"},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"    private final File file;"},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"    private final String TODO \u003d \"T\";"},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"    private final String DEADLINE \u003d \"D\";"},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"    private final String EVENT \u003d \"E\";"},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"    private final String DONE \u003d \"1\";"},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"    private final String NOT_DONE \u003d \"0\";"},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"     * Constructor of TaskStorage."},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"     * @param path Path of the file to read from or write to."},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"    public TaskStorage(String path) throws DukeStorageException {"},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"            file \u003d new File(path);"},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"            file.getParentFile().mkdirs();"},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"            file.createNewFile();"},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":"        } catch (IOException e) {"},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":"            throw new DukeStorageException(\"An error has occurred when creating a save file!\");"},{"lineNumber":45,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":48,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"zenlyj"},"content":"     * Writes data of existing tasks to a file."},{"lineNumber":50,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"zenlyj"},"content":"     * @param tasks Existing user\u0027s tasks."},{"lineNumber":52,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"zenlyj"},"content":"    public void storeData(TaskList tasks) throws DukeStorageException {"},{"lineNumber":54,"author":{"gitId":"zenlyj"},"content":"        try {"},{"lineNumber":55,"author":{"gitId":"zenlyj"},"content":"            FileWriter writer \u003d new FileWriter(file);"},{"lineNumber":56,"author":{"gitId":"zenlyj"},"content":"            ListIterator\u003cTask\u003e iterator \u003d tasks.getIterator();"},{"lineNumber":57,"author":{"gitId":"zenlyj"},"content":"            Task task;"},{"lineNumber":58,"author":{"gitId":"zenlyj"},"content":"            while (iterator.hasNext()) {"},{"lineNumber":59,"author":{"gitId":"zenlyj"},"content":"                task \u003d iterator.next();"},{"lineNumber":60,"author":{"gitId":"zenlyj"},"content":"                String taskType \u003d task.toString().substring(1, 2);"},{"lineNumber":61,"author":{"gitId":"zenlyj"},"content":"                assert(taskType.equals(TODO) || taskType.equals(DEADLINE) || taskType.equals(EVENT));"},{"lineNumber":62,"author":{"gitId":"zenlyj"},"content":"                int done \u003d task.isDone() ? 1 : 0;"},{"lineNumber":63,"author":{"gitId":"zenlyj"},"content":"                String description \u003d task.getDescription();"},{"lineNumber":64,"author":{"gitId":"zenlyj"},"content":"                String details \u003d \"\";"},{"lineNumber":65,"author":{"gitId":"zenlyj"},"content":"                switch (taskType) {"},{"lineNumber":66,"author":{"gitId":"zenlyj"},"content":"                case DEADLINE:"},{"lineNumber":67,"author":{"gitId":"zenlyj"},"content":"                    Deadline deadline \u003d (Deadline) task;"},{"lineNumber":68,"author":{"gitId":"zenlyj"},"content":"                    details \u003d deadline.getDateTime();"},{"lineNumber":69,"author":{"gitId":"zenlyj"},"content":"                    break;"},{"lineNumber":70,"author":{"gitId":"zenlyj"},"content":"                case EVENT:"},{"lineNumber":71,"author":{"gitId":"zenlyj"},"content":"                    Event event \u003d (Event) task;"},{"lineNumber":72,"author":{"gitId":"zenlyj"},"content":"                    details \u003d event.getDateTime();"},{"lineNumber":73,"author":{"gitId":"zenlyj"},"content":"                    break;"},{"lineNumber":74,"author":{"gitId":"zenlyj"},"content":"                default:"},{"lineNumber":75,"author":{"gitId":"zenlyj"},"content":"                    break;"},{"lineNumber":76,"author":{"gitId":"zenlyj"},"content":"                }"},{"lineNumber":77,"author":{"gitId":"zenlyj"},"content":"                writer.write(taskType + \" | \" + done"},{"lineNumber":78,"author":{"gitId":"zenlyj"},"content":"                        + \" | \" + description + (details.isBlank() ? \"\" : \" | \" + details));"},{"lineNumber":79,"author":{"gitId":"zenlyj"},"content":"                writer.write(System.lineSeparator());"},{"lineNumber":80,"author":{"gitId":"zenlyj"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"zenlyj"},"content":"            writer.close();"},{"lineNumber":82,"author":{"gitId":"zenlyj"},"content":"        } catch (IOException e) {"},{"lineNumber":83,"author":{"gitId":"zenlyj"},"content":"            throw new DukeStorageException(\"An error has occurred when saving the tasks!\");"},{"lineNumber":84,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":87,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"zenlyj"},"content":"     * Retrieves data of tasks from file and construct a list of tasks previously added by the user."},{"lineNumber":89,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"zenlyj"},"content":"     * @return A list of tasks retrieved from the storage."},{"lineNumber":91,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"zenlyj"},"content":"    public TaskList retrieveData() throws DukeStorageException {"},{"lineNumber":93,"author":{"gitId":"zenlyj"},"content":"        List\u003cTask\u003e retrievedTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":94,"author":{"gitId":"zenlyj"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":95,"author":{"gitId":"zenlyj"},"content":"        try {"},{"lineNumber":96,"author":{"gitId":"zenlyj"},"content":"            Scanner sc \u003d new Scanner(file);"},{"lineNumber":97,"author":{"gitId":"zenlyj"},"content":"            while (sc.hasNext()) {"},{"lineNumber":98,"author":{"gitId":"zenlyj"},"content":"                String line \u003d sc.nextLine();"},{"lineNumber":99,"author":{"gitId":"zenlyj"},"content":"                String[] taskInfo \u003d line.split(\" \\\\| \");"},{"lineNumber":100,"author":{"gitId":"zenlyj"},"content":"                String taskType \u003d taskInfo[0];"},{"lineNumber":101,"author":{"gitId":"zenlyj"},"content":"                assert(taskType.equals(TODO) || taskType.equals(DEADLINE) || taskType.equals(EVENT));"},{"lineNumber":102,"author":{"gitId":"zenlyj"},"content":"                String isDone \u003d taskInfo[1];"},{"lineNumber":103,"author":{"gitId":"zenlyj"},"content":"                assert(isDone.equals(DONE) || isDone.equals(NOT_DONE)) : \"Save file has been corrupted!\";"},{"lineNumber":104,"author":{"gitId":"zenlyj"},"content":"                String description \u003d taskInfo[2];"},{"lineNumber":105,"author":{"gitId":"zenlyj"},"content":"                assert(!description.isBlank()) : \"Save file has been corrupted!\";"},{"lineNumber":106,"author":{"gitId":"zenlyj"},"content":"                switch (taskType) {"},{"lineNumber":107,"author":{"gitId":"zenlyj"},"content":"                case TODO:"},{"lineNumber":108,"author":{"gitId":"zenlyj"},"content":"                    retrievedTasks.add(new ToDo(description, isDone));"},{"lineNumber":109,"author":{"gitId":"zenlyj"},"content":"                    break;"},{"lineNumber":110,"author":{"gitId":"zenlyj"},"content":"                case DEADLINE:"},{"lineNumber":111,"author":{"gitId":"zenlyj"},"content":"                    String deadlineDetails \u003d taskInfo[3];"},{"lineNumber":112,"author":{"gitId":"zenlyj"},"content":"                    assert(!deadlineDetails.isBlank()) : \"Save file has been corrupted!\";"},{"lineNumber":113,"author":{"gitId":"zenlyj"},"content":"                    LocalDateTime deadline \u003d LocalDateTime.parse(deadlineDetails, formatter);"},{"lineNumber":114,"author":{"gitId":"zenlyj"},"content":"                    retrievedTasks.add(new Deadline(description, isDone, deadline));"},{"lineNumber":115,"author":{"gitId":"zenlyj"},"content":"                    break;"},{"lineNumber":116,"author":{"gitId":"zenlyj"},"content":"                case EVENT:"},{"lineNumber":117,"author":{"gitId":"zenlyj"},"content":"                    String eventDetails \u003d taskInfo[3];"},{"lineNumber":118,"author":{"gitId":"zenlyj"},"content":"                    assert(!eventDetails.isBlank()) : \"Save file has been corrupted!\";"},{"lineNumber":119,"author":{"gitId":"zenlyj"},"content":"                    LocalDateTime eventTime \u003d LocalDateTime.parse(eventDetails, formatter);"},{"lineNumber":120,"author":{"gitId":"zenlyj"},"content":"                    retrievedTasks.add(new Event(description, isDone, eventTime));"},{"lineNumber":121,"author":{"gitId":"zenlyj"},"content":"                    break;"},{"lineNumber":122,"author":{"gitId":"zenlyj"},"content":"                default:"},{"lineNumber":123,"author":{"gitId":"zenlyj"},"content":"                    break;"},{"lineNumber":124,"author":{"gitId":"zenlyj"},"content":"                }"},{"lineNumber":125,"author":{"gitId":"zenlyj"},"content":"            }"},{"lineNumber":126,"author":{"gitId":"zenlyj"},"content":"            return new TaskList(retrievedTasks);"},{"lineNumber":127,"author":{"gitId":"zenlyj"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":128,"author":{"gitId":"zenlyj"},"content":"            throw new DukeStorageException(\"Save file is missing/corrupted!\");"},{"lineNumber":129,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":131}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"            \u003cHBox.margin\u003e"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"                \u003cInsets left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"            \u003c/HBox.margin\u003e"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"        \u003c/Label\u003e"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"    \u003c/children\u003e"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"    \u003cpadding\u003e"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"    \u003c/padding\u003e"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"zenlyj":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"zenlyj":19}},{"path":"src/test/java/duke/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import duke.exception.DukeStorageException;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import duke.util.TaskList;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import duke.command.AddCommand;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"import duke.task.ToDo;"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"import duke.util.TaskStorage;"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"import duke.util.MessageFormatter;"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"class AddCommandTest {"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"    void testAddCommand() {"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"            Task todo \u003d new ToDo(\"hello world!\");"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"            AddCommand add \u003d new AddCommand(todo);"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"            TaskList tasks \u003d new TaskList();"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"            add.execute(tasks, new MessageFormatter(), new TaskStorage(\"data/cmdTest.txt\"));"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"            assertEquals(tasks.getTask(0).toString(), todo.toString());"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"        } catch (DukeStorageException e) {"},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"            assertEquals(e.getMessage(), \"\");"},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":28}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"class DeadlineTest {"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"    private static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"    void testDeadlineDescription() {"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"        assertEquals(new Deadline(\"math assignment\","},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"                LocalDateTime.parse(\"2020-11-27 2359\", formatter)).getDescription(),"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"                \"math assignment\""},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"        );"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"    void testDeadlineDone() {"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"        Deadline underTest \u003d new Deadline(\"physics experiment\","},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"                LocalDateTime.parse(\"2020-11-29 2359\", formatter));"},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"        underTest.setDone();"},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"        underTest.setNotDone();"},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"        assertEquals(underTest.isDone(), false);"},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"    @Test"},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"    void testDateTime() {"},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"        assertEquals(new Deadline(\"coding assignment\","},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"                LocalDateTime.parse(\"2020-12-02 1920\", formatter)).getDateTime(),"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"                \"2020-12-02 1920\""},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"        );"},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"todo math homework"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":"todo science homework"},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"hi there"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"list"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"deadline coding assignment /by 12.02.21"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"event sumobot contest /at 19.02.21 7pm"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"list"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"done 3"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"deadline biology experiment /by 12.03.21 5pm"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"todo laundry"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"list"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"done 2"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"done 4"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"list"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"go home"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"done 6"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"bye"}],"authorContributionMap":{"zenlyj":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"zenlyj":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/Duke.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"zenlyj":1,"-":37}}]
