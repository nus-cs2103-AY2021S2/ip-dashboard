[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"# duke.Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"1. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"zenlyj":2,"-":21}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":" * Class representing chat bot, Duke."},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"    private static TaskList tasks;"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"    private static TaskStorage storage;"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"    private static Ui ui;"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"    private static boolean isActive;"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"     * Constructor of Duke."},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"    public Duke() {"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"        ui \u003d new Ui();"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"        storage \u003d new TaskStorage(\"data/tasks.txt\");"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"        tasks \u003d storage.retrieveData();"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"        isActive \u003d true;"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"     * Runs the chat bot."},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"     * Reads user input and parses it."},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"     * Exits when user enters \"bye\"."},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"    private void run() {"},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"        ui.print(\"POWERED BY JARVIS\\n\\n\\t  Hello! I\u0027m Jarvis.\\n\\t  How may I help you?\");"},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"        while (isActive) {"},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"            String userInput \u003d ui.readInput();"},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"            if (userInput.isBlank()) {"},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"                continue;"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"            Command cmd \u003d Parser.parse(userInput, tasks);"},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"            if (cmd !\u003d null) {"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"                isActive \u003d cmd.execute(tasks, ui, storage);"},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":"     * Creates a Duke object and runs the program."},{"lineNumber":45,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":47,"author":{"gitId":"zenlyj"},"content":"    public static void main(String[] args) {"},{"lineNumber":48,"author":{"gitId":"zenlyj"},"content":"        Duke duke \u003d new Duke();"},{"lineNumber":49,"author":{"gitId":"zenlyj"},"content":"        duke.run();"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zenlyj":48,"-":3}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import duke.command.AddCommand;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import duke.command.InvalidCommand;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import duke.command.Command;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"import duke.command.DoneCommand;"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"import duke.command.ExitCommand;"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"import duke.command.FindCommand;"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"import duke.command.ListCommand;"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"import duke.exception.DukeArgumentException;"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"import duke.exception.DukeDateTimeException;"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"import duke.exception.DukeException;"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"import duke.task.Deadline;"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"import duke.task.Event;"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"import duke.task.ToDo;"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"import java.time.LocalDateTime;"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":" * Class representing a Parser."},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"public class Parser {"},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"    private static final Ui ui \u003d new Ui();"},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"    private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"     * Parses user input and returns a Command corresponding to user input."},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"     * @param userInput The input of the user."},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"     * @param tasks List of tasks."},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"     * @return An executable command."},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"    public static Command parse(String userInput, TaskList tasks) {"},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"        String[] split \u003d userInput.split(\"\\\\s+\");"},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"        String command \u003d split[0];"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"        Command res \u003d null;"},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"            switch (command) {"},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"            case \"todo\":"},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"                checkStringArgument(split, command);"},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":"                String description \u003d userInput.substring(5);"},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":"                res \u003d new AddCommand(new ToDo(description));"},{"lineNumber":45,"author":{"gitId":"zenlyj"},"content":"                break;"},{"lineNumber":46,"author":{"gitId":"zenlyj"},"content":"            case \"deadline\":"},{"lineNumber":47,"author":{"gitId":"zenlyj"},"content":"                checkStringArgument(split, command);"},{"lineNumber":48,"author":{"gitId":"zenlyj"},"content":"                String[] deadlineDetails \u003d userInput.substring(9).split(\" /by \");"},{"lineNumber":49,"author":{"gitId":"zenlyj"},"content":"                checkDateTime(deadlineDetails);"},{"lineNumber":50,"author":{"gitId":"zenlyj"},"content":"                String deadlineDescription \u003d deadlineDetails[0];"},{"lineNumber":51,"author":{"gitId":"zenlyj"},"content":"                LocalDateTime deadlineDateTime \u003d LocalDateTime.parse(deadlineDetails[1], formatter);"},{"lineNumber":52,"author":{"gitId":"zenlyj"},"content":"                res \u003d new AddCommand(new Deadline(deadlineDescription, deadlineDateTime));"},{"lineNumber":53,"author":{"gitId":"zenlyj"},"content":"                break;"},{"lineNumber":54,"author":{"gitId":"zenlyj"},"content":"            case \"event\":"},{"lineNumber":55,"author":{"gitId":"zenlyj"},"content":"                checkStringArgument(split, command);"},{"lineNumber":56,"author":{"gitId":"zenlyj"},"content":"                String[] eventDetails \u003d userInput.substring(6).split(\" /at \");"},{"lineNumber":57,"author":{"gitId":"zenlyj"},"content":"                checkDateTime(eventDetails);"},{"lineNumber":58,"author":{"gitId":"zenlyj"},"content":"                String eventDescription \u003d eventDetails[0];"},{"lineNumber":59,"author":{"gitId":"zenlyj"},"content":"                LocalDateTime eventDateTime \u003d LocalDateTime.parse(eventDetails[1], formatter);"},{"lineNumber":60,"author":{"gitId":"zenlyj"},"content":"                res \u003d new AddCommand(new Event(eventDescription, eventDateTime));"},{"lineNumber":61,"author":{"gitId":"zenlyj"},"content":"                break;"},{"lineNumber":62,"author":{"gitId":"zenlyj"},"content":"            case \"list\":"},{"lineNumber":63,"author":{"gitId":"zenlyj"},"content":"                res \u003d new ListCommand();"},{"lineNumber":64,"author":{"gitId":"zenlyj"},"content":"                break;"},{"lineNumber":65,"author":{"gitId":"zenlyj"},"content":"            case \"done\":"},{"lineNumber":66,"author":{"gitId":"zenlyj"},"content":"                int completedTaskIdx \u003d checkNumericalArgument(split, tasks);"},{"lineNumber":67,"author":{"gitId":"zenlyj"},"content":"                res \u003d new DoneCommand(completedTaskIdx);"},{"lineNumber":68,"author":{"gitId":"zenlyj"},"content":"                break;"},{"lineNumber":69,"author":{"gitId":"zenlyj"},"content":"            case \"delete\":"},{"lineNumber":70,"author":{"gitId":"zenlyj"},"content":"                int taskToDelete \u003d checkNumericalArgument(split, tasks);"},{"lineNumber":71,"author":{"gitId":"zenlyj"},"content":"                res \u003d new DeleteCommand(taskToDelete);"},{"lineNumber":72,"author":{"gitId":"zenlyj"},"content":"                break;"},{"lineNumber":73,"author":{"gitId":"zenlyj"},"content":"            case \"find\":"},{"lineNumber":74,"author":{"gitId":"zenlyj"},"content":"                checkStringArgument(split, command);"},{"lineNumber":75,"author":{"gitId":"zenlyj"},"content":"                String keyword \u003d userInput.substring(5);"},{"lineNumber":76,"author":{"gitId":"zenlyj"},"content":"                res \u003d new FindCommand(keyword);"},{"lineNumber":77,"author":{"gitId":"zenlyj"},"content":"                break;"},{"lineNumber":78,"author":{"gitId":"zenlyj"},"content":"            case \"bye\":"},{"lineNumber":79,"author":{"gitId":"zenlyj"},"content":"                res \u003d new ExitCommand();"},{"lineNumber":80,"author":{"gitId":"zenlyj"},"content":"                break;"},{"lineNumber":81,"author":{"gitId":"zenlyj"},"content":"            default:"},{"lineNumber":82,"author":{"gitId":"zenlyj"},"content":"                res \u003d new InvalidCommand();"},{"lineNumber":83,"author":{"gitId":"zenlyj"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"zenlyj"},"content":"        } catch (DukeException e) {"},{"lineNumber":85,"author":{"gitId":"zenlyj"},"content":"            ui.print(e.getMessage());"},{"lineNumber":86,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"zenlyj"},"content":"        return res;"},{"lineNumber":88,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":90,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"zenlyj"},"content":"     * Checks whether the user has entered a description for the task to be added."},{"lineNumber":92,"author":{"gitId":"zenlyj"},"content":"     * Checks whether the user has entered a keyword for find function."},{"lineNumber":93,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":94,"author":{"gitId":"zenlyj"},"content":"     * @param split Array of substrings obtained from removing blank spaces from user input."},{"lineNumber":95,"author":{"gitId":"zenlyj"},"content":"     * @throws DukeArgumentException when user did not enter a keyword or description."},{"lineNumber":96,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"zenlyj"},"content":"    private static void checkStringArgument(String[] split, String command) throws DukeArgumentException {"},{"lineNumber":98,"author":{"gitId":"zenlyj"},"content":"        if (split.length \u003d\u003d 1 \u0026\u0026 command.equals(\"find\")) {"},{"lineNumber":99,"author":{"gitId":"zenlyj"},"content":"            throw new DukeArgumentException(\"You have not entered a keyword!\");"},{"lineNumber":100,"author":{"gitId":"zenlyj"},"content":"        } else if (split.length \u003d\u003d 1) {"},{"lineNumber":101,"author":{"gitId":"zenlyj"},"content":"            throw new DukeArgumentException(\"You have not entered a task description!\");"},{"lineNumber":102,"author":{"gitId":"zenlyj"},"content":"        } else {}"},{"lineNumber":103,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":105,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"zenlyj"},"content":"     * Checks whether the user has entered a date and time."},{"lineNumber":107,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":108,"author":{"gitId":"zenlyj"},"content":"     * @param details Pair of substrings obtained from removing \"/by\" or \"/at\" from user input."},{"lineNumber":109,"author":{"gitId":"zenlyj"},"content":"     * @throws DukeDateTimeException When user has not entered a date and time."},{"lineNumber":110,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"zenlyj"},"content":"    private static void checkDateTime(String[] details) throws DukeDateTimeException {"},{"lineNumber":112,"author":{"gitId":"zenlyj"},"content":"        if (details.length \u003c 2 || details[1].isBlank()) {"},{"lineNumber":113,"author":{"gitId":"zenlyj"},"content":"            throw new DukeDateTimeException(\"You have not entered a date and time!\");"},{"lineNumber":114,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":117,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":118,"author":{"gitId":"zenlyj"},"content":"     * Checks whether the user has entered a valid task index."},{"lineNumber":119,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":120,"author":{"gitId":"zenlyj"},"content":"     * @param split Array of substrings obtained from removing blank spaces from user input."},{"lineNumber":121,"author":{"gitId":"zenlyj"},"content":"     * @param tasks List of tasks."},{"lineNumber":122,"author":{"gitId":"zenlyj"},"content":"     * @return Task index entered by user if it is valid."},{"lineNumber":123,"author":{"gitId":"zenlyj"},"content":"     * @throws DukeArgumentException When user enters a non-integer, an out of bounds index or if user"},{"lineNumber":124,"author":{"gitId":"zenlyj"},"content":"     * did not enter any index."},{"lineNumber":125,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"zenlyj"},"content":"    private static int checkNumericalArgument(String[] split, TaskList tasks) throws DukeArgumentException {"},{"lineNumber":127,"author":{"gitId":"zenlyj"},"content":"        if (split.length \u003e 2) {"},{"lineNumber":128,"author":{"gitId":"zenlyj"},"content":"            throw new DukeArgumentException(\"Please enter a numerical value for the task index!\");"},{"lineNumber":129,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"zenlyj"},"content":"        try {"},{"lineNumber":131,"author":{"gitId":"zenlyj"},"content":"            int taskIndex \u003d Integer.parseInt(split[1]) - 1;"},{"lineNumber":132,"author":{"gitId":"zenlyj"},"content":"            tasks.getTask(taskIndex);"},{"lineNumber":133,"author":{"gitId":"zenlyj"},"content":"            return taskIndex;"},{"lineNumber":134,"author":{"gitId":"zenlyj"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":135,"author":{"gitId":"zenlyj"},"content":"            throw new DukeArgumentException(\"Please enter a numerical value for the task index!\");"},{"lineNumber":136,"author":{"gitId":"zenlyj"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":137,"author":{"gitId":"zenlyj"},"content":"            if (split.length \u003d\u003d 1) {"},{"lineNumber":138,"author":{"gitId":"zenlyj"},"content":"                throw new DukeArgumentException(\"You have not entered a task index!\");"},{"lineNumber":139,"author":{"gitId":"zenlyj"},"content":"            } else {"},{"lineNumber":140,"author":{"gitId":"zenlyj"},"content":"                throw new DukeArgumentException(\"Please enter a valid task index!\");"},{"lineNumber":141,"author":{"gitId":"zenlyj"},"content":"            }"},{"lineNumber":142,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":144}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"import java.util.ListIterator;"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":" * Class representing A List of Tasks."},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"public class TaskList {"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"    private List\u003cTask\u003e tasks;"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"    private Ui ui;"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"     * Constructor for TaskList."},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"     * Constructs an empty TaskList."},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"    public TaskList() {"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"     * Constructor for TaskList."},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"     * Constructs a TaskList with existing tasks specified in the method parameter."},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"     * @param tasks List of tasks."},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"    public TaskList(List\u003cTask\u003e tasks) {"},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"     * Returns an iterator for the list of tasks."},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"     * @return A task list iterator."},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"    public ListIterator\u003cTask\u003e getIterator() {"},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"        return this.tasks.listIterator();"},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":45,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"zenlyj"},"content":"     * Retrieves a task from the list of tasks."},{"lineNumber":47,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"zenlyj"},"content":"     * @param taskIndex The index of the task to be retrieved."},{"lineNumber":49,"author":{"gitId":"zenlyj"},"content":"     * @return A task from the list of tasks."},{"lineNumber":50,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"zenlyj"},"content":"    public Task getTask(int taskIndex) {"},{"lineNumber":52,"author":{"gitId":"zenlyj"},"content":"        return tasks.get(taskIndex);"},{"lineNumber":53,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":55,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"zenlyj"},"content":"     * Gets the size of TaskList."},{"lineNumber":57,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"zenlyj"},"content":"     * @return An integer representing the number of tasks in the list."},{"lineNumber":59,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"zenlyj"},"content":"    public int getSize() {"},{"lineNumber":61,"author":{"gitId":"zenlyj"},"content":"        return this.tasks.size();"},{"lineNumber":62,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":64,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"zenlyj"},"content":"     * Adds task to the list."},{"lineNumber":66,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"zenlyj"},"content":"     * @param task The task to be added to the list of tasks."},{"lineNumber":68,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":70,"author":{"gitId":"zenlyj"},"content":"    public void addTask(Task task) {"},{"lineNumber":71,"author":{"gitId":"zenlyj"},"content":"        tasks.add(task);"},{"lineNumber":72,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":74,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"zenlyj"},"content":"     * Removes task from the list."},{"lineNumber":76,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"zenlyj"},"content":"     * @param taskIndex The index of the task to be removed."},{"lineNumber":78,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":80,"author":{"gitId":"zenlyj"},"content":"    public Task deleteTask(int taskIndex) {"},{"lineNumber":81,"author":{"gitId":"zenlyj"},"content":"        Task toRemove \u003d tasks.get(taskIndex);"},{"lineNumber":82,"author":{"gitId":"zenlyj"},"content":"        toRemove.setNotDone();"},{"lineNumber":83,"author":{"gitId":"zenlyj"},"content":"        tasks.remove(taskIndex);"},{"lineNumber":84,"author":{"gitId":"zenlyj"},"content":"        return toRemove;"},{"lineNumber":85,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":86}},{"path":"src/main/java/duke/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import duke.task.Event;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"import duke.task.ToDo;"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"import java.io.File;"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"import java.io.FileWriter;"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"import java.time.LocalDateTime;"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"import java.util.List;"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"import java.util.ListIterator;"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"import java.util.Scanner;"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":" * Class representing a storage for the user\u0027s tasks."},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"public class TaskStorage {"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"    private File file;"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"    private Ui ui;"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"     * Constructor for TaskStorage."},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"     * @param path Path of the file to read from or write to."},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"    public TaskStorage(String path) {"},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"            ui \u003d new Ui();"},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"            file \u003d new File(path);"},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"            file.getParentFile().mkdirs();"},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"            file.createNewFile();"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"        } catch (Exception e) {"},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"            ui.print(e.getMessage());"},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"     * Writes data of existing tasks to a file."},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":"     * @param tasks Existing user\u0027s tasks."},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"zenlyj"},"content":"    public void storeData(TaskList tasks) {"},{"lineNumber":46,"author":{"gitId":"zenlyj"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"zenlyj"},"content":"            FileWriter writer \u003d new FileWriter(file);"},{"lineNumber":48,"author":{"gitId":"zenlyj"},"content":"            ListIterator\u003cTask\u003e iterator \u003d tasks.getIterator();"},{"lineNumber":49,"author":{"gitId":"zenlyj"},"content":"            Task task;"},{"lineNumber":50,"author":{"gitId":"zenlyj"},"content":"            while (iterator.hasNext()) {"},{"lineNumber":51,"author":{"gitId":"zenlyj"},"content":"                task \u003d iterator.next();"},{"lineNumber":52,"author":{"gitId":"zenlyj"},"content":"                char taskType \u003d task.toString().charAt(1);"},{"lineNumber":53,"author":{"gitId":"zenlyj"},"content":"                int done \u003d task.isDone() ? 1 : 0;"},{"lineNumber":54,"author":{"gitId":"zenlyj"},"content":"                String description \u003d task.getDescription();"},{"lineNumber":55,"author":{"gitId":"zenlyj"},"content":"                String details \u003d \"\";"},{"lineNumber":56,"author":{"gitId":"zenlyj"},"content":"                switch (taskType) {"},{"lineNumber":57,"author":{"gitId":"zenlyj"},"content":"                case \u0027D\u0027:"},{"lineNumber":58,"author":{"gitId":"zenlyj"},"content":"                    Deadline deadline \u003d (Deadline) task;"},{"lineNumber":59,"author":{"gitId":"zenlyj"},"content":"                    details \u003d deadline.getDateTime();"},{"lineNumber":60,"author":{"gitId":"zenlyj"},"content":"                    break;"},{"lineNumber":61,"author":{"gitId":"zenlyj"},"content":"                case \u0027E\u0027:"},{"lineNumber":62,"author":{"gitId":"zenlyj"},"content":"                    Event event \u003d (Event) task;"},{"lineNumber":63,"author":{"gitId":"zenlyj"},"content":"                    details \u003d event.getDateTime();"},{"lineNumber":64,"author":{"gitId":"zenlyj"},"content":"                    break;"},{"lineNumber":65,"author":{"gitId":"zenlyj"},"content":"                default:"},{"lineNumber":66,"author":{"gitId":"zenlyj"},"content":"                }"},{"lineNumber":67,"author":{"gitId":"zenlyj"},"content":"                writer.write(taskType + \" | \" + done + \" | \" +  description +"},{"lineNumber":68,"author":{"gitId":"zenlyj"},"content":"                        (details.isBlank() ? \"\" : \" | \" + details));"},{"lineNumber":69,"author":{"gitId":"zenlyj"},"content":"                writer.write(System.lineSeparator());"},{"lineNumber":70,"author":{"gitId":"zenlyj"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"zenlyj"},"content":"            writer.close();"},{"lineNumber":72,"author":{"gitId":"zenlyj"},"content":"        } catch (Exception e) {"},{"lineNumber":73,"author":{"gitId":"zenlyj"},"content":"            ui.print(e.getMessage());"},{"lineNumber":74,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":77,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"zenlyj"},"content":"     * Retrieve data of tasks from file and construct a list of tasks previously added by the user."},{"lineNumber":79,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":80,"author":{"gitId":"zenlyj"},"content":"     * @return A list of tasks retrieved from the storage."},{"lineNumber":81,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"zenlyj"},"content":"    public TaskList retrieveData() {"},{"lineNumber":83,"author":{"gitId":"zenlyj"},"content":"        List\u003cTask\u003e retrievedTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":84,"author":{"gitId":"zenlyj"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":85,"author":{"gitId":"zenlyj"},"content":"        try {"},{"lineNumber":86,"author":{"gitId":"zenlyj"},"content":"            Scanner sc \u003d new Scanner(file);"},{"lineNumber":87,"author":{"gitId":"zenlyj"},"content":"            while (sc.hasNext()) {"},{"lineNumber":88,"author":{"gitId":"zenlyj"},"content":"                String line \u003d sc.nextLine();"},{"lineNumber":89,"author":{"gitId":"zenlyj"},"content":"                String[] taskInfo \u003d line.split(\" \\\\| \");"},{"lineNumber":90,"author":{"gitId":"zenlyj"},"content":"                String taskType \u003d taskInfo[0];"},{"lineNumber":91,"author":{"gitId":"zenlyj"},"content":"                String isDone \u003d taskInfo[1];"},{"lineNumber":92,"author":{"gitId":"zenlyj"},"content":"                String description \u003d taskInfo[2];"},{"lineNumber":93,"author":{"gitId":"zenlyj"},"content":"                switch (taskType) {"},{"lineNumber":94,"author":{"gitId":"zenlyj"},"content":"                case \"T\":"},{"lineNumber":95,"author":{"gitId":"zenlyj"},"content":"                    retrievedTasks.add(new ToDo(description, isDone));"},{"lineNumber":96,"author":{"gitId":"zenlyj"},"content":"                    break;"},{"lineNumber":97,"author":{"gitId":"zenlyj"},"content":"                case \"D\":"},{"lineNumber":98,"author":{"gitId":"zenlyj"},"content":"                    String deadlineDetails \u003d taskInfo[3];"},{"lineNumber":99,"author":{"gitId":"zenlyj"},"content":"                    LocalDateTime deadline \u003d LocalDateTime.parse(deadlineDetails, formatter);"},{"lineNumber":100,"author":{"gitId":"zenlyj"},"content":"                    retrievedTasks.add(new Deadline(description, isDone, deadline));"},{"lineNumber":101,"author":{"gitId":"zenlyj"},"content":"                    break;"},{"lineNumber":102,"author":{"gitId":"zenlyj"},"content":"                case \"E\":"},{"lineNumber":103,"author":{"gitId":"zenlyj"},"content":"                    String eventDetails \u003d taskInfo[3];"},{"lineNumber":104,"author":{"gitId":"zenlyj"},"content":"                    LocalDateTime eventTime \u003d LocalDateTime.parse(eventDetails, formatter);"},{"lineNumber":105,"author":{"gitId":"zenlyj"},"content":"                    retrievedTasks.add(new Event(description, isDone, eventTime));"},{"lineNumber":106,"author":{"gitId":"zenlyj"},"content":"                    break;"},{"lineNumber":107,"author":{"gitId":"zenlyj"},"content":"                default:"},{"lineNumber":108,"author":{"gitId":"zenlyj"},"content":"                }"},{"lineNumber":109,"author":{"gitId":"zenlyj"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"zenlyj"},"content":"        } catch (Exception e){"},{"lineNumber":111,"author":{"gitId":"zenlyj"},"content":"            ui.print(e.getMessage());"},{"lineNumber":112,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":113,"author":{"gitId":"zenlyj"},"content":"        return new TaskList(retrievedTasks);"},{"lineNumber":114,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":115}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import java.util.ListIterator;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":" * Class containing methods that interacts with the user."},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"public class Ui {"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"    private Scanner sc;"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"     * Constructor of Ui."},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"    public Ui() {"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"        this.sc \u003d new Scanner(System.in);"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"     * Reads a line of user input and returns it."},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"     * @return String of user input."},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"    public String readInput() {"},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"        return sc.nextLine();"},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"     * Formats and prints message to user."},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"     * @param message Message to be printed."},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"    public void print(String message) {"},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"        System.out.println(\"\\t____________________________________________________________\");"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"        System.out.println(\"\\n\\t  \" + message);"},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"        System.out.println(\"\\n\\t____________________________________________________________\\n\");"},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":"     * Formats and prints all tasks."},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":"     * "},{"lineNumber":45,"author":{"gitId":"zenlyj"},"content":"     * @param tasks A list of user\u0027s tasks."},{"lineNumber":46,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":48,"author":{"gitId":"zenlyj"},"content":"    public void print(TaskList tasks) {"},{"lineNumber":49,"author":{"gitId":"zenlyj"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\");"},{"lineNumber":50,"author":{"gitId":"zenlyj"},"content":"        System.out.println(\"\\t  Your tasks:\");"},{"lineNumber":51,"author":{"gitId":"zenlyj"},"content":"        int listCounter \u003d 1;"},{"lineNumber":52,"author":{"gitId":"zenlyj"},"content":"        ListIterator\u003cTask\u003e iterator \u003d tasks.getIterator();"},{"lineNumber":53,"author":{"gitId":"zenlyj"},"content":"        Task task;"},{"lineNumber":54,"author":{"gitId":"zenlyj"},"content":"        while (iterator.hasNext()) {"},{"lineNumber":55,"author":{"gitId":"zenlyj"},"content":"            task \u003d iterator.next();"},{"lineNumber":56,"author":{"gitId":"zenlyj"},"content":"            System.out.println(\"  \\t  \" + listCounter + \".\" + task);"},{"lineNumber":57,"author":{"gitId":"zenlyj"},"content":"            listCounter++;"},{"lineNumber":58,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"zenlyj"},"content":"        System.out.println(\"\\n\\t____________________________________________________________\\n\");"},{"lineNumber":60,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":61}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import duke.TaskStorage;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"import duke.TaskList;"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":" * Class representing an Add command in Duke."},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"public class AddCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"    private Task toAdd;"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"     * Constructor of AddCommand."},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"     * @param toAdd The task to be added to the list of tasks."},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"    public AddCommand(Task toAdd) {"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"        this.toAdd \u003d toAdd;"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"     * Executes the add command."},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"     * Adds new task to existing list of tasks."},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"     * Updates the task storage of new task."},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"     * Prompts the user that the task has been added and show the total number of tasks."},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"     * @param tasks List of tasks."},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"     * @param ui Formats message and prints it to user."},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"     * @param storage Updates tasks.txt of the new task."},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"     * @return true."},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"    public boolean execute(TaskList tasks, Ui ui, TaskStorage storage) {"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"        tasks.addTask(toAdd);"},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"        storage.storeData(tasks);"},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"        ui.print(\"Got it. I\u0027ve added this task:\\n\\t\\t\" + toAdd +"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"                \"\\n\\n\\t  You have \" +"},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"                tasks.getSize() + (tasks.getSize() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in your list\");"},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"        return true;"},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":42}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import duke.TaskList;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import duke.TaskStorage;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":" * Class representing a Command."},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"public abstract class Command {"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"     * Executes the command."},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"     * @param tasks List of tasks."},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"     * @param ui Formats and prints message to user."},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"     * @param storage Updates the tasks.txt file after executing commands modifying TaskList/tasks."},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"     * @return false if exit command is executed, true otherwise."},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"    public abstract boolean execute(TaskList tasks, Ui ui, TaskStorage storage);"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":20}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import duke.TaskList;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import duke.TaskStorage;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":" * Class representing a Delete Command."},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"    private int indexToDelete;"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"     * Constructor of DeleteCommand."},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"     * @param indexToDelete The index of the task to be deleted."},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"    public DeleteCommand(int indexToDelete) {"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"        this.indexToDelete \u003d indexToDelete;"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"     * Executes the delete command."},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"     * Removes task from list of tasks."},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"     * Updates the task storage."},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"     * Prompts the user that the task has been removed and show the total number of tasks."},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"     * @param tasks List of tasks."},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"     * @param ui Formats and prints message to user."},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"     * @param storage Updates tasks.txt of the removed task."},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"     * @return true."},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"    public boolean execute(TaskList tasks, Ui ui, TaskStorage storage) {"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"        Task removedTask \u003d tasks.deleteTask(indexToDelete);"},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"        storage.storeData(tasks);"},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"        ui.print(\"I\u0027ve removed this task:\\n\\t\\t\" + removedTask +"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"                \"\\n\\n\\t  You have \" +"},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"                tasks.getSize() + (tasks.getSize() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in your list\");"},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"        return true;"},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":42}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import duke.TaskList;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import duke.TaskStorage;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":" * Class representing a Done Command."},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"public class DoneCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"    private int completedTaskIdx;"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"     * Constructor for DoneCommand."},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"     * @param completedTaskIdx The index of the completed task."},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"    public DoneCommand(int completedTaskIdx) {"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"        this.completedTaskIdx \u003d completedTaskIdx;"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"     * Executes the done command."},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"     * Marks the task as done."},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"     * Updates the task storage."},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"     * Prompts the user that the task has been marked done."},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"     * @param tasks List of tasks."},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"     * @param ui Formats and prints message to user."},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"     * @param storage Updates tasks.txt of the completed task."},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"     * @return true."},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"    public boolean execute(TaskList tasks, Ui ui, TaskStorage storage) {"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"        Task completedTask \u003d tasks.getTask(completedTaskIdx);"},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"        completedTask.setDone();"},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"        storage.storeData(tasks);"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"        ui.print(\"Nice! I have marked this task as done:\\n\\t\\t \" + completedTask);"},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"        return true;"},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":41}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import duke.TaskList;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import duke.TaskStorage;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":" * Class representing an Exit Command."},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"public class ExitCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"     * Executes the exit command."},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"     * @param tasks List of tasks."},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"     * @param ui Formats and prints message to user."},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"     * @param storage"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"     * @return false."},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"    public boolean execute(TaskList tasks, Ui ui, TaskStorage storage) {"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"        ui.print(\"Goodbye. See you later!\");"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"        return false;"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":23}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import duke.TaskList;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import duke.TaskStorage;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":" * Class representing the Find Command."},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"public class FindCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"    private String keyword;"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"     * Constructor of FindCommand class."},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"     * @param keyword The keyword entered by the user."},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"    public FindCommand(String keyword) {"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"     * Executes the Find command."},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"     * Searches through all tasks and checks whether task descriptions contain the keyword."},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"     * If task description contains the keyword, corresponding task is printed."},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"     * @param tasks List of tasks."},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"     * @param ui Formats and prints the list of matching tasks to user."},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"     * @param storage"},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"     * @return true."},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"    public boolean execute(TaskList tasks, Ui ui, TaskStorage storage) {"},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"        List\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"        TaskList allTasks \u003d storage.retrieveData();"},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"        for (int i \u003d 0; i \u003c allTasks.getSize(); i++) {"},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"            Task task \u003d allTasks.getTask(i);"},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"            String description \u003d task.getDescription();"},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"            if (description.contains(keyword)) {"},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":"                temp.add(task);"},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"zenlyj"},"content":"        if (temp.isEmpty()) {"},{"lineNumber":47,"author":{"gitId":"zenlyj"},"content":"            ui.print(\"There are no tasks with such keyword!\");"},{"lineNumber":48,"author":{"gitId":"zenlyj"},"content":"        } else {"},{"lineNumber":49,"author":{"gitId":"zenlyj"},"content":"            TaskList matchingTasks \u003d new TaskList(temp);"},{"lineNumber":50,"author":{"gitId":"zenlyj"},"content":"            ui.print(matchingTasks);"},{"lineNumber":51,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"zenlyj"},"content":"        return true;"},{"lineNumber":53,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":54}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import duke.TaskList;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import duke.TaskStorage;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":" * Class representing an Invalid Command."},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"public class InvalidCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"     * Prompts user of invalid command."},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"     * @param tasks"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"     * @param ui Formats and prints message to user."},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"     * @param storage"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"     * @return true."},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"    public boolean execute(TaskList tasks, Ui ui, TaskStorage storage) {"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"        ui.print(\"Invalid command!\");"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"        return true;"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":23}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import duke.TaskList;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import duke.TaskStorage;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":" * Class representing a List Command."},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"public class ListCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"     * Executes the List command."},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"     * Shows all the tasks to user."},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"     * @param tasks List of tasks."},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"     * @param ui Formats and prints tasks to user."},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"     * @param storage"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"     * @return true."},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"    public boolean execute(TaskList tasks, Ui ui, TaskStorage storage) {"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"        ui.print(tasks);"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"        return true;"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":24}},{"path":"src/main/java/duke/exception/DukeArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":" * Class representing an Invalid Argument Exception in Duke, sub-class of DukeException."},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"public class DukeArgumentException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"     * Constructor of DukeArgumentException."},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"     * @param errorMsg Error Message prompting user of invalid argument."},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"    public DukeArgumentException(String errorMsg) {"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"        super(errorMsg);"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":15}},{"path":"src/main/java/duke/exception/DukeDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":" * Class representing Date Time Exception in Duke, sub-class of DukeException."},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"public class DukeDateTimeException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"     * Constructor of DukeDateTimeException."},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"     * @param errorMsg Error message prompting user of invalid date/time."},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"    public DukeDateTimeException(String errorMsg) {"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"        super(errorMsg);"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":15}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":" * Class representing Exceptions in Duke."},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"     * Constructor of DukeException."},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"     * @param errorMsg Error message to prompt user of error."},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"    protected DukeException(String errorMsg) {"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"        super(errorMsg);"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":17}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import java.time.Month;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":" * Class representing a Deadline, a sub-class of Task."},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"public class Deadline extends Task {"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"    private final LocalDateTime deadline;"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"     * Constructor of the Deadline class."},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"     * @param description A brief description of the Deadline."},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"     * @param deadline Date and Time of the Deadline."},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"    public Deadline(String description, LocalDateTime deadline) {"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"        super(description, \"0\");"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"     * Constructor of the Deadline class."},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"     * @param description A brief description of the deadline."},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"     * @param isDone \"0\" if task is not done. \"1\" if task is done."},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"    public Deadline(String description, String isDone, LocalDateTime deadline) {"},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"        super(description, isDone);"},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"     * Returns the Date and Time of the Deadline."},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"     * @return A String representing the deadline in the following format: \"YYYY-MM-DD HHmm\"."},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"    public String getDateTime() {"},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":"        return deadline.toLocalDate().toString()"},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":"                + \" \" + deadline.toLocalTime().format(DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":45,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":47,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"zenlyj"},"content":"     * Returns a String representation of the Deadline to be displayed to the user."},{"lineNumber":49,"author":{"gitId":"zenlyj"},"content":"     * Shows the description, date and time of the Deadline, as well as whether it is done."},{"lineNumber":50,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"zenlyj"},"content":"     * @return A String representing the Deadline."},{"lineNumber":52,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"zenlyj"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"zenlyj"},"content":"    public String toString() {"},{"lineNumber":55,"author":{"gitId":"zenlyj"},"content":"        int dayOfMonth \u003d deadline.getDayOfMonth();"},{"lineNumber":56,"author":{"gitId":"zenlyj"},"content":"        Month month \u003d deadline.getMonth();"},{"lineNumber":57,"author":{"gitId":"zenlyj"},"content":"        int year \u003d deadline.getYear();"},{"lineNumber":58,"author":{"gitId":"zenlyj"},"content":"        LocalTime time \u003d deadline.toLocalTime();"},{"lineNumber":59,"author":{"gitId":"zenlyj"},"content":"        String twelveHrTime \u003d time.format(DateTimeFormatter.ofPattern(\"h:mm a\"));"},{"lineNumber":60,"author":{"gitId":"zenlyj"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + month.toString()"},{"lineNumber":61,"author":{"gitId":"zenlyj"},"content":"                + \" \" + dayOfMonth + \" \" + year + \" \" + twelveHrTime + \")\";"},{"lineNumber":62,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":63}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import java.time.Month;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":" * Class representing an Event, a sub-class of Task."},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"public class Event extends Task {"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"    private final LocalDateTime eventTime;"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"     * Constructor of the Event class."},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"     * @param description A brief description of the Event."},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"     * @param eventTime Date and Time of the Event."},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"    public Event(String description, LocalDateTime eventTime) {"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"        super(description, \"0\");"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"     * Constructor of the Event class."},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"     * @param description A brief description of the Event."},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"     * @param isDone \"0\" if the task is not done. \"1\" if the task is done."},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"     * @param eventTime Date and Time of the Event."},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"    public Event(String description, String isDone, LocalDateTime eventTime) {"},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"        super(description, isDone);"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"     * Returns the Date and Time of the Event."},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"     * @return A String representing the event date and time in the following format: \"YYYY-MM-DD HHmm\"."},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":"    public String getDateTime() {"},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":"        return eventTime.toLocalDate().toString()"},{"lineNumber":45,"author":{"gitId":"zenlyj"},"content":"                + \" \" + eventTime.toLocalTime().format(DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":46,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":48,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"zenlyj"},"content":"     * Returns a String representation of the Event to be displayed to the user."},{"lineNumber":50,"author":{"gitId":"zenlyj"},"content":"     * Shows the description, date and time of the Event, as well as whether it is done."},{"lineNumber":51,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"zenlyj"},"content":"     * @return A String representing the Event."},{"lineNumber":53,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"zenlyj"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"zenlyj"},"content":"    public String toString() {"},{"lineNumber":56,"author":{"gitId":"zenlyj"},"content":"        int dayOfMonth \u003d eventTime.getDayOfMonth();"},{"lineNumber":57,"author":{"gitId":"zenlyj"},"content":"        Month month \u003d eventTime.getMonth();"},{"lineNumber":58,"author":{"gitId":"zenlyj"},"content":"        int year \u003d eventTime.getYear();"},{"lineNumber":59,"author":{"gitId":"zenlyj"},"content":"        LocalTime time \u003d eventTime.toLocalTime();"},{"lineNumber":60,"author":{"gitId":"zenlyj"},"content":"        String twelveHrTime \u003d time.format(DateTimeFormatter.ofPattern(\"h:mm a\"));"},{"lineNumber":61,"author":{"gitId":"zenlyj"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + month.toString()"},{"lineNumber":62,"author":{"gitId":"zenlyj"},"content":"                + \" \" + dayOfMonth + \" \" + year + \" \" + twelveHrTime + \")\";"},{"lineNumber":63,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":64}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":" * Class representing a Task."},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"    protected String description;"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"     * Constructor of the Task class"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"     * @param description A brief description of the task."},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"     * @param isDone \"0\" if the task is done. \"1\" if the task is not done."},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"    protected Task(String description, String isDone) {"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"        this.description \u003d description;"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"        this.isDone \u003d isDone.equals(\"1\") ? true : false;"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"     * Displays whether a task is done."},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"     * @return A cross symbol if task is not done, a tick symbol if task is done."},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"    private String getStatusIcon() {"},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"     * Returns the description of the task."},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"     * @return A String describing the task."},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"    public String getDescription() {"},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"        return description;"},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":"     * Returns the status of the task, whether it is done or not."},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"zenlyj"},"content":"     * @return True if the task is done, false if task is not done."},{"lineNumber":46,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"zenlyj"},"content":"    public boolean isDone() {"},{"lineNumber":48,"author":{"gitId":"zenlyj"},"content":"        return isDone;"},{"lineNumber":49,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":51,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"zenlyj"},"content":"     * Updates the task as completed."},{"lineNumber":53,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":55,"author":{"gitId":"zenlyj"},"content":"    public void setDone() {"},{"lineNumber":56,"author":{"gitId":"zenlyj"},"content":"        this.isDone \u003d true;"},{"lineNumber":57,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":59,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"zenlyj"},"content":"     * Updates the task as incomplete."},{"lineNumber":61,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":63,"author":{"gitId":"zenlyj"},"content":"    public void setNotDone() {"},{"lineNumber":64,"author":{"gitId":"zenlyj"},"content":"        this.isDone \u003d false;"},{"lineNumber":65,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":67,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"zenlyj"},"content":"     * Returns the status and the description of the task."},{"lineNumber":69,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"zenlyj"},"content":"     * @return A tick/cross symbol and the description of the task."},{"lineNumber":71,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"zenlyj"},"content":"    @Override"},{"lineNumber":73,"author":{"gitId":"zenlyj"},"content":"    public String toString() {"},{"lineNumber":74,"author":{"gitId":"zenlyj"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;"},{"lineNumber":75,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":76}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":" * Class representing a ToDo task, a sub-class of Task."},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":" */"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"public class ToDo extends Task {"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"     * Constuctor of the ToDo class."},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"     * @param description A brief description of the ToDo task."},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"    public ToDo(String description) {"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"        super(description, \"0\");"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"     * Constructor of the ToDo class."},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"     * @param description A brief description of the ToDo task."},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"     * @param isDone \"0\" if the task is not done. \"1\" if the task is done."},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"    public ToDo(String description, String isDone) {"},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"        super(description, isDone);"},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"     * Returns a String representation of the ToDo task to be displayed to the user."},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"     * Shows the description of the task, as well as whether it is done."},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"     * @return A String representing the ToDo task."},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":38}},{"path":"src/main/java/test/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package test;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import duke.TaskList;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import duke.TaskStorage;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"import duke.command.AddCommand;"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"import duke.task.Task;"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"import duke.task.ToDo;"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"class AddCommandTest {"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"    void testAddCommand() {"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"        Task todo \u003d new ToDo(\"hello world!\");"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"        AddCommand add \u003d new AddCommand(todo);"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"        TaskList tasks \u003d new TaskList();"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"        add.execute(tasks, new Ui(), new TaskStorage(\"data/cmdTest.txt\"));"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"        assertEquals(tasks.getTask(0).toString(), todo.toString());"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":23}},{"path":"src/main/java/test/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"package test;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import duke.task.Deadline;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"class DeadlineTest {"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"    private static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"    void testDeadlineDescription() {"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"        assertEquals(new Deadline(\"math assignment\","},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"                LocalDateTime.parse(\"2020-11-27 2359\", formatter)).getDescription(),"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"                \"math assignment\""},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"        );"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"    void testDeadlineDone() {"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"        Deadline underTest \u003d new Deadline(\"physics experiment\","},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"                LocalDateTime.parse(\"2020-11-29 2359\", formatter));"},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"        underTest.setDone();"},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"        underTest.setNotDone();"},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"        assertEquals(underTest.isDone(), false);"},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"    @Test"},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"    void testDateTime() {"},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"        assertEquals(new Deadline(\"coding assignment\","},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"                LocalDateTime.parse(\"2020-12-02 1920\", formatter)).getDateTime(),"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"                \"2020-12-02 1920\""},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"        );"},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"todo math homework"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":"todo science homework"},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"hi there"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"list"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"deadline coding assignment /by 12.02.21"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"event sumobot contest /at 19.02.21 7pm"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"list"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"done 3"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"deadline biology experiment /by 12.03.21 5pm"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"todo laundry"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"list"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"done 2"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"done 4"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"list"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"go home"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"done 6"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"bye"}],"authorContributionMap":{"zenlyj":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"zenlyj":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/Duke.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"zenlyj":1,"-":37}}]
