[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":"    protected String by;"},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"     * Constructor of the Deadline class"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"     * @param description A brief description of the deadline."},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"     * @param by The time/date that the task must be completed by."},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"        this.by \u003d by;"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":19}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"    private static List\u003cTask\u003e list;"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"     * An application that serves as a to-do list."},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"     * Exit the program by entering \"bye\"."},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"        list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"        System.out.println(\"POWERED BY JARVIS\\n\");"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"        greet();"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"        String userInput \u003d \"\";"},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"        String[] parseInput;"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"        String command;"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"        while (!userInput.equals(\"bye\")) {"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":"            userInput \u003d sc.nextLine();"},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"            if (userInput.isBlank()) {"},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"                continue;"},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":"            parseInput \u003d userInput.split(\"\\\\s+\");"},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"            command \u003d parseInput[0];"},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"            switch (command) {"},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"                case \"list\":"},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":"                    print(list);"},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"                    break;"},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"                case \"todo\":"},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"                    handleToDo(userInput, parseInput);"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":"                    break;"},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"                case \"deadline\":"},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"                    handleDeadline(userInput, parseInput);"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"                    break;"},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":"                case \"event\":"},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"                    handleEvent(userInput, parseInput);"},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"                    break;"},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"                case \"done\":"},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":"                    handleDone(parseInput);"},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":"                    break;"},{"lineNumber":45,"author":{"gitId":"zenlyj"},"content":"                case \"delete\":"},{"lineNumber":46,"author":{"gitId":"zenlyj"},"content":"                    handleDelete(parseInput);"},{"lineNumber":47,"author":{"gitId":"zenlyj"},"content":"                    break;"},{"lineNumber":48,"author":{"gitId":"zenlyj"},"content":"                case \"bye\":"},{"lineNumber":49,"author":{"gitId":"zenlyj"},"content":"                    break;"},{"lineNumber":50,"author":{"gitId":"zenlyj"},"content":"                default:"},{"lineNumber":51,"author":{"gitId":"zenlyj"},"content":"                    handleInvalidCommand();"},{"lineNumber":52,"author":{"gitId":"zenlyj"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"zenlyj"},"content":"        exit();"},{"lineNumber":55,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":57,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"zenlyj"},"content":"     * Greet the user when he/she starts the application."},{"lineNumber":59,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":61,"author":{"gitId":"zenlyj"},"content":"    private static void greet() {"},{"lineNumber":62,"author":{"gitId":"zenlyj"},"content":"        print(\"Hello! I\u0027m Jarvis.\\n\\t  How may I help you?\");"},{"lineNumber":63,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":65,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"zenlyj"},"content":"     * Say goodbye to the user when he/she exits the application."},{"lineNumber":67,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":69,"author":{"gitId":"zenlyj"},"content":"    private static void exit() {"},{"lineNumber":70,"author":{"gitId":"zenlyj"},"content":"        print(\"Goodbye. See you later!\");"},{"lineNumber":71,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":73,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"zenlyj"},"content":"     * Handle user input when an invalid command is given."},{"lineNumber":75,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":77,"author":{"gitId":"zenlyj"},"content":"    private static void handleInvalidCommand() {"},{"lineNumber":78,"author":{"gitId":"zenlyj"},"content":"        try {"},{"lineNumber":79,"author":{"gitId":"zenlyj"},"content":"            throw new DukeInvalidCommandException(\"Invalid Command!\");"},{"lineNumber":80,"author":{"gitId":"zenlyj"},"content":"        } catch (DukeInvalidCommandException e) {"},{"lineNumber":81,"author":{"gitId":"zenlyj"},"content":"            print(e.getMessage());"},{"lineNumber":82,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":85,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"zenlyj"},"content":"     * Handle user input when user enters a \"todo\" command."},{"lineNumber":87,"author":{"gitId":"zenlyj"},"content":"     * @param userInput User\u0027s input."},{"lineNumber":88,"author":{"gitId":"zenlyj"},"content":"     * @param parseInput Parsed user\u0027s input."},{"lineNumber":89,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":91,"author":{"gitId":"zenlyj"},"content":"    private static void handleToDo(String userInput, String[] parseInput) {"},{"lineNumber":92,"author":{"gitId":"zenlyj"},"content":"        try {"},{"lineNumber":93,"author":{"gitId":"zenlyj"},"content":"            if (parseInput.length \u003d\u003d 1) {"},{"lineNumber":94,"author":{"gitId":"zenlyj"},"content":"                throw new DukeDescriptionException(\"You have not entered a description!\");"},{"lineNumber":95,"author":{"gitId":"zenlyj"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"zenlyj"},"content":"            String description \u003d userInput.substring(5);"},{"lineNumber":97,"author":{"gitId":"zenlyj"},"content":"            addTask(new ToDo(description));"},{"lineNumber":98,"author":{"gitId":"zenlyj"},"content":"        } catch (DukeDescriptionException e) {"},{"lineNumber":99,"author":{"gitId":"zenlyj"},"content":"            print(e.getMessage());"},{"lineNumber":100,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":103,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"zenlyj"},"content":"     * Handle user input when user enters a \"deadline\" command."},{"lineNumber":105,"author":{"gitId":"zenlyj"},"content":"     * @param userInput User\u0027s input."},{"lineNumber":106,"author":{"gitId":"zenlyj"},"content":"     * @param parseInput Parsed user\u0027s input."},{"lineNumber":107,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":109,"author":{"gitId":"zenlyj"},"content":"    private static void handleDeadline(String userInput, String[] parseInput) {"},{"lineNumber":110,"author":{"gitId":"zenlyj"},"content":"        try {"},{"lineNumber":111,"author":{"gitId":"zenlyj"},"content":"            if (parseInput.length \u003d\u003d 1) {"},{"lineNumber":112,"author":{"gitId":"zenlyj"},"content":"                throw new DukeDescriptionException(\"You have not entered a description!\");"},{"lineNumber":113,"author":{"gitId":"zenlyj"},"content":"            }"},{"lineNumber":114,"author":{"gitId":"zenlyj"},"content":"            String[] deadlineDetails \u003d userInput.substring(9).split(\" /by \");"},{"lineNumber":115,"author":{"gitId":"zenlyj"},"content":"            if (deadlineDetails.length \u003c 2 || deadlineDetails[1].isBlank()) {"},{"lineNumber":116,"author":{"gitId":"zenlyj"},"content":"                throw new DukeDeadlineException(\"You have not entered a deadline for this task!\");"},{"lineNumber":117,"author":{"gitId":"zenlyj"},"content":"            }"},{"lineNumber":118,"author":{"gitId":"zenlyj"},"content":"            addTask(new Deadline(deadlineDetails[0], deadlineDetails[1]));"},{"lineNumber":119,"author":{"gitId":"zenlyj"},"content":"        } catch (DukeDescriptionException e) {"},{"lineNumber":120,"author":{"gitId":"zenlyj"},"content":"            print(e.getMessage());"},{"lineNumber":121,"author":{"gitId":"zenlyj"},"content":"        } catch (DukeDeadlineException e) {"},{"lineNumber":122,"author":{"gitId":"zenlyj"},"content":"            print(e.getMessage());"},{"lineNumber":123,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":126,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":127,"author":{"gitId":"zenlyj"},"content":"     * Handle user input when user enters an \"event\" command."},{"lineNumber":128,"author":{"gitId":"zenlyj"},"content":"     * @param userInput User\u0027s input."},{"lineNumber":129,"author":{"gitId":"zenlyj"},"content":"     * @param parseInput Parsed user\u0027s input."},{"lineNumber":130,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":131,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":132,"author":{"gitId":"zenlyj"},"content":"    private static void handleEvent(String userInput, String[] parseInput) {"},{"lineNumber":133,"author":{"gitId":"zenlyj"},"content":"        try {"},{"lineNumber":134,"author":{"gitId":"zenlyj"},"content":"            if (parseInput.length \u003d\u003d 1) {"},{"lineNumber":135,"author":{"gitId":"zenlyj"},"content":"                throw new DukeDescriptionException(\"You have not entered a description!\");"},{"lineNumber":136,"author":{"gitId":"zenlyj"},"content":"            }"},{"lineNumber":137,"author":{"gitId":"zenlyj"},"content":"            String[] eventDetails \u003d userInput.substring(6).split(\" /at \");"},{"lineNumber":138,"author":{"gitId":"zenlyj"},"content":"            if (eventDetails.length \u003c 2 || eventDetails[1].isBlank()) {"},{"lineNumber":139,"author":{"gitId":"zenlyj"},"content":"                throw new DukeEventException(\"You have not entered the date/time for this event!\");"},{"lineNumber":140,"author":{"gitId":"zenlyj"},"content":"            }"},{"lineNumber":141,"author":{"gitId":"zenlyj"},"content":"            addTask(new Event(eventDetails[0], eventDetails[1]));"},{"lineNumber":142,"author":{"gitId":"zenlyj"},"content":"        } catch (DukeDescriptionException e) {"},{"lineNumber":143,"author":{"gitId":"zenlyj"},"content":"            print(e.getMessage());"},{"lineNumber":144,"author":{"gitId":"zenlyj"},"content":"        } catch (DukeEventException e) {"},{"lineNumber":145,"author":{"gitId":"zenlyj"},"content":"            print(e.getMessage());"},{"lineNumber":146,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":149,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":150,"author":{"gitId":"zenlyj"},"content":"     * Handle user input when user enters a \"done\" command."},{"lineNumber":151,"author":{"gitId":"zenlyj"},"content":"     * @param parseInput Parsed user\u0027s input."},{"lineNumber":152,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":153,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":154,"author":{"gitId":"zenlyj"},"content":"    private static void handleDone(String[] parseInput) {"},{"lineNumber":155,"author":{"gitId":"zenlyj"},"content":"        try {"},{"lineNumber":156,"author":{"gitId":"zenlyj"},"content":"            if (parseInput.length \u003e 2) {"},{"lineNumber":157,"author":{"gitId":"zenlyj"},"content":"                throw new NumberFormatException();"},{"lineNumber":158,"author":{"gitId":"zenlyj"},"content":"            }"},{"lineNumber":159,"author":{"gitId":"zenlyj"},"content":"            int taskIndex \u003d Integer.parseInt(parseInput[1])-1;"},{"lineNumber":160,"author":{"gitId":"zenlyj"},"content":"            markTaskAsDone(list.get(taskIndex));"},{"lineNumber":161,"author":{"gitId":"zenlyj"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":162,"author":{"gitId":"zenlyj"},"content":"            print(\"Please enter a numerical value as the list index!\");"},{"lineNumber":163,"author":{"gitId":"zenlyj"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":164,"author":{"gitId":"zenlyj"},"content":"            if (parseInput.length \u003d\u003d 1) {"},{"lineNumber":165,"author":{"gitId":"zenlyj"},"content":"                print(\"You have not entered a list index!\");"},{"lineNumber":166,"author":{"gitId":"zenlyj"},"content":"            } else {"},{"lineNumber":167,"author":{"gitId":"zenlyj"},"content":"                print(\"Please enter a valid list index!\");"},{"lineNumber":168,"author":{"gitId":"zenlyj"},"content":"            }"},{"lineNumber":169,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":170,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":172,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":173,"author":{"gitId":"zenlyj"},"content":"     * Handle user input when user enters a \"delete\" command."},{"lineNumber":174,"author":{"gitId":"zenlyj"},"content":"     * @param parseInput Parsed user\u0027s input."},{"lineNumber":175,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":176,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":177,"author":{"gitId":"zenlyj"},"content":"    private static void handleDelete(String[] parseInput) {"},{"lineNumber":178,"author":{"gitId":"zenlyj"},"content":"        try {"},{"lineNumber":179,"author":{"gitId":"zenlyj"},"content":"            if (parseInput.length \u003e 2) {"},{"lineNumber":180,"author":{"gitId":"zenlyj"},"content":"                throw new NumberFormatException();"},{"lineNumber":181,"author":{"gitId":"zenlyj"},"content":"            }"},{"lineNumber":182,"author":{"gitId":"zenlyj"},"content":"            int taskIndex \u003d Integer.parseInt(parseInput[1])-1;"},{"lineNumber":183,"author":{"gitId":"zenlyj"},"content":"            deleteTask(taskIndex);"},{"lineNumber":184,"author":{"gitId":"zenlyj"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":185,"author":{"gitId":"zenlyj"},"content":"            print(\"Please enter a numerical value as the list index!\");"},{"lineNumber":186,"author":{"gitId":"zenlyj"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":187,"author":{"gitId":"zenlyj"},"content":"            if (parseInput.length \u003d\u003d 1) {"},{"lineNumber":188,"author":{"gitId":"zenlyj"},"content":"                print(\"You have not entered a list index!\");"},{"lineNumber":189,"author":{"gitId":"zenlyj"},"content":"            } else {"},{"lineNumber":190,"author":{"gitId":"zenlyj"},"content":"                print(\"Please enter a valid list index!\");"},{"lineNumber":191,"author":{"gitId":"zenlyj"},"content":"            }"},{"lineNumber":192,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":193,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":195,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":196,"author":{"gitId":"zenlyj"},"content":"     * Add task to the list."},{"lineNumber":197,"author":{"gitId":"zenlyj"},"content":"     * @param task Task entered by the user."},{"lineNumber":198,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":199,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":200,"author":{"gitId":"zenlyj"},"content":"    private static void addTask(Task task) {"},{"lineNumber":201,"author":{"gitId":"zenlyj"},"content":"        list.add(task);"},{"lineNumber":202,"author":{"gitId":"zenlyj"},"content":"        print(\"Got it. I\u0027ve added this task:\\n\\t\\t\" + task +"},{"lineNumber":203,"author":{"gitId":"zenlyj"},"content":"                \"\\n\\n\\t  You have \" +"},{"lineNumber":204,"author":{"gitId":"zenlyj"},"content":"                list.size() + (list.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in your list\");"},{"lineNumber":205,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":206,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":207,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":208,"author":{"gitId":"zenlyj"},"content":"     * Remove task from the list."},{"lineNumber":209,"author":{"gitId":"zenlyj"},"content":"     * @param taskIndex The index of the task to remove."},{"lineNumber":210,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":211,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":212,"author":{"gitId":"zenlyj"},"content":"    private static void deleteTask(int taskIndex) {"},{"lineNumber":213,"author":{"gitId":"zenlyj"},"content":"        Task toRemove \u003d list.get(taskIndex);"},{"lineNumber":214,"author":{"gitId":"zenlyj"},"content":"        toRemove.markIncomplete();"},{"lineNumber":215,"author":{"gitId":"zenlyj"},"content":"        list.remove(taskIndex);"},{"lineNumber":216,"author":{"gitId":"zenlyj"},"content":"        print(\"I\u0027ve removed this task:\\n\\t\\t\" + toRemove +"},{"lineNumber":217,"author":{"gitId":"zenlyj"},"content":"                \"\\n\\n\\t  You have \" +"},{"lineNumber":218,"author":{"gitId":"zenlyj"},"content":"                list.size() + (list.size() \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in your list\");"},{"lineNumber":219,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":220,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":221,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":222,"author":{"gitId":"zenlyj"},"content":"     * Mark task as completed."},{"lineNumber":223,"author":{"gitId":"zenlyj"},"content":"     * @param task Task entered by the user."},{"lineNumber":224,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":225,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":226,"author":{"gitId":"zenlyj"},"content":"    private static void markTaskAsDone(Task task) {"},{"lineNumber":227,"author":{"gitId":"zenlyj"},"content":"        task.markDone();"},{"lineNumber":228,"author":{"gitId":"zenlyj"},"content":"        print(\"Nice! I have marked this task as done:\\n\\t\\t \" + task);"},{"lineNumber":229,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":230,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":231,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":232,"author":{"gitId":"zenlyj"},"content":"     * Print message to user."},{"lineNumber":233,"author":{"gitId":"zenlyj"},"content":"     * @param message Welcome/Goodbye message or a description of the task added."},{"lineNumber":234,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":235,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":236,"author":{"gitId":"zenlyj"},"content":"    private static void print(String message) {"},{"lineNumber":237,"author":{"gitId":"zenlyj"},"content":"        System.out.println(\"\\t____________________________________________________________\");"},{"lineNumber":238,"author":{"gitId":"zenlyj"},"content":"        System.out.println(\"\\n\\t  \" + message);"},{"lineNumber":239,"author":{"gitId":"zenlyj"},"content":"        System.out.println(\"\\n\\t____________________________________________________________\\n\");"},{"lineNumber":240,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":241,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":242,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":243,"author":{"gitId":"zenlyj"},"content":"     * Print all tasks."},{"lineNumber":244,"author":{"gitId":"zenlyj"},"content":"     * @param list A list of tasks entered by the user."},{"lineNumber":245,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":246,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":247,"author":{"gitId":"zenlyj"},"content":"    private static void print(List\u003cTask\u003e list) {"},{"lineNumber":248,"author":{"gitId":"zenlyj"},"content":"        System.out.println(\"\\t____________________________________________________________\\n\");"},{"lineNumber":249,"author":{"gitId":"zenlyj"},"content":"        System.out.println(\"\\t  Your tasks:\");"},{"lineNumber":250,"author":{"gitId":"zenlyj"},"content":"        int listCounter \u003d 1;"},{"lineNumber":251,"author":{"gitId":"zenlyj"},"content":"        for (Task task : list) {"},{"lineNumber":252,"author":{"gitId":"zenlyj"},"content":"            System.out.println(\"  \\t  \" + listCounter + \".\" + task);"},{"lineNumber":253,"author":{"gitId":"zenlyj"},"content":"            listCounter++;"},{"lineNumber":254,"author":{"gitId":"zenlyj"},"content":"        }"},{"lineNumber":255,"author":{"gitId":"zenlyj"},"content":"        System.out.println(\"\\n\\t____________________________________________________________\\n\");"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"zenlyj":253,"-":4}},{"path":"src/main/java/DukeDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"public class DukeDeadlineException extends DukeException {"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"     * Constructor for DukeDeadlineException."},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"     * @param errorMsg Error message to prompt user to enter a deadline for the task."},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"    public DukeDeadlineException(String errorMsg) {"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"        super(errorMsg);"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":11}},{"path":"src/main/java/DukeDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"public class DukeDescriptionException extends DukeException {"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"     * Constructor for DukeDescriptionException."},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"     * @param errorMsg Error message to prompt user to enter a description for the task."},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"    public DukeDescriptionException(String errorMsg) {"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"        super(errorMsg);"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":11}},{"path":"src/main/java/DukeEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"public class DukeEventException extends DukeException {"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"     * Constructor for DukeEventException."},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"     * @param errorMsg Error message to prompt user to enter a date/time for the event."},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"    public DukeEventException(String errorMsg) {"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"        super(errorMsg);"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":11}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"     * Constructor for DukeException."},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"     * @param errorMsg Error message to prompt user of error."},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"    protected DukeException(String errorMsg) {"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"        super(errorMsg);"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":11}},{"path":"src/main/java/DukeInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"public class DukeInvalidCommandException extends DukeException {"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"     * Constructor for DukeInvalidCommandException."},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"     * @param errorMsg Error message to prompt user to enter a valid command."},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"    public DukeInvalidCommandException(String errorMsg) {"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"        super(errorMsg);"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":"    protected String at;"},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"     * Constructor of the Event class."},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"     * @param description A brief description of the event."},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"     * @param at The date/time of the event."},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"    public Event(String description, String at) {"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"        this.at \u003d at;"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":19}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":"    protected String description;"},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"     * Constructor of the Task class."},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"     * @param description A brief description of the task."},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"    protected Task(String description) {"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"        this.description \u003d description;"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"        this.isDone \u003d false;"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"     * Display whether a task is completed."},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"     * @return A cross symbol if task is incomplete, a tick symbol if task is completed."},{"lineNumber":18,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":20,"author":{"gitId":"zenlyj"},"content":"    private String getStatusIcon() {"},{"lineNumber":21,"author":{"gitId":"zenlyj"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":22,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":24,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"zenlyj"},"content":"     * Update the task as completed."},{"lineNumber":26,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":28,"author":{"gitId":"zenlyj"},"content":"    public void markDone() {"},{"lineNumber":29,"author":{"gitId":"zenlyj"},"content":"        this.isDone \u003d true;"},{"lineNumber":30,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":32,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"zenlyj"},"content":"     * Update the task as incomplete."},{"lineNumber":34,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":36,"author":{"gitId":"zenlyj"},"content":"    public void markIncomplete() {"},{"lineNumber":37,"author":{"gitId":"zenlyj"},"content":"        this.isDone \u003d false;"},{"lineNumber":38,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":40,"author":{"gitId":"zenlyj"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"zenlyj"},"content":"    public String toString() {"},{"lineNumber":42,"author":{"gitId":"zenlyj"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;"},{"lineNumber":43,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":44}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"public class ToDo extends Task {"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"    /**"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"     * Constructor of the ToDo class"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"     * @param description A brief description of the ToDo task"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"    public ToDo(String description) {"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":""},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"}"}],"authorContributionMap":{"zenlyj":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"zenlyj"},"content":"todo math homework"},{"lineNumber":2,"author":{"gitId":"zenlyj"},"content":"todo science homework"},{"lineNumber":3,"author":{"gitId":"zenlyj"},"content":"hi there"},{"lineNumber":4,"author":{"gitId":"zenlyj"},"content":"list"},{"lineNumber":5,"author":{"gitId":"zenlyj"},"content":"deadline coding assignment /by 12.02.21"},{"lineNumber":6,"author":{"gitId":"zenlyj"},"content":"event sumobot contest /at 19.02.21 7pm"},{"lineNumber":7,"author":{"gitId":"zenlyj"},"content":"list"},{"lineNumber":8,"author":{"gitId":"zenlyj"},"content":"done 3"},{"lineNumber":9,"author":{"gitId":"zenlyj"},"content":"deadline biology experiment /by 12.03.21 5pm"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"todo laundry"},{"lineNumber":11,"author":{"gitId":"zenlyj"},"content":"list"},{"lineNumber":12,"author":{"gitId":"zenlyj"},"content":"done 2"},{"lineNumber":13,"author":{"gitId":"zenlyj"},"content":"done 4"},{"lineNumber":14,"author":{"gitId":"zenlyj"},"content":"list"},{"lineNumber":15,"author":{"gitId":"zenlyj"},"content":"go home"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"done 6"},{"lineNumber":17,"author":{"gitId":"zenlyj"},"content":"bye"}],"authorContributionMap":{"zenlyj":17}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"zenlyj"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"zenlyj":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"zenlyj"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"zenlyj":1,"-":37}}]
