[{"path":"src/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"D | 0 | return book | 2019-03-21 | 5pm"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":"E | 0 | returnhorse | 2017-02-01 | 3am"},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"T | 0 | DWEDWAEW"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"D | 0 | return book | 2019-03-21 | 5pm"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"E | 0 | returnhorse | 2017-02-01 | 3am"},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"T | 0 | DW"},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"T | 0 |  borrow book"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"D | 0 |  return book | 2019-03-21 |  5pm"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"E | 0 | returnhorse | 2017-02-01 |  3am"}],"authorContributionMap":{"figo2127":9}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"import duke.*;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"import java.nio.file.Path;"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"import java.util.*;"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"// potential exceptions to catch:"},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"// 1) deleting a non-existent task"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"// 2) marking a non-existent task as done"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"// 3) marking an already done task done again"},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"    private Storage storage;"},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"    private TaskList tasks;"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"    private Ui ui;"},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"    private Parser parser;"},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":"    private Scanner sc;"},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":"     * Creates a Duke object"},{"lineNumber":21,"author":{"gitId":"figo2127"},"content":"     * @param filePath path of local file"},{"lineNumber":22,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"figo2127"},"content":"    public Duke(Path filePath) {"},{"lineNumber":24,"author":{"gitId":"figo2127"},"content":"        ui \u003d new Ui();"},{"lineNumber":25,"author":{"gitId":"figo2127"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"figo2127"},"content":"            storage \u003d new Storage(filePath);"},{"lineNumber":27,"author":{"gitId":"figo2127"},"content":"            tasks \u003d new TaskList(storage.loadData());"},{"lineNumber":28,"author":{"gitId":"figo2127"},"content":"            parser \u003d new Parser(tasks);"},{"lineNumber":29,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"figo2127"},"content":"        catch (DukeException e) {"},{"lineNumber":31,"author":{"gitId":"figo2127"},"content":"            ui.showLoadingError();"},{"lineNumber":32,"author":{"gitId":"figo2127"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":33,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":36,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"figo2127"},"content":"     * Runs the Tasker program which allows user to interact with"},{"lineNumber":38,"author":{"gitId":"figo2127"},"content":"     * to organize the user\u0027s Tasks."},{"lineNumber":39,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"figo2127"},"content":"    public void run() {"},{"lineNumber":41,"author":{"gitId":"figo2127"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"figo2127"},"content":"            ui.greetUser();"},{"lineNumber":43,"author":{"gitId":"figo2127"},"content":"            ui.indicateReady();"},{"lineNumber":44,"author":{"gitId":"figo2127"},"content":"            sc \u003d new Scanner(System.in);"},{"lineNumber":45,"author":{"gitId":"figo2127"},"content":"            String input \u003d sc.nextLine();"},{"lineNumber":46,"author":{"gitId":"figo2127"},"content":"            String[] command \u003d input.split(\" \");"},{"lineNumber":47,"author":{"gitId":"figo2127"},"content":"            while (!input.equals(\"bye\")) {"},{"lineNumber":48,"author":{"gitId":"figo2127"},"content":"                parser.receive(command);"},{"lineNumber":49,"author":{"gitId":"figo2127"},"content":"                input \u003d sc.nextLine();"},{"lineNumber":50,"author":{"gitId":"figo2127"},"content":"                command \u003d input.split(\" \");"},{"lineNumber":51,"author":{"gitId":"figo2127"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"figo2127"},"content":"            storage.saveData(tasks.getTasks());"},{"lineNumber":53,"author":{"gitId":"figo2127"},"content":"            ui.sayGoodbye();"},{"lineNumber":54,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"figo2127"},"content":"        catch (DukeException e) {"},{"lineNumber":56,"author":{"gitId":"figo2127"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":57,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"figo2127"},"content":"        finally {"},{"lineNumber":59,"author":{"gitId":"figo2127"},"content":"            sc.close();"},{"lineNumber":60,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":63,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"figo2127"},"content":"     * Main Function"},{"lineNumber":65,"author":{"gitId":"figo2127"},"content":"     * @param args"},{"lineNumber":66,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":68,"author":{"gitId":"figo2127"},"content":"        Duke duke \u003d new Duke(Storage.saveFilePath);"},{"lineNumber":69,"author":{"gitId":"figo2127"},"content":"        duke.run();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}"},{"lineNumber":72,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":73,"author":{"gitId":"figo2127"},"content":""}],"authorContributionMap":{"figo2127":69,"-":4}},{"path":"src/main/java/duke/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"public class DeadlineTask extends Task {"},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"    private LocalDate byDate;"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"    private String time;"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"//    public DeadlineTask(String description, boolean isDone, LocalDate byDate) {"},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"//        super(description);"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":"//        super.isDone \u003d isDone;"},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"//        this.byDate \u003d byDate;"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"//        this.time \u003d null;"},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"//    }"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"    public DeadlineTask(String description, boolean isDone, LocalDate byDate, String time) {"},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"        super(description);"},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":"        super.isDone \u003d isDone;"},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":"        this.time \u003d time;"},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":"        this.byDate \u003d byDate;"},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":22,"author":{"gitId":"figo2127"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"figo2127"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"figo2127"},"content":"        if (this.byDate !\u003d null) {"},{"lineNumber":25,"author":{"gitId":"figo2127"},"content":"            return \"[D] \" + super.toString() + \" (by: \""},{"lineNumber":26,"author":{"gitId":"figo2127"},"content":"                    + this.byDate.format(DateTimeFormatter.ofPattern(\"yyyy/MM/dd\")) + \", time: \" + time + \")\";"},{"lineNumber":27,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"figo2127"},"content":"        //error prone line below"},{"lineNumber":29,"author":{"gitId":"figo2127"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + this.byDate + \" time: \" + time + \")\";"},{"lineNumber":30,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"figo2127"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"figo2127"},"content":"    public String getTaskDetails() {"},{"lineNumber":33,"author":{"gitId":"figo2127"},"content":"        String divider \u003d \" | \";"},{"lineNumber":34,"author":{"gitId":"figo2127"},"content":"        return \"D\" +  divider"},{"lineNumber":35,"author":{"gitId":"figo2127"},"content":"                + (isDone ? \"1\" : \"0\") + divider"},{"lineNumber":36,"author":{"gitId":"figo2127"},"content":"                + description + divider"},{"lineNumber":37,"author":{"gitId":"figo2127"},"content":"                + byDate + divider + time;"},{"lineNumber":38,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":39}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"     * Constructs a DukeException object."},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"     * @param e Error message"},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"    public DukeException(String e) {"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"        super(\"Oops! \" + e);"},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":12}},{"path":"src/main/java/duke/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"public class EventTask extends Task {"},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"    /** Date of event **/"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"    private LocalDate atDate;"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"    /** Time of event **/"},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"    private String time;"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"//    public EventTask(String description, boolean isDone, String at) {"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"//        super(description);"},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"//        super.isDone \u003d false;"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"//        this.at \u003d at;"},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"//        this.atDate \u003d null;"},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":"//    }"},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":"     * Constructs an EventTask object."},{"lineNumber":21,"author":{"gitId":"figo2127"},"content":"     * @param description Descriptions of the event"},{"lineNumber":22,"author":{"gitId":"figo2127"},"content":"     * @param isDone Boolean on whether the event is attended already"},{"lineNumber":23,"author":{"gitId":"figo2127"},"content":"     * @param atDate Date of event"},{"lineNumber":24,"author":{"gitId":"figo2127"},"content":"     * @param time Time of event"},{"lineNumber":25,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"figo2127"},"content":"    public EventTask(String description, boolean isDone, LocalDate atDate, String time) {"},{"lineNumber":27,"author":{"gitId":"figo2127"},"content":"        super(description);"},{"lineNumber":28,"author":{"gitId":"figo2127"},"content":"        super.isDone \u003d false;"},{"lineNumber":29,"author":{"gitId":"figo2127"},"content":"        this.atDate \u003d atDate;"},{"lineNumber":30,"author":{"gitId":"figo2127"},"content":"        this.time \u003d time;"},{"lineNumber":31,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":33,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"figo2127"},"content":"     * Returns a String that provides details of an EventTask"},{"lineNumber":35,"author":{"gitId":"figo2127"},"content":"     * with a unique header."},{"lineNumber":36,"author":{"gitId":"figo2127"},"content":"     * @return String"},{"lineNumber":37,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"figo2127"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"figo2127"},"content":"    public String toString() {"},{"lineNumber":40,"author":{"gitId":"figo2127"},"content":"        if (this.atDate !\u003d null) {"},{"lineNumber":41,"author":{"gitId":"figo2127"},"content":"            return \"[E] \" + super.toString() + \" (by: \""},{"lineNumber":42,"author":{"gitId":"figo2127"},"content":"                    + this.atDate.format(DateTimeFormatter.ofPattern(\"yyyy/MM/dd\")) + \", time: \" + time + \")\";"},{"lineNumber":43,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"figo2127"},"content":"        //error prone line below"},{"lineNumber":45,"author":{"gitId":"figo2127"},"content":"        return \"[E] \" + super.toString() + \" (by: \" + this.atDate + \")\";"},{"lineNumber":46,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":48,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"figo2127"},"content":"     * Returns a String that provides details of an EventTask."},{"lineNumber":50,"author":{"gitId":"figo2127"},"content":"     * @return String"},{"lineNumber":51,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"figo2127"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"figo2127"},"content":"    public String getTaskDetails() {"},{"lineNumber":54,"author":{"gitId":"figo2127"},"content":"        String divider \u003d \" | \";"},{"lineNumber":55,"author":{"gitId":"figo2127"},"content":"        return \"E\" +  divider"},{"lineNumber":56,"author":{"gitId":"figo2127"},"content":"                + (isDone ? \"1\" : \"0\") + divider"},{"lineNumber":57,"author":{"gitId":"figo2127"},"content":"                + description + divider"},{"lineNumber":58,"author":{"gitId":"figo2127"},"content":"                + atDate + divider + time;"},{"lineNumber":59,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":60}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"    private TaskList taskList;"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"    /** An ArrayList of Tasks obtained from TaskList **/"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":"    /** A collection of commands Tasker can execute **/"},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"    public enum Command {"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"        LIST,"},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"        DONE,"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"        DELETE,"},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"        TODO,"},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":"        DEADLINE,"},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":"        EVENT"},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":21,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"figo2127"},"content":"     * Constructs a Parser object."},{"lineNumber":23,"author":{"gitId":"figo2127"},"content":"     * @param taskList TaskList"},{"lineNumber":24,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"figo2127"},"content":"    public Parser(TaskList taskList) {"},{"lineNumber":26,"author":{"gitId":"figo2127"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":27,"author":{"gitId":"figo2127"},"content":"        this.tasks \u003d this.taskList.getTasks();"},{"lineNumber":28,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":30,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"figo2127"},"content":"     * Generates output in response to the user\u0027s command."},{"lineNumber":32,"author":{"gitId":"figo2127"},"content":"     * @param command Command in the form of a String array"},{"lineNumber":33,"author":{"gitId":"figo2127"},"content":"     * @throws DukeException If command could not be understood by Tasker."},{"lineNumber":34,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"figo2127"},"content":"    public void receive(String[] command) throws DukeException {"},{"lineNumber":36,"author":{"gitId":"figo2127"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"figo2127"},"content":"            String task \u003d command[0].toUpperCase();"},{"lineNumber":38,"author":{"gitId":"figo2127"},"content":"            Command c \u003d Command.valueOf(task);"},{"lineNumber":39,"author":{"gitId":"figo2127"},"content":"            switch (c) {"},{"lineNumber":40,"author":{"gitId":"figo2127"},"content":"            case LIST:"},{"lineNumber":41,"author":{"gitId":"figo2127"},"content":"                listTasks(tasks);"},{"lineNumber":42,"author":{"gitId":"figo2127"},"content":"                break;"},{"lineNumber":43,"author":{"gitId":"figo2127"},"content":"            case DONE:"},{"lineNumber":44,"author":{"gitId":"figo2127"},"content":"                int index \u003d Integer.parseInt(command[1]);"},{"lineNumber":45,"author":{"gitId":"figo2127"},"content":"                markTaskDone(tasks, index);"},{"lineNumber":46,"author":{"gitId":"figo2127"},"content":"                break;"},{"lineNumber":47,"author":{"gitId":"figo2127"},"content":"            case DELETE:"},{"lineNumber":48,"author":{"gitId":"figo2127"},"content":"                int i \u003d Integer.parseInt(command[1]);"},{"lineNumber":49,"author":{"gitId":"figo2127"},"content":"                deleteTask(tasks, i);"},{"lineNumber":50,"author":{"gitId":"figo2127"},"content":"                break;"},{"lineNumber":51,"author":{"gitId":"figo2127"},"content":"            case TODO:"},{"lineNumber":52,"author":{"gitId":"figo2127"},"content":"                createTodo(tasks, command);"},{"lineNumber":53,"author":{"gitId":"figo2127"},"content":"                break;"},{"lineNumber":54,"author":{"gitId":"figo2127"},"content":"            case DEADLINE:"},{"lineNumber":55,"author":{"gitId":"figo2127"},"content":"                createDeadline(tasks, command);"},{"lineNumber":56,"author":{"gitId":"figo2127"},"content":"                break;"},{"lineNumber":57,"author":{"gitId":"figo2127"},"content":"            case EVENT:"},{"lineNumber":58,"author":{"gitId":"figo2127"},"content":"                createEvent(tasks, command);"},{"lineNumber":59,"author":{"gitId":"figo2127"},"content":"                break;"},{"lineNumber":60,"author":{"gitId":"figo2127"},"content":"            default:"},{"lineNumber":61,"author":{"gitId":"figo2127"},"content":"                throw (new IllegalArgumentException());"},{"lineNumber":62,"author":{"gitId":"figo2127"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"figo2127"},"content":"        catch(IllegalArgumentException e) {"},{"lineNumber":65,"author":{"gitId":"figo2127"},"content":"            throw new DukeException(\"Please enter a legit command...\");"},{"lineNumber":66,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":69,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"figo2127"},"content":"     * Lists all the tasks in the TaskList."},{"lineNumber":71,"author":{"gitId":"figo2127"},"content":"     * @param tasks An ArrayList of Tasks"},{"lineNumber":72,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"figo2127"},"content":"    public static void listTasks(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":74,"author":{"gitId":"figo2127"},"content":"        System.out.println(\"----------------------------------------------\");"},{"lineNumber":75,"author":{"gitId":"figo2127"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":76,"author":{"gitId":"figo2127"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":77,"author":{"gitId":"figo2127"},"content":"            System.out.println((i + 1) + \". \" + tasks.get(i));"},{"lineNumber":78,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"figo2127"},"content":"        System.out.println(\"----------------------------------------------\");"},{"lineNumber":80,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":82,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"figo2127"},"content":"     * Marks a task in the TaskList as \"completed\"."},{"lineNumber":84,"author":{"gitId":"figo2127"},"content":"     * @param tasks An ArrayList of Tasks"},{"lineNumber":85,"author":{"gitId":"figo2127"},"content":"     * @param index Index of task in ArrayList"},{"lineNumber":86,"author":{"gitId":"figo2127"},"content":"     * @throws IndexOutOfBoundsException If user provides a task number"},{"lineNumber":87,"author":{"gitId":"figo2127"},"content":"     * that does not exist"},{"lineNumber":88,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"figo2127"},"content":"    public static void markTaskDone(ArrayList\u003cTask\u003e tasks, int index) throws IndexOutOfBoundsException{"},{"lineNumber":90,"author":{"gitId":"figo2127"},"content":"        System.out.println(\"----------------------------------------------\");"},{"lineNumber":91,"author":{"gitId":"figo2127"},"content":"        Task t \u003d tasks.get(index - 1);"},{"lineNumber":92,"author":{"gitId":"figo2127"},"content":"        t.markAsDone();"},{"lineNumber":93,"author":{"gitId":"figo2127"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":94,"author":{"gitId":"figo2127"},"content":"        System.out.println(t);"},{"lineNumber":95,"author":{"gitId":"figo2127"},"content":"        System.out.println(\"----------------------------------------------\");"},{"lineNumber":96,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":98,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"figo2127"},"content":"     * Removes a task from the TaskList."},{"lineNumber":100,"author":{"gitId":"figo2127"},"content":"     * @param tasks An ArrayList of Tasks"},{"lineNumber":101,"author":{"gitId":"figo2127"},"content":"     * @param index Index of task in ArrayList"},{"lineNumber":102,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"figo2127"},"content":"    public static void deleteTask(ArrayList\u003cTask\u003e tasks, int index) {"},{"lineNumber":104,"author":{"gitId":"figo2127"},"content":"        System.out.println(\"----------------------------------------------\");"},{"lineNumber":105,"author":{"gitId":"figo2127"},"content":"        Task t \u003d tasks.remove(index - 1);"},{"lineNumber":106,"author":{"gitId":"figo2127"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":107,"author":{"gitId":"figo2127"},"content":"        System.out.println(t);"},{"lineNumber":108,"author":{"gitId":"figo2127"},"content":"        System.out.println(\"Now there are \" + tasks.size() + \" tasks on the list\");"},{"lineNumber":109,"author":{"gitId":"figo2127"},"content":"        System.out.println(\"----------------------------------------------\");"},{"lineNumber":110,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":112,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":113,"author":{"gitId":"figo2127"},"content":"     * Creates a ToDoTask."},{"lineNumber":114,"author":{"gitId":"figo2127"},"content":"     * @param tasks An ArrayList of Tasks"},{"lineNumber":115,"author":{"gitId":"figo2127"},"content":"     * @param command A String array containing the full command"},{"lineNumber":116,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"figo2127"},"content":"    public static void createTodo(ArrayList\u003cTask\u003e tasks, String[] command) {"},{"lineNumber":118,"author":{"gitId":"figo2127"},"content":"        System.out.println(\"----------------------------------------------\");"},{"lineNumber":119,"author":{"gitId":"figo2127"},"content":"        String todo \u003d \"\";"},{"lineNumber":120,"author":{"gitId":"figo2127"},"content":"        for (int i \u003d 1; i \u003c command.length; i++) {"},{"lineNumber":121,"author":{"gitId":"figo2127"},"content":"            todo +\u003d \" \" + command[i];"},{"lineNumber":122,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"figo2127"},"content":"        ToDoTask newTodo \u003d new ToDoTask(todo, false);"},{"lineNumber":124,"author":{"gitId":"figo2127"},"content":"        tasks.add(newTodo);"},{"lineNumber":125,"author":{"gitId":"figo2127"},"content":"        System.out.println(\"Added this:\");"},{"lineNumber":126,"author":{"gitId":"figo2127"},"content":"        System.out.println(newTodo);"},{"lineNumber":127,"author":{"gitId":"figo2127"},"content":"        System.out.println(\"Now there are \" + tasks.size() + \" tasks on the list\");"},{"lineNumber":128,"author":{"gitId":"figo2127"},"content":"        System.out.println(\"----------------------------------------------\");"},{"lineNumber":129,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":131,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":132,"author":{"gitId":"figo2127"},"content":"     * Creates a DeadlineTask."},{"lineNumber":133,"author":{"gitId":"figo2127"},"content":"     * @param tasks An ArrayList of Tasks"},{"lineNumber":134,"author":{"gitId":"figo2127"},"content":"     * @param command A String array containing the full command"},{"lineNumber":135,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":136,"author":{"gitId":"figo2127"},"content":"    public static void createDeadline(ArrayList\u003cTask\u003e tasks, String[] command) {"},{"lineNumber":137,"author":{"gitId":"figo2127"},"content":"        System.out.println(\"----------------------------------------------\");"},{"lineNumber":138,"author":{"gitId":"figo2127"},"content":"        String description \u003d \"\";"},{"lineNumber":139,"author":{"gitId":"figo2127"},"content":"        String by \u003d \"\";"},{"lineNumber":140,"author":{"gitId":"figo2127"},"content":"        String time \u003d \"\";"},{"lineNumber":141,"author":{"gitId":"figo2127"},"content":"        for (int i \u003d 1; i \u003c command.length; i++) {"},{"lineNumber":142,"author":{"gitId":"figo2127"},"content":"            if (command[i].equals(\"/by\")) {"},{"lineNumber":143,"author":{"gitId":"figo2127"},"content":"                for (int j \u003d i + 1; j \u003c command.length; j++) {"},{"lineNumber":144,"author":{"gitId":"figo2127"},"content":"                    if (command[j].equals(\"time:\")) {"},{"lineNumber":145,"author":{"gitId":"figo2127"},"content":"                        for (int k \u003d j + 1; k \u003c command.length; k++) {"},{"lineNumber":146,"author":{"gitId":"figo2127"},"content":"                            time +\u003d \" \" + command[k];"},{"lineNumber":147,"author":{"gitId":"figo2127"},"content":"                        }"},{"lineNumber":148,"author":{"gitId":"figo2127"},"content":"                        break;"},{"lineNumber":149,"author":{"gitId":"figo2127"},"content":"                    }"},{"lineNumber":150,"author":{"gitId":"figo2127"},"content":"                    by +\u003d command[j];"},{"lineNumber":151,"author":{"gitId":"figo2127"},"content":"                }"},{"lineNumber":152,"author":{"gitId":"figo2127"},"content":"                break;"},{"lineNumber":153,"author":{"gitId":"figo2127"},"content":"            }"},{"lineNumber":154,"author":{"gitId":"figo2127"},"content":"            description +\u003d \" \" + command[i];"},{"lineNumber":155,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"figo2127"},"content":"        DeadlineTask deadLine \u003d new DeadlineTask(description, false, LocalDate.parse(by), time);"},{"lineNumber":157,"author":{"gitId":"figo2127"},"content":"        tasks.add(deadLine);"},{"lineNumber":158,"author":{"gitId":"figo2127"},"content":"        System.out.println(\"Added this:\");"},{"lineNumber":159,"author":{"gitId":"figo2127"},"content":"        System.out.println(deadLine);"},{"lineNumber":160,"author":{"gitId":"figo2127"},"content":"        System.out.println(\"Now there are \" + tasks.size() + \" tasks on the list\");"},{"lineNumber":161,"author":{"gitId":"figo2127"},"content":"        System.out.println(\"----------------------------------------------\");"},{"lineNumber":162,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":164,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":165,"author":{"gitId":"figo2127"},"content":"     * Creates an EventTask."},{"lineNumber":166,"author":{"gitId":"figo2127"},"content":"     * @param tasks An ArrayList of Tasks"},{"lineNumber":167,"author":{"gitId":"figo2127"},"content":"     * @param command A String array containing the full command"},{"lineNumber":168,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":169,"author":{"gitId":"figo2127"},"content":"    public static void createEvent(ArrayList\u003cTask\u003e tasks, String[] command) {"},{"lineNumber":170,"author":{"gitId":"figo2127"},"content":"        System.out.println(\"----------------------------------------------\");"},{"lineNumber":171,"author":{"gitId":"figo2127"},"content":"        String description \u003d \"\";"},{"lineNumber":172,"author":{"gitId":"figo2127"},"content":"        String at \u003d \"\";"},{"lineNumber":173,"author":{"gitId":"figo2127"},"content":"        String time \u003d \"\";"},{"lineNumber":174,"author":{"gitId":"figo2127"},"content":"        for (int i \u003d 1; i \u003c command.length; i++) {"},{"lineNumber":175,"author":{"gitId":"figo2127"},"content":"            if (command[i].equals(\"/at\")) {"},{"lineNumber":176,"author":{"gitId":"figo2127"},"content":"                for (int j \u003d i + 1; j \u003c command.length; j++) {"},{"lineNumber":177,"author":{"gitId":"figo2127"},"content":"                    if (command[j].equals(\"time:\")) {"},{"lineNumber":178,"author":{"gitId":"figo2127"},"content":"                        for (int k \u003d j + 1; k \u003c command.length; k++) {"},{"lineNumber":179,"author":{"gitId":"figo2127"},"content":"                            time +\u003d \" \" + command[k];"},{"lineNumber":180,"author":{"gitId":"figo2127"},"content":"                        }"},{"lineNumber":181,"author":{"gitId":"figo2127"},"content":"                        break;"},{"lineNumber":182,"author":{"gitId":"figo2127"},"content":"                    }"},{"lineNumber":183,"author":{"gitId":"figo2127"},"content":"                    at +\u003d command[j];"},{"lineNumber":184,"author":{"gitId":"figo2127"},"content":"                }"},{"lineNumber":185,"author":{"gitId":"figo2127"},"content":"                break;"},{"lineNumber":186,"author":{"gitId":"figo2127"},"content":"            }"},{"lineNumber":187,"author":{"gitId":"figo2127"},"content":"            description +\u003d command[i];"},{"lineNumber":188,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":189,"author":{"gitId":"figo2127"},"content":"        EventTask event \u003d new EventTask(description, false, LocalDate.parse(at), time);"},{"lineNumber":190,"author":{"gitId":"figo2127"},"content":"        tasks.add(event);"},{"lineNumber":191,"author":{"gitId":"figo2127"},"content":"        System.out.println(\"Added this:\");"},{"lineNumber":192,"author":{"gitId":"figo2127"},"content":"        System.out.println(event);"},{"lineNumber":193,"author":{"gitId":"figo2127"},"content":"        System.out.println(\"Now there are \" + tasks.size() + \" tasks on the list\");"},{"lineNumber":194,"author":{"gitId":"figo2127"},"content":"        System.out.println(\"----------------------------------------------\");"},{"lineNumber":195,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":196,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":196}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"import java.nio.file.Files;"},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"import java.nio.file.Path;"},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":"public class Storage {"},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"    private static final String ROOT_PROJECT \u003d System.getProperty(\"user.dir\");"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"    public static Path saveFilePath \u003d"},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"            Paths.get(ROOT_PROJECT,\"src\", \"data\", \"duke.txt\");"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"    private static Path saveFolderPath \u003d"},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"            Paths.get(ROOT_PROJECT,\"src\", \"data\");"},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":"     * Constructs a Storage object."},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":"     * @param filePath Path of file"},{"lineNumber":21,"author":{"gitId":"figo2127"},"content":"     * @throws DukeException If database cannot be created or found."},{"lineNumber":22,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"figo2127"},"content":"    public Storage(Path filePath) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"figo2127"},"content":"        createDbIfNotFound();"},{"lineNumber":25,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":27,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"figo2127"},"content":"     * Returns the path for the address to save the file."},{"lineNumber":29,"author":{"gitId":"figo2127"},"content":"     * @return Path"},{"lineNumber":30,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"figo2127"},"content":"    public static Path getSaveFilePath() {"},{"lineNumber":32,"author":{"gitId":"figo2127"},"content":"        return saveFilePath;"},{"lineNumber":33,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":35,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"figo2127"},"content":"     * Creates a file w/wo directory for storing of file."},{"lineNumber":37,"author":{"gitId":"figo2127"},"content":"     * @throws DukeException If access rights issue is violated."},{"lineNumber":38,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"figo2127"},"content":"    protected static void createDbIfNotFound() throws DukeException {"},{"lineNumber":40,"author":{"gitId":"figo2127"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"figo2127"},"content":"            if (Files.notExists(saveFilePath)) {"},{"lineNumber":42,"author":{"gitId":"figo2127"},"content":"                if (Files.notExists(saveFolderPath)) {"},{"lineNumber":43,"author":{"gitId":"figo2127"},"content":"                    saveFolderPath \u003d Files.createDirectories(saveFolderPath);"},{"lineNumber":44,"author":{"gitId":"figo2127"},"content":"                }"},{"lineNumber":45,"author":{"gitId":"figo2127"},"content":"                saveFilePath \u003d Files.createFile(saveFilePath);"},{"lineNumber":46,"author":{"gitId":"figo2127"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"figo2127"},"content":"        } catch (IOException e) {"},{"lineNumber":48,"author":{"gitId":"figo2127"},"content":"            throw new DukeException(\"Unable to access data stored.\""},{"lineNumber":49,"author":{"gitId":"figo2127"},"content":"                    + e);"},{"lineNumber":50,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":53,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"figo2127"},"content":"     * Returns an ArrayList of Tasks by attempting to load that information from a stored file."},{"lineNumber":55,"author":{"gitId":"figo2127"},"content":"     * @return An ArrayList of Tasks"},{"lineNumber":56,"author":{"gitId":"figo2127"},"content":"     * @throws DukeException If data could not be loaded."},{"lineNumber":57,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"figo2127"},"content":"    public ArrayList\u003cTask\u003e loadData() throws DukeException {"},{"lineNumber":59,"author":{"gitId":"figo2127"},"content":"        ArrayList\u003cTask\u003e ledger \u003d new ArrayList\u003c\u003e(100);"},{"lineNumber":60,"author":{"gitId":"figo2127"},"content":"        try {"},{"lineNumber":61,"author":{"gitId":"figo2127"},"content":"            BufferedReader bufferedReader \u003d Files.newBufferedReader(saveFilePath);"},{"lineNumber":62,"author":{"gitId":"figo2127"},"content":"            String record \u003d bufferedReader.readLine();"},{"lineNumber":63,"author":{"gitId":"figo2127"},"content":"            while(record !\u003d null) {"},{"lineNumber":64,"author":{"gitId":"figo2127"},"content":"                ledger.add(stringToTask(record));"},{"lineNumber":65,"author":{"gitId":"figo2127"},"content":"                record \u003d bufferedReader.readLine();"},{"lineNumber":66,"author":{"gitId":"figo2127"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"figo2127"},"content":"        } catch (IOException e) {"},{"lineNumber":68,"author":{"gitId":"figo2127"},"content":"            throw new DukeException(\"Fail to load data. \" + e);"},{"lineNumber":69,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"figo2127"},"content":"        return ledger;"},{"lineNumber":71,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":73,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"figo2127"},"content":"     * Saves the list of Tasks into a file to be recovered the"},{"lineNumber":75,"author":{"gitId":"figo2127"},"content":"     * next time the user needs it."},{"lineNumber":76,"author":{"gitId":"figo2127"},"content":"     * @param tasks An ArrayList of Tasks"},{"lineNumber":77,"author":{"gitId":"figo2127"},"content":"     * @throws DukeException If data could not be saved."},{"lineNumber":78,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"figo2127"},"content":"    public void saveData(ArrayList\u003cTask\u003e tasks) throws DukeException {"},{"lineNumber":80,"author":{"gitId":"figo2127"},"content":"        try {"},{"lineNumber":81,"author":{"gitId":"figo2127"},"content":"            ArrayList\u003cString\u003e ledger \u003d new ArrayList\u003c\u003e();"},{"lineNumber":82,"author":{"gitId":"figo2127"},"content":"            for(Task t : tasks) {"},{"lineNumber":83,"author":{"gitId":"figo2127"},"content":"                String s \u003d t.getTaskDetails();"},{"lineNumber":84,"author":{"gitId":"figo2127"},"content":"                ledger.add(s);"},{"lineNumber":85,"author":{"gitId":"figo2127"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"figo2127"},"content":"            Files.write(saveFilePath, ledger);"},{"lineNumber":87,"author":{"gitId":"figo2127"},"content":"        } catch (IOException e) {"},{"lineNumber":88,"author":{"gitId":"figo2127"},"content":"            throw new DukeException(\"Fail to save data. \" + e);"},{"lineNumber":89,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":92,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"figo2127"},"content":"     * Returns a Task which is converted from an input String."},{"lineNumber":94,"author":{"gitId":"figo2127"},"content":"     * @param taskInfo String containing information about the Task"},{"lineNumber":95,"author":{"gitId":"figo2127"},"content":"     * @return Task"},{"lineNumber":96,"author":{"gitId":"figo2127"},"content":"     * @throws DukeException If task could not be created successfully due to input error"},{"lineNumber":97,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"figo2127"},"content":"    private static Task stringToTask(String taskInfo) throws DukeException {"},{"lineNumber":99,"author":{"gitId":"figo2127"},"content":"        String[] savedRecord \u003d taskInfo.split(\"\\\\|\");"},{"lineNumber":100,"author":{"gitId":"figo2127"},"content":"        Task output;"},{"lineNumber":101,"author":{"gitId":"figo2127"},"content":"        String taskType \u003d savedRecord[0].strip();"},{"lineNumber":102,"author":{"gitId":"figo2127"},"content":"        boolean isDone \u003d savedRecord[1].strip().equals(\"1\");"},{"lineNumber":103,"author":{"gitId":"figo2127"},"content":"        String description \u003d savedRecord[2].strip();"},{"lineNumber":104,"author":{"gitId":"figo2127"},"content":"        switch(taskType) {"},{"lineNumber":105,"author":{"gitId":"figo2127"},"content":"        case \"T\":"},{"lineNumber":106,"author":{"gitId":"figo2127"},"content":"            output \u003d new ToDoTask(description, isDone);"},{"lineNumber":107,"author":{"gitId":"figo2127"},"content":"            break;"},{"lineNumber":108,"author":{"gitId":"figo2127"},"content":"        case \"D\":"},{"lineNumber":109,"author":{"gitId":"figo2127"},"content":"            String by \u003d savedRecord[3].strip();"},{"lineNumber":110,"author":{"gitId":"figo2127"},"content":"            LocalDate byDate \u003d LocalDate.parse(by);"},{"lineNumber":111,"author":{"gitId":"figo2127"},"content":"            String byTime \u003d savedRecord[4].strip();"},{"lineNumber":112,"author":{"gitId":"figo2127"},"content":"            output \u003d new DeadlineTask(description, isDone, byDate, byTime);"},{"lineNumber":113,"author":{"gitId":"figo2127"},"content":"            break;"},{"lineNumber":114,"author":{"gitId":"figo2127"},"content":"        case \"E\":"},{"lineNumber":115,"author":{"gitId":"figo2127"},"content":"            String at \u003d savedRecord[3].strip();"},{"lineNumber":116,"author":{"gitId":"figo2127"},"content":"            LocalDate atDate \u003d LocalDate.parse(at);"},{"lineNumber":117,"author":{"gitId":"figo2127"},"content":"            String atTime \u003d savedRecord[4].strip();"},{"lineNumber":118,"author":{"gitId":"figo2127"},"content":"            output \u003d new EventTask(description, isDone, atDate, atTime);"},{"lineNumber":119,"author":{"gitId":"figo2127"},"content":"            break;"},{"lineNumber":120,"author":{"gitId":"figo2127"},"content":"        default:"},{"lineNumber":121,"author":{"gitId":"figo2127"},"content":"            throw new DukeException(\"Unexpected value: \" + taskType);"},{"lineNumber":122,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"figo2127"},"content":"        return output;"},{"lineNumber":124,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":125}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"    public String getStatusIcon() {"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"        return (isDone ? \"[\\u2718]\" : \"[ ]\"); //return tick or X symbols"},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"    public void markAsDone() {"},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":"        this.isDone \u003d true;"},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"figo2127"},"content":"        return this.getStatusIcon() + \" \" + description;"},{"lineNumber":22,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":24,"author":{"gitId":"figo2127"},"content":"    public String getTaskDetails() {"},{"lineNumber":25,"author":{"gitId":"figo2127"},"content":"        return (isDone ? \"1\" : \"0\") + \" | \""},{"lineNumber":26,"author":{"gitId":"figo2127"},"content":"                + description;"},{"lineNumber":27,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":28}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"public class TaskList {"},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"    public ArrayList\u003cTask\u003e tasks;"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"    public TaskList() {"},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"        tasks \u003d null;"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":"        return tasks;"},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":20}},{"path":"src/main/java/duke/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"public class ToDoTask extends Task {"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"    public ToDoTask(String description, boolean isDone) {"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"        super.isDone \u003d isDone;"},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":"        return \"[T] \" + super.toString();"},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"    public String getTaskDetails() {"},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"        String divider \u003d \" | \";"},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":"        return \"T\" +  divider"},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":"                + (isDone ? \"1\" : \"0\") + divider"},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":"                + description;"},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":21}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"    private final String[] HELLO \u003d {"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"            System.lineSeparator() +"},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"                    \" _____ ____  ____  _  __ _____ ____ \" + System.lineSeparator() +"},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"                    \"/__ __Y  _ \\\\/ ___\\\\/ |/ //  __//  __\\\\\" + System.lineSeparator() +"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"                    \"  / \\\\ | / \\\\||    \\\\|   / |  \\\\  |  \\\\/|\" + System.lineSeparator() +"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"                    \"  | | | |-||\\\\___ ||   \\\\ |  /_ |    /\" + System.lineSeparator() +"},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"                    \"  \\\\_/ \\\\_/ \\\\|\\\\____/\\\\_|\\\\_\\\\\\\\____\\\\\\\\_/\\\\_\\\\\","},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":"            \"Sup sup! I\u0027m Tasker :)\""},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"    };"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"    private final String[] GOODBYE \u003d {"},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"            System.lineSeparator() +"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"                    \" _____ ____  ____  ____  ____ ___  _ _____\" + System.lineSeparator() +"},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"                    \"/  __//  _ \\\\/  _ \\\\/  _ \\\\/  _ \\\\\\\\  \\\\///  __/\" + System.lineSeparator() +"},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":"                    \"| |  _| / \\\\|| / \\\\|| | \\\\|| | // \\\\  / |  \\\\  \" + System.lineSeparator() +"},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":"                    \"| |_//| \\\\_/|| \\\\_/|| |_/|| |_\\\\\\\\ / /  |  /_ \" + System.lineSeparator() +"},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":"                    \"\\\\____\\\\\\\\____/\\\\____/\\\\____/\\\\____//_/   \\\\____\\\\\","},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":"            \"Till next time :)\""},{"lineNumber":21,"author":{"gitId":"figo2127"},"content":"    };"},{"lineNumber":22,"author":{"gitId":"figo2127"},"content":"    private final String[] LOADING \u003d {"},{"lineNumber":23,"author":{"gitId":"figo2127"},"content":"            System.lineSeparator() +"},{"lineNumber":24,"author":{"gitId":"figo2127"},"content":"                    \"Loading...\""},{"lineNumber":25,"author":{"gitId":"figo2127"},"content":"    };"},{"lineNumber":26,"author":{"gitId":"figo2127"},"content":"    private final String[] READY \u003d {"},{"lineNumber":27,"author":{"gitId":"figo2127"},"content":"            System.lineSeparator() +"},{"lineNumber":28,"author":{"gitId":"figo2127"},"content":"                    \"Tasker is ready :)\""},{"lineNumber":29,"author":{"gitId":"figo2127"},"content":"    };"},{"lineNumber":30,"author":{"gitId":"figo2127"},"content":"    private final String[] LOADING_ERROR \u003d {"},{"lineNumber":31,"author":{"gitId":"figo2127"},"content":"            System.lineSeparator() +"},{"lineNumber":32,"author":{"gitId":"figo2127"},"content":"                    \"Something went wrong :(\""},{"lineNumber":33,"author":{"gitId":"figo2127"},"content":"    };"},{"lineNumber":34,"author":{"gitId":"figo2127"},"content":"    private final String LINE_PARTITION \u003d"},{"lineNumber":35,"author":{"gitId":"figo2127"},"content":"            \"__________________________________________________________________\" +"},{"lineNumber":36,"author":{"gitId":"figo2127"},"content":"                    \"_______________________________________________________\""},{"lineNumber":37,"author":{"gitId":"figo2127"},"content":"                    + \"_____________________________________________________________\" + System.lineSeparator();"},{"lineNumber":38,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":39,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"figo2127"},"content":"     * Returns a String of generated message which will be printed later on."},{"lineNumber":41,"author":{"gitId":"figo2127"},"content":"     * @param messages a String array that contains the message body."},{"lineNumber":42,"author":{"gitId":"figo2127"},"content":"     * @return the generated message for the user."},{"lineNumber":43,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"figo2127"},"content":"    public String generateMessage(String[] messages) {"},{"lineNumber":45,"author":{"gitId":"figo2127"},"content":"        StringBuilder output \u003d new StringBuilder(LINE_PARTITION);"},{"lineNumber":46,"author":{"gitId":"figo2127"},"content":"        for (String message : messages) {"},{"lineNumber":47,"author":{"gitId":"figo2127"},"content":"            output.append(message).append(System.lineSeparator());"},{"lineNumber":48,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"figo2127"},"content":"        output.append(LINE_PARTITION);"},{"lineNumber":50,"author":{"gitId":"figo2127"},"content":"        return output.toString();"},{"lineNumber":51,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":53,"author":{"gitId":"figo2127"},"content":"    public void showLoadingError() {"},{"lineNumber":54,"author":{"gitId":"figo2127"},"content":"        System.out.println(generateMessage(LOADING_ERROR));"},{"lineNumber":55,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"figo2127"},"content":"    public void greetUser() {"},{"lineNumber":57,"author":{"gitId":"figo2127"},"content":"        System.out.println(generateMessage(HELLO));"},{"lineNumber":58,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"figo2127"},"content":"    public void indicateReady() {"},{"lineNumber":60,"author":{"gitId":"figo2127"},"content":"        System.out.println(generateMessage(READY));"},{"lineNumber":61,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"figo2127"},"content":"    public void sayGoodbye() {"},{"lineNumber":63,"author":{"gitId":"figo2127"},"content":"        System.out.println(generateMessage(GOODBYE));"},{"lineNumber":64,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":65}},{"path":"src/test/java/duke/ToDoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":" * Tests the ToDoTask\u0027s constructor, as well as its toString method."},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":" */"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"public class ToDoTaskTest {"},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":"    public void dummyTest(){"},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"        ToDoTask task \u003d new ToDoTask(\"hello\", false);"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"        assertEquals(task.toString(), \"[T] [ ] hello\");"},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":15}},{"path":"src/test/java/duke/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"public class UiTest {"},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"    public void dummyTest() {"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"        String[] strArr \u003d new String[] {\"hello\", \"sup\", \"hi\"};"},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"        String LINE_PARTITION \u003d"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":"                \"__________________________________________________________________\" +"},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"                        \"_______________________________________________________\""},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"                        + \"_____________________________________________________________\""},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"                        + System.lineSeparator();"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"        assertEquals(ui.generateMessage(strArr),"},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"                LINE_PARTITION + \"hello\" + System.lineSeparator() +"},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":"                        \"sup\" + System.lineSeparator() + \"hi\" +"},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":"                        System.lineSeparator() + LINE_PARTITION);"},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":"list"},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"deadline return book /by 2019-03-21 time: 5pm"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"event return horse /at 2017-02-01 time: 3am"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"list"},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"bye"}],"authorContributionMap":{"figo2127":6}}]
