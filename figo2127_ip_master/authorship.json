[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"checkstyle {"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"}"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":"    "},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":21,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":22,"author":{"gitId":"figo2127"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":23,"author":{"gitId":"figo2127"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":24,"author":{"gitId":"figo2127"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":25,"author":{"gitId":"figo2127"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":26,"author":{"gitId":"figo2127"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":27,"author":{"gitId":"figo2127"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":28,"author":{"gitId":"figo2127"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":29,"author":{"gitId":"figo2127"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":30,"author":{"gitId":"figo2127"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":31,"author":{"gitId":"figo2127"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":32,"author":{"gitId":"figo2127"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":33,"author":{"gitId":"figo2127"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":51,"author":{"gitId":"figo2127"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"figo2127":20,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"# Tasker\u0027s User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"### Tasker manages ALL your tasks, in one place."},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"Add/Delete/Find/Mark/List your tasks whenever you like. "},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"Tasker might know your tasks better than you."},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"### `list` - Displays all your tasks"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"Shows a list of all your tasks "},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":"`list`"},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":21,"author":{"gitId":"figo2127"},"content":"Expected outcome:"},{"lineNumber":22,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":23,"author":{"gitId":"figo2127"},"content":"![Image of outcome](https://github.com/figo2127/ip/blob/master/docs/Ui.png?raw\u003dtrue)"},{"lineNumber":24,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":25,"author":{"gitId":"figo2127"},"content":"### `todo [description]` - Adds a todo task"},{"lineNumber":26,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":27,"author":{"gitId":"figo2127"},"content":"Adds a todo task to your list of tasks."},{"lineNumber":28,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":29,"author":{"gitId":"figo2127"},"content":"Example of usage:"},{"lineNumber":30,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":31,"author":{"gitId":"figo2127"},"content":"`todo wash my car`"},{"lineNumber":32,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":33,"author":{"gitId":"figo2127"},"content":"Expected outcome:"},{"lineNumber":34,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":35,"author":{"gitId":"figo2127"},"content":"`a TodoTask named \u0027wash my car\u0027 will be added.`"},{"lineNumber":36,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":37,"author":{"gitId":"figo2127"},"content":"### `deadline [description] /by [YYYY-MM-DD] /time [HH:mm:ss]` - Adds a deadline task"},{"lineNumber":38,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":39,"author":{"gitId":"figo2127"},"content":"Adds a deadline task to your list of tasks."},{"lineNumber":40,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":41,"author":{"gitId":"figo2127"},"content":"Example of usage:"},{"lineNumber":42,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":43,"author":{"gitId":"figo2127"},"content":"`deadline wash my car /by 2020-03-21 /time 09:00:00`"},{"lineNumber":44,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":45,"author":{"gitId":"figo2127"},"content":"Expected outcome:"},{"lineNumber":46,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":47,"author":{"gitId":"figo2127"},"content":"`a DeadlineTask named \u0027wash my car\u0027 need to be done by 2020-03-21, 09:00:00 will be added.`"},{"lineNumber":48,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":49,"author":{"gitId":"figo2127"},"content":"### `event [description] /at [YYYY-MM-DD] /time [HH:mm:ss]` - Adds an event task"},{"lineNumber":50,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":51,"author":{"gitId":"figo2127"},"content":"Adds an event task to your list of tasks."},{"lineNumber":52,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":53,"author":{"gitId":"figo2127"},"content":"Example of usage:"},{"lineNumber":54,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":55,"author":{"gitId":"figo2127"},"content":"`event wash my car /at 2020-03-21 /time 09:00:00`"},{"lineNumber":56,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":57,"author":{"gitId":"figo2127"},"content":"Expected outcome:"},{"lineNumber":58,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":59,"author":{"gitId":"figo2127"},"content":"`a EventTask named \u0027wash my car\u0027 need to be done at 2020-03-21, 09:00:00 will be added.`"},{"lineNumber":60,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":61,"author":{"gitId":"figo2127"},"content":"### `find [keyword]` - Finds among  all your  tasks, those that matches the keyword provided"},{"lineNumber":62,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":63,"author":{"gitId":"figo2127"},"content":"Returns a list of tasks related to the keyword you provided."},{"lineNumber":64,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":65,"author":{"gitId":"figo2127"},"content":"Example of usage:"},{"lineNumber":66,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":67,"author":{"gitId":"figo2127"},"content":"`find wash`"},{"lineNumber":68,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":69,"author":{"gitId":"figo2127"},"content":"Expected outcome:"},{"lineNumber":70,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":71,"author":{"gitId":"figo2127"},"content":"`all tasks with description containing \"wash\" will be displayed.`"},{"lineNumber":72,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":73,"author":{"gitId":"figo2127"},"content":"### `delete [index]` - Deletes the task at [index] provided"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"figo2127"},"content":"Deletes that task and shows you the number of tasks left. "},{"lineNumber":76,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":77,"author":{"gitId":"figo2127"},"content":"Recommended: use `list` to find out the index of the task you want to delete before deleting."},{"lineNumber":78,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":79,"author":{"gitId":"figo2127"},"content":"Example of usage:"},{"lineNumber":80,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":81,"author":{"gitId":"figo2127"},"content":"`delete 2`"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"figo2127"},"content":"`any task at index 2 will be deleted.`"},{"lineNumber":86,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":87,"author":{"gitId":"figo2127"},"content":"### `done [index]` - Marks the task at [index] as done"},{"lineNumber":88,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":89,"author":{"gitId":"figo2127"},"content":"Marks that task as done. "},{"lineNumber":90,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":91,"author":{"gitId":"figo2127"},"content":"Recommended: use `list` to find out the index of the task you want to mark as done before marking."},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"figo2127"},"content":"`done 2`"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"figo2127"},"content":"`any task at index 2 will be marked as done.`"},{"lineNumber":100,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":101,"author":{"gitId":"figo2127"},"content":"## There\u0027s also a secret Expenses Tracker inside Tasker :)"},{"lineNumber":102,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":103,"author":{"gitId":"figo2127"},"content":"Here\u0027s how to use it:"},{"lineNumber":104,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":105,"author":{"gitId":"figo2127"},"content":"`list_e` instead of `list` to list out all expenses."},{"lineNumber":106,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":107,"author":{"gitId":"figo2127"},"content":"`spend [description] /amt [amount spent] /date YYYY-MM-DD` to add an expense to your expenses list."}],"authorContributionMap":{"figo2127":87,"-":20}},{"path":"src/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"D | 1 | CS assignments | 2020-02-21 | 13:32:30"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":"E | 1 | aunt\u0027s wedding | 2020-03-30 | 17:30"}],"authorContributionMap":{"figo2127":2}},{"path":"src/data/expensesRecord.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"Boat Noodles | 1000.0 | 2000-02-02"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":"boat ride  | 3213.0 | 2020-06-21"}],"authorContributionMap":{"figo2127":2}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":" */"},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"figo2127"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"figo2127"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"figo2127"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"figo2127"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":26,"author":{"gitId":"figo2127"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"figo2127"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"figo2127"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"figo2127"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"figo2127"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"figo2127"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"figo2127"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"figo2127"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":36,"author":{"gitId":"figo2127"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"figo2127"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":40,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"figo2127"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":42,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"figo2127"},"content":"    private void flip() {"},{"lineNumber":44,"author":{"gitId":"figo2127"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":45,"author":{"gitId":"figo2127"},"content":"        Collections.reverse(tmp);"},{"lineNumber":46,"author":{"gitId":"figo2127"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":47,"author":{"gitId":"figo2127"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":48,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":50,"author":{"gitId":"figo2127"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":51,"author":{"gitId":"figo2127"},"content":"        return new DialogBox(text, img);"},{"lineNumber":52,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":54,"author":{"gitId":"figo2127"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"figo2127"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":56,"author":{"gitId":"figo2127"},"content":"        db.flip();"},{"lineNumber":57,"author":{"gitId":"figo2127"},"content":"        return db;"},{"lineNumber":58,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":59}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"import duke.ExpensesList;"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"import duke.GuiUi;"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"import duke.Parser;"},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"import duke.Storage;"},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"import duke.TaskList;"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"import duke.exceptions.ParseException;"},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"import duke.expenses.Expense;"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":"import duke.tasks.Task;"},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"    private Storage storage;"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"    private TaskList tasks;"},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"    private ExpensesList expenses;"},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":"     * Creates a Duke object"},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"figo2127"},"content":"    public Duke() throws DukeException {"},{"lineNumber":22,"author":{"gitId":"figo2127"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"figo2127"},"content":"            storage \u003d new Storage();"},{"lineNumber":24,"author":{"gitId":"figo2127"},"content":"            tasks \u003d new TaskList(storage.loadTasksData());"},{"lineNumber":25,"author":{"gitId":"figo2127"},"content":"            expenses \u003d new ExpensesList(storage.loadExpensesData());"},{"lineNumber":26,"author":{"gitId":"figo2127"},"content":"        } catch (DukeException e) {"},{"lineNumber":27,"author":{"gitId":"figo2127"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":28,"author":{"gitId":"figo2127"},"content":"            expenses \u003d new ExpensesList();"},{"lineNumber":29,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":32,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"figo2127"},"content":"     * Get responses from Tasker depending on the user\u0027s input"},{"lineNumber":34,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"figo2127"},"content":"     * @param input user input"},{"lineNumber":36,"author":{"gitId":"figo2127"},"content":"     * @return Tasker\u0027s response"},{"lineNumber":37,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"figo2127"},"content":"    public String getResponse(String input) {"},{"lineNumber":39,"author":{"gitId":"figo2127"},"content":"        assert(input !\u003d null);"},{"lineNumber":40,"author":{"gitId":"figo2127"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"figo2127"},"content":"            int indexOfWhitespaceAfterCommand \u003d input.indexOf(\u0027 \u0027);"},{"lineNumber":42,"author":{"gitId":"figo2127"},"content":"            input.substring(indexOfWhitespaceAfterCommand);"},{"lineNumber":43,"author":{"gitId":"figo2127"},"content":"        } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":44,"author":{"gitId":"figo2127"},"content":"            try {"},{"lineNumber":45,"author":{"gitId":"figo2127"},"content":"                Parser.parseCommand(input);"},{"lineNumber":46,"author":{"gitId":"figo2127"},"content":"            } catch (IllegalArgumentException exception) {"},{"lineNumber":47,"author":{"gitId":"figo2127"},"content":"                return GuiUi.displayGenericError();"},{"lineNumber":48,"author":{"gitId":"figo2127"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"figo2127"},"content":"            Parser.Command command \u003d Parser.parseCommand(input);"},{"lineNumber":50,"author":{"gitId":"figo2127"},"content":"            switch (command) {"},{"lineNumber":51,"author":{"gitId":"figo2127"},"content":"            case LIST:"},{"lineNumber":52,"author":{"gitId":"figo2127"},"content":"                return GuiUi.displayListOfTasks(this.tasks);"},{"lineNumber":53,"author":{"gitId":"figo2127"},"content":"            case LIST_E:"},{"lineNumber":54,"author":{"gitId":"figo2127"},"content":"                return GuiUi.displayListOfExpenses(this.expenses);"},{"lineNumber":55,"author":{"gitId":"figo2127"},"content":"            case BYE:"},{"lineNumber":56,"author":{"gitId":"figo2127"},"content":"                return GuiUi.displayExitMsg();"},{"lineNumber":57,"author":{"gitId":"figo2127"},"content":"            default:"},{"lineNumber":58,"author":{"gitId":"figo2127"},"content":"                return GuiUi.displayGenericError();"},{"lineNumber":59,"author":{"gitId":"figo2127"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"figo2127"},"content":"        return dealWithCommandsThatRequiresDescriptions(input);"},{"lineNumber":62,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":64,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"figo2127"},"content":"     * Deals with commands that requires descriptions from the user,"},{"lineNumber":66,"author":{"gitId":"figo2127"},"content":"     * for example date, task description, expense description, amount spent,"},{"lineNumber":67,"author":{"gitId":"figo2127"},"content":"     * date, time etc. Returns a formatted String that indicates successful"},{"lineNumber":68,"author":{"gitId":"figo2127"},"content":"     * or unsuccessful operation."},{"lineNumber":69,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"figo2127"},"content":"     * @param input user input"},{"lineNumber":71,"author":{"gitId":"figo2127"},"content":"     * @return Tasker\u0027s response"},{"lineNumber":72,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"figo2127"},"content":"    public String dealWithCommandsThatRequiresDescriptions(String input) {"},{"lineNumber":74,"author":{"gitId":"figo2127"},"content":"        try {"},{"lineNumber":75,"author":{"gitId":"figo2127"},"content":"            int indexOfSpaceAfterCommand \u003d input.indexOf(\u0027 \u0027);"},{"lineNumber":76,"author":{"gitId":"figo2127"},"content":"            //get the command word"},{"lineNumber":77,"author":{"gitId":"figo2127"},"content":"            String commandWord \u003d input.substring(0, indexOfSpaceAfterCommand);"},{"lineNumber":78,"author":{"gitId":"figo2127"},"content":"            //get the rest of the input"},{"lineNumber":79,"author":{"gitId":"figo2127"},"content":"            String inputAfterCommand \u003d input.substring(indexOfSpaceAfterCommand + 1);"},{"lineNumber":80,"author":{"gitId":"figo2127"},"content":"            Parser.Command command \u003d Parser.parseCommand(commandWord);"},{"lineNumber":81,"author":{"gitId":"figo2127"},"content":"            switch (command) {"},{"lineNumber":82,"author":{"gitId":"figo2127"},"content":"            case SPEND:"},{"lineNumber":83,"author":{"gitId":"figo2127"},"content":"                try {"},{"lineNumber":84,"author":{"gitId":"figo2127"},"content":"                    Expense expenseToBeAdded \u003d Parser.parseExpenseDescription(command, inputAfterCommand);"},{"lineNumber":85,"author":{"gitId":"figo2127"},"content":"                    expenses.add(expenseToBeAdded);"},{"lineNumber":86,"author":{"gitId":"figo2127"},"content":"                    storage.saveExpensesData(expenses.getExpenses());"},{"lineNumber":87,"author":{"gitId":"figo2127"},"content":"                    return GuiUi.displayAddExpenseSuccess(expenses, expenseToBeAdded);"},{"lineNumber":88,"author":{"gitId":"figo2127"},"content":"                } catch (DukeException e) {"},{"lineNumber":89,"author":{"gitId":"figo2127"},"content":"                    return GuiUi.displayGenericError();"},{"lineNumber":90,"author":{"gitId":"figo2127"},"content":"                } catch (DateTimeParseException e) {"},{"lineNumber":91,"author":{"gitId":"figo2127"},"content":"                    return GuiUi.displaySpendParseError();"},{"lineNumber":92,"author":{"gitId":"figo2127"},"content":"                } catch (ParseException e) {"},{"lineNumber":93,"author":{"gitId":"figo2127"},"content":"                    return GuiUi.insertMsgIntoChatBox(e.getErrMsg());"},{"lineNumber":94,"author":{"gitId":"figo2127"},"content":"                }"},{"lineNumber":95,"author":{"gitId":"figo2127"},"content":"            case DONE:"},{"lineNumber":96,"author":{"gitId":"figo2127"},"content":"                int indexToMark \u003d Integer.parseInt(inputAfterCommand);"},{"lineNumber":97,"author":{"gitId":"figo2127"},"content":"                try {"},{"lineNumber":98,"author":{"gitId":"figo2127"},"content":"                    String taskMarkedDone \u003d GuiUi.displayMarkDoneSuccess(tasks.mark(indexToMark));"},{"lineNumber":99,"author":{"gitId":"figo2127"},"content":"                    storage.saveTasksData(tasks.getTasks());"},{"lineNumber":100,"author":{"gitId":"figo2127"},"content":"                    return taskMarkedDone;"},{"lineNumber":101,"author":{"gitId":"figo2127"},"content":"                } catch (DukeException e) {"},{"lineNumber":102,"author":{"gitId":"figo2127"},"content":"                    return GuiUi.displayFailToSaveError();"},{"lineNumber":103,"author":{"gitId":"figo2127"},"content":"                } catch (IndexOutOfBoundsException e) {"},{"lineNumber":104,"author":{"gitId":"figo2127"},"content":"                    return GuiUi.displayIndexOutOfBoundsError(tasks);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"                }"},{"lineNumber":106,"author":{"gitId":"figo2127"},"content":"            case DELETE:"},{"lineNumber":107,"author":{"gitId":"figo2127"},"content":"                int indexToDelete \u003d Integer.parseInt(inputAfterCommand);"},{"lineNumber":108,"author":{"gitId":"figo2127"},"content":"                try {"},{"lineNumber":109,"author":{"gitId":"figo2127"},"content":"                    Task taskDeleted \u003d tasks.delete(indexToDelete);"},{"lineNumber":110,"author":{"gitId":"figo2127"},"content":"                    storage.saveTasksData(tasks.getTasks());"},{"lineNumber":111,"author":{"gitId":"figo2127"},"content":"                    return GuiUi.displayDeleteSuccess(tasks, taskDeleted);"},{"lineNumber":112,"author":{"gitId":"figo2127"},"content":"                } catch (DukeException e) {"},{"lineNumber":113,"author":{"gitId":"figo2127"},"content":"                    return GuiUi.displayFailToSaveError();"},{"lineNumber":114,"author":{"gitId":"figo2127"},"content":"                } catch (IndexOutOfBoundsException e) {"},{"lineNumber":115,"author":{"gitId":"figo2127"},"content":"                    return GuiUi.displayIndexOutOfBoundsError(tasks);"},{"lineNumber":116,"author":{"gitId":"figo2127"},"content":"                }"},{"lineNumber":117,"author":{"gitId":"figo2127"},"content":"            case FIND:"},{"lineNumber":118,"author":{"gitId":"figo2127"},"content":"                TaskList matchingTasks \u003d tasks.find(inputAfterCommand);"},{"lineNumber":119,"author":{"gitId":"figo2127"},"content":"                return GuiUi.showMatchingResult(matchingTasks);"},{"lineNumber":120,"author":{"gitId":"figo2127"},"content":"            default:"},{"lineNumber":121,"author":{"gitId":"figo2127"},"content":"                try {"},{"lineNumber":122,"author":{"gitId":"figo2127"},"content":"                    Task taskToBeAdded \u003d Parser.parseDescription(command, inputAfterCommand);"},{"lineNumber":123,"author":{"gitId":"figo2127"},"content":"                    tasks.add(taskToBeAdded);"},{"lineNumber":124,"author":{"gitId":"figo2127"},"content":"                    storage.saveTasksData(tasks.getTasks());"},{"lineNumber":125,"author":{"gitId":"figo2127"},"content":"                    return GuiUi.displayAddSuccess(tasks, taskToBeAdded);"},{"lineNumber":126,"author":{"gitId":"figo2127"},"content":"                } catch (DukeException e) {"},{"lineNumber":127,"author":{"gitId":"figo2127"},"content":"                    return GuiUi.displayFailToSaveError();"},{"lineNumber":128,"author":{"gitId":"figo2127"},"content":"                } catch (ParseException e) {"},{"lineNumber":129,"author":{"gitId":"figo2127"},"content":"                    return GuiUi.insertMsgIntoChatBox(e.getErrMsg());"},{"lineNumber":130,"author":{"gitId":"figo2127"},"content":"                } catch (DateTimeParseException e) {"},{"lineNumber":131,"author":{"gitId":"figo2127"},"content":"                    return GuiUi.displayParseError();"},{"lineNumber":132,"author":{"gitId":"figo2127"},"content":"                }"},{"lineNumber":133,"author":{"gitId":"figo2127"},"content":"            }"},{"lineNumber":134,"author":{"gitId":"figo2127"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":135,"author":{"gitId":"figo2127"},"content":"            return GuiUi.displayGenericError();"},{"lineNumber":136,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}"},{"lineNumber":139,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":140,"author":{"gitId":"figo2127"},"content":""}],"authorContributionMap":{"figo2127":136,"-":4}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":" */"},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"     * Main method of Launcher which launches the application in Main class"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"     * @param args array of Strings passed as parameters"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"    public static void main(String[] args) {"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":15}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"import javafx.scene.Scene;"},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":" * A GUI for Duke using FXML."},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":" */"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"public class Main extends Application {"},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"    public void start(Stage stage) {"},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":"            Duke duke \u003d new Duke();"},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":21,"author":{"gitId":"figo2127"},"content":"            stage.setTitle(\"Elon vs Bezos (ft. Tasker)\");"},{"lineNumber":22,"author":{"gitId":"figo2127"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"figo2127"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":24,"author":{"gitId":"figo2127"},"content":"            stage.show();"},{"lineNumber":25,"author":{"gitId":"figo2127"},"content":"        } catch (IOException e) {"},{"lineNumber":26,"author":{"gitId":"figo2127"},"content":"            e.printStackTrace();"},{"lineNumber":27,"author":{"gitId":"figo2127"},"content":"        } catch (DukeException e) {"},{"lineNumber":28,"author":{"gitId":"figo2127"},"content":"            e.getErrMsg();"},{"lineNumber":29,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":31}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":"import javafx.scene.control.Button;"},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":" */"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"    @FXML"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"    @FXML"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"    private VBox dialogContainer;"},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":"    private TextField userInput;"},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":"    private Button sendButton;"},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":21,"author":{"gitId":"figo2127"},"content":"    private Duke duke;"},{"lineNumber":22,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":23,"author":{"gitId":"figo2127"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Eloj.png\"));"},{"lineNumber":24,"author":{"gitId":"figo2127"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/jeffBezox.png\"));"},{"lineNumber":25,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":26,"author":{"gitId":"figo2127"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"figo2127"},"content":"    public void initialize() {"},{"lineNumber":28,"author":{"gitId":"figo2127"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":29,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":31,"author":{"gitId":"figo2127"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":32,"author":{"gitId":"figo2127"},"content":"        duke \u003d d;"},{"lineNumber":33,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":35,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"figo2127"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":37,"author":{"gitId":"figo2127"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":38,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"figo2127"},"content":"    @FXML"},{"lineNumber":40,"author":{"gitId":"figo2127"},"content":"    private void handleUserInput() {"},{"lineNumber":41,"author":{"gitId":"figo2127"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":42,"author":{"gitId":"figo2127"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":43,"author":{"gitId":"figo2127"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":44,"author":{"gitId":"figo2127"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":45,"author":{"gitId":"figo2127"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":46,"author":{"gitId":"figo2127"},"content":"        );"},{"lineNumber":47,"author":{"gitId":"figo2127"},"content":"        userInput.clear();"},{"lineNumber":48,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":49}},{"path":"src/main/java/duke/ExpensesList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"import duke.expenses.Expense;"},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"public class ExpensesList {"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"    private ArrayList\u003cExpense\u003e expenses;"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":"     * Constructs an ExpensesList object using a collection of Expense objects."},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"     * @param expenses an ArrayList of Expense objects"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"    public ExpensesList(ArrayList\u003cExpense\u003e expenses) {"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"        this.expenses \u003d expenses;"},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":"     * Constructs an empty ExpensesList object."},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"figo2127"},"content":"    public ExpensesList() {"},{"lineNumber":22,"author":{"gitId":"figo2127"},"content":"        expenses \u003d new ArrayList\u003c\u003e();"},{"lineNumber":23,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":25,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"figo2127"},"content":"     * Obtains an ArrayList of Expense objects associated with the ExpensesList."},{"lineNumber":27,"author":{"gitId":"figo2127"},"content":"     * @return ArrayList of Expense objects"},{"lineNumber":28,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"figo2127"},"content":"    public ArrayList\u003cExpense\u003e getExpenses() {"},{"lineNumber":30,"author":{"gitId":"figo2127"},"content":"        return expenses;"},{"lineNumber":31,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":33,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"figo2127"},"content":"     * Deletes an expense at the index given from the ExpensesList."},{"lineNumber":35,"author":{"gitId":"figo2127"},"content":"     * @param index Index of Expense to delete"},{"lineNumber":36,"author":{"gitId":"figo2127"},"content":"     * @return Expense object that is deleted"},{"lineNumber":37,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"figo2127"},"content":"    public Expense delete(int index) {"},{"lineNumber":39,"author":{"gitId":"figo2127"},"content":"        assert(index \u003e\u003d 0);"},{"lineNumber":40,"author":{"gitId":"figo2127"},"content":"        return expenses.remove(index - 1);"},{"lineNumber":41,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":43,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"figo2127"},"content":"     * Returns an ExpensesList of the Expenses that has the given keyword in their descriptions."},{"lineNumber":45,"author":{"gitId":"figo2127"},"content":"     * @param keyword Keyword"},{"lineNumber":46,"author":{"gitId":"figo2127"},"content":"     * @return ArrayList of Expense objects"},{"lineNumber":47,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"figo2127"},"content":"    public ExpensesList find(String keyword) {"},{"lineNumber":49,"author":{"gitId":"figo2127"},"content":"        ArrayList\u003cExpense\u003e arr \u003d new ArrayList\u003c\u003e();"},{"lineNumber":50,"author":{"gitId":"figo2127"},"content":"        for (Expense e : expenses) {"},{"lineNumber":51,"author":{"gitId":"figo2127"},"content":"            boolean gotKeyword \u003d e.getDescription().contains(keyword);"},{"lineNumber":52,"author":{"gitId":"figo2127"},"content":"            if (gotKeyword) {"},{"lineNumber":53,"author":{"gitId":"figo2127"},"content":"                arr.add(e);"},{"lineNumber":54,"author":{"gitId":"figo2127"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"figo2127"},"content":"        return new ExpensesList(arr);"},{"lineNumber":57,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":59,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"figo2127"},"content":"     * Adds an Expense to the ExpensesList."},{"lineNumber":61,"author":{"gitId":"figo2127"},"content":"     * @param expense Expense"},{"lineNumber":62,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"figo2127"},"content":"    public void add(Expense expense) {"},{"lineNumber":64,"author":{"gitId":"figo2127"},"content":"        assert(expense !\u003d null);"},{"lineNumber":65,"author":{"gitId":"figo2127"},"content":"        expenses.add(expense);"},{"lineNumber":66,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":68,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"figo2127"},"content":"     * Returns the sum of the Expenses\u0027 amounts in this ExpensesList."},{"lineNumber":70,"author":{"gitId":"figo2127"},"content":"     * @return Double amount"},{"lineNumber":71,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"figo2127"},"content":"    public double sumUp() {"},{"lineNumber":73,"author":{"gitId":"figo2127"},"content":"        double sum \u003d 0;"},{"lineNumber":74,"author":{"gitId":"figo2127"},"content":"        for (Expense expense : expenses) {"},{"lineNumber":75,"author":{"gitId":"figo2127"},"content":"            sum +\u003d expense.getCashAmount();"},{"lineNumber":76,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"figo2127"},"content":"        return sum;"},{"lineNumber":78,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":79}},{"path":"src/main/java/duke/GuiUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"import duke.exceptions.ParseException;"},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"import duke.expenses.Expense;"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"import duke.tasks.Task;"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"public class GuiUi {"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"    private static final StringBuffer boxBound \u003d new StringBuffer();"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"     * Takes in a string and convert it into a chat box text."},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":"     * @param content content to put into chat box"},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":"    public static String insertMsgIntoChatBox(String content) {"},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":"        return GuiUi.boxBound + \"\\n\" + content + \"\\n\" + GuiUi.boxBound;"},{"lineNumber":21,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":23,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"figo2127"},"content":"     * Informs the user there is error when parsing the date of tasks."},{"lineNumber":25,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"figo2127"},"content":"     * @return error message"},{"lineNumber":27,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"figo2127"},"content":"    public static String displayParseError() {"},{"lineNumber":29,"author":{"gitId":"figo2127"},"content":"        return insertMsgIntoChatBox(\"Input not accepted. \""},{"lineNumber":30,"author":{"gitId":"figo2127"},"content":"                + \"Hint: Use \u0027/by OR /at YYYY-MM-DD\u0027 after description\""},{"lineNumber":31,"author":{"gitId":"figo2127"},"content":"                + \" and \u0027/time HH:mm:ss\u0027 after date is specified.\\n\");"},{"lineNumber":32,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":34,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"figo2127"},"content":"     * Informs the user when there is an error for parsing the input to create an Expense object."},{"lineNumber":36,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"figo2127"},"content":"     * @return error message"},{"lineNumber":38,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"figo2127"},"content":"    public static String displaySpendParseError() {"},{"lineNumber":40,"author":{"gitId":"figo2127"},"content":"        return insertMsgIntoChatBox(\"Input not accepted. \""},{"lineNumber":41,"author":{"gitId":"figo2127"},"content":"                + \"Hint: Use \u0027/amt [amount spent]\u0027 after description\""},{"lineNumber":42,"author":{"gitId":"figo2127"},"content":"                + \" and \u0027/date YYYY-MM-DD\u0027 after amount spent is specified.\\n\");"},{"lineNumber":43,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":45,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"figo2127"},"content":"     * Returns a String indicating a generic error is encountered."},{"lineNumber":47,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"figo2127"},"content":"     * @return String of error message"},{"lineNumber":49,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"figo2127"},"content":"    public static String displayGenericError() {"},{"lineNumber":51,"author":{"gitId":"figo2127"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"figo2127"},"content":"            throw new ParseException(\"Tasker does not understand what you did there!\\n\");"},{"lineNumber":53,"author":{"gitId":"figo2127"},"content":"        } catch (ParseException e) {"},{"lineNumber":54,"author":{"gitId":"figo2127"},"content":"            return insertMsgIntoChatBox(e.getErrMsg());"},{"lineNumber":55,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":58,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"figo2127"},"content":"     * Returns a String indicating that Tasker is unable to save file."},{"lineNumber":60,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"figo2127"},"content":"     * @return String of error message"},{"lineNumber":62,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"figo2127"},"content":"    public static String displayFailToSaveError() {"},{"lineNumber":64,"author":{"gitId":"figo2127"},"content":"        try {"},{"lineNumber":65,"author":{"gitId":"figo2127"},"content":"            throw new DukeException(\"Your save file or path is corrupted!\\n\");"},{"lineNumber":66,"author":{"gitId":"figo2127"},"content":"        } catch (DukeException e) {"},{"lineNumber":67,"author":{"gitId":"figo2127"},"content":"            return insertMsgIntoChatBox(e.getErrMsg());"},{"lineNumber":68,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":71,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"figo2127"},"content":"     *  Returns a String to prompt the user to use a valid number to delete/mark task"},{"lineNumber":73,"author":{"gitId":"figo2127"},"content":"     *  and shows the number of Tasks in the taskList."},{"lineNumber":74,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"figo2127"},"content":"     * @param taskList the list of Tasks."},{"lineNumber":76,"author":{"gitId":"figo2127"},"content":"     * @return String of error message"},{"lineNumber":77,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"figo2127"},"content":"    public static String displayIndexOutOfBoundsError(TaskList taskList) {"},{"lineNumber":79,"author":{"gitId":"figo2127"},"content":"        return insertMsgIntoChatBox(\"Dude. You have only \""},{"lineNumber":80,"author":{"gitId":"figo2127"},"content":"                + taskList.getTasks().size()"},{"lineNumber":81,"author":{"gitId":"figo2127"},"content":"                + \" tasks, please delete/mark the added tasks.\");"},{"lineNumber":82,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":84,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"figo2127"},"content":"     * Shows a list of all the Tasks in the given TaskList on receive of \"list\" command."},{"lineNumber":86,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"figo2127"},"content":"     * @param taskList list of Tasks"},{"lineNumber":88,"author":{"gitId":"figo2127"},"content":"     * @return formatted String"},{"lineNumber":89,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"figo2127"},"content":"    public static String displayListOfTasks(TaskList taskList) {"},{"lineNumber":91,"author":{"gitId":"figo2127"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();"},{"lineNumber":92,"author":{"gitId":"figo2127"},"content":"        int n \u003d tasks.size();"},{"lineNumber":93,"author":{"gitId":"figo2127"},"content":"        if (n \u003d\u003d 0) {"},{"lineNumber":94,"author":{"gitId":"figo2127"},"content":"            return insertMsgIntoChatBox(\"There is no task.\\n\");"},{"lineNumber":95,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"figo2127"},"content":"        StringBuffer buffer \u003d new StringBuffer();"},{"lineNumber":97,"author":{"gitId":"figo2127"},"content":"        for (int i \u003d 0; i \u003c n; i++) {"},{"lineNumber":98,"author":{"gitId":"figo2127"},"content":"            buffer.append(i + 1).append(\") \").append(tasks.get(i)).append(\"\\n\");"},{"lineNumber":99,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"figo2127"},"content":"        String output \u003d new String(buffer);"},{"lineNumber":101,"author":{"gitId":"figo2127"},"content":"        return insertMsgIntoChatBox(\"Here are your tasks:\\n\" + output);"},{"lineNumber":102,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":104,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"figo2127"},"content":"     * Shows a list of all the Expenses in the given TaskList on receive of \"list_e\" command."},{"lineNumber":106,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":107,"author":{"gitId":"figo2127"},"content":"     * @param expensesList list of Expenses"},{"lineNumber":108,"author":{"gitId":"figo2127"},"content":"     * @return formatted String"},{"lineNumber":109,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"figo2127"},"content":"    public static String displayListOfExpenses(ExpensesList expensesList) {"},{"lineNumber":111,"author":{"gitId":"figo2127"},"content":"        ArrayList\u003cExpense\u003e expenses \u003d expensesList.getExpenses();"},{"lineNumber":112,"author":{"gitId":"figo2127"},"content":"        int n \u003d expenses.size();"},{"lineNumber":113,"author":{"gitId":"figo2127"},"content":"        if (n \u003d\u003d 0) {"},{"lineNumber":114,"author":{"gitId":"figo2127"},"content":"            return insertMsgIntoChatBox(\"There is no expense yet.\\n\");"},{"lineNumber":115,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"figo2127"},"content":"        StringBuffer buffer \u003d new StringBuffer();"},{"lineNumber":117,"author":{"gitId":"figo2127"},"content":"        for (int i \u003d 0; i \u003c n; i++) {"},{"lineNumber":118,"author":{"gitId":"figo2127"},"content":"            buffer.append(i + 1).append(\") \").append(expenses.get(i)).append(\"\\n\");"},{"lineNumber":119,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"figo2127"},"content":"        String output \u003d new String(buffer);"},{"lineNumber":121,"author":{"gitId":"figo2127"},"content":"        return insertMsgIntoChatBox(\"Here are your expenses:\\n\" + output);"},{"lineNumber":122,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":124,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":125,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"figo2127"},"content":"     * Displays when Tasker receives \"bye\" command and exits."},{"lineNumber":127,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"figo2127"},"content":"    public static String displayExitMsg() {"},{"lineNumber":129,"author":{"gitId":"figo2127"},"content":"        String goodbye \u003d \"Bye. Remember to do your tasks!\\n\""},{"lineNumber":130,"author":{"gitId":"figo2127"},"content":"                + \"See you next time on Tasker!\\n\";"},{"lineNumber":131,"author":{"gitId":"figo2127"},"content":"        return insertMsgIntoChatBox(goodbye);"},{"lineNumber":132,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":134,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"figo2127"},"content":"     * Returns a String which contains the matching results."},{"lineNumber":136,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":137,"author":{"gitId":"figo2127"},"content":"     * @param taskList list of tasks"},{"lineNumber":138,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"figo2127"},"content":"    public static String showMatchingResult(TaskList taskList) {"},{"lineNumber":140,"author":{"gitId":"figo2127"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();"},{"lineNumber":141,"author":{"gitId":"figo2127"},"content":"        int numOfTasks \u003d tasks.size();"},{"lineNumber":142,"author":{"gitId":"figo2127"},"content":"        if (numOfTasks \u003d\u003d 0) {"},{"lineNumber":143,"author":{"gitId":"figo2127"},"content":"            return insertMsgIntoChatBox(\"There is no matching task :(\\n\");"},{"lineNumber":144,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":145,"author":{"gitId":"figo2127"},"content":"        StringBuffer buffer \u003d new StringBuffer();"},{"lineNumber":146,"author":{"gitId":"figo2127"},"content":"        for (int i \u003d 0; i \u003c numOfTasks; i++) {"},{"lineNumber":147,"author":{"gitId":"figo2127"},"content":"            buffer.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");"},{"lineNumber":148,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"figo2127"},"content":"        String output \u003d new String(buffer);"},{"lineNumber":150,"author":{"gitId":"figo2127"},"content":"        return insertMsgIntoChatBox(\"Here are the matching tasks in your list:\\n\" + output);"},{"lineNumber":151,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":153,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":154,"author":{"gitId":"figo2127"},"content":"     * Informs the user that a task is added successfully."},{"lineNumber":155,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":156,"author":{"gitId":"figo2127"},"content":"     * @param taskList TaskList"},{"lineNumber":157,"author":{"gitId":"figo2127"},"content":"     * @param task task to be added"},{"lineNumber":158,"author":{"gitId":"figo2127"},"content":"     * @return String of formatted message"},{"lineNumber":159,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":160,"author":{"gitId":"figo2127"},"content":"    public static String displayAddSuccess(TaskList taskList, Task task) {"},{"lineNumber":161,"author":{"gitId":"figo2127"},"content":"        return insertMsgIntoChatBox(\"Got it. I\u0027ve added this task:\" + \u0027\\n\u0027"},{"lineNumber":162,"author":{"gitId":"figo2127"},"content":"                + task + \"\\n\""},{"lineNumber":163,"author":{"gitId":"figo2127"},"content":"                + \"Now you have \" + taskList.getTasks().size() + \" tasks in the list.\\n\");"},{"lineNumber":164,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":166,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":167,"author":{"gitId":"figo2127"},"content":"     * Informs the user that an expense is added successfully."},{"lineNumber":168,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":169,"author":{"gitId":"figo2127"},"content":"     * @param expensesList ExpensesList"},{"lineNumber":170,"author":{"gitId":"figo2127"},"content":"     * @param expense expense to be added"},{"lineNumber":171,"author":{"gitId":"figo2127"},"content":"     * @return String of formatted message"},{"lineNumber":172,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":173,"author":{"gitId":"figo2127"},"content":"    public static String displayAddExpenseSuccess(ExpensesList expensesList, Expense expense) {"},{"lineNumber":174,"author":{"gitId":"figo2127"},"content":"        return insertMsgIntoChatBox(\"Got it. I\u0027ve added this expense:\" + \u0027\\n\u0027"},{"lineNumber":175,"author":{"gitId":"figo2127"},"content":"                + expense + \"\\n\""},{"lineNumber":176,"author":{"gitId":"figo2127"},"content":"                + \"Now you have spent a total of $\" + expensesList.sumUp() + \".\\n\");"},{"lineNumber":177,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":179,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":180,"author":{"gitId":"figo2127"},"content":"     * Returns a \u0027successfully marked\u0027 message."},{"lineNumber":181,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":182,"author":{"gitId":"figo2127"},"content":"     * @param task task done"},{"lineNumber":183,"author":{"gitId":"figo2127"},"content":"     * @return String of formatted message"},{"lineNumber":184,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":185,"author":{"gitId":"figo2127"},"content":"    public static String displayMarkDoneSuccess(Task task) {"},{"lineNumber":186,"author":{"gitId":"figo2127"},"content":"        return insertMsgIntoChatBox(\"Nice! I\u0027ve marked this Task as done:\\n\" + task + \"\\n\");"},{"lineNumber":187,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":189,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":190,"author":{"gitId":"figo2127"},"content":"     * Returns a \u0027successfully deleted\u0027 message."},{"lineNumber":191,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":192,"author":{"gitId":"figo2127"},"content":"     * @param taskList TaskList"},{"lineNumber":193,"author":{"gitId":"figo2127"},"content":"     * @param task task deleted"},{"lineNumber":194,"author":{"gitId":"figo2127"},"content":"     * @return String of formatted message"},{"lineNumber":195,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":196,"author":{"gitId":"figo2127"},"content":"    public static String displayDeleteSuccess(TaskList taskList, Task task) {"},{"lineNumber":197,"author":{"gitId":"figo2127"},"content":"        return insertMsgIntoChatBox(\"Got it. I\u0027ve removed this task:\" + \u0027\\n\u0027"},{"lineNumber":198,"author":{"gitId":"figo2127"},"content":"                + task + \"\\n\" + \"Now you have \""},{"lineNumber":199,"author":{"gitId":"figo2127"},"content":"                + taskList.getTasks().size() + \" tasks in the list.\\n\");"},{"lineNumber":200,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":201,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":201}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"import java.util.Locale;"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"import duke.exceptions.ParseException;"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":"import duke.expenses.Expense;"},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"import duke.tasks.DeadlineTask;"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"import duke.tasks.EventTask;"},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"import duke.tasks.Task;"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"import duke.tasks.ToDoTask;"},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":"public class Parser {"},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":"    private TaskList taskList;"},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":"    /** ArrayList of Tasks obtained from TaskList **/"},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":21,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":22,"author":{"gitId":"figo2127"},"content":"    /** A collection of commands Tasker understands **/"},{"lineNumber":23,"author":{"gitId":"figo2127"},"content":"    public enum Command {"},{"lineNumber":24,"author":{"gitId":"figo2127"},"content":"        LIST,"},{"lineNumber":25,"author":{"gitId":"figo2127"},"content":"        LIST_E,"},{"lineNumber":26,"author":{"gitId":"figo2127"},"content":"        DONE,"},{"lineNumber":27,"author":{"gitId":"figo2127"},"content":"        DELETE,"},{"lineNumber":28,"author":{"gitId":"figo2127"},"content":"        TODO,"},{"lineNumber":29,"author":{"gitId":"figo2127"},"content":"        DEADLINE,"},{"lineNumber":30,"author":{"gitId":"figo2127"},"content":"        EVENT,"},{"lineNumber":31,"author":{"gitId":"figo2127"},"content":"        FIND,"},{"lineNumber":32,"author":{"gitId":"figo2127"},"content":"        SPEND,"},{"lineNumber":33,"author":{"gitId":"figo2127"},"content":"        BYE"},{"lineNumber":34,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":36,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"figo2127"},"content":"     * Constructs a Parser object."},{"lineNumber":38,"author":{"gitId":"figo2127"},"content":"     * @param taskList TaskList"},{"lineNumber":39,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"figo2127"},"content":"    public Parser(TaskList taskList) {"},{"lineNumber":41,"author":{"gitId":"figo2127"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":42,"author":{"gitId":"figo2127"},"content":"        this.tasks \u003d this.taskList.getTasks();"},{"lineNumber":43,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":45,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"figo2127"},"content":"     * Parses the lowercase input command into a uppercase one."},{"lineNumber":47,"author":{"gitId":"figo2127"},"content":"     * @param input lowercase command input"},{"lineNumber":48,"author":{"gitId":"figo2127"},"content":"     * @return uppercase Command"},{"lineNumber":49,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"figo2127"},"content":"    public static Command parseCommand(String input) {"},{"lineNumber":51,"author":{"gitId":"figo2127"},"content":"        Command c \u003d Command.valueOf(input.toUpperCase(Locale.ROOT));"},{"lineNumber":52,"author":{"gitId":"figo2127"},"content":"        return c;"},{"lineNumber":53,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":55,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"figo2127"},"content":"     * Credit to QY-H00 - who inspired me to implement a parser for specific commands."},{"lineNumber":57,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"figo2127"},"content":"     * Returns a specific type of Task object by parsing the description after the given command."},{"lineNumber":59,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"figo2127"},"content":"     * @param command type of task (eg. TODO, DEADLINE or EVENT)"},{"lineNumber":61,"author":{"gitId":"figo2127"},"content":"     * @param description description of task"},{"lineNumber":62,"author":{"gitId":"figo2127"},"content":"     * @return a task object corresponding to the input"},{"lineNumber":63,"author":{"gitId":"figo2127"},"content":"     * @throws ParseException if parsing fails"},{"lineNumber":64,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"figo2127"},"content":"    public static Task parseDescription(Command command, String description) throws ParseException {"},{"lineNumber":66,"author":{"gitId":"figo2127"},"content":"        switch (command) {"},{"lineNumber":67,"author":{"gitId":"figo2127"},"content":"        case TODO:"},{"lineNumber":68,"author":{"gitId":"figo2127"},"content":"            return parseToDo(description);"},{"lineNumber":69,"author":{"gitId":"figo2127"},"content":"        case DEADLINE:"},{"lineNumber":70,"author":{"gitId":"figo2127"},"content":"            return parseDeadline(description);"},{"lineNumber":71,"author":{"gitId":"figo2127"},"content":"        case EVENT:"},{"lineNumber":72,"author":{"gitId":"figo2127"},"content":"            return parseEvent(description);"},{"lineNumber":73,"author":{"gitId":"figo2127"},"content":"        default:"},{"lineNumber":74,"author":{"gitId":"figo2127"},"content":"            throw new ParseException(\"Invalid command!\");"},{"lineNumber":75,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":78,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"figo2127"},"content":"     * Returns an Expense object by parsing the description after the given command."},{"lineNumber":80,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":81,"author":{"gitId":"figo2127"},"content":"     * @param command type of expense"},{"lineNumber":82,"author":{"gitId":"figo2127"},"content":"     * @param description description of expense"},{"lineNumber":83,"author":{"gitId":"figo2127"},"content":"     * @return an expense object corresponding to the input"},{"lineNumber":84,"author":{"gitId":"figo2127"},"content":"     * @throws ParseException if parsing fails"},{"lineNumber":85,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"figo2127"},"content":"    public static Expense parseExpenseDescription(Command command, String description) throws ParseException {"},{"lineNumber":87,"author":{"gitId":"figo2127"},"content":"        switch (command) {"},{"lineNumber":88,"author":{"gitId":"figo2127"},"content":"        case SPEND:"},{"lineNumber":89,"author":{"gitId":"figo2127"},"content":"            return parseSpend(description);"},{"lineNumber":90,"author":{"gitId":"figo2127"},"content":"        default:"},{"lineNumber":91,"author":{"gitId":"figo2127"},"content":"            throw new ParseException(\"Invalid command!\");"},{"lineNumber":92,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":95,"author":{"gitId":"figo2127"},"content":"    private static Expense parseSpend(String input) {"},{"lineNumber":96,"author":{"gitId":"figo2127"},"content":"        if (input.isEmpty() || input.equals(\" \")) {"},{"lineNumber":97,"author":{"gitId":"figo2127"},"content":"            throw new ParseException(\"Invalid input! Description of a Spend cannot be empty.\\n\");"},{"lineNumber":98,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"figo2127"},"content":"        if (input.contains(\"/amt \")) {"},{"lineNumber":100,"author":{"gitId":"figo2127"},"content":"            if (input.charAt(0) \u003d\u003d \u0027 \u0027) {"},{"lineNumber":101,"author":{"gitId":"figo2127"},"content":"                input \u003d input.substring(1);"},{"lineNumber":102,"author":{"gitId":"figo2127"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"figo2127"},"content":"            int indexOfEndOfDescription \u003d input.indexOf(\"/amt \");"},{"lineNumber":104,"author":{"gitId":"figo2127"},"content":"            String description \u003d input.substring(0, indexOfEndOfDescription);"},{"lineNumber":105,"author":{"gitId":"figo2127"},"content":"            int indexOfDate \u003d input.indexOf(\"/date \");"},{"lineNumber":106,"author":{"gitId":"figo2127"},"content":"            String amtStr \u003d input.substring(indexOfEndOfDescription + 5, indexOfDate - 1);"},{"lineNumber":107,"author":{"gitId":"figo2127"},"content":"            double amt \u003d Double.parseDouble(amtStr);"},{"lineNumber":108,"author":{"gitId":"figo2127"},"content":"            String dateStr \u003d input.substring(indexOfDate + 6);"},{"lineNumber":109,"author":{"gitId":"figo2127"},"content":"            LocalDate date \u003d LocalDate.parse(dateStr);"},{"lineNumber":110,"author":{"gitId":"figo2127"},"content":"            if (amt \u003c\u003d 0) {"},{"lineNumber":111,"author":{"gitId":"figo2127"},"content":"                throw new ParseException(\"Input invalid! Please enter a proper spending amount... (how\""},{"lineNumber":112,"author":{"gitId":"figo2127"},"content":"                        + \" could you spend less than or equal to zero dollars??)\");"},{"lineNumber":113,"author":{"gitId":"figo2127"},"content":"            }"},{"lineNumber":114,"author":{"gitId":"figo2127"},"content":"            return new Expense(description, amt, date);"},{"lineNumber":115,"author":{"gitId":"figo2127"},"content":"        } else {"},{"lineNumber":116,"author":{"gitId":"figo2127"},"content":"            throw new ParseException(\"Invalid input! Please enter using format: \u0027spend\u0027_[description]_\""},{"lineNumber":117,"author":{"gitId":"figo2127"},"content":"                    + \"\u0027/amt [amount spent]\u0027_\u0027/date YYYY-MM-DD\u0027\\n\");"},{"lineNumber":118,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":121,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":122,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"figo2127"},"content":"     * Returns a ToDoTask by parsing the input behind the command."},{"lineNumber":124,"author":{"gitId":"figo2127"},"content":"     * Used when the command is \u0027todo_[description]\u0027."},{"lineNumber":125,"author":{"gitId":"figo2127"},"content":"     * This function works for non-empty inputs."},{"lineNumber":126,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":127,"author":{"gitId":"figo2127"},"content":"     * @param input user input"},{"lineNumber":128,"author":{"gitId":"figo2127"},"content":"     * @return a ToDoTask"},{"lineNumber":129,"author":{"gitId":"figo2127"},"content":"     * @throws ParseException if description is empty"},{"lineNumber":130,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":131,"author":{"gitId":"figo2127"},"content":"    private static ToDoTask parseToDo(String input) throws ParseException {"},{"lineNumber":132,"author":{"gitId":"figo2127"},"content":"        if (input.isEmpty() || input.equals(\" \")) {"},{"lineNumber":133,"author":{"gitId":"figo2127"},"content":"            throw new ParseException(\"Invalid input! Description of a ToDoTask cannot be empty.\\n\");"},{"lineNumber":134,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"figo2127"},"content":"        if (input.charAt(0) \u003d\u003d \u0027 \u0027) {"},{"lineNumber":136,"author":{"gitId":"figo2127"},"content":"            input \u003d input.substring(1);"},{"lineNumber":137,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"figo2127"},"content":"        return new ToDoTask(input, false);"},{"lineNumber":139,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":141,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":142,"author":{"gitId":"figo2127"},"content":"     * Returns a DeadlineTask by parsing the input behind the command."},{"lineNumber":143,"author":{"gitId":"figo2127"},"content":"     * Used when the command is \u0027deadline_[description]_/by_[YYYY-MM-DD]_/time_[HH:mm:ss]\u0027."},{"lineNumber":144,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":145,"author":{"gitId":"figo2127"},"content":"     * @param input input of users."},{"lineNumber":146,"author":{"gitId":"figo2127"},"content":"     * @return a task of Deadline corresponding to the input."},{"lineNumber":147,"author":{"gitId":"figo2127"},"content":"     * @throws ParseException if the description is empty."},{"lineNumber":148,"author":{"gitId":"figo2127"},"content":"     * @throws DateTimeParseException if the format of data time is not correct."},{"lineNumber":149,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":150,"author":{"gitId":"figo2127"},"content":"    private static DeadlineTask parseDeadline(String input) throws ParseException, DateTimeParseException {"},{"lineNumber":151,"author":{"gitId":"figo2127"},"content":"        if (input.isEmpty() || input.equals(\" \")) {"},{"lineNumber":152,"author":{"gitId":"figo2127"},"content":"            throw new ParseException(\"Invalid input! Description of a DeadlineTask cannot be empty.\\n\");"},{"lineNumber":153,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":154,"author":{"gitId":"figo2127"},"content":"        if (input.contains(\"/by \")) {"},{"lineNumber":155,"author":{"gitId":"figo2127"},"content":"            if (input.charAt(0) \u003d\u003d \u0027 \u0027) {"},{"lineNumber":156,"author":{"gitId":"figo2127"},"content":"                input \u003d input.substring(1);"},{"lineNumber":157,"author":{"gitId":"figo2127"},"content":"            }"},{"lineNumber":158,"author":{"gitId":"figo2127"},"content":"            int indexOfEndOfDescription \u003d input.indexOf(\"/by \");"},{"lineNumber":159,"author":{"gitId":"figo2127"},"content":"            String description \u003d input.substring(0, indexOfEndOfDescription);"},{"lineNumber":160,"author":{"gitId":"figo2127"},"content":"            int indexOfTime \u003d input.indexOf(\"/time \");"},{"lineNumber":161,"author":{"gitId":"figo2127"},"content":"            String deadline \u003d input.substring(indexOfEndOfDescription + 4, indexOfTime - 1);"},{"lineNumber":162,"author":{"gitId":"figo2127"},"content":"            LocalDate date \u003d LocalDate.parse(deadline);"},{"lineNumber":163,"author":{"gitId":"figo2127"},"content":"            String deadTime \u003d input.substring(indexOfTime + 6);"},{"lineNumber":164,"author":{"gitId":"figo2127"},"content":"            LocalTime localTime \u003d LocalTime.parse(deadTime, DateTimeFormatter.ofPattern(\"HH:mm:ss\"));"},{"lineNumber":165,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":166,"author":{"gitId":"figo2127"},"content":"            return new DeadlineTask(description, false, date, localTime);"},{"lineNumber":167,"author":{"gitId":"figo2127"},"content":"        } else {"},{"lineNumber":168,"author":{"gitId":"figo2127"},"content":"            throw new ParseException(\"Invalid input! Please enter using format: \u0027deadline\u0027_[description]_\""},{"lineNumber":169,"author":{"gitId":"figo2127"},"content":"                    + \"\u0027/by YYYY-MM-DD\u0027_\u0027/time HH:mm:ss\u0027\\n\");"},{"lineNumber":170,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":173,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":174,"author":{"gitId":"figo2127"},"content":"     * Returns an Event by parsing the input behind the command."},{"lineNumber":175,"author":{"gitId":"figo2127"},"content":"     * Used when the command is event."},{"lineNumber":176,"author":{"gitId":"figo2127"},"content":"     * Works when the input is \"{description} /at YYYY-MM-DD\"."},{"lineNumber":177,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":178,"author":{"gitId":"figo2127"},"content":"     * @param input input of users."},{"lineNumber":179,"author":{"gitId":"figo2127"},"content":"     * @return a task of Event corresponding to the input."},{"lineNumber":180,"author":{"gitId":"figo2127"},"content":"     * @throws ParseException if the description is empty."},{"lineNumber":181,"author":{"gitId":"figo2127"},"content":"     * @throws DateTimeParseException if the format of data time is not correct."},{"lineNumber":182,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":183,"author":{"gitId":"figo2127"},"content":"    private static EventTask parseEvent(String input) throws ParseException, DateTimeParseException {"},{"lineNumber":184,"author":{"gitId":"figo2127"},"content":"        if (input.isEmpty() || input.equals(\" \")) {"},{"lineNumber":185,"author":{"gitId":"figo2127"},"content":"            throw new ParseException(\"Invalid input! Description of an EventTask cannot be empty.\\n\");"},{"lineNumber":186,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"figo2127"},"content":"        if (input.contains(\"/at \")) {"},{"lineNumber":188,"author":{"gitId":"figo2127"},"content":"            if (input.charAt(0) \u003d\u003d \u0027 \u0027) {"},{"lineNumber":189,"author":{"gitId":"figo2127"},"content":"                input \u003d input.substring(1);"},{"lineNumber":190,"author":{"gitId":"figo2127"},"content":"            }"},{"lineNumber":191,"author":{"gitId":"figo2127"},"content":"            int indexOfEndOfDescription \u003d input.indexOf(\"/at \");"},{"lineNumber":192,"author":{"gitId":"figo2127"},"content":"            String description \u003d input.substring(0, indexOfEndOfDescription);"},{"lineNumber":193,"author":{"gitId":"figo2127"},"content":"            int indexOfTime \u003d input.indexOf(\"/time \");"},{"lineNumber":194,"author":{"gitId":"figo2127"},"content":"            String deadline \u003d input.substring(indexOfEndOfDescription + 4, indexOfTime - 1);"},{"lineNumber":195,"author":{"gitId":"figo2127"},"content":"            LocalDate date \u003d LocalDate.parse(deadline);"},{"lineNumber":196,"author":{"gitId":"figo2127"},"content":"            String deadTime \u003d input.substring(indexOfTime + 6);"},{"lineNumber":197,"author":{"gitId":"figo2127"},"content":"            LocalTime localTime \u003d LocalTime.parse(deadTime, DateTimeFormatter.ofPattern(\"HH:mm:ss\"));"},{"lineNumber":198,"author":{"gitId":"figo2127"},"content":"            return new EventTask(description, false, date, localTime);"},{"lineNumber":199,"author":{"gitId":"figo2127"},"content":"        } else {"},{"lineNumber":200,"author":{"gitId":"figo2127"},"content":"            throw new ParseException(\"Invalid input! Please enter using format: \u0027event\u0027_[description]_\""},{"lineNumber":201,"author":{"gitId":"figo2127"},"content":"                    + \"\u0027/by YYYY-MM-DD\u0027_\u0027/time HH:mm:ss\u0027\\n\");"},{"lineNumber":202,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":203,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":204,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":204}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"import java.nio.file.Files;"},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"import java.nio.file.Path;"},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"import java.nio.file.Paths;"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"import java.time.LocalTime;"},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"import duke.exceptions.DukeException;"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"import duke.expenses.Expense;"},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"import duke.tasks.DeadlineTask;"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"import duke.tasks.EventTask;"},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"import duke.tasks.Task;"},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":"import duke.tasks.ToDoTask;"},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":"public class Storage {"},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":"    private static final String ROOT_PROJECT \u003d System.getProperty(\"user.dir\");"},{"lineNumber":21,"author":{"gitId":"figo2127"},"content":"    private static Path saveFilePathForTasks \u003d"},{"lineNumber":22,"author":{"gitId":"figo2127"},"content":"            Paths.get(ROOT_PROJECT, \"src\", \"data\", \"duke.txt\");"},{"lineNumber":23,"author":{"gitId":"figo2127"},"content":"    private static Path saveFolderPathForTasks \u003d"},{"lineNumber":24,"author":{"gitId":"figo2127"},"content":"            Paths.get(ROOT_PROJECT, \"src\", \"data\");"},{"lineNumber":25,"author":{"gitId":"figo2127"},"content":"    private static Path saveFilePathForExpenses \u003d"},{"lineNumber":26,"author":{"gitId":"figo2127"},"content":"            Paths.get(ROOT_PROJECT, \"src\", \"data\", \"expensesRecord.txt\");"},{"lineNumber":27,"author":{"gitId":"figo2127"},"content":"    private static Path saveFolderPathForExpenses \u003d"},{"lineNumber":28,"author":{"gitId":"figo2127"},"content":"            Paths.get(ROOT_PROJECT, \"src\", \"data\");"},{"lineNumber":29,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":30,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"figo2127"},"content":"     * Constructs a Storage object."},{"lineNumber":32,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"figo2127"},"content":"     * @throws DukeException If database cannot be created or found."},{"lineNumber":34,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"figo2127"},"content":"    public Storage() throws DukeException {"},{"lineNumber":36,"author":{"gitId":"figo2127"},"content":"        createDbIfNotFoundForTasks();"},{"lineNumber":37,"author":{"gitId":"figo2127"},"content":"        createDbIfNotFoundForExpenses();"},{"lineNumber":38,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":40,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"figo2127"},"content":"     * Returns the path for the address to save the file."},{"lineNumber":42,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"figo2127"},"content":"     * @return Path"},{"lineNumber":44,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"figo2127"},"content":"    public static Path getSaveFilePathForTasks() {"},{"lineNumber":46,"author":{"gitId":"figo2127"},"content":"        return saveFilePathForTasks;"},{"lineNumber":47,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":49,"author":{"gitId":"figo2127"},"content":"    public static Path getSaveFilePathForExpenses() {"},{"lineNumber":50,"author":{"gitId":"figo2127"},"content":"        return saveFilePathForExpenses;"},{"lineNumber":51,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":53,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":54,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"figo2127"},"content":"     * Creates a file w/wo directory for storing of file."},{"lineNumber":56,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"figo2127"},"content":"     * @throws DukeException If access rights issue is violated."},{"lineNumber":58,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"figo2127"},"content":"    protected static void createDbIfNotFoundForTasks() throws DukeException {"},{"lineNumber":60,"author":{"gitId":"figo2127"},"content":"        try {"},{"lineNumber":61,"author":{"gitId":"figo2127"},"content":"            if (Files.notExists(saveFilePathForTasks)) {"},{"lineNumber":62,"author":{"gitId":"figo2127"},"content":"                if (Files.notExists(saveFolderPathForTasks)) {"},{"lineNumber":63,"author":{"gitId":"figo2127"},"content":"                    saveFolderPathForTasks \u003d Files.createDirectories(saveFolderPathForTasks);"},{"lineNumber":64,"author":{"gitId":"figo2127"},"content":"                }"},{"lineNumber":65,"author":{"gitId":"figo2127"},"content":"                saveFilePathForTasks \u003d Files.createFile(saveFilePathForTasks);"},{"lineNumber":66,"author":{"gitId":"figo2127"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"figo2127"},"content":"        } catch (IOException e) {"},{"lineNumber":68,"author":{"gitId":"figo2127"},"content":"            throw new DukeException(\"Unable to access data stored.\""},{"lineNumber":69,"author":{"gitId":"figo2127"},"content":"                    + e);"},{"lineNumber":70,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":73,"author":{"gitId":"figo2127"},"content":"    protected static void createDbIfNotFoundForExpenses() throws DukeException {"},{"lineNumber":74,"author":{"gitId":"figo2127"},"content":"        try {"},{"lineNumber":75,"author":{"gitId":"figo2127"},"content":"            if (Files.notExists(saveFilePathForExpenses)) {"},{"lineNumber":76,"author":{"gitId":"figo2127"},"content":"                if (Files.notExists(saveFolderPathForExpenses)) {"},{"lineNumber":77,"author":{"gitId":"figo2127"},"content":"                    saveFolderPathForExpenses \u003d Files.createDirectories(saveFolderPathForExpenses);"},{"lineNumber":78,"author":{"gitId":"figo2127"},"content":"                }"},{"lineNumber":79,"author":{"gitId":"figo2127"},"content":"                saveFilePathForExpenses \u003d Files.createFile(saveFilePathForExpenses);"},{"lineNumber":80,"author":{"gitId":"figo2127"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"figo2127"},"content":"        } catch (IOException e) {"},{"lineNumber":82,"author":{"gitId":"figo2127"},"content":"            throw new DukeException(\"Unable to access data stored.\""},{"lineNumber":83,"author":{"gitId":"figo2127"},"content":"                    + e);"},{"lineNumber":84,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":87,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"figo2127"},"content":"     * Returns an ArrayList of Tasks by attempting to load that information from a stored file."},{"lineNumber":89,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"figo2127"},"content":"     * @return An ArrayList of Tasks"},{"lineNumber":91,"author":{"gitId":"figo2127"},"content":"     * @throws DukeException If data could not be loaded"},{"lineNumber":92,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"figo2127"},"content":"    public ArrayList\u003cTask\u003e loadTasksData() throws DukeException {"},{"lineNumber":94,"author":{"gitId":"figo2127"},"content":"        ArrayList\u003cTask\u003e ledger \u003d new ArrayList\u003c\u003e();"},{"lineNumber":95,"author":{"gitId":"figo2127"},"content":"        try {"},{"lineNumber":96,"author":{"gitId":"figo2127"},"content":"            BufferedReader bufferedReader \u003d Files.newBufferedReader(saveFilePathForTasks);"},{"lineNumber":97,"author":{"gitId":"figo2127"},"content":"            String record \u003d bufferedReader.readLine();"},{"lineNumber":98,"author":{"gitId":"figo2127"},"content":"            while (record !\u003d null) {"},{"lineNumber":99,"author":{"gitId":"figo2127"},"content":"                ledger.add(stringToTask(record));"},{"lineNumber":100,"author":{"gitId":"figo2127"},"content":"                record \u003d bufferedReader.readLine();"},{"lineNumber":101,"author":{"gitId":"figo2127"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"figo2127"},"content":"        } catch (IOException e) {"},{"lineNumber":103,"author":{"gitId":"figo2127"},"content":"            throw new DukeException(\"Fail to load data. \" + e);"},{"lineNumber":104,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"figo2127"},"content":"        return ledger;"},{"lineNumber":106,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":108,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"figo2127"},"content":"     * Saves the list of Tasks into a file to be recovered the"},{"lineNumber":110,"author":{"gitId":"figo2127"},"content":"     * next time the user needs it."},{"lineNumber":111,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":112,"author":{"gitId":"figo2127"},"content":"     * @param tasks An ArrayList of Tasks"},{"lineNumber":113,"author":{"gitId":"figo2127"},"content":"     * @throws DukeException If data could not be saved"},{"lineNumber":114,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":115,"author":{"gitId":"figo2127"},"content":"    public void saveTasksData(ArrayList\u003cTask\u003e tasks) throws DukeException {"},{"lineNumber":116,"author":{"gitId":"figo2127"},"content":"        try {"},{"lineNumber":117,"author":{"gitId":"figo2127"},"content":"            ArrayList\u003cString\u003e ledger \u003d new ArrayList\u003c\u003e();"},{"lineNumber":118,"author":{"gitId":"figo2127"},"content":"            for (Task t : tasks) {"},{"lineNumber":119,"author":{"gitId":"figo2127"},"content":"                String s \u003d t.getTaskDetails();"},{"lineNumber":120,"author":{"gitId":"figo2127"},"content":"                ledger.add(s);"},{"lineNumber":121,"author":{"gitId":"figo2127"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"figo2127"},"content":"            Files.write(saveFilePathForTasks, ledger);"},{"lineNumber":123,"author":{"gitId":"figo2127"},"content":"        } catch (IOException e) {"},{"lineNumber":124,"author":{"gitId":"figo2127"},"content":"            throw new DukeException(\"Fail to save data. \" + e);"},{"lineNumber":125,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":128,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"figo2127"},"content":"     * Returns an ArrayList of Expenses by attempting to load that information from a stored file."},{"lineNumber":130,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":131,"author":{"gitId":"figo2127"},"content":"     * @return ArrayList of Expenses"},{"lineNumber":132,"author":{"gitId":"figo2127"},"content":"     * @throws DukeException If data could not be loaded"},{"lineNumber":133,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":134,"author":{"gitId":"figo2127"},"content":"    public ArrayList\u003cExpense\u003e loadExpensesData() throws DukeException {"},{"lineNumber":135,"author":{"gitId":"figo2127"},"content":"        ArrayList\u003cExpense\u003e ledger \u003d new ArrayList\u003c\u003e();"},{"lineNumber":136,"author":{"gitId":"figo2127"},"content":"        try {"},{"lineNumber":137,"author":{"gitId":"figo2127"},"content":"            BufferedReader bufferedReader \u003d Files.newBufferedReader(saveFilePathForExpenses);"},{"lineNumber":138,"author":{"gitId":"figo2127"},"content":"            String record \u003d bufferedReader.readLine();"},{"lineNumber":139,"author":{"gitId":"figo2127"},"content":"            while (record !\u003d null) {"},{"lineNumber":140,"author":{"gitId":"figo2127"},"content":"                ledger.add(stringToExpense(record));"},{"lineNumber":141,"author":{"gitId":"figo2127"},"content":"                record \u003d bufferedReader.readLine();"},{"lineNumber":142,"author":{"gitId":"figo2127"},"content":"            }"},{"lineNumber":143,"author":{"gitId":"figo2127"},"content":"        } catch (IOException e) {"},{"lineNumber":144,"author":{"gitId":"figo2127"},"content":"            throw new DukeException(\"Fail to load expense data. \" + e);"},{"lineNumber":145,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"figo2127"},"content":"        return ledger;"},{"lineNumber":147,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":149,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":150,"author":{"gitId":"figo2127"},"content":"     * Saves the list of Expenses into a file to be recovered the"},{"lineNumber":151,"author":{"gitId":"figo2127"},"content":"     * next time the user needs it."},{"lineNumber":152,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":153,"author":{"gitId":"figo2127"},"content":"     * @param expenses An ArrayList of Expenses"},{"lineNumber":154,"author":{"gitId":"figo2127"},"content":"     * @throws DukeException If data could not be saved"},{"lineNumber":155,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":156,"author":{"gitId":"figo2127"},"content":"    public void saveExpensesData(ArrayList\u003cExpense\u003e expenses) throws DukeException {"},{"lineNumber":157,"author":{"gitId":"figo2127"},"content":"        try {"},{"lineNumber":158,"author":{"gitId":"figo2127"},"content":"            ArrayList\u003cString\u003e ledger \u003d new ArrayList\u003c\u003e();"},{"lineNumber":159,"author":{"gitId":"figo2127"},"content":"            for (Expense expense : expenses) {"},{"lineNumber":160,"author":{"gitId":"figo2127"},"content":"                String s \u003d expense.getExpenseDetails();"},{"lineNumber":161,"author":{"gitId":"figo2127"},"content":"                ledger.add(s);"},{"lineNumber":162,"author":{"gitId":"figo2127"},"content":"            }"},{"lineNumber":163,"author":{"gitId":"figo2127"},"content":"            Files.write(saveFilePathForExpenses, ledger);"},{"lineNumber":164,"author":{"gitId":"figo2127"},"content":"        } catch (IOException e) {"},{"lineNumber":165,"author":{"gitId":"figo2127"},"content":"            throw new DukeException(\"Fail to save data. \" + e);"},{"lineNumber":166,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":169,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":170,"author":{"gitId":"figo2127"},"content":"     * Returns an Expense object by taking in a String of expense information."},{"lineNumber":171,"author":{"gitId":"figo2127"},"content":"     * This String is of fixed format which facilitates the saving and loading of information."},{"lineNumber":172,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":173,"author":{"gitId":"figo2127"},"content":"     * @param expenseInfo String of expense information"},{"lineNumber":174,"author":{"gitId":"figo2127"},"content":"     * @return The corresponding Expense object"},{"lineNumber":175,"author":{"gitId":"figo2127"},"content":"     * @throws DukeException If expense could not be created successfully due to input error"},{"lineNumber":176,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":177,"author":{"gitId":"figo2127"},"content":"    private static Expense stringToExpense(String expenseInfo) throws DukeException {"},{"lineNumber":178,"author":{"gitId":"figo2127"},"content":"        String[] savedRecord \u003d expenseInfo.split(\"\\\\|\");"},{"lineNumber":179,"author":{"gitId":"figo2127"},"content":"        Expense output;"},{"lineNumber":180,"author":{"gitId":"figo2127"},"content":"        String desciption \u003d savedRecord[0].strip();"},{"lineNumber":181,"author":{"gitId":"figo2127"},"content":"        String amountInStr \u003d savedRecord[1].strip();"},{"lineNumber":182,"author":{"gitId":"figo2127"},"content":"        double amount \u003d Double.parseDouble(amountInStr);"},{"lineNumber":183,"author":{"gitId":"figo2127"},"content":"        String dateInStr \u003d savedRecord[2].strip();"},{"lineNumber":184,"author":{"gitId":"figo2127"},"content":"        LocalDate date \u003d LocalDate.parse(dateInStr);"},{"lineNumber":185,"author":{"gitId":"figo2127"},"content":"        try {"},{"lineNumber":186,"author":{"gitId":"figo2127"},"content":"            output \u003d new Expense(desciption, amount, date);"},{"lineNumber":187,"author":{"gitId":"figo2127"},"content":"        } catch (IllegalArgumentException e) {"},{"lineNumber":188,"author":{"gitId":"figo2127"},"content":"            throw new DukeException(\"Datatype error in String to Expense conversion\");"},{"lineNumber":189,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"figo2127"},"content":"        return output;"},{"lineNumber":191,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":192,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":193,"author":{"gitId":"figo2127"},"content":"     * Returns a Task which is converted from an input String."},{"lineNumber":194,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":195,"author":{"gitId":"figo2127"},"content":"     * @param taskInfo String containing information about the Task"},{"lineNumber":196,"author":{"gitId":"figo2127"},"content":"     * @return Task"},{"lineNumber":197,"author":{"gitId":"figo2127"},"content":"     * @throws DukeException If task could not be created successfully due to input error"},{"lineNumber":198,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":199,"author":{"gitId":"figo2127"},"content":"    private static Task stringToTask(String taskInfo) throws DukeException {"},{"lineNumber":200,"author":{"gitId":"figo2127"},"content":"        String[] savedRecord \u003d taskInfo.split(\"\\\\|\");"},{"lineNumber":201,"author":{"gitId":"figo2127"},"content":"        Task output;"},{"lineNumber":202,"author":{"gitId":"figo2127"},"content":"        String taskType \u003d savedRecord[0].strip();"},{"lineNumber":203,"author":{"gitId":"figo2127"},"content":"        boolean isDone \u003d savedRecord[1].strip().equals(\"1\");"},{"lineNumber":204,"author":{"gitId":"figo2127"},"content":"        String description \u003d savedRecord[2].strip();"},{"lineNumber":205,"author":{"gitId":"figo2127"},"content":"        switch(taskType) {"},{"lineNumber":206,"author":{"gitId":"figo2127"},"content":"        case \"T\":"},{"lineNumber":207,"author":{"gitId":"figo2127"},"content":"            output \u003d new ToDoTask(description, isDone);"},{"lineNumber":208,"author":{"gitId":"figo2127"},"content":"            break;"},{"lineNumber":209,"author":{"gitId":"figo2127"},"content":"        case \"D\":"},{"lineNumber":210,"author":{"gitId":"figo2127"},"content":"            String by \u003d savedRecord[3].strip();"},{"lineNumber":211,"author":{"gitId":"figo2127"},"content":"            LocalDate byDate \u003d LocalDate.parse(by);"},{"lineNumber":212,"author":{"gitId":"figo2127"},"content":"            String byTime \u003d savedRecord[4].strip();"},{"lineNumber":213,"author":{"gitId":"figo2127"},"content":"            LocalTime byLocalTime \u003d LocalTime.parse(byTime);"},{"lineNumber":214,"author":{"gitId":"figo2127"},"content":"            output \u003d new DeadlineTask(description, isDone, byDate, byLocalTime);"},{"lineNumber":215,"author":{"gitId":"figo2127"},"content":"            break;"},{"lineNumber":216,"author":{"gitId":"figo2127"},"content":"        case \"E\":"},{"lineNumber":217,"author":{"gitId":"figo2127"},"content":"            String at \u003d savedRecord[3].strip();"},{"lineNumber":218,"author":{"gitId":"figo2127"},"content":"            LocalDate atDate \u003d LocalDate.parse(at);"},{"lineNumber":219,"author":{"gitId":"figo2127"},"content":"            String atTime \u003d savedRecord[4].strip();"},{"lineNumber":220,"author":{"gitId":"figo2127"},"content":"            LocalTime atLocalTime \u003d LocalTime.parse(atTime);"},{"lineNumber":221,"author":{"gitId":"figo2127"},"content":"            output \u003d new EventTask(description, isDone, atDate, atLocalTime);"},{"lineNumber":222,"author":{"gitId":"figo2127"},"content":"            break;"},{"lineNumber":223,"author":{"gitId":"figo2127"},"content":"        default:"},{"lineNumber":224,"author":{"gitId":"figo2127"},"content":"            throw new DukeException(\"Unexpected value: \" + taskType);"},{"lineNumber":225,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":226,"author":{"gitId":"figo2127"},"content":"        return output;"},{"lineNumber":227,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":228,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":228}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"import duke.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"public class TaskList {"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"    public TaskList() {"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"     * Constructs a TaskList object."},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":"     * @param tasks ArrayList of Tasks"},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":21,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":23,"author":{"gitId":"figo2127"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":24,"author":{"gitId":"figo2127"},"content":"        return tasks;"},{"lineNumber":25,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":27,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"figo2127"},"content":"     * Deletes a task at the index given from the taskList."},{"lineNumber":29,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"figo2127"},"content":"     * @param index index of task to be deleted, 1-Indexing"},{"lineNumber":31,"author":{"gitId":"figo2127"},"content":"     * @return Task deleted"},{"lineNumber":32,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"figo2127"},"content":"    public Task delete(int index) {"},{"lineNumber":34,"author":{"gitId":"figo2127"},"content":"        assert(index \u003e\u003d 0);"},{"lineNumber":35,"author":{"gitId":"figo2127"},"content":"        return tasks.remove(index - 1);"},{"lineNumber":36,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":38,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"figo2127"},"content":"     * Marks the task given by index to be done."},{"lineNumber":40,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"figo2127"},"content":"     * @param index the index of task to be marked as done, 1-Indexing"},{"lineNumber":42,"author":{"gitId":"figo2127"},"content":"     * @return Task marked done"},{"lineNumber":43,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"figo2127"},"content":"    public Task mark(int index) {"},{"lineNumber":45,"author":{"gitId":"figo2127"},"content":"        assert(index \u003e\u003d 0);"},{"lineNumber":46,"author":{"gitId":"figo2127"},"content":"        Task task \u003d tasks.get(index - 1);"},{"lineNumber":47,"author":{"gitId":"figo2127"},"content":"        task.markAsDone();"},{"lineNumber":48,"author":{"gitId":"figo2127"},"content":"        return task;"},{"lineNumber":49,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":51,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"figo2127"},"content":"     * Returns a list of tasks which matches the keyword."},{"lineNumber":53,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"figo2127"},"content":"     * @param keyword the keyword user input"},{"lineNumber":55,"author":{"gitId":"figo2127"},"content":"     * @return list of tasks containing the keyword"},{"lineNumber":56,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"figo2127"},"content":"    public TaskList find(String keyword) {"},{"lineNumber":58,"author":{"gitId":"figo2127"},"content":"        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();"},{"lineNumber":59,"author":{"gitId":"figo2127"},"content":"        for (Task task : tasks) {"},{"lineNumber":60,"author":{"gitId":"figo2127"},"content":"            boolean gotKeyword \u003d task.getDescription().contains(keyword);"},{"lineNumber":61,"author":{"gitId":"figo2127"},"content":"            if (gotKeyword) {"},{"lineNumber":62,"author":{"gitId":"figo2127"},"content":"                arr.add(task);"},{"lineNumber":63,"author":{"gitId":"figo2127"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"figo2127"},"content":"        return new TaskList(arr);"},{"lineNumber":66,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":68,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"figo2127"},"content":"     * Adds a new Task into the TaskList."},{"lineNumber":70,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"figo2127"},"content":"     * @param task Task to be added"},{"lineNumber":72,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"figo2127"},"content":"    public void add(Task task) {"},{"lineNumber":74,"author":{"gitId":"figo2127"},"content":"        assert(task !\u003d null);"},{"lineNumber":75,"author":{"gitId":"figo2127"},"content":"        tasks.add(task);"},{"lineNumber":76,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":77}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"    private final String[] HELLO \u003d {"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"            System.lineSeparator() + \" _____ ____  ____  _  __ _____ ____ \""},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"                    + System.lineSeparator()"},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"                    + \"/__ __Y  _ \\\\/ ___\\\\/ |/ //  __//  __\\\\\""},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"                    + System.lineSeparator()"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"                    + \"  / \\\\ | / \\\\||    \\\\|   / |  \\\\  |  \\\\/|\""},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"                    + System.lineSeparator()"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":"                    + \"  | | | |-||\\\\___ ||   \\\\ |  /_ |    /\""},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"                    + System.lineSeparator()"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"                    + \"  \\\\_/ \\\\_/ \\\\|\\\\____/\\\\_|\\\\_\\\\\\\\____\\\\\\\\_/\\\\_\\\\\", \"Sup sup! I\u0027m Tasker :)\""},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"    };"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"    private final String[] GOODBYE \u003d {"},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"            System.lineSeparator() + \" _____ ____  ____  ____  ____ ___  _ _____\" + System.lineSeparator()"},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":"                    + \"/  __//  _ \\\\/  _ \\\\/  _ \\\\/  _ \\\\\\\\  \\\\///  __/\" + System.lineSeparator()"},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":"                    + \"| |  _| / \\\\|| / \\\\|| | \\\\|| | // \\\\  / |  \\\\  \" + System.lineSeparator()"},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":"                    + \"| |_//| \\\\_/|| \\\\_/|| |_/|| |_\\\\\\\\ / /  |  /_ \" + System.lineSeparator()"},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":"                    + \"\\\\____\\\\\\\\____/\\\\____/\\\\____/\\\\____//_/   \\\\____\\\\\", \"Till next time :)\""},{"lineNumber":21,"author":{"gitId":"figo2127"},"content":"    };"},{"lineNumber":22,"author":{"gitId":"figo2127"},"content":"    private final String[] READY \u003d {"},{"lineNumber":23,"author":{"gitId":"figo2127"},"content":"            System.lineSeparator() + \"Tasker is ready :)\""},{"lineNumber":24,"author":{"gitId":"figo2127"},"content":"    };"},{"lineNumber":25,"author":{"gitId":"figo2127"},"content":"    private final String[] LOADING_ERROR \u003d {"},{"lineNumber":26,"author":{"gitId":"figo2127"},"content":"            System.lineSeparator() + \"Something went wrong :(\""},{"lineNumber":27,"author":{"gitId":"figo2127"},"content":"    };"},{"lineNumber":28,"author":{"gitId":"figo2127"},"content":"    private final String LINE_PARTITION \u003d \"_______________________________\" + \"___________________________________\""},{"lineNumber":29,"author":{"gitId":"figo2127"},"content":"                    + \"_______________________________________________________\""},{"lineNumber":30,"author":{"gitId":"figo2127"},"content":"                    + \"_____________________________________________________________\" + System.lineSeparator();"},{"lineNumber":31,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":32,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"figo2127"},"content":"     * Returns a String of generated message which will be printed later on."},{"lineNumber":34,"author":{"gitId":"figo2127"},"content":"     * @param messages a String array that contains the message body."},{"lineNumber":35,"author":{"gitId":"figo2127"},"content":"     * @return the generated message for the user."},{"lineNumber":36,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"figo2127"},"content":"    public String generateMessage(String[] messages) {"},{"lineNumber":38,"author":{"gitId":"figo2127"},"content":"        StringBuilder output \u003d new StringBuilder(LINE_PARTITION);"},{"lineNumber":39,"author":{"gitId":"figo2127"},"content":"        for (String message : messages) {"},{"lineNumber":40,"author":{"gitId":"figo2127"},"content":"            output.append(message).append(System.lineSeparator());"},{"lineNumber":41,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"figo2127"},"content":"        output.append(LINE_PARTITION);"},{"lineNumber":43,"author":{"gitId":"figo2127"},"content":"        return output.toString();"},{"lineNumber":44,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":46,"author":{"gitId":"figo2127"},"content":"    public void showLoadingError() {"},{"lineNumber":47,"author":{"gitId":"figo2127"},"content":"        System.out.println(generateMessage(LOADING_ERROR));"},{"lineNumber":48,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"figo2127"},"content":"    public void greetUser() {"},{"lineNumber":50,"author":{"gitId":"figo2127"},"content":"        System.out.println(generateMessage(HELLO));"},{"lineNumber":51,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"figo2127"},"content":"    public void indicateReady() {"},{"lineNumber":53,"author":{"gitId":"figo2127"},"content":"        System.out.println(generateMessage(READY));"},{"lineNumber":54,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"figo2127"},"content":"    public void sayGoodbye() {"},{"lineNumber":56,"author":{"gitId":"figo2127"},"content":"        System.out.println(generateMessage(GOODBYE));"},{"lineNumber":57,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":58}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"    private final String errMsg;"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"     * Constructs a DukeException object."},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"     * @param errMsg Error message"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"    public DukeException(String errMsg) {"},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"        super(errMsg);"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":"        this.errMsg \u003d errMsg;"},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"    public String getErrMsg() {"},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"        return errMsg;"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":16}},{"path":"src/main/java/duke/exceptions/ParseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":" * Extends RuntimeException and is used when parsing fails."},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":" */"},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"public class ParseException extends RuntimeException {"},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"    private final String errMsg;"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":"     * Returns a ParseException exception with given error message."},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"     * @param errMsg error message"},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"    public ParseException(String errMsg) {"},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"        super(errMsg);"},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":"        this.errMsg \u003d errMsg;"},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":"    public String getErrMsg() {"},{"lineNumber":21,"author":{"gitId":"figo2127"},"content":"        return errMsg;"},{"lineNumber":22,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":23}},{"path":"src/main/java/duke/expenses/Expense.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"package duke.expenses;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"public class Expense {"},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"    private String description;"},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"    private double cashAmount;"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"    private LocalDate dateOfTransaction;"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":"     * Constructs an Expense object."},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"     * @param description String describing what the expense is about"},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"     * @param cashAmount Cash Amount spent"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"     * @param dateOfTransaction Date the expense is made"},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"     * @throws IllegalArgumentException when the type of input is invalid"},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":"    public Expense(String description, double cashAmount, LocalDate dateOfTransaction) throws IllegalArgumentException {"},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":"        assert(cashAmount \u003e 0);"},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":"        this.description \u003d description;"},{"lineNumber":21,"author":{"gitId":"figo2127"},"content":"        this.cashAmount \u003d cashAmount;"},{"lineNumber":22,"author":{"gitId":"figo2127"},"content":"        this.dateOfTransaction \u003d dateOfTransaction;"},{"lineNumber":23,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":25,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"figo2127"},"content":"     * Returns a String of description of an Expense object."},{"lineNumber":27,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"figo2127"},"content":"     * @return String of description"},{"lineNumber":29,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"figo2127"},"content":"    public String getDescription() {"},{"lineNumber":31,"author":{"gitId":"figo2127"},"content":"        return description;"},{"lineNumber":32,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":34,"author":{"gitId":"figo2127"},"content":"    public double getCashAmount() {"},{"lineNumber":35,"author":{"gitId":"figo2127"},"content":"        return cashAmount;"},{"lineNumber":36,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":38,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"figo2127"},"content":"     * Returns a String describing an Expense object, which includes"},{"lineNumber":40,"author":{"gitId":"figo2127"},"content":"     * description, cash amount, and the date of expense."},{"lineNumber":41,"author":{"gitId":"figo2127"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"figo2127"},"content":"     * @return String describing an Expense"},{"lineNumber":43,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"figo2127"},"content":"    public String toString() {"},{"lineNumber":45,"author":{"gitId":"figo2127"},"content":"        StringBuffer buffer \u003d new StringBuffer();"},{"lineNumber":46,"author":{"gitId":"figo2127"},"content":"        buffer.append(\"Way: \").append(description).append(\", Amount: \").append(cashAmount)"},{"lineNumber":47,"author":{"gitId":"figo2127"},"content":"                .append(\", Date: \").append(dateOfTransaction);"},{"lineNumber":48,"author":{"gitId":"figo2127"},"content":"        return buffer.toString();"},{"lineNumber":49,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":51,"author":{"gitId":"figo2127"},"content":"    public String getExpenseDetails() {"},{"lineNumber":52,"author":{"gitId":"figo2127"},"content":"        String divider \u003d \" | \";"},{"lineNumber":53,"author":{"gitId":"figo2127"},"content":"        return description + divider + cashAmount + divider + dateOfTransaction;"},{"lineNumber":54,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":55}},{"path":"src/main/java/duke/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"public class DeadlineTask extends Task {"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"    private LocalDate byDate;"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"    private LocalTime time;"},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"     * Creates a DeadlineTask object."},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"     * @param description description of DeadlineTask"},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"     * @param isDone true if deadlineTask is done"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"     * @param byDate deadline date"},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"     * @param time time on deadline date"},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":"    public DeadlineTask(String description, boolean isDone, LocalDate byDate, LocalTime time) {"},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":"        super(description);"},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":"        super.isDone \u003d isDone;"},{"lineNumber":21,"author":{"gitId":"figo2127"},"content":"        this.time \u003d time;"},{"lineNumber":22,"author":{"gitId":"figo2127"},"content":"        this.byDate \u003d byDate;"},{"lineNumber":23,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":25,"author":{"gitId":"figo2127"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"figo2127"},"content":"    public String toString() {"},{"lineNumber":27,"author":{"gitId":"figo2127"},"content":"        if (this.byDate !\u003d null) {"},{"lineNumber":28,"author":{"gitId":"figo2127"},"content":"            return \"[D] \" + super.toString() + \" (by: \""},{"lineNumber":29,"author":{"gitId":"figo2127"},"content":"                    + this.byDate.format(DateTimeFormatter.ofPattern(\"yyyy/MM/dd\")) + \", time: \" + time + \")\";"},{"lineNumber":30,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"figo2127"},"content":"        //error prone line below"},{"lineNumber":32,"author":{"gitId":"figo2127"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + this.byDate + \" time: \" + time + \")\";"},{"lineNumber":33,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":35,"author":{"gitId":"figo2127"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"figo2127"},"content":"    public String getTaskDetails() {"},{"lineNumber":37,"author":{"gitId":"figo2127"},"content":"        String divider \u003d \" | \";"},{"lineNumber":38,"author":{"gitId":"figo2127"},"content":"        return \"D\" + divider"},{"lineNumber":39,"author":{"gitId":"figo2127"},"content":"                + (isDone ? \"1\" : \"0\") + divider"},{"lineNumber":40,"author":{"gitId":"figo2127"},"content":"                + description + divider"},{"lineNumber":41,"author":{"gitId":"figo2127"},"content":"                + byDate + divider + time;"},{"lineNumber":42,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":43}},{"path":"src/main/java/duke/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"public class EventTask extends Task {"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"    /** Date of event **/"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"    private LocalDate atDate;"},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"    /** Time of event **/"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":"    private LocalTime time;"},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"     * Constructs an EventTask object."},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"     * @param description Descriptions of the event"},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"     * @param isDone Boolean on whether the event is attended already"},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":"     * @param atDate Date of event"},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":"     * @param time Time of event"},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":"    public EventTask(String description, boolean isDone,"},{"lineNumber":21,"author":{"gitId":"figo2127"},"content":"                     LocalDate atDate, LocalTime time) {"},{"lineNumber":22,"author":{"gitId":"figo2127"},"content":"        super(description);"},{"lineNumber":23,"author":{"gitId":"figo2127"},"content":"        super.isDone \u003d isDone;"},{"lineNumber":24,"author":{"gitId":"figo2127"},"content":"        this.atDate \u003d atDate;"},{"lineNumber":25,"author":{"gitId":"figo2127"},"content":"        this.time \u003d time;"},{"lineNumber":26,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":28,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"figo2127"},"content":"     * Returns a String that provides details of an EventTask"},{"lineNumber":30,"author":{"gitId":"figo2127"},"content":"     * with a unique header."},{"lineNumber":31,"author":{"gitId":"figo2127"},"content":"     * @return String"},{"lineNumber":32,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"figo2127"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"figo2127"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"figo2127"},"content":"        if (this.atDate !\u003d null) {"},{"lineNumber":36,"author":{"gitId":"figo2127"},"content":"            return \"[E] \" + super.toString() + \" (by: \""},{"lineNumber":37,"author":{"gitId":"figo2127"},"content":"                    + this.atDate.format("},{"lineNumber":38,"author":{"gitId":"figo2127"},"content":"                            DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"))"},{"lineNumber":39,"author":{"gitId":"figo2127"},"content":"                    + \", time: \" + time + \")\";"},{"lineNumber":40,"author":{"gitId":"figo2127"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"figo2127"},"content":"        //error prone line below"},{"lineNumber":42,"author":{"gitId":"figo2127"},"content":"        return \"[E] \" + super.toString() + \" (by: \" + this.atDate + \")\";"},{"lineNumber":43,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":45,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"figo2127"},"content":"     * Returns a String that provides details of an EventTask."},{"lineNumber":47,"author":{"gitId":"figo2127"},"content":"     * @return String"},{"lineNumber":48,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"figo2127"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"figo2127"},"content":"    public String getTaskDetails() {"},{"lineNumber":51,"author":{"gitId":"figo2127"},"content":"        String divider \u003d \" | \";"},{"lineNumber":52,"author":{"gitId":"figo2127"},"content":"        return \"E\" + divider"},{"lineNumber":53,"author":{"gitId":"figo2127"},"content":"                + (isDone ? \"1\" : \"0\") + divider"},{"lineNumber":54,"author":{"gitId":"figo2127"},"content":"                + description + divider"},{"lineNumber":55,"author":{"gitId":"figo2127"},"content":"                + atDate + divider + time;"},{"lineNumber":56,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":57}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"     * Creates a Task object"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"     * @param description"},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":"    public Task(String description) {"},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"        this.description \u003d description;"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"        this.isDone \u003d false;"},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"    public String getStatusIcon() {"},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":"        return (isDone ? \"[\\u2713]\" : \"[ ]\");"},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":"        //return tick or X symbols"},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":21,"author":{"gitId":"figo2127"},"content":"    public void markAsDone() {"},{"lineNumber":22,"author":{"gitId":"figo2127"},"content":"        this.isDone \u003d true;"},{"lineNumber":23,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":25,"author":{"gitId":"figo2127"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"figo2127"},"content":"        return this.getStatusIcon() + \" \" + description;"},{"lineNumber":27,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":29,"author":{"gitId":"figo2127"},"content":"    public String getDescription() {"},{"lineNumber":30,"author":{"gitId":"figo2127"},"content":"        return description;"},{"lineNumber":31,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":33,"author":{"gitId":"figo2127"},"content":"    public String getTaskDetails() {"},{"lineNumber":34,"author":{"gitId":"figo2127"},"content":"        return (isDone ? \"1\" : \"0\") + \" | \""},{"lineNumber":35,"author":{"gitId":"figo2127"},"content":"                + description;"},{"lineNumber":36,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":37}},{"path":"src/main/java/duke/tasks/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"public class ToDoTask extends Task {"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"     * Creates a ToDoTask object."},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"     * @param description"},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"     * @param isDone"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"    public ToDoTask(String description, boolean isDone) {"},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":"        super.isDone \u003d isDone;"},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"        return \"[T] \" + super.toString();"},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":"    public String getTaskDetails() {"},{"lineNumber":21,"author":{"gitId":"figo2127"},"content":"        String divider \u003d \" | \";"},{"lineNumber":22,"author":{"gitId":"figo2127"},"content":"        return \"T\" + divider"},{"lineNumber":23,"author":{"gitId":"figo2127"},"content":"                + (isDone ? \"1\" : \"0\") + divider"},{"lineNumber":24,"author":{"gitId":"figo2127"},"content":"                + description;"},{"lineNumber":25,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":26}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\" /\u003e"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"figo2127":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Enter your message\" style\u003d\"-fx-background-color: #ffffed;\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #9bf542;\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-border-color: #00FF00;\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"399.0\" style\u003d\"-fx-background-color: #FFFFFF;\" /\u003e"},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"figo2127":19}},{"path":"src/test/java/duke/ToDoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"import duke.tasks.ToDoTask;"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":" * Tests the ToDoTask\u0027s constructor, as well as its toString method."},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":" */"},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"public class ToDoTaskTest {"},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"    public void dummyTest() {"},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"        ToDoTask task \u003d new ToDoTask(\"hello\", false);"},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"        assertEquals(task.toString(), \"[T] [ ] hello\");"},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":18}},{"path":"src/test/java/duke/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":""},{"lineNumber":7,"author":{"gitId":"figo2127"},"content":"public class UiTest {"},{"lineNumber":8,"author":{"gitId":"figo2127"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"figo2127"},"content":"    public void dummyTest() {"},{"lineNumber":10,"author":{"gitId":"figo2127"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":11,"author":{"gitId":"figo2127"},"content":"        String[] strArr \u003d new String[] {\"hello\", \"sup\", \"hi\"};"},{"lineNumber":12,"author":{"gitId":"figo2127"},"content":"        String linePartition \u003d \"__________________________________________________________________\""},{"lineNumber":13,"author":{"gitId":"figo2127"},"content":"                + \"_______________________________________________________\""},{"lineNumber":14,"author":{"gitId":"figo2127"},"content":"                + \"_____________________________________________________________\""},{"lineNumber":15,"author":{"gitId":"figo2127"},"content":"                + System.lineSeparator();"},{"lineNumber":16,"author":{"gitId":"figo2127"},"content":"        assertEquals(ui.generateMessage(strArr), linePartition + \"hello\" + System.lineSeparator()"},{"lineNumber":17,"author":{"gitId":"figo2127"},"content":"                + \"sup\" + System.lineSeparator() + \"hi\""},{"lineNumber":18,"author":{"gitId":"figo2127"},"content":"                + System.lineSeparator() + linePartition);"},{"lineNumber":19,"author":{"gitId":"figo2127"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"figo2127"},"content":"}"}],"authorContributionMap":{"figo2127":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"figo2127"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"figo2127"},"content":"list"},{"lineNumber":3,"author":{"gitId":"figo2127"},"content":"deadline return book /by 2019-03-21 time: 5pm"},{"lineNumber":4,"author":{"gitId":"figo2127"},"content":"event return horse /at 2017-02-01 time: 3am"},{"lineNumber":5,"author":{"gitId":"figo2127"},"content":"list"},{"lineNumber":6,"author":{"gitId":"figo2127"},"content":"bye"}],"authorContributionMap":{"figo2127":6}}]
