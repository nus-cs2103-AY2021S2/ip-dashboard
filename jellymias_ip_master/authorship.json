[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"import java.util.*;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"        System.out.println(\"How can I help you sir/maam?\");"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"        int index \u003d 0;"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"        boolean exit \u003d false;"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"        while (!exit) {"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"            try {"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"                String input \u003d sc.nextLine();"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"                String[] cmd \u003d input.split(\" \");"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"                if (cmd[0].equals(\"bye\")) {"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"                    System.out.println(\"Farewell sir/maam. Hope to see you again soon.\");"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"                    exit \u003d true;"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"                } else if (input.equals(\"todo\") || input.equals(\"deadline\") || input.equals(\"event\")) {"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"                    throw new DukeException(\"Please describe the nature of your task sir/maam.\");"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"                } else if (input.equals(\"list\")) {"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"                    System.out.println(\"Here are the tasks you requested to see sir/maam:\");"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"                    for (int i \u003d 0; i \u003c index; i++) {"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"                        System.out.println(String.valueOf(i + 1) + \".\" + tasks.get(i));"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"                    }"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"                } else if (input.equals(\"done\")) {"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"                    throw new DukeException(\"I apologise but I must ask you to specify the task you have conquered.\");"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"                } else if (cmd[0].equals(\"done\")) {"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"                    int taskNum \u003d Integer.parseInt(cmd[1]) - 1;"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"                    if (taskNum \u003e\u003d index || taskNum \u003c 0) {"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"                        throw new DukeException(\"I apologise but there is no such index in your list of tasks sir/maam.\");"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"                    } else {"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"                        String str \u003d tasks.get(taskNum).checkTask();"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"                        System.out.println(\"Well done. I have checked off this task. You are one step closer to victory after conquering:\");"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"                        System.out.println(str);"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"                    }"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"                } else if (cmd[0].equals(\"todo\") || cmd[0].equals(\"deadline\") || cmd[0].equals(\"event\")) {"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"                    if (cmd[0].equals(\"todo\")) {"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"                        System.out.println(\"Understood. I have added this task to the list:\");"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"                        Todo task \u003d new Todo(input);"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"                        tasks.add(task);"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"                    } else if (cmd[0].equals(\"deadline\")) {"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"                        Deadline task \u003d new Deadline(input);"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"                        if (task.isValidDeadline()) {"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"                            System.out.println(\"Understood. I have added this task to the list:\");"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"                            tasks.add(task);"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"                        } else {"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"                            throw new DukeException(\"Please specify the deadline for this task using /by.\");"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"                        }"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"                    } else if (cmd[0].equals(\"event\")) {"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"                        Event task \u003d new Event(input);"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"                        if (task.isValidDate()) {"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"                            System.out.println(\"Understood. I have added this task to the list:\");"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"                            tasks.add(task);"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"                        } else {"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"                            throw new DukeException(\"Please specify the date of this event using /at.\");"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"                        }"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"                    }"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"                    System.out.println(\"  \" + tasks.get(index));"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"                    index++;"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"                    System.out.println(String.format(\"Now you have %d tasks in the list.\", index));"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"                } else if (input.equals(\"delete\")) {"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"                    throw new DukeException(\"I apologise but I must ask you to specify which task you wish to remove.\");"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"                } else if (cmd[0].equals(\"delete\")) {"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"                    int taskNum \u003d Integer.parseInt(cmd[1]) - 1;"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"                    if (taskNum \u003e\u003d index || taskNum \u003c 0) {"},{"lineNumber":66,"author":{"gitId":"jellymias"},"content":"                        throw new DukeException(\"I am incapable of deleting something that does not exist sir/maam.\");"},{"lineNumber":67,"author":{"gitId":"jellymias"},"content":"                    } else {"},{"lineNumber":68,"author":{"gitId":"jellymias"},"content":"                        System.out.println(\"Understood. I shall remove this task off the list for you. I hope you are pleased.\");"},{"lineNumber":69,"author":{"gitId":"jellymias"},"content":"                        System.out.println(\"  \" + tasks.get(taskNum));"},{"lineNumber":70,"author":{"gitId":"jellymias"},"content":"                        tasks.remove(taskNum);"},{"lineNumber":71,"author":{"gitId":"jellymias"},"content":"                        index--;"},{"lineNumber":72,"author":{"gitId":"jellymias"},"content":"                        System.out.println(String.format(\"You now have %d tasks left on the list.\", index));"},{"lineNumber":73,"author":{"gitId":"jellymias"},"content":"                    }"},{"lineNumber":74,"author":{"gitId":"jellymias"},"content":"                } else {"},{"lineNumber":75,"author":{"gitId":"jellymias"},"content":"                    throw new DukeException(\"I am unable to comprehend what you have just said. I deeply regret my insufficiency.\");"},{"lineNumber":76,"author":{"gitId":"jellymias"},"content":"                }"},{"lineNumber":77,"author":{"gitId":"jellymias"},"content":"            } catch (DukeException e) {"},{"lineNumber":78,"author":{"gitId":"jellymias"},"content":"                System.out.println(e);"},{"lineNumber":79,"author":{"gitId":"jellymias"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}"},{"lineNumber":83,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":84,"author":{"gitId":"jellymias"},"content":"class Task {"},{"lineNumber":85,"author":{"gitId":"jellymias"},"content":"    public String command;"},{"lineNumber":86,"author":{"gitId":"jellymias"},"content":"    public boolean done;"},{"lineNumber":87,"author":{"gitId":"jellymias"},"content":"    static String CHECKED \u003d \"[X]\";"},{"lineNumber":88,"author":{"gitId":"jellymias"},"content":"    static String UNCHECKED \u003d \"[ ]\";"},{"lineNumber":89,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":90,"author":{"gitId":"jellymias"},"content":"    public Task(String command) {"},{"lineNumber":91,"author":{"gitId":"jellymias"},"content":"        this.command \u003d command;"},{"lineNumber":92,"author":{"gitId":"jellymias"},"content":"        this.done \u003d false;"},{"lineNumber":93,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":95,"author":{"gitId":"jellymias"},"content":"    public String checkTask() {"},{"lineNumber":96,"author":{"gitId":"jellymias"},"content":"        this.done \u003d true;"},{"lineNumber":97,"author":{"gitId":"jellymias"},"content":"        return \"  \" + this.toString();"},{"lineNumber":98,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":100,"author":{"gitId":"jellymias"},"content":"    public String toString() {"},{"lineNumber":101,"author":{"gitId":"jellymias"},"content":"        String str \u003d \"\";"},{"lineNumber":102,"author":{"gitId":"jellymias"},"content":"        if (done) {"},{"lineNumber":103,"author":{"gitId":"jellymias"},"content":"            str +\u003d CHECKED;"},{"lineNumber":104,"author":{"gitId":"jellymias"},"content":"        } else {"},{"lineNumber":105,"author":{"gitId":"jellymias"},"content":"            str +\u003d UNCHECKED;"},{"lineNumber":106,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"jellymias"},"content":"        str +\u003d \" \" + command;"},{"lineNumber":108,"author":{"gitId":"jellymias"},"content":"        return str;"},{"lineNumber":109,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"jellymias"},"content":"}"},{"lineNumber":111,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":112,"author":{"gitId":"jellymias"},"content":"class Todo extends Task {"},{"lineNumber":113,"author":{"gitId":"jellymias"},"content":"    public Todo(String command) {"},{"lineNumber":114,"author":{"gitId":"jellymias"},"content":"        super(command);"},{"lineNumber":115,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":117,"author":{"gitId":"jellymias"},"content":"    public String toString() {"},{"lineNumber":118,"author":{"gitId":"jellymias"},"content":"        String[] words \u003d command.split(\" \");"},{"lineNumber":119,"author":{"gitId":"jellymias"},"content":"        String str \u003d \"[T]\";"},{"lineNumber":120,"author":{"gitId":"jellymias"},"content":"        if (done) {"},{"lineNumber":121,"author":{"gitId":"jellymias"},"content":"            str +\u003d CHECKED;"},{"lineNumber":122,"author":{"gitId":"jellymias"},"content":"        } else {"},{"lineNumber":123,"author":{"gitId":"jellymias"},"content":"            str +\u003d UNCHECKED;"},{"lineNumber":124,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"jellymias"},"content":"        for (int i \u003d 1; i \u003c words.length; i++) {"},{"lineNumber":126,"author":{"gitId":"jellymias"},"content":"            str +\u003d \" \" + words[i];"},{"lineNumber":127,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"jellymias"},"content":"        return str;"},{"lineNumber":129,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"jellymias"},"content":"}"},{"lineNumber":131,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":132,"author":{"gitId":"jellymias"},"content":"class Deadline extends Task {"},{"lineNumber":133,"author":{"gitId":"jellymias"},"content":"    public Deadline(String command) {"},{"lineNumber":134,"author":{"gitId":"jellymias"},"content":"        super(command);"},{"lineNumber":135,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":137,"author":{"gitId":"jellymias"},"content":"    public int findDeadline() {"},{"lineNumber":138,"author":{"gitId":"jellymias"},"content":"        String[] str \u003d command.split(\" \");"},{"lineNumber":139,"author":{"gitId":"jellymias"},"content":"        boolean found \u003d false;"},{"lineNumber":140,"author":{"gitId":"jellymias"},"content":"        int index \u003d 0;"},{"lineNumber":141,"author":{"gitId":"jellymias"},"content":"        while (!found \u0026\u0026 index \u003c str.length) {"},{"lineNumber":142,"author":{"gitId":"jellymias"},"content":"            if (str[index].equals(\"/by\")) {"},{"lineNumber":143,"author":{"gitId":"jellymias"},"content":"                found \u003d true;"},{"lineNumber":144,"author":{"gitId":"jellymias"},"content":"            } else {"},{"lineNumber":145,"author":{"gitId":"jellymias"},"content":"                index++;"},{"lineNumber":146,"author":{"gitId":"jellymias"},"content":"            }"},{"lineNumber":147,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":148,"author":{"gitId":"jellymias"},"content":"        return index;"},{"lineNumber":149,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":151,"author":{"gitId":"jellymias"},"content":"    public boolean isValidDeadline() {"},{"lineNumber":152,"author":{"gitId":"jellymias"},"content":"        String[] str \u003d command.split(\" \");"},{"lineNumber":153,"author":{"gitId":"jellymias"},"content":"        if (this.findDeadline() \u003d\u003d str.length) {"},{"lineNumber":154,"author":{"gitId":"jellymias"},"content":"            return false;"},{"lineNumber":155,"author":{"gitId":"jellymias"},"content":"        } else {"},{"lineNumber":156,"author":{"gitId":"jellymias"},"content":"            return true;"},{"lineNumber":157,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":158,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":160,"author":{"gitId":"jellymias"},"content":"    public String toString() {"},{"lineNumber":161,"author":{"gitId":"jellymias"},"content":"        String[] words \u003d command.split(\" \");"},{"lineNumber":162,"author":{"gitId":"jellymias"},"content":"        String str \u003d \"[D]\";"},{"lineNumber":163,"author":{"gitId":"jellymias"},"content":"        if (done) {"},{"lineNumber":164,"author":{"gitId":"jellymias"},"content":"            str +\u003d CHECKED + \" \";"},{"lineNumber":165,"author":{"gitId":"jellymias"},"content":"        } else {"},{"lineNumber":166,"author":{"gitId":"jellymias"},"content":"            str +\u003d UNCHECKED + \" \";"},{"lineNumber":167,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"jellymias"},"content":"        int num \u003d findDeadline();"},{"lineNumber":169,"author":{"gitId":"jellymias"},"content":"        for (int i \u003d 1; i \u003c num; i++) {"},{"lineNumber":170,"author":{"gitId":"jellymias"},"content":"            str +\u003d words[i] + \" \";"},{"lineNumber":171,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"jellymias"},"content":"        str +\u003d \"(by:\";"},{"lineNumber":173,"author":{"gitId":"jellymias"},"content":"        for (int i \u003d num + 1; i \u003c words.length; i++) {"},{"lineNumber":174,"author":{"gitId":"jellymias"},"content":"            str +\u003d \" \" + words[i];"},{"lineNumber":175,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":176,"author":{"gitId":"jellymias"},"content":"        str +\u003d \")\";"},{"lineNumber":177,"author":{"gitId":"jellymias"},"content":"        return str;"},{"lineNumber":178,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"jellymias"},"content":"}"},{"lineNumber":180,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":181,"author":{"gitId":"jellymias"},"content":"class Event extends Task {"},{"lineNumber":182,"author":{"gitId":"jellymias"},"content":"    public Event(String command) {"},{"lineNumber":183,"author":{"gitId":"jellymias"},"content":"        super(command);"},{"lineNumber":184,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":185,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":186,"author":{"gitId":"jellymias"},"content":"    public int findDate() {"},{"lineNumber":187,"author":{"gitId":"jellymias"},"content":"        String[] str \u003d command.split(\" \");"},{"lineNumber":188,"author":{"gitId":"jellymias"},"content":"        boolean found \u003d false;"},{"lineNumber":189,"author":{"gitId":"jellymias"},"content":"        int index \u003d 0;"},{"lineNumber":190,"author":{"gitId":"jellymias"},"content":"        while (!found \u0026\u0026 index \u003c str.length) {"},{"lineNumber":191,"author":{"gitId":"jellymias"},"content":"            if (str[index].equals(\"/at\")) {"},{"lineNumber":192,"author":{"gitId":"jellymias"},"content":"                found \u003d true;"},{"lineNumber":193,"author":{"gitId":"jellymias"},"content":"            } else {"},{"lineNumber":194,"author":{"gitId":"jellymias"},"content":"                index++;"},{"lineNumber":195,"author":{"gitId":"jellymias"},"content":"            }"},{"lineNumber":196,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":197,"author":{"gitId":"jellymias"},"content":"        return index;"},{"lineNumber":198,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":199,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":200,"author":{"gitId":"jellymias"},"content":"    public boolean isValidDate() {"},{"lineNumber":201,"author":{"gitId":"jellymias"},"content":"        String[] str \u003d command.split(\" \");"},{"lineNumber":202,"author":{"gitId":"jellymias"},"content":"        if (this.findDate() \u003d\u003d str.length) {"},{"lineNumber":203,"author":{"gitId":"jellymias"},"content":"            return false;"},{"lineNumber":204,"author":{"gitId":"jellymias"},"content":"        } else {"},{"lineNumber":205,"author":{"gitId":"jellymias"},"content":"            return true;"},{"lineNumber":206,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":207,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":208,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":209,"author":{"gitId":"jellymias"},"content":"    public String toString() {"},{"lineNumber":210,"author":{"gitId":"jellymias"},"content":"        String[] words \u003d command.split(\" \");"},{"lineNumber":211,"author":{"gitId":"jellymias"},"content":"        String str \u003d \"[E]\";"},{"lineNumber":212,"author":{"gitId":"jellymias"},"content":"        if (done) {"},{"lineNumber":213,"author":{"gitId":"jellymias"},"content":"            str +\u003d CHECKED + \" \";"},{"lineNumber":214,"author":{"gitId":"jellymias"},"content":"        } else {"},{"lineNumber":215,"author":{"gitId":"jellymias"},"content":"            str +\u003d UNCHECKED + \" \";"},{"lineNumber":216,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":217,"author":{"gitId":"jellymias"},"content":"        int num \u003d findDate();"},{"lineNumber":218,"author":{"gitId":"jellymias"},"content":"        for (int i \u003d 1; i \u003c num; i++) {"},{"lineNumber":219,"author":{"gitId":"jellymias"},"content":"            str +\u003d words[i] + \" \";"},{"lineNumber":220,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":221,"author":{"gitId":"jellymias"},"content":"        str +\u003d \"(at:\";"},{"lineNumber":222,"author":{"gitId":"jellymias"},"content":"        for (int i \u003d num + 1; i \u003c words.length; i++) {"},{"lineNumber":223,"author":{"gitId":"jellymias"},"content":"            str +\u003d \" \" + words[i];"},{"lineNumber":224,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":225,"author":{"gitId":"jellymias"},"content":"        str +\u003d \")\";"},{"lineNumber":226,"author":{"gitId":"jellymias"},"content":"        return str;"},{"lineNumber":227,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":228,"author":{"gitId":"jellymias"},"content":"}"},{"lineNumber":229,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":230,"author":{"gitId":"jellymias"},"content":"class DukeException extends Exception {"},{"lineNumber":231,"author":{"gitId":"jellymias"},"content":"    DukeException(String message) {"},{"lineNumber":232,"author":{"gitId":"jellymias"},"content":"        super(message);"},{"lineNumber":233,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":234,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":230,"-":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"todo"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"todo read book"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"deadline"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"deadline return book"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"deadline return book /by Sunday"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"event"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"event project meeting"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"event project meeting /at 6th August 2pm - 4pm"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"list"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"done"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"done 4"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"done 2"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"list"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"rubbish"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"delete 0"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"delete 1"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"list"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"bye"}],"authorContributionMap":{"jellymias":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"if not exist \\Users\\Jeremias\\Documents\\Github\\ip\\bin mkdir \\Users\\Jeremias\\Documents\\Github\\ip\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"javac  -cp \\Users\\Jeremias\\Documents\\GitHub\\ip\\src\\main\\java -Xlint:none -d \\Users\\Jeremias\\Documents\\Github\\ip\\bin \\Users\\Jeremias\\Documents\\GitHub\\ip\\src\\main\\java\\Duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"java -classpath \\Users\\Jeremias\\Documents\\Github\\ip\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"jellymias":3,"-":18}}]
