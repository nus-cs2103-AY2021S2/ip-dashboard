[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"# duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"1. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"jellymias":2,"-":21}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jellymias":15,"-":45}},{"path":"data/contact.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"/name jeff  /number 98789878 /address "},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"/name micah richards /number 87256352 /address sheares hall"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"/name jacob lim /number 98982838 /address utown"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"/name jason /number 80804858 /address "},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"/name yannick /number 0 /address trinidad and tobago"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"/name david /number 98128712 /address valencia, spain"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"/name marouane /number 0 /address goodison park"}],"authorContributionMap":{"jellymias":7}},{"path":"data/task.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"D | X | stuff | by: 23-2-2021 1630"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"E | O | thingy | from: 14-2-2021 1800 | to: 15-3-2021 1800"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"T | O | submit "},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"D | X | assignment | by: 22-7-2021 0900"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"E | O | bday party | from: 25-12-2021 1800 | to: 25-12-2021 2359"}],"authorContributionMap":{"jellymias":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"Welcome to LukBot!"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"LukBot is here to help you keep track of your activities, as well as your friends!"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"When using LukBot, simply type \u0027help\u0027 if you are unsure of what you can do."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"### Managing Tasks"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"LukBot offers task management! You can add, remove, view and search for specific tasks. "},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"You can also mark your tasks as done if you have completed them. LukBot also allows you to "},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"categorise your tasks into three types: To-dos, Deadlines and Events! "},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"### Managing Contacts"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"LukBot also offers contact management! You can add, remove, edit and remove contacts. Keeping track"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"of your friends\u0027 phone numbers and addresses has never been easier!"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"## Commands"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"### Adding Tasks"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"* #### `todo` - Adds To-do"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"  Adds a **To-do** to your task list."},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"  "},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"Example of usage:"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"    todo Homework"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"Expected outcome:"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"    I have added the following task to your list:"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"    [T][ ] Homework"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"    There are 1 tasks in your list. I hope this pleases you."},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"* #### `deadline` - Adds Deadline"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"  Adds a **Deadline** to your task list."},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"Example of usage:"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"    deadline IP Submission /by 19/02/2021 2359"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"Expected outcome:"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"    I have added the following task to your list:"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"    [D][ ] IP submission (by: 19-02-2021 2359)"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"    There are 2 tasks in your list. I hope this pleases you."},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"* #### `event` - Adds Event"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"  Adds an **Event** to your task list."},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"Example of usage:"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"    event Xmas Party /from 25/12/2021 1700 /to 25/12/2021 2300"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"    I have added the following task to your list:"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"    [E][ ] Xmas Party (from: 25-12-2021 1700 - 25-12-2021 2300)"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"    There are 3 tasks in your list. I hope this pleases you."},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"### Managing Task List"},{"lineNumber":66,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":67,"author":{"gitId":"jellymias"},"content":"* #### `delete` - Deletes Task"},{"lineNumber":68,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":69,"author":{"gitId":"jellymias"},"content":"  **Delete** a task from your task list."},{"lineNumber":70,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":71,"author":{"gitId":"jellymias"},"content":"Example of usage:"},{"lineNumber":72,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":73,"author":{"gitId":"jellymias"},"content":"    delete 2"},{"lineNumber":74,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":75,"author":{"gitId":"jellymias"},"content":"Expected outcome:"},{"lineNumber":76,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":77,"author":{"gitId":"jellymias"},"content":"    I have removed the following task from your list:"},{"lineNumber":78,"author":{"gitId":"jellymias"},"content":"    [D][ ] IP submission (by: 19-02-2021 2359)"},{"lineNumber":79,"author":{"gitId":"jellymias"},"content":"    Does this bring you the satisfaction you so crave?"},{"lineNumber":80,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":81,"author":{"gitId":"jellymias"},"content":"* #### `done` - Checks Task"},{"lineNumber":82,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":83,"author":{"gitId":"jellymias"},"content":"  Marks a task from your task list as **Done**."},{"lineNumber":84,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":85,"author":{"gitId":"jellymias"},"content":"Example of usage:"},{"lineNumber":86,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":87,"author":{"gitId":"jellymias"},"content":"    done 1"},{"lineNumber":88,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":89,"author":{"gitId":"jellymias"},"content":"Expected outcome:"},{"lineNumber":90,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":91,"author":{"gitId":"jellymias"},"content":"    Congratulations on conquering this task:"},{"lineNumber":92,"author":{"gitId":"jellymias"},"content":"    [T][X] Homework"},{"lineNumber":93,"author":{"gitId":"jellymias"},"content":"    You are one step closer to victory"},{"lineNumber":94,"author":{"gitId":"-"},"content":""},{"lineNumber":95,"author":{"gitId":"jellymias"},"content":"* #### `find` - Finds Tasks"},{"lineNumber":96,"author":{"gitId":"-"},"content":""},{"lineNumber":97,"author":{"gitId":"jellymias"},"content":"  **Finds** tasks from your task list containing a *keyword*."},{"lineNumber":98,"author":{"gitId":"-"},"content":""},{"lineNumber":99,"author":{"gitId":"jellymias"},"content":"Example of usage:"},{"lineNumber":100,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":101,"author":{"gitId":"jellymias"},"content":"    find Xmas"},{"lineNumber":102,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":103,"author":{"gitId":"jellymias"},"content":"Expected outcome:"},{"lineNumber":104,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":105,"author":{"gitId":"jellymias"},"content":"    Here are the tasks that fit your search criteria:"},{"lineNumber":106,"author":{"gitId":"jellymias"},"content":"    [E][ ] Xmas Party (from: 25-12-2021 1700 - 25-12-2021 2300)"},{"lineNumber":107,"author":{"gitId":"jellymias"},"content":"    I can only pray that I have been of use to you."},{"lineNumber":108,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":109,"author":{"gitId":"jellymias"},"content":"* #### `list` - Lists Tasks"},{"lineNumber":110,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":111,"author":{"gitId":"jellymias"},"content":"  **List** all tasks from your task list."},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"jellymias"},"content":"    list"},{"lineNumber":116,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":117,"author":{"gitId":"jellymias"},"content":"Expected outcome:"},{"lineNumber":118,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":119,"author":{"gitId":"jellymias"},"content":"    Here are the tasks in your list:"},{"lineNumber":120,"author":{"gitId":"jellymias"},"content":"    1. [T][X] Homework"},{"lineNumber":121,"author":{"gitId":"jellymias"},"content":"    2. [E][ ] Xmas Party (from: 25-12-2021 1700 - 25-12-2021 2300)"},{"lineNumber":122,"author":{"gitId":"jellymias"},"content":"    Do what you will with this information."},{"lineNumber":123,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":124,"author":{"gitId":"jellymias"},"content":"### Managing Contacts"},{"lineNumber":125,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":126,"author":{"gitId":"jellymias"},"content":"* #### `contact add` - Adds Contact"},{"lineNumber":127,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":128,"author":{"gitId":"jellymias"},"content":"  **Adds** a contact to your contact list."},{"lineNumber":129,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":130,"author":{"gitId":"jellymias"},"content":"Examples of usage:"},{"lineNumber":131,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":132,"author":{"gitId":"jellymias"},"content":"    contact add /name Romelu /number 98765432 /address San Siro, Milan, Italy"},{"lineNumber":133,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":134,"author":{"gitId":"jellymias"},"content":"    contact add /name Fellaini /address Goodison Park, Liverpool, England"},{"lineNumber":135,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":136,"author":{"gitId":"jellymias"},"content":"    contact add /name Richard Tan /number 98128723"},{"lineNumber":137,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":138,"author":{"gitId":"jellymias"},"content":"Expected outcome:"},{"lineNumber":139,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":140,"author":{"gitId":"jellymias"},"content":"    I have added a new companion to your list of allies:"},{"lineNumber":141,"author":{"gitId":"jellymias"},"content":"    Romelu [Num: 98765432] [Address: San Siro, Milan, Italy]"},{"lineNumber":142,"author":{"gitId":"jellymias"},"content":"    Keep your friends close, and your enemies closer."},{"lineNumber":143,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":144,"author":{"gitId":"jellymias"},"content":"    I have added a new companion to your list of allies:"},{"lineNumber":145,"author":{"gitId":"jellymias"},"content":"    Fellaini [Address: Goodison Park, Liverpool, England]"},{"lineNumber":146,"author":{"gitId":"jellymias"},"content":"    Keep your friends close, and your enemies closer."},{"lineNumber":147,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":148,"author":{"gitId":"jellymias"},"content":"    I have added a new companion to your list of allies:"},{"lineNumber":149,"author":{"gitId":"jellymias"},"content":"    Richard Tan [Num: 98128723]"},{"lineNumber":150,"author":{"gitId":"jellymias"},"content":"    Keep your friends close, and your enemies closer."},{"lineNumber":151,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":152,"author":{"gitId":"jellymias"},"content":"* #### `contact delete` - Deletes Contact"},{"lineNumber":153,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":154,"author":{"gitId":"jellymias"},"content":"  **Delete** a contact from your contact list."},{"lineNumber":155,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":156,"author":{"gitId":"jellymias"},"content":"Examples of usage:"},{"lineNumber":157,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":158,"author":{"gitId":"jellymias"},"content":"    contact delete 3"},{"lineNumber":159,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":160,"author":{"gitId":"jellymias"},"content":"Expected outcome:"},{"lineNumber":161,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":162,"author":{"gitId":"jellymias"},"content":"    Friends turn to foes in a blink of an eye. I shall remove:"},{"lineNumber":163,"author":{"gitId":"jellymias"},"content":"    Richard Tan [Num: 98128723]    "},{"lineNumber":164,"author":{"gitId":"jellymias"},"content":"    I pray for your safety."},{"lineNumber":165,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":166,"author":{"gitId":"jellymias"},"content":"* #### `contact edit` - Edits Contact"},{"lineNumber":167,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":168,"author":{"gitId":"jellymias"},"content":"  **Edits** a contact from your contact list."},{"lineNumber":169,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":170,"author":{"gitId":"jellymias"},"content":"Examples of usage:"},{"lineNumber":171,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":172,"author":{"gitId":"jellymias"},"content":"    contact edit 1 /name Romelu Lukaku"},{"lineNumber":173,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":174,"author":{"gitId":"jellymias"},"content":"    contact edit 2 /number 91827364"},{"lineNumber":175,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":176,"author":{"gitId":"jellymias"},"content":"    contact edit 2 /address UTown Residence"},{"lineNumber":177,"author":{"gitId":"-"},"content":""},{"lineNumber":178,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":179,"author":{"gitId":"-"},"content":""},{"lineNumber":180,"author":{"gitId":"jellymias"},"content":"    Your mistake has been forgiven. Do check if this is the correct contact:"},{"lineNumber":181,"author":{"gitId":"jellymias"},"content":"    Romelu Lukaku [Num: 98765432] [Address: San Siro, Milan, Italy]"},{"lineNumber":182,"author":{"gitId":"jellymias"},"content":"    Feel free to make as many mistakes as you please. I am here to resolve all."},{"lineNumber":183,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":184,"author":{"gitId":"jellymias"},"content":"    Your mistake has been forgiven. Do check if this is the correct contact:"},{"lineNumber":185,"author":{"gitId":"jellymias"},"content":"    Fellaini [Num: 91827364] [Address: Goodison Park, Liverpool, England]"},{"lineNumber":186,"author":{"gitId":"jellymias"},"content":"    Feel free to make as many mistakes as you please. I am here to resolve all."},{"lineNumber":187,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":188,"author":{"gitId":"jellymias"},"content":"    Your mistake has been forgiven. Do check if this is the correct contact:"},{"lineNumber":189,"author":{"gitId":"jellymias"},"content":"    Fellaini [Num: 91827364] [Address: UTown Residence]"},{"lineNumber":190,"author":{"gitId":"jellymias"},"content":"    Feel free to make as many mistakes as you please. I am here to resolve all."},{"lineNumber":191,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":192,"author":{"gitId":"jellymias"},"content":"* #### `contact list` - List Contacts"},{"lineNumber":193,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":194,"author":{"gitId":"jellymias"},"content":"  **Lists** all contacts from your contact list."},{"lineNumber":195,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":196,"author":{"gitId":"jellymias"},"content":"Examples of usage:"},{"lineNumber":197,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":198,"author":{"gitId":"jellymias"},"content":"    contact list"},{"lineNumber":199,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":200,"author":{"gitId":"jellymias"},"content":"Expected outcome:"},{"lineNumber":201,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":202,"author":{"gitId":"jellymias"},"content":"    Here are your reliable comrades:"},{"lineNumber":203,"author":{"gitId":"jellymias"},"content":"    1. Romelu Lukaku [Num: 98765432] [Address: San Siro, Milan, Italy]"},{"lineNumber":204,"author":{"gitId":"jellymias"},"content":"    2. Fellaini [Num: 91827364] [Address: UTown Residence]"},{"lineNumber":205,"author":{"gitId":"jellymias"},"content":"    Do not fear to call upon their friendship."},{"lineNumber":206,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":207,"author":{"gitId":"jellymias"},"content":"## Acknowledgement"},{"lineNumber":208,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":209,"author":{"gitId":"jellymias"},"content":"Reused @banchiang code for GUI implementation."}],"authorContributionMap":{"jellymias":188,"-":21}},{"path":"src/main/java/duke/AddContactCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"public class AddContactCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"    private ContactList contactList;"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"    public AddContactCommand(String command, String input, TaskList taskList, ContactList contactList) {"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"        super(command, input, taskList);"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"        this.contactList \u003d contactList;"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"     * Checks if the user input is formatted into a correct Add Contact command."},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"     * If it is, it adds the contact and prints the Add Contact message."},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"     * Otherwise, it prints the exception faced."},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"     * @return Message to be printed."},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"    private String add() {"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"            if (parser.canParseAddContactCommand(input)) {"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"                String name \u003d parser.parseAddContactName(input);"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"                int number \u003d parser.parseAddContactNumber(input);"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"                String address \u003d parser.parseAddContactAddress(input);"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"                Contact contact \u003d new Contact(name, number, address);"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"                contactList.addContact(contact);"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"                return ui.getAddContact(contact);"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"            } else {"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"                throw new WrongFormatDukeException(command);"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"            }"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"        } catch (DukeException e) {"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"            return ui.getError(e);"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"     * Executes the add contact command."},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"     * @return Message of command."},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"    public String execute() {"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"        return add();"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":45}},{"path":"src/main/java/duke/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"public class AddTaskCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"    public AddTaskCommand(String command, String input, TaskList taskList) {"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"        super(command, input, taskList);"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"     * Checks if the user input is formatted into a correct To-do command."},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"     * If it is, it adds the To-do to the task list and prints the Add task message."},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"     * Otherwise, it prints the exception faced."},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"     * @return String of to-do task or error faced"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"    private String addTodo() {"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"            if (parser.canParseTodo(input)) {"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"                String description \u003d parser.parseTodoDescription(input);"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"                Task task \u003d new Todo(description);"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"                taskList.addTask(task);"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"                return ui.getAddTask(task, taskList.getSize());"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"            } else {"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"                throw new WrongFormatDukeException(command);"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"        } catch (DukeException e) {"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"            return ui.getError(e);"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"     * Checks if the user input is formatted into a correct Deadline command."},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"     * If it is, it adds the Deadline to the task list and prints the Add task message."},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"     * Otherwise, it prints the exception faced."},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"     * @return String of deadline task or error faced"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"    private String addDeadline() {"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"            if (parser.canParseDeadline(input)) {"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"                try {"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"                    LocalDateTime dateTime \u003d parser.parseDeadlineDate(input);"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"                    String description \u003d parser.parseDeadlineDescription(input);"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"                    Deadline task \u003d new Deadline(dateTime, description);"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"                    taskList.addTask(task);"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"                    return ui.getAddTask(task, taskList.getSize());"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"                } catch (DateTimeParseException e) {"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"                    return ui.getError(new WrongFormatDukeException(command));"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"                }"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"            } else {"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"                throw new WrongFormatDukeException(command);"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"        } catch (DukeException e) {"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"            return ui.getError(e);"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"     * Checks if the user input is formatted into a correct Event command."},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"     * If it is, it adds the Event to the task list and prints the Add task message."},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"     * Otherwise, it prints the exception faced."},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"jellymias"},"content":"     * @return String of event task or error faced."},{"lineNumber":67,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"jellymias"},"content":"    private String addEvent() {"},{"lineNumber":69,"author":{"gitId":"jellymias"},"content":"        try {"},{"lineNumber":70,"author":{"gitId":"jellymias"},"content":"            if (parser.canParseEvent(input)) {"},{"lineNumber":71,"author":{"gitId":"jellymias"},"content":"                try {"},{"lineNumber":72,"author":{"gitId":"jellymias"},"content":"                    LocalDateTime startDateTime \u003d parser.parseEventStartDate(input);"},{"lineNumber":73,"author":{"gitId":"jellymias"},"content":"                    LocalDateTime endDateTime \u003d parser.parseEventEndDate(input);"},{"lineNumber":74,"author":{"gitId":"jellymias"},"content":"                    String description \u003d parser.parseEventDescription(input);"},{"lineNumber":75,"author":{"gitId":"jellymias"},"content":"                    Event task \u003d new Event(startDateTime, endDateTime, description);"},{"lineNumber":76,"author":{"gitId":"jellymias"},"content":"                    taskList.addTask(task);"},{"lineNumber":77,"author":{"gitId":"jellymias"},"content":"                    return ui.getAddTask(task, taskList.getSize());"},{"lineNumber":78,"author":{"gitId":"jellymias"},"content":"                } catch (DateTimeParseException e) {"},{"lineNumber":79,"author":{"gitId":"jellymias"},"content":"                    return ui.getError(new WrongFormatDukeException(command));"},{"lineNumber":80,"author":{"gitId":"jellymias"},"content":"                }"},{"lineNumber":81,"author":{"gitId":"jellymias"},"content":"            } else {"},{"lineNumber":82,"author":{"gitId":"jellymias"},"content":"                throw new WrongFormatDukeException(command);"},{"lineNumber":83,"author":{"gitId":"jellymias"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"jellymias"},"content":"        } catch (DukeException e) {"},{"lineNumber":85,"author":{"gitId":"jellymias"},"content":"            return ui.getError(e);"},{"lineNumber":86,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":89,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"jellymias"},"content":"     * Executes the add task command."},{"lineNumber":91,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":92,"author":{"gitId":"jellymias"},"content":"     * @return String of task executed."},{"lineNumber":93,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"jellymias"},"content":"    @Override"},{"lineNumber":95,"author":{"gitId":"jellymias"},"content":"    public String execute() {"},{"lineNumber":96,"author":{"gitId":"jellymias"},"content":"        if (command.equals(\"todo\")) {"},{"lineNumber":97,"author":{"gitId":"jellymias"},"content":"            return addTodo();"},{"lineNumber":98,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"jellymias"},"content":"        if (command.equals(\"deadline\")) {"},{"lineNumber":100,"author":{"gitId":"jellymias"},"content":"            return addDeadline();"},{"lineNumber":101,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"jellymias"},"content":"        if (command.equals(\"event\")) {"},{"lineNumber":103,"author":{"gitId":"jellymias"},"content":"            return addEvent();"},{"lineNumber":104,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"jellymias"},"content":"        return \"Something went wrong\";"},{"lineNumber":106,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":107}},{"path":"src/main/java/duke/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"public class ByeCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"    public ByeCommand(String command, String input, TaskList taskList) {"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"        super(command, input, taskList);"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"     * Gets the String form of the bye command."},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"     * @return String of bye command."},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"    private String bye() {"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"        try {"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"            if (input.equals(\"bye\")) {"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"                return ui.getFarewell();"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"            } else {"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"                throw new WrongFormatDukeException(command);"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"            }"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"        } catch (DukeException e) {"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"            return ui.getError(e);"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"     * Executes Bye command."},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"     * @return String of bye command."},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"    public String execute() {"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"        return bye();"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":35}},{"path":"src/main/java/duke/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"public abstract class Command {"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"    protected final String command;"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"    protected final String input;"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"    protected TaskList taskList;"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"    protected Ui ui;"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"    protected Parser parser;"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"    public Command(String command, String input, TaskList taskList) {"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"        this.command \u003d command;"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"        this.input \u003d input;"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"        this.parser \u003d new Parser();"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"     * Returns the task list."},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"     * @return Task list."},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"    public TaskList getTaskList() {"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"        return this.taskList;"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"     * Executes the command based on the user input and task list."},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"    public abstract String execute();"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":31}},{"path":"src/main/java/duke/Contact.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"public class Contact {"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"    private String name;"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"    private int number;"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"    private String address;"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"    public Contact(String name, int number, String address) {"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"        this.name \u003d name;"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"        this.number \u003d number;"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"        this.address \u003d address;"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"     * Changes the name of the contact."},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"     * @param newName Changed name."},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"    public void changeName(String newName) {"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"        name \u003d newName;"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"     * Changes the number of the contact."},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"     * @param newNumber Changed number."},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"    public void changeNumber(int newNumber) {"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"        number \u003d newNumber;"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"     * Changes the address of the contact."},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"     * @param newAddress Changed address."},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"    public void changeAddress(String newAddress) {"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"        address \u003d newAddress;"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"     * Returns the contact in a format that can be saved by the Storage."},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"     * @return String of contact in the format to be saved."},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"    public String formatToSave() {"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"        return String.format(\"/name %s /number %d /address %s\", name, number, address);"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"     * Returns a String that has been formatted which contains the information of the Contact."},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"     * String is formatted into a form to be printed by the Ui."},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"     * @return String to be printed by Ui."},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"    public String toString() {"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"        if (number \u003d\u003d 0) {"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"            return String.format(\"%s [Address: %s]\", name, address);"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"        if (address.equals(\"\")) {"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"            return String.format(\"%s [Num: %d]\", name, number);"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"        return String.format(\"%s [Num: %d] [Address: %s]\", name, number, address);"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":66}},{"path":"src/main/java/duke/ContactList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"public class ContactList {"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"    private ArrayList\u003cContact\u003e contactList;"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"    public ContactList() {"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"        this.contactList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"     * Adds a contact to the contact list."},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"     * @param contact Contact to be added."},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"    public void addContact(Contact contact) {"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"        contactList.add(contact);"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"     * Deletes a contact from the contact list."},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"     * @param index Index of contact to be deleted."},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"     * @return Deleted contact."},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"    public Contact deleteContact(int index) {"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"        Contact removed \u003d contactList.remove(index);"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"        return removed;"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"     * Replaces the contact at index with the contact provided."},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"     * @param contact Contact to be added."},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"     * @param index Index of contact to be removed."},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"    public void editContact(Contact contact, int index) {"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"        contactList.add(index, contact);"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"        contactList.remove(index + 1);"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"     * Gets the size of the contact list."},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"     * @return Size of contact list."},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"    public int getSize() {"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"        return contactList.size();"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"     * Gets the contact at the index."},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"     * @param index Index of contact to be fetched."},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"     * @return Contact at index."},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"    public Contact getContact(int index) {"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"        return contactList.get(index);"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":61}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"    private LocalDateTime date;"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"    private String description;"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"    public Deadline(LocalDateTime date, String description) {"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"        this.date \u003d date;"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"        this.description \u003d description;"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"     * Returns a String that has been formatted which contains the information of the Deadline task."},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"     * String is formatted into a form to be written into the file writer."},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"     * @return String to be passed into file writer."},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"    public String formatToSave() {"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"        String str \u003d \"D | \";"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"        if (isDone()) {"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"            str +\u003d \"X |\";"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"        } else {"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"            str +\u003d \"O |\";"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"        str +\u003d \" \" + description + \" | by: \" + date.format(DateTimeFormatter.ofPattern(\"dd-M-yyyy HHmm\"));"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"        return str;"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"     * Returns a String that has been formatted which contains the information of the Deadline task."},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"     * String is formatted into a form to be printed by the Ui."},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"     * @return String to be printed by Ui."},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"    public String toString() {"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"        String str \u003d \"[D]\";"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"        str +\u003d getMark() + \" \" + description + \" (by: \" +"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"                date.format(DateTimeFormatter.ofPattern(\"dd-M-yyyy HHmm\")) + \")\";"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"        return str;"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":47}},{"path":"src/main/java/duke/DeleteContactCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"public class DeleteContactCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"    private ContactList contactList;"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"    public DeleteContactCommand(String command, String input, TaskList taskList, ContactList contactList) {"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"        super(command, input, taskList);"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"        this.contactList \u003d contactList;"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"     * Checks if the user input is formatted into a correct Delete Contact command."},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"     * If it is, it removes the contact and prints the Delete Contact message."},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"     * Otherwise, it prints the exception faced."},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"     * @return Message to print."},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"    private String delete() {"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"            int size \u003d contactList.getSize();"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"            if (parser.canParseContactDeleteCommand(input, size)) {"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"                int index \u003d parser.parseContactDeleteCommand(input, size);"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"                assert index \u003c\u003d 0 \u0026\u0026 index \u003c size : \"Index out of bounds\";"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"                Contact deleted \u003d contactList.deleteContact(index);"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"                return ui.getDeleteContact(deleted);"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"            } else {"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"                throw new WrongFormatDukeException(command);"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"        } catch (DukeException e) {"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"            return ui.getError(e);"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"     * Executes the delete command."},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"     * @return Message of command."},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"    public String execute() {"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"        return delete();"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":43}},{"path":"src/main/java/duke/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"public class DeleteTaskCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"    public DeleteTaskCommand(String command, String input, TaskList taskList) {"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"        super(command, input, taskList);"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"     * Checks if the user input is formatted into a correct Delete command."},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"     * If it is, it removes the task and prints the Delete message."},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"     * Otherwise, it prints the exception faced."},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"     * @return Message of remove task command."},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"    private String removeTask() {"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"            if (parser.canParseIndexCommand(input, taskList.getSize())) {"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"                int index \u003d parser.parseIndex(input, taskList.getSize());"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"                assert index \u003c taskList.getSize() \u0026\u0026 index \u003e\u003d 0: \"Index out of bounds\";"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"                Task deleted \u003d taskList.deleteTask(index);"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"                return ui.getDeleteTask(deleted);"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"            } else {"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"                throw new WrongFormatDukeException(command);"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"        } catch (DukeException e) {"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"            return ui.getError(e);"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"     * Executes the command to remove task."},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"     * @return Message of command."},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"    public String execute() {"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"        return removeTask();"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":40}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":" */"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"    //@@ banchiang-reused"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"    //Reused from https://github.com/banchiang/ip/blob/master/src/main/java/duke/DialogBox.java"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"            fxmlLoader.load();"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"            e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"        dialog.setText(text);"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"        displayPicture.setImage(img);"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"    //@@ banchiang"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"    private void flip() {"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"        Collections.reverse(tmp);"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"    public static DialogBox getUserDialogue(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"        return new DialogBox(text, img);"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"    public static DialogBox getDukeDialogue(String text, Image img) {"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"        db.flip();"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"        return db;"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":63}},{"path":"src/main/java/duke/DoneTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"public class DoneTaskCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"    public DoneTaskCommand(String command, String input, TaskList taskList) {"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"        super(command, input, taskList);"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"     * Checks if the user input is formatted into a correct Done command."},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"     * If it is, it marks the task as done and prints the Done message."},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"     * Otherwise, it prints the exception faced."},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"     * @return String of done task command."},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"    private String doTask() {"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"            if (parser.canParseIndexCommand(input, taskList.getSize())) {"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"                int index \u003d parser.parseIndex(input, taskList.getSize());"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"                assert index \u003c taskList.getSize() \u0026\u0026 index \u003e\u003d 0: \"Index out of bounds\";"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"                taskList.doneTask(index);"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"                return ui.getDoneTask(taskList.getTask(index));"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"            } else {"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"                throw new WrongFormatDukeException(command);"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"        } catch (DukeException e) {"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"            return ui.getError(e);"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"     * Executes the done task command."},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"     * @return String of done task command."},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"    public String execute() {"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"        return doTask();"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import java.io.UnsupportedEncodingException;"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import java.net.URLDecoder;"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"    private Storage taskStorage;"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"    private Storage contactStorage;"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"    private Ui ui;"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"    private Parser parser;"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"    private TaskList tasks;"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"    private ContactList contactList;"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"    public Duke() {"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"        this.taskStorage \u003d new Storage( \"task.txt\");"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"        this.contactStorage \u003d new Storage(\"contact.txt\");"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"        this.parser \u003d new Parser();"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"        this.tasks \u003d taskStorage.loadTaskList();"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"        this.contactList \u003d contactStorage.loadContactList();"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"     * Executes the command that the user inputs."},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"     * @return String of command executed."},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"    private String executeCommand(String input) {"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"        String command \u003d parser.parseCommand(input);"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"        Command cmd;"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"            if (command.equals(\"todo\") || command.equals(\"deadline\") || command.equals(\"event\")) {"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"                cmd \u003d new AddTaskCommand(command, input, tasks);"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"            } else if (command.equals(\"list\")) {"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"                cmd \u003d new ListTaskCommand(command, input, tasks);"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"            } else if (command.equals(\"done\")) {"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"                cmd \u003d new DoneTaskCommand(command, input, tasks);"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"            } else if (command.equals(\"delete\")) {"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"                cmd \u003d new DeleteTaskCommand(command, input, tasks);"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"            } else if (command.equals(\"help\")) {"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"                cmd \u003d new HelpCommand(command, input, tasks);"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"            } else if (command.equals(\"find\")) {"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"                cmd \u003d new FindCommand(command, input, tasks);"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"            } else if (command.equals(\"bye\")) {"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"                cmd \u003d new ByeCommand(command, input, tasks);"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"            } else if (command.equals(\"contact add\")) {"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"                cmd \u003d new AddContactCommand(command, input, tasks, contactList);"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"            } else if (command.equals(\"contact list\")) {"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"                cmd \u003d new ListContactCommand(command, input, tasks, contactList);"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"            } else if (command.equals(\"contact delete\")) {"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"                cmd \u003d new DeleteContactCommand(command, input, tasks, contactList);"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"            } else if (command.equals(\"contact edit\")) {"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"                cmd \u003d new EditContactCommand(command, input, tasks, contactList);"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"            } else {"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"                throw new WrongCommandDukeException();"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"        } catch (DukeException e) {"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"            return ui.getError(e);"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"        String str \u003d \"\";"},{"lineNumber":66,"author":{"gitId":"jellymias"},"content":"        if (cmd !\u003d null) {"},{"lineNumber":67,"author":{"gitId":"jellymias"},"content":"            str \u003d cmd.execute();"},{"lineNumber":68,"author":{"gitId":"jellymias"},"content":"            tasks \u003d cmd.getTaskList();"},{"lineNumber":69,"author":{"gitId":"jellymias"},"content":"            save();"},{"lineNumber":70,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"jellymias"},"content":"        return str;"},{"lineNumber":72,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":74,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"jellymias"},"content":"     * Saves the task list into the storage file and the contact list into the storage file."},{"lineNumber":76,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"jellymias"},"content":"    private void save() {"},{"lineNumber":78,"author":{"gitId":"jellymias"},"content":"        String taskStr \u003d \"\";"},{"lineNumber":79,"author":{"gitId":"jellymias"},"content":"        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"},{"lineNumber":80,"author":{"gitId":"jellymias"},"content":"            taskStr +\u003d tasks.getTask(i).formatToSave() + \"\\n\";"},{"lineNumber":81,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"jellymias"},"content":"        taskStorage.saveTaskList(taskStr);"},{"lineNumber":83,"author":{"gitId":"jellymias"},"content":"        String contactStr \u003d \"\";"},{"lineNumber":84,"author":{"gitId":"jellymias"},"content":"        for (int i \u003d 0; i \u003c contactList.getSize(); i++) {"},{"lineNumber":85,"author":{"gitId":"jellymias"},"content":"            contactStr +\u003d contactList.getContact(i).formatToSave() + \"\\n\";"},{"lineNumber":86,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"jellymias"},"content":"        contactStorage.saveContactList(contactStr);"},{"lineNumber":88,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":90,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"jellymias"},"content":"     * Greets the user."},{"lineNumber":92,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"jellymias"},"content":"     * @return String of greeting."},{"lineNumber":94,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"jellymias"},"content":"    public static String greeting() {"},{"lineNumber":96,"author":{"gitId":"jellymias"},"content":"        return new Ui().getGreeting();"},{"lineNumber":97,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":99,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"jellymias"},"content":"     * Returns help message."},{"lineNumber":101,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"jellymias"},"content":"     * @return String of help message."},{"lineNumber":103,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"jellymias"},"content":"    public static String help() {"},{"lineNumber":105,"author":{"gitId":"jellymias"},"content":"        return new Ui().getHelp();"},{"lineNumber":106,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":108,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"jellymias"},"content":"     * Gets String of command executed."},{"lineNumber":110,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":111,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":112,"author":{"gitId":"jellymias"},"content":"     * @return String of command executed."},{"lineNumber":113,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"jellymias"},"content":"    public String getResponse(String input) {"},{"lineNumber":115,"author":{"gitId":"jellymias"},"content":"        try {"},{"lineNumber":116,"author":{"gitId":"jellymias"},"content":"            return executeCommand(input);"},{"lineNumber":117,"author":{"gitId":"jellymias"},"content":"        } catch (Exception e) {"},{"lineNumber":118,"author":{"gitId":"jellymias"},"content":"            return ui.getError(e);"},{"lineNumber":119,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":122,"author":{"gitId":"jellymias"},"content":"    public static String getPath() {"},{"lineNumber":123,"author":{"gitId":"jellymias"},"content":"        String path \u003d Duke.class.getProtectionDomain().getCodeSource().getLocation().getPath();"},{"lineNumber":124,"author":{"gitId":"jellymias"},"content":"        String decodedPath \u003d null;"},{"lineNumber":125,"author":{"gitId":"jellymias"},"content":"        try {"},{"lineNumber":126,"author":{"gitId":"jellymias"},"content":"            decodedPath \u003d URLDecoder.decode(path, \"UTF-8\");"},{"lineNumber":127,"author":{"gitId":"jellymias"},"content":"        } catch (UnsupportedEncodingException e) {"},{"lineNumber":128,"author":{"gitId":"jellymias"},"content":"            e.printStackTrace();"},{"lineNumber":129,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"jellymias"},"content":"        return decodedPath;"},{"lineNumber":131,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":130,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"     * Returns the string representation of a DukeException"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"     * @return String."},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"        return \"Exception in Mr. C has occured!\";"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":14}},{"path":"src/main/java/duke/EditContactCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"public class EditContactCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"    private ContactList contactList;"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"    public EditContactCommand(String command, String input, TaskList taskList, ContactList contactList) {"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"        super(command, input, taskList);"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"        this.contactList \u003d contactList;"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"     * Checks if the user input is formatted into a correct Edit Contact command."},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"     * If it is, it edits the contact and prints the Edit Contact message."},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"     * Otherwise, it prints the exception faced."},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"     * @return Message to be printed."},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"    private String edit() {"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"            int size \u003d contactList.getSize();"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"            if (parser.canParseEditContactCommand(input, size)) {"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"                int index \u003d parser.parseContactEditIndex(input, size);"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"                String field \u003d parser.parseContactEditField(input);"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"                String change \u003d parser.parseContactEditChange(input);"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"                Contact contact \u003d contactList.getContact(index);"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"                if (field.equals(\"/name\")) {"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"                    contact.changeName(change);"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"                }"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"                if (field.equals(\"/number\")) {"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"                    int number \u003d Integer.valueOf(change);"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"                    contact.changeNumber(number);"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"                }"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"                if (field.equals(\"/address\")) {"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"                    contact.changeAddress(change);"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"                }"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"                return ui.getEditContact(contact);"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"            } else {"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"                throw new WrongFormatDukeException(command);"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"        } catch (DukeException e) {"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"            return ui.getError(e);"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"     * Executes the edit command."},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"     * @return Message of edit command."},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"    public String execute() {"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"        return edit();"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":54}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"    private LocalDateTime startDate;"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"    private LocalDateTime endDate;"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"    private String description;"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"    public Event(LocalDateTime startDate, LocalDateTime endDate, String description) {"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"        this.startDate \u003d startDate;"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"        this.endDate \u003d endDate;"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"        this.description \u003d description;"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"     * Returns a String that has been formatted which contains the information of the Event task."},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"     * String is formatted into a form to be written into the file writer."},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"     * @return String to be passed into file writer."},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"    public String formatToSave() {"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"        String str \u003d \"E | \";"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"        if (isDone()) {"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"            str +\u003d \"X |\";"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"        } else {"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"            str +\u003d \"O |\";"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"        str +\u003d \" \" + description + \" | from: \" + startDate.format(DateTimeFormatter.ofPattern(\"dd-M-yyyy HHmm\"))"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"                + \" | to: \" + endDate.format(DateTimeFormatter.ofPattern(\"dd-M-yyyy HHmm\"));"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"        return str;"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"     * Returns a String that has been formatted which contains the information of the Event task."},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"     * String is formatted into a form to be printed by the Ui."},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"     * @return String to be printed by Ui."},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"    public String toString() {"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"        String str \u003d \"[E]\";"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"        str +\u003d this.getMark() + \" \" + description"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"                + \" (from: \" + startDate.format(DateTimeFormatter.ofPattern(\"dd-M-yyyy HHmm\"))"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"                + \" - \" + endDate.format(DateTimeFormatter.ofPattern(\"dd-M-yyyy HHmm\")) + \")\";"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"        return str;"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":51}},{"path":"src/main/java/duke/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"public class FindCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"    public FindCommand(String command, String input, TaskList taskList) {"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"        super(command, input, taskList);"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"     * Checks if the user input is formatted into a correct find command."},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"     * If it is, it prints the find message."},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"     * Otherwise, it prints the exception faced."},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"     * @return String of find command."},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"    private String find() {"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"            if (parser.canParseFindCommand(input)) {"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"                String keyword \u003d parser.parseKeyword(input);"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"                TaskList tempTaskList \u003d new TaskList();"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"                for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"                    Task task \u003d taskList.getTask(i);"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"                    if (task.hasKeyWord(keyword)) {"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"                        tempTaskList.addTask(task);"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"                    }"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"                }"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"                if (tempTaskList.getSize() \u003d\u003d 0) {"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"                    throw new NoSuchKeywordException(keyword);"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"                }"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"                return ui.getFoundTaskList(tempTaskList);"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"            } else {"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"                throw new WrongFormatDukeException(command);"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"            }"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"        } catch (DukeException e) {"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"            return ui.getError(e);"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"     * Executes the find command."},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"     * @return String of find command."},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"    public String execute() {"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"        return find();"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":48}},{"path":"src/main/java/duke/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"public class HelpCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"    public HelpCommand(String command, String input, TaskList taskList) {"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"        super(command, input, taskList);"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"     * Checks if the user input is formatted into a correct help command."},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"     * If it is, help message is printed."},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"     * Otherwise, it prints the exception faced."},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"     * @return String of help command."},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"    private String help() {"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"            if (parser.canParseHelpCommand(input)) {"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"                return ui.getHelp();"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"            } else {"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"                throw new WrongFormatDukeException(command);"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"            }"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"        } catch (DukeException e) {"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"            return ui.getError(e);"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"     * Executes the help command."},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"     * @return String of help command."},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"    public String execute() {"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"        return help();"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":37}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":" */"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":12}},{"path":"src/main/java/duke/ListContactCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"public class ListContactCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"    private ContactList contactList;"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"    public ListContactCommand(String command, String input, TaskList taskList, ContactList contactList) {"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"        super(command, input, taskList);"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"        this.contactList \u003d contactList;"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"     * Checks if the user input is formatted into a correct List Contact command."},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"     * If it is, it prints the List Contact message."},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"     * Otherwise, it prints the exception faced."},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"     * @return Message to be printed."},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"    private String listContact() {"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"            if (parser.canParseListContactCommand(input)) {"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"                return ui.getContactList(contactList);"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"            } else {"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"                throw new WrongFormatDukeException(command);"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"            }"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"        } catch (DukeException e) {"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"            return ui.getError(e);"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"     * Executes list contact command."},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"     * @return Message of command."},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"    public String execute() {"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"        return listContact();"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":39}},{"path":"src/main/java/duke/ListTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"public class ListTaskCommand extends Command {"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"    public ListTaskCommand(String command, String input, TaskList taskList) {"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"        super(command, input, taskList);"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"     * Checks if the user input is formatted into a correct list command."},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"     * If it is, it prints the task list."},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"     * Otherwise, it prints the error faced."},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"     * @return String of list task command."},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"    private String listTask() {"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"            if (parser.canParseListCommand(input)) {"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"                return ui.getTaskList(taskList);"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"            } else {"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"                throw new WrongFormatDukeException(command);"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"            }"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"        } catch (DukeException e) {"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"            return ui.getError(e);"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"     * Executes the list task command."},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"     * @return String of list task command."},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"    public String execute() {"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"        return listTask();"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":37}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":" * A GUI for Duke using FXML."},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":" */"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"    //@@ banchiang-reused"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"    //Reused from https://github.com/banchiang/ip/blob/master/src/main/java/duke/Main.java"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"    public void start(Stage stage) {"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"            stage.setScene(scene);"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"            stage.show();"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"    //@@ banchiang"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":34}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import javafx.application.Platform;"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import javafx.fxml.FXML;"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"import java.util.Timer;"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"import java.util.TimerTask;"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":" */"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"    private VBox dialogContainer;"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"    private TextField userInput;"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"    private Button sendButton;"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"    private Duke duke;"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/fellaini.jpg\"));"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/lukaku.jpg\"));"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"    @FXML"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"    public void initialize() {"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"                DialogBox.getDukeDialogue(Duke.greeting(), dukeImage),"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"                DialogBox.getDukeDialogue(Duke.help(), dukeImage));"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"        duke \u003d d;"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"    //@@ banchiang-reused"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"    //Reused from https://github.com/banchiang/ip/blob/master/src/main/java/duke/MainWindow.java"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"    @FXML"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"    private void handleUserInput() throws Exception {"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"                DialogBox.getUserDialogue(input, userImage),"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"                DialogBox.getDukeDialogue(response, dukeImage)"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"        );"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"        userInput.clear();"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"        if(input.equals(\"bye\")) {"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"            TimerTask timertask \u003d new TimerTask() {"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"                public void run() {"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"                    Platform.exit();"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"                    System.exit(0);"},{"lineNumber":66,"author":{"gitId":"jellymias"},"content":"                }"},{"lineNumber":67,"author":{"gitId":"jellymias"},"content":"            };"},{"lineNumber":68,"author":{"gitId":"jellymias"},"content":"            Timer timer \u003d new Timer();"},{"lineNumber":69,"author":{"gitId":"jellymias"},"content":"            timer.schedule(timertask, 800);"},{"lineNumber":70,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"jellymias"},"content":"    //@@ banchiang"},{"lineNumber":73,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":73}},{"path":"src/main/java/duke/NoSuchKeywordException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"public class NoSuchKeywordException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"    private final String keyword;"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"    public NoSuchKeywordException(String keyword) {"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"     * Returns the string representation of the exception where no task containing the keyword is found."},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"     * @return String."},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"        String str \u003d \"I am afraid to inform you that I could not find a task that matched \u0027\" + keyword"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"                + \"\u0027.\\nPerhaps you should consider a better word to search.\";"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"        return str;"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":21}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"    private final int DEADLINE_SUB \u003d 9;"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"    private final int EVENT_SUB \u003d 6;"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"    private LocalDateTime parseDate(String date) {"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(date, DateTimeFormatter.ofPattern(\"dd/M/yyyy Hmm\"));"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"        return dateTime;"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"     * Parses user input and returns the command."},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"     * @return Command word."},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"    public String parseCommand(String input) {"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"        String[] command \u003d input.split(\" \");"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"        if (command[0].equals(\"contact\") \u0026\u0026 command.length \u003e 1) {"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"            return command[0] + \" \" + command[1];"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"        return command[0];"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"     * Checks if the user input is formatted into a correct To-do task."},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"     * @return Boolean."},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"    public boolean canParseTodo(String input) {"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"        String[] command \u003d input.split(\" \");"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"        assert command[0].equals(\"todo\") : \"Incorrect command parsing\";"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"        if (command.length \u003d\u003d 1) {"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"            return false;"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"        if (command[1].equals(\"\")) {"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"            return false;"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"        return true;"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"     * Parses the user input and returns the description of a To-do task."},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"     * @return To-do description."},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"    public String parseTodoDescription(String input) {"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"        String[] command \u003d input.split(\" \");"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"        String description \u003d \"\";"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"        for (int i \u003d 1; i \u003c command.length; i++) {"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"            description +\u003d command[i] + \" \";"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"        return description;"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"     * Checks if the user input is formatted into a correct Deadline task."},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":66,"author":{"gitId":"jellymias"},"content":"     * @return Boolean."},{"lineNumber":67,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"jellymias"},"content":"    public boolean canParseDeadline(String input) {"},{"lineNumber":69,"author":{"gitId":"jellymias"},"content":"        String[] command \u003d input.split(\" \");"},{"lineNumber":70,"author":{"gitId":"jellymias"},"content":"        assert command[0].equals(\"deadline\") : \"Incorrect command parsing\";"},{"lineNumber":71,"author":{"gitId":"jellymias"},"content":"        if (command.length \u003d\u003d 1) {"},{"lineNumber":72,"author":{"gitId":"jellymias"},"content":"            return false;"},{"lineNumber":73,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"jellymias"},"content":"        if (command[1].equals(\"/by\")) {"},{"lineNumber":75,"author":{"gitId":"jellymias"},"content":"            return false;"},{"lineNumber":76,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"jellymias"},"content":"        String[] details \u003d input.split(\" /by \");"},{"lineNumber":78,"author":{"gitId":"jellymias"},"content":"        if (details.length !\u003d 2) {"},{"lineNumber":79,"author":{"gitId":"jellymias"},"content":"            return false;"},{"lineNumber":80,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"jellymias"},"content":"        return true;"},{"lineNumber":82,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":84,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"jellymias"},"content":"     * Parses the user input and returns the description of a Deadline task."},{"lineNumber":86,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":88,"author":{"gitId":"jellymias"},"content":"     * @return Deadline description."},{"lineNumber":89,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"jellymias"},"content":"    public String parseDeadlineDescription(String input) {"},{"lineNumber":91,"author":{"gitId":"jellymias"},"content":"        String[] details \u003d input.split(\" /by \");"},{"lineNumber":92,"author":{"gitId":"jellymias"},"content":"        return details[0].substring(DEADLINE_SUB);"},{"lineNumber":93,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":95,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"jellymias"},"content":"     * Parses the user input and returns the deadline of a Deadline task."},{"lineNumber":97,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":98,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":99,"author":{"gitId":"jellymias"},"content":"     * @return Deadline date."},{"lineNumber":100,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"jellymias"},"content":"    public LocalDateTime parseDeadlineDate(String input) {"},{"lineNumber":102,"author":{"gitId":"jellymias"},"content":"        String[] details \u003d input.split(\" /by \");"},{"lineNumber":103,"author":{"gitId":"jellymias"},"content":"        return parseDate(details[1]);"},{"lineNumber":104,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":106,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"jellymias"},"content":"     * Checks if the user input is formatted into a correct Event task."},{"lineNumber":108,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":109,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":110,"author":{"gitId":"jellymias"},"content":"     * @return Boolean."},{"lineNumber":111,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"jellymias"},"content":"    public boolean canParseEvent(String input) {"},{"lineNumber":113,"author":{"gitId":"jellymias"},"content":"        String[] command \u003d input.split(\" \");"},{"lineNumber":114,"author":{"gitId":"jellymias"},"content":"        assert command[0].equals(\"event\") : \"Incorrect command parsing\";"},{"lineNumber":115,"author":{"gitId":"jellymias"},"content":"        if (command.length \u003d\u003d 1) {"},{"lineNumber":116,"author":{"gitId":"jellymias"},"content":"            return false;"},{"lineNumber":117,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"jellymias"},"content":"        if (command[1].equals(\"/from\")) {"},{"lineNumber":119,"author":{"gitId":"jellymias"},"content":"            return false;"},{"lineNumber":120,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"jellymias"},"content":"        String[] details \u003d input.split(\" /from \");"},{"lineNumber":122,"author":{"gitId":"jellymias"},"content":"        if (details.length !\u003d 2) {"},{"lineNumber":123,"author":{"gitId":"jellymias"},"content":"            return false;"},{"lineNumber":124,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"jellymias"},"content":"        String[] dates \u003d details[1].split(\" /to \");"},{"lineNumber":126,"author":{"gitId":"jellymias"},"content":"        if (dates.length !\u003d 2) {"},{"lineNumber":127,"author":{"gitId":"jellymias"},"content":"            return false;"},{"lineNumber":128,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"jellymias"},"content":"        return true;"},{"lineNumber":130,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":132,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"jellymias"},"content":"     * Parses the user input and returns the description of an Event task."},{"lineNumber":134,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":135,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":136,"author":{"gitId":"jellymias"},"content":"     * @return Event description."},{"lineNumber":137,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":138,"author":{"gitId":"jellymias"},"content":"    public String parseEventDescription(String input) {"},{"lineNumber":139,"author":{"gitId":"jellymias"},"content":"        String[] details \u003d input.split(\" /from \");"},{"lineNumber":140,"author":{"gitId":"jellymias"},"content":"        return details[0].substring(EVENT_SUB);"},{"lineNumber":141,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":143,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":144,"author":{"gitId":"jellymias"},"content":"     * Parses the user input and returns the start date of an Event task."},{"lineNumber":145,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":146,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":147,"author":{"gitId":"jellymias"},"content":"     * @return Event start date."},{"lineNumber":148,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":149,"author":{"gitId":"jellymias"},"content":"    public LocalDateTime parseEventStartDate(String input) {"},{"lineNumber":150,"author":{"gitId":"jellymias"},"content":"        String[] details \u003d input.split(\" /from \");"},{"lineNumber":151,"author":{"gitId":"jellymias"},"content":"        String[] dates \u003d details[1].split(\" /to \");"},{"lineNumber":152,"author":{"gitId":"jellymias"},"content":"        return parseDate(dates[0]);"},{"lineNumber":153,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":155,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":156,"author":{"gitId":"jellymias"},"content":"     * Parses the user input and returns the end date of an Event task."},{"lineNumber":157,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":158,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":159,"author":{"gitId":"jellymias"},"content":"     * @return Event end date."},{"lineNumber":160,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":161,"author":{"gitId":"jellymias"},"content":"    public LocalDateTime parseEventEndDate(String input) {"},{"lineNumber":162,"author":{"gitId":"jellymias"},"content":"        String[] details \u003d input.split(\" /from \");"},{"lineNumber":163,"author":{"gitId":"jellymias"},"content":"        String[] dates \u003d details[1].split(\" /to \");"},{"lineNumber":164,"author":{"gitId":"jellymias"},"content":"        return parseDate(dates[1]);"},{"lineNumber":165,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":167,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":168,"author":{"gitId":"jellymias"},"content":"     * Checks if the user input is formatted into a correct List command."},{"lineNumber":169,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":170,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":171,"author":{"gitId":"jellymias"},"content":"     * @return Boolean."},{"lineNumber":172,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":173,"author":{"gitId":"jellymias"},"content":"    public boolean canParseListCommand(String input) {"},{"lineNumber":174,"author":{"gitId":"jellymias"},"content":"       return input.equals(\"list\") || input.equals(\"list \");"},{"lineNumber":175,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":177,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":178,"author":{"gitId":"jellymias"},"content":"     * Checks if the user input is formatted into a correct index calling command."},{"lineNumber":179,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":180,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":181,"author":{"gitId":"jellymias"},"content":"     * @param size Size of task list."},{"lineNumber":182,"author":{"gitId":"jellymias"},"content":"     * @return Boolean."},{"lineNumber":183,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":184,"author":{"gitId":"jellymias"},"content":"    public boolean canParseIndexCommand(String input, int size) {"},{"lineNumber":185,"author":{"gitId":"jellymias"},"content":"        String[] command \u003d input.split(\" \");"},{"lineNumber":186,"author":{"gitId":"jellymias"},"content":"        if (input.equals(\"done\") || input.equals(\"done \")) {"},{"lineNumber":187,"author":{"gitId":"jellymias"},"content":"            return false;"},{"lineNumber":188,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":189,"author":{"gitId":"jellymias"},"content":"        if (command.length !\u003d 2) {"},{"lineNumber":190,"author":{"gitId":"jellymias"},"content":"            return false;"},{"lineNumber":191,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":192,"author":{"gitId":"jellymias"},"content":"        try {"},{"lineNumber":193,"author":{"gitId":"jellymias"},"content":"            int index \u003d Integer.valueOf(command[1]) - 1;"},{"lineNumber":194,"author":{"gitId":"jellymias"},"content":"            if (index \u003c 0 || index \u003e\u003d size) {"},{"lineNumber":195,"author":{"gitId":"jellymias"},"content":"                return false;"},{"lineNumber":196,"author":{"gitId":"jellymias"},"content":"            }"},{"lineNumber":197,"author":{"gitId":"jellymias"},"content":"            return true;"},{"lineNumber":198,"author":{"gitId":"jellymias"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":199,"author":{"gitId":"jellymias"},"content":"            return false;"},{"lineNumber":200,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":201,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":202,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":203,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":204,"author":{"gitId":"jellymias"},"content":"     * Parses the user input and returns the index of an index calling command."},{"lineNumber":205,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":206,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":207,"author":{"gitId":"jellymias"},"content":"     * @param size Size of task list."},{"lineNumber":208,"author":{"gitId":"jellymias"},"content":"     * @return Index."},{"lineNumber":209,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":210,"author":{"gitId":"jellymias"},"content":"    public int parseIndex(String input, int size) {"},{"lineNumber":211,"author":{"gitId":"jellymias"},"content":"        String[] command \u003d input.split(\" \");"},{"lineNumber":212,"author":{"gitId":"jellymias"},"content":"        int index \u003d Integer.valueOf(command[1]) - 1;"},{"lineNumber":213,"author":{"gitId":"jellymias"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c size: \"Index is out of bounds.\";"},{"lineNumber":214,"author":{"gitId":"jellymias"},"content":"        return index;"},{"lineNumber":215,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":217,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":218,"author":{"gitId":"jellymias"},"content":"     * Checks if the user input is formatted into a correct Help command."},{"lineNumber":219,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":220,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":221,"author":{"gitId":"jellymias"},"content":"     * @return Boolean."},{"lineNumber":222,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":223,"author":{"gitId":"jellymias"},"content":"    public boolean canParseHelpCommand(String input) {"},{"lineNumber":224,"author":{"gitId":"jellymias"},"content":"        if (input.equals(\"help\") || input.equals(\"help \")) {"},{"lineNumber":225,"author":{"gitId":"jellymias"},"content":"            return true;"},{"lineNumber":226,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":227,"author":{"gitId":"jellymias"},"content":"        return false;"},{"lineNumber":228,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":229,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":230,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":231,"author":{"gitId":"jellymias"},"content":"     * Checks if the user input is formatted into a correct Find command."},{"lineNumber":232,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":233,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":234,"author":{"gitId":"jellymias"},"content":"     * @return Boolean."},{"lineNumber":235,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":236,"author":{"gitId":"jellymias"},"content":"    public boolean canParseFindCommand(String input) {"},{"lineNumber":237,"author":{"gitId":"jellymias"},"content":"        String[] command \u003d input.split(\" \");"},{"lineNumber":238,"author":{"gitId":"jellymias"},"content":"        if (input.equals(\"find\") || input.equals(\"find \")) {"},{"lineNumber":239,"author":{"gitId":"jellymias"},"content":"            return false;"},{"lineNumber":240,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":241,"author":{"gitId":"jellymias"},"content":"        if (command.length !\u003d 2) {"},{"lineNumber":242,"author":{"gitId":"jellymias"},"content":"            return false;"},{"lineNumber":243,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":244,"author":{"gitId":"jellymias"},"content":"        return true;"},{"lineNumber":245,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":246,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":247,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":248,"author":{"gitId":"jellymias"},"content":"     * Parses the user input and returns the keyword for a find command."},{"lineNumber":249,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":250,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":251,"author":{"gitId":"jellymias"},"content":"     * @return Keyword for find."},{"lineNumber":252,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":253,"author":{"gitId":"jellymias"},"content":"    public String parseKeyword(String input) {"},{"lineNumber":254,"author":{"gitId":"jellymias"},"content":"        String[] command \u003d input.split(\" \");"},{"lineNumber":255,"author":{"gitId":"jellymias"},"content":"        assert command[0].equals(\"find\") : \"Incorrect command parsing\";"},{"lineNumber":256,"author":{"gitId":"jellymias"},"content":"        return command[1];"},{"lineNumber":257,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":258,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":259,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":260,"author":{"gitId":"jellymias"},"content":"     * Checks if user input is formatted for an Add Contact command with a valid name input."},{"lineNumber":261,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":262,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":263,"author":{"gitId":"jellymias"},"content":"     * @return Boolean."},{"lineNumber":264,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":265,"author":{"gitId":"jellymias"},"content":"    private boolean canParseAddName(String input) {"},{"lineNumber":266,"author":{"gitId":"jellymias"},"content":"        String[] command \u003d input.split(\"/name\");"},{"lineNumber":267,"author":{"gitId":"jellymias"},"content":"        if (command.length !\u003d 2) {"},{"lineNumber":268,"author":{"gitId":"jellymias"},"content":"            return false;"},{"lineNumber":269,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":270,"author":{"gitId":"jellymias"},"content":"        return true;"},{"lineNumber":271,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":272,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":273,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":274,"author":{"gitId":"jellymias"},"content":"     * Checks if user input is formatted for an Add Contact command with a valid number input."},{"lineNumber":275,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":276,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":277,"author":{"gitId":"jellymias"},"content":"     * @return Boolean."},{"lineNumber":278,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":279,"author":{"gitId":"jellymias"},"content":"    private boolean canParseAddNumber(String input) {"},{"lineNumber":280,"author":{"gitId":"jellymias"},"content":"        String[] command \u003d input.split(\"/number \");"},{"lineNumber":281,"author":{"gitId":"jellymias"},"content":"        if (command.length !\u003d 2) {"},{"lineNumber":282,"author":{"gitId":"jellymias"},"content":"            return false;"},{"lineNumber":283,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":284,"author":{"gitId":"jellymias"},"content":"        try {"},{"lineNumber":285,"author":{"gitId":"jellymias"},"content":"            String[] details \u003d command[1].split(\"/address \");"},{"lineNumber":286,"author":{"gitId":"jellymias"},"content":"            String[] numInfo \u003d details[0].split(\" \");"},{"lineNumber":287,"author":{"gitId":"jellymias"},"content":"            Integer.valueOf(numInfo[0]);"},{"lineNumber":288,"author":{"gitId":"jellymias"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":289,"author":{"gitId":"jellymias"},"content":"            return false;"},{"lineNumber":290,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":291,"author":{"gitId":"jellymias"},"content":"        return true;"},{"lineNumber":292,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":293,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":294,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":295,"author":{"gitId":"jellymias"},"content":"     * Checks if user input is formatted for Add Contact command with a valid address input."},{"lineNumber":296,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":297,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":298,"author":{"gitId":"jellymias"},"content":"     * @return Boolean."},{"lineNumber":299,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":300,"author":{"gitId":"jellymias"},"content":"    private boolean canParseAddAddress(String input) {"},{"lineNumber":301,"author":{"gitId":"jellymias"},"content":"        String[] command \u003d input.split(\"/address \");"},{"lineNumber":302,"author":{"gitId":"jellymias"},"content":"        if (command.length !\u003d 2) {"},{"lineNumber":303,"author":{"gitId":"jellymias"},"content":"            return false;"},{"lineNumber":304,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":305,"author":{"gitId":"jellymias"},"content":"        return true;"},{"lineNumber":306,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":307,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":308,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":309,"author":{"gitId":"jellymias"},"content":"     * Checks if user input is formatted correctly for an Add Contact command."},{"lineNumber":310,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":311,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":312,"author":{"gitId":"jellymias"},"content":"     * @return Boolean."},{"lineNumber":313,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":314,"author":{"gitId":"jellymias"},"content":"    public boolean canParseAddContactCommand(String input) {"},{"lineNumber":315,"author":{"gitId":"jellymias"},"content":"        boolean isContactCommand \u003d false;"},{"lineNumber":316,"author":{"gitId":"jellymias"},"content":"        if (parseCommand(input).equals(\"contact add\")) {"},{"lineNumber":317,"author":{"gitId":"jellymias"},"content":"            isContactCommand \u003d true;"},{"lineNumber":318,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":319,"author":{"gitId":"jellymias"},"content":"        boolean hasValidName \u003d canParseAddName(input);"},{"lineNumber":320,"author":{"gitId":"jellymias"},"content":"        boolean hasValidNumber \u003d canParseAddNumber(input);"},{"lineNumber":321,"author":{"gitId":"jellymias"},"content":"        boolean hasValidAddress \u003d canParseAddAddress(input);"},{"lineNumber":322,"author":{"gitId":"jellymias"},"content":"        boolean hasEitherNumberOrAddress \u003d hasValidNumber || hasValidAddress;"},{"lineNumber":323,"author":{"gitId":"jellymias"},"content":"        return isContactCommand \u0026\u0026 hasValidName \u0026\u0026 hasEitherNumberOrAddress;"},{"lineNumber":324,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":325,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":326,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":327,"author":{"gitId":"jellymias"},"content":"     * Parses the user input and returns the name of a contact."},{"lineNumber":328,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":329,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":330,"author":{"gitId":"jellymias"},"content":"     * @return Name of contact."},{"lineNumber":331,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":332,"author":{"gitId":"jellymias"},"content":"    public String parseAddContactName(String input) {"},{"lineNumber":333,"author":{"gitId":"jellymias"},"content":"        String[] command \u003d input.split(\"/name \");"},{"lineNumber":334,"author":{"gitId":"jellymias"},"content":"        String[] details \u003d command[1].split(\" /number \");"},{"lineNumber":335,"author":{"gitId":"jellymias"},"content":"        if (details.length !\u003d 2) {"},{"lineNumber":336,"author":{"gitId":"jellymias"},"content":"            details \u003d command[1].split(\" /address \");"},{"lineNumber":337,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":338,"author":{"gitId":"jellymias"},"content":"        String name \u003d details[0];"},{"lineNumber":339,"author":{"gitId":"jellymias"},"content":"        return name;"},{"lineNumber":340,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":341,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":342,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":343,"author":{"gitId":"jellymias"},"content":"     * Parses the user input and returns the number of a contact."},{"lineNumber":344,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":345,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":346,"author":{"gitId":"jellymias"},"content":"     * @return Contact number."},{"lineNumber":347,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":348,"author":{"gitId":"jellymias"},"content":"    public int parseAddContactNumber(String input) {"},{"lineNumber":349,"author":{"gitId":"jellymias"},"content":"        String[] command \u003d input.split(\"/number \");"},{"lineNumber":350,"author":{"gitId":"jellymias"},"content":"        if (command.length !\u003d 2) {"},{"lineNumber":351,"author":{"gitId":"jellymias"},"content":"            return 0;"},{"lineNumber":352,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":353,"author":{"gitId":"jellymias"},"content":"        String[] details \u003d command[1].split(\"/address \");"},{"lineNumber":354,"author":{"gitId":"jellymias"},"content":"        details \u003d details[0].split(\" \");"},{"lineNumber":355,"author":{"gitId":"jellymias"},"content":"        String numString \u003d details[0];"},{"lineNumber":356,"author":{"gitId":"jellymias"},"content":"        int number \u003d Integer.valueOf(numString);"},{"lineNumber":357,"author":{"gitId":"jellymias"},"content":"        return number;"},{"lineNumber":358,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":359,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":360,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":361,"author":{"gitId":"jellymias"},"content":"     * Parses the user input and returns the address of a contact."},{"lineNumber":362,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":363,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":364,"author":{"gitId":"jellymias"},"content":"     * @return Contact address."},{"lineNumber":365,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":366,"author":{"gitId":"jellymias"},"content":"    public String parseAddContactAddress(String input) {"},{"lineNumber":367,"author":{"gitId":"jellymias"},"content":"        String[] command \u003d input.split(\"/address \");"},{"lineNumber":368,"author":{"gitId":"jellymias"},"content":"        if (command.length !\u003d 2) {"},{"lineNumber":369,"author":{"gitId":"jellymias"},"content":"            return \"\";"},{"lineNumber":370,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":371,"author":{"gitId":"jellymias"},"content":"        String address \u003d command[1];"},{"lineNumber":372,"author":{"gitId":"jellymias"},"content":"        return address;"},{"lineNumber":373,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":374,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":375,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":376,"author":{"gitId":"jellymias"},"content":"     * Checks if user input is formatted as a correct Contact List command."},{"lineNumber":377,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":378,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":379,"author":{"gitId":"jellymias"},"content":"     * @return Boolean."},{"lineNumber":380,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":381,"author":{"gitId":"jellymias"},"content":"    public boolean canParseListContactCommand(String input) {"},{"lineNumber":382,"author":{"gitId":"jellymias"},"content":"        return input.equals(\"contact list\");"},{"lineNumber":383,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":384,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":385,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":386,"author":{"gitId":"jellymias"},"content":"     * Checks if user input has a valid index in the correct format for an contact command that uses an index."},{"lineNumber":387,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":388,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":389,"author":{"gitId":"jellymias"},"content":"     * @param size Size of contact list."},{"lineNumber":390,"author":{"gitId":"jellymias"},"content":"     * @return Boolean."},{"lineNumber":391,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":392,"author":{"gitId":"jellymias"},"content":"    private boolean canParseContactIndexCommand(String input, int size) {"},{"lineNumber":393,"author":{"gitId":"jellymias"},"content":"        String[] command \u003d input.split(\" \");"},{"lineNumber":394,"author":{"gitId":"jellymias"},"content":"        if (command.length \u003c 3) {"},{"lineNumber":395,"author":{"gitId":"jellymias"},"content":"            return false;"},{"lineNumber":396,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":397,"author":{"gitId":"jellymias"},"content":"        try {"},{"lineNumber":398,"author":{"gitId":"jellymias"},"content":"            int index \u003d Integer.valueOf(command[2]);"},{"lineNumber":399,"author":{"gitId":"jellymias"},"content":"            if (index \u003e 0 \u0026\u0026 index \u003c\u003d size) {"},{"lineNumber":400,"author":{"gitId":"jellymias"},"content":"                return true;"},{"lineNumber":401,"author":{"gitId":"jellymias"},"content":"            }"},{"lineNumber":402,"author":{"gitId":"jellymias"},"content":"            return false;"},{"lineNumber":403,"author":{"gitId":"jellymias"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":404,"author":{"gitId":"jellymias"},"content":"            return false;"},{"lineNumber":405,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":406,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":407,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":408,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":409,"author":{"gitId":"jellymias"},"content":"     * Checks if user input is formatted correctly as a Contact Delete command."},{"lineNumber":410,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":411,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":412,"author":{"gitId":"jellymias"},"content":"     * @param size Size of contact list."},{"lineNumber":413,"author":{"gitId":"jellymias"},"content":"     * @return Boolean."},{"lineNumber":414,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":415,"author":{"gitId":"jellymias"},"content":"    public boolean canParseContactDeleteCommand(String input, int size) {"},{"lineNumber":416,"author":{"gitId":"jellymias"},"content":"        String[] command \u003d input.split(\" \");"},{"lineNumber":417,"author":{"gitId":"jellymias"},"content":"        boolean isValidCommand \u003d false;"},{"lineNumber":418,"author":{"gitId":"jellymias"},"content":"        if (parseCommand(input).equals(\"contact delete\") \u0026\u0026 command.length \u003d\u003d 3) {"},{"lineNumber":419,"author":{"gitId":"jellymias"},"content":"            isValidCommand \u003d true;"},{"lineNumber":420,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":421,"author":{"gitId":"jellymias"},"content":"        boolean hasValidIndex \u003d canParseContactIndexCommand(input, size);"},{"lineNumber":422,"author":{"gitId":"jellymias"},"content":"        return isValidCommand \u0026\u0026 hasValidIndex;"},{"lineNumber":423,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":424,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":425,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":426,"author":{"gitId":"jellymias"},"content":"     * Parses the user input and returns the index of the contact to be deleted."},{"lineNumber":427,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":428,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":429,"author":{"gitId":"jellymias"},"content":"     * @param size Size of contact list."},{"lineNumber":430,"author":{"gitId":"jellymias"},"content":"     * @return Index of contact to be deleted."},{"lineNumber":431,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":432,"author":{"gitId":"jellymias"},"content":"    public int parseContactDeleteCommand(String input, int size) {"},{"lineNumber":433,"author":{"gitId":"jellymias"},"content":"        String[] command \u003d input.split(\" \");"},{"lineNumber":434,"author":{"gitId":"jellymias"},"content":"        int index \u003d Integer.valueOf(command[2]) - 1;"},{"lineNumber":435,"author":{"gitId":"jellymias"},"content":"        assert index \u003c\u003d 0 \u0026\u0026 index \u003c size : \"Index is out of bounds\";"},{"lineNumber":436,"author":{"gitId":"jellymias"},"content":"        return index;"},{"lineNumber":437,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":438,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":439,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":440,"author":{"gitId":"jellymias"},"content":"     * Checks if the user input is formatted to a correct Edit Contact command."},{"lineNumber":441,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":442,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":443,"author":{"gitId":"jellymias"},"content":"     * @param size Size of contact list."},{"lineNumber":444,"author":{"gitId":"jellymias"},"content":"     * @return Boolean."},{"lineNumber":445,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":446,"author":{"gitId":"jellymias"},"content":"    public boolean canParseEditContactCommand(String input, int size) {"},{"lineNumber":447,"author":{"gitId":"jellymias"},"content":"        String[] command \u003d input.split(\" \");"},{"lineNumber":448,"author":{"gitId":"jellymias"},"content":"        if (command.length \u003c 4) {"},{"lineNumber":449,"author":{"gitId":"jellymias"},"content":"            return false;"},{"lineNumber":450,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":451,"author":{"gitId":"jellymias"},"content":"        boolean hasValidIndex \u003d canParseContactIndexCommand(input, size);"},{"lineNumber":452,"author":{"gitId":"jellymias"},"content":"        boolean hasValidField \u003d false;"},{"lineNumber":453,"author":{"gitId":"jellymias"},"content":"        boolean hasValidEdit \u003d true;"},{"lineNumber":454,"author":{"gitId":"jellymias"},"content":"        boolean isValidCommand \u003d false;"},{"lineNumber":455,"author":{"gitId":"jellymias"},"content":"        if (command[3].equals(\"/name\") || command[3].equals(\"/number\") || command[3].equals(\"/address\")) {"},{"lineNumber":456,"author":{"gitId":"jellymias"},"content":"            hasValidField \u003d true;"},{"lineNumber":457,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":458,"author":{"gitId":"jellymias"},"content":"        if (command[0].equals(\"contact\") \u0026\u0026 command[1].equals(\"edit\")) {"},{"lineNumber":459,"author":{"gitId":"jellymias"},"content":"            isValidCommand \u003d true;"},{"lineNumber":460,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":461,"author":{"gitId":"jellymias"},"content":"        if (hasValidField \u0026\u0026 parseContactEditField(input).equals(\"/number\")) {"},{"lineNumber":462,"author":{"gitId":"jellymias"},"content":"            try {"},{"lineNumber":463,"author":{"gitId":"jellymias"},"content":"                Integer.valueOf(parseContactEditChange(input));"},{"lineNumber":464,"author":{"gitId":"jellymias"},"content":"                hasValidEdit \u003d true;"},{"lineNumber":465,"author":{"gitId":"jellymias"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":466,"author":{"gitId":"jellymias"},"content":"                hasValidEdit \u003d false;"},{"lineNumber":467,"author":{"gitId":"jellymias"},"content":"            }"},{"lineNumber":468,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":469,"author":{"gitId":"jellymias"},"content":"        if (hasValidField \u0026\u0026 parseContactEditField(input).equals(\"/name\")) {"},{"lineNumber":470,"author":{"gitId":"jellymias"},"content":"            hasValidEdit \u003d command.length \u003e\u003d 5;"},{"lineNumber":471,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":472,"author":{"gitId":"jellymias"},"content":"        return hasValidIndex \u0026\u0026 hasValidField \u0026\u0026 hasValidEdit \u0026\u0026 isValidCommand;"},{"lineNumber":473,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":474,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":475,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":476,"author":{"gitId":"jellymias"},"content":"     * Parses the user input and returns the index of the contact to be edited."},{"lineNumber":477,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":478,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":479,"author":{"gitId":"jellymias"},"content":"     * @param size Size of contact list."},{"lineNumber":480,"author":{"gitId":"jellymias"},"content":"     * @return Index of contact to be edited."},{"lineNumber":481,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":482,"author":{"gitId":"jellymias"},"content":"    public int parseContactEditIndex(String input, int size) {"},{"lineNumber":483,"author":{"gitId":"jellymias"},"content":"        String[] command \u003d input.split(\" \");"},{"lineNumber":484,"author":{"gitId":"jellymias"},"content":"        int index \u003d Integer.valueOf(command[2]) - 1;"},{"lineNumber":485,"author":{"gitId":"jellymias"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c size : \"Index is out of bounds\";"},{"lineNumber":486,"author":{"gitId":"jellymias"},"content":"        return index;"},{"lineNumber":487,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":488,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":489,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":490,"author":{"gitId":"jellymias"},"content":"     * Parses the user input and returns the field of the contact to be edited."},{"lineNumber":491,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":492,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":493,"author":{"gitId":"jellymias"},"content":"     * @return Field to be edited."},{"lineNumber":494,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":495,"author":{"gitId":"jellymias"},"content":"    public String parseContactEditField(String input) {"},{"lineNumber":496,"author":{"gitId":"jellymias"},"content":"        String[] command \u003d input.split(\" \");"},{"lineNumber":497,"author":{"gitId":"jellymias"},"content":"        return command[3];"},{"lineNumber":498,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":499,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":500,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":501,"author":{"gitId":"jellymias"},"content":"     * Parses the user input and returns the change to be made to the contact."},{"lineNumber":502,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":503,"author":{"gitId":"jellymias"},"content":"     * @param input User input."},{"lineNumber":504,"author":{"gitId":"jellymias"},"content":"     * @return Change to be made."},{"lineNumber":505,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":506,"author":{"gitId":"jellymias"},"content":"    public String parseContactEditChange(String input) {"},{"lineNumber":507,"author":{"gitId":"jellymias"},"content":"        String field \u003d parseContactEditField(input) + \" \";"},{"lineNumber":508,"author":{"gitId":"jellymias"},"content":"        String[] command \u003d input.split(field);"},{"lineNumber":509,"author":{"gitId":"jellymias"},"content":"        if (command.length \u003d\u003d 2) {"},{"lineNumber":510,"author":{"gitId":"jellymias"},"content":"            return command[1];"},{"lineNumber":511,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":512,"author":{"gitId":"jellymias"},"content":"        return \"\";"},{"lineNumber":513,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":514,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":514}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import java.io.File;"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import java.io.UnsupportedEncodingException;"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"    private final String filePath;"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"    private final String fileName;"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"    public Storage(String fileName)  {"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"        this.filePath \u003d Duke.getPath();"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"        this.fileName \u003d fileName;"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"     * Writes the tasks in the task list into the specified file."},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"     * @param tasks Task list to be saved."},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"    public void saveTaskList(String tasks) {"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"            FileWriter fw \u003d new FileWriter(filePath + fileName);"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"            fw.write(tasks);"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"            fw.close();"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"            System.out.println(\"This file cannot be saved... much like you!\");"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"     * Reads the saved task list in the file and adds the task into the task list."},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"     * @return Task list with tasks from the file loaded."},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"    public TaskList loadTaskList() {"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"            TaskList taskList \u003d new TaskList();"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"            File f \u003d new File(filePath + fileName);"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"            f.createNewFile();"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"            Scanner sc \u003d new Scanner(f);"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"            while (sc.hasNext()) {"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"                String taskString \u003d sc.nextLine();"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"                String[] taskArr \u003d taskString.split(\"\\\\| \");"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"                Task task \u003d null;"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"                switch(taskArr[0]) {"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"                case \"T \":"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"                    String input \u003d taskArr[2];"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"                    task \u003d new Todo(input);"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"                    break;"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"                case \"D \":"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"                    LocalDateTime dateTime \u003d LocalDateTime.parse(taskArr[3].substring(4),"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"                            DateTimeFormatter.ofPattern(\"dd-M-yyyy HHmm\"));"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"                    task \u003d new Deadline(dateTime, taskArr[2].substring(0, taskArr[2].length() - 1));"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"                    break;"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"                case \"E \":"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"                    LocalDateTime dateTimeStart \u003d LocalDateTime.parse(taskArr[3].substring(6, taskArr[3].length() - 1),"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"                            DateTimeFormatter.ofPattern(\"dd-M-yyyy HHmm\"));"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"                    LocalDateTime dateTimeEnd \u003d LocalDateTime.parse(taskArr[4].substring(4),"},{"lineNumber":66,"author":{"gitId":"jellymias"},"content":"                            DateTimeFormatter.ofPattern(\"dd-M-yyyy HHmm\"));"},{"lineNumber":67,"author":{"gitId":"jellymias"},"content":"                    task \u003d new Event(dateTimeStart, dateTimeEnd, taskArr[2].substring(0, taskArr[2].length() - 1));"},{"lineNumber":68,"author":{"gitId":"jellymias"},"content":"                    break;"},{"lineNumber":69,"author":{"gitId":"jellymias"},"content":"                }"},{"lineNumber":70,"author":{"gitId":"jellymias"},"content":"                if (task !\u003d null \u0026\u0026 taskArr[1].equals(\"X \")) {"},{"lineNumber":71,"author":{"gitId":"jellymias"},"content":"                    task.checkTask();"},{"lineNumber":72,"author":{"gitId":"jellymias"},"content":"                }"},{"lineNumber":73,"author":{"gitId":"jellymias"},"content":"                taskList.addTask(task);"},{"lineNumber":74,"author":{"gitId":"jellymias"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"jellymias"},"content":"            return taskList;"},{"lineNumber":76,"author":{"gitId":"jellymias"},"content":"        } catch (IOException e) {"},{"lineNumber":77,"author":{"gitId":"jellymias"},"content":"            System.out.println(\"This file cannot be loaded... My apologies\");"},{"lineNumber":78,"author":{"gitId":"jellymias"},"content":"            return new TaskList();"},{"lineNumber":79,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":82,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"jellymias"},"content":"     * Writes the contacts in the contact list into the specified file."},{"lineNumber":84,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"jellymias"},"content":"     * @param contacts Contact list to be saved."},{"lineNumber":86,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"jellymias"},"content":"    public void saveContactList(String contacts) {"},{"lineNumber":88,"author":{"gitId":"jellymias"},"content":"        try {"},{"lineNumber":89,"author":{"gitId":"jellymias"},"content":"            FileWriter fw \u003d new FileWriter(filePath + fileName);"},{"lineNumber":90,"author":{"gitId":"jellymias"},"content":"            fw.write(contacts);"},{"lineNumber":91,"author":{"gitId":"jellymias"},"content":"            fw.close();"},{"lineNumber":92,"author":{"gitId":"jellymias"},"content":"        } catch (IOException e) {"},{"lineNumber":93,"author":{"gitId":"jellymias"},"content":"            System.out.println(\"This file cannot be saved... much like you!\");"},{"lineNumber":94,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":97,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"jellymias"},"content":"     * Reads the saved contact list in the file and adds the contacts into the contact list."},{"lineNumber":99,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":100,"author":{"gitId":"jellymias"},"content":"     * @return Contact list with contacts from the file loaded."},{"lineNumber":101,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"jellymias"},"content":"    public ContactList loadContactList() {"},{"lineNumber":103,"author":{"gitId":"jellymias"},"content":"        try {"},{"lineNumber":104,"author":{"gitId":"jellymias"},"content":"            File f \u003d new File(filePath + fileName);"},{"lineNumber":105,"author":{"gitId":"jellymias"},"content":"            f.createNewFile();"},{"lineNumber":106,"author":{"gitId":"jellymias"},"content":"            Scanner sc \u003d new Scanner(f);"},{"lineNumber":107,"author":{"gitId":"jellymias"},"content":"            ContactList contactList \u003d new ContactList();"},{"lineNumber":108,"author":{"gitId":"jellymias"},"content":"            while (sc.hasNext()) {"},{"lineNumber":109,"author":{"gitId":"jellymias"},"content":"                String contactString \u003d sc.nextLine();"},{"lineNumber":110,"author":{"gitId":"jellymias"},"content":"                String[] details \u003d contactString.split(\"/name \");"},{"lineNumber":111,"author":{"gitId":"jellymias"},"content":"                String[] nameInfo \u003d details[1].split(\" /number \");"},{"lineNumber":112,"author":{"gitId":"jellymias"},"content":"                String[] numInfo \u003d nameInfo[1].split(\" /address \");"},{"lineNumber":113,"author":{"gitId":"jellymias"},"content":"                String name \u003d nameInfo[0];"},{"lineNumber":114,"author":{"gitId":"jellymias"},"content":"                String numString \u003d numInfo[0];"},{"lineNumber":115,"author":{"gitId":"jellymias"},"content":"                int number \u003d Integer.valueOf(numString);"},{"lineNumber":116,"author":{"gitId":"jellymias"},"content":"                String address \u003d \"\";"},{"lineNumber":117,"author":{"gitId":"jellymias"},"content":"                if (numInfo.length \u003d\u003d 2) {"},{"lineNumber":118,"author":{"gitId":"jellymias"},"content":"                    address \u003d numInfo[1];"},{"lineNumber":119,"author":{"gitId":"jellymias"},"content":"                }"},{"lineNumber":120,"author":{"gitId":"jellymias"},"content":"                Contact contact \u003d new Contact(name, number, address);"},{"lineNumber":121,"author":{"gitId":"jellymias"},"content":"                contactList.addContact(contact);"},{"lineNumber":122,"author":{"gitId":"jellymias"},"content":"            }"},{"lineNumber":123,"author":{"gitId":"jellymias"},"content":"            return contactList;"},{"lineNumber":124,"author":{"gitId":"jellymias"},"content":"        } catch (IOException e) {"},{"lineNumber":125,"author":{"gitId":"jellymias"},"content":"            return new ContactList();"},{"lineNumber":126,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":128}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"public abstract class Task {"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"    public String input;"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"    private boolean isDone;"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"    public static String CHECKED \u003d \"[X]\";"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"    public static String UNCHECKED \u003d \"[ ]\";"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"    public Task(String input) {"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"        this.input \u003d input;"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"        this.isDone \u003d false;"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"    public String getMark() {"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"        if (isDone) {"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"            return CHECKED;"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"        } else  {"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"            return UNCHECKED;"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"    public boolean isDone() {"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"        return isDone;"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"     * Marks the task as done."},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"    public void checkTask() {"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"        this.isDone \u003d true;"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"    private String getDescription() {"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"        return this.input;"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"     * Checks if the description of a task contains a given keyword."},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"     * @param keyword Keyword."},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"     * @return Boolean."},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"    public boolean hasKeyWord(String keyword) {"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"        String[] words \u003d getDescription().split(\" \");"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"        boolean containsKeyword \u003d false;"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"        for (int i \u003d 0; i \u003c words.length; i++) {"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"            if (words[i].equals(keyword)) {"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"                containsKeyword \u003d true;"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"        return containsKeyword;"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"     * Returns the task in a String format that can be saved by the file writer."},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"     * @return Formatted string of task."},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"    public abstract String formatToSave();"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":60}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"public class TaskList {"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"    public TaskList() {"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"     * Adds task into task list."},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"     * @param task Task to be added."},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"    public void addTask(Task task) {"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"        tasks.add(task);"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"     * Removes task at specified index from task list."},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"     * @param index Index of task to be removed."},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"     * @return Task removed."},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"    public Task deleteTask(int index) {"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"        Task removed \u003d tasks.remove(index);"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"        return removed;"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"     * Marks task at specified index as done."},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"     * @param index Index of task to be marked as done."},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"    public void doneTask(int index) {"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"        Task task \u003d tasks.get(index);"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"        task.checkTask();"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"        tasks.add(index, task);"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"        tasks.remove(index + 1);"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"     * Returns number of tasks in task list."},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"     * @return Number of tasks in task list."},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"    public int getSize() {"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"        return tasks.size();"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"     * Returns the task at a specified index."},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"     * @param index Index of task to return."},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"     * @return Task."},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"    public Task getTask(int index) {"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"        Task task \u003d this.tasks.get(index);"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"        return task;"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":63}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"    private String description;"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"    public Todo(String description) {"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"     * Returns a String that has been formatted which contains the information of the To-do task."},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"     * String is formatted into a form to be written into the file writer."},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"     * @return String to be passed into file writer."},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"    public String formatToSave() {"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"        String str \u003d \"T | \";"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"        if (isDone()) {"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"            str +\u003d \"X |\";"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"        } else {"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"            str +\u003d \"O |\";"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"        str +\u003d \" \" + description;"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"        return str;"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"     * Returns a String that has been formatted which contains the information of the To-do task."},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"     * String is formatted into a form to be printed by the Ui."},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"     * @return String to be printed by Ui."},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"    public String toString() {"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"        String str \u003d \"[T]\";"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"        str +\u003d this.getMark() + \" \" + description;"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"        return str;"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":41}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":" * Class to give all Strings to the GUI."},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":" */"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"public class Ui {"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"     * Gets the greeting message."},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"     * @return String greeting message."},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"    public String getGreeting() {"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"        String str \u003d \"Hello I am LukBot!\" +"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"                \"\\nYou may type the command \u0027help\u0027 to see my list of commands.\" +"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"                \"\\nHow may I assist you?\";"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"        return str;"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"     * Gets the goodbye message when Duke is exited."},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"     * @return String goodbye message."},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"    public String getFarewell() {"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"        String str \u003d \"Farewell sir/ma\u0027am. I hope to see you again soon.\";"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"        return str;"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"     * Gets the string of a task."},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"     * @param task Task wanted."},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"     * @return String of a task."},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"    private String getTask(Task task) {"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"        return task.toString();"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"     * Gets the message for when a task is added to the list."},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"     * @param task Task to be added."},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"     * @param size Number of tasks currently in the list."},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"     * @return String of add task message."},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"    public String getAddTask(Task task, int size) {"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"        String str \u003d \"I have added the following task to your list:\\n\" +"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"                getTask(task) +"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"                String.format(\"\\nThere are %d tasks in your list. I hope this pleases you.\", size);"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"        return str;"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"     * Gets the done message for when a task is marked as done."},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"     * @param task Task to be marked as done."},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"     * @return String of done task message."},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"jellymias"},"content":"    public String getDoneTask(Task task) {"},{"lineNumber":62,"author":{"gitId":"jellymias"},"content":"        String str \u003d \"Congratulations on conquering this task:\\n\" +"},{"lineNumber":63,"author":{"gitId":"jellymias"},"content":"                getTask(task) +"},{"lineNumber":64,"author":{"gitId":"jellymias"},"content":"                \"\\nYou are one step closer to victory\";"},{"lineNumber":65,"author":{"gitId":"jellymias"},"content":"        return str;"},{"lineNumber":66,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":68,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"jellymias"},"content":"     * Gets the message for when a task is being removed from the list."},{"lineNumber":70,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"jellymias"},"content":"     * @param task Task to be removed."},{"lineNumber":72,"author":{"gitId":"jellymias"},"content":"     * @return String of remove task message."},{"lineNumber":73,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"jellymias"},"content":"    public String getDeleteTask(Task task) {"},{"lineNumber":75,"author":{"gitId":"jellymias"},"content":"        String str \u003d \"I have removed the following task from your list:\\n\" +"},{"lineNumber":76,"author":{"gitId":"jellymias"},"content":"                getTask(task) +"},{"lineNumber":77,"author":{"gitId":"jellymias"},"content":"                \"\\nDoes this bring you the satisfaction you so crave?\";"},{"lineNumber":78,"author":{"gitId":"jellymias"},"content":"        return str;"},{"lineNumber":79,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":81,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"jellymias"},"content":"     * Gets the message for when a task list is to be listed."},{"lineNumber":83,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":84,"author":{"gitId":"jellymias"},"content":"     * @param taskList Task list to be listed."},{"lineNumber":85,"author":{"gitId":"jellymias"},"content":"     * @return String of task list."},{"lineNumber":86,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"jellymias"},"content":"    public String getTaskList(TaskList taskList) {"},{"lineNumber":88,"author":{"gitId":"jellymias"},"content":"        String str \u003d \"Here are the tasks in your list:\\n\";"},{"lineNumber":89,"author":{"gitId":"jellymias"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.getSize(); i++) {"},{"lineNumber":90,"author":{"gitId":"jellymias"},"content":"            str +\u003d String.format(\"%d. \", i) +"},{"lineNumber":91,"author":{"gitId":"jellymias"},"content":"                    taskList.getTask(i - 1).toString() +"},{"lineNumber":92,"author":{"gitId":"jellymias"},"content":"                    \"\\n\";"},{"lineNumber":93,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"jellymias"},"content":"        str +\u003d \"Do what you will with this information.\";"},{"lineNumber":95,"author":{"gitId":"jellymias"},"content":"        return str;"},{"lineNumber":96,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":98,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"jellymias"},"content":"     * Gets the error message."},{"lineNumber":100,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":101,"author":{"gitId":"jellymias"},"content":"     * @param e Exception that has occurred."},{"lineNumber":102,"author":{"gitId":"jellymias"},"content":"     * @return String of error message."},{"lineNumber":103,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"jellymias"},"content":"    public String getError(Exception e) {"},{"lineNumber":105,"author":{"gitId":"jellymias"},"content":"        return e.toString();"},{"lineNumber":106,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":108,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"jellymias"},"content":"     * Gets the help message."},{"lineNumber":110,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":111,"author":{"gitId":"jellymias"},"content":"     * @return String of help message."},{"lineNumber":112,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":113,"author":{"gitId":"jellymias"},"content":"    public String getHelp() {"},{"lineNumber":114,"author":{"gitId":"jellymias"},"content":"        String str \u003d \"These are the following commands that I understand:\" +"},{"lineNumber":115,"author":{"gitId":"jellymias"},"content":"                \"\\n\u0027help\u0027 (shows the list of commands)\" +"},{"lineNumber":116,"author":{"gitId":"jellymias"},"content":"                \"\\n\u0027list\u0027 (shows the list of tasks you have on your list)\" +"},{"lineNumber":117,"author":{"gitId":"jellymias"},"content":"                \"\\n\u0027todo (task description)\u0027 (adds a To Do task to your list)\" +"},{"lineNumber":118,"author":{"gitId":"jellymias"},"content":"                \"\\n\u0027deadline (task description) /by (DD/MM/YYYY TIME)\u0027 (adds a Deadline task to your list)\" +"},{"lineNumber":119,"author":{"gitId":"jellymias"},"content":"                \"\\n\u0027event (task description) /from (DD/MM/YYYY TIME) /to (DD/MM/YYYY TIME)\u0027 (adds an Event task to your list)\" +"},{"lineNumber":120,"author":{"gitId":"jellymias"},"content":"                \"\\n\u0027done (valid index)\u0027 (checks a task on your list)\" +"},{"lineNumber":121,"author":{"gitId":"jellymias"},"content":"                \"\\n\u0027delete (valid index)\u0027 (removes a task from your list)\" +"},{"lineNumber":122,"author":{"gitId":"jellymias"},"content":"                \"\\n\u0027find (keyword)\u0027 (searches for all tasks in your list containing the keyword)\" +"},{"lineNumber":123,"author":{"gitId":"jellymias"},"content":"                \"\\n\u0027contact add /name (name) /number (number) /address (address)\u0027 (name or address can be omitted)\" +"},{"lineNumber":124,"author":{"gitId":"jellymias"},"content":"                \"\\n\u0027contact delete (index)\u0027 (removes contact)\" +"},{"lineNumber":125,"author":{"gitId":"jellymias"},"content":"                \"\\n\u0027contact edit (index) (/name OR /number OR /address) (desired change)\u0027 (edits the contact)\" +"},{"lineNumber":126,"author":{"gitId":"jellymias"},"content":"                \"\\n\u0027contact list\u0027 (lists all contacts)\" +"},{"lineNumber":127,"author":{"gitId":"jellymias"},"content":"                \"\\n\u0027bye\u0027 (exits Duke)\" +"},{"lineNumber":128,"author":{"gitId":"jellymias"},"content":"                \"\\nDo omit the parentheses in the actual command.\" +"},{"lineNumber":129,"author":{"gitId":"jellymias"},"content":"                \"\\nI pray that I will be of use to you.\";"},{"lineNumber":130,"author":{"gitId":"jellymias"},"content":"        return str;"},{"lineNumber":131,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":133,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":134,"author":{"gitId":"jellymias"},"content":"     * Returns string of the tasks that have been found to be given to GUI."},{"lineNumber":135,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":136,"author":{"gitId":"jellymias"},"content":"     * @param taskList Task list that only contains found tasks."},{"lineNumber":137,"author":{"gitId":"jellymias"},"content":"     * @return String of found tasks to be given to GUI."},{"lineNumber":138,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"jellymias"},"content":"    public String getFoundTaskList(TaskList taskList) {"},{"lineNumber":140,"author":{"gitId":"jellymias"},"content":"        String str \u003d \"Here are the tasks that fit your search criteria:\\n\";"},{"lineNumber":141,"author":{"gitId":"jellymias"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.getSize(); i++) {"},{"lineNumber":142,"author":{"gitId":"jellymias"},"content":"            str +\u003d String.format(\"%d. \", i) +"},{"lineNumber":143,"author":{"gitId":"jellymias"},"content":"                    taskList.getTask(i - 1).toString() + \"\\n\";"},{"lineNumber":144,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":145,"author":{"gitId":"jellymias"},"content":"        str +\u003d \"I can only pray that I have been of use to you.\";"},{"lineNumber":146,"author":{"gitId":"jellymias"},"content":"        return str;"},{"lineNumber":147,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":149,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":150,"author":{"gitId":"jellymias"},"content":"     * Gets string of contact."},{"lineNumber":151,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":152,"author":{"gitId":"jellymias"},"content":"     * @param contact Contact."},{"lineNumber":153,"author":{"gitId":"jellymias"},"content":"     * @return String of contact."},{"lineNumber":154,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":155,"author":{"gitId":"jellymias"},"content":"    private String getContact(Contact contact) {"},{"lineNumber":156,"author":{"gitId":"jellymias"},"content":"        return contact.toString();"},{"lineNumber":157,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":158,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":159,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":160,"author":{"gitId":"jellymias"},"content":"     * Gets the add contact message."},{"lineNumber":161,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":162,"author":{"gitId":"jellymias"},"content":"     * @param contact Contact to add."},{"lineNumber":163,"author":{"gitId":"jellymias"},"content":"     * @return String of Add Contact message."},{"lineNumber":164,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":165,"author":{"gitId":"jellymias"},"content":"    public String getAddContact(Contact contact) {"},{"lineNumber":166,"author":{"gitId":"jellymias"},"content":"        String str \u003d \"I have added a new companion to your list of allies:\\n\" +"},{"lineNumber":167,"author":{"gitId":"jellymias"},"content":"                getContact(contact) +"},{"lineNumber":168,"author":{"gitId":"jellymias"},"content":"                \"\\nKeep your friends close, and your enemies closer.\";"},{"lineNumber":169,"author":{"gitId":"jellymias"},"content":"        return str;"},{"lineNumber":170,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":172,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":173,"author":{"gitId":"jellymias"},"content":"     * Gets the string when a contact list is to be listed."},{"lineNumber":174,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":175,"author":{"gitId":"jellymias"},"content":"     * @param contactList Contact list to be listed."},{"lineNumber":176,"author":{"gitId":"jellymias"},"content":"     * @return String of contacts in the list."},{"lineNumber":177,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":178,"author":{"gitId":"jellymias"},"content":"    public String getContactList(ContactList contactList) {"},{"lineNumber":179,"author":{"gitId":"jellymias"},"content":"        String str \u003d \"Here are your reliable comrades:\\n\";"},{"lineNumber":180,"author":{"gitId":"jellymias"},"content":"        for (int i \u003d 1; i \u003c\u003d contactList.getSize(); i++) {"},{"lineNumber":181,"author":{"gitId":"jellymias"},"content":"            str +\u003d String.format(\"%d. \", i) +"},{"lineNumber":182,"author":{"gitId":"jellymias"},"content":"                    contactList.getContact(i - 1).toString() +"},{"lineNumber":183,"author":{"gitId":"jellymias"},"content":"                    \"\\n\";"},{"lineNumber":184,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":185,"author":{"gitId":"jellymias"},"content":"        str +\u003d \"Do not fear to call upon their friendship.\";"},{"lineNumber":186,"author":{"gitId":"jellymias"},"content":"        return str;"},{"lineNumber":187,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":189,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":190,"author":{"gitId":"jellymias"},"content":"     * Gets the string when a contact is to be deleted."},{"lineNumber":191,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":192,"author":{"gitId":"jellymias"},"content":"     * @param contact Contact to be deleted."},{"lineNumber":193,"author":{"gitId":"jellymias"},"content":"     * @return String of delete contact command."},{"lineNumber":194,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":195,"author":{"gitId":"jellymias"},"content":"    public String getDeleteContact(Contact contact) {"},{"lineNumber":196,"author":{"gitId":"jellymias"},"content":"        String str \u003d \"Friends turn to foes in a blink of an eye. I shall remove:\\n\" +"},{"lineNumber":197,"author":{"gitId":"jellymias"},"content":"                getContact(contact) +"},{"lineNumber":198,"author":{"gitId":"jellymias"},"content":"                \"\\nI pray for your safety.\";"},{"lineNumber":199,"author":{"gitId":"jellymias"},"content":"        return str;"},{"lineNumber":200,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":201,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":202,"author":{"gitId":"jellymias"},"content":"    public String getEditContact(Contact contact) {"},{"lineNumber":203,"author":{"gitId":"jellymias"},"content":"        String str \u003d \"Your mistake has been forgiven. Do check if this is the correct contact:\\n\" +"},{"lineNumber":204,"author":{"gitId":"jellymias"},"content":"                getContact(contact) +"},{"lineNumber":205,"author":{"gitId":"jellymias"},"content":"                \"\\nFeel free to make as many mistakes as you please. I am here to resolve all.\";"},{"lineNumber":206,"author":{"gitId":"jellymias"},"content":"        return str;"},{"lineNumber":207,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":208,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":208}},{"path":"src/main/java/duke/WrongCommandDukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"public class WrongCommandDukeException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"     * Returns the string representation of an exception where an invalid command is given."},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"     * @return String."},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"        return \"I am unable to comprehend what you have just said. I deeply regret my inadequecy.\";"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":14}},{"path":"src/main/java/duke/WrongFormatDukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"public class WrongFormatDukeException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"    private final String TODO \u003d \"todo (task description)\";"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"    private final String DEADLINE \u003d \"deadline (task description) /by (DD/MM/YYYY TIME)\";"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"    private final String EVENT \u003d \"event (task description) /from (DD/MM/YYYY TIME) /to (DD/MM/YYYY TIME)\";"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"    private final String DONE \u003d \"done (valid index)\";"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"    private final String DELETE \u003d \"delete (valid index)\";"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"    private final String LIST \u003d \"list\";"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"    private final String HELP \u003d \"help\";"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"    private final String FIND \u003d \"find (keyword)\";"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"    private final String ADD_CONTACT \u003d \"contact add /name (name) /number (number) /address (address)\";"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"    private final String DELETE_CONTACT \u003d \"contact delete (valid index)\";"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"    private final String LIST_CONTACT \u003d \"contact list\";"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"    private final String EDIT_CONTACT \u003d \"contact edit (valid index) (/name OR /number OR /address) (edit)\";"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"    private final String BYE \u003d \"bye\";"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"    private String command;"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"    public WrongFormatDukeException(String command) {"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"        this.command \u003d command;"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"     * Returns the string representation of the exception where the command is not formatted properly."},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"     * @return String."},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"        String str \u003d \"Sorry, I believe you have made a mistake in the format of this command.\\nHere is the correct format:\\n\";"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"        if (command.equals(\"todo\")) {"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"            str +\u003d TODO;"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"        } else if (command.equals(\"deadline\")) {"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":"            str +\u003d DEADLINE;"},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"        } else if (command.equals(\"event\")) {"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"            str +\u003d EVENT;"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"        } else if (command.equals(\"done\")) {"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"            str +\u003d DONE;"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"        } else if (command.equals(\"delete\")) {"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"            str +\u003d DELETE;"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"        } else if (command.equals(\"list\")) {"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"            str +\u003d LIST;"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"        } else if (command.equals(\"help\")) {"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"            str +\u003d HELP;"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"        } else if (command.equals(\"find\")) {"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"            str +\u003d FIND;"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"        } else if (command.equals(\"contact add\")) {"},{"lineNumber":48,"author":{"gitId":"jellymias"},"content":"            str +\u003d ADD_CONTACT;"},{"lineNumber":49,"author":{"gitId":"jellymias"},"content":"        } else if (command.equals(\"contact delete\")) {"},{"lineNumber":50,"author":{"gitId":"jellymias"},"content":"            str +\u003d DELETE_CONTACT;"},{"lineNumber":51,"author":{"gitId":"jellymias"},"content":"        } else if (command.equals(\"contact list\")) {"},{"lineNumber":52,"author":{"gitId":"jellymias"},"content":"            str +\u003d LIST_CONTACT;"},{"lineNumber":53,"author":{"gitId":"jellymias"},"content":"        } else if (command.equals(\"contact edit\")) {"},{"lineNumber":54,"author":{"gitId":"jellymias"},"content":"            str +\u003d EDIT_CONTACT;"},{"lineNumber":55,"author":{"gitId":"jellymias"},"content":"        } else if (command.equals(\"bye\")) {"},{"lineNumber":56,"author":{"gitId":"jellymias"},"content":"            str +\u003d BYE;"},{"lineNumber":57,"author":{"gitId":"jellymias"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"jellymias"},"content":"        return str;"},{"lineNumber":59,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":60}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/fxml/1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"jellymias":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"524.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"524.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"600.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"588.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"jellymias":19}},{"path":"src/test/java/duke/DeadLineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"public class DeadLineTest {"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"    public void testFormatToSave() {"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"        LocalDateTime ldt \u003d LocalDateTime.parse(\"25/12/2021 1800\", DateTimeFormatter.ofPattern(\"dd/M/yyyy Hmm\"));"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"        Task task \u003d new Deadline(ldt, \"cook turkey\");"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"        String actual \u003d task.formatToSave();"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"        String expected \u003d \"D | O | cook turkey | by: 25-12-2021 1800\";"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"        assertEquals(expected, actual);"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"    public void testToString() {"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"        LocalDateTime ldt \u003d LocalDateTime.parse(\"25/12/2021 1800\", DateTimeFormatter.ofPattern(\"dd/M/yyyy Hmm\"));"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"        Task task \u003d new Deadline(ldt, \"cook turkey\");"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"        String actual \u003d task.toString();"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"        String expected \u003d \"[D][ ] cook turkey (by: 25-12-2021 1800)\";"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"        assertEquals(expected, actual);"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":28}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"public class EventTest {"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"    public void testFormatToSave() {"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"        LocalDateTime ldtStart \u003d LocalDateTime.parse(\"25/12/2021 0000\", DateTimeFormatter.ofPattern(\"dd/M/yyyy Hmm\"));"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"        LocalDateTime ldtEnd \u003d LocalDateTime.parse(\"25/12/2021 2359\", DateTimeFormatter.ofPattern(\"dd/M/yyyy Hmm\"));"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"        Task task \u003d new Event(ldtStart, ldtEnd, \"xmas\");"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"        String actual \u003d task.formatToSave();"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"        String expected \u003d \"E | O | xmas | from: 25-12-2021 0000 | to: 25-12-2021 2359\";"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"        assertEquals(expected, actual);"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"    public void testToString() {"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"        LocalDateTime ldtStart \u003d LocalDateTime.parse(\"25/12/2021 0000\", DateTimeFormatter.ofPattern(\"dd/M/yyyy Hmm\"));"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":"        LocalDateTime ldtEnd \u003d LocalDateTime.parse(\"25/12/2021 2359\", DateTimeFormatter.ofPattern(\"dd/M/yyyy Hmm\"));"},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"        Task task \u003d new Event(ldtStart, ldtEnd, \"xmas\");"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"        String actual \u003d task.toString();"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"        String expected \u003d \"[E][ ] xmas (from: 25-12-2021 0000 - 25-12-2021 2359)\";"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"        assertEquals(expected, actual);"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":30}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"public class TaskListTest {"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"    public void testSize() {"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"        int actual \u003d taskList.getSize();"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"        assertEquals(0, actual);"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"    public void testAddTask() {"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"        Task task1 \u003d new Todo(\"read book\");"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"        taskList.addTask(task1);"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"        Task task2 \u003d taskList.getTask(0);"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"        assertEquals(task1, task2);"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"        assertEquals(1, taskList.getSize());"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":25,"author":{"gitId":"jellymias"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"jellymias"},"content":"    public void testDeleteTask() {"},{"lineNumber":27,"author":{"gitId":"jellymias"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":28,"author":{"gitId":"jellymias"},"content":"        Task task1 \u003d new Todo(\"read book\");"},{"lineNumber":29,"author":{"gitId":"jellymias"},"content":"        taskList.addTask(task1);"},{"lineNumber":30,"author":{"gitId":"jellymias"},"content":"        Task task2 \u003d taskList.deleteTask(0);"},{"lineNumber":31,"author":{"gitId":"jellymias"},"content":"        assertEquals(task1, task2);"},{"lineNumber":32,"author":{"gitId":"jellymias"},"content":"        assertEquals(0, taskList.getSize());"},{"lineNumber":33,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":35,"author":{"gitId":"jellymias"},"content":"    @Test"},{"lineNumber":36,"author":{"gitId":"jellymias"},"content":"    public void testDoneTask() {"},{"lineNumber":37,"author":{"gitId":"jellymias"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":38,"author":{"gitId":"jellymias"},"content":"        Task task1 \u003d new Todo(\"read book\");"},{"lineNumber":39,"author":{"gitId":"jellymias"},"content":"        taskList.addTask(task1);"},{"lineNumber":40,"author":{"gitId":"jellymias"},"content":"        taskList.doneTask(0);"},{"lineNumber":41,"author":{"gitId":"jellymias"},"content":"        task1 \u003d taskList.getTask(0);"},{"lineNumber":42,"author":{"gitId":"jellymias"},"content":"        String actual \u003d task1.toString();"},{"lineNumber":43,"author":{"gitId":"jellymias"},"content":"        String expected \u003d \"[T][X] read book\";"},{"lineNumber":44,"author":{"gitId":"jellymias"},"content":"        assertEquals(expected, actual);"},{"lineNumber":45,"author":{"gitId":"jellymias"},"content":"        assertEquals(1, taskList.getSize());"},{"lineNumber":46,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":47}},{"path":"src/test/java/duke/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"public class TodoTest {"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"    public void testFormatToSave() {"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"        Task task \u003d new Todo(\"read book\");"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"        String actual \u003d task.formatToSave();"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"        String expected \u003d \"T | O | read book\";"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"        assertEquals(actual, expected);"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":""},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"    public void testToString() {"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"        Task task \u003d new Todo(\"read book\");"},{"lineNumber":19,"author":{"gitId":"jellymias"},"content":"        String actual \u003d task.toString();"},{"lineNumber":20,"author":{"gitId":"jellymias"},"content":"        String expected \u003d \"[T][ ] read book\";"},{"lineNumber":21,"author":{"gitId":"jellymias"},"content":"        assertEquals(actual, expected);"},{"lineNumber":22,"author":{"gitId":"jellymias"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"jellymias"},"content":"}"}],"authorContributionMap":{"jellymias":23}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jellymias"},"content":"todo"},{"lineNumber":2,"author":{"gitId":"jellymias"},"content":"todo read book"},{"lineNumber":3,"author":{"gitId":"jellymias"},"content":"deadline"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"deadline return book"},{"lineNumber":5,"author":{"gitId":"jellymias"},"content":"deadline return book /by Sunday"},{"lineNumber":6,"author":{"gitId":"jellymias"},"content":"event"},{"lineNumber":7,"author":{"gitId":"jellymias"},"content":"event project meeting"},{"lineNumber":8,"author":{"gitId":"jellymias"},"content":"event project meeting /at 6th August 2pm - 4pm"},{"lineNumber":9,"author":{"gitId":"jellymias"},"content":"list"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"done"},{"lineNumber":11,"author":{"gitId":"jellymias"},"content":"done 4"},{"lineNumber":12,"author":{"gitId":"jellymias"},"content":"done 2"},{"lineNumber":13,"author":{"gitId":"jellymias"},"content":"list"},{"lineNumber":14,"author":{"gitId":"jellymias"},"content":"rubbish"},{"lineNumber":15,"author":{"gitId":"jellymias"},"content":"delete 0"},{"lineNumber":16,"author":{"gitId":"jellymias"},"content":"delete 1"},{"lineNumber":17,"author":{"gitId":"jellymias"},"content":"list"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"bye"}],"authorContributionMap":{"jellymias":18}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"jellymias"},"content":"if not exist \\Users\\Jeremias\\Documents\\Github\\ip\\bin mkdir \\Users\\Jeremias\\Documents\\Github\\ip\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"jellymias"},"content":"javac  -cp \\Users\\Jeremias\\Documents\\GitHub\\ip\\src\\main\\java -Xlint:none -d \\Users\\Jeremias\\Documents\\Github\\ip\\bin \\Users\\Jeremias\\Documents\\GitHub\\ip\\src\\main\\java\\duke.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"jellymias"},"content":"java -classpath \\Users\\Jeremias\\Documents\\Github\\ip\\bin duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"jellymias":3,"-":18}}]
