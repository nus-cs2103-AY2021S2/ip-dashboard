[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"This is a greenfield Java project. It\u0027s named HAHA. Given below are instructions on how to use it."},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":8,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":9,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":10,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":14,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":"1. After the importing is complete, locate the `src/main/java/Haha.java` file, right-click it, and choose `Run Haha.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":17,"author":{"gitId":"-"},"content":"```"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Hello from"},{"lineNumber":19,"author":{"gitId":"tlylt"},"content":" _    _          _    _"},{"lineNumber":20,"author":{"gitId":"tlylt"},"content":"| |  | |   /\\   | |  | |   /\\"},{"lineNumber":21,"author":{"gitId":"tlylt"},"content":"| |__| |  /  \\  | |__| |  /  \\"},{"lineNumber":22,"author":{"gitId":"tlylt"},"content":"|  __  | / /\\ \\ |  __  | / /\\ \\"},{"lineNumber":23,"author":{"gitId":"tlylt"},"content":"| |  | |/ ____ \\| |  | |/ ____ \\"},{"lineNumber":24,"author":{"gitId":"tlylt"},"content":"|_|  |_/_/    \\_\\_|  |_/_/    \\_\\"},{"lineNumber":25,"author":{"gitId":"tlylt"},"content":"____________________________________________________________"},{"lineNumber":26,"author":{"gitId":"tlylt"},"content":"Dude, I\u0027m HAHA"},{"lineNumber":27,"author":{"gitId":"tlylt"},"content":"What can I do for you?"},{"lineNumber":28,"author":{"gitId":"tlylt"},"content":"(Oh when you are done, say bye)"},{"lineNumber":29,"author":{"gitId":"tlylt"},"content":"____________________________________________________________"},{"lineNumber":30,"author":{"gitId":"-"},"content":"```"}],"authorContributionMap":{"tlylt":13,"-":17}},{"path":"src/main/java/Database.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":"public class Database {"},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":"    private final List\u003cTask\u003e database \u003d new ArrayList\u003c\u003e();"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"    void tellAdd() {"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":"    void tellSize() {"},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"        String task \u003d database.size() \u003e 1 ? \" tasks\" : \" task\";"},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"        System.out.println(\"Now you have \" + database.size() + task + \" in the list\");"},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":"    void addToDB(Task task) {"},{"lineNumber":17,"author":{"gitId":"tlylt"},"content":"        database.add(task);"},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":"        tellAdd();"},{"lineNumber":19,"author":{"gitId":"tlylt"},"content":"        System.out.println(\"  \" + database.get(database.size() - 1));"},{"lineNumber":20,"author":{"gitId":"tlylt"},"content":"        tellSize();"},{"lineNumber":21,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":23,"author":{"gitId":"tlylt"},"content":"    void deleteFromDB(String inputNum) {"},{"lineNumber":24,"author":{"gitId":"tlylt"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"tlylt"},"content":"            int num \u003d Parser.taskNumber(inputNum);"},{"lineNumber":26,"author":{"gitId":"tlylt"},"content":"            Task currentTask \u003d database.get(num - 1);"},{"lineNumber":27,"author":{"gitId":"tlylt"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":28,"author":{"gitId":"tlylt"},"content":"            System.out.println(currentTask);"},{"lineNumber":29,"author":{"gitId":"tlylt"},"content":"            database.remove(currentTask);"},{"lineNumber":30,"author":{"gitId":"tlylt"},"content":"            tellSize();"},{"lineNumber":31,"author":{"gitId":"tlylt"},"content":"        } catch (HahaTaskNumberNotIntException ex) {"},{"lineNumber":32,"author":{"gitId":"tlylt"},"content":"            System.out.println(ex);"},{"lineNumber":33,"author":{"gitId":"tlylt"},"content":"        } catch (IndexOutOfBoundsException ex) {"},{"lineNumber":34,"author":{"gitId":"tlylt"},"content":"            System.out.println(\"OOPS! Wrong number!\\n Try specify the right task number\");"},{"lineNumber":35,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":38,"author":{"gitId":"tlylt"},"content":"    void listFromDB() {"},{"lineNumber":39,"author":{"gitId":"tlylt"},"content":"        if (database.size() \u003d\u003d 0) {"},{"lineNumber":40,"author":{"gitId":"tlylt"},"content":"            System.out.println(\"You have nothing going on!\");"},{"lineNumber":41,"author":{"gitId":"tlylt"},"content":"        } else {"},{"lineNumber":42,"author":{"gitId":"tlylt"},"content":"            System.out.println(\"Here are your list of tasks:\");"},{"lineNumber":43,"author":{"gitId":"tlylt"},"content":"            for (int i \u003d 0; i \u003c database.size(); i++) {"},{"lineNumber":44,"author":{"gitId":"tlylt"},"content":"                String idx \u003d Integer.toString(i + 1) + \u0027.\u0027;"},{"lineNumber":45,"author":{"gitId":"tlylt"},"content":"                String task \u003d idx + database.get(i);"},{"lineNumber":46,"author":{"gitId":"tlylt"},"content":"                System.out.println(task);"},{"lineNumber":47,"author":{"gitId":"tlylt"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":51,"author":{"gitId":"tlylt"},"content":"    void markDoneToDB(String inputNum) {"},{"lineNumber":52,"author":{"gitId":"tlylt"},"content":"        try {"},{"lineNumber":53,"author":{"gitId":"tlylt"},"content":"            int givenIndex \u003d Parser.taskNumber(inputNum) - 1;"},{"lineNumber":54,"author":{"gitId":"tlylt"},"content":"            if (givenIndex \u003c 0 || givenIndex \u003e database.size()) {"},{"lineNumber":55,"author":{"gitId":"tlylt"},"content":"                System.out.println(\"OOPS! Wrong number!\\nTry specify the right task number\");"},{"lineNumber":56,"author":{"gitId":"tlylt"},"content":"            } else {"},{"lineNumber":57,"author":{"gitId":"tlylt"},"content":"                Task currentTask \u003d database.get(givenIndex);"},{"lineNumber":58,"author":{"gitId":"tlylt"},"content":"                if (currentTask.getIsDone()) {"},{"lineNumber":59,"author":{"gitId":"tlylt"},"content":"                    System.out.println(\"OOPS! I\u0027ve marked this task as done ALREADY\");"},{"lineNumber":60,"author":{"gitId":"tlylt"},"content":"                } else {"},{"lineNumber":61,"author":{"gitId":"tlylt"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":62,"author":{"gitId":"tlylt"},"content":"                    currentTask.setDone(true);"},{"lineNumber":63,"author":{"gitId":"tlylt"},"content":"                    System.out.println(currentTask);"},{"lineNumber":64,"author":{"gitId":"tlylt"},"content":"                }"},{"lineNumber":65,"author":{"gitId":"tlylt"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"tlylt"},"content":"        } catch (HahaTaskNumberNotIntException ex) {"},{"lineNumber":67,"author":{"gitId":"tlylt"},"content":"            System.out.println(ex);"},{"lineNumber":68,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":70}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":"    public Deadline(boolean isDone, String description) {"},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"        super(\"D\", isDone, description);"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"    public String modifiedDescription() {"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"        String dateTime \u003d description.split(\"/by \")[1];"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"        dateTime \u003d \"(by: \" + dateTime + \")\";"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"        return description.substring(0, description.indexOf(\u0027/\u0027)) + dateTime;"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"        return getTypeIcon() + getStatusIcon() + \" \" + modifiedDescription();"},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":16}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":"    public Event(boolean isDone, String description) {"},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"        super(\"E\", isDone, description);"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"    public String modifiedDescription() {"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"        String dateTime \u003d description.split(\"/at \")[1];"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"        dateTime \u003d \"(at: \" + dateTime + \")\";"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"        return description.substring(0, description.indexOf(\u0027/\u0027)) + dateTime;"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"        return getTypeIcon() + getStatusIcon() + \" \" + modifiedDescription();"},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":16}},{"path":"src/main/java/Haha.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"public class Haha {"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":"    // Static properties"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"    private static final Scanner SCANNER \u003d new Scanner(System.in);"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"    private static final Database database \u003d new Database();"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"    private static final String LINE_BREAK \u003d \"____________________________________________________________\\n\";"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"    private static final String LOGO \u003d \" _    _          _    _\\n\" +"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"            \"| |  | |   /\\\\   | |  | |   /\\\\\\n\" +"},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":"            \"| |__| |  /  \\\\  | |__| |  /  \\\\\\n\" +"},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"            \"|  __  | / /\\\\ \\\\ |  __  | / /\\\\ \\\\\\n\" +"},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"            \"| |  | |/ ____ \\\\| |  | |/ ____ \\\\\\n\" +"},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"            \"|_|  |_/_/    \\\\_\\\\_|  |_/_/    \\\\_\\\\\\n\";"},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":"    private static final String STARTER \u003d \"Hello from\\n\" + LOGO"},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":"            + LINE_BREAK"},{"lineNumber":17,"author":{"gitId":"tlylt"},"content":"            + \"Dude, I\u0027m HAHA.\\n\""},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":"            + \"What can I do for you?\\n\""},{"lineNumber":19,"author":{"gitId":"tlylt"},"content":"            + \"(Oh when you are done, say bye)\\n\""},{"lineNumber":20,"author":{"gitId":"tlylt"},"content":"            + LINE_BREAK;"},{"lineNumber":21,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":22,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":23,"author":{"gitId":"tlylt"},"content":"    private static boolean executeCommand(LegitCommand command) {"},{"lineNumber":24,"author":{"gitId":"tlylt"},"content":"        switch (command) {"},{"lineNumber":25,"author":{"gitId":"tlylt"},"content":"            case BYE:"},{"lineNumber":26,"author":{"gitId":"tlylt"},"content":"                System.out.println(\"Bye now!\");"},{"lineNumber":27,"author":{"gitId":"tlylt"},"content":"                return true;"},{"lineNumber":28,"author":{"gitId":"tlylt"},"content":"            case TODO:"},{"lineNumber":29,"author":{"gitId":"tlylt"},"content":"                database.addToDB(new Todo(false, LegitCommand.TODO.getDetail()));"},{"lineNumber":30,"author":{"gitId":"tlylt"},"content":"                break;"},{"lineNumber":31,"author":{"gitId":"tlylt"},"content":"            case EVENT:"},{"lineNumber":32,"author":{"gitId":"tlylt"},"content":"                database.addToDB(new Event(false, LegitCommand.EVENT.getDetail()));"},{"lineNumber":33,"author":{"gitId":"tlylt"},"content":"                break;"},{"lineNumber":34,"author":{"gitId":"tlylt"},"content":"            case DEADLINE:"},{"lineNumber":35,"author":{"gitId":"tlylt"},"content":"                database.addToDB(new Deadline(false, LegitCommand.DEADLINE.getDetail()));"},{"lineNumber":36,"author":{"gitId":"tlylt"},"content":"                break;"},{"lineNumber":37,"author":{"gitId":"tlylt"},"content":"            case LIST:"},{"lineNumber":38,"author":{"gitId":"tlylt"},"content":"                database.listFromDB();"},{"lineNumber":39,"author":{"gitId":"tlylt"},"content":"                break;"},{"lineNumber":40,"author":{"gitId":"tlylt"},"content":"            case DONE:"},{"lineNumber":41,"author":{"gitId":"tlylt"},"content":"                database.markDoneToDB(LegitCommand.DONE.getDetail());"},{"lineNumber":42,"author":{"gitId":"tlylt"},"content":"                break;"},{"lineNumber":43,"author":{"gitId":"tlylt"},"content":"            case DELETE:"},{"lineNumber":44,"author":{"gitId":"tlylt"},"content":"                database.deleteFromDB(LegitCommand.DELETE.getDetail());"},{"lineNumber":45,"author":{"gitId":"tlylt"},"content":"                break;"},{"lineNumber":46,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"tlylt"},"content":"        return false;"},{"lineNumber":48,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":50,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":51,"author":{"gitId":"tlylt"},"content":"    public static void main(String[] args) {"},{"lineNumber":52,"author":{"gitId":"tlylt"},"content":"        // Pre input setup"},{"lineNumber":53,"author":{"gitId":"tlylt"},"content":"        System.out.println(STARTER);"},{"lineNumber":54,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":55,"author":{"gitId":"tlylt"},"content":"        // Start while loop"},{"lineNumber":56,"author":{"gitId":"tlylt"},"content":"        while (SCANNER.hasNext()) {"},{"lineNumber":57,"author":{"gitId":"tlylt"},"content":"            try {"},{"lineNumber":58,"author":{"gitId":"tlylt"},"content":"                // Parse input"},{"lineNumber":59,"author":{"gitId":"tlylt"},"content":"                LegitCommand command \u003d Parser.parseInput(SCANNER.nextLine());"},{"lineNumber":60,"author":{"gitId":"tlylt"},"content":"                // Execute command"},{"lineNumber":61,"author":{"gitId":"tlylt"},"content":"                boolean end \u003d executeCommand(command);"},{"lineNumber":62,"author":{"gitId":"tlylt"},"content":"                // Close current loop"},{"lineNumber":63,"author":{"gitId":"tlylt"},"content":"                System.out.println(LINE_BREAK);"},{"lineNumber":64,"author":{"gitId":"tlylt"},"content":"                if (end) {"},{"lineNumber":65,"author":{"gitId":"tlylt"},"content":"                    break;"},{"lineNumber":66,"author":{"gitId":"tlylt"},"content":"                }"},{"lineNumber":67,"author":{"gitId":"tlylt"},"content":"            } catch (HahaException ex) {"},{"lineNumber":68,"author":{"gitId":"tlylt"},"content":"                System.out.println(ex);"},{"lineNumber":69,"author":{"gitId":"tlylt"},"content":"                System.out.println(LINE_BREAK);"},{"lineNumber":70,"author":{"gitId":"tlylt"},"content":"            }"},{"lineNumber":71,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":72,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":75,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":75}},{"path":"src/main/java/HahaEmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"public class HahaEmptyCommandException extends HahaException {"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":"    HahaEmptyCommandException(String command) {"},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"        super(command);"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"    public String toString() {"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"        return \"Empty Command! Please enter something legit.\";"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":10}},{"path":"src/main/java/HahaEmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"public class HahaEmptyDescriptionException extends HahaException {"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"    HahaEmptyDescriptionException(String command) {"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":"        super(command);"},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"        return \"OOPS!!! The description of a \" + getCommand() +"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"                \" cannot be empty.\";"},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":12}},{"path":"src/main/java/HahaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"public abstract class HahaException extends Exception {"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":"    private final String command;"},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":"    HahaException(String command) {"},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":"        this.command \u003d command;"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"    public String getCommand() {"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"        return command;"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"    public abstract String toString();"},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":13}},{"path":"src/main/java/HahaTaskNumberNotIntException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"public class HahaTaskNumberNotIntException extends HahaException {"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"    HahaTaskNumberNotIntException(String command) {"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":"        super(command);"},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"        return \"Is that really a number?\\nTry again with a proper task number!\";"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":11}},{"path":"src/main/java/HahaWrongCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"public class HahaWrongCommandException extends HahaException {"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"    HahaWrongCommandException(String command) {"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":"        super(command);"},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"        return \"OOPS!!! I\u0027m sorry, \" +"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"                \"but I don\u0027t know what that means :-(\\n\" +"},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":"                \"Are you sure you mean the following?\\n\" +"},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"                \"\\\"\" + getCommand() + \"\\\"\";"},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":14}},{"path":"src/main/java/LegitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"public enum LegitCommand {"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":"    DEADLINE(\"deadline\"),"},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"    EVENT(\"event\"),"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":"    TODO(\"todo\"),"},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":"    LIST(\"list\"),"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"    DONE(\"done\"),"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"    DELETE(\"delete\"),"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"    BYE(\"bye\");"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"    private final String rep;"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"    private String detail \u003d \"\";"},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"    LegitCommand(String rep) {"},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"        this.rep \u003d rep;"},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":"    void setDetail(String detail) {"},{"lineNumber":17,"author":{"gitId":"tlylt"},"content":"        this.detail \u003d detail;"},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":20,"author":{"gitId":"tlylt"},"content":"    String getDetail() {"},{"lineNumber":21,"author":{"gitId":"tlylt"},"content":"        return detail;"},{"lineNumber":22,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":24,"author":{"gitId":"tlylt"},"content":"    String getRep() {"},{"lineNumber":25,"author":{"gitId":"tlylt"},"content":"        return rep;"},{"lineNumber":26,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"tlylt"},"content":"    "},{"lineNumber":28,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":28}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"import java.util.Arrays;"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"public class Parser {"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":"    static int taskNumber(String command) throws HahaTaskNumberNotIntException {"},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":"        try {"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"            return Integer.parseInt(\"\" + command.charAt(command.length() - 1));"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"            throw new HahaTaskNumberNotIntException(command);"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"    static String[] tokenize(String command) {"},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"        return command.split(\" \", 2);"},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":"    static void handleEmptyCommand(String input) throws HahaEmptyCommandException {"},{"lineNumber":17,"author":{"gitId":"tlylt"},"content":"        if (input.isEmpty()) {"},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":"            throw new HahaEmptyCommandException(input);"},{"lineNumber":19,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":22,"author":{"gitId":"tlylt"},"content":"    static void handleEmptyDescriptionCommand(String input) throws HahaEmptyDescriptionException {"},{"lineNumber":23,"author":{"gitId":"tlylt"},"content":"        // TaskType"},{"lineNumber":24,"author":{"gitId":"tlylt"},"content":"        String task \u003d Parser.tokenize(input)[0];"},{"lineNumber":25,"author":{"gitId":"tlylt"},"content":"        String description \u003d Parser.tokenize(input).length \u003d\u003d 2 ? Parser.tokenize(input)[1] : \"\";"},{"lineNumber":26,"author":{"gitId":"tlylt"},"content":"        // Check input has description following task command words"},{"lineNumber":27,"author":{"gitId":"tlylt"},"content":"        if (Arrays"},{"lineNumber":28,"author":{"gitId":"tlylt"},"content":"                .stream(TaskType.values())"},{"lineNumber":29,"author":{"gitId":"tlylt"},"content":"                .map(TaskType::getRep)"},{"lineNumber":30,"author":{"gitId":"tlylt"},"content":"                .anyMatch(x -\u003e x.equals(task)) \u0026\u0026"},{"lineNumber":31,"author":{"gitId":"tlylt"},"content":"                description.isEmpty()"},{"lineNumber":32,"author":{"gitId":"tlylt"},"content":"        ) {"},{"lineNumber":33,"author":{"gitId":"tlylt"},"content":"            throw new HahaEmptyDescriptionException(input);"},{"lineNumber":34,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":37,"author":{"gitId":"tlylt"},"content":"    static void handleWrongCommand(String input) throws HahaWrongCommandException {"},{"lineNumber":38,"author":{"gitId":"tlylt"},"content":"        // Check input starts with specified command words"},{"lineNumber":39,"author":{"gitId":"tlylt"},"content":"        if (Arrays"},{"lineNumber":40,"author":{"gitId":"tlylt"},"content":"                .stream(LegitCommand.values())"},{"lineNumber":41,"author":{"gitId":"tlylt"},"content":"                .map(LegitCommand::getRep)"},{"lineNumber":42,"author":{"gitId":"tlylt"},"content":"                .noneMatch(command -\u003e Parser.tokenize(input)[0].equals(command))) {"},{"lineNumber":43,"author":{"gitId":"tlylt"},"content":"            throw new HahaWrongCommandException(input);"},{"lineNumber":44,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":47,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":48,"author":{"gitId":"tlylt"},"content":"    static void handleSafety(String input) throws HahaEmptyCommandException,"},{"lineNumber":49,"author":{"gitId":"tlylt"},"content":"            HahaWrongCommandException,"},{"lineNumber":50,"author":{"gitId":"tlylt"},"content":"            HahaEmptyDescriptionException {"},{"lineNumber":51,"author":{"gitId":"tlylt"},"content":"        Parser.handleEmptyCommand(input);"},{"lineNumber":52,"author":{"gitId":"tlylt"},"content":"        Parser.handleWrongCommand(input);"},{"lineNumber":53,"author":{"gitId":"tlylt"},"content":"        Parser.handleEmptyDescriptionCommand(input);"},{"lineNumber":54,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":56,"author":{"gitId":"tlylt"},"content":"    static LegitCommand handleInterpret(String command) {"},{"lineNumber":57,"author":{"gitId":"tlylt"},"content":"        String[] tokenized \u003d Parser.tokenize(command);"},{"lineNumber":58,"author":{"gitId":"tlylt"},"content":"        String firstWord \u003d tokenized[0];"},{"lineNumber":59,"author":{"gitId":"tlylt"},"content":"        switch (firstWord) {"},{"lineNumber":60,"author":{"gitId":"tlylt"},"content":"            case \"todo\":"},{"lineNumber":61,"author":{"gitId":"tlylt"},"content":"                LegitCommand.TODO.setDetail(tokenized[1]);"},{"lineNumber":62,"author":{"gitId":"tlylt"},"content":"                return LegitCommand.TODO;"},{"lineNumber":63,"author":{"gitId":"tlylt"},"content":"            case \"deadline\":"},{"lineNumber":64,"author":{"gitId":"tlylt"},"content":"                LegitCommand.DEADLINE.setDetail(tokenized[1]);"},{"lineNumber":65,"author":{"gitId":"tlylt"},"content":"                return LegitCommand.DEADLINE;"},{"lineNumber":66,"author":{"gitId":"tlylt"},"content":"            case \"event\":"},{"lineNumber":67,"author":{"gitId":"tlylt"},"content":"                LegitCommand.EVENT.setDetail(tokenized[1]);"},{"lineNumber":68,"author":{"gitId":"tlylt"},"content":"                return LegitCommand.EVENT;"},{"lineNumber":69,"author":{"gitId":"tlylt"},"content":"            case \"list\":"},{"lineNumber":70,"author":{"gitId":"tlylt"},"content":"                return LegitCommand.LIST;"},{"lineNumber":71,"author":{"gitId":"tlylt"},"content":"            case \"done\":"},{"lineNumber":72,"author":{"gitId":"tlylt"},"content":"                LegitCommand.DONE.setDetail(tokenized[1]);"},{"lineNumber":73,"author":{"gitId":"tlylt"},"content":"                return LegitCommand.DONE;"},{"lineNumber":74,"author":{"gitId":"tlylt"},"content":"            case \"delete\":"},{"lineNumber":75,"author":{"gitId":"tlylt"},"content":"                LegitCommand.DELETE.setDetail(tokenized[1]);"},{"lineNumber":76,"author":{"gitId":"tlylt"},"content":"                return LegitCommand.DELETE;"},{"lineNumber":77,"author":{"gitId":"tlylt"},"content":"            case \"bye\":"},{"lineNumber":78,"author":{"gitId":"tlylt"},"content":"                return LegitCommand.BYE;"},{"lineNumber":79,"author":{"gitId":"tlylt"},"content":"            default:"},{"lineNumber":80,"author":{"gitId":"tlylt"},"content":"                throw new IllegalStateException(\"Unexpected value: \" + firstWord);"},{"lineNumber":81,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":84,"author":{"gitId":"tlylt"},"content":"    static LegitCommand parseInput(String input) throws HahaEmptyCommandException,"},{"lineNumber":85,"author":{"gitId":"tlylt"},"content":"            HahaWrongCommandException,"},{"lineNumber":86,"author":{"gitId":"tlylt"},"content":"            HahaEmptyDescriptionException {"},{"lineNumber":87,"author":{"gitId":"tlylt"},"content":"        // Safety checks"},{"lineNumber":88,"author":{"gitId":"tlylt"},"content":"        Parser.handleSafety(input);"},{"lineNumber":89,"author":{"gitId":"tlylt"},"content":"        // Interpret"},{"lineNumber":90,"author":{"gitId":"tlylt"},"content":"        return Parser.handleInterpret(input);"},{"lineNumber":91,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":92}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"public abstract class Task {"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":"    protected final String description;"},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":"    protected final String type;"},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"    public Task(String type, boolean isDone, String description) {"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"        this.type \u003d type;"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"        this.isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"        this.description \u003d description;"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"    public String getStatusIcon() {"},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); //return [X] or [ ] symbols"},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":"    public String getTypeIcon() {"},{"lineNumber":17,"author":{"gitId":"tlylt"},"content":"        return \"[\" + type + \"]\";"},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":20,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":21,"author":{"gitId":"tlylt"},"content":"    public void setDone(boolean done) {"},{"lineNumber":22,"author":{"gitId":"tlylt"},"content":"        isDone \u003d done;"},{"lineNumber":23,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":25,"author":{"gitId":"tlylt"},"content":"    public boolean getIsDone() {"},{"lineNumber":26,"author":{"gitId":"tlylt"},"content":"        return isDone;"},{"lineNumber":27,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":29,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":29}},{"path":"src/main/java/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"public enum TaskType {"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":"    DEADLINE(\"deadline\"),"},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"    EVENT(\"event\"),"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":"    TODO(\"todo\");"},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":"    private final String rep;"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"    TaskType(String rep) {"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"        this.rep \u003d rep;"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":"    String getRep() {"},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"        return rep;"},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":14}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"    public Todo(boolean isDone, String description) {"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":"        super(\"T\", isDone, description);"},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"        return getTypeIcon() + getStatusIcon() + \" \" + description;"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":"list"},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":"list"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"list"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"done 3"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"blah"},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":"todo"},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"deadline"},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"event"},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"done whatever"},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":"blah blah"},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":"delete 1"},{"lineNumber":17,"author":{"gitId":"tlylt"},"content":"done 2"},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":"done 10"},{"lineNumber":19,"author":{"gitId":"tlylt"},"content":"list"},{"lineNumber":20,"author":{"gitId":"tlylt"},"content":"bye"}],"authorContributionMap":{"tlylt":20}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":"java -classpath ..\\bin Haha \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"tlylt":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"tlylt"},"content":"java -classpath ../bin Haha \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"tlylt":1,"-":37}}]
