[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":"# Haha"},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"[![CI Status](https://github.com/tlylt/ip/workflows/Java%20CI/badge.svg)](https://github.com/tlylt/ip/actions)"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":"![Haha Image](docs/images/OverallDemo.gif)"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"## Features "},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"- Add a number of tasks (Todos, Events \u0026 Deadlines)"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"- Display status of saved tasks"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"- Mark tasks as completed"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"- Delete selected task"},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":"- Find task by keyword"},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"## Usage"},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":"### `todo XXX` - Add a Todo"},{"lineNumber":17,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":"A new todo with description(XXX) will be added."},{"lineNumber":19,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":20,"author":{"gitId":"tlylt"},"content":"Duplicated todos will not be allowed and will result in an error warning."},{"lineNumber":21,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":22,"author":{"gitId":"tlylt"},"content":"Example of usage: "},{"lineNumber":23,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":24,"author":{"gitId":"tlylt"},"content":"`todo homework`"},{"lineNumber":25,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":26,"author":{"gitId":"tlylt"},"content":"Sample screenshot:"},{"lineNumber":27,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":28,"author":{"gitId":"tlylt"},"content":"![Todo Image](docs/images/todoDemo.png)"},{"lineNumber":29,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":30,"author":{"gitId":"tlylt"},"content":"### `deadline XXX /by YYY ZZZ` - Add a Deadline"},{"lineNumber":31,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":32,"author":{"gitId":"tlylt"},"content":"A new deadline with description(XXX), date(YYY) \u0026 time(ZZZ) will be added."},{"lineNumber":33,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":34,"author":{"gitId":"tlylt"},"content":"Duplicated deadlines will not be allowed and will result in an error warning."},{"lineNumber":35,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":36,"author":{"gitId":"tlylt"},"content":"Example of usage: "},{"lineNumber":37,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":38,"author":{"gitId":"tlylt"},"content":"`deadline housework /by 2020-02-15 18:00`"},{"lineNumber":39,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":40,"author":{"gitId":"tlylt"},"content":"Sample screenshot:"},{"lineNumber":41,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":42,"author":{"gitId":"tlylt"},"content":"![Deadline Image](docs/images/deadlineDemo.png)"},{"lineNumber":43,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":44,"author":{"gitId":"tlylt"},"content":"### `event XXX /at YYY ZZZ` - Add an Event"},{"lineNumber":45,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":46,"author":{"gitId":"tlylt"},"content":"A new event with description(XXX), date(YYY) \u0026 time(ZZZ) will be added."},{"lineNumber":47,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":48,"author":{"gitId":"tlylt"},"content":"Duplicated events will not be allowed and will result in an error warning."},{"lineNumber":49,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":50,"author":{"gitId":"tlylt"},"content":"Example of usage: "},{"lineNumber":51,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":52,"author":{"gitId":"tlylt"},"content":"`event concert /at 2020-02-16 20:00`"},{"lineNumber":53,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":54,"author":{"gitId":"tlylt"},"content":"Sample screenshot:"},{"lineNumber":55,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":56,"author":{"gitId":"tlylt"},"content":"![Event Image](docs/images/eventDemo.png)"},{"lineNumber":57,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":58,"author":{"gitId":"tlylt"},"content":"### `list` - List all saved tasks"},{"lineNumber":59,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":60,"author":{"gitId":"tlylt"},"content":"Display all saved tasks in a list."},{"lineNumber":61,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":62,"author":{"gitId":"tlylt"},"content":"Example of usage: "},{"lineNumber":63,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":64,"author":{"gitId":"tlylt"},"content":"`list`"},{"lineNumber":65,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":66,"author":{"gitId":"tlylt"},"content":"Sample screenshot:"},{"lineNumber":67,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":68,"author":{"gitId":"tlylt"},"content":"![List Image](docs/images/listDemo.png)"},{"lineNumber":69,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":70,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":71,"author":{"gitId":"tlylt"},"content":"### `done XXX` - Mark a task as completed"},{"lineNumber":72,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":73,"author":{"gitId":"tlylt"},"content":"The task at the index(XXX) will be marked as done."},{"lineNumber":74,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":75,"author":{"gitId":"tlylt"},"content":"Index starts from 1 and out of range indexes will result in an error warning."},{"lineNumber":76,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":77,"author":{"gitId":"tlylt"},"content":"Example of usage: "},{"lineNumber":78,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":79,"author":{"gitId":"tlylt"},"content":"`done 1`"},{"lineNumber":80,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":81,"author":{"gitId":"tlylt"},"content":"Sample screenshot:"},{"lineNumber":82,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":83,"author":{"gitId":"tlylt"},"content":"![Done Image](docs/images/doneDemo.png)"},{"lineNumber":84,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":85,"author":{"gitId":"tlylt"},"content":"### `delete XXX` - Delete a task"},{"lineNumber":86,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":87,"author":{"gitId":"tlylt"},"content":"The task at the index(XXX) will be deleted."},{"lineNumber":88,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":89,"author":{"gitId":"tlylt"},"content":"Index starts from 1 and out of range indexes will result in an error warning."},{"lineNumber":90,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":91,"author":{"gitId":"tlylt"},"content":"Example of usage: "},{"lineNumber":92,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":93,"author":{"gitId":"tlylt"},"content":"`delete 1`"},{"lineNumber":94,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":95,"author":{"gitId":"tlylt"},"content":"Sample screenshot:"},{"lineNumber":96,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":97,"author":{"gitId":"tlylt"},"content":"![Delete Image](docs/images/deleteDemo.png)"},{"lineNumber":98,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":99,"author":{"gitId":"tlylt"},"content":"### `find XXX` - Find tasks containing XXX in its description"},{"lineNumber":100,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":101,"author":{"gitId":"tlylt"},"content":"Tasks with descriptions including the specified keyword(XXX) will be listed."},{"lineNumber":102,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":103,"author":{"gitId":"tlylt"},"content":"When there are no related tasks, Haha will respond appropriately."},{"lineNumber":104,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":105,"author":{"gitId":"tlylt"},"content":"Example of usage: "},{"lineNumber":106,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":107,"author":{"gitId":"tlylt"},"content":"`find concert`"},{"lineNumber":108,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":109,"author":{"gitId":"tlylt"},"content":"Sample screenshot:"},{"lineNumber":110,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":111,"author":{"gitId":"tlylt"},"content":"![Find Image](docs/images/findDemo.png)"},{"lineNumber":112,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":113,"author":{"gitId":"tlylt"},"content":"### `bye` - Exit application"},{"lineNumber":114,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":115,"author":{"gitId":"tlylt"},"content":"The application will exit gracefully."},{"lineNumber":116,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":117,"author":{"gitId":"tlylt"},"content":"Example of usage: "},{"lineNumber":118,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":119,"author":{"gitId":"tlylt"},"content":"`bye`"}],"authorContributionMap":{"tlylt":119}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":17,"author":{"gitId":"tlylt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"tlylt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"tlylt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"tlylt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"tlylt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"tlylt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"tlylt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"tlylt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"tlylt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"tlylt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"tlylt"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":46,"author":{"gitId":"tlylt"},"content":"    mainClassName \u003d \"tlylt.haha.Launcher\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":50,"author":{"gitId":"tlylt"},"content":"    archiveBaseName \u003d \"haha\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"run {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"tlylt":16,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"# Haha User Guide"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":"![Haha Image](images/OverallDemo.gif)"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":"- Add a number of tasks (Todos, Events \u0026 Deadlines)"},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":"- Display status of saved tasks"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"- Mark tasks as completed"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"- Delete selected task"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"- Find task by keyword"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"### `todo XXX` - Add a Todo"},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":"A new todo with description(XXX) will be added."},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":17,"author":{"gitId":"tlylt"},"content":"Duplicated todos will not be allowed and will result in an error warning."},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":19,"author":{"gitId":"tlylt"},"content":"Example of usage: "},{"lineNumber":20,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":21,"author":{"gitId":"tlylt"},"content":"`todo homework`"},{"lineNumber":22,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":23,"author":{"gitId":"tlylt"},"content":"Sample screenshot:"},{"lineNumber":24,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":25,"author":{"gitId":"tlylt"},"content":"![Todo Image](images/todoDemo.png)"},{"lineNumber":26,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":27,"author":{"gitId":"tlylt"},"content":"### `deadline XXX /by YYY ZZZ` - Add a Deadline"},{"lineNumber":28,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":29,"author":{"gitId":"tlylt"},"content":"A new deadline with description(XXX), date(YYY) \u0026 time(ZZZ) will be added."},{"lineNumber":30,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":31,"author":{"gitId":"tlylt"},"content":"Duplicated deadlines will not be allowed and will result in an error warning."},{"lineNumber":32,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":33,"author":{"gitId":"tlylt"},"content":"Example of usage: "},{"lineNumber":34,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":35,"author":{"gitId":"tlylt"},"content":"`deadline housework /by 2020-02-15 18:00`"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"tlylt"},"content":"Sample screenshot:"},{"lineNumber":38,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":39,"author":{"gitId":"tlylt"},"content":"![Deadline Image](images/deadlineDemo.png)"},{"lineNumber":40,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":41,"author":{"gitId":"tlylt"},"content":"### `event XXX /at YYY ZZZ` - Add an Event"},{"lineNumber":42,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":43,"author":{"gitId":"tlylt"},"content":"A new event with description(XXX), date(YYY) \u0026 time(ZZZ) will be added."},{"lineNumber":44,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":45,"author":{"gitId":"tlylt"},"content":"Duplicated events will not be allowed and will result in an error warning."},{"lineNumber":46,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":47,"author":{"gitId":"tlylt"},"content":"Example of usage: "},{"lineNumber":48,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":49,"author":{"gitId":"tlylt"},"content":"`event concert /at 2020-02-16 20:00`"},{"lineNumber":50,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":51,"author":{"gitId":"tlylt"},"content":"Sample screenshot:"},{"lineNumber":52,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":53,"author":{"gitId":"tlylt"},"content":"![Event Image](images/eventDemo.png)"},{"lineNumber":54,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":55,"author":{"gitId":"tlylt"},"content":"### `list` - List all saved tasks"},{"lineNumber":56,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":57,"author":{"gitId":"tlylt"},"content":"Display all saved tasks in a list."},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"tlylt"},"content":"`list`"},{"lineNumber":62,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":63,"author":{"gitId":"tlylt"},"content":"Sample screenshot:"},{"lineNumber":64,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":65,"author":{"gitId":"tlylt"},"content":"![List Image](images/listDemo.png)"},{"lineNumber":66,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"tlylt"},"content":"### `done XXX` - Mark a task as completed"},{"lineNumber":69,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":70,"author":{"gitId":"tlylt"},"content":"The task at the index(XXX) will be marked as done."},{"lineNumber":71,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":72,"author":{"gitId":"tlylt"},"content":"Index starts from 1 and out of range indexes will result in an error warning."},{"lineNumber":73,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":74,"author":{"gitId":"tlylt"},"content":"Example of usage: "},{"lineNumber":75,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":76,"author":{"gitId":"tlylt"},"content":"`done 1`"},{"lineNumber":77,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":78,"author":{"gitId":"tlylt"},"content":"Sample screenshot:"},{"lineNumber":79,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":80,"author":{"gitId":"tlylt"},"content":"![Done Image](images/doneDemo.png)"},{"lineNumber":81,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":82,"author":{"gitId":"tlylt"},"content":"### `delete XXX` - Delete a task"},{"lineNumber":83,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":84,"author":{"gitId":"tlylt"},"content":"The task at the index(XXX) will be deleted."},{"lineNumber":85,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":86,"author":{"gitId":"tlylt"},"content":"Index starts from 1 and out of range indexes will result in an error warning."},{"lineNumber":87,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":88,"author":{"gitId":"tlylt"},"content":"Example of usage: "},{"lineNumber":89,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":90,"author":{"gitId":"tlylt"},"content":"`delete 1`"},{"lineNumber":91,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":92,"author":{"gitId":"tlylt"},"content":"Sample screenshot:"},{"lineNumber":93,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":94,"author":{"gitId":"tlylt"},"content":"![Delete Image](images/deleteDemo.png)"},{"lineNumber":95,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":96,"author":{"gitId":"tlylt"},"content":"### `find XXX` - Find tasks containing XXX in its description"},{"lineNumber":97,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":98,"author":{"gitId":"tlylt"},"content":"Tasks with descriptions including the specified keyword(XXX) will be listed."},{"lineNumber":99,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":100,"author":{"gitId":"tlylt"},"content":"When there are no related tasks, Haha will respond appropriately."},{"lineNumber":101,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":102,"author":{"gitId":"tlylt"},"content":"Example of usage: "},{"lineNumber":103,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":104,"author":{"gitId":"tlylt"},"content":"`find concert`"},{"lineNumber":105,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":106,"author":{"gitId":"tlylt"},"content":"Sample screenshot:"},{"lineNumber":107,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":108,"author":{"gitId":"tlylt"},"content":"![Find Image](images/findDemo.png)"},{"lineNumber":109,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":110,"author":{"gitId":"tlylt"},"content":"### `bye` - Exit application"},{"lineNumber":111,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":112,"author":{"gitId":"tlylt"},"content":"The application will exit gracefully."},{"lineNumber":113,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":114,"author":{"gitId":"tlylt"},"content":"Example of usage: "},{"lineNumber":115,"author":{"gitId":"-"},"content":""},{"lineNumber":116,"author":{"gitId":"tlylt"},"content":"`bye`"}],"authorContributionMap":{"tlylt":105,"-":11}},{"path":"src/main/java/tlylt/haha/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"package tlylt.haha;"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":" * Representation of a deadline task."},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"     * Constructs a Deadline task."},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"     * @param isDone      Whether task is set as completed."},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":"     * @param description Details of task."},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"    public Deadline(boolean isDone, String description) {"},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"        super(\"D\", isDone, description, Parser.getDate(description), Parser.getTime(description));"},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":17,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":"     * Returns string representation of task."},{"lineNumber":19,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"tlylt"},"content":"     * @return String task representation."},{"lineNumber":21,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"tlylt"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"tlylt"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"tlylt"},"content":"        return getTypeIcon() + getStatusIcon() + \" \" + modifiedDescription(\"by\");"},{"lineNumber":25,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":26}},{"path":"src/main/java/tlylt/haha/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"package tlylt.haha;"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":"import javafx.geometry.Insets;"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"import javafx.geometry.Pos;"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"import javafx.scene.Node;"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"import javafx.scene.control.Label;"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"import javafx.scene.effect.BlurType;"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"import javafx.scene.effect.DropShadow;"},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":17,"author":{"gitId":"tlylt"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":19,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":20,"author":{"gitId":"tlylt"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"tlylt"},"content":"    private static final int DIALOG_BOX_PADDING \u003d 10;"},{"lineNumber":22,"author":{"gitId":"tlylt"},"content":"    private static final int TEXT_PADDING \u003d 5;"},{"lineNumber":23,"author":{"gitId":"tlylt"},"content":"    private static final double PICTURE_SIZE \u003d 90.0;"},{"lineNumber":24,"author":{"gitId":"tlylt"},"content":"    private static final double SPACING \u003d 20.0;"},{"lineNumber":25,"author":{"gitId":"tlylt"},"content":"    private static final Color TEXT_BACKGROUND_COLOR \u003d Color.rgb(224, 234, 245);"},{"lineNumber":26,"author":{"gitId":"tlylt"},"content":"    private static final Color TEXT_SHADOW_COLOR \u003d Color.rgb(200, 220, 230);"},{"lineNumber":27,"author":{"gitId":"tlylt"},"content":"    private static final DropShadow TEXT_SHADOW \u003d new DropShadow(BlurType.GAUSSIAN, TEXT_SHADOW_COLOR,"},{"lineNumber":28,"author":{"gitId":"tlylt"},"content":"            2, 10, 3, 3);"},{"lineNumber":29,"author":{"gitId":"tlylt"},"content":"    private final Label text;"},{"lineNumber":30,"author":{"gitId":"tlylt"},"content":"    private final ImageView displayPicture;"},{"lineNumber":31,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":32,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"tlylt"},"content":"     * Generates a DialogBox that displays the interactions between user and the program."},{"lineNumber":34,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    //@@author Jeffry Lum-reused"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    //Reused from https://se-education.org/guides/tutorials/javaFx.html with minor modifications"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public DialogBox(Label text, ImageView imageView) {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super(SPACING);"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.text \u003d text;"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        displayPicture \u003d imageView;"},{"lineNumber":41,"author":{"gitId":"-"},"content":""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        configureText();"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        configurePicture();"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        configureDialogBox();"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private void configureText() {"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        text.setWrapText(true);"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        text.setMinHeight(Region.USE_PREF_SIZE);"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        text.setAlignment(Pos.CENTER);"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        text.setPadding(new Insets(TEXT_PADDING, TEXT_PADDING, TEXT_PADDING, TEXT_PADDING));"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        text.setBackground(new Background(new BackgroundFill(TEXT_BACKGROUND_COLOR, CornerRadii.EMPTY, Insets.EMPTY)));"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        text.setStyle(\"-fx-text-fill:#31456A;-fx-font-size: 11px;-fx-font-weight:bold;\");"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        text.setEffect(TEXT_SHADOW);"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private void configurePicture() {"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        displayPicture.setFitWidth(PICTURE_SIZE);"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        displayPicture.setFitHeight(PICTURE_SIZE);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"-"},"content":""},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void configureDialogBox() {"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.setPadding(new Insets(DIALOG_BOX_PADDING, DIALOG_BOX_PADDING, DIALOG_BOX_PADDING, DIALOG_BOX_PADDING));"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.setAlignment(Pos.CENTER_RIGHT);"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.getChildren().addAll(text, displayPicture);"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    //@@author Jeffry Lum-reused"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    //Reused from https://se-education.org/guides/tutorials/javaFx.html with minor modifications"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private DialogBox flip() {"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DialogBox reversedDialogBox \u003d new DialogBox(this.text, this.displayPicture);"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        reversedDialogBox.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        ObservableList\u003cNode\u003e listOfNodes \u003d FXCollections.observableArrayList(reversedDialogBox.getChildren());"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        FXCollections.reverse(listOfNodes);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        reversedDialogBox.getChildren().setAll(listOfNodes);"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return reversedDialogBox;"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"    //@@author Jeffry Lum-reused"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    //Reused from https://se-education.org/guides/tutorials/javaFx.html with minor modifications"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static DialogBox getUserDialog(Label label, ImageView imageView) {"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new DialogBox(label, imageView);"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"    //@@author Jeffry Lum-reused"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    //Reused from https://se-education.org/guides/tutorials/javaFx.html with minor modifications"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static DialogBox getHahaDialog(Label label, ImageView imageView) {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return new DialogBox(label, imageView).flip();"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"tlylt":34,"-":60}},{"path":"src/main/java/tlylt/haha/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"package tlylt.haha;"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":" * Representation of a Event task."},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"     * Constructs an Event task."},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"     * @param isDone      Whether task is set as completed."},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":"     * @param description Details of task."},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"    public Event(boolean isDone, String description) {"},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"        super(\"E\", isDone, description, Parser.getDate(description), Parser.getTime(description));"},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":17,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":"     * Returns string representation of task."},{"lineNumber":19,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"tlylt"},"content":"     * @return String task representation."},{"lineNumber":21,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"tlylt"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"tlylt"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"tlylt"},"content":"        return getTypeIcon() + getStatusIcon() + \" \" + modifiedDescription(\"at\");"},{"lineNumber":25,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":26}},{"path":"src/main/java/tlylt/haha/Haha.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"package tlylt.haha;"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"import javafx.application.Platform;"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"import javafx.scene.control.Button;"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"import javafx.scene.control.Label;"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"import javafx.scene.image.Image;"},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":17,"author":{"gitId":"tlylt"},"content":"import javafx.stage.Stage;"},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":19,"author":{"gitId":"tlylt"},"content":"public class Haha extends Application {"},{"lineNumber":20,"author":{"gitId":"tlylt"},"content":"    private static final double PREF_WIDTH \u003d 400.0;"},{"lineNumber":21,"author":{"gitId":"tlylt"},"content":"    private static final double PREF_HEIGHT \u003d 600.0;"},{"lineNumber":22,"author":{"gitId":"tlylt"},"content":"    private static final int SCROLL_PREF_HEIGHT \u003d 572;"},{"lineNumber":23,"author":{"gitId":"tlylt"},"content":"    private static final double USER_INPUT_PREF_WIDTH \u003d 325.0;"},{"lineNumber":24,"author":{"gitId":"tlylt"},"content":"    private static final double V_VALUE \u003d 1.0;"},{"lineNumber":25,"author":{"gitId":"tlylt"},"content":"    private static final double SEND_BUTTON_PREF_WIDTH \u003d 55.0;"},{"lineNumber":26,"author":{"gitId":"tlylt"},"content":"    private static final double ANCHOR \u003d 1.0;"},{"lineNumber":27,"author":{"gitId":"tlylt"},"content":"    private static final String FX_BACKGROUND_IMAGE_URL_IMAGES_BACKGROUND_JPG \u003d"},{"lineNumber":28,"author":{"gitId":"tlylt"},"content":"            \"-fx-background-image: url(\\\"/images/background.jpg\\\");\";"},{"lineNumber":29,"author":{"gitId":"tlylt"},"content":"    private final TaskList database \u003d new TaskList();"},{"lineNumber":30,"author":{"gitId":"tlylt"},"content":"    private final Ui ui \u003d new Ui();"},{"lineNumber":31,"author":{"gitId":"tlylt"},"content":"    private final ScrollPane scrollPane \u003d new ScrollPane();"},{"lineNumber":32,"author":{"gitId":"tlylt"},"content":"    private final VBox dialogContainer \u003d new VBox();"},{"lineNumber":33,"author":{"gitId":"tlylt"},"content":"    private final TextField userInput \u003d new TextField();"},{"lineNumber":34,"author":{"gitId":"tlylt"},"content":"    private final Button sendButton \u003d new Button(\"Send\");"},{"lineNumber":35,"author":{"gitId":"tlylt"},"content":"    private Scene scene;"},{"lineNumber":36,"author":{"gitId":"tlylt"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":37,"author":{"gitId":"tlylt"},"content":"    private final Image hahaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaHaha.png\"));"},{"lineNumber":38,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":39,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":40,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"tlylt"},"content":"     * Starts the internal program logic."},{"lineNumber":42,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"tlylt"},"content":"    public Haha() {"},{"lineNumber":44,"author":{"gitId":"tlylt"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":45,"author":{"gitId":"tlylt"},"content":"        List\u003cString\u003e list \u003d storage.getTasks();"},{"lineNumber":46,"author":{"gitId":"tlylt"},"content":"        this.database.readTasks(list);"},{"lineNumber":47,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":49,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"tlylt"},"content":"     * Starts the Application logic."},{"lineNumber":51,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //@@author Jeffry Lum-reused"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //Reused from https://se-education.org/guides/tutorials/javaFx.html with minor modifications"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void start(Stage stage) {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Step 1 Setting up required components"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setupComponents(stage);"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Step 2 Formatting the window to look as expected"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        formatStage(stage);"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        formatScrollPane();"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        formatSmallerComponents();"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        setLayout();"},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Step 3 Add functionality to handle user input"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        configureUserInteraction();"},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Start internal logic"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        new Haha();"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().add(makeHahaDialogBox(ui.welcome()));"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        stage.setScene(scene);"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        stage.show();"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"    //@@author Jeffry Lum-reused"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    //Reused from https://se-education.org/guides/tutorials/javaFx.html with minor modifications"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private void setupComponents(Stage stage) {"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        stage.getIcons().add(hahaImage);"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // The container for the content of the chat to scroll"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"-"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        mainLayout.setPrefSize(PREF_WIDTH, PREF_HEIGHT);"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.scene \u003d new Scene(mainLayout);"},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"    //@@author Jeffry Lum-reused"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    //Reused from https://se-education.org/guides/tutorials/javaFx.html with minor modifications"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void formatStage(Stage stage) {"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        stage.setTitle(\"Haha\");"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        stage.setResizable(false);"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        stage.setMinHeight(PREF_HEIGHT);"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        stage.setMinWidth(PREF_WIDTH);"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"-"},"content":"    //@@author Jeffry Lum-reused"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    //Reused from https://se-education.org/guides/tutorials/javaFx.html with minor modifications"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void formatScrollPane() {"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        scrollPane.setPrefSize(PREF_WIDTH, SCROLL_PREF_HEIGHT);"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        scrollPane.setVvalue(V_VALUE);"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        scrollPane.setFitToHeight(true);"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        dialogContainer.setStyle(FX_BACKGROUND_IMAGE_URL_IMAGES_BACKGROUND_JPG);"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"-"},"content":""},{"lineNumber":111,"author":{"gitId":"-"},"content":"    //@@author Jeffry Lum-reused"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    //Reused from https://se-education.org/guides/tutorials/javaFx.html with minor modifications"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void setLayout() {"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        AnchorPane.setTopAnchor(scrollPane, ANCHOR);"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        AnchorPane.setBottomAnchor(sendButton, ANCHOR);"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        AnchorPane.setRightAnchor(sendButton, ANCHOR);"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        AnchorPane.setLeftAnchor(userInput, ANCHOR);"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        AnchorPane.setBottomAnchor(userInput, ANCHOR);"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"    //@@author Jeffry Lum-reused"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    //Reused from https://se-education.org/guides/tutorials/javaFx.html with minor modifications"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void formatSmallerComponents() {"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        userInput.setPrefWidth(USER_INPUT_PREF_WIDTH);"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"    //@@author Jeffry Lum-reused"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    //Reused from https://se-education.org/guides/tutorials/javaFx.html with minor modifications"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void configureUserInteraction() {"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        configureSendButton();"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        userInput.setOnAction((event) -\u003e handleUserInput());"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // Scroll down to the end every time dialogContainer\u0027s height changes"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(V_VALUE));"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"-"},"content":""},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private DialogBox makeUserDialogBox(String text) {"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Label label \u003d new Label(text);"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return DialogBox.getUserDialog(label, new ImageView(userImage));"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void configureSendButton() {"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        sendButton.setPrefWidth(SEND_BUTTON_PREF_WIDTH);"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        sendButton.setOnMouseClicked((event) -\u003e handleUserInput());"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private DialogBox makeHahaDialogBox(String text) {"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Label label \u003d new Label(text);"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return DialogBox.getHahaDialog(label, new ImageView(hahaImage));"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"-"},"content":""},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * Creates two dialog boxes and clears the user input after processing."},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    //@@author Jeffry Lum-reused"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    //Reused from https://se-education.org/guides/tutorials/javaFx.html with minor modifications"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private void handleUserInput() {"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        String rawUserInput \u003d userInput.getText();"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"-"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":161,"author":{"gitId":"-"},"content":"                makeUserDialogBox(rawUserInput),"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                makeHahaDialogBox(getResponse(rawUserInput))"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        );"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"        userInput.clear();"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Generates a response from user input."},{"lineNumber":171,"author":{"gitId":"-"},"content":"     *"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * @param input raw input string from user."},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @return String response from the program after commands are executed."},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private String getResponse(String input) {"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        String response \u003d \"\";"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            LegitCommand command \u003d Parser.parseInput(input);"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            if (command.equals(LegitCommand.BYE)) {"},{"lineNumber":180,"author":{"gitId":"-"},"content":"                Platform.exit();"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                System.exit(0);"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            response +\u003d database.executeCommand(command, ui);"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        } catch (HahaException ex) {"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            return ex.toString();"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return response;"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}"},{"lineNumber":190,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"tlylt":51,"-":139}},{"path":"src/main/java/tlylt/haha/HahaEmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"package tlylt.haha;"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":" * Representation of empty command error."},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"public class HahaEmptyCommandException extends HahaException {"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"    HahaEmptyCommandException(String command) {"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"        super(command);"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"        return \"Empty Command! Please enter something legit.\";"},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":15}},{"path":"src/main/java/tlylt/haha/HahaEmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"package tlylt.haha;"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":" * Representation of no required description error."},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"public class HahaEmptyDescriptionException extends HahaException {"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"    HahaEmptyDescriptionException(String command) {"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"        super(command);"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"        return \"OOPS!!! The description of a \" + getCommand()"},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"                + \" cannot be empty.\";"},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":16}},{"path":"src/main/java/tlylt/haha/HahaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"package tlylt.haha;"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":" * Custom exception for Haha."},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"public abstract class HahaException extends Exception {"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"    private final String command;"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"    HahaException(String command) {"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"        this.command \u003d command;"},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"     * Returns the actual incorrect user input"},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":"     * @return String problematic input"},{"lineNumber":17,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":"    public String getCommand() {"},{"lineNumber":19,"author":{"gitId":"tlylt"},"content":"        return command;"},{"lineNumber":20,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":22,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"tlylt"},"content":"     * Specifies all subclass to have specific string representation."},{"lineNumber":24,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"tlylt"},"content":"     * @return String error message."},{"lineNumber":26,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"tlylt"},"content":"    public abstract String toString();"},{"lineNumber":28,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":28}},{"path":"src/main/java/tlylt/haha/HahaTaskNumberNotIntException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"package tlylt.haha;"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":" * Representation of task number error."},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"public class HahaTaskNumberNotIntException extends HahaException {"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"    HahaTaskNumberNotIntException(String command) {"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"        super(command);"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"        return \"Is that really a number?\\nTry again with a proper task number!\";"},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":16}},{"path":"src/main/java/tlylt/haha/HahaWrongCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"package tlylt.haha;"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":" * Representation of wrong command error."},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"public class HahaWrongCommandException extends HahaException {"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"    HahaWrongCommandException(String command) {"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"        super(command);"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"        return \"OOPS!!! I\u0027m sorry, \""},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"                + \"but I don\u0027t know what that means :-(\\n\""},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":"                + \"Are you sure you mean the following?\\n\""},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":"                + \"\\\"\" + getCommand() + \"\\\"\";"},{"lineNumber":17,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":18}},{"path":"src/main/java/tlylt/haha/HahaWrongTaskFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"package tlylt.haha;"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":" * Representation of wrong task format command error."},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"public class HahaWrongTaskFormatException extends HahaException {"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"    HahaWrongTaskFormatException(String command) {"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"        super(command);"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"        return \"OOPS!!! I\u0027m sorry, \""},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"                + \"please follow the format strictly :-(\\n\""},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":"                + \"deadline homework /by 2020-02-02 18:00\\n\""},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":"                + \"event CNY /at 2020-02-15 16:00\\n\";"},{"lineNumber":17,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":18}},{"path":"src/main/java/tlylt/haha/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"package tlylt.haha;"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":" * Launcher class to start the entire program."},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"        Application.launch(Haha.class, args);"},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":12}},{"path":"src/main/java/tlylt/haha/LegitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"package tlylt.haha;"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":" * Representation of valid commands."},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"public enum LegitCommand {"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"    DEADLINE(\"deadline\"),"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"    EVENT(\"event\"),"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"    TODO(\"todo\"),"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"    LIST(\"list\"),"},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":"    DONE(\"done\"),"},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"    DELETE(\"delete\"),"},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"    BYE(\"bye\"),"},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"    FIND(\"find\");"},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":"    private final String rep;"},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":"    private String detail \u003d \"\";"},{"lineNumber":17,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"tlylt"},"content":"     * Constructs a valid command."},{"lineNumber":20,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"tlylt"},"content":"     * @param rep String representation of a valid command."},{"lineNumber":22,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"tlylt"},"content":"    LegitCommand(String rep) {"},{"lineNumber":24,"author":{"gitId":"tlylt"},"content":"        this.rep \u003d rep;"},{"lineNumber":25,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"tlylt"},"content":"     * Setter for command detail. This will include information like"},{"lineNumber":28,"author":{"gitId":"tlylt"},"content":"     * the task number for \"done\" command."},{"lineNumber":29,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"tlylt"},"content":"     * @param detail Details regarding this command."},{"lineNumber":31,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"tlylt"},"content":"    void setDetail(String detail) {"},{"lineNumber":33,"author":{"gitId":"tlylt"},"content":"        this.detail \u003d detail;"},{"lineNumber":34,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":36,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"tlylt"},"content":"     * Returns command details for further processing."},{"lineNumber":38,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"tlylt"},"content":"     * @return String details such as task number."},{"lineNumber":40,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"tlylt"},"content":"    String getDetail() {"},{"lineNumber":42,"author":{"gitId":"tlylt"},"content":"        return detail;"},{"lineNumber":43,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":45,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"tlylt"},"content":"     * Getter for command representation."},{"lineNumber":47,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"tlylt"},"content":"     * @return String representation of command."},{"lineNumber":49,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"tlylt"},"content":"    String getRep() {"},{"lineNumber":51,"author":{"gitId":"tlylt"},"content":"        return rep;"},{"lineNumber":52,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":54,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":54}},{"path":"src/main/java/tlylt/haha/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"package tlylt.haha;"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":"import java.util.Arrays;"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":" * Utility class to parse user input."},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":" */"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"public class Parser {"},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"     * Returns task number."},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"     * @param command String to be parsed."},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":"     * @return Correct task number as an integer."},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":"     * @throws HahaTaskNumberNotIntException Task number given is not an integer."},{"lineNumber":17,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":"    static int getTaskNumber(String command) throws HahaTaskNumberNotIntException {"},{"lineNumber":19,"author":{"gitId":"tlylt"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"tlylt"},"content":"            return Integer.parseInt(\"\" + command);"},{"lineNumber":21,"author":{"gitId":"tlylt"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":22,"author":{"gitId":"tlylt"},"content":"            throw new HahaTaskNumberNotIntException(command);"},{"lineNumber":23,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":26,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"tlylt"},"content":"     * Helps to separate user input into two strings."},{"lineNumber":28,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"tlylt"},"content":"     * @param command User input string."},{"lineNumber":30,"author":{"gitId":"tlylt"},"content":"     * @return Command + details."},{"lineNumber":31,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"tlylt"},"content":"    static String[] tokenize(String command) {"},{"lineNumber":33,"author":{"gitId":"tlylt"},"content":"        assert command.length() \u003e 0 : \"command is too short\";"},{"lineNumber":34,"author":{"gitId":"tlylt"},"content":"        return command.split(\" \", 2);"},{"lineNumber":35,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":37,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"tlylt"},"content":"     * Handles edge case of an empty command."},{"lineNumber":39,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"tlylt"},"content":"     * @param input User input string."},{"lineNumber":41,"author":{"gitId":"tlylt"},"content":"     * @throws HahaEmptyCommandException Command given is empty."},{"lineNumber":42,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"tlylt"},"content":"    static void handleEmptyCommand(String input) throws HahaEmptyCommandException {"},{"lineNumber":44,"author":{"gitId":"tlylt"},"content":"        if (input.isEmpty()) {"},{"lineNumber":45,"author":{"gitId":"tlylt"},"content":"            throw new HahaEmptyCommandException(input);"},{"lineNumber":46,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":49,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"tlylt"},"content":"     * Gets the date in LocalDate."},{"lineNumber":51,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"tlylt"},"content":"     * @param str User input string."},{"lineNumber":53,"author":{"gitId":"tlylt"},"content":"     * @return Parsed date in LocalDate."},{"lineNumber":54,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"tlylt"},"content":"    static LocalDate getDate(String str) {"},{"lineNumber":56,"author":{"gitId":"tlylt"},"content":"        if (str.contains(\"/at\")) {"},{"lineNumber":57,"author":{"gitId":"tlylt"},"content":"            return LocalDate.parse(str.split(\"/at \")[1].split(\" \")[0]);"},{"lineNumber":58,"author":{"gitId":"tlylt"},"content":"        } else {"},{"lineNumber":59,"author":{"gitId":"tlylt"},"content":"            return LocalDate.parse(str.split(\"/by \")[1].split(\" \")[0]);"},{"lineNumber":60,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":63,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"tlylt"},"content":"     * Gets the time in LocalTime."},{"lineNumber":65,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"tlylt"},"content":"     * @param str User input string."},{"lineNumber":67,"author":{"gitId":"tlylt"},"content":"     * @return Parsed time in LocalTime."},{"lineNumber":68,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"tlylt"},"content":"    static LocalTime getTime(String str) {"},{"lineNumber":70,"author":{"gitId":"tlylt"},"content":"        String[] token \u003d str.split(\" \");"},{"lineNumber":71,"author":{"gitId":"tlylt"},"content":"        return LocalTime.parse(token[token.length - 1]);"},{"lineNumber":72,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":74,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"tlylt"},"content":"     * Handles edge case of an command without it\u0027s required description."},{"lineNumber":76,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"tlylt"},"content":"     * @param input User input string."},{"lineNumber":78,"author":{"gitId":"tlylt"},"content":"     * @throws HahaEmptyDescriptionException Command\u0027s required description is missing."},{"lineNumber":79,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"tlylt"},"content":"    static void handleEmptyDescriptionCommand(String input) throws HahaEmptyDescriptionException {"},{"lineNumber":81,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":82,"author":{"gitId":"tlylt"},"content":"        String description \u003d Parser.tokenize(input).length \u003d\u003d 2 ? Parser.tokenize(input)[1] : \"\";"},{"lineNumber":83,"author":{"gitId":"tlylt"},"content":"        // Check input has description following task command words"},{"lineNumber":84,"author":{"gitId":"tlylt"},"content":"        boolean hasTaskKeyword \u003d checkHasTaskKeyword(input);"},{"lineNumber":85,"author":{"gitId":"tlylt"},"content":"        boolean requiresTaskNumber \u003d checkRequiresTaskNumber(input);"},{"lineNumber":86,"author":{"gitId":"tlylt"},"content":"        if ((hasTaskKeyword || requiresTaskNumber) \u0026\u0026 description.isEmpty()) {"},{"lineNumber":87,"author":{"gitId":"tlylt"},"content":"            throw new HahaEmptyDescriptionException(input);"},{"lineNumber":88,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":91,"author":{"gitId":"tlylt"},"content":"    private static boolean checkRequiresTaskNumber(String input) {"},{"lineNumber":92,"author":{"gitId":"tlylt"},"content":"        String task \u003d Parser.tokenize(input)[0];"},{"lineNumber":93,"author":{"gitId":"tlylt"},"content":"        return Arrays.asList(new String[]{\"delete\", \"done\"}).contains(task);"},{"lineNumber":94,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":96,"author":{"gitId":"tlylt"},"content":"    private static boolean checkHasTaskKeyword(String input) {"},{"lineNumber":97,"author":{"gitId":"tlylt"},"content":"        String task \u003d Parser.tokenize(input)[0];"},{"lineNumber":98,"author":{"gitId":"tlylt"},"content":"        return Arrays"},{"lineNumber":99,"author":{"gitId":"tlylt"},"content":"                .stream(TaskType.values())"},{"lineNumber":100,"author":{"gitId":"tlylt"},"content":"                .map(TaskType::getRep)"},{"lineNumber":101,"author":{"gitId":"tlylt"},"content":"                .anyMatch(x -\u003e x.equals(task));"},{"lineNumber":102,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":104,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"tlylt"},"content":"     * Handles invalid commands."},{"lineNumber":106,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":107,"author":{"gitId":"tlylt"},"content":"     * @param input User input string."},{"lineNumber":108,"author":{"gitId":"tlylt"},"content":"     * @throws HahaWrongCommandException Command not recognized."},{"lineNumber":109,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"tlylt"},"content":"    static void handleWrongCommand(String input) throws HahaWrongCommandException {"},{"lineNumber":111,"author":{"gitId":"tlylt"},"content":"        // Check input starts with specified command words"},{"lineNumber":112,"author":{"gitId":"tlylt"},"content":"        if (Arrays"},{"lineNumber":113,"author":{"gitId":"tlylt"},"content":"                .stream(LegitCommand.values())"},{"lineNumber":114,"author":{"gitId":"tlylt"},"content":"                .map(LegitCommand::getRep)"},{"lineNumber":115,"author":{"gitId":"tlylt"},"content":"                .noneMatch(command -\u003e Parser.tokenize(input)[0].equals(command))) {"},{"lineNumber":116,"author":{"gitId":"tlylt"},"content":"            throw new HahaWrongCommandException(input);"},{"lineNumber":117,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":120,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":121,"author":{"gitId":"tlylt"},"content":"     * Handles invalid deadline and event commands."},{"lineNumber":122,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":123,"author":{"gitId":"tlylt"},"content":"     * @param input User input string."},{"lineNumber":124,"author":{"gitId":"tlylt"},"content":"     * @throws HahaWrongTaskFormatException Task format not recognized."},{"lineNumber":125,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"tlylt"},"content":"    static void handleWrongDeadlineEventCommand(String input) throws HahaWrongTaskFormatException {"},{"lineNumber":127,"author":{"gitId":"tlylt"},"content":"        String[] inputTaskDetails \u003d Parser.tokenize(input);"},{"lineNumber":128,"author":{"gitId":"tlylt"},"content":"        if (inputTaskDetails[0].equals(\"deadline\") || inputTaskDetails[0].equals(\"event\")) {"},{"lineNumber":129,"author":{"gitId":"tlylt"},"content":"            try {"},{"lineNumber":130,"author":{"gitId":"tlylt"},"content":"                new Deadline(false, inputTaskDetails[1]);"},{"lineNumber":131,"author":{"gitId":"tlylt"},"content":"            } catch (ArrayIndexOutOfBoundsException ex) {"},{"lineNumber":132,"author":{"gitId":"tlylt"},"content":"                throw new HahaWrongTaskFormatException(ex.toString());"},{"lineNumber":133,"author":{"gitId":"tlylt"},"content":"            }"},{"lineNumber":134,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":135,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":137,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":138,"author":{"gitId":"tlylt"},"content":"     * Ensures safety of given command."},{"lineNumber":139,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":140,"author":{"gitId":"tlylt"},"content":"     * @param input User input string."},{"lineNumber":141,"author":{"gitId":"tlylt"},"content":"     * @throws HahaEmptyCommandException     Command is empty."},{"lineNumber":142,"author":{"gitId":"tlylt"},"content":"     * @throws HahaWrongCommandException     Command is not recognized."},{"lineNumber":143,"author":{"gitId":"tlylt"},"content":"     * @throws HahaEmptyDescriptionException Command does not have required description."},{"lineNumber":144,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":145,"author":{"gitId":"tlylt"},"content":"    static void handleSafety(String input) throws HahaEmptyCommandException,"},{"lineNumber":146,"author":{"gitId":"tlylt"},"content":"            HahaWrongCommandException,"},{"lineNumber":147,"author":{"gitId":"tlylt"},"content":"            HahaEmptyDescriptionException,"},{"lineNumber":148,"author":{"gitId":"tlylt"},"content":"            HahaWrongTaskFormatException {"},{"lineNumber":149,"author":{"gitId":"tlylt"},"content":"        Parser.handleEmptyCommand(input);"},{"lineNumber":150,"author":{"gitId":"tlylt"},"content":"        Parser.handleEmptyDescriptionCommand(input);"},{"lineNumber":151,"author":{"gitId":"tlylt"},"content":"        Parser.handleWrongDeadlineEventCommand(input);"},{"lineNumber":152,"author":{"gitId":"tlylt"},"content":"        Parser.handleWrongCommand(input);"},{"lineNumber":153,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":154,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":155,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":157,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":158,"author":{"gitId":"tlylt"},"content":"     * Interprets command and returns respective command using LegitCommand Enum."},{"lineNumber":159,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":160,"author":{"gitId":"tlylt"},"content":"     * @param command User input string."},{"lineNumber":161,"author":{"gitId":"tlylt"},"content":"     * @return Proper command specified in LegitCommand."},{"lineNumber":162,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":163,"author":{"gitId":"tlylt"},"content":"    static LegitCommand handleInterpret(String command) {"},{"lineNumber":164,"author":{"gitId":"tlylt"},"content":"        String[] tokenized \u003d Parser.tokenize(command);"},{"lineNumber":165,"author":{"gitId":"tlylt"},"content":"        String firstWord \u003d tokenized[0];"},{"lineNumber":166,"author":{"gitId":"tlylt"},"content":"        switch (firstWord) {"},{"lineNumber":167,"author":{"gitId":"tlylt"},"content":"        case \"todo\":"},{"lineNumber":168,"author":{"gitId":"tlylt"},"content":"            LegitCommand.TODO.setDetail(tokenized[1]);"},{"lineNumber":169,"author":{"gitId":"tlylt"},"content":"            return LegitCommand.TODO;"},{"lineNumber":170,"author":{"gitId":"tlylt"},"content":"        case \"deadline\":"},{"lineNumber":171,"author":{"gitId":"tlylt"},"content":"            LegitCommand.DEADLINE.setDetail(tokenized[1]);"},{"lineNumber":172,"author":{"gitId":"tlylt"},"content":"            return LegitCommand.DEADLINE;"},{"lineNumber":173,"author":{"gitId":"tlylt"},"content":"        case \"event\":"},{"lineNumber":174,"author":{"gitId":"tlylt"},"content":"            LegitCommand.EVENT.setDetail(tokenized[1]);"},{"lineNumber":175,"author":{"gitId":"tlylt"},"content":"            return LegitCommand.EVENT;"},{"lineNumber":176,"author":{"gitId":"tlylt"},"content":"        case \"list\":"},{"lineNumber":177,"author":{"gitId":"tlylt"},"content":"            return LegitCommand.LIST;"},{"lineNumber":178,"author":{"gitId":"tlylt"},"content":"        case \"done\":"},{"lineNumber":179,"author":{"gitId":"tlylt"},"content":"            LegitCommand.DONE.setDetail(tokenized[1]);"},{"lineNumber":180,"author":{"gitId":"tlylt"},"content":"            return LegitCommand.DONE;"},{"lineNumber":181,"author":{"gitId":"tlylt"},"content":"        case \"delete\":"},{"lineNumber":182,"author":{"gitId":"tlylt"},"content":"            LegitCommand.DELETE.setDetail(tokenized[1]);"},{"lineNumber":183,"author":{"gitId":"tlylt"},"content":"            return LegitCommand.DELETE;"},{"lineNumber":184,"author":{"gitId":"tlylt"},"content":"        case \"find\":"},{"lineNumber":185,"author":{"gitId":"tlylt"},"content":"            LegitCommand.FIND.setDetail(tokenized[1]);"},{"lineNumber":186,"author":{"gitId":"tlylt"},"content":"            return LegitCommand.FIND;"},{"lineNumber":187,"author":{"gitId":"tlylt"},"content":"        case \"bye\":"},{"lineNumber":188,"author":{"gitId":"tlylt"},"content":"            return LegitCommand.BYE;"},{"lineNumber":189,"author":{"gitId":"tlylt"},"content":"        default:"},{"lineNumber":190,"author":{"gitId":"tlylt"},"content":"            assert false : firstWord;"},{"lineNumber":191,"author":{"gitId":"tlylt"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + firstWord);"},{"lineNumber":192,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":193,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":195,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":196,"author":{"gitId":"tlylt"},"content":"     * Parses user input string."},{"lineNumber":197,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":198,"author":{"gitId":"tlylt"},"content":"     * @param input User input string."},{"lineNumber":199,"author":{"gitId":"tlylt"},"content":"     * @return Parsed LegitCommand."},{"lineNumber":200,"author":{"gitId":"tlylt"},"content":"     * @throws HahaEmptyCommandException     Command is empty."},{"lineNumber":201,"author":{"gitId":"tlylt"},"content":"     * @throws HahaWrongCommandException     Command is not recognized."},{"lineNumber":202,"author":{"gitId":"tlylt"},"content":"     * @throws HahaEmptyDescriptionException Command does not have required description."},{"lineNumber":203,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":204,"author":{"gitId":"tlylt"},"content":"    static LegitCommand parseInput(String input) throws HahaEmptyCommandException,"},{"lineNumber":205,"author":{"gitId":"tlylt"},"content":"            HahaWrongCommandException,"},{"lineNumber":206,"author":{"gitId":"tlylt"},"content":"            HahaEmptyDescriptionException, HahaWrongTaskFormatException {"},{"lineNumber":207,"author":{"gitId":"tlylt"},"content":"        // Safety checks"},{"lineNumber":208,"author":{"gitId":"tlylt"},"content":"        Parser.handleSafety(input);"},{"lineNumber":209,"author":{"gitId":"tlylt"},"content":"        // Interpret"},{"lineNumber":210,"author":{"gitId":"tlylt"},"content":"        return Parser.handleInterpret(input);"},{"lineNumber":211,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":212,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":213,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":214,"author":{"gitId":"tlylt"},"content":"     * Checks each line and generates corresponding task."},{"lineNumber":215,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":216,"author":{"gitId":"tlylt"},"content":"     * @param line A line of User input."},{"lineNumber":217,"author":{"gitId":"tlylt"},"content":"     * @return Constructed task."},{"lineNumber":218,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":219,"author":{"gitId":"tlylt"},"content":"    static Task parseLine(String line) {"},{"lineNumber":220,"author":{"gitId":"tlylt"},"content":"        String[] tokens \u003d line.split(\"\\\\|\");"},{"lineNumber":221,"author":{"gitId":"tlylt"},"content":"        String type \u003d tokens[0];"},{"lineNumber":222,"author":{"gitId":"tlylt"},"content":"        boolean isDone \u003d tokens[1].equals(\"true\");"},{"lineNumber":223,"author":{"gitId":"tlylt"},"content":"        String description \u003d tokens[2];"},{"lineNumber":224,"author":{"gitId":"tlylt"},"content":"        Task task;"},{"lineNumber":225,"author":{"gitId":"tlylt"},"content":"        switch (type) {"},{"lineNumber":226,"author":{"gitId":"tlylt"},"content":"        case \"T\":"},{"lineNumber":227,"author":{"gitId":"tlylt"},"content":"            task \u003d new Todo(isDone, description);"},{"lineNumber":228,"author":{"gitId":"tlylt"},"content":"            break;"},{"lineNumber":229,"author":{"gitId":"tlylt"},"content":"        case \"D\":"},{"lineNumber":230,"author":{"gitId":"tlylt"},"content":"            task \u003d new Deadline(isDone, description);"},{"lineNumber":231,"author":{"gitId":"tlylt"},"content":"            break;"},{"lineNumber":232,"author":{"gitId":"tlylt"},"content":"        case \"E\":"},{"lineNumber":233,"author":{"gitId":"tlylt"},"content":"            task \u003d new Event(isDone, description);"},{"lineNumber":234,"author":{"gitId":"tlylt"},"content":"            break;"},{"lineNumber":235,"author":{"gitId":"tlylt"},"content":"        default:"},{"lineNumber":236,"author":{"gitId":"tlylt"},"content":"            throw new IllegalStateException(\"Unexpected value: \" + type);"},{"lineNumber":237,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":238,"author":{"gitId":"tlylt"},"content":"        return task;"},{"lineNumber":239,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":240,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":240}},{"path":"src/main/java/tlylt/haha/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"package tlylt.haha;"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":"import java.nio.file.Files;"},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"import java.nio.file.Paths;"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":" * Utility for storing tasks to file."},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":" */"},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"    private Path file;"},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"tlylt"},"content":"     * Initialises by checking and creating storage file if needed."},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"tlylt"},"content":"    public Storage() {"},{"lineNumber":20,"author":{"gitId":"tlylt"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"tlylt"},"content":"            String currentDir \u003d System.getProperty(\"user.dir\");"},{"lineNumber":22,"author":{"gitId":"tlylt"},"content":"            Path folder \u003d Paths.get(currentDir, \"Haha_data\");"},{"lineNumber":23,"author":{"gitId":"tlylt"},"content":"            this.file \u003d Paths.get(currentDir, \"Haha_data\", \"database.txt\");"},{"lineNumber":24,"author":{"gitId":"tlylt"},"content":"            if (Files.notExists(folder)) {"},{"lineNumber":25,"author":{"gitId":"tlylt"},"content":"                Files.createDirectories(folder);"},{"lineNumber":26,"author":{"gitId":"tlylt"},"content":"            }"},{"lineNumber":27,"author":{"gitId":"tlylt"},"content":"            if (Files.notExists(file)) {"},{"lineNumber":28,"author":{"gitId":"tlylt"},"content":"                Files.createFile(file);"},{"lineNumber":29,"author":{"gitId":"tlylt"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"tlylt"},"content":"        } catch (IOException e) {"},{"lineNumber":31,"author":{"gitId":"tlylt"},"content":"            e.printStackTrace();"},{"lineNumber":32,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":35,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"tlylt"},"content":"     * Reads storage file content into list for further parsing."},{"lineNumber":37,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"tlylt"},"content":"     * @return List of String containing task details from file."},{"lineNumber":39,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"tlylt"},"content":"    public List\u003cString\u003e getTasks() {"},{"lineNumber":41,"author":{"gitId":"tlylt"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"tlylt"},"content":"            return Files.readAllLines(file);"},{"lineNumber":43,"author":{"gitId":"tlylt"},"content":"        } catch (IOException e) {"},{"lineNumber":44,"author":{"gitId":"tlylt"},"content":"            return new ArrayList\u003c\u003e();"},{"lineNumber":45,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":47}},{"path":"src/main/java/tlylt/haha/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"package tlylt.haha;"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"import java.util.Objects;"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":" * Abstract representation of a task."},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":" */"},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":"public abstract class Task {"},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"    protected final String description;"},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"    protected boolean isDone;"},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"    protected final String type;"},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":"    protected LocalDate date;"},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":"    protected LocalTime time;"},{"lineNumber":17,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"tlylt"},"content":"     * Constructor of a task. Mainly used by child classes to create"},{"lineNumber":20,"author":{"gitId":"tlylt"},"content":"     * a detailed task of type Todo, Event or Deadline."},{"lineNumber":21,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"tlylt"},"content":"     * @param type        specific task type"},{"lineNumber":23,"author":{"gitId":"tlylt"},"content":"     * @param isDone      whether task is set as completed"},{"lineNumber":24,"author":{"gitId":"tlylt"},"content":"     * @param description details of task"},{"lineNumber":25,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"tlylt"},"content":"    protected Task(String type, boolean isDone, String description) {"},{"lineNumber":27,"author":{"gitId":"tlylt"},"content":"        this.type \u003d type;"},{"lineNumber":28,"author":{"gitId":"tlylt"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":29,"author":{"gitId":"tlylt"},"content":"        this.description \u003d description;"},{"lineNumber":30,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":32,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"tlylt"},"content":"     * Constructor of a task. Mainly used by child classes to create"},{"lineNumber":34,"author":{"gitId":"tlylt"},"content":"     * a detailed task of type Todo, Event or Deadline."},{"lineNumber":35,"author":{"gitId":"tlylt"},"content":"     * Takes in datetime details for Event and Deadline."},{"lineNumber":36,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"tlylt"},"content":"     * @param type        specific task type"},{"lineNumber":38,"author":{"gitId":"tlylt"},"content":"     * @param isDone      whether task is set as completed"},{"lineNumber":39,"author":{"gitId":"tlylt"},"content":"     * @param description details of task"},{"lineNumber":40,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"tlylt"},"content":"    protected Task(String type, boolean isDone, String description, LocalDate date, LocalTime time) {"},{"lineNumber":42,"author":{"gitId":"tlylt"},"content":"        this(type, isDone, description);"},{"lineNumber":43,"author":{"gitId":"tlylt"},"content":"        this.date \u003d date;"},{"lineNumber":44,"author":{"gitId":"tlylt"},"content":"        this.time \u003d time;"},{"lineNumber":45,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":47,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"tlylt"},"content":"     * Returns completion status."},{"lineNumber":49,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"tlylt"},"content":"     * @return String completion icon."},{"lineNumber":51,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"tlylt"},"content":"    protected String getStatusIcon() {"},{"lineNumber":53,"author":{"gitId":"tlylt"},"content":"        //return [X] or [ ] symbols"},{"lineNumber":54,"author":{"gitId":"tlylt"},"content":"        return (isDone ? \"[X]\" : \"[ ]\");"},{"lineNumber":55,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":57,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"tlylt"},"content":"     * Returns type in nicer format."},{"lineNumber":59,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"tlylt"},"content":"     * @return String type of task."},{"lineNumber":61,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"tlylt"},"content":"    protected String getTypeIcon() {"},{"lineNumber":63,"author":{"gitId":"tlylt"},"content":"        return \"[\" + type + \"]\";"},{"lineNumber":64,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":66,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"tlylt"},"content":"     * Returns nicer representation of task for Event and Deadline."},{"lineNumber":68,"author":{"gitId":"tlylt"},"content":"     * Datetime details are parsed and formatted accordingly."},{"lineNumber":69,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"tlylt"},"content":"     * @param id Whether this is for Event or Deadline."},{"lineNumber":71,"author":{"gitId":"tlylt"},"content":"     * @return String nicer representation of task details."},{"lineNumber":72,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"tlylt"},"content":"    protected String modifiedDescription(String id) {"},{"lineNumber":74,"author":{"gitId":"tlylt"},"content":"        String formatDate \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":75,"author":{"gitId":"tlylt"},"content":"        String formatTime \u003d time.format(DateTimeFormatter.ofPattern(\"hh.mm a\"));"},{"lineNumber":76,"author":{"gitId":"tlylt"},"content":"        String formatDateTime \u003d \"(\" + id + \": \" + formatDate + \" \" + formatTime + \")\";"},{"lineNumber":77,"author":{"gitId":"tlylt"},"content":"        return description.substring(0, description.indexOf(\u0027/\u0027)) + formatDateTime;"},{"lineNumber":78,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":80,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"tlylt"},"content":"     * Sets task status."},{"lineNumber":82,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"tlylt"},"content":"     * @param done Whether done or not done."},{"lineNumber":84,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"tlylt"},"content":"    public void setDone(boolean done) {"},{"lineNumber":86,"author":{"gitId":"tlylt"},"content":"        isDone \u003d done;"},{"lineNumber":87,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":89,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"tlylt"},"content":"     * Getter for isDone"},{"lineNumber":91,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":92,"author":{"gitId":"tlylt"},"content":"     * @return Boolean task status."},{"lineNumber":93,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"tlylt"},"content":"    public boolean getIsDone() {"},{"lineNumber":95,"author":{"gitId":"tlylt"},"content":"        return isDone;"},{"lineNumber":96,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":98,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"tlylt"},"content":"     * Returns formatted string for storing into file."},{"lineNumber":100,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":101,"author":{"gitId":"tlylt"},"content":"     * @return String formatted task details."},{"lineNumber":102,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"tlylt"},"content":"    public String fileStorageFormat() {"},{"lineNumber":104,"author":{"gitId":"tlylt"},"content":"        return type + \"|\" + getIsDone() + \"|\" + description;"},{"lineNumber":105,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":107,"author":{"gitId":"tlylt"},"content":"    @Override"},{"lineNumber":108,"author":{"gitId":"tlylt"},"content":"    public boolean equals(Object object) {"},{"lineNumber":109,"author":{"gitId":"tlylt"},"content":"        if (this \u003d\u003d object) {"},{"lineNumber":110,"author":{"gitId":"tlylt"},"content":"            return true;"},{"lineNumber":111,"author":{"gitId":"tlylt"},"content":"        } else if (object instanceof Task) {"},{"lineNumber":112,"author":{"gitId":"tlylt"},"content":"            Task task \u003d (Task) object;"},{"lineNumber":113,"author":{"gitId":"tlylt"},"content":"            return isDone \u003d\u003d task.isDone"},{"lineNumber":114,"author":{"gitId":"tlylt"},"content":"                    \u0026\u0026"},{"lineNumber":115,"author":{"gitId":"tlylt"},"content":"                    description.equals(task.description)"},{"lineNumber":116,"author":{"gitId":"tlylt"},"content":"                    \u0026\u0026"},{"lineNumber":117,"author":{"gitId":"tlylt"},"content":"                    type.equals(task.type)"},{"lineNumber":118,"author":{"gitId":"tlylt"},"content":"                    \u0026\u0026"},{"lineNumber":119,"author":{"gitId":"tlylt"},"content":"                    Objects.equals(date, task.date)"},{"lineNumber":120,"author":{"gitId":"tlylt"},"content":"                    \u0026\u0026"},{"lineNumber":121,"author":{"gitId":"tlylt"},"content":"                    Objects.equals(time, task.time);"},{"lineNumber":122,"author":{"gitId":"tlylt"},"content":"        } else {"},{"lineNumber":123,"author":{"gitId":"tlylt"},"content":"            return false;"},{"lineNumber":124,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":125,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":126,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":128,"author":{"gitId":"tlylt"},"content":"    @Override"},{"lineNumber":129,"author":{"gitId":"tlylt"},"content":"    public int hashCode() {"},{"lineNumber":130,"author":{"gitId":"tlylt"},"content":"        return Objects.hash(description, isDone, type, date, time);"},{"lineNumber":131,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":132}},{"path":"src/main/java/tlylt/haha/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"package tlylt.haha;"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":"import java.nio.file.Files;"},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":"import java.nio.file.Paths;"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"import java.nio.file.StandardOpenOption;"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":" * Representation of a task handler."},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":" * Mainly for handling of task after receiving user input."},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":" * \"database\" in this class refers to the main data structure that will"},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":" * hold all the information when program is running."},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":" */"},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":"public class TaskList {"},{"lineNumber":17,"author":{"gitId":"tlylt"},"content":"    private final List\u003cTask\u003e database \u003d new ArrayList\u003c\u003e();"},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":19,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"tlylt"},"content":"     * Outputs information about adding of task to database."},{"lineNumber":21,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"tlylt"},"content":"    String tellAdd() {"},{"lineNumber":23,"author":{"gitId":"tlylt"},"content":"        return \"Got it. I\u0027ve added this task:\\n\";"},{"lineNumber":24,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":26,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"tlylt"},"content":"     * Outputs information about size of database."},{"lineNumber":28,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"tlylt"},"content":"    String tellSize() {"},{"lineNumber":30,"author":{"gitId":"tlylt"},"content":"        String task \u003d database.size() \u003e 1 ? \" tasks\" : \" task\";"},{"lineNumber":31,"author":{"gitId":"tlylt"},"content":"        return String.format(\"Now you have %d %s in the list\\n\", database.size(), task);"},{"lineNumber":32,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":34,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"tlylt"},"content":"     * Adds task into database."},{"lineNumber":36,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"tlylt"},"content":"     * @param task Task created by user."},{"lineNumber":38,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"tlylt"},"content":"    String addToDB(Task task) {"},{"lineNumber":40,"author":{"gitId":"tlylt"},"content":"        if (isDuplicate(task)) {"},{"lineNumber":41,"author":{"gitId":"tlylt"},"content":"            return \"Already added this task!\";"},{"lineNumber":42,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"tlylt"},"content":"        database.add(task);"},{"lineNumber":44,"author":{"gitId":"tlylt"},"content":"        String response \u003d tellAdd();"},{"lineNumber":45,"author":{"gitId":"tlylt"},"content":"        response +\u003d \"  \" + database.get(database.size() - 1) + \"\\n\";"},{"lineNumber":46,"author":{"gitId":"tlylt"},"content":"        response +\u003d tellSize();"},{"lineNumber":47,"author":{"gitId":"tlylt"},"content":"        return response;"},{"lineNumber":48,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":50,"author":{"gitId":"tlylt"},"content":"    private boolean isDuplicate(Task task) {"},{"lineNumber":51,"author":{"gitId":"tlylt"},"content":"        return database.stream().anyMatch(currentTask -\u003e currentTask.equals(task));"},{"lineNumber":52,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":54,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"tlylt"},"content":"     * Removes task from database."},{"lineNumber":56,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"tlylt"},"content":"     * @param inputNum String that will be parsed for task number."},{"lineNumber":58,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"tlylt"},"content":"    String deleteFromDB(String inputNum) {"},{"lineNumber":60,"author":{"gitId":"tlylt"},"content":"        String response \u003d \"\";"},{"lineNumber":61,"author":{"gitId":"tlylt"},"content":"        try {"},{"lineNumber":62,"author":{"gitId":"tlylt"},"content":"            int num \u003d Parser.getTaskNumber(inputNum);"},{"lineNumber":63,"author":{"gitId":"tlylt"},"content":"            Task currentTask \u003d database.get(num - 1);"},{"lineNumber":64,"author":{"gitId":"tlylt"},"content":"            response +\u003d \"Noted. I\u0027ve removed this task:\\n\";"},{"lineNumber":65,"author":{"gitId":"tlylt"},"content":"            response +\u003d currentTask + \"\\n\";"},{"lineNumber":66,"author":{"gitId":"tlylt"},"content":"            database.remove(currentTask);"},{"lineNumber":67,"author":{"gitId":"tlylt"},"content":"            response +\u003d tellSize();"},{"lineNumber":68,"author":{"gitId":"tlylt"},"content":"        } catch (HahaTaskNumberNotIntException ex) {"},{"lineNumber":69,"author":{"gitId":"tlylt"},"content":"            return ex.toString();"},{"lineNumber":70,"author":{"gitId":"tlylt"},"content":"        } catch (IndexOutOfBoundsException ex) {"},{"lineNumber":71,"author":{"gitId":"tlylt"},"content":"            return \"OOPS! Wrong number!\\nTry specify the right task number\\n\";"},{"lineNumber":72,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"tlylt"},"content":"        return response;"},{"lineNumber":74,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":76,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"tlylt"},"content":"     * Reads tasks from a file that contains previous usage."},{"lineNumber":78,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"tlylt"},"content":"     * @param file Content of previously recorded tasks."},{"lineNumber":80,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"tlylt"},"content":"    void readTasks(List\u003cString\u003e file) {"},{"lineNumber":82,"author":{"gitId":"tlylt"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":83,"author":{"gitId":"tlylt"},"content":"        file.forEach(line -\u003e tasks.add(Parser.parseLine(line)));"},{"lineNumber":84,"author":{"gitId":"tlylt"},"content":"        database.addAll(tasks);"},{"lineNumber":85,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":87,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"tlylt"},"content":"     * Updates database to file."},{"lineNumber":89,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"tlylt"},"content":"    void updateFile() {"},{"lineNumber":91,"author":{"gitId":"tlylt"},"content":"        List\u003cString\u003e str \u003d new ArrayList\u003c\u003e();"},{"lineNumber":92,"author":{"gitId":"tlylt"},"content":"        database.forEach(task -\u003e str.add(task.fileStorageFormat()));"},{"lineNumber":93,"author":{"gitId":"tlylt"},"content":"        try {"},{"lineNumber":94,"author":{"gitId":"tlylt"},"content":"            Files.write(Paths.get(System.getProperty(\"user.dir\"), \"Haha_data\", \"database.txt\"),"},{"lineNumber":95,"author":{"gitId":"tlylt"},"content":"                    str, StandardOpenOption.TRUNCATE_EXISTING);"},{"lineNumber":96,"author":{"gitId":"tlylt"},"content":"        } catch (IOException e) {"},{"lineNumber":97,"author":{"gitId":"tlylt"},"content":"            e.printStackTrace();"},{"lineNumber":98,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":101,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"tlylt"},"content":"     * Lists out all the tasks in database."},{"lineNumber":103,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"tlylt"},"content":"    String listFromDB() {"},{"lineNumber":105,"author":{"gitId":"tlylt"},"content":"        StringBuilder response \u003d new StringBuilder();"},{"lineNumber":106,"author":{"gitId":"tlylt"},"content":"        if (database.size() \u003d\u003d 0) {"},{"lineNumber":107,"author":{"gitId":"tlylt"},"content":"            response.append(\"You have nothing going on!\\n\");"},{"lineNumber":108,"author":{"gitId":"tlylt"},"content":"        } else {"},{"lineNumber":109,"author":{"gitId":"tlylt"},"content":"            response.append(\"Here are your list of tasks:\\n\");"},{"lineNumber":110,"author":{"gitId":"tlylt"},"content":"            for (int i \u003d 0; i \u003c database.size(); i++) {"},{"lineNumber":111,"author":{"gitId":"tlylt"},"content":"                String idx \u003d Integer.toString(i + 1) + \u0027.\u0027;"},{"lineNumber":112,"author":{"gitId":"tlylt"},"content":"                String task \u003d idx + database.get(i);"},{"lineNumber":113,"author":{"gitId":"tlylt"},"content":"                response.append(task).append(\"\\n\");"},{"lineNumber":114,"author":{"gitId":"tlylt"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"tlylt"},"content":"        return response.toString();"},{"lineNumber":117,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":119,"author":{"gitId":"tlylt"},"content":"    private String findFromDB(String keyword, Ui ui) {"},{"lineNumber":120,"author":{"gitId":"tlylt"},"content":"        StringBuilder response \u003d new StringBuilder();"},{"lineNumber":121,"author":{"gitId":"tlylt"},"content":"        response.append(\"Here are the matching tasks in your list:\\n\");"},{"lineNumber":122,"author":{"gitId":"tlylt"},"content":"        boolean hasRelated \u003d false;"},{"lineNumber":123,"author":{"gitId":"tlylt"},"content":"        for (int i \u003d 0; i \u003c database.size(); i++) {"},{"lineNumber":124,"author":{"gitId":"tlylt"},"content":"            String idx \u003d Integer.toString(i + 1) + \u0027.\u0027;"},{"lineNumber":125,"author":{"gitId":"tlylt"},"content":"            Task currentTask \u003d database.get(i);"},{"lineNumber":126,"author":{"gitId":"tlylt"},"content":"            if (currentTask.description.contains(keyword)) {"},{"lineNumber":127,"author":{"gitId":"tlylt"},"content":"                String task \u003d idx + database.get(i);"},{"lineNumber":128,"author":{"gitId":"tlylt"},"content":"                System.out.println(task);"},{"lineNumber":129,"author":{"gitId":"tlylt"},"content":"                response.append(task).append(\"\\n\");"},{"lineNumber":130,"author":{"gitId":"tlylt"},"content":"                hasRelated \u003d true;"},{"lineNumber":131,"author":{"gitId":"tlylt"},"content":"            }"},{"lineNumber":132,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"tlylt"},"content":"        if (!hasRelated) {"},{"lineNumber":134,"author":{"gitId":"tlylt"},"content":"            response.append(ui.taskNotFound());"},{"lineNumber":135,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":136,"author":{"gitId":"tlylt"},"content":"        return response.toString();"},{"lineNumber":137,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":139,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":140,"author":{"gitId":"tlylt"},"content":"     * Marks selected task as done."},{"lineNumber":141,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":142,"author":{"gitId":"tlylt"},"content":"     * @param inputNum String for parsing task number."},{"lineNumber":143,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":144,"author":{"gitId":"tlylt"},"content":"    String markDoneToDB(String inputNum) {"},{"lineNumber":145,"author":{"gitId":"tlylt"},"content":"        String response \u003d \"\";"},{"lineNumber":146,"author":{"gitId":"tlylt"},"content":"        try {"},{"lineNumber":147,"author":{"gitId":"tlylt"},"content":"            int givenIndex \u003d Parser.getTaskNumber(inputNum) - 1;"},{"lineNumber":148,"author":{"gitId":"tlylt"},"content":"            if (givenIndex \u003c 0 || givenIndex \u003e\u003d database.size()) {"},{"lineNumber":149,"author":{"gitId":"tlylt"},"content":"                return \"OOPS! Wrong number!\\nTry specify the right task number\\n\";"},{"lineNumber":150,"author":{"gitId":"tlylt"},"content":"            }"},{"lineNumber":151,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":152,"author":{"gitId":"tlylt"},"content":"            Task currentTask \u003d database.get(givenIndex);"},{"lineNumber":153,"author":{"gitId":"tlylt"},"content":"            if (currentTask.getIsDone()) {"},{"lineNumber":154,"author":{"gitId":"tlylt"},"content":"                return \"OOPS! I\u0027ve marked this task as done ALREADY\\n\";"},{"lineNumber":155,"author":{"gitId":"tlylt"},"content":"            }"},{"lineNumber":156,"author":{"gitId":"tlylt"},"content":"            response +\u003d \"Nice! I\u0027ve marked this task as done:\\n\";"},{"lineNumber":157,"author":{"gitId":"tlylt"},"content":"            currentTask.setDone(true);"},{"lineNumber":158,"author":{"gitId":"tlylt"},"content":"            response +\u003d currentTask + \"\\n\";"},{"lineNumber":159,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":160,"author":{"gitId":"tlylt"},"content":"        } catch (HahaTaskNumberNotIntException ex) {"},{"lineNumber":161,"author":{"gitId":"tlylt"},"content":"            return ex.toString();"},{"lineNumber":162,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"tlylt"},"content":"        return response;"},{"lineNumber":164,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":166,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":167,"author":{"gitId":"tlylt"},"content":"     * Responds to the respective command and perform database related tasks."},{"lineNumber":168,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":169,"author":{"gitId":"tlylt"},"content":"     * @param command Valid command given by user."},{"lineNumber":170,"author":{"gitId":"tlylt"},"content":"     * @param ui      Ui component."},{"lineNumber":171,"author":{"gitId":"tlylt"},"content":"     * @return Whether the user wants to exit."},{"lineNumber":172,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":173,"author":{"gitId":"tlylt"},"content":"    String executeCommand(LegitCommand command, Ui ui) {"},{"lineNumber":174,"author":{"gitId":"tlylt"},"content":"        String response \u003d \"\";"},{"lineNumber":175,"author":{"gitId":"tlylt"},"content":"        switch (command) {"},{"lineNumber":176,"author":{"gitId":"tlylt"},"content":"        case BYE:"},{"lineNumber":177,"author":{"gitId":"tlylt"},"content":"            return ui.bye();"},{"lineNumber":178,"author":{"gitId":"tlylt"},"content":"        case TODO:"},{"lineNumber":179,"author":{"gitId":"tlylt"},"content":"            response +\u003d this.addToDB(new Todo(false, LegitCommand.TODO.getDetail()));"},{"lineNumber":180,"author":{"gitId":"tlylt"},"content":"            this.updateFile();"},{"lineNumber":181,"author":{"gitId":"tlylt"},"content":"            break;"},{"lineNumber":182,"author":{"gitId":"tlylt"},"content":"        case EVENT:"},{"lineNumber":183,"author":{"gitId":"tlylt"},"content":"            response +\u003d this.addToDB(new Event(false, LegitCommand.EVENT.getDetail()));"},{"lineNumber":184,"author":{"gitId":"tlylt"},"content":"            this.updateFile();"},{"lineNumber":185,"author":{"gitId":"tlylt"},"content":"            break;"},{"lineNumber":186,"author":{"gitId":"tlylt"},"content":"        case DEADLINE:"},{"lineNumber":187,"author":{"gitId":"tlylt"},"content":"            response +\u003d this.addToDB(new Deadline(false, LegitCommand.DEADLINE.getDetail()));"},{"lineNumber":188,"author":{"gitId":"tlylt"},"content":"            this.updateFile();"},{"lineNumber":189,"author":{"gitId":"tlylt"},"content":"            break;"},{"lineNumber":190,"author":{"gitId":"tlylt"},"content":"        case LIST:"},{"lineNumber":191,"author":{"gitId":"tlylt"},"content":"            return this.listFromDB();"},{"lineNumber":192,"author":{"gitId":"tlylt"},"content":"        case DONE:"},{"lineNumber":193,"author":{"gitId":"tlylt"},"content":"            response +\u003d this.markDoneToDB(LegitCommand.DONE.getDetail());"},{"lineNumber":194,"author":{"gitId":"tlylt"},"content":"            this.updateFile();"},{"lineNumber":195,"author":{"gitId":"tlylt"},"content":"            break;"},{"lineNumber":196,"author":{"gitId":"tlylt"},"content":"        case FIND:"},{"lineNumber":197,"author":{"gitId":"tlylt"},"content":"            return this.findFromDB(LegitCommand.FIND.getDetail(), ui);"},{"lineNumber":198,"author":{"gitId":"tlylt"},"content":"        case DELETE:"},{"lineNumber":199,"author":{"gitId":"tlylt"},"content":"            response +\u003d this.deleteFromDB(LegitCommand.DELETE.getDetail());"},{"lineNumber":200,"author":{"gitId":"tlylt"},"content":"            this.updateFile();"},{"lineNumber":201,"author":{"gitId":"tlylt"},"content":"            break;"},{"lineNumber":202,"author":{"gitId":"tlylt"},"content":"        default:"},{"lineNumber":203,"author":{"gitId":"tlylt"},"content":"            assert false : command;"},{"lineNumber":204,"author":{"gitId":"tlylt"},"content":"            throw new AssertionError(command);"},{"lineNumber":205,"author":{"gitId":"tlylt"},"content":"        }"},{"lineNumber":206,"author":{"gitId":"tlylt"},"content":"        return response;"},{"lineNumber":207,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":208,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":209,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":210,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":210}},{"path":"src/main/java/tlylt/haha/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"package tlylt.haha;"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":" * Representation of various task types."},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"public enum TaskType {"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"    DEADLINE(\"deadline\"),"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"    EVENT(\"event\"),"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"    TODO(\"todo\");"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"    private final String rep;"},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"     * Constructor of a TaskType."},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":"     * @param rep String representation."},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"tlylt"},"content":"    TaskType(String rep) {"},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":"        this.rep \u003d rep;"},{"lineNumber":19,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":21,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"tlylt"},"content":"     * Returns string representation of task type."},{"lineNumber":23,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"tlylt"},"content":"     * @return String task type."},{"lineNumber":25,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"tlylt"},"content":"    String getRep() {"},{"lineNumber":27,"author":{"gitId":"tlylt"},"content":"        return rep;"},{"lineNumber":28,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":29}},{"path":"src/main/java/tlylt/haha/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"package tlylt.haha;"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":" * Representation of a Todo task."},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"     * Construct a Todo task."},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"     * @param isDone      Whether task is set as completed."},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":"     * @param description Details of task."},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"    public Todo(boolean isDone, String description) {"},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"        super(\"T\", isDone, description);"},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":17,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":"     * Returns string representation of task."},{"lineNumber":19,"author":{"gitId":"tlylt"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"tlylt"},"content":"     * @return String task representation."},{"lineNumber":21,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"tlylt"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"tlylt"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"tlylt"},"content":"        return getTypeIcon() + getStatusIcon() + \" \" + description;"},{"lineNumber":25,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":26}},{"path":"src/main/java/tlylt/haha/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"package tlylt.haha;"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":" * Representation of all user interaction."},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"    private static final String STARTER \u003d \"Dude, I\u0027m HAHA.\\n\""},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"            + \"What can I do for you?\\n\""},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"            + \"Hint: deadline \u0026 event to include date \u0026 time\\n\""},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"            + \"Sample: deadline homework /by 2020-02-02 18:00\\n\""},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":"            + \"(Oh when you are done, say bye)\\n\";"},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"    private static final String TASK_NOT_FOUND \u003d \"OH WAIT A MINUTE!\\n\""},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"            + \":(\\n\""},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":"            + \"No related tasks in your list!\";"},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":17,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":"     * Returns warning about a task that cannot be located."},{"lineNumber":19,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"tlylt"},"content":"    public String taskNotFound() {"},{"lineNumber":21,"author":{"gitId":"tlylt"},"content":"        return TASK_NOT_FOUND;"},{"lineNumber":22,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":24,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"tlylt"},"content":"     * Outputs welcome message."},{"lineNumber":26,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"tlylt"},"content":"    public String welcome() {"},{"lineNumber":28,"author":{"gitId":"tlylt"},"content":"        return STARTER;"},{"lineNumber":29,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":31,"author":{"gitId":"tlylt"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"tlylt"},"content":"     * Outputs goodbye message."},{"lineNumber":33,"author":{"gitId":"tlylt"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"tlylt"},"content":"    public String bye() {"},{"lineNumber":35,"author":{"gitId":"tlylt"},"content":"        return \"Bye now!\";"},{"lineNumber":36,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"tlylt"},"content":"}"}],"authorContributionMap":{"tlylt":37}},{"path":"src/test/java/tlylt/haha/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"package tlylt.haha;"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"import java.util.Arrays;"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"public class ParserTest {"},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"    void tokenize_normalCommand_stringArray() {"},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":"        assertTrue(Arrays.equals(new String[]{\"todo\", \"work\"}, Parser.tokenize(\"todo work\")));"},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":"        assertTrue(Arrays.equals(new String[]{\"done\", \"1\"}, Parser.tokenize(\"done 1\")));"},{"lineNumber":17,"author":{"gitId":"tlylt"},"content":"        assertTrue(Arrays.equals(new String[]{\"bye\"}, Parser.tokenize(\"bye\")));"},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":"        assertTrue(Arrays.equals(new String[]{\"deadline\", \"homework /by 2020-01-02 18:00\"},"},{"lineNumber":19,"author":{"gitId":"tlylt"},"content":"                Parser.tokenize(\"deadline homework /by 2020-01-02 18:00\")));"},{"lineNumber":20,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":22,"author":{"gitId":"tlylt"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"tlylt"},"content":"    void taskNumber_notANumber_exceptionThrown() {"},{"lineNumber":24,"author":{"gitId":"tlylt"},"content":"        assertThrows(HahaTaskNumberNotIntException.class, () -\u003e Parser.getTaskNumber(\"one\"));"},{"lineNumber":25,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"tlylt"},"content":""},{"lineNumber":27,"author":{"gitId":"tlylt"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"tlylt"},"content":"    void taskNumber_number_int() throws HahaTaskNumberNotIntException {"},{"lineNumber":29,"author":{"gitId":"tlylt"},"content":"        assertEquals(2, Parser.getTaskNumber(\"2\"));"},{"lineNumber":30,"author":{"gitId":"tlylt"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"tlylt"},"content":"}"},{"lineNumber":32,"author":{"gitId":"tlylt"},"content":""}],"authorContributionMap":{"tlylt":32}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tlylt"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"tlylt"},"content":"list"},{"lineNumber":3,"author":{"gitId":"tlylt"},"content":"deadline return book /by 2020-01-02 18:00"},{"lineNumber":4,"author":{"gitId":"tlylt"},"content":"event project meeting /at 2020-03-12 11:00"},{"lineNumber":5,"author":{"gitId":"tlylt"},"content":"todo new project"},{"lineNumber":6,"author":{"gitId":"tlylt"},"content":"list"},{"lineNumber":7,"author":{"gitId":"tlylt"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"tlylt"},"content":"done 2"},{"lineNumber":9,"author":{"gitId":"tlylt"},"content":"list"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"done 3"},{"lineNumber":11,"author":{"gitId":"tlylt"},"content":"blah"},{"lineNumber":12,"author":{"gitId":"tlylt"},"content":"todo"},{"lineNumber":13,"author":{"gitId":"tlylt"},"content":"deadline"},{"lineNumber":14,"author":{"gitId":"tlylt"},"content":"event"},{"lineNumber":15,"author":{"gitId":"tlylt"},"content":"done whatever"},{"lineNumber":16,"author":{"gitId":"tlylt"},"content":"blah blah"},{"lineNumber":17,"author":{"gitId":"tlylt"},"content":"delete 1"},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":"delete 10"},{"lineNumber":19,"author":{"gitId":"tlylt"},"content":"done 2"},{"lineNumber":20,"author":{"gitId":"tlylt"},"content":"done 10"},{"lineNumber":21,"author":{"gitId":"tlylt"},"content":"list"},{"lineNumber":22,"author":{"gitId":"tlylt"},"content":"bye"}],"authorContributionMap":{"tlylt":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"tlylt"},"content":"javac  -cp ..\\src\\main\\java\\tlylt\\haha -Xlint:none -d ..\\bin ..\\src\\main\\java\\tlylt\\haha\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"tlylt"},"content":"java -classpath ..\\bin Haha \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"tlylt":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"tlylt"},"content":"java -classpath ../bin Haha \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"tlylt":1,"-":37}}]
