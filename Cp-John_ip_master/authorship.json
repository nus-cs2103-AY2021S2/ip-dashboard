[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":"    private static Task[] tasks \u003d new Task[100];"},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"    private static int counter \u003d 0;"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":"        greeting();"},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"        while(true) {"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"            String command \u003d sc.nextLine();"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"            if (!processCommand(command)) {"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":"                break;"},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":"            }"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"        sc.close();"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":""},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"     * print message with proper indentations"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"     * @param msg"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"    public static void printMsg(String msg) {"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":"        System.out.println(\"     \" + msg);"},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":""},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"     * @param task a new task that is added to the task list"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"    public static void addTask(Task task) {"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"        tasks[counter] \u003d task;"},{"lineNumber":32,"author":{"gitId":"Cp-John"},"content":"        counter++;"},{"lineNumber":33,"author":{"gitId":"Cp-John"},"content":"        printMsg(\"added: \" + task.getTitle());"},{"lineNumber":34,"author":{"gitId":"Cp-John"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Cp-John"},"content":""},{"lineNumber":36,"author":{"gitId":"Cp-John"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"Cp-John"},"content":"     * @param task the task that is marked done"},{"lineNumber":38,"author":{"gitId":"Cp-John"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"Cp-John"},"content":"    public static void doneTask(Task task) {"},{"lineNumber":40,"author":{"gitId":"Cp-John"},"content":"        task.done();"},{"lineNumber":41,"author":{"gitId":"Cp-John"},"content":"        printMsg(\"Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":42,"author":{"gitId":"Cp-John"},"content":"        printMsg(\"  \" + task);"},{"lineNumber":43,"author":{"gitId":"Cp-John"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Cp-John"},"content":""},{"lineNumber":45,"author":{"gitId":"Cp-John"},"content":"    public static void printLine() {"},{"lineNumber":46,"author":{"gitId":"Cp-John"},"content":"        System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":47,"author":{"gitId":"Cp-John"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Cp-John"},"content":""},{"lineNumber":49,"author":{"gitId":"Cp-John"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"Cp-John"},"content":"     * print greeting message"},{"lineNumber":51,"author":{"gitId":"Cp-John"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"Cp-John"},"content":"    public static void greeting() {"},{"lineNumber":53,"author":{"gitId":"Cp-John"},"content":"        printLine();"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String logo \u003d \"      ____        _        \\n\""},{"lineNumber":55,"author":{"gitId":"-"},"content":"                + \"     |  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + \"     | | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":57,"author":{"gitId":"-"},"content":"                + \"     | |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":58,"author":{"gitId":"-"},"content":"                + \"     |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":59,"author":{"gitId":"Cp-John"},"content":"        System.out.println(logo);"},{"lineNumber":60,"author":{"gitId":"Cp-John"},"content":"        printMsg(\"Hello! I\u0027m Duke\");"},{"lineNumber":61,"author":{"gitId":"Cp-John"},"content":"        printMsg(\"What can I do for you?\");"},{"lineNumber":62,"author":{"gitId":"Cp-John"},"content":"        printLine();"},{"lineNumber":63,"author":{"gitId":"Cp-John"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Cp-John"},"content":""},{"lineNumber":65,"author":{"gitId":"Cp-John"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"Cp-John"},"content":"     * map commands to actions"},{"lineNumber":67,"author":{"gitId":"Cp-John"},"content":"     * @param command"},{"lineNumber":68,"author":{"gitId":"Cp-John"},"content":"     * @return false if command entered is \"bye\" else true"},{"lineNumber":69,"author":{"gitId":"Cp-John"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"Cp-John"},"content":"    public static boolean processCommand(String command) {"},{"lineNumber":71,"author":{"gitId":"Cp-John"},"content":"        printLine();"},{"lineNumber":72,"author":{"gitId":"Cp-John"},"content":"        if (command.equals(\"bye\")) {"},{"lineNumber":73,"author":{"gitId":"Cp-John"},"content":"            sayBye();"},{"lineNumber":74,"author":{"gitId":"Cp-John"},"content":"            printLine();"},{"lineNumber":75,"author":{"gitId":"Cp-John"},"content":"            return false;"},{"lineNumber":76,"author":{"gitId":"Cp-John"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"Cp-John"},"content":"        "},{"lineNumber":78,"author":{"gitId":"Cp-John"},"content":"        if (command.equals(\"list\")) {"},{"lineNumber":79,"author":{"gitId":"Cp-John"},"content":"            printTasks();"},{"lineNumber":80,"author":{"gitId":"Cp-John"},"content":"        } else {"},{"lineNumber":81,"author":{"gitId":"Cp-John"},"content":"            String[] substrs \u003d command.split(\" \");"},{"lineNumber":82,"author":{"gitId":"Cp-John"},"content":"            if (substrs[0].equals(\"done\")) {"},{"lineNumber":83,"author":{"gitId":"Cp-John"},"content":"                try {"},{"lineNumber":84,"author":{"gitId":"Cp-John"},"content":"                    int idx \u003d Integer.parseInt(substrs[1]);"},{"lineNumber":85,"author":{"gitId":"Cp-John"},"content":"                    doneTask(tasks[idx]);"},{"lineNumber":86,"author":{"gitId":"Cp-John"},"content":"                } catch (Exception e) {"},{"lineNumber":87,"author":{"gitId":"Cp-John"},"content":"                    addTask(new Task(command));"},{"lineNumber":88,"author":{"gitId":"Cp-John"},"content":"                }"},{"lineNumber":89,"author":{"gitId":"Cp-John"},"content":"            } else {"},{"lineNumber":90,"author":{"gitId":"Cp-John"},"content":"                addTask(new Task(command));"},{"lineNumber":91,"author":{"gitId":"Cp-John"},"content":"            }"},{"lineNumber":92,"author":{"gitId":"Cp-John"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"Cp-John"},"content":"        printLine();"},{"lineNumber":94,"author":{"gitId":"Cp-John"},"content":"        return true;"},{"lineNumber":95,"author":{"gitId":"Cp-John"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"Cp-John"},"content":""},{"lineNumber":97,"author":{"gitId":"Cp-John"},"content":"    public static void sayBye() {"},{"lineNumber":98,"author":{"gitId":"Cp-John"},"content":"        printMsg(\"Bye. Hope to see you again soon!\");"},{"lineNumber":99,"author":{"gitId":"Cp-John"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"Cp-John"},"content":""},{"lineNumber":101,"author":{"gitId":"Cp-John"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"Cp-John"},"content":"     * print task list as well as their status"},{"lineNumber":103,"author":{"gitId":"Cp-John"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"Cp-John"},"content":"    public static void printTasks() {"},{"lineNumber":105,"author":{"gitId":"Cp-John"},"content":"        for (int i \u003d 0; i \u003c counter; i++) {"},{"lineNumber":106,"author":{"gitId":"Cp-John"},"content":"            printMsg(i + \".\" + tasks[i].toString());"},{"lineNumber":107,"author":{"gitId":"Cp-John"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Cp-John":100,"-":9}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cp-John"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"Cp-John"},"content":"    private String title;"},{"lineNumber":3,"author":{"gitId":"Cp-John"},"content":"    private String status;"},{"lineNumber":4,"author":{"gitId":"Cp-John"},"content":""},{"lineNumber":5,"author":{"gitId":"Cp-John"},"content":"    public Task(String title) {"},{"lineNumber":6,"author":{"gitId":"Cp-John"},"content":"        this.title \u003d title;"},{"lineNumber":7,"author":{"gitId":"Cp-John"},"content":"        this.status \u003d \"undone\";"},{"lineNumber":8,"author":{"gitId":"Cp-John"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"Cp-John"},"content":""},{"lineNumber":10,"author":{"gitId":"Cp-John"},"content":"    public String getTitle() {"},{"lineNumber":11,"author":{"gitId":"Cp-John"},"content":"        return this.title;"},{"lineNumber":12,"author":{"gitId":"Cp-John"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Cp-John"},"content":""},{"lineNumber":14,"author":{"gitId":"Cp-John"},"content":"    public boolean isDone() {"},{"lineNumber":15,"author":{"gitId":"Cp-John"},"content":"        return status.equals(\"done\");"},{"lineNumber":16,"author":{"gitId":"Cp-John"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Cp-John"},"content":""},{"lineNumber":18,"author":{"gitId":"Cp-John"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"Cp-John"},"content":"     * mark the task as done"},{"lineNumber":20,"author":{"gitId":"Cp-John"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"Cp-John"},"content":"    public void done() {"},{"lineNumber":22,"author":{"gitId":"Cp-John"},"content":"        this.status \u003d \"done\";"},{"lineNumber":23,"author":{"gitId":"Cp-John"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Cp-John"},"content":""},{"lineNumber":25,"author":{"gitId":"Cp-John"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Cp-John"},"content":"     * @return title of the task with its status"},{"lineNumber":27,"author":{"gitId":"Cp-John"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"Cp-John"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"Cp-John"},"content":"        return \"[\" + (isDone() ? \"X\" : \" \") + \"] \" + title;"},{"lineNumber":30,"author":{"gitId":"Cp-John"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Cp-John"},"content":"}"}],"authorContributionMap":{"Cp-John":31}}]
