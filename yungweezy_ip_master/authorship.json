[{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"import duke.Duke;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":"import exception.DukeDateFormatException;"},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"import exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"public class Main {"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"    public static void main(String[] args) throws IOException, DukeException {"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"        Duke duke \u003d new Duke();"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":"            try {"},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":"                if (duke.parse(sc.nextLine()) \u003d\u003d 0) break;"},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"            } catch (DukeException | IOException ex) {"},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":"                System.out.println(ex.toString());"},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":28}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"import exception.*;"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":"import task.Deadline;"},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":"import task.Event;"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"import task.Task;"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"import task.Todo;"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"import java.time.LocalDateTime;"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"import java.util.Locale;"},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":" * Handles duke operations and parses input commands."},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":"public class Duke {"},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":"     * DukeResponse object to handle responses."},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"    private final DukeResponse dukeResponse;"},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"     * DukeStorage object to handle history files."},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"    private final DukeStorage dukeStorage;"},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"yungweezy"},"content":"     * DukeTaskList to handle task list operations."},{"lineNumber":31,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"yungweezy"},"content":"    private final DukeTaskList dukeTaskList;"},{"lineNumber":33,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":34,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"yungweezy"},"content":"     * Datetime parsed format."},{"lineNumber":36,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"yungweezy"},"content":"    public static DateTimeFormatter format \u003d DateTimeFormatter"},{"lineNumber":38,"author":{"gitId":"yungweezy"},"content":"            .ofPattern(\"dd/MM/yyyy, hh:mma\", Locale.US);"},{"lineNumber":39,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":40,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a new duke."},{"lineNumber":42,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"yungweezy"},"content":"     * @throws IOException the io exception"},{"lineNumber":44,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"yungweezy"},"content":"    public Duke() throws IOException, DukeException {"},{"lineNumber":46,"author":{"gitId":"yungweezy"},"content":"        this.dukeStorage \u003d new DukeStorage();"},{"lineNumber":47,"author":{"gitId":"yungweezy"},"content":"        this.dukeTaskList \u003d new DukeTaskList(this.dukeStorage.load());"},{"lineNumber":48,"author":{"gitId":"yungweezy"},"content":"        this.dukeResponse \u003d new DukeResponse();"},{"lineNumber":49,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":51,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"yungweezy"},"content":"     * Parses given input and sets a new current message based on input."},{"lineNumber":53,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"yungweezy"},"content":"     * @param input the input message."},{"lineNumber":55,"author":{"gitId":"yungweezy"},"content":"     * @return integer. 0 represents an terminating entry, 1 represents a continuing entry."},{"lineNumber":56,"author":{"gitId":"yungweezy"},"content":"     * @throws DukeException the duke exception"},{"lineNumber":57,"author":{"gitId":"yungweezy"},"content":"     * @throws IOException   the io exception"},{"lineNumber":58,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"yungweezy"},"content":"    public int parse(String input) throws DukeException, IOException {"},{"lineNumber":60,"author":{"gitId":"yungweezy"},"content":"        String[] parsedInput \u003d input.split(\"\\\\s+\", 2);"},{"lineNumber":61,"author":{"gitId":"yungweezy"},"content":"        switch (parsedInput[0]) {"},{"lineNumber":62,"author":{"gitId":"yungweezy"},"content":"        case (\"\"):"},{"lineNumber":63,"author":{"gitId":"yungweezy"},"content":"            throw new DukeNoInputException();"},{"lineNumber":64,"author":{"gitId":"yungweezy"},"content":"            // Fallthrough"},{"lineNumber":65,"author":{"gitId":"yungweezy"},"content":"        case (\"todo\"): {"},{"lineNumber":66,"author":{"gitId":"yungweezy"},"content":"            if (parsedInput.length \u003c 2 || parsedInput[1].length() \u003d\u003d 0) {"},{"lineNumber":67,"author":{"gitId":"yungweezy"},"content":"                throw new DukeMissingArgumentsException();"},{"lineNumber":68,"author":{"gitId":"yungweezy"},"content":"            } else {"},{"lineNumber":69,"author":{"gitId":"yungweezy"},"content":"                Todo currTodo \u003d new Todo(parsedInput[1]);"},{"lineNumber":70,"author":{"gitId":"yungweezy"},"content":"                dukeTaskList.add(currTodo);"},{"lineNumber":71,"author":{"gitId":"yungweezy"},"content":"                dukeResponse.addTask(currTodo, dukeTaskList.size());"},{"lineNumber":72,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"yungweezy"},"content":"            break;"},{"lineNumber":74,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"yungweezy"},"content":"        case (\"event\"): {"},{"lineNumber":76,"author":{"gitId":"yungweezy"},"content":"            if (parsedInput.length \u003c 2) {"},{"lineNumber":77,"author":{"gitId":"yungweezy"},"content":"                throw new DukeMissingArgumentsException();"},{"lineNumber":78,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"yungweezy"},"content":"            String[] args \u003d parsedInput[1].split(\"/at\", 2);"},{"lineNumber":80,"author":{"gitId":"yungweezy"},"content":"            if (args.length \u003c 2 || args[1].length() \u003d\u003d 0) {"},{"lineNumber":81,"author":{"gitId":"yungweezy"},"content":"                throw new DukeMissingArgumentsException();"},{"lineNumber":82,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"yungweezy"},"content":"            try {"},{"lineNumber":84,"author":{"gitId":"yungweezy"},"content":"                LocalDateTime dateTime \u003d LocalDateTime.parse(args[1].substring(1), format);"},{"lineNumber":85,"author":{"gitId":"yungweezy"},"content":"                Event currEvent \u003d new Event(args[0], dateTime);"},{"lineNumber":86,"author":{"gitId":"yungweezy"},"content":"                dukeTaskList.add(currEvent);"},{"lineNumber":87,"author":{"gitId":"yungweezy"},"content":"                dukeResponse.addTask(currEvent, dukeTaskList.size());"},{"lineNumber":88,"author":{"gitId":"yungweezy"},"content":"                break;"},{"lineNumber":89,"author":{"gitId":"yungweezy"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":90,"author":{"gitId":"yungweezy"},"content":"                throw new DukeDateFormatException();"},{"lineNumber":91,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":92,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"yungweezy"},"content":"        case (\"deadline\"): {"},{"lineNumber":94,"author":{"gitId":"yungweezy"},"content":"            if (parsedInput.length \u003c 2) {"},{"lineNumber":95,"author":{"gitId":"yungweezy"},"content":"                throw new DukeMissingArgumentsException();"},{"lineNumber":96,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"yungweezy"},"content":"            String[] args \u003d parsedInput[1].split(\"/by\", 2);"},{"lineNumber":98,"author":{"gitId":"yungweezy"},"content":"            if (args.length \u003c 2 || args[1].length() \u003d\u003d 0) {"},{"lineNumber":99,"author":{"gitId":"yungweezy"},"content":"                throw new DukeMissingArgumentsException();"},{"lineNumber":100,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":101,"author":{"gitId":"yungweezy"},"content":"            try {"},{"lineNumber":102,"author":{"gitId":"yungweezy"},"content":"                LocalDateTime dateTime \u003d LocalDateTime.parse(args[1].substring(1), format);"},{"lineNumber":103,"author":{"gitId":"yungweezy"},"content":"                Deadline currDeadline \u003d new Deadline(args[0], dateTime);"},{"lineNumber":104,"author":{"gitId":"yungweezy"},"content":"                dukeTaskList.add(currDeadline);"},{"lineNumber":105,"author":{"gitId":"yungweezy"},"content":"                dukeResponse.addTask(currDeadline, dukeTaskList.size());"},{"lineNumber":106,"author":{"gitId":"yungweezy"},"content":"                break;"},{"lineNumber":107,"author":{"gitId":"yungweezy"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":108,"author":{"gitId":"yungweezy"},"content":"                throw new DukeDateFormatException();"},{"lineNumber":109,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":110,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"yungweezy"},"content":"        case (\"delete\"):"},{"lineNumber":112,"author":{"gitId":"yungweezy"},"content":"            if (parsedInput.length \u003c 2) {"},{"lineNumber":113,"author":{"gitId":"yungweezy"},"content":"                throw new DukeMissingArgumentsException();"},{"lineNumber":114,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"yungweezy"},"content":"            int deleteIndex \u003d Integer.parseInt(parsedInput[1]) - 1;"},{"lineNumber":116,"author":{"gitId":"yungweezy"},"content":"            if (deleteIndex \u003e dukeTaskList.size()) {"},{"lineNumber":117,"author":{"gitId":"yungweezy"},"content":"                throw new DukeMissingTaskException();"},{"lineNumber":118,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":119,"author":{"gitId":"yungweezy"},"content":"            Task deletedTask \u003d dukeTaskList.get(deleteIndex);"},{"lineNumber":120,"author":{"gitId":"yungweezy"},"content":"            dukeTaskList.remove(deleteIndex);"},{"lineNumber":121,"author":{"gitId":"yungweezy"},"content":"            dukeResponse.deleteTask(deletedTask, dukeTaskList.size());"},{"lineNumber":122,"author":{"gitId":"yungweezy"},"content":"            break;"},{"lineNumber":123,"author":{"gitId":"yungweezy"},"content":"        case (\"list\"):"},{"lineNumber":124,"author":{"gitId":"yungweezy"},"content":"            dukeResponse.listTasks(dukeTaskList, false);"},{"lineNumber":125,"author":{"gitId":"yungweezy"},"content":"            break;"},{"lineNumber":126,"author":{"gitId":"yungweezy"},"content":"        case (\"find\"):"},{"lineNumber":127,"author":{"gitId":"yungweezy"},"content":"            if (parsedInput.length \u003c 2) {"},{"lineNumber":128,"author":{"gitId":"yungweezy"},"content":"                throw new DukeMissingArgumentsException();"},{"lineNumber":129,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":130,"author":{"gitId":"yungweezy"},"content":"            String subString \u003d parsedInput[1];"},{"lineNumber":131,"author":{"gitId":"yungweezy"},"content":"            ArrayList\u003cTask\u003e searchedList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":132,"author":{"gitId":"yungweezy"},"content":"            for (Task t : dukeTaskList.getTaskList()) {"},{"lineNumber":133,"author":{"gitId":"yungweezy"},"content":"                if (t.getDescription().contains(subString)) {"},{"lineNumber":134,"author":{"gitId":"yungweezy"},"content":"                    searchedList.add(t);"},{"lineNumber":135,"author":{"gitId":"yungweezy"},"content":"                }"},{"lineNumber":136,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":137,"author":{"gitId":"yungweezy"},"content":"            DukeTaskList dukeSearchTaskList \u003d new DukeTaskList(searchedList);"},{"lineNumber":138,"author":{"gitId":"yungweezy"},"content":"            dukeResponse.listTasks(dukeSearchTaskList, true);"},{"lineNumber":139,"author":{"gitId":"yungweezy"},"content":"            break;"},{"lineNumber":140,"author":{"gitId":"yungweezy"},"content":"        case (\"done\"): {"},{"lineNumber":141,"author":{"gitId":"yungweezy"},"content":"            if (parsedInput.length \u003c 2) {"},{"lineNumber":142,"author":{"gitId":"yungweezy"},"content":"                throw new DukeMissingArgumentsException();"},{"lineNumber":143,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":144,"author":{"gitId":"yungweezy"},"content":"            int index \u003d Integer.parseInt(parsedInput[1]) - 1;"},{"lineNumber":145,"author":{"gitId":"yungweezy"},"content":"            if (index \u003e\u003d dukeTaskList.size()) {"},{"lineNumber":146,"author":{"gitId":"yungweezy"},"content":"                throw new DukeMissingTaskException();"},{"lineNumber":147,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":148,"author":{"gitId":"yungweezy"},"content":"            Task currTask \u003d dukeTaskList.get(index);"},{"lineNumber":149,"author":{"gitId":"yungweezy"},"content":"            currTask.markAsDone();"},{"lineNumber":150,"author":{"gitId":"yungweezy"},"content":"            dukeResponse.markAsDone(currTask);"},{"lineNumber":151,"author":{"gitId":"yungweezy"},"content":"            break;"},{"lineNumber":152,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"yungweezy"},"content":"        case (\"bye\"):"},{"lineNumber":154,"author":{"gitId":"yungweezy"},"content":"            dukeResponse.farewell();"},{"lineNumber":155,"author":{"gitId":"yungweezy"},"content":"            dukeStorage.unload(dukeTaskList);"},{"lineNumber":156,"author":{"gitId":"yungweezy"},"content":"            return 0;"},{"lineNumber":157,"author":{"gitId":"yungweezy"},"content":"            // Fallthrough"},{"lineNumber":158,"author":{"gitId":"yungweezy"},"content":"        default:"},{"lineNumber":159,"author":{"gitId":"yungweezy"},"content":"            throw new DukeUnknownInputException();"},{"lineNumber":160,"author":{"gitId":"yungweezy"},"content":"            // Fallthrough"},{"lineNumber":161,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"yungweezy"},"content":"        return 1;"},{"lineNumber":163,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":164,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":164}},{"path":"src/main/java/duke/DukeResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"import exception.DukeEmptyTaskListException;"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":"import exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":"import misc.Color;"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"import misc.Emoji;"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"import task.Task;"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":" * Duke response object."},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"public class DukeResponse {"},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"     * Last output message."},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"    protected String currentMessage;"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":"     * Duke message dividers."},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"    public final static String DIVIDER1 \u003d \"\\n═══════════════════════════╣\""},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":"            + \"DUKE╠═══════════════════════════\\n\";"},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"     * Duke message dividers."},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"    public final static String DIVIDER2 \u003d \"\\n════════════════════════════\""},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":"            + \"════════════════════════════════\\n\";"},{"lineNumber":30,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"yungweezy"},"content":"     * Duke task add headers."},{"lineNumber":32,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"yungweezy"},"content":"    public final static String TASK_ADD_HEADER \u003d \"Alrighty! I\u0027ve added this task:\\n\";"},{"lineNumber":34,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"yungweezy"},"content":"     * Duke task delete headers."},{"lineNumber":36,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"yungweezy"},"content":"    public final static String TASK_DELETE_HEADER \u003d \"Gotcha! I\u0027ve removed this task:\\n\";"},{"lineNumber":38,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"yungweezy"},"content":"     * Duke task footer1."},{"lineNumber":40,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"yungweezy"},"content":"    public final static String TASK_FOOTER1 \u003d \"\\nNow you have \";"},{"lineNumber":42,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"yungweezy"},"content":"     * Duke task footer2."},{"lineNumber":44,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"yungweezy"},"content":"    public final static String TASK_FOOTER2 \u003d \" tasks in the list.\";"},{"lineNumber":46,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":47,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a new Duke response."},{"lineNumber":49,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"yungweezy"},"content":"    public DukeResponse() {"},{"lineNumber":51,"author":{"gitId":"yungweezy"},"content":"        welcome();"},{"lineNumber":52,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":54,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"yungweezy"},"content":"     * Respond a welcome message to the user."},{"lineNumber":56,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"yungweezy"},"content":"    public void welcome() {"},{"lineNumber":58,"author":{"gitId":"yungweezy"},"content":"        this.currentMessage \u003d \"Hey there! I\u0027m Duke\\n\""},{"lineNumber":59,"author":{"gitId":"yungweezy"},"content":"                + \"What can I do for you today?\";"},{"lineNumber":60,"author":{"gitId":"yungweezy"},"content":"        printMessage();"},{"lineNumber":61,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":63,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"yungweezy"},"content":"     * Respond a farewell message to the user."},{"lineNumber":65,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"yungweezy"},"content":"    public void farewell() {"},{"lineNumber":67,"author":{"gitId":"yungweezy"},"content":"        this.currentMessage \u003d \"Good bye. Hope to see you again soon!\";"},{"lineNumber":68,"author":{"gitId":"yungweezy"},"content":"        printMessage();"},{"lineNumber":69,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":71,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"yungweezy"},"content":"     * Acknowledges user with added task message."},{"lineNumber":73,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":74,"author":{"gitId":"yungweezy"},"content":"     * @param task  the task"},{"lineNumber":75,"author":{"gitId":"yungweezy"},"content":"     * @param count the count"},{"lineNumber":76,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"yungweezy"},"content":"    public void addTask(Task task, int count) {"},{"lineNumber":78,"author":{"gitId":"yungweezy"},"content":"        this.currentMessage \u003d TASK_ADD_HEADER + Emoji.TASK + \" \""},{"lineNumber":79,"author":{"gitId":"yungweezy"},"content":"                + task + TASK_FOOTER1 + count + TASK_FOOTER2;"},{"lineNumber":80,"author":{"gitId":"yungweezy"},"content":"        printMessage();"},{"lineNumber":81,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":83,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"yungweezy"},"content":"     * Acknowledges user with deleted task message."},{"lineNumber":85,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"yungweezy"},"content":"     * @param task  the task"},{"lineNumber":87,"author":{"gitId":"yungweezy"},"content":"     * @param count the count"},{"lineNumber":88,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"yungweezy"},"content":"    public void deleteTask(Task task, int count) {"},{"lineNumber":90,"author":{"gitId":"yungweezy"},"content":"        this.currentMessage \u003d TASK_DELETE_HEADER + Color.BLUE_BOLD"},{"lineNumber":91,"author":{"gitId":"yungweezy"},"content":"                + Emoji.TRASH + Color.RESET + \" \" + task"},{"lineNumber":92,"author":{"gitId":"yungweezy"},"content":"                + TASK_FOOTER1 + count + TASK_FOOTER2;"},{"lineNumber":93,"author":{"gitId":"yungweezy"},"content":"        printMessage();"},{"lineNumber":94,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":96,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"yungweezy"},"content":"     * Respond with a task marked done message."},{"lineNumber":98,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":99,"author":{"gitId":"yungweezy"},"content":"     * @param task the task"},{"lineNumber":100,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"yungweezy"},"content":"    public void markAsDone(Task task) {"},{"lineNumber":102,"author":{"gitId":"yungweezy"},"content":"        this.currentMessage \u003d \"Sweet! I\u0027ve marked this task as done:\\n\""},{"lineNumber":103,"author":{"gitId":"yungweezy"},"content":"                + task.toString();"},{"lineNumber":104,"author":{"gitId":"yungweezy"},"content":"        printMessage();"},{"lineNumber":105,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":107,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":108,"author":{"gitId":"yungweezy"},"content":"     * Output the current task list."},{"lineNumber":109,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":110,"author":{"gitId":"yungweezy"},"content":"     * @param list the list"},{"lineNumber":111,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"yungweezy"},"content":"    public void listTasks(DukeTaskList list, boolean isFind) throws DukeException {"},{"lineNumber":113,"author":{"gitId":"yungweezy"},"content":"        if (list.size() \u003d\u003d 0) {"},{"lineNumber":114,"author":{"gitId":"yungweezy"},"content":"            if (isFind) {"},{"lineNumber":115,"author":{"gitId":"yungweezy"},"content":"                throw new DukeException(\"Woops! No task found under those parameters!\");"},{"lineNumber":116,"author":{"gitId":"yungweezy"},"content":"            } else {"},{"lineNumber":117,"author":{"gitId":"yungweezy"},"content":"                throw new DukeEmptyTaskListException();"},{"lineNumber":118,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":119,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":120,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"yungweezy"},"content":"        StringBuilder strList \u003d new StringBuilder();"},{"lineNumber":122,"author":{"gitId":"yungweezy"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":123,"author":{"gitId":"yungweezy"},"content":"            Task task \u003d list.get(i);"},{"lineNumber":124,"author":{"gitId":"yungweezy"},"content":"            String currStr \u003d (i + 1) + \" \\u00BB \" + task.toString() + \"\\n\";"},{"lineNumber":125,"author":{"gitId":"yungweezy"},"content":"            strList.append(currStr);"},{"lineNumber":126,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"yungweezy"},"content":"        if (isFind) {"},{"lineNumber":128,"author":{"gitId":"yungweezy"},"content":"            this.currentMessage \u003d \"Found some tasks matching your find:\\n\" + strList.substring(0,"},{"lineNumber":129,"author":{"gitId":"yungweezy"},"content":"                    strList.toString().length() - 1);"},{"lineNumber":130,"author":{"gitId":"yungweezy"},"content":"        } else {"},{"lineNumber":131,"author":{"gitId":"yungweezy"},"content":"            this.currentMessage \u003d strList.substring(0,"},{"lineNumber":132,"author":{"gitId":"yungweezy"},"content":"                    strList.toString().length() - 1);"},{"lineNumber":133,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"yungweezy"},"content":"        printMessage();"},{"lineNumber":135,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":136,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":137,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":138,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":139,"author":{"gitId":"yungweezy"},"content":"     * Print message."},{"lineNumber":140,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":141,"author":{"gitId":"yungweezy"},"content":"    public void printMessage() {"},{"lineNumber":142,"author":{"gitId":"yungweezy"},"content":"        System.out.println(DIVIDER1 + this.currentMessage + DIVIDER2);"},{"lineNumber":143,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":145,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":145}},{"path":"src/main/java/duke/DukeStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"import exception.DukeDateFormatException;"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":"import exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":"import task.Deadline;"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"import task.Event;"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"import task.Task;"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"import task.Todo;"},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"import java.io.File;"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"import java.io.FileWriter;"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"import java.time.LocalDateTime;"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"import java.util.ArrayList;"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"import java.util.Locale;"},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"import java.util.Scanner;"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":" * Duke storage object. Handles storing, loading, and unloading of task history"},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"public class DukeStorage {"},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"     * File name."},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":"    protected String fileName;"},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":"     * Datetime parsed format."},{"lineNumber":30,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"yungweezy"},"content":"    public static DateTimeFormatter format \u003d DateTimeFormatter"},{"lineNumber":32,"author":{"gitId":"yungweezy"},"content":"            .ofPattern(\"dd/MM/yyyy, hh:mma\", Locale.US);"},{"lineNumber":33,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":34,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a new Duke storage."},{"lineNumber":36,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"yungweezy"},"content":"    protected DukeStorage() {"},{"lineNumber":38,"author":{"gitId":"yungweezy"},"content":"        this.fileName \u003d \"storage/storage.txt\";"},{"lineNumber":39,"author":{"gitId":"yungweezy"},"content":"        File file \u003d new File(this.fileName);"},{"lineNumber":40,"author":{"gitId":"yungweezy"},"content":"        if (!file.getParentFile().exists()) {"},{"lineNumber":41,"author":{"gitId":"yungweezy"},"content":"            System.out.println(\"Task list not found, creating one now...\");"},{"lineNumber":42,"author":{"gitId":"yungweezy"},"content":"            if (file.getParentFile().mkdirs()) {"},{"lineNumber":43,"author":{"gitId":"yungweezy"},"content":"                System.out.println(\"New task list created!\");"},{"lineNumber":44,"author":{"gitId":"yungweezy"},"content":"            } else {"},{"lineNumber":45,"author":{"gitId":"yungweezy"},"content":"                System.out.println(\"Task list creation failed!\");"},{"lineNumber":46,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"yungweezy"},"content":"        } else {"},{"lineNumber":48,"author":{"gitId":"yungweezy"},"content":"            System.out.println(\"Task list found! All\u0027s good.\");"},{"lineNumber":49,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":52,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"yungweezy"},"content":"     * Parse task."},{"lineNumber":54,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"yungweezy"},"content":"     * @param line the line"},{"lineNumber":56,"author":{"gitId":"yungweezy"},"content":"     * @return the task"},{"lineNumber":57,"author":{"gitId":"yungweezy"},"content":"     * @throws DukeException the duke exception"},{"lineNumber":58,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"yungweezy"},"content":"    protected Task parse(String line) throws DukeException {"},{"lineNumber":60,"author":{"gitId":"yungweezy"},"content":"        String[] currLine \u003d line.split(\"\\\\|\");"},{"lineNumber":61,"author":{"gitId":"yungweezy"},"content":"        if (currLine[0].length() \u003c 4) {"},{"lineNumber":62,"author":{"gitId":"yungweezy"},"content":"            throw new DukeException(\"Invalid type field. Removing...\");"},{"lineNumber":63,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"yungweezy"},"content":"        String type \u003d currLine[0].substring(0, currLine[0].length() - 1);"},{"lineNumber":65,"author":{"gitId":"yungweezy"},"content":"        if (currLine[1].length() \u003c 1) {"},{"lineNumber":66,"author":{"gitId":"yungweezy"},"content":"            throw new DukeException(\"Invalid description field. Remove...\");"},{"lineNumber":67,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"yungweezy"},"content":"        String description \u003d currLine[1].substring(1, currLine[1].length() - 2);"},{"lineNumber":69,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":70,"author":{"gitId":"yungweezy"},"content":"        switch (type) {"},{"lineNumber":71,"author":{"gitId":"yungweezy"},"content":"        case(\"Todo\"): {"},{"lineNumber":72,"author":{"gitId":"yungweezy"},"content":"            return new Todo(description);"},{"lineNumber":73,"author":{"gitId":"yungweezy"},"content":"            // Fallthrough"},{"lineNumber":74,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"yungweezy"},"content":"        case(\"Deadline\"): {"},{"lineNumber":76,"author":{"gitId":"yungweezy"},"content":"            if (currLine[2].length() \u003c 1) {"},{"lineNumber":77,"author":{"gitId":"yungweezy"},"content":"                throw new DukeException(\"Invalid /by field. Removing...\");"},{"lineNumber":78,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"yungweezy"},"content":"            try {"},{"lineNumber":80,"author":{"gitId":"yungweezy"},"content":"                LocalDateTime dateTime \u003d LocalDateTime.parse(currLine[2].substring(1), format);"},{"lineNumber":81,"author":{"gitId":"yungweezy"},"content":"                return new Deadline(description, dateTime);"},{"lineNumber":82,"author":{"gitId":"yungweezy"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":83,"author":{"gitId":"yungweezy"},"content":"                throw new DukeDateFormatException();"},{"lineNumber":84,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"yungweezy"},"content":"            // Fallthrough"},{"lineNumber":86,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"yungweezy"},"content":"        case(\"Event\"): {"},{"lineNumber":88,"author":{"gitId":"yungweezy"},"content":"            if (currLine[2].length() \u003c 1) {"},{"lineNumber":89,"author":{"gitId":"yungweezy"},"content":"                throw new DukeException(\"Invalid /at field. Removing...\");"},{"lineNumber":90,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"yungweezy"},"content":"            try {"},{"lineNumber":92,"author":{"gitId":"yungweezy"},"content":"                LocalDateTime at \u003d LocalDateTime.parse(currLine[2].substring(1), format);"},{"lineNumber":93,"author":{"gitId":"yungweezy"},"content":"                return new Event(description, at);"},{"lineNumber":94,"author":{"gitId":"yungweezy"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":95,"author":{"gitId":"yungweezy"},"content":"                throw new DukeDateFormatException();"},{"lineNumber":96,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"yungweezy"},"content":"            // Fallthrough"},{"lineNumber":98,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"yungweezy"},"content":"        default :"},{"lineNumber":100,"author":{"gitId":"yungweezy"},"content":"            throw new DukeException(\"Invalid task. Removing...\");"},{"lineNumber":101,"author":{"gitId":"yungweezy"},"content":"            // Fallthrough"},{"lineNumber":102,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":105,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"yungweezy"},"content":"     * Load tasks from stored history file."},{"lineNumber":107,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":108,"author":{"gitId":"yungweezy"},"content":"     * @return the array list"},{"lineNumber":109,"author":{"gitId":"yungweezy"},"content":"     * @throws IOException   the io exception"},{"lineNumber":110,"author":{"gitId":"yungweezy"},"content":"     * @throws DukeException the duke exception"},{"lineNumber":111,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"yungweezy"},"content":"    protected ArrayList\u003cTask\u003e load() throws IOException, DukeException {"},{"lineNumber":113,"author":{"gitId":"yungweezy"},"content":"        File file \u003d new File(fileName);"},{"lineNumber":114,"author":{"gitId":"yungweezy"},"content":"        try {"},{"lineNumber":115,"author":{"gitId":"yungweezy"},"content":"            if (!file.exists()) {"},{"lineNumber":116,"author":{"gitId":"yungweezy"},"content":"                if (file.createNewFile()) {"},{"lineNumber":117,"author":{"gitId":"yungweezy"},"content":"                    System.out.println(\"New history created!\");"},{"lineNumber":118,"author":{"gitId":"yungweezy"},"content":"                }"},{"lineNumber":119,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":120,"author":{"gitId":"yungweezy"},"content":"        } catch (IOException ex) {"},{"lineNumber":121,"author":{"gitId":"yungweezy"},"content":"            System.out.println(ex.getMessage());"},{"lineNumber":122,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"yungweezy"},"content":"        Scanner sc \u003d new Scanner(file);"},{"lineNumber":124,"author":{"gitId":"yungweezy"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":125,"author":{"gitId":"yungweezy"},"content":"        while (sc.hasNext()) {"},{"lineNumber":126,"author":{"gitId":"yungweezy"},"content":"            taskList.add(parse(sc.nextLine()));"},{"lineNumber":127,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"yungweezy"},"content":"        return taskList;"},{"lineNumber":129,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":131,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":132,"author":{"gitId":"yungweezy"},"content":"     * Unload tasks into stored history file."},{"lineNumber":133,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":134,"author":{"gitId":"yungweezy"},"content":"     * @param taskList the task list"},{"lineNumber":135,"author":{"gitId":"yungweezy"},"content":"     * @throws IOException the io exception"},{"lineNumber":136,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":137,"author":{"gitId":"yungweezy"},"content":"    protected void unload(DukeTaskList taskList) throws IOException {"},{"lineNumber":138,"author":{"gitId":"yungweezy"},"content":"        StringBuilder content \u003d new StringBuilder();"},{"lineNumber":139,"author":{"gitId":"yungweezy"},"content":"        for (Task t : taskList.getTaskList()) {"},{"lineNumber":140,"author":{"gitId":"yungweezy"},"content":"            String currTask \u003d \"\";"},{"lineNumber":141,"author":{"gitId":"yungweezy"},"content":"            switch (t.getClass().getSimpleName()) {"},{"lineNumber":142,"author":{"gitId":"yungweezy"},"content":"            case \"Todo\" : {"},{"lineNumber":143,"author":{"gitId":"yungweezy"},"content":"                currTask \u003d \"Todo | \" + t.getDescription();"},{"lineNumber":144,"author":{"gitId":"yungweezy"},"content":"                break;"},{"lineNumber":145,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":146,"author":{"gitId":"yungweezy"},"content":"            case \"Deadline\": {"},{"lineNumber":147,"author":{"gitId":"yungweezy"},"content":"                currTask \u003d \"Deadline | \" + t.getDescription() + \" | \""},{"lineNumber":148,"author":{"gitId":"yungweezy"},"content":"                        + ((Deadline) t).getSimpleBy();"},{"lineNumber":149,"author":{"gitId":"yungweezy"},"content":"                break;"},{"lineNumber":150,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":151,"author":{"gitId":"yungweezy"},"content":"            case \"Event\": {"},{"lineNumber":152,"author":{"gitId":"yungweezy"},"content":"                currTask \u003d \"Event | \" + t.getDescription() + \" | \""},{"lineNumber":153,"author":{"gitId":"yungweezy"},"content":"                        + ((Event) t).getSimpleAt();"},{"lineNumber":154,"author":{"gitId":"yungweezy"},"content":"                break;"},{"lineNumber":155,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":156,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":157,"author":{"gitId":"yungweezy"},"content":"            content.append(currTask);"},{"lineNumber":158,"author":{"gitId":"yungweezy"},"content":"            content.append(\"\\n\");"},{"lineNumber":159,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":160,"author":{"gitId":"yungweezy"},"content":"        FileWriter fw \u003d new FileWriter(this.fileName);"},{"lineNumber":161,"author":{"gitId":"yungweezy"},"content":"        if (content.length() \u003d\u003d 0) return;"},{"lineNumber":162,"author":{"gitId":"yungweezy"},"content":"        fw.write(content.substring(0, content.toString().length() - 1));"},{"lineNumber":163,"author":{"gitId":"yungweezy"},"content":"        fw.close();"},{"lineNumber":164,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":165}},{"path":"src/main/java/duke/DukeTaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"import task.Task;"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":" * Handles duke task list operations."},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"public class DukeTaskList {"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"     * Contains the currently stored tasks."},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"    protected ArrayList\u003cTask\u003e taskList;"},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a new Duke task list."},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":"     * @param taskList the task list"},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":"    DukeTaskList(ArrayList\u003cTask\u003e taskList) {"},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"     * Add new task into task list."},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"     * @param t the t"},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"yungweezy"},"content":"    protected void add(Task t) {"},{"lineNumber":31,"author":{"gitId":"yungweezy"},"content":"        taskList.add(t);"},{"lineNumber":32,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":34,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"yungweezy"},"content":"     * Remove a task from task list."},{"lineNumber":36,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"yungweezy"},"content":"     * @param i the"},{"lineNumber":38,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"yungweezy"},"content":"    protected void remove(int i) {"},{"lineNumber":40,"author":{"gitId":"yungweezy"},"content":"        taskList.remove(i);"},{"lineNumber":41,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":43,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"yungweezy"},"content":"     * Gets the number of tasks in the task list."},{"lineNumber":45,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"yungweezy"},"content":"     * @return the int"},{"lineNumber":47,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"yungweezy"},"content":"    protected int size() {"},{"lineNumber":49,"author":{"gitId":"yungweezy"},"content":"        return taskList.size();"},{"lineNumber":50,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":52,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"yungweezy"},"content":"     * Get task based on index."},{"lineNumber":54,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"yungweezy"},"content":"     * @param i the"},{"lineNumber":56,"author":{"gitId":"yungweezy"},"content":"     * @return the task"},{"lineNumber":57,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"yungweezy"},"content":"    protected Task get(int i) {"},{"lineNumber":59,"author":{"gitId":"yungweezy"},"content":"        return taskList.get(i);"},{"lineNumber":60,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":62,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"yungweezy"},"content":"     * Gets task list."},{"lineNumber":64,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"yungweezy"},"content":"     * @return the task list"},{"lineNumber":66,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"yungweezy"},"content":"    protected ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":68,"author":{"gitId":"yungweezy"},"content":"        return this.taskList;"},{"lineNumber":69,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":71,"author":{"gitId":"yungweezy"},"content":"    @Override"},{"lineNumber":72,"author":{"gitId":"yungweezy"},"content":"    public String toString() {"},{"lineNumber":73,"author":{"gitId":"yungweezy"},"content":"        return taskList.toString();"},{"lineNumber":74,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":75}},{"path":"src/main/java/exception/DukeDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":" * Duke date format exception."},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"public class DukeDateFormatException extends  DukeException{"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a new Duke date format exception."},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"    public DukeDateFormatException() {"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"        super(\"Woops! Give me a date like this: [25-10-1997, 10:30PM]\");"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":13}},{"path":"src/main/java/exception/DukeEmptyTaskListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":" * Duke empty task list exception."},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"public class DukeEmptyTaskListException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a new Duke empty task list exception."},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"    public DukeEmptyTaskListException() {"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"        super(\" You have no tasks scheduled at the moment \");"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":13}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"import misc.Color;"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":"import misc.Emoji;"},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":" * duke.Duke exceptions handler."},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"public class DukeException extends Exception {"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"     * duke.Duke message dividers."},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"    public final static String DIVIDER1 \u003d \"\\n═══════════════════════════╣\""},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"            + \"DUKE╠═══════════════════════════\\n\";"},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"     * duke.Duke message dividers."},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":"    public final static String DIVIDER2 \u003d \"\\n════════════════════════════\""},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"            + \"════════════════════════════════\\n\";"},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a new duke.Duke exception."},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"     * @param message the message"},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":"    public DukeException(String message) {"},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"        super(message);"},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":31,"author":{"gitId":"yungweezy"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"yungweezy"},"content":"    public String toString() {"},{"lineNumber":33,"author":{"gitId":"yungweezy"},"content":"        return DIVIDER1 + Color.YELLOW_BOLD + Emoji.ERROR + Color.RESET + \" \""},{"lineNumber":34,"author":{"gitId":"yungweezy"},"content":"                + this.getMessage() + \" \" + Color.YELLOW_BOLD"},{"lineNumber":35,"author":{"gitId":"yungweezy"},"content":"                + Emoji.ERROR + Color.RESET + DIVIDER2;"},{"lineNumber":36,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":37}},{"path":"src/main/java/exception/DukeMissingArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":" * duke.Duke missing arguments exception."},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"public class DukeMissingArgumentsException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a missing arguments exception."},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"    public DukeMissingArgumentsException() {"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"        super(\"Oops! One or more arguments are not valid, please try again\");"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":13}},{"path":"src/main/java/exception/DukeMissingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":" * duke.Duke missing task exception."},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"public class DukeMissingTaskException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a new duke.Duke missing task exception."},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"    public DukeMissingTaskException() {"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"        super(\"Oops! task.Task not found, please try again.\");"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":13}},{"path":"src/main/java/exception/DukeNoInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":" * duke.Duke no input exception."},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"public class DukeNoInputException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a new duke.Duke exception."},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"    public DukeNoInputException() {"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"        super(\"Oops, I cannot process nothing as input!\");"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":13}},{"path":"src/main/java/exception/DukeUnknownInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":" * duke.Duke unknown input exception."},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"public class DukeUnknownInputException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a duke.Duke unknown input exception."},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"    public DukeUnknownInputException() {"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"        super(\"Oops! I\u0027m not quite sure what you meant there.\");"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":13}},{"path":"src/main/java/misc/Color.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package misc;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":" * The enum Color."},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"public enum Color {"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"    RESET(\"\\033[0m\"),"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"    BLACK(\"\\033[0;30m\"),"},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"    RED(\"\\033[0;31m\"),"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"    GREEN(\"\\033[0;32m\"),"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"    YELLOW(\"\\033[0;33m\"),"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"    BLUE(\"\\033[0;34m\"),"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"    MAGENTA(\"\\033[0;35m\"),"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"    CYAN(\"\\033[0;36m\"),"},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"    WHITE(\"\\033[0;37m\"),"},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"    BLACK_BOLD(\"\\033[1;30m\"),"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"    RED_BOLD(\"\\033[1;31m\"),"},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"    GREEN_BOLD(\"\\033[1;32m\"),"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":"    YELLOW_BOLD(\"\\033[1;33m\"),"},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"    BLUE_BOLD(\"\\033[1;34m\"),"},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":"    MAGENTA_BOLD(\"\\033[1;35m\"),"},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":"    CYAN_BOLD(\"\\033[1;36m\"),"},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"    WHITE_BOLD(\"\\033[1;37m\");"},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"     * Unicode for colors."},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"    public final String code;"},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":30,"author":{"gitId":"yungweezy"},"content":"    Color(String code) {"},{"lineNumber":31,"author":{"gitId":"yungweezy"},"content":"        this.code \u003d code;"},{"lineNumber":32,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":34,"author":{"gitId":"yungweezy"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"yungweezy"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitId":"yungweezy"},"content":"        return code;"},{"lineNumber":37,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":38}},{"path":"src/main/java/misc/Emoji.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package misc;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":" * The enum Emoji."},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"public enum Emoji {"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"    TASK(\"\\uD83D\\uDCC5\"),"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"    TRASH(\"\\uD83D\\uDEAE\"),"},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"    ERROR(\"\\u26A0\");"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"     * Unicode for emoji."},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"    public final String code;"},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"    Emoji(String code) {"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"        this.code \u003d code;"},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":"        return code;"},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":24}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":" * Deadline."},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"public class Deadline extends Task{"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"     * Datetime of the task deadline."},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"    protected LocalDateTime by;"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"     * The constant parseFormat."},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"    public static String parseFormat \u003d \"dd/MM/yyyy, hh:mma\";"},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":"     * The constant outputFormat."},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":"    public static String outputFormat \u003d \"dd MMM yyyy, hh:mma\";"},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a new deadline task."},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"     * @param description the deadline description"},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":"     * @param by          the by"},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":"    public Deadline(String description, LocalDateTime by) {"},{"lineNumber":30,"author":{"gitId":"yungweezy"},"content":"        super(description);"},{"lineNumber":31,"author":{"gitId":"yungweezy"},"content":"        this.by \u003d by;"},{"lineNumber":32,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":34,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"yungweezy"},"content":"     * Gets the simple localdatetime parse format."},{"lineNumber":36,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"yungweezy"},"content":"     * @return the simple by"},{"lineNumber":38,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"yungweezy"},"content":"    public String getSimpleBy() {"},{"lineNumber":40,"author":{"gitId":"yungweezy"},"content":"        return by.format(DateTimeFormatter.ofPattern(parseFormat));"},{"lineNumber":41,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":43,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"yungweezy"},"content":"     * Gets the intended localdatetime output format."},{"lineNumber":45,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"yungweezy"},"content":"     * @return the by"},{"lineNumber":47,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"yungweezy"},"content":"    public String getBy() {"},{"lineNumber":49,"author":{"gitId":"yungweezy"},"content":"        return by.format(DateTimeFormatter.ofPattern(outputFormat));"},{"lineNumber":50,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":52,"author":{"gitId":"yungweezy"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"yungweezy"},"content":"    public String toString() {"},{"lineNumber":54,"author":{"gitId":"yungweezy"},"content":"        return \"DEADLINE \\u00BB \" + super.description + \" (by: \" + getBy() + \") \" + super.getStatusIcon();"},{"lineNumber":55,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":56}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"import java.util.Locale;"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":" * Event."},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"public class Event extends Task{"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"     * Datetime of the task event."},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"    protected LocalDateTime at;"},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"     * The constant parseFormat."},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":"    public static String parseFormat \u003d \"dd/MM/yyyy, hh:mma\";"},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":"     * The constant outputFormat."},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"    public static String outputFormat \u003d \"dd MMM yyyy, hh:mma\";"},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a new event task."},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"     * @param description the event description"},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":"     * @param at          the at"},{"lineNumber":30,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"yungweezy"},"content":"    public Event(String description, LocalDateTime at) {"},{"lineNumber":32,"author":{"gitId":"yungweezy"},"content":"        super(description);"},{"lineNumber":33,"author":{"gitId":"yungweezy"},"content":"        this.at \u003d at;"},{"lineNumber":34,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":36,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"yungweezy"},"content":"     * Gets the simple localdatetime parsed format."},{"lineNumber":38,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"yungweezy"},"content":"     * @return the simple at"},{"lineNumber":40,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"yungweezy"},"content":"    public String getSimpleAt() {"},{"lineNumber":42,"author":{"gitId":"yungweezy"},"content":"        return at.format(DateTimeFormatter.ofPattern(parseFormat));"},{"lineNumber":43,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":45,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"yungweezy"},"content":"     * Gets the intended localdatetime output format."},{"lineNumber":47,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"yungweezy"},"content":"     * @return the at"},{"lineNumber":49,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"yungweezy"},"content":"    public String getAt() {"},{"lineNumber":51,"author":{"gitId":"yungweezy"},"content":"        return at.format(DateTimeFormatter.ofPattern(outputFormat));"},{"lineNumber":52,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":54,"author":{"gitId":"yungweezy"},"content":"    @Override"},{"lineNumber":55,"author":{"gitId":"yungweezy"},"content":"    public String toString() {"},{"lineNumber":56,"author":{"gitId":"yungweezy"},"content":"        return \"EVENT \\u00BB \" + super.description + \" (at: \" + getAt() + \") \" + super.getStatusIcon();"},{"lineNumber":57,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":58}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"import misc.Color;"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":" * task.Task object."},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"public class Task {"},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"     * task.Task description."},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"    public String description;"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"     * task.Task completion status."},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"    public boolean isDone;"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a new task.Task."},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":"     * @param description the description"},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"    public Task(String description) {"},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":"        this.description \u003d description;"},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"        this.isDone \u003d false;"},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":"     * Marks a task as done."},{"lineNumber":30,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"yungweezy"},"content":"    public void markAsDone() {"},{"lineNumber":32,"author":{"gitId":"yungweezy"},"content":"        this.isDone \u003d true;"},{"lineNumber":33,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":35,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"yungweezy"},"content":"     * Retrieves status string."},{"lineNumber":37,"author":{"gitId":"yungweezy"},"content":"     * r"},{"lineNumber":38,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"yungweezy"},"content":"     * @return status icon. A check mark for complete tasks , an x mark otherwise."},{"lineNumber":40,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"yungweezy"},"content":"    public String getStatusIcon() {"},{"lineNumber":42,"author":{"gitId":"yungweezy"},"content":"        return (isDone"},{"lineNumber":43,"author":{"gitId":"yungweezy"},"content":"                ? Color.GREEN_BOLD + \"\\u2713\" + Color.RESET"},{"lineNumber":44,"author":{"gitId":"yungweezy"},"content":"                : Color.RED_BOLD + \"\\u2718\" + Color.RESET);"},{"lineNumber":45,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":47,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"yungweezy"},"content":"     * Gets task description."},{"lineNumber":49,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"yungweezy"},"content":"     * @return the description"},{"lineNumber":51,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"yungweezy"},"content":"    public String getDescription() {"},{"lineNumber":53,"author":{"gitId":"yungweezy"},"content":"        return this.description;"},{"lineNumber":54,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":56,"author":{"gitId":"yungweezy"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"yungweezy"},"content":"    public String toString() {"},{"lineNumber":58,"author":{"gitId":"yungweezy"},"content":"        return this.description + \" \" + getStatusIcon();"},{"lineNumber":59,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":60}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a new todo task."},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"     * @param description the todo description"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"    public Todo(String description) {"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"        return \"TODO \\u00BB \" + super.toString();"},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":17}},{"path":"src/storage/storage.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"Todo | as"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":"Todo | he"},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"Todo | asda"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":"Todo | hello"},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":"Todo | asdasdasdasdasdasdas"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"Todo | thisisatest"}],"authorContributionMap":{"yungweezy":6}},{"path":"src/test/java/duke/DukeTaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":"import task.Task;"},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":"import task.Todo;"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"public class DukeTaskListTest {"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"    public void sizeTest() {"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"        Task dummyTask \u003d new Todo(\"test\");"},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"        taskList.add(dummyTask);"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"        taskList.add(dummyTask);"},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"        taskList.add(dummyTask);"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":"        taskList.add(dummyTask);"},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"        taskList.add(dummyTask);"},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":"        DukeTaskList dummyTaskList \u003d new DukeTaskList(taskList);"},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":"        assertEquals(dummyTaskList.size(), 5);"},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"    public void getTest() {"},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"        Todo task \u003d new Todo(\"test\");"},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":"        taskList.add(task);"},{"lineNumber":30,"author":{"gitId":"yungweezy"},"content":"        DukeTaskList dummyTaskList \u003d new DukeTaskList(taskList);"},{"lineNumber":31,"author":{"gitId":"yungweezy"},"content":"        assertEquals(dummyTaskList.get(0), task);"},{"lineNumber":32,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":34,"author":{"gitId":"yungweezy"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"yungweezy"},"content":"    public void getTaskListTest() {"},{"lineNumber":36,"author":{"gitId":"yungweezy"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":37,"author":{"gitId":"yungweezy"},"content":"        DukeTaskList dummyTaskList \u003d new DukeTaskList(taskList);"},{"lineNumber":38,"author":{"gitId":"yungweezy"},"content":"        assertEquals(dummyTaskList.getTaskList(), taskList);"},{"lineNumber":39,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":40}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"import java.util.Locale;"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"public class EventTest {"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"    public void getSimpleAtTest() {"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter"},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"                .ofPattern(\"dd/MM/yyyy, hh:mma\", Locale.US);"},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"25/10/1997, 10:30PM\", format);"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"        Event event \u003d new Event(\"test\", dateTime);"},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"        assertEquals(event.getSimpleAt(), dateTime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy, hh:mma\")));"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"    public void getAtTest() {"},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter"},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"                .ofPattern(\"dd/MM/yyyy, hh:mma\", Locale.US);"},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"25/10/1997, 10:30PM\", format);"},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":"        Event event \u003d new Event(\"test\", dateTime);"},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"        assertEquals(event.getAt(), \"25 Oct 1997, 10:30PM\");"},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":"deadline read book /by June 6th"},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"done 4"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"todo borrow book"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"list"},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"deadline return book /by Sunday"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"list"}],"authorContributionMap":{"yungweezy":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"javac -encoding ISO-8859-1 -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"-":19,"yungweezy":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"-":37,"yungweezy":1}}]
