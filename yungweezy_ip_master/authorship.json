[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":32,"author":{"gitId":"yungweezy"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":46,"author":{"gitId":"yungweezy"},"content":"    enableAssertions \u003d true"},{"lineNumber":47,"author":{"gitId":"yungweezy"},"content":"}"},{"lineNumber":48,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":49,"author":{"gitId":"yungweezy"},"content":"repositories {"},{"lineNumber":50,"author":{"gitId":"yungweezy"},"content":"    mavenCentral()"},{"lineNumber":51,"author":{"gitId":"yungweezy"},"content":"}"},{"lineNumber":52,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":53,"author":{"gitId":"yungweezy"},"content":"dependencies {"},{"lineNumber":54,"author":{"gitId":"yungweezy"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":55,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":56,"author":{"gitId":"yungweezy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":57,"author":{"gitId":"yungweezy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":58,"author":{"gitId":"yungweezy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":59,"author":{"gitId":"yungweezy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":60,"author":{"gitId":"yungweezy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":61,"author":{"gitId":"yungweezy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":62,"author":{"gitId":"yungweezy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":63,"author":{"gitId":"yungweezy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":64,"author":{"gitId":"yungweezy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":65,"author":{"gitId":"yungweezy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":66,"author":{"gitId":"yungweezy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":67,"author":{"gitId":"yungweezy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":68,"author":{"gitId":"yungweezy"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.6.0\u0027"},{"lineNumber":69,"author":{"gitId":"yungweezy"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine\u0027"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":45,"yungweezy":25}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"# Cartman User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"Cartman is a task management application made for my CS2103T Software Engineering class."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":"It is a chatbox that handles interactions using a CLI (Command Line Interface)"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"## Quick Start"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"1. Ensure that you have `Java 11` installed in your computer."},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"2. Download the latest release and double click `duke.jar`"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"3. Type the commands available and start adding your tasks."},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"## Feature List"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"1. [**`todo`**](#todo): adds a todo task  "},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"   [**`deadline`**](#deadline): adds a deadline task  "},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"   [**`event`**](#event): adds an event task"},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"2. [**`list`**](#list): prints a list of all tasks"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"3. [**`done`**](#done): marks a task as done"},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"4. [**`delete`**](#delete): deletes a task from list"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":"5. [**`find`**](#find): search for tasks with the input keyword"},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"6. [**`bye`**](#bye): say bye to Cartman"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":"### \u003ca name\u003d\"todo\"\u003e\u003c/a\u003eAdds a todo task: `todo`"},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"Adds a todo task to the application."},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"Format:"},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":"`todo \u003ctask-description\u003e`"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"yungweezy"},"content":"`todo finish up iP`"},{"lineNumber":34,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":35,"author":{"gitId":"yungweezy"},"content":"Expected outcome:"},{"lineNumber":36,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":37,"author":{"gitId":"yungweezy"},"content":"```"},{"lineNumber":38,"author":{"gitId":"yungweezy"},"content":"Alrighty! I\u0027ve added this task:"},{"lineNumber":39,"author":{"gitId":"yungweezy"},"content":"📅 TODO » finish up iP ✘"},{"lineNumber":40,"author":{"gitId":"yungweezy"},"content":"Now you have 1 tasks in the list."},{"lineNumber":41,"author":{"gitId":"yungweezy"},"content":"```"},{"lineNumber":42,"author":{"gitId":"yungweezy"},"content":"### \u003ca name\u003d\"deadline\"\u003e\u003c/a\u003eAdds a deadline task: `deadline`"},{"lineNumber":43,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":44,"author":{"gitId":"yungweezy"},"content":"Adds a deadline task to the application specifying a date to complete by."},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"yungweezy"},"content":"Format:"},{"lineNumber":47,"author":{"gitId":"yungweezy"},"content":"`deadline \u003ctask-description\u003e /by \u003cdate\u003e`  "},{"lineNumber":48,"author":{"gitId":"yungweezy"},"content":"Date format: `DD/MM/YYYY, hh:mm\u003cAM/PM\u003e`"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"yungweezy"},"content":"Example of usage:"},{"lineNumber":51,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":52,"author":{"gitId":"yungweezy"},"content":"`deadline submit iP /by 19/02/2021, 11:59PM`  "},{"lineNumber":53,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":54,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":55,"author":{"gitId":"yungweezy"},"content":"Expected outcome:"},{"lineNumber":56,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":57,"author":{"gitId":"yungweezy"},"content":"```"},{"lineNumber":58,"author":{"gitId":"yungweezy"},"content":"Alrighty! I\u0027ve added this task:"},{"lineNumber":59,"author":{"gitId":"yungweezy"},"content":"📅 DEADLINE » submit iP (by: 19 Feb 2021, 11:59PM) ✘"},{"lineNumber":60,"author":{"gitId":"yungweezy"},"content":"Now you have 2 tasks in the list."},{"lineNumber":61,"author":{"gitId":"yungweezy"},"content":"```"},{"lineNumber":62,"author":{"gitId":"yungweezy"},"content":"### \u003ca name\u003d\"event\"\u003e\u003c/a\u003eAdds a event task: `event`"},{"lineNumber":63,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":64,"author":{"gitId":"yungweezy"},"content":"Adds a event task to the application specifying a date the event will happen."},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"yungweezy"},"content":"Format:"},{"lineNumber":67,"author":{"gitId":"yungweezy"},"content":"`event \u003ctask-description\u003e /at \u003cdate\u003e`  "},{"lineNumber":68,"author":{"gitId":"yungweezy"},"content":"Date format: `DD/MM/YYYY, hh:mm\u003cAM/PM\u003e`"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"yungweezy"},"content":"`event Y2S2 ends /at 01/05/2021, 11:59PM`"},{"lineNumber":73,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":74,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":75,"author":{"gitId":"yungweezy"},"content":"Expected outcome:"},{"lineNumber":76,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":77,"author":{"gitId":"yungweezy"},"content":"```"},{"lineNumber":78,"author":{"gitId":"yungweezy"},"content":"Alrighty! I\u0027ve added this task:"},{"lineNumber":79,"author":{"gitId":"yungweezy"},"content":"📅 EVENT » Y2S2 ends (at: 01 May 2021, 11:59PM) ✘"},{"lineNumber":80,"author":{"gitId":"yungweezy"},"content":"Now you have 3 tasks in the list."},{"lineNumber":81,"author":{"gitId":"yungweezy"},"content":"```"},{"lineNumber":82,"author":{"gitId":"yungweezy"},"content":"### \u003ca name\u003d\"list\"\u003e\u003c/a\u003eLists all available tasks: `list`"},{"lineNumber":83,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":84,"author":{"gitId":"yungweezy"},"content":"Lists all tasks currently stored."},{"lineNumber":85,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":86,"author":{"gitId":"yungweezy"},"content":"Format:"},{"lineNumber":87,"author":{"gitId":"yungweezy"},"content":"`list`"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"yungweezy"},"content":"```"},{"lineNumber":92,"author":{"gitId":"yungweezy"},"content":"Hey Butters! You\u0027ve got to do these tasks:"},{"lineNumber":93,"author":{"gitId":"yungweezy"},"content":"1 » TODO » finish up iP ✘"},{"lineNumber":94,"author":{"gitId":"yungweezy"},"content":"2 » DEADLINE » submit iP (by: 19 Feb 2021, 11:59PM) ✘"},{"lineNumber":95,"author":{"gitId":"yungweezy"},"content":"3 » EVENT » Y2S2 ends (at: 01 May 2021, 11:59PM) ✘"},{"lineNumber":96,"author":{"gitId":"yungweezy"},"content":"```"},{"lineNumber":97,"author":{"gitId":"yungweezy"},"content":"### \u003ca name\u003d\"done\"\u003e\u003c/a\u003eMarks a task as done: `done`"},{"lineNumber":98,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":99,"author":{"gitId":"yungweezy"},"content":"Checks the task indicating completion."},{"lineNumber":100,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":101,"author":{"gitId":"yungweezy"},"content":"Format:"},{"lineNumber":102,"author":{"gitId":"yungweezy"},"content":"`done \u003cindex\u003e`  "},{"lineNumber":103,"author":{"gitId":"yungweezy"},"content":"`\u003cindex\u003e` indicates the index of the completed task."},{"lineNumber":104,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":105,"author":{"gitId":"yungweezy"},"content":"Example of usage:"},{"lineNumber":106,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":107,"author":{"gitId":"yungweezy"},"content":"`done 3`: marks task at index `3` as completed"},{"lineNumber":108,"author":{"gitId":"-"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":110,"author":{"gitId":"yungweezy"},"content":"```"},{"lineNumber":111,"author":{"gitId":"yungweezy"},"content":"Sweet! I\u0027ve marked this task as done:"},{"lineNumber":112,"author":{"gitId":"yungweezy"},"content":"EVENT » Y2S2 ends (at: 01 May 2021, 11:59PM) ✓"},{"lineNumber":113,"author":{"gitId":"yungweezy"},"content":"```"},{"lineNumber":114,"author":{"gitId":"yungweezy"},"content":"### \u003ca name\u003d\"delete\"\u003e\u003c/a\u003eDeletes a task: `delete`"},{"lineNumber":115,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":116,"author":{"gitId":"yungweezy"},"content":"Removes a task forever."},{"lineNumber":117,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":118,"author":{"gitId":"yungweezy"},"content":"Format:"},{"lineNumber":119,"author":{"gitId":"yungweezy"},"content":"`delete \u003cindex\u003e`  "},{"lineNumber":120,"author":{"gitId":"yungweezy"},"content":"`\u003cindex\u003e` indicates the index of the completed task."},{"lineNumber":121,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":122,"author":{"gitId":"yungweezy"},"content":"Example of usage:"},{"lineNumber":123,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":124,"author":{"gitId":"yungweezy"},"content":"`delete 1`: deletes task at index `1`."},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"yungweezy"},"content":"Expected outcome:"},{"lineNumber":127,"author":{"gitId":"yungweezy"},"content":"```"},{"lineNumber":128,"author":{"gitId":"yungweezy"},"content":"Gotcha! I\u0027ve removed this task:"},{"lineNumber":129,"author":{"gitId":"yungweezy"},"content":"🚮 TODO » finish up iP ✘"},{"lineNumber":130,"author":{"gitId":"yungweezy"},"content":"Now you have 2 tasks in the list."},{"lineNumber":131,"author":{"gitId":"yungweezy"},"content":"```"},{"lineNumber":132,"author":{"gitId":"yungweezy"},"content":"### \u003ca name\u003d\"delete\"\u003e\u003c/a\u003eFinds task using specific keywords: `find`"},{"lineNumber":133,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":134,"author":{"gitId":"yungweezy"},"content":"Lists tasks that matches the given keywords."},{"lineNumber":135,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":136,"author":{"gitId":"yungweezy"},"content":"Format:"},{"lineNumber":137,"author":{"gitId":"yungweezy"},"content":"`find \u003ckeyword\u003e`"},{"lineNumber":138,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":139,"author":{"gitId":"yungweezy"},"content":"Example of usage:"},{"lineNumber":140,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":141,"author":{"gitId":"yungweezy"},"content":"`find  submit`: finds tasks that include the keywords `submit`."},{"lineNumber":142,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":143,"author":{"gitId":"yungweezy"},"content":"Expected outcome:"},{"lineNumber":144,"author":{"gitId":"yungweezy"},"content":"```"},{"lineNumber":145,"author":{"gitId":"yungweezy"},"content":"Oh oh! I\u0027ve found something:"},{"lineNumber":146,"author":{"gitId":"yungweezy"},"content":"1 » DEADLINE » submit iP (by: 19 Feb 2021, 11:59PM) ✘"},{"lineNumber":147,"author":{"gitId":"yungweezy"},"content":"```"},{"lineNumber":148,"author":{"gitId":"yungweezy"},"content":"### \u003ca name\u003d\"bye\"\u003e\u003c/a\u003eSays bye to Cartman and ends the application: `bye`"},{"lineNumber":149,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":150,"author":{"gitId":"yungweezy"},"content":"Ends the application and sends Cartman home."},{"lineNumber":151,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":152,"author":{"gitId":"yungweezy"},"content":"Format:"},{"lineNumber":153,"author":{"gitId":"yungweezy"},"content":"`bye`"},{"lineNumber":154,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":155,"author":{"gitId":"yungweezy"},"content":"Expected outcome:"},{"lineNumber":156,"author":{"gitId":"yungweezy"},"content":"```"},{"lineNumber":157,"author":{"gitId":"yungweezy"},"content":"Bye bye Butters! See you tomorrow!"},{"lineNumber":158,"author":{"gitId":"yungweezy"},"content":"```"}],"authorContributionMap":{"-":22,"yungweezy":136}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":"import exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"import ui.MainWindow;"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":" * Main driver class."},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"    public void start(Stage stage) {"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"            Duke duke \u003d new Duke();"},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":"            scene.getStylesheets().add(\"/view/style.css\");"},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"            stage.setTitle(\"Cartman\");"},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"            stage.show();"},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":"        } catch (IOException | DukeException e) {"},{"lineNumber":30,"author":{"gitId":"yungweezy"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":33}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"import java.util.Locale;"},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"import exception.DukeDateFormatException;"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"import exception.DukeException;"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"import exception.DukeMissingArgumentsException;"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"import exception.DukeMissingTaskException;"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"import exception.DukeNoInputException;"},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"import exception.DukeUnknownInputException;"},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"import task.Deadline;"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"import task.Event;"},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"import task.Task;"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":"import task.Todo;"},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":" * Handles duke operations and parses input commands."},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":"public class Duke {"},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"     * Datetime parsed format."},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"    private static final DateTimeFormatter format \u003d DateTimeFormatter"},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":"            .ofPattern(\"dd/MM/yyyy, hh:mma\", Locale.US);"},{"lineNumber":30,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"yungweezy"},"content":"     * DukeResponse object to handle responses."},{"lineNumber":32,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"yungweezy"},"content":"    private final DukeResponse dukeResponse;"},{"lineNumber":34,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":35,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"yungweezy"},"content":"     * DukeStorage object to handle history files."},{"lineNumber":37,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"yungweezy"},"content":"    private final DukeStorage dukeStorage;"},{"lineNumber":39,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"yungweezy"},"content":"     * DukeTaskList to handle task list operations."},{"lineNumber":41,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"yungweezy"},"content":"    private final DukeTaskList dukeTaskList;"},{"lineNumber":43,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":44,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a new duke."},{"lineNumber":46,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"yungweezy"},"content":"     * @throws IOException   the io exception"},{"lineNumber":48,"author":{"gitId":"yungweezy"},"content":"     * @throws DukeException the duke exception"},{"lineNumber":49,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"yungweezy"},"content":"    public Duke() throws IOException, DukeException {"},{"lineNumber":51,"author":{"gitId":"yungweezy"},"content":"        this.dukeStorage \u003d new DukeStorage();"},{"lineNumber":52,"author":{"gitId":"yungweezy"},"content":"        this.dukeTaskList \u003d new DukeTaskList(this.dukeStorage.load());"},{"lineNumber":53,"author":{"gitId":"yungweezy"},"content":"        this.dukeResponse \u003d new DukeResponse();"},{"lineNumber":54,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":56,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"yungweezy"},"content":"     * Parses given input and sets a new current message based on input."},{"lineNumber":58,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"yungweezy"},"content":"     * @param input the input message."},{"lineNumber":60,"author":{"gitId":"yungweezy"},"content":"     * @return the response string from Duke."},{"lineNumber":61,"author":{"gitId":"yungweezy"},"content":"     * @throws DukeException the caught duke exception."},{"lineNumber":62,"author":{"gitId":"yungweezy"},"content":"     * @throws IOException   the caught io exception."},{"lineNumber":63,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"yungweezy"},"content":"    public String parse(String input) throws DukeException, IOException {"},{"lineNumber":65,"author":{"gitId":"yungweezy"},"content":"        String[] parsedInput \u003d input.split(\"\\\\s+\", 2);"},{"lineNumber":66,"author":{"gitId":"yungweezy"},"content":"        switch (parsedInput[0]) {"},{"lineNumber":67,"author":{"gitId":"yungweezy"},"content":"        case (\"\"):"},{"lineNumber":68,"author":{"gitId":"yungweezy"},"content":"            throw new DukeNoInputException();"},{"lineNumber":69,"author":{"gitId":"yungweezy"},"content":"            // Fallthrough"},{"lineNumber":70,"author":{"gitId":"yungweezy"},"content":"        case (\"welcome\"):"},{"lineNumber":71,"author":{"gitId":"yungweezy"},"content":"            return handleWelcome();"},{"lineNumber":72,"author":{"gitId":"yungweezy"},"content":"            // Fallthrough"},{"lineNumber":73,"author":{"gitId":"yungweezy"},"content":"        case (\"todo\"): {"},{"lineNumber":74,"author":{"gitId":"yungweezy"},"content":"            return handleToDo(parsedInput);"},{"lineNumber":75,"author":{"gitId":"yungweezy"},"content":"            //Fallthrough"},{"lineNumber":76,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"yungweezy"},"content":"        case (\"event\"): {"},{"lineNumber":78,"author":{"gitId":"yungweezy"},"content":"            return handleEvent(parsedInput);"},{"lineNumber":79,"author":{"gitId":"yungweezy"},"content":"            //Fallthrough"},{"lineNumber":80,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"yungweezy"},"content":"        case (\"deadline\"): {"},{"lineNumber":82,"author":{"gitId":"yungweezy"},"content":"            return handleDeadline(parsedInput);"},{"lineNumber":83,"author":{"gitId":"yungweezy"},"content":"            //Fallthrough"},{"lineNumber":84,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"yungweezy"},"content":"        case (\"delete\"):"},{"lineNumber":86,"author":{"gitId":"yungweezy"},"content":"            return handleDelete(parsedInput);"},{"lineNumber":87,"author":{"gitId":"yungweezy"},"content":"            //Fallthrough"},{"lineNumber":88,"author":{"gitId":"yungweezy"},"content":"        case (\"list\"):"},{"lineNumber":89,"author":{"gitId":"yungweezy"},"content":"            return dukeResponse.listTasks(dukeTaskList, false);"},{"lineNumber":90,"author":{"gitId":"yungweezy"},"content":"            //Fallthrough"},{"lineNumber":91,"author":{"gitId":"yungweezy"},"content":"        case (\"find\"):"},{"lineNumber":92,"author":{"gitId":"yungweezy"},"content":"            return handleFind(parsedInput);"},{"lineNumber":93,"author":{"gitId":"yungweezy"},"content":"            //Fallthrough"},{"lineNumber":94,"author":{"gitId":"yungweezy"},"content":"        case (\"done\"): {"},{"lineNumber":95,"author":{"gitId":"yungweezy"},"content":"            return handleDone(parsedInput);"},{"lineNumber":96,"author":{"gitId":"yungweezy"},"content":"            //Fallthrough"},{"lineNumber":97,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"yungweezy"},"content":"        case (\"bye\"):"},{"lineNumber":99,"author":{"gitId":"yungweezy"},"content":"            dukeStorage.unload(dukeTaskList);"},{"lineNumber":100,"author":{"gitId":"yungweezy"},"content":"            return dukeResponse.farewell();"},{"lineNumber":101,"author":{"gitId":"yungweezy"},"content":"            // Fallthrough"},{"lineNumber":102,"author":{"gitId":"yungweezy"},"content":"        default:"},{"lineNumber":103,"author":{"gitId":"yungweezy"},"content":"            throw new DukeUnknownInputException();"},{"lineNumber":104,"author":{"gitId":"yungweezy"},"content":"            // Fallthrough"},{"lineNumber":105,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"yungweezy"},"content":"    public String handleWelcome() throws DukeException {"},{"lineNumber":108,"author":{"gitId":"yungweezy"},"content":"        return dukeResponse.welcome();"},{"lineNumber":109,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":111,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":112,"author":{"gitId":"yungweezy"},"content":"     * Handle todo command."},{"lineNumber":113,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":114,"author":{"gitId":"yungweezy"},"content":"     * @param parsedInput the parsed input"},{"lineNumber":115,"author":{"gitId":"yungweezy"},"content":"     * @return the response string from Duke."},{"lineNumber":116,"author":{"gitId":"yungweezy"},"content":"     * @throws DukeException the caught duke exception"},{"lineNumber":117,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":118,"author":{"gitId":"yungweezy"},"content":"    public String handleToDo(String[] parsedInput) throws DukeException {"},{"lineNumber":119,"author":{"gitId":"yungweezy"},"content":"        if (parsedInput.length \u003c 2 || parsedInput[1].length() \u003d\u003d 0) {"},{"lineNumber":120,"author":{"gitId":"yungweezy"},"content":"            throw new DukeMissingArgumentsException();"},{"lineNumber":121,"author":{"gitId":"yungweezy"},"content":"        } else {"},{"lineNumber":122,"author":{"gitId":"yungweezy"},"content":"            Todo currTodo \u003d new Todo(parsedInput[1]);"},{"lineNumber":123,"author":{"gitId":"yungweezy"},"content":"            dukeTaskList.add(currTodo);"},{"lineNumber":124,"author":{"gitId":"yungweezy"},"content":"            return dukeResponse.addTask(currTodo, dukeTaskList.size());"},{"lineNumber":125,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":128,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"yungweezy"},"content":"     * Handle event command."},{"lineNumber":130,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":131,"author":{"gitId":"yungweezy"},"content":"     * @param parsedInput the parsed input"},{"lineNumber":132,"author":{"gitId":"yungweezy"},"content":"     * @return the response string from Duke."},{"lineNumber":133,"author":{"gitId":"yungweezy"},"content":"     * @throws DukeException the caught duke exception"},{"lineNumber":134,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":135,"author":{"gitId":"yungweezy"},"content":"    public String handleEvent(String[] parsedInput) throws DukeException {"},{"lineNumber":136,"author":{"gitId":"yungweezy"},"content":"        if (parsedInput.length \u003c 2) {"},{"lineNumber":137,"author":{"gitId":"yungweezy"},"content":"            throw new DukeMissingArgumentsException();"},{"lineNumber":138,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"yungweezy"},"content":"        String[] args \u003d parsedInput[1].split(\"/at\", 2);"},{"lineNumber":140,"author":{"gitId":"yungweezy"},"content":"        if (args.length \u003c 2 || args[1].length() \u003d\u003d 0) {"},{"lineNumber":141,"author":{"gitId":"yungweezy"},"content":"            throw new DukeMissingArgumentsException();"},{"lineNumber":142,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"yungweezy"},"content":"        try {"},{"lineNumber":144,"author":{"gitId":"yungweezy"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(args[1].substring(1), format);"},{"lineNumber":145,"author":{"gitId":"yungweezy"},"content":"            Event currEvent \u003d new Event(args[0], dateTime);"},{"lineNumber":146,"author":{"gitId":"yungweezy"},"content":"            dukeTaskList.add(currEvent);"},{"lineNumber":147,"author":{"gitId":"yungweezy"},"content":"            return dukeResponse.addTask(currEvent, dukeTaskList.size());"},{"lineNumber":148,"author":{"gitId":"yungweezy"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":149,"author":{"gitId":"yungweezy"},"content":"            throw new DukeDateFormatException();"},{"lineNumber":150,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":153,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":154,"author":{"gitId":"yungweezy"},"content":"     * Handle deadline command."},{"lineNumber":155,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":156,"author":{"gitId":"yungweezy"},"content":"     * @param parsedInput the parsed input"},{"lineNumber":157,"author":{"gitId":"yungweezy"},"content":"     * @return the response string from Duke."},{"lineNumber":158,"author":{"gitId":"yungweezy"},"content":"     * @throws DukeException the caught duke exception"},{"lineNumber":159,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":160,"author":{"gitId":"yungweezy"},"content":"    public String handleDeadline(String[] parsedInput) throws DukeException {"},{"lineNumber":161,"author":{"gitId":"yungweezy"},"content":"        if (parsedInput.length \u003c 2) {"},{"lineNumber":162,"author":{"gitId":"yungweezy"},"content":"            throw new DukeMissingArgumentsException();"},{"lineNumber":163,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"yungweezy"},"content":"        String[] args \u003d parsedInput[1].split(\"/by\", 2);"},{"lineNumber":165,"author":{"gitId":"yungweezy"},"content":"        if (args.length \u003c 2 || args[1].length() \u003d\u003d 0) {"},{"lineNumber":166,"author":{"gitId":"yungweezy"},"content":"            throw new DukeMissingArgumentsException();"},{"lineNumber":167,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"yungweezy"},"content":"        try {"},{"lineNumber":169,"author":{"gitId":"yungweezy"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(args[1].substring(1), format);"},{"lineNumber":170,"author":{"gitId":"yungweezy"},"content":"            Deadline currDeadline \u003d new Deadline(args[0], dateTime);"},{"lineNumber":171,"author":{"gitId":"yungweezy"},"content":"            dukeTaskList.add(currDeadline);"},{"lineNumber":172,"author":{"gitId":"yungweezy"},"content":"            return dukeResponse.addTask(currDeadline, dukeTaskList.size());"},{"lineNumber":173,"author":{"gitId":"yungweezy"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":174,"author":{"gitId":"yungweezy"},"content":"            throw new DukeDateFormatException();"},{"lineNumber":175,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":176,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":178,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":179,"author":{"gitId":"yungweezy"},"content":"     * Handle delete command."},{"lineNumber":180,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":181,"author":{"gitId":"yungweezy"},"content":"     * @param parsedInput the parsed input"},{"lineNumber":182,"author":{"gitId":"yungweezy"},"content":"     * @return the response string from Duke."},{"lineNumber":183,"author":{"gitId":"yungweezy"},"content":"     * @throws DukeException the caught duke exception"},{"lineNumber":184,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":185,"author":{"gitId":"yungweezy"},"content":"    public String handleDelete(String[] parsedInput) throws DukeException {"},{"lineNumber":186,"author":{"gitId":"yungweezy"},"content":"        if (parsedInput.length \u003c 2) {"},{"lineNumber":187,"author":{"gitId":"yungweezy"},"content":"            throw new DukeMissingArgumentsException();"},{"lineNumber":188,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":189,"author":{"gitId":"yungweezy"},"content":"        int deleteIndex \u003d Integer.parseInt(parsedInput[1]) - 1;"},{"lineNumber":190,"author":{"gitId":"yungweezy"},"content":"        if (deleteIndex \u003e dukeTaskList.size()) {"},{"lineNumber":191,"author":{"gitId":"yungweezy"},"content":"            throw new DukeMissingTaskException();"},{"lineNumber":192,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":193,"author":{"gitId":"yungweezy"},"content":"        Task deletedTask \u003d dukeTaskList.get(deleteIndex);"},{"lineNumber":194,"author":{"gitId":"yungweezy"},"content":"        dukeTaskList.remove(deleteIndex);"},{"lineNumber":195,"author":{"gitId":"yungweezy"},"content":"        return dukeResponse.deleteTask(deletedTask, dukeTaskList.size());"},{"lineNumber":196,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":197,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":198,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":199,"author":{"gitId":"yungweezy"},"content":"     * Handle find command."},{"lineNumber":200,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":201,"author":{"gitId":"yungweezy"},"content":"     * @param parsedInput the parsed input."},{"lineNumber":202,"author":{"gitId":"yungweezy"},"content":"     * @return the response string from Duke."},{"lineNumber":203,"author":{"gitId":"yungweezy"},"content":"     * @throws DukeException the caught duke exception"},{"lineNumber":204,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":205,"author":{"gitId":"yungweezy"},"content":"    public String handleFind(String[] parsedInput) throws DukeException {"},{"lineNumber":206,"author":{"gitId":"yungweezy"},"content":"        if (parsedInput.length \u003c 2) {"},{"lineNumber":207,"author":{"gitId":"yungweezy"},"content":"            throw new DukeMissingArgumentsException();"},{"lineNumber":208,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":209,"author":{"gitId":"yungweezy"},"content":"        String subString \u003d parsedInput[1];"},{"lineNumber":210,"author":{"gitId":"yungweezy"},"content":"        ArrayList\u003cTask\u003e searchedList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":211,"author":{"gitId":"yungweezy"},"content":"        for (Task t : dukeTaskList.getTaskList()) {"},{"lineNumber":212,"author":{"gitId":"yungweezy"},"content":"            if (t.getDescription().contains(subString)) {"},{"lineNumber":213,"author":{"gitId":"yungweezy"},"content":"                searchedList.add(t);"},{"lineNumber":214,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":215,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":216,"author":{"gitId":"yungweezy"},"content":"        DukeTaskList dukeSearchTaskList \u003d new DukeTaskList(searchedList);"},{"lineNumber":217,"author":{"gitId":"yungweezy"},"content":"        return dukeResponse.listTasks(dukeSearchTaskList, true);"},{"lineNumber":218,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":219,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":220,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":221,"author":{"gitId":"yungweezy"},"content":"     * Handle done command."},{"lineNumber":222,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":223,"author":{"gitId":"yungweezy"},"content":"     * @param parsedInput the parsed input"},{"lineNumber":224,"author":{"gitId":"yungweezy"},"content":"     * @return the response string from Duke."},{"lineNumber":225,"author":{"gitId":"yungweezy"},"content":"     * @throws DukeException the caught duke exception"},{"lineNumber":226,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":227,"author":{"gitId":"yungweezy"},"content":"    public String handleDone(String[] parsedInput) throws DukeException {"},{"lineNumber":228,"author":{"gitId":"yungweezy"},"content":"        if (parsedInput.length \u003c 2) {"},{"lineNumber":229,"author":{"gitId":"yungweezy"},"content":"            throw new DukeMissingArgumentsException();"},{"lineNumber":230,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":231,"author":{"gitId":"yungweezy"},"content":"        int index \u003d Integer.parseInt(parsedInput[1]) - 1;"},{"lineNumber":232,"author":{"gitId":"yungweezy"},"content":"        if (index \u003e\u003d dukeTaskList.size()) {"},{"lineNumber":233,"author":{"gitId":"yungweezy"},"content":"            throw new DukeMissingTaskException();"},{"lineNumber":234,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":235,"author":{"gitId":"yungweezy"},"content":"        Task currTask \u003d dukeTaskList.get(index);"},{"lineNumber":236,"author":{"gitId":"yungweezy"},"content":"        currTask.markAsDone();"},{"lineNumber":237,"author":{"gitId":"yungweezy"},"content":"        return dukeResponse.markAsDone(currTask);"},{"lineNumber":238,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":239,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":240,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":241,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":241}},{"path":"src/main/java/duke/DukeResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"import exception.DukeEmptyTaskListException;"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":"import exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":"import misc.Color;"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"import misc.Emoji;"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"import task.Task;"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":" * Duke response object."},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"public class DukeResponse {"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"     * Duke task add headers."},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"    public static final String TASK_ADD_HEADER \u003d \"Alrighty! I\u0027ve added this task:\\n\";"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"     * Duke task delete headers."},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"    public static final String TASK_DELETE_HEADER \u003d \"Gotcha! I\u0027ve removed this task:\\n\";"},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":"     * Duke task footer1."},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":"    public static final String TASK_FOOTER1 \u003d \"\\nNow you have \";"},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"     * Duke task footer2."},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"    public static final String TASK_FOOTER2 \u003d \" tasks in the list.\";"},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"yungweezy"},"content":"     * Last output message."},{"lineNumber":31,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"yungweezy"},"content":"    protected String currentMessage;"},{"lineNumber":33,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":34,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a new Duke response."},{"lineNumber":36,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"yungweezy"},"content":"    public DukeResponse() {"},{"lineNumber":38,"author":{"gitId":"yungweezy"},"content":"        welcome();"},{"lineNumber":39,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":41,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"yungweezy"},"content":"     * Respond a welcome message to the user."},{"lineNumber":43,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"yungweezy"},"content":"    public String welcome() {"},{"lineNumber":45,"author":{"gitId":"yungweezy"},"content":"        this.currentMessage \u003d \"Alright Butters!\\n\""},{"lineNumber":46,"author":{"gitId":"yungweezy"},"content":"                + \"What do you want to do today?\";"},{"lineNumber":47,"author":{"gitId":"yungweezy"},"content":"        return this.currentMessage;"},{"lineNumber":48,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":50,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"yungweezy"},"content":"     * Respond a farewell message to the user."},{"lineNumber":52,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"yungweezy"},"content":"    public String farewell() {"},{"lineNumber":54,"author":{"gitId":"yungweezy"},"content":"        this.currentMessage \u003d \"Bye bye Butters! See you tomorrow!\";"},{"lineNumber":55,"author":{"gitId":"yungweezy"},"content":"        return this.currentMessage;"},{"lineNumber":56,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":58,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"yungweezy"},"content":"     * Acknowledges user with added task message."},{"lineNumber":60,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"yungweezy"},"content":"     * @param task  the task"},{"lineNumber":62,"author":{"gitId":"yungweezy"},"content":"     * @param count the count"},{"lineNumber":63,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"yungweezy"},"content":"    public String addTask(Task task, int count) {"},{"lineNumber":65,"author":{"gitId":"yungweezy"},"content":"        this.currentMessage \u003d TASK_ADD_HEADER + Emoji.TASK + \" \""},{"lineNumber":66,"author":{"gitId":"yungweezy"},"content":"                + task + TASK_FOOTER1 + count + TASK_FOOTER2;"},{"lineNumber":67,"author":{"gitId":"yungweezy"},"content":"        return printMessage();"},{"lineNumber":68,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":70,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"yungweezy"},"content":"     * Acknowledges user with deleted task message."},{"lineNumber":72,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"yungweezy"},"content":"     * @param task  the task"},{"lineNumber":74,"author":{"gitId":"yungweezy"},"content":"     * @param count the count"},{"lineNumber":75,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"yungweezy"},"content":"    public String deleteTask(Task task, int count) {"},{"lineNumber":77,"author":{"gitId":"yungweezy"},"content":"        this.currentMessage \u003d TASK_DELETE_HEADER"},{"lineNumber":78,"author":{"gitId":"yungweezy"},"content":"                + Emoji.TRASH + \" \" + task"},{"lineNumber":79,"author":{"gitId":"yungweezy"},"content":"                + TASK_FOOTER1 + count + TASK_FOOTER2;"},{"lineNumber":80,"author":{"gitId":"yungweezy"},"content":"        return printMessage();"},{"lineNumber":81,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":83,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"yungweezy"},"content":"     * Respond with a task marked done message."},{"lineNumber":85,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"yungweezy"},"content":"     * @param task the task"},{"lineNumber":87,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"yungweezy"},"content":"    public String markAsDone(Task task) {"},{"lineNumber":89,"author":{"gitId":"yungweezy"},"content":"        this.currentMessage \u003d \"Sweet! I\u0027ve marked this task as done:\\n\""},{"lineNumber":90,"author":{"gitId":"yungweezy"},"content":"                + task.toString();"},{"lineNumber":91,"author":{"gitId":"yungweezy"},"content":"        return printMessage();"},{"lineNumber":92,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":94,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"yungweezy"},"content":"     * Output the current task list."},{"lineNumber":96,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"yungweezy"},"content":"     * @param list the list"},{"lineNumber":98,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"yungweezy"},"content":"    public String listTasks(DukeTaskList list, boolean isFind) throws DukeException {"},{"lineNumber":100,"author":{"gitId":"yungweezy"},"content":"        if (list.size() \u003d\u003d 0) {"},{"lineNumber":101,"author":{"gitId":"yungweezy"},"content":"            if (isFind) {"},{"lineNumber":102,"author":{"gitId":"yungweezy"},"content":"                throw new DukeException(\"Woops! No task found under those parameters!\");"},{"lineNumber":103,"author":{"gitId":"yungweezy"},"content":"            } else {"},{"lineNumber":104,"author":{"gitId":"yungweezy"},"content":"                throw new DukeEmptyTaskListException();"},{"lineNumber":105,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":107,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"yungweezy"},"content":"        StringBuilder strList \u003d new StringBuilder();"},{"lineNumber":109,"author":{"gitId":"yungweezy"},"content":"        list.taskList.stream().forEach((t) -\u003e strList"},{"lineNumber":110,"author":{"gitId":"yungweezy"},"content":"                .append(list.taskList.indexOf(t) + 1)"},{"lineNumber":111,"author":{"gitId":"yungweezy"},"content":"                .append(\" \\u00BB \")"},{"lineNumber":112,"author":{"gitId":"yungweezy"},"content":"                .append(t.toString())"},{"lineNumber":113,"author":{"gitId":"yungweezy"},"content":"                .append(\"\\n\"));"},{"lineNumber":114,"author":{"gitId":"yungweezy"},"content":"        if (isFind) {"},{"lineNumber":115,"author":{"gitId":"yungweezy"},"content":"            this.currentMessage \u003d \"Oh oh! I\u0027ve found something:\\n\" + strList.substring(0,"},{"lineNumber":116,"author":{"gitId":"yungweezy"},"content":"                    strList.toString().length() - 1);"},{"lineNumber":117,"author":{"gitId":"yungweezy"},"content":"        } else {"},{"lineNumber":118,"author":{"gitId":"yungweezy"},"content":"            this.currentMessage \u003d \"Hey Butters! You\u0027ve got to do these tasks:\\n\" + strList.substring(0,"},{"lineNumber":119,"author":{"gitId":"yungweezy"},"content":"                    strList.toString().length() - 1);"},{"lineNumber":120,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"yungweezy"},"content":"        return printMessage();"},{"lineNumber":122,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":124,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":125,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"yungweezy"},"content":"     * Print message."},{"lineNumber":127,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"yungweezy"},"content":"    public String printMessage() {"},{"lineNumber":129,"author":{"gitId":"yungweezy"},"content":"        return this.currentMessage;"},{"lineNumber":130,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":132,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":132}},{"path":"src/main/java/duke/DukeStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"import java.time.LocalDateTime;"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"import java.util.Locale;"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"import exception.DukeDateFormatException;"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"import exception.DukeException;"},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"import task.Deadline;"},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"import task.Event;"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"import task.Task;"},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"import task.Todo;"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":" * Duke storage object. Handles storing, loading, and unloading of task history"},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"public class DukeStorage {"},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"     * Datetime parsed format."},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":"    private static final DateTimeFormatter format \u003d DateTimeFormatter"},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"            .ofPattern(\"dd/MM/yyyy, hh:mma\", Locale.US);"},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"yungweezy"},"content":"     * Name of file being stored."},{"lineNumber":31,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"yungweezy"},"content":"    protected String fileName;"},{"lineNumber":33,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":34,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a new Duke storage."},{"lineNumber":36,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"yungweezy"},"content":"    protected DukeStorage() {"},{"lineNumber":38,"author":{"gitId":"yungweezy"},"content":"        this.fileName \u003d \"storage/storage.txt\";"},{"lineNumber":39,"author":{"gitId":"yungweezy"},"content":"        File file \u003d new File(this.fileName);"},{"lineNumber":40,"author":{"gitId":"yungweezy"},"content":"        if (!file.getParentFile().exists()) {"},{"lineNumber":41,"author":{"gitId":"yungweezy"},"content":"            System.out.println(\"Task list not found, creating one now...\");"},{"lineNumber":42,"author":{"gitId":"yungweezy"},"content":"            if (file.getParentFile().mkdirs()) {"},{"lineNumber":43,"author":{"gitId":"yungweezy"},"content":"                assert file.exists() : \"Something is wrong! Unable file not found after creation.\";"},{"lineNumber":44,"author":{"gitId":"yungweezy"},"content":"                System.out.println(\"New task list created!\");"},{"lineNumber":45,"author":{"gitId":"yungweezy"},"content":"            } else {"},{"lineNumber":46,"author":{"gitId":"yungweezy"},"content":"                System.out.println(\"Task list creation failed!\");"},{"lineNumber":47,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"yungweezy"},"content":"        } else {"},{"lineNumber":49,"author":{"gitId":"yungweezy"},"content":"            System.out.println(\"Task list found! All\u0027s good.\");"},{"lineNumber":50,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":53,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"yungweezy"},"content":"     * Parse task."},{"lineNumber":55,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"yungweezy"},"content":"     * @param line the line"},{"lineNumber":57,"author":{"gitId":"yungweezy"},"content":"     * @return the task"},{"lineNumber":58,"author":{"gitId":"yungweezy"},"content":"     * @throws DukeException the duke exception"},{"lineNumber":59,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"yungweezy"},"content":"    protected Task parse(String line) throws DukeException {"},{"lineNumber":61,"author":{"gitId":"yungweezy"},"content":"        String[] currLine \u003d line.split(\"\\\\|\");"},{"lineNumber":62,"author":{"gitId":"yungweezy"},"content":"        if (currLine[0].length() \u003c 4) {"},{"lineNumber":63,"author":{"gitId":"yungweezy"},"content":"            throw new DukeException(\"Invalid type field. Removing...\");"},{"lineNumber":64,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"yungweezy"},"content":"        String type \u003d currLine[0].substring(0, currLine[0].length() - 1);"},{"lineNumber":66,"author":{"gitId":"yungweezy"},"content":"        if (currLine[1].length() \u003c 1) {"},{"lineNumber":67,"author":{"gitId":"yungweezy"},"content":"            throw new DukeException(\"Invalid description field. Remove...\");"},{"lineNumber":68,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"yungweezy"},"content":"        String description \u003d currLine[1].substring(1, currLine[1].length() - 2);"},{"lineNumber":70,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":71,"author":{"gitId":"yungweezy"},"content":"        switch (type) {"},{"lineNumber":72,"author":{"gitId":"yungweezy"},"content":"        case(\"Todo\"): {"},{"lineNumber":73,"author":{"gitId":"yungweezy"},"content":"            return new Todo(description);"},{"lineNumber":74,"author":{"gitId":"yungweezy"},"content":"            // Fallthrough"},{"lineNumber":75,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"yungweezy"},"content":"        case(\"Deadline\"): {"},{"lineNumber":77,"author":{"gitId":"yungweezy"},"content":"            if (currLine[2].length() \u003c 1) {"},{"lineNumber":78,"author":{"gitId":"yungweezy"},"content":"                throw new DukeException(\"Invalid /by field. Removing...\");"},{"lineNumber":79,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"yungweezy"},"content":"            try {"},{"lineNumber":81,"author":{"gitId":"yungweezy"},"content":"                LocalDateTime dateTime \u003d LocalDateTime.parse(currLine[2].substring(1), format);"},{"lineNumber":82,"author":{"gitId":"yungweezy"},"content":"                return new Deadline(description, dateTime);"},{"lineNumber":83,"author":{"gitId":"yungweezy"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":84,"author":{"gitId":"yungweezy"},"content":"                throw new DukeDateFormatException();"},{"lineNumber":85,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"yungweezy"},"content":"            // Fallthrough"},{"lineNumber":87,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"yungweezy"},"content":"        case(\"Event\"): {"},{"lineNumber":89,"author":{"gitId":"yungweezy"},"content":"            if (currLine[2].length() \u003c 1) {"},{"lineNumber":90,"author":{"gitId":"yungweezy"},"content":"                throw new DukeException(\"Invalid /at field. Removing...\");"},{"lineNumber":91,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":92,"author":{"gitId":"yungweezy"},"content":"            try {"},{"lineNumber":93,"author":{"gitId":"yungweezy"},"content":"                LocalDateTime at \u003d LocalDateTime.parse(currLine[2].substring(1), format);"},{"lineNumber":94,"author":{"gitId":"yungweezy"},"content":"                return new Event(description, at);"},{"lineNumber":95,"author":{"gitId":"yungweezy"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":96,"author":{"gitId":"yungweezy"},"content":"                throw new DukeDateFormatException();"},{"lineNumber":97,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"yungweezy"},"content":"            // Fallthrough"},{"lineNumber":99,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"yungweezy"},"content":"        default :"},{"lineNumber":101,"author":{"gitId":"yungweezy"},"content":"            throw new DukeException(\"Invalid task. Removing...\");"},{"lineNumber":102,"author":{"gitId":"yungweezy"},"content":"            // Fallthrough"},{"lineNumber":103,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":106,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":107,"author":{"gitId":"yungweezy"},"content":"     * Load tasks from stored history file."},{"lineNumber":108,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":109,"author":{"gitId":"yungweezy"},"content":"     * @return the array list"},{"lineNumber":110,"author":{"gitId":"yungweezy"},"content":"     * @throws IOException   the io exception"},{"lineNumber":111,"author":{"gitId":"yungweezy"},"content":"     * @throws DukeException the duke exception"},{"lineNumber":112,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":113,"author":{"gitId":"yungweezy"},"content":"    protected ArrayList\u003cTask\u003e load() throws IOException, DukeException {"},{"lineNumber":114,"author":{"gitId":"yungweezy"},"content":"        File file \u003d new File(fileName);"},{"lineNumber":115,"author":{"gitId":"yungweezy"},"content":"        try {"},{"lineNumber":116,"author":{"gitId":"yungweezy"},"content":"            if (!file.exists()) {"},{"lineNumber":117,"author":{"gitId":"yungweezy"},"content":"                if (file.createNewFile()) {"},{"lineNumber":118,"author":{"gitId":"yungweezy"},"content":"                    System.out.println(\"New history created!\");"},{"lineNumber":119,"author":{"gitId":"yungweezy"},"content":"                }"},{"lineNumber":120,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":121,"author":{"gitId":"yungweezy"},"content":"        } catch (IOException ex) {"},{"lineNumber":122,"author":{"gitId":"yungweezy"},"content":"            System.out.println(ex.getMessage());"},{"lineNumber":123,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":124,"author":{"gitId":"yungweezy"},"content":"        Scanner sc \u003d new Scanner(file);"},{"lineNumber":125,"author":{"gitId":"yungweezy"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":126,"author":{"gitId":"yungweezy"},"content":"        while (sc.hasNext()) {"},{"lineNumber":127,"author":{"gitId":"yungweezy"},"content":"            taskList.add(parse(sc.nextLine()));"},{"lineNumber":128,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"yungweezy"},"content":"        return taskList;"},{"lineNumber":130,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":132,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"yungweezy"},"content":"     * Unload tasks into stored history file."},{"lineNumber":134,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":135,"author":{"gitId":"yungweezy"},"content":"     * @param taskList the task list"},{"lineNumber":136,"author":{"gitId":"yungweezy"},"content":"     * @throws IOException the io exception"},{"lineNumber":137,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":138,"author":{"gitId":"yungweezy"},"content":"    protected void unload(DukeTaskList taskList) throws IOException {"},{"lineNumber":139,"author":{"gitId":"yungweezy"},"content":"        StringBuilder content \u003d new StringBuilder();"},{"lineNumber":140,"author":{"gitId":"yungweezy"},"content":"        for (Task t : taskList.getTaskList()) {"},{"lineNumber":141,"author":{"gitId":"yungweezy"},"content":"            String currTask \u003d \"\";"},{"lineNumber":142,"author":{"gitId":"yungweezy"},"content":"            switch (t.getClass().getSimpleName()) {"},{"lineNumber":143,"author":{"gitId":"yungweezy"},"content":"            case \"Todo\" : {"},{"lineNumber":144,"author":{"gitId":"yungweezy"},"content":"                currTask \u003d \"Todo | \" + t.getDescription();"},{"lineNumber":145,"author":{"gitId":"yungweezy"},"content":"                break;"},{"lineNumber":146,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":147,"author":{"gitId":"yungweezy"},"content":"            case \"Deadline\": {"},{"lineNumber":148,"author":{"gitId":"yungweezy"},"content":"                currTask \u003d \"Deadline | \" + t.getDescription() + \" | \""},{"lineNumber":149,"author":{"gitId":"yungweezy"},"content":"                        + ((Deadline) t).getSimpleBy();"},{"lineNumber":150,"author":{"gitId":"yungweezy"},"content":"                break;"},{"lineNumber":151,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":152,"author":{"gitId":"yungweezy"},"content":"            case \"Event\": {"},{"lineNumber":153,"author":{"gitId":"yungweezy"},"content":"                currTask \u003d \"Event | \" + t.getDescription() + \" | \""},{"lineNumber":154,"author":{"gitId":"yungweezy"},"content":"                        + ((Event) t).getSimpleAt();"},{"lineNumber":155,"author":{"gitId":"yungweezy"},"content":"                break;"},{"lineNumber":156,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":157,"author":{"gitId":"yungweezy"},"content":"            default:"},{"lineNumber":158,"author":{"gitId":"yungweezy"},"content":"                break;"},{"lineNumber":159,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":160,"author":{"gitId":"yungweezy"},"content":"            content.append(currTask);"},{"lineNumber":161,"author":{"gitId":"yungweezy"},"content":"            content.append(\"\\n\");"},{"lineNumber":162,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":163,"author":{"gitId":"yungweezy"},"content":"        FileWriter fw \u003d new FileWriter(this.fileName);"},{"lineNumber":164,"author":{"gitId":"yungweezy"},"content":"        if (content.length() \u003d\u003d 0) {"},{"lineNumber":165,"author":{"gitId":"yungweezy"},"content":"            return;"},{"lineNumber":166,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"yungweezy"},"content":"        fw.write(content.substring(0, content.toString().length() - 1));"},{"lineNumber":168,"author":{"gitId":"yungweezy"},"content":"        fw.close();"},{"lineNumber":169,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":170}},{"path":"src/main/java/duke/DukeTaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":"import task.Task;"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":" * Handles duke task list operations."},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"public class DukeTaskList {"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"     * Contains the currently stored tasks."},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"    protected ArrayList\u003cTask\u003e taskList;"},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a new Duke task list."},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":"     * @param taskList the task list"},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":"    DukeTaskList(ArrayList\u003cTask\u003e taskList) {"},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"     * Add new task into task list."},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"     * @param t the added task."},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"yungweezy"},"content":"    protected void add(Task t) {"},{"lineNumber":31,"author":{"gitId":"yungweezy"},"content":"        assert t !\u003d null : \"Invalid task!\";"},{"lineNumber":32,"author":{"gitId":"yungweezy"},"content":"        taskList.add(t);"},{"lineNumber":33,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":35,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"yungweezy"},"content":"     * Remove a task from task list."},{"lineNumber":37,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"yungweezy"},"content":"     * @param i the index of the task to be removed."},{"lineNumber":39,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"yungweezy"},"content":"    protected void remove(int i) {"},{"lineNumber":41,"author":{"gitId":"yungweezy"},"content":"        assert i \u003e\u003d 0 \u0026\u0026 i \u003c taskList.size() : \"Index to be removed is invalid!\";"},{"lineNumber":42,"author":{"gitId":"yungweezy"},"content":"        taskList.remove(i);"},{"lineNumber":43,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":45,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"yungweezy"},"content":"     * Gets the number of tasks in the task list."},{"lineNumber":47,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"yungweezy"},"content":"     * @return the size of the task list."},{"lineNumber":49,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"yungweezy"},"content":"    protected int size() {"},{"lineNumber":51,"author":{"gitId":"yungweezy"},"content":"        return taskList.size();"},{"lineNumber":52,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":54,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"yungweezy"},"content":"     * Get task based on index."},{"lineNumber":56,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"yungweezy"},"content":"     * @param i the"},{"lineNumber":58,"author":{"gitId":"yungweezy"},"content":"     * @return the task at the given index."},{"lineNumber":59,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"yungweezy"},"content":"    protected Task get(int i) {"},{"lineNumber":61,"author":{"gitId":"yungweezy"},"content":"        assert i \u003e\u003d 0 \u0026\u0026 i \u003c taskList.size() : \"Index to be removed is invalid!\";"},{"lineNumber":62,"author":{"gitId":"yungweezy"},"content":"        return taskList.get(i);"},{"lineNumber":63,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":65,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"yungweezy"},"content":"     * Gets task list."},{"lineNumber":67,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"yungweezy"},"content":"     * @return the current task list."},{"lineNumber":69,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"yungweezy"},"content":"    protected ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":71,"author":{"gitId":"yungweezy"},"content":"        assert this.taskList !\u003d null : \"Error in task list!\";"},{"lineNumber":72,"author":{"gitId":"yungweezy"},"content":"        return this.taskList;"},{"lineNumber":73,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":75,"author":{"gitId":"yungweezy"},"content":"    @Override"},{"lineNumber":76,"author":{"gitId":"yungweezy"},"content":"    public String toString() {"},{"lineNumber":77,"author":{"gitId":"yungweezy"},"content":"        return taskList.toString();"},{"lineNumber":78,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":79}},{"path":"src/main/java/exception/DukeDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":" * Duke date format exception."},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"public class DukeDateFormatException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a new Duke date format exception."},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"    public DukeDateFormatException() {"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"        super(\"Woops! Give me a date like this: [25/10/1997, 10:30PM]\");"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":13}},{"path":"src/main/java/exception/DukeEmptyTaskListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":" * Duke empty task list exception."},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"public class DukeEmptyTaskListException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a new Duke empty task list exception."},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"    public DukeEmptyTaskListException() {"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"        super(\" You have no tasks scheduled at the moment \");"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":13}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"import misc.Color;"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":"import misc.Emoji;"},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":" * duke.Duke exceptions handler."},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"public class DukeException extends Exception {"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"     * duke.Duke message dividers."},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"    public static final String DIVIDER_FRONT \u003d \"\\n\\u2550\\u2550\\u2550\""},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"            + \"\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2563DUKE\\u2560\""},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"            + \"\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n\";"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"     * duke.Duke message dividers."},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"    public static final String DIVIDER_BACK \u003d \"\\n\\u2550\\u2550\\u2550\\u2550\\u2550\""},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":"            + \"\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\""},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":"            + \"\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\u2550\\n\";"},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a new duke.Duke exception."},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":"     * @param message the message"},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":"    public DukeException(String message) {"},{"lineNumber":30,"author":{"gitId":"yungweezy"},"content":"        super(message);"},{"lineNumber":31,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":33,"author":{"gitId":"yungweezy"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"yungweezy"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"yungweezy"},"content":"        return DIVIDER_FRONT + Color.YELLOW_BOLD + Emoji.ERROR + Color.RESET + \" \""},{"lineNumber":36,"author":{"gitId":"yungweezy"},"content":"                + this.getMessage() + \" \" + Color.YELLOW_BOLD"},{"lineNumber":37,"author":{"gitId":"yungweezy"},"content":"                + Emoji.ERROR + Color.RESET + DIVIDER_BACK;"},{"lineNumber":38,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":39}},{"path":"src/main/java/exception/DukeMissingArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":" * duke.Duke missing arguments exception."},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"public class DukeMissingArgumentsException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a missing arguments exception."},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"    public DukeMissingArgumentsException() {"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"        super(\"Oops! One or more arguments are not valid, please try again\");"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":13}},{"path":"src/main/java/exception/DukeMissingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":" * duke.Duke missing task exception."},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"public class DukeMissingTaskException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a new duke.Duke missing task exception."},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"    public DukeMissingTaskException() {"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"        super(\"Oops! task.Task not found, please try again.\");"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":13}},{"path":"src/main/java/exception/DukeNoInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":" * duke.Duke no input exception."},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"public class DukeNoInputException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a new duke.Duke exception."},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"    public DukeNoInputException() {"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"        super(\"Oops, I cannot process nothing as input!\");"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":13}},{"path":"src/main/java/exception/DukeUnknownInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":" * duke.Duke unknown input exception."},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"public class DukeUnknownInputException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a duke.Duke unknown input exception."},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"    public DukeUnknownInputException() {"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"        super(\"Oops! I\u0027m not quite sure what you meant there.\");"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":13}},{"path":"src/main/java/misc/Color.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package misc;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":" * The enum Color."},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"public enum Color {"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"    RESET(\"\\033[0m\"),"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"    BLACK(\"\\033[0;30m\"),"},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"    RED(\"\\033[0;31m\"),"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"    GREEN(\"\\033[0;32m\"),"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"    YELLOW(\"\\033[0;33m\"),"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"    BLUE(\"\\033[0;34m\"),"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"    MAGENTA(\"\\033[0;35m\"),"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"    CYAN(\"\\033[0;36m\"),"},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"    WHITE(\"\\033[0;37m\"),"},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"    BLACK_BOLD(\"\\033[1;30m\"),"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"    RED_BOLD(\"\\033[1;31m\"),"},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"    GREEN_BOLD(\"\\033[1;32m\"),"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":"    YELLOW_BOLD(\"\\033[1;33m\"),"},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"    BLUE_BOLD(\"\\033[1;34m\"),"},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":"    MAGENTA_BOLD(\"\\033[1;35m\"),"},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":"    CYAN_BOLD(\"\\033[1;36m\"),"},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"    WHITE_BOLD(\"\\033[1;37m\");"},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"     * Unicode for colors."},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"    public final String code;"},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":30,"author":{"gitId":"yungweezy"},"content":"    Color(String code) {"},{"lineNumber":31,"author":{"gitId":"yungweezy"},"content":"        this.code \u003d code;"},{"lineNumber":32,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":34,"author":{"gitId":"yungweezy"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"yungweezy"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitId":"yungweezy"},"content":"        return code;"},{"lineNumber":37,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":38}},{"path":"src/main/java/misc/Emoji.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package misc;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":" * The enum Emoji."},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"public enum Emoji {"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"    TASK(\"\\uD83D\\uDCC5\"),"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"    TRASH(\"\\uD83D\\uDEAE\"),"},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"    ERROR(\"\\u26A0\");"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"     * Unicode for emoji."},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"    public final String code;"},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"    Emoji(String code) {"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"        this.code \u003d code;"},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":"        return code;"},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":24}},{"path":"src/main/java/tag/Tag.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package tag;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"public class Tag {"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":"    public String tagName;"},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"    public Tag(String tagName) {"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"        this.tagName \u003d tagName;"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"    public String toString() {"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"        return \"#\" + this.tagName;"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":13}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":" * Deadline."},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"     * The constant parseFormat."},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"    private static final String parseFormat \u003d \"dd/MM/yyyy, hh:mma\";"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"     * The constant outputFormat."},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"    private static final String outputFormat \u003d \"dd MMM yyyy, hh:mma\";"},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":"     * Datetime of the task deadline."},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":"    protected LocalDateTime by;"},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a new deadline task."},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"     * @param description the deadline description"},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":"     * @param by          the by"},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":"    public Deadline(String description, LocalDateTime by) {"},{"lineNumber":30,"author":{"gitId":"yungweezy"},"content":"        super(description);"},{"lineNumber":31,"author":{"gitId":"yungweezy"},"content":"        this.by \u003d by;"},{"lineNumber":32,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":34,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"yungweezy"},"content":"     * Gets the simple localdatetime parse format."},{"lineNumber":36,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"yungweezy"},"content":"     * @return the simple by"},{"lineNumber":38,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"yungweezy"},"content":"    public String getSimpleBy() {"},{"lineNumber":40,"author":{"gitId":"yungweezy"},"content":"        return by.format(DateTimeFormatter.ofPattern(parseFormat));"},{"lineNumber":41,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":43,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"yungweezy"},"content":"     * Gets the intended localdatetime output format."},{"lineNumber":45,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"yungweezy"},"content":"     * @return the by"},{"lineNumber":47,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"yungweezy"},"content":"    public String getBy() {"},{"lineNumber":49,"author":{"gitId":"yungweezy"},"content":"        return by.format(DateTimeFormatter.ofPattern(outputFormat));"},{"lineNumber":50,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":52,"author":{"gitId":"yungweezy"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"yungweezy"},"content":"    public String toString() {"},{"lineNumber":54,"author":{"gitId":"yungweezy"},"content":"        return \"DEADLINE \\u00BB \" + super.description + \" (by: \" + getBy() + \") \" + super.getStatusIcon();"},{"lineNumber":55,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":56}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":" * Event."},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"     * The constant parseFormat."},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"    private static final String parseFormat \u003d \"dd/MM/yyyy, hh:mma\";"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"     * The constant outputFormat."},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"    private static final String outputFormat \u003d \"dd MMM yyyy, hh:mma\";"},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":"     * Datetime of the task event."},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":"    protected LocalDateTime at;"},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a new event task."},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"     * @param description the event description"},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":"     * @param at          the at"},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":"    public Event(String description, LocalDateTime at) {"},{"lineNumber":30,"author":{"gitId":"yungweezy"},"content":"        super(description);"},{"lineNumber":31,"author":{"gitId":"yungweezy"},"content":"        this.at \u003d at;"},{"lineNumber":32,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":34,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"yungweezy"},"content":"     * Gets the simple localdatetime parsed format."},{"lineNumber":36,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"yungweezy"},"content":"     * @return the simple at"},{"lineNumber":38,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"yungweezy"},"content":"    public String getSimpleAt() {"},{"lineNumber":40,"author":{"gitId":"yungweezy"},"content":"        return at.format(DateTimeFormatter.ofPattern(parseFormat));"},{"lineNumber":41,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":43,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"yungweezy"},"content":"     * Gets the intended localdatetime output format."},{"lineNumber":45,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"yungweezy"},"content":"     * @return the at"},{"lineNumber":47,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"yungweezy"},"content":"    public String getAt() {"},{"lineNumber":49,"author":{"gitId":"yungweezy"},"content":"        return at.format(DateTimeFormatter.ofPattern(outputFormat));"},{"lineNumber":50,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":52,"author":{"gitId":"yungweezy"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"yungweezy"},"content":"    public String toString() {"},{"lineNumber":54,"author":{"gitId":"yungweezy"},"content":"        return \"EVENT \\u00BB \" + super.description + \" (at: \" + getAt() + \") \" + super.getStatusIcon();"},{"lineNumber":55,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":56}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"import tag.Tag;"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":" * Task object."},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"public class Task {"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"     * Task description."},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"    protected String description;"},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"     * Task completion status."},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"    protected boolean isDone;"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":"     * List of tag this task is tagged to."},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"    protected ArrayList\u003cTag\u003e tagList;"},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a new Task."},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"     * @param description the description"},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"yungweezy"},"content":"    public Task(String description) {"},{"lineNumber":31,"author":{"gitId":"yungweezy"},"content":"        this.description \u003d description;"},{"lineNumber":32,"author":{"gitId":"yungweezy"},"content":"        this.isDone \u003d false;"},{"lineNumber":33,"author":{"gitId":"yungweezy"},"content":"        this.tagList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":34,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":36,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"yungweezy"},"content":"     * Marks a task as done."},{"lineNumber":38,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"yungweezy"},"content":"    public void markAsDone() {"},{"lineNumber":40,"author":{"gitId":"yungweezy"},"content":"        this.isDone \u003d true;"},{"lineNumber":41,"author":{"gitId":"yungweezy"},"content":"        assert this.isDone : \"Unable to mark task as done!\";"},{"lineNumber":42,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":44,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"yungweezy"},"content":"     * Retrieves status string."},{"lineNumber":46,"author":{"gitId":"yungweezy"},"content":"     * r"},{"lineNumber":47,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"yungweezy"},"content":"     * @return status icon. A check mark for complete tasks , an x mark otherwise."},{"lineNumber":49,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"yungweezy"},"content":"    public String getStatusIcon() {"},{"lineNumber":51,"author":{"gitId":"yungweezy"},"content":"        return (isDone"},{"lineNumber":52,"author":{"gitId":"yungweezy"},"content":"                ? \"\\u2713\""},{"lineNumber":53,"author":{"gitId":"yungweezy"},"content":"                : \"\\u2718\");"},{"lineNumber":54,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":56,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"yungweezy"},"content":"     * Gets task description."},{"lineNumber":58,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"yungweezy"},"content":"     * @return the description"},{"lineNumber":60,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"yungweezy"},"content":"    public String getDescription() {"},{"lineNumber":62,"author":{"gitId":"yungweezy"},"content":"        return this.description;"},{"lineNumber":63,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":65,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"yungweezy"},"content":"     * Gets task\u0027s tag list."},{"lineNumber":67,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"yungweezy"},"content":"     * @return the task\u0027s tag list"},{"lineNumber":69,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"yungweezy"},"content":"    public ArrayList\u003cTag\u003e getTagList() {"},{"lineNumber":71,"author":{"gitId":"yungweezy"},"content":"        return this.tagList;"},{"lineNumber":72,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":74,"author":{"gitId":"yungweezy"},"content":"    public String getTags() {"},{"lineNumber":75,"author":{"gitId":"yungweezy"},"content":"        StringBuilder tags \u003d new StringBuilder();"},{"lineNumber":76,"author":{"gitId":"yungweezy"},"content":"        this.tagList.stream().forEach((tag) -\u003e tags"},{"lineNumber":77,"author":{"gitId":"yungweezy"},"content":"                .append(tag.tagName)"},{"lineNumber":78,"author":{"gitId":"yungweezy"},"content":"                .append(\" \"));"},{"lineNumber":79,"author":{"gitId":"yungweezy"},"content":"        return tags.toString();"},{"lineNumber":80,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":82,"author":{"gitId":"yungweezy"},"content":"    @Override"},{"lineNumber":83,"author":{"gitId":"yungweezy"},"content":"    public String toString() {"},{"lineNumber":84,"author":{"gitId":"yungweezy"},"content":"        return this.description + \" \" + getStatusIcon() + \" \" + getTags();"},{"lineNumber":85,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":86}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"public class Todo extends Task {"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":"     * Instantiates a new todo task."},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"     * @param description the todo description"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"    public Todo(String description) {"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"        return \"TODO \\u00BB \" + super.toString();"},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":17}},{"path":"src/main/java/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"yungweezy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"yungweezy"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"yungweezy"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"yungweezy"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"yungweezy"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"yungweezy"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":38,"author":{"gitId":"yungweezy"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"yungweezy"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":42,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"yungweezy"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"yungweezy"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"yungweezy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"yungweezy"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"yungweezy"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"yungweezy"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":52,"author":{"gitId":"yungweezy"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"yungweezy"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":56,"author":{"gitId":"yungweezy"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"yungweezy"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"yungweezy"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"yungweezy"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":61}},{"path":"src/main/java/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":"import duke.DukeResponse;"},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":"import javafx.animation.PauseTransition;"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"import javafx.application.Platform;"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"import javafx.fxml.FXML;"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"import javafx.scene.control.Alert;"},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"import javafx.scene.control.Button;"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"import javafx.scene.control.ButtonType;"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"import javafx.util.Duration;"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":" * Controller for ui.MainWindow. Provides the layout for the other controls."},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":" */"},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"    private VBox dialogContainer;"},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":"    private TextField userInput;"},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":"    private Button sendButton;"},{"lineNumber":30,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":31,"author":{"gitId":"yungweezy"},"content":"    private Duke duke;"},{"lineNumber":32,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":33,"author":{"gitId":"yungweezy"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"},{"lineNumber":34,"author":{"gitId":"yungweezy"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));"},{"lineNumber":35,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":36,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"yungweezy"},"content":"     * Initialize."},{"lineNumber":38,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"yungweezy"},"content":"    @FXML"},{"lineNumber":40,"author":{"gitId":"yungweezy"},"content":"    public void initialize() {"},{"lineNumber":41,"author":{"gitId":"yungweezy"},"content":"        DukeResponse dukeResponse \u003d new DukeResponse();"},{"lineNumber":42,"author":{"gitId":"yungweezy"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":43,"author":{"gitId":"yungweezy"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":44,"author":{"gitId":"yungweezy"},"content":"                DialogBox.getDukeDialog(dukeResponse.welcome(), dukeImage)"},{"lineNumber":45,"author":{"gitId":"yungweezy"},"content":"        );"},{"lineNumber":46,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":48,"author":{"gitId":"yungweezy"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":49,"author":{"gitId":"yungweezy"},"content":"        duke \u003d d;"},{"lineNumber":50,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":52,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"yungweezy"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":54,"author":{"gitId":"yungweezy"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":55,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"yungweezy"},"content":"    @FXML"},{"lineNumber":57,"author":{"gitId":"yungweezy"},"content":"    private void handleUserInput() {"},{"lineNumber":58,"author":{"gitId":"yungweezy"},"content":"        try {"},{"lineNumber":59,"author":{"gitId":"yungweezy"},"content":"            String input \u003d userInput.getText();"},{"lineNumber":60,"author":{"gitId":"yungweezy"},"content":"            String response \u003d duke.parse(input);"},{"lineNumber":61,"author":{"gitId":"yungweezy"},"content":"            dialogContainer.getChildren().addAll("},{"lineNumber":62,"author":{"gitId":"yungweezy"},"content":"                    DialogBox.getUserDialog(input, userImage),"},{"lineNumber":63,"author":{"gitId":"yungweezy"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":64,"author":{"gitId":"yungweezy"},"content":"            );"},{"lineNumber":65,"author":{"gitId":"yungweezy"},"content":"            if (input.equals(\"bye\")) {"},{"lineNumber":66,"author":{"gitId":"yungweezy"},"content":"                exitDuke();"},{"lineNumber":67,"author":{"gitId":"yungweezy"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"yungweezy"},"content":"            userInput.clear();"},{"lineNumber":69,"author":{"gitId":"yungweezy"},"content":"        } catch (Exception e) {"},{"lineNumber":70,"author":{"gitId":"yungweezy"},"content":"            Platform.runLater(() -\u003e {"},{"lineNumber":71,"author":{"gitId":"yungweezy"},"content":"                Alert dialog \u003d new Alert(Alert.AlertType.ERROR, e.getMessage(), ButtonType.OK);"},{"lineNumber":72,"author":{"gitId":"yungweezy"},"content":"                dialog.setHeaderText(\"Uh oh...\");"},{"lineNumber":73,"author":{"gitId":"yungweezy"},"content":"                dialog.show();"},{"lineNumber":74,"author":{"gitId":"yungweezy"},"content":"            });"},{"lineNumber":75,"author":{"gitId":"yungweezy"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":77,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":79,"author":{"gitId":"yungweezy"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"yungweezy"},"content":"     * Exits duke program."},{"lineNumber":81,"author":{"gitId":"yungweezy"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"yungweezy"},"content":"    private void exitDuke() {"},{"lineNumber":83,"author":{"gitId":"yungweezy"},"content":"        userInput.setOnAction(null);"},{"lineNumber":84,"author":{"gitId":"yungweezy"},"content":"        sendButton.setOnAction(null);"},{"lineNumber":85,"author":{"gitId":"yungweezy"},"content":"        PauseTransition pause \u003d new PauseTransition(Duration.seconds(3));"},{"lineNumber":86,"author":{"gitId":"yungweezy"},"content":"        pause.setOnFinished(event -\u003e System.exit(0));"},{"lineNumber":87,"author":{"gitId":"yungweezy"},"content":"        pause.play();"},{"lineNumber":88,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":89}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"      \u003cVBox maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" styleClass\u003d\"dialog-box\"\u003e"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"         \u003cchildren\u003e"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"              \u003cLabel fx:id\u003d\"dialog\" styleClass\u003d\"dialog-label\" text\u003d\"Text\" wrapText\u003d\"true\"\u003e"},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"               \u003cfont\u003e"},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"                  \u003cFont name\u003d\"Consolas Bold\" size\u003d\"12.0\" /\u003e"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"               \u003c/font\u003e"},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"            \u003c/Label\u003e"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":"         \u003c/children\u003e"},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"         \u003cHBox.margin\u003e"},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":"            \u003cInsets left\u003d\"15.0\" right\u003d\"5.0\" /\u003e"},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":"         \u003c/HBox.margin\u003e"},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"         \u003cpadding\u003e"},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":"            \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"         \u003c/padding\u003e"},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"      \u003c/VBox\u003e"},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"    \u003c/children\u003e"},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":"   \u003cpadding\u003e"},{"lineNumber":30,"author":{"gitId":"yungweezy"},"content":"      \u003cInsets top\u003d\"5.0\" /\u003e"},{"lineNumber":31,"author":{"gitId":"yungweezy"},"content":"   \u003c/padding\u003e"},{"lineNumber":32,"author":{"gitId":"yungweezy"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"yungweezy":32}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"720.0\" prefWidth\u003d\"480.0\" styleClass\u003d\"anchor-pane\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"ui.MainWindow\"\u003e"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"50.0\" prefWidth\u003d\"388.0\" promptText\u003d\"Ask Cartman something...\" styleClass\u003d\"text-field\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"         \u003cfont\u003e"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"            \u003cFont name\u003d\"Consolas Bold\" size\u003d\"12.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"         \u003c/font\u003e"},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"      \u003c/TextField\u003e"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"387.0\" layoutY\u003d\"669.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"50.0\" prefWidth\u003d\"93.0\" styleClass\u003d\"input-button\" text\u003d\"Go\"\u003e"},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"         \u003cfont\u003e"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":"            \u003cFont name\u003d\"Consolas Bold\" size\u003d\"14.0\" /\u003e"},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"         \u003c/font\u003e\u003c/Button\u003e"},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"668.0\" prefWidth\u003d\"480.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":"            \u003ccontent\u003e"},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"670.0\" prefWidth\u003d\"465.0\" /\u003e"},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":"            \u003c/content\u003e"},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"    \u003c/children\u003e"},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"yungweezy":27}},{"path":"src/test/java/duke/DukeTaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":"import task.Task;"},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":"import task.Todo;"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"public class DukeTaskListTest {"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"    public void sizeTest() {"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"        Task dummyTask \u003d new Todo(\"test\");"},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"        taskList.add(dummyTask);"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"        taskList.add(dummyTask);"},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"        taskList.add(dummyTask);"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":"        taskList.add(dummyTask);"},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"        taskList.add(dummyTask);"},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":"        DukeTaskList dummyTaskList \u003d new DukeTaskList(taskList);"},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":"        assertEquals(dummyTaskList.size(), 5);"},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"    public void getTest() {"},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"        Todo task \u003d new Todo(\"test\");"},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":"        taskList.add(task);"},{"lineNumber":30,"author":{"gitId":"yungweezy"},"content":"        DukeTaskList dummyTaskList \u003d new DukeTaskList(taskList);"},{"lineNumber":31,"author":{"gitId":"yungweezy"},"content":"        assertEquals(dummyTaskList.get(0), task);"},{"lineNumber":32,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":34,"author":{"gitId":"yungweezy"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"yungweezy"},"content":"    public void getTaskListTest() {"},{"lineNumber":36,"author":{"gitId":"yungweezy"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":37,"author":{"gitId":"yungweezy"},"content":"        DukeTaskList dummyTaskList \u003d new DukeTaskList(taskList);"},{"lineNumber":38,"author":{"gitId":"yungweezy"},"content":"        assertEquals(dummyTaskList.getTaskList(), taskList);"},{"lineNumber":39,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":40}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"import java.util.Locale;"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"public class EventTest {"},{"lineNumber":12,"author":{"gitId":"yungweezy"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"yungweezy"},"content":"    public void getSimpleAtTest() {"},{"lineNumber":14,"author":{"gitId":"yungweezy"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter"},{"lineNumber":15,"author":{"gitId":"yungweezy"},"content":"                .ofPattern(\"dd/MM/yyyy, hh:mma\", Locale.US);"},{"lineNumber":16,"author":{"gitId":"yungweezy"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"25/10/1997, 10:30PM\", format);"},{"lineNumber":17,"author":{"gitId":"yungweezy"},"content":"        Event event \u003d new Event(\"test\", dateTime);"},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"        assertEquals(event.getSimpleAt(), dateTime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy, hh:mma\")));"},{"lineNumber":19,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":20,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"yungweezy"},"content":""},{"lineNumber":22,"author":{"gitId":"yungweezy"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"    public void getAtTest() {"},{"lineNumber":24,"author":{"gitId":"yungweezy"},"content":"        DateTimeFormatter format \u003d DateTimeFormatter"},{"lineNumber":25,"author":{"gitId":"yungweezy"},"content":"                .ofPattern(\"dd/MM/yyyy, hh:mma\", Locale.US);"},{"lineNumber":26,"author":{"gitId":"yungweezy"},"content":"        LocalDateTime dateTime \u003d LocalDateTime.parse(\"25/10/1997, 10:30PM\", format);"},{"lineNumber":27,"author":{"gitId":"yungweezy"},"content":"        Event event \u003d new Event(\"test\", dateTime);"},{"lineNumber":28,"author":{"gitId":"yungweezy"},"content":"        assertEquals(event.getAt(), \"25 Oct 1997, 10:30PM\");"},{"lineNumber":29,"author":{"gitId":"yungweezy"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"yungweezy"},"content":"}"}],"authorContributionMap":{"yungweezy":30}},{"path":"storage/storage.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"Event | Y2S2 ends | 01/05/2021, 11:59PM"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":"Todo | asd"}],"authorContributionMap":{"yungweezy":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yungweezy"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"yungweezy"},"content":"deadline read book /by June 6th"},{"lineNumber":3,"author":{"gitId":"yungweezy"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"yungweezy"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"yungweezy"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"yungweezy"},"content":"done 4"},{"lineNumber":7,"author":{"gitId":"yungweezy"},"content":"todo borrow book"},{"lineNumber":8,"author":{"gitId":"yungweezy"},"content":"list"},{"lineNumber":9,"author":{"gitId":"yungweezy"},"content":"deadline return book /by Sunday"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":11,"author":{"gitId":"yungweezy"},"content":"list"}],"authorContributionMap":{"yungweezy":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"yungweezy"},"content":"javac -encoding ISO-8859-1 -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"yungweezy"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"-":19,"yungweezy":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"yungweezy"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"-":37,"yungweezy":1}}]
