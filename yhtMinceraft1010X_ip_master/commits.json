{"authorDailyContributionsMap":{"yhtMinceraft1010X":[{"date":"2021-01-16","commitResults":[{"hash":"0d0ea6c0b898e31e154c3296dca944a7890b1f20","messageTitle":"-Added minimalist functionality to my version of the Duke chatbot, codenamed \"Meme Man\". -Updated the README.md user guide to introduce Meme Man and describe \"bye\" command functionality.","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":6},"md":{"insertions":9,"deletions":11}}},{"hash":"132c44f88e54affaa7934e9a64766ff4813e01ed","messageTitle":"Level 2 changes: -Removed echo functionality of Meme Man. -Added functionality for Meme Man to note down tasks and display them when prompted. -Update README.md user guide to reflect the above changes.","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":4},"md":{"insertions":12,"deletions":6}}}]},{"date":"2021-01-17","commitResults":[{"hash":"fa93c16878ee066cd99f36edb24ddbe1a99d56eb","messageTitle":"Level 3 changes: -Added functionality for Meme Man to keep track of whether tasks are done or not. -Edited the logic for adding tasks. You are now required to put an add command before your task description. -Update README.md user guide to reflect the above changes.","messageBody":"","tags":["Level-3","A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":119,"deletions":13},"md":{"insertions":75,"deletions":2}}},{"hash":"a3676802b85ce25339b68b38e47692459fc934f1","messageTitle":"Level 4 changes: -Divided tasks into 3 types: ToDo, Deadline, Event. -\"add\" command is no longer accepted. Use \"todo\", \"deadline\" and \"event\" commands to add ToDo, Deadline and Event tasks respectively. -Removed spacing in front of task description for done and undone valid outputs. -Added 2 easter eggs related to other Surreal Memes characters. -Updated README.md user guide to reflect the above changes.","messageBody":"","tags":["Level-4","A-Inheritance"],"fileTypesAndContributionMap":{"java":{"insertions":88,"deletions":12},"md":{"insertions":85,"deletions":19}}},{"hash":"bf9b01eb76062bda1aa7fce81b9e3abb266000cf","messageTitle":"Testing Automation: -Added a test case to input.txt -Slightly changed code inside Duke.java for formatting purposes","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":28,"deletions":0},"java":{"insertions":2,"deletions":2}}},{"hash":"fb2764945066753ddd2b638f4c4a32fd57dd3c6c","messageTitle":"Level 5 changes: -Added Meme Man responses for exceptional user inputs using internal exceptions -Updated README.md user guide to reflect above changes -Reorganised and expanded number of test cases","messageBody":"","tags":["Level-5","A-Exceptions"],"fileTypesAndContributionMap":{"txt":{"insertions":72,"deletions":11},"java":{"insertions":102,"deletions":54},"bat":{"insertions":113,"deletions":21},"sh":{"insertions":242,"deletions":38},"md":{"insertions":40,"deletions":2}}}]},{"date":"2021-01-18","commitResults":[{"hash":"4e689c8e2a8904ca5bd5c17fd53f8bc813f3c61a","messageTitle":"Level 6 changes: -Added functionality for deleting tasks -Redid exceptions for commands with number arguments (E.g. done 2, undone 3). They can now handle empty arguments and invalid arguments -Updated the README.md user guide to reflect above changes -Reorganised the user guide to better differentiate between task commands and other commands as well as command usage vs outputs -Added more test cases to test delete functionality and edited test case 5 to account for above changes","messageBody":"","tags":["Level-6","A-Collections"],"fileTypesAndContributionMap":{"txt":{"insertions":73,"deletions":0},"java":{"insertions":49,"deletions":24},"bat":{"insertions":67,"deletions":0},"sh":{"insertions":140,"deletions":0},"md":{"insertions":108,"deletions":48}}}]},{"date":"2021-01-22","commitResults":[{"hash":"b7fa92a292910dccf857a55a2a2f3b81d8ef7959","messageTitle":"Reorganise code segments and rename program","messageBody":"Many methods for handling input and tasks are bundled together in the chatbot, which retains its legacy name Duke from the start.\n\nHowever, having all the methods together in one place makes it difficult to find a method to debug. Also, keeping the original name is confusing.\n\nLet\u0027s,\n* separate the methods into different management classes\n* rename the main program class to SurrealChat\n\nSeparating the methods into different management classes based on roles is preferable to keeping them together because it would be easier to find a method to debug. The SurrealChat name also eliminates confusion with regards to program name.\n","fileTypesAndContributionMap":{"java":{"insertions":257,"deletions":233}}}]},{"date":"2021-01-23","commitResults":[{"hash":"c67eb43f7a0a1c23275d041c857e02745c7bda01","messageTitle":"Add save/load functionality for tasks","messageBody":"SurrealChat does not keep track of tasks between each run.\n\nThis causes time wastage in initialising tasks again.\n\nLet\u0027s give a save/load functionality for tasks to be saved into a file and loaded from that file in the next run.\n\nUsing a file also allows one to keep track of tasks outside of the program.\n","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":162},"java":{"insertions":115,"deletions":21},"bat":{"insertions":0,"deletions":180},"sh":{"insertions":0,"deletions":382},"md":{"insertions":4,"deletions":0}}},{"hash":"1953eb54bb89fc077dbfded68db0a9d3ff5b1444","messageTitle":"Reformat date as LocalDate","messageBody":"SurrealChat currently only takes in date as a string.\n\nThis makes sorting tasks according to date difficult.\n\nLet\u0027s put the date as a LocalDate object instead.\n\nThis is preferable as it would be easier to compare dates.\n","fileTypesAndContributionMap":{"txt":{"insertions":20,"deletions":20},"java":{"insertions":13,"deletions":6},"bat":{"insertions":8,"deletions":8},"sh":{"insertions":8,"deletions":8},"md":{"insertions":15,"deletions":13}}},{"hash":"388a90d06fd3d091eeb53ba715a6afaec7c1fd36","messageTitle":"Compartmentalise into classes","messageBody":"File operations as well as output and error print statements are scattered around the code.\n\nHowever, these make it harder to modify print output and file operations as one would have to jump from class to class.\n\nLet\u0027s,\n* add a UserOutput class to handle print-related code\n* add a FileManagement class to handle file operations\n* add a TaskParser class to act as an intermediary for processing of tasks between IO side and TaskManagement side\n* add a Pair class to store a command and an associated generic type item for further processing in UserOutput\n* rename InputManagement to UserInput\n* remove text-ui-test cases temporarily\n\nCompartmentalising tasks makes it easier to search for the relevant code segment to modify and debug. Renaming InputManagement to UserInput also emphasises on the methods being used for user commands. In addition, removing the test cases for now allows for re-working of test cases without worrying about main code and vice versa.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":153},"java":{"insertions":488,"deletions":202},"bat":{"insertions":0,"deletions":180},"sh":{"insertions":0,"deletions":382},"md":{"insertions":7,"deletions":2}}},{"hash":"c135f1815078824ab38b439876cb0fe833aa4e85","messageTitle":"Package code","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":4}}},{"hash":"01f35f9a7989040c0eba5a6fcd98891953952c17","messageTitle":"Add JUnit tests","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":92,"deletions":0}}},{"hash":"79bdbc091dc040d0ae8c840512d84407d4e0f176","messageTitle":"Add JavaDoc comments","messageBody":"Most classes and methods did not come with JavaDoc comments.\n\nThis could lead to confusion on the purposes of these classes and methods.\n\nLet\u0027s add JavaDoc comments to all non-private classes and methods.\n\nThis is preferable as classes and methods can be understood more easily.\n","fileTypesAndContributionMap":{"java":{"insertions":269,"deletions":25}}},{"hash":"6d995e73e6460d1892c60121259d784994bfd1c9","messageTitle":"Update code to meet standards","messageBody":"Following standards improves readability of code by others.\n\nLet\u0027s,\n* unindent cases under switch statements\n* add lines and comments between logical blocks in larger methods\n* change public variables under classes to protected\n","fileTypesAndContributionMap":{"java":{"insertions":177,"deletions":149}}},{"hash":"efc0cf68d76075985ad06f0b52e3948920d2cd0a","messageTitle":"Add find task capability","messageBody":"Meme Man displays all tasks to the user.\n\nThis is impractical when the user only wishes to find certain tasks.\n\nLet\u0027s add a find capability to SurrealChat that can take a keyword and find tasks with that keyword, regardless of upper or lower case.\n\nThis is preferable to reading through the entire list of tasks.\n","fileTypesAndContributionMap":{"java":{"insertions":139,"deletions":91},"md":{"insertions":28,"deletions":0}}}]},{"date":"2021-01-24","commitResults":[{"hash":"05c8b0a2ec399c2df29d82864467db43b758b8a1","messageTitle":"Add exception handling for incorrect date format","messageBody":"The Deadline and Event tasks take in a date input in the form YYYY-MM-DD. If the input is incorrect, it would throw an uncaught exception.\n\nThis is not ideal as the program would terminate prematurely.\n\nLet\u0027s,\n* abstract out the code snippet used for parsing date in the methods for generating Deadline and Event tasks\n* add exception handling for the incorrect date, along with a custom error message\n\nThis is preferable as code can continue to run even after the incorrect date format is keyed in and the message generated shares the same theme as other custom exception messages by SurrealChat. In addition, abstracting out the code makes changing the code easier if the date format is changed in the future.\n","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":2},"md":{"insertions":10,"deletions":1}}}]},{"date":"2021-01-26","commitResults":[{"hash":"f2ed33839be06cfe8ff8a8dadefb21271fcd8d79","messageTitle":"Update User Guide","messageBody":"The user guide presents the command and relevant inputs before the description of what the command does.\n\nHowever, seeing the command and the arguments first can be an eyesore.\n\nLet\u0027s,\n* reorder the command and description. Reading from left to right, the description would come before the command.\n* move the format of command and arguments from header to description.\n\nThis is preferable as the header is kept clean and readable.\n","fileTypesAndContributionMap":{"md":{"insertions":25,"deletions":11}}},{"hash":"fddfce7c26129552d54546b2025ef456376b7b24","messageTitle":"Add test cases","messageBody":"In more recent commits, there are only JUnit tests to test individual methods within the task subclasses.\n\nCoverage of testing was poor. No system-wide testing was done.\n\nLet\u0027s,\n* reintroduce some of the text-ui-test cases.\n* add a few more methods for JUnit tests.\n\nThis aims to improve testing coverage.\n","fileTypesAndContributionMap":{"txt":{"insertions":81,"deletions":0},"java":{"insertions":39,"deletions":0},"bat":{"insertions":67,"deletions":0},"sh":{"insertions":140,"deletions":0}}}]},{"date":"2021-01-27","commitResults":[{"hash":"9d2d2632d8694b9d9abd596db691d2c06f800248","messageTitle":"Add edit task description functionality","messageBody":"Tasks are added with fixed descriptions.\n\nEditing task descriptions is unfeasible since one has to delete the task and add a new task with the description.\n\nLet\u0027s,\n* add a functionality to edit task descriptions without deleting the task.\n* make tasks immutable.\n* add new JUnit tests to test editing of tasks and marking tasks as done or undone.\n\nThis is preferable as task descriptions can be conveniently edited. In addition, immutability helps protect the internal variables of the Task class from inadvertent editing.\n","fileTypesAndContributionMap":{"txt":{"insertions":54,"deletions":0},"java":{"insertions":286,"deletions":54},"bat":{"insertions":23,"deletions":0},"sh":{"insertions":51,"deletions":0},"md":{"insertions":37,"deletions":0}}}]},{"date":"2021-01-28","commitResults":[{"hash":"1ea159c739a82505becc30ee64ef58f3dc03b2a7","messageTitle":"Rework code for commands and output","messageBody":"Code for handling user commands and file loading is mainly handled by TaskParser class. This also generates pairs of an internal tag and a generic second item of any type. The done and undone commands are also separate from each other.\n\nThis centralisation of code is confusing to look at. Having generics in UserOutput also results in compile warnings. A separate Done and Undone command not only duplicates code but also causes confusion should an undo/redo function be added in future.\n\nLet\u0027s,\n* reorganise code related to user commands into Command and EasterEgg classes and their respective subclasses.\n* package the base .java files into actual packages based on package statements.\n* generate the string outputs within the respective classes, rather than at the UserOutput class.\n* move code for handling file operations from TaskParser class to TaskManagement class.\n* consolidate done and undone command into done command to toggle a task status between done and undone.\n\nThis is preferable as editing code for an individual command can now be easily done at that command class. In addition, there is no need for the Pair class to carry unprocessed output for further processing at UserOutput and for the TaskParser class to handle user commands and file operations. Both the Pair class and TaskParser class can be removed. There is no more confusion between Undone task command marking a task as undone and a potential undo command for rolling back a certain change.\n","fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":21},"java":{"insertions":1036,"deletions":849},"md":{"insertions":9,"deletions":44}}}]},{"date":"2021-01-29","commitResults":[{"hash":"f10ae0bcffc28de66fc66e808c47ddce83c19626","messageTitle":"Add help functionality","messageBody":"The README.md user guide is the only place to find guidance on how to use commands in SurrealChat.\n\nThis is inconvenient for people who need to use SurrealChat on the fly.\n\nLet\u0027s add a help command that allows the user to read a brief description on how to use a command on the spot without having to pause to look up the user guide.\n\nThis is preferable as the user can quickly see the brief but important details on command usage and only need to refer to the user guide for examples and exception messages.\n","fileTypesAndContributionMap":{"txt":{"insertions":14,"deletions":0},"java":{"insertions":221,"deletions":25},"bat":{"insertions":23,"deletions":0},"sh":{"insertions":53,"deletions":2},"md":{"insertions":20,"deletions":0}}},{"hash":"fc69b838ee28ba419eb8081663e0d1ec995a8b53","messageTitle":"Add Gradle support","messageBody":"Running of JUnit tests is done manually, test class by test class.\n\nThis can result in some failed test cases being missed as code changes if not all test classes are checked through. Javadoc errors may also be missed out.\n\nLet\u0027s add Gradle support to the project.\n\nThis is preferable as all JUnit tests can be done together and Javadoc can be checked automatically.\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":5}}}]},{"date":"2021-01-30","commitResults":[{"hash":"c4c81f84442a99f3118c384b0cd2aae844128429","messageTitle":"Add Checkstyle","messageBody":"Code is checked manually to fit standards.\n\nThis is very inconvenient and is likely to get worse as more classes are added.\n\nLet\u0027s,\n* add checkstyle functionality.\n* make use of checkstyle to find coding standard violations and correct them.\n\nThis is preferable as coding standard violations can be easily found.\n","fileTypesAndContributionMap":{"java":{"insertions":183,"deletions":92},"sh":{"insertions":116,"deletions":0}}}]},{"date":"2021-01-31","commitResults":[{"hash":"c35db2970ad0d4c3451be8d7f58ac9099160a7f3","messageTitle":"Add GUI","messageBody":"The CLI is used for handling interactions between user and chatbot.\n\nThis has a dull aesthetic.\n\nLet\u0027s,\n* add a GUI with avatars.\n* remove text-ui-tests.\n* remove UserInput and UserOutput classes.\n\nThis is preferable as the user can now \"see\" who they are interacting with. In addition, text-ui-tests as well as UserInput and UserOutput classes are no longer necessary.\n","fileTypesAndContributionMap":{"gradle":{"insertions":21,"deletions":0},"txt":{"insertions":0,"deletions":135},"java":{"insertions":344,"deletions":334},"bat":{"insertions":0,"deletions":113},"sh":{"insertions":0,"deletions":242},"md":{"insertions":4,"deletions":6}}}]},{"date":"2021-02-04","commitResults":[{"hash":"21c58ecb72a11aee283d2b141f7ef7b9c8ad1341","messageTitle":"Add time storage functionality and fix description spacing","messageBody":"Descriptions with spacing has spacing eliminated. The deadline and event tasks only keep track of date.\n\nThis is inconvenient to read and also imprecise for tracking purposes.\n\nLet\u0027s,\n* fix the spacing between words in task descriptions.\n* add time storage to deadline and event tasks.\n* add another fun easter egg.\n\nThis is preferable as the descriptions are readable and more precise task-keeping can be done.\n","fileTypesAndContributionMap":{"java":{"insertions":88,"deletions":46},"md":{"insertions":26,"deletions":12}}},{"hash":"d010a4b6f319de5aaa8fd912629524352a5b8761","messageTitle":"Add scronch all tasks functionality","messageBody":"The tasks are deleted one by one.\n\nThis can be inconvenient for users who want to delete everything in one go.\n\nLet\u0027s add a scronch functionality to delete all tasks.\n\nThis is preferable to going through a long list of tasks and deleting them one by one.\n","fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":0},"md":{"insertions":28,"deletions":0}}}]},{"date":"2021-02-05","commitResults":[{"hash":"3044200063d61b8110f6c9c591898e6e2d460186","messageTitle":"Add assertions","messageBody":"Let\u0027s replace some if guard conditions with assert statements.\nThis helps to reduce indentation levels in the code.\n","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":63}}},{"hash":"93f0270e8594fba6860c30f11b9a904d6ddf2d14","messageTitle":"Improve code quality","messageBody":"Let\u0027s,\n* eliminate unnecessary \"this.\" from classes.\n* abstract out switch statements from longer methods.\n\nThis helps to improve readability of the code.\n","fileTypesAndContributionMap":{"java":{"insertions":133,"deletions":121}}}]},{"date":"2021-02-06","commitResults":[{"hash":"2ff50f0b61ec0cc7ffdaa7b2c9ef9e9efcfba505","messageTitle":"Reorganise exceptions and assertions","messageBody":"Let\u0027s,\n* use a new SurrealException class for incorrect user inputs\n* use assert statements to check assumptions regarding internal code and logic\n","fileTypesAndContributionMap":{"java":{"insertions":163,"deletions":76},"md":{"insertions":11,"deletions":1}}},{"hash":"be95289e0feebf8b07170a95597954868031ebe9","messageTitle":"Update find functionality and add a stream","messageBody":"The find functionality returns a list of tasks in order of 1, 2, 3.\n\nThis confuses users when they need the actual task number for commands which require numbers.\n\nLet\u0027s,\n* edit the find functionality such that the actual task numbers are displayed in search results.\n* move the internal workings of find from FindCommand to TaskManagement to enhance encapsulation.\n* add a lambda and stream in TaskManagement.\n\nThis is preferable as users now know the actual task numbers corresponding to tasks displayed in search results.\n","tags":["A-Streams","A-Lambdas"],"fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":26},"md":{"insertions":32,"deletions":32}}}]}]},"authorFileTypeContributionMap":{"yhtMinceraft1010X":{"java":2111,"md":379,"fxml":35,"sh":116,"bat":0,"gradle":21,"txt":0}},"authorContributionVariance":{"yhtMinceraft1010X":550638.25},"authorDisplayNameMap":{"yhtMinceraft1010X":"CS2103T-T13-2 TAY ..SUEN"}}
