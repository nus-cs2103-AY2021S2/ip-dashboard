[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010X"},"content":"repositories {"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010X"},"content":"    mavenCentral()"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010X"},"content":"dependencies {"},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010X"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010X"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010X"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010X"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010X"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010X"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010X"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":61,"author":{"gitId":"yhtMinceraft1010X"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010X"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":63,"author":{"gitId":"yhtMinceraft1010X"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":64,"author":{"gitId":"yhtMinceraft1010X"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":65,"author":{"gitId":"yhtMinceraft1010X"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":66,"author":{"gitId":"yhtMinceraft1010X"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":67,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":21,"-":46}},{"path":"config/travis/check-eof-newline.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":"# Checks that all text files end with a newline."},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":"ret\u003d0"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"# Preserve filename with spaces by only splitting on newlines."},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"IFS\u003d\u0027"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"\u0027"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":"for filename in $(git grep --cached -I -l -e \u0027\u0027 -- \u0027:/\u0027); do"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"    if [ \"$(tail -c 1 \"./$filename\")\" !\u003d \u0027\u0027 ]; then"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"        line\u003d\"$(wc -l \"./$filename\" | cut -d\u0027 \u0027 -f1)\""},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"        echo \"ERROR:$filename:$line: no newline at EOF.\""},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"        ret\u003d1"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"    fi"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"done"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"exit $ret"}],"authorContributionMap":{"yhtMinceraft1010X":18}},{"path":"config/travis/check-line-endings.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":"# Checks for prohibited line endings."},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"# Prohibited line endings: \\r\\n"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":"git grep --cached -I -n --no-color -P \u0027\\r$\u0027 -- \u0027:/\u0027 |"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"awk \u0027"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"    BEGIN {"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"        FS \u003d \":\""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"        OFS \u003d \":\""},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":"        ret \u003d 0"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"    {"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"        ret \u003d 1"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"        print \"ERROR\", $1, $2, \" prohibited \\\\r\\\\n line ending, use \\\\n instead.\""},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"    END {"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"        exit ret"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"\u0027"}],"authorContributionMap":{"yhtMinceraft1010X":19}},{"path":"config/travis/check-trailing-whitespace.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":"# Checks for trailing whitespace"},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":"git grep --cached -I -n --no-color -P \u0027[ \\t]+$\u0027 -- \u0027:/\u0027 |"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":"awk \u0027"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"    BEGIN {"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"        FS \u003d \":\""},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"        OFS \u003d \":\""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"        ret \u003d 0"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"    {"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"        # Only warn for markdown files (*.md) to accomodate text editors"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"        # which do not properly handle trailing whitespace."},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"        # (e.g. GitHub web editor)"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"        if ($1 ~ /\\.md$/) {"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"            severity \u003d \"WARN\""},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } else {"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"            severity \u003d \"ERROR\""},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"            ret \u003d 1"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"        print severity, $1, $2, \" trailing whitespace.\""},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"    END {"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"        exit ret"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"\u0027"}],"authorContributionMap":{"yhtMinceraft1010X":26}},{"path":"config/travis/deploy_github_pages.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":"# Pushes files generated by Asciidoctor and associated files to gh-pages branch for commits to master branch."},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":"set -o errexit # exit with nonzero exit code if any line fails"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"if [ -z \"$GITHUB_TOKEN\" ]; then"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"  echo \u0027GITHUB_TOKEN is not set up in Travis. Skipping deploy.\u0027"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"  exit 0"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"fi;"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"set -o nounset # exit if variable is unset"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"cd build/docs/html5"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"git init"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"git config user.name \u0027Deployment Bot (Travis)\u0027"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"git config user.email \u0027deploy@travis-ci.org\u0027"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"git config credential.helper \u0027store --file\u003d.git/credentials\u0027"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"echo \"https://${GITHUB_TOKEN}:@github.com\" \u003e .git/credentials"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"git remote add upstream \"https://github.com/${TRAVIS_REPO_SLUG}.git\""},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"# Reset to gh-pages branch, or create orphan branch if gh-pages does not exist in remote."},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"if git ls-remote --exit-code --heads upstream gh-pages; then"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"    git fetch --depth\u003d1 upstream gh-pages"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"    git reset upstream/gh-pages"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":"elif [ $? -eq 2 ]; then # exit code of git ls-remote is 2 if branch does not exist"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"    git checkout --orphan gh-pages"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"else # error occurred"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"    exit $?"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":"fi"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":"# Exit if there are no changes to gh-pages files."},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":"if changes\u003d$(git status --porcelain) \u0026\u0026 [ -z \"$changes\" ]; then"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":"    echo \u0027No changes to GitHub Pages files; exiting.\u0027"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":"    exit 0"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010X"},"content":"fi"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":"git add -A ."},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":"git commit -m \"Rebuild pages at ${TRAVIS_COMMIT}\""},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":"git push --quiet upstream HEAD:gh-pages"}],"authorContributionMap":{"yhtMinceraft1010X":42}},{"path":"config/travis/run-checks.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"#!/bin/sh"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":"# Runs all check-* scripts, and returns a non-zero exit code if any of them fail."},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":"dir\u003d$(CDPATH\u003d cd -- \"$(dirname -- \"$0\")\" \u0026\u0026 pwd) \u0026\u0026"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":"ret\u003d0 \u0026\u0026"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"for checkscript in \"$dir\"/check-*; do"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"    if ! \"$checkscript\"; then"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"        ret\u003d1"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"    fi"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":"done"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"exit $ret"}],"authorContributionMap":{"yhtMinceraft1010X":11}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"# SurrealChat User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"## Introduction"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":"Introducing... a custom chatbot based on Meme Man and the Surreal Memes."},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":"Not only will Meme Man entertain you every step of the way, Meme Man will also help you keep track of your tasks."},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"If your task has a tick, it\u0027s done. If your task has a cross, it\u0027s not done."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"Meme Man will also catch exceptions for you, because Meme Man thinks exceptions are not stonks..."},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":"Based on the Duke chatbot."},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"## How to interpret this guide"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"Commands usually come in the following format:"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"`command (ARGUMENTS IF ANY)`"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"For date and time inputs, they would be given as such:"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"`{YYYY-MM-DD}T{HH:MM:SS}`"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"Any capital letter between braces is to be replaced with the relevant date/time component."},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"The T in the middle is used to indicate time."},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"Outcomes are usually indicated in the following format:"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"Possible outcomes"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"### GUI Now Available!"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"Now comes with a GUI, so you get to see who you are chatting to. Very Stonks!"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":"### Add tasks of different types"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":"You can add 3 types of tasks:"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":"1. ToDo tasks (Fuss-free, own time own target)"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":"2. Deadline tasks (Be sure not to miss these deadlines!)"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":"3. Event tasks (Used to reserve certain timings like a calendar app)"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010X"},"content":"### Delete tasks"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":"If you feel that keeping them on the list is not necessary, Meme Man will delete them for you."},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":"Even better, you can delete them all in one go!"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010X"},"content":"### List tasks"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010X"},"content":"You can key in \"list\" and Meme Man will display the tasks in the order that you have keyed them in."},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010X"},"content":"### Save and load tasks"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010X"},"content":"You can now save the tasks on your computer and Meme Man will load them upon starting up. "},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010X"},"content":"It\u0027s automatic. No user input required!"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010X"},"content":"### Mark tasks as done"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010X"},"content":"You can key in \"done\" along with a task number and Meme Man will tick that task for you."},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010X"},"content":"### Mark tasks as undone"},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010X"},"content":"You can key in \"done\" along with a task number and Meme Man will cross that task for you."},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010X"},"content":"### Find tasks"},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010X"},"content":"You can key in a single keyword and get a narrowed list of tasks. "},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010X"},"content":"### Surreal Memes easter eggs"},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010X"},"content":"Keep scrolling to find them."},{"lineNumber":61,"author":{"gitId":"-"},"content":""},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010X"},"content":"### Find help for commands"},{"lineNumber":63,"author":{"gitId":"yhtMinceraft1010X"},"content":"If you are not sure how a command works, Meme Man will show you the format if you call for his help."},{"lineNumber":64,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":65,"author":{"gitId":"yhtMinceraft1010X"},"content":"## Commands related to tasks"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"yhtMinceraft1010X"},"content":"###  Add ToDo task - `todo`"},{"lineNumber":68,"author":{"gitId":"yhtMinceraft1010X"},"content":"Format: `todo DESCRIPTION`"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"yhtMinceraft1010X"},"content":"Key this command in along with task description to cause Meme Man to add a ToDo task."},{"lineNumber":71,"author":{"gitId":"yhtMinceraft1010X"},"content":"Everytime a task is added, the new total number of tasks is displayed."},{"lineNumber":72,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":73,"author":{"gitId":"yhtMinceraft1010X"},"content":"Example of usage:"},{"lineNumber":74,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":75,"author":{"gitId":"yhtMinceraft1010X"},"content":"`todo Watch CS2103T lecture`"},{"lineNumber":76,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":77,"author":{"gitId":"yhtMinceraft1010X"},"content":"Expected outcome:"},{"lineNumber":78,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":79,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":80,"author":{"gitId":"yhtMinceraft1010X"},"content":"Meme Man is now adding to-do task: [T][✘] Watch CS2103T lecture"},{"lineNumber":81,"author":{"gitId":"yhtMinceraft1010X"},"content":"Total number of tasks: 1"},{"lineNumber":82,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":83,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":84,"author":{"gitId":"yhtMinceraft1010X"},"content":"### Add Deadline task - `deadline`"},{"lineNumber":85,"author":{"gitId":"yhtMinceraft1010X"},"content":"Format: `deadline DESCRIPTION /by DATE`"},{"lineNumber":86,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":87,"author":{"gitId":"yhtMinceraft1010X"},"content":"Key this command in along with task description and deadline date to cause Meme Man to add a Deadline task."},{"lineNumber":88,"author":{"gitId":"yhtMinceraft1010X"},"content":"Deadline date must be in this format: {YYYY-MM-DD}T{HH:MM:SS} in 24 hour clock."},{"lineNumber":89,"author":{"gitId":"yhtMinceraft1010X"},"content":"Everytime a task is added, the new total number of tasks is displayed."},{"lineNumber":90,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":91,"author":{"gitId":"yhtMinceraft1010X"},"content":"Example of usage:"},{"lineNumber":92,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":93,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":94,"author":{"gitId":"yhtMinceraft1010X"},"content":"deadline Do CS2103T lecture quiz /by 2021-01-12T10:10:10"},{"lineNumber":95,"author":{"gitId":"yhtMinceraft1010X"},"content":"deadline Do CS2103T ip /by 2021-01-13T10:10:10"},{"lineNumber":96,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":97,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":98,"author":{"gitId":"yhtMinceraft1010X"},"content":"Expected outcome:"},{"lineNumber":99,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":100,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":101,"author":{"gitId":"yhtMinceraft1010X"},"content":"Meme Man is now adding deadline task: [D][✘] Do CS2103T lecture quiz (by: 2021-01-12, 10:10:10)"},{"lineNumber":102,"author":{"gitId":"yhtMinceraft1010X"},"content":"Total number of tasks: 2"},{"lineNumber":103,"author":{"gitId":"yhtMinceraft1010X"},"content":"Meme Man is now adding deadline task: [D][✘] Do CS2103T ip (by: 2021-01-13, 10:10:10)"},{"lineNumber":104,"author":{"gitId":"yhtMinceraft1010X"},"content":"Total number of tasks: 3"},{"lineNumber":105,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":106,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":107,"author":{"gitId":"yhtMinceraft1010X"},"content":"Outcome if \"/by\" is missing:"},{"lineNumber":108,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":109,"author":{"gitId":"yhtMinceraft1010X"},"content":"Wrong formatting. Did you forget to put \u0027/by\u0027? Not stonks!"},{"lineNumber":110,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":111,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":112,"author":{"gitId":"yhtMinceraft1010X"},"content":"Outcome for incorrect date time format:"},{"lineNumber":113,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":114,"author":{"gitId":"yhtMinceraft1010X"},"content":"\"Input date time format is incorrect. Not stonks!\""},{"lineNumber":115,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":116,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":117,"author":{"gitId":"yhtMinceraft1010X"},"content":"### Add Event task - `event`"},{"lineNumber":118,"author":{"gitId":"yhtMinceraft1010X"},"content":"Format: `event DESCRIPTION /at DATE`"},{"lineNumber":119,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":120,"author":{"gitId":"yhtMinceraft1010X"},"content":"Key this command in along with task description and event date to cause Meme Man to add a Event task."},{"lineNumber":121,"author":{"gitId":"yhtMinceraft1010X"},"content":"Event date must be in this format: {YYYY-MM-DD}T{HH:MM:SS} in 24 hour clock."},{"lineNumber":122,"author":{"gitId":"yhtMinceraft1010X"},"content":"Everytime a task is added, the new total number of tasks is displayed."},{"lineNumber":123,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":124,"author":{"gitId":"yhtMinceraft1010X"},"content":"Example of usage:"},{"lineNumber":125,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":126,"author":{"gitId":"yhtMinceraft1010X"},"content":"`event Attend CS2101 class /at 2021-01-14T10:10:10`"},{"lineNumber":127,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":128,"author":{"gitId":"yhtMinceraft1010X"},"content":"Expected outcome:"},{"lineNumber":129,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":130,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":131,"author":{"gitId":"yhtMinceraft1010X"},"content":"Meme Man is now adding event task: [E][✘] Attend CS2101 class (at: 2021-01-14, 10:10:10)"},{"lineNumber":132,"author":{"gitId":"yhtMinceraft1010X"},"content":"Total number of tasks: 4"},{"lineNumber":133,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":134,"author":{"gitId":"yhtMinceraft1010X"},"content":"Outcome if \"/at\" is missing:"},{"lineNumber":135,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":136,"author":{"gitId":"yhtMinceraft1010X"},"content":"Wrong formatting. Did you forget to put \u0027/at\u0027? Not stonks!"},{"lineNumber":137,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":138,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":139,"author":{"gitId":"yhtMinceraft1010X"},"content":"Outcome for incorrect date time format:"},{"lineNumber":140,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":141,"author":{"gitId":"yhtMinceraft1010X"},"content":"\"Input date time format is incorrect. Not stonks!\""},{"lineNumber":142,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":143,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":144,"author":{"gitId":"yhtMinceraft1010X"},"content":"### What happens if task description is empty?"},{"lineNumber":145,"author":{"gitId":"yhtMinceraft1010X"},"content":"This applies to all 3 types of tasks:"},{"lineNumber":146,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":147,"author":{"gitId":"yhtMinceraft1010X"},"content":"Empty (insert task type) task description. Not stonks!"},{"lineNumber":148,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":149,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":150,"author":{"gitId":"yhtMinceraft1010X"},"content":"### Edit task description - `edit`"},{"lineNumber":151,"author":{"gitId":"yhtMinceraft1010X"},"content":"Format: `edit TASK_NUMBER /edit NEW_DESCRIPTION`"},{"lineNumber":152,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":153,"author":{"gitId":"yhtMinceraft1010X"},"content":"Key this command in along with task number, \"/edit\" and a new description to change that task\u0027s description."},{"lineNumber":154,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":155,"author":{"gitId":"yhtMinceraft1010X"},"content":"Example of usage:"},{"lineNumber":156,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":157,"author":{"gitId":"yhtMinceraft1010X"},"content":"`edit 1 /edit Do CS2103T optional ip tasks`"},{"lineNumber":158,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":159,"author":{"gitId":"yhtMinceraft1010X"},"content":"Expected outcome:"},{"lineNumber":160,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":161,"author":{"gitId":"yhtMinceraft1010X"},"content":"You have edited a task description to this:"},{"lineNumber":162,"author":{"gitId":"yhtMinceraft1010X"},"content":"Do CS2103T optional ip tasks"},{"lineNumber":163,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":164,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":165,"author":{"gitId":"yhtMinceraft1010X"},"content":"Outcome if you only put edit command:"},{"lineNumber":166,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":167,"author":{"gitId":"yhtMinceraft1010X"},"content":"Did you forget to add the task number and new description? Not stonks!"},{"lineNumber":168,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":169,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":170,"author":{"gitId":"yhtMinceraft1010X"},"content":"Outcomes if you forget to put /edit:"},{"lineNumber":171,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":172,"author":{"gitId":"yhtMinceraft1010X"},"content":"Task number not parsed. Did you forget to put \u0027/edit\u0027? Or did you not put a number? Not stonks!"},{"lineNumber":173,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":174,"author":{"gitId":"yhtMinceraft1010X"},"content":"Wrong formatting. Did you forget to put \u0027/edit\u0027 and/or the description? Not stonks! (Happens if you only put a number too!)"},{"lineNumber":175,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":176,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":177,"author":{"gitId":"yhtMinceraft1010X"},"content":"Outcome if you did not put a proper task number but still have /edit:"},{"lineNumber":178,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":179,"author":{"gitId":"yhtMinceraft1010X"},"content":"Task number not parsed. Did you forget to put \u0027/edit\u0027? Or did you not put a number? Not stonks!"},{"lineNumber":180,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":181,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":182,"author":{"gitId":"yhtMinceraft1010X"},"content":"Outcome if your description is empty but you still put /edit:"},{"lineNumber":183,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":184,"author":{"gitId":"yhtMinceraft1010X"},"content":"Wrong formatting. Did you forget to put \u0027/edit\u0027 and/or the description? Not stonks!"},{"lineNumber":185,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":186,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":187,"author":{"gitId":"yhtMinceraft1010X"},"content":"### Mark task as done or undone - `done`"},{"lineNumber":188,"author":{"gitId":"yhtMinceraft1010X"},"content":"Format: `done TASK_NUMBER`"},{"lineNumber":189,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":190,"author":{"gitId":"yhtMinceraft1010X"},"content":"Key this command in along with task number. This toggles the done status"},{"lineNumber":191,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":192,"author":{"gitId":"yhtMinceraft1010X"},"content":"Example of usage:"},{"lineNumber":193,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":194,"author":{"gitId":"yhtMinceraft1010X"},"content":"`done 1`"},{"lineNumber":195,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":196,"author":{"gitId":"yhtMinceraft1010X"},"content":"Expected outcome if undone task is marked as done:"},{"lineNumber":197,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":198,"author":{"gitId":"yhtMinceraft1010X"},"content":"Stonks! You\u0027ve done this task:"},{"lineNumber":199,"author":{"gitId":"yhtMinceraft1010X"},"content":"Do CS2103T lecture quiz"},{"lineNumber":200,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":201,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":202,"author":{"gitId":"yhtMinceraft1010X"},"content":"Expected outcome if done task is marked as undone:"},{"lineNumber":203,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":204,"author":{"gitId":"yhtMinceraft1010X"},"content":"Not stonks! This task has been marked as undone: "},{"lineNumber":205,"author":{"gitId":"yhtMinceraft1010X"},"content":"Do CS2103T lecture quiz"},{"lineNumber":206,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":207,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":208,"author":{"gitId":"yhtMinceraft1010X"},"content":"Outcome if number field is empty:"},{"lineNumber":209,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":210,"author":{"gitId":"yhtMinceraft1010X"},"content":"Did you forget to put a number for the command you just typed in? Not stonks!"},{"lineNumber":211,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":212,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":213,"author":{"gitId":"yhtMinceraft1010X"},"content":"Outcome if number field has anything other than number or improper number (e.g. `done meme` or `done 1b`):"},{"lineNumber":214,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":215,"author":{"gitId":"yhtMinceraft1010X"},"content":"Did you put something other than a number or did you put a number incorrectly? Not stonks!"},{"lineNumber":216,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":217,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":218,"author":{"gitId":"yhtMinceraft1010X"},"content":"A task number is invalid if any of the following conditions are met:"},{"lineNumber":219,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":220,"author":{"gitId":"yhtMinceraft1010X"},"content":"1. 0"},{"lineNumber":221,"author":{"gitId":"yhtMinceraft1010X"},"content":"2. Negative number"},{"lineNumber":222,"author":{"gitId":"yhtMinceraft1010X"},"content":"3. Number is greater than number of tasks Meme Man has stored"},{"lineNumber":223,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":224,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":225,"author":{"gitId":"yhtMinceraft1010X"},"content":"Outcome if task number is invalid:"},{"lineNumber":226,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":227,"author":{"gitId":"yhtMinceraft1010X"},"content":"Invalid task number. Not stonks!"},{"lineNumber":228,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":229,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":230,"author":{"gitId":"yhtMinceraft1010X"},"content":"### List - `list`"},{"lineNumber":231,"author":{"gitId":"yhtMinceraft1010X"},"content":"Format: `list`"},{"lineNumber":232,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":233,"author":{"gitId":"yhtMinceraft1010X"},"content":"Key this command in to cause Meme Man to show you your tasks in order and whether you have completed the tasks."},{"lineNumber":234,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":235,"author":{"gitId":"yhtMinceraft1010X"},"content":"Now suppose you have 4 tasks:"},{"lineNumber":236,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":237,"author":{"gitId":"yhtMinceraft1010X"},"content":"1. Watch CS2103T lecture (ToDo, Done)"},{"lineNumber":238,"author":{"gitId":"yhtMinceraft1010X"},"content":"2. Do CS2103T lecture quiz (Deadline of this Saturday, Done)"},{"lineNumber":239,"author":{"gitId":"yhtMinceraft1010X"},"content":"3. Do CS2103T ip (Deadline of next Monday, Not done)"},{"lineNumber":240,"author":{"gitId":"yhtMinceraft1010X"},"content":"4. Attend CS2101 class (Event happens next Tuesday, Not done)"},{"lineNumber":241,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":242,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":243,"author":{"gitId":"yhtMinceraft1010X"},"content":"How to get Meme Man to list out above tasks:"},{"lineNumber":244,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":245,"author":{"gitId":"yhtMinceraft1010X"},"content":"`list`"},{"lineNumber":246,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":247,"author":{"gitId":"yhtMinceraft1010X"},"content":"Expected outcome:"},{"lineNumber":248,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":249,"author":{"gitId":"yhtMinceraft1010X"},"content":"I print the tasks:"},{"lineNumber":250,"author":{"gitId":"yhtMinceraft1010X"},"content":"1. [T][✓] Watch CS2103T lecture"},{"lineNumber":251,"author":{"gitId":"yhtMinceraft1010X"},"content":"2. [D][✓] Do CS2103T lecture quiz (by: 2021-01-12)"},{"lineNumber":252,"author":{"gitId":"yhtMinceraft1010X"},"content":"3. [D][✘] Do CS2103T ip (by: 2021-01-13)"},{"lineNumber":253,"author":{"gitId":"yhtMinceraft1010X"},"content":"4. [E][✘] Attend CS2101 class (at: 2021-01-14)"},{"lineNumber":254,"author":{"gitId":"yhtMinceraft1010X"},"content":"Hmmst\u0027ve... Stonks"},{"lineNumber":255,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":256,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":257,"author":{"gitId":"yhtMinceraft1010X"},"content":"Outcome if there is nothing in task list:"},{"lineNumber":258,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":259,"author":{"gitId":"yhtMinceraft1010X"},"content":"I have nothing to print. Not stonks!"},{"lineNumber":260,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":261,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":262,"author":{"gitId":"yhtMinceraft1010X"},"content":"### Delete task - `delete`"},{"lineNumber":263,"author":{"gitId":"yhtMinceraft1010X"},"content":"Format: `delete TASK_NUMBER`"},{"lineNumber":264,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":265,"author":{"gitId":"yhtMinceraft1010X"},"content":"Key this command in along with task number to delete the corresponding task."},{"lineNumber":266,"author":{"gitId":"yhtMinceraft1010X"},"content":"Meme Man will display how many tasks you have left."},{"lineNumber":267,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":268,"author":{"gitId":"yhtMinceraft1010X"},"content":"Example of usage:"},{"lineNumber":269,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":270,"author":{"gitId":"yhtMinceraft1010X"},"content":"`delete 1`"},{"lineNumber":271,"author":{"gitId":"-"},"content":""},{"lineNumber":272,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":273,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":274,"author":{"gitId":"yhtMinceraft1010X"},"content":"This task has been deleted:"},{"lineNumber":275,"author":{"gitId":"yhtMinceraft1010X"},"content":"[T][✓] Watch CS2103T lecture"},{"lineNumber":276,"author":{"gitId":"yhtMinceraft1010X"},"content":"Total number of tasks: 3"},{"lineNumber":277,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":278,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":279,"author":{"gitId":"yhtMinceraft1010X"},"content":"Outcome if number field is empty:"},{"lineNumber":280,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":281,"author":{"gitId":"yhtMinceraft1010X"},"content":"Did you forget to put a number for the command you just typed in? Not stonks!"},{"lineNumber":282,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":283,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":284,"author":{"gitId":"yhtMinceraft1010X"},"content":"Outcome if number field has anything other than number or improper number (e.g. `delete meme` or `delete 1b`):"},{"lineNumber":285,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":286,"author":{"gitId":"yhtMinceraft1010X"},"content":"Did you put something other than a number or did you put a number incorrectly? Not stonks!"},{"lineNumber":287,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":288,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":289,"author":{"gitId":"yhtMinceraft1010X"},"content":"Outcome if task number is invalid:"},{"lineNumber":290,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":291,"author":{"gitId":"yhtMinceraft1010X"},"content":"Invalid task number. Not stonks!"},{"lineNumber":292,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":293,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":294,"author":{"gitId":"yhtMinceraft1010X"},"content":"### Delete all tasks - `scronch`"},{"lineNumber":295,"author":{"gitId":"yhtMinceraft1010X"},"content":"Format: `scronch`"},{"lineNumber":296,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":297,"author":{"gitId":"yhtMinceraft1010X"},"content":"Key this command in to delete all tasks and empty task list."},{"lineNumber":298,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":299,"author":{"gitId":"yhtMinceraft1010X"},"content":"Example usage:"},{"lineNumber":300,"author":{"gitId":"yhtMinceraft1010X"},"content":"`scronch`"},{"lineNumber":301,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":302,"author":{"gitId":"yhtMinceraft1010X"},"content":"Expected outcome:"},{"lineNumber":303,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":304,"author":{"gitId":"yhtMinceraft1010X"},"content":"Scronching all tasks..."},{"lineNumber":305,"author":{"gitId":"yhtMinceraft1010X"},"content":"Total number of tasks: 0"},{"lineNumber":306,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":307,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":308,"author":{"gitId":"yhtMinceraft1010X"},"content":"Outcome if list is already empty:"},{"lineNumber":309,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":310,"author":{"gitId":"yhtMinceraft1010X"},"content":"List is already empty. Not stonks!"},{"lineNumber":311,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":312,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":313,"author":{"gitId":"yhtMinceraft1010X"},"content":"### Find tasks - `find`"},{"lineNumber":314,"author":{"gitId":"yhtMinceraft1010X"},"content":"Format: `find KEYWORD`"},{"lineNumber":315,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":316,"author":{"gitId":"yhtMinceraft1010X"},"content":"Key this command in along with a single keyword to find tasks that contain that keyword."},{"lineNumber":317,"author":{"gitId":"yhtMinceraft1010X"},"content":"Case-insensitive."},{"lineNumber":318,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":319,"author":{"gitId":"yhtMinceraft1010X"},"content":"Example usage:"},{"lineNumber":320,"author":{"gitId":"yhtMinceraft1010X"},"content":"`find CS2103T` "},{"lineNumber":321,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":322,"author":{"gitId":"yhtMinceraft1010X"},"content":"Expected outcome:"},{"lineNumber":323,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":324,"author":{"gitId":"yhtMinceraft1010X"},"content":"Here are my search results:"},{"lineNumber":325,"author":{"gitId":"yhtMinceraft1010X"},"content":"1. [T][✘] Watch CS2103T lecture"},{"lineNumber":326,"author":{"gitId":"yhtMinceraft1010X"},"content":"2. [D][✘] Do CS2103T lecture quiz (by: 2021-01-12)"},{"lineNumber":327,"author":{"gitId":"yhtMinceraft1010X"},"content":"3. [D][✘] Do CS2103T ip (by: 2021-01-13)"},{"lineNumber":328,"author":{"gitId":"yhtMinceraft1010X"},"content":"Hmmst\u0027ve... Stonks"},{"lineNumber":329,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":330,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":331,"author":{"gitId":"yhtMinceraft1010X"},"content":"Outcome if keyword field is empty:"},{"lineNumber":332,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":333,"author":{"gitId":"yhtMinceraft1010X"},"content":"No keyword given! Not stonks!"},{"lineNumber":334,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":335,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":336,"author":{"gitId":"yhtMinceraft1010X"},"content":"Outcome if no tasks are returned:"},{"lineNumber":337,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":338,"author":{"gitId":"yhtMinceraft1010X"},"content":"My search returned nothing. Not stonks!"},{"lineNumber":339,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":340,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":341,"author":{"gitId":"yhtMinceraft1010X"},"content":"## Other commands"},{"lineNumber":342,"author":{"gitId":"yhtMinceraft1010X"},"content":"### Help - `help`"},{"lineNumber":343,"author":{"gitId":"yhtMinceraft1010X"},"content":"Format: `help COMMAND`"},{"lineNumber":344,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":345,"author":{"gitId":"yhtMinceraft1010X"},"content":"Key this command in along with the name of another command to display how to use the command."},{"lineNumber":346,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":347,"author":{"gitId":"yhtMinceraft1010X"},"content":"Example usage:"},{"lineNumber":348,"author":{"gitId":"yhtMinceraft1010X"},"content":"`help todo`"},{"lineNumber":349,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":350,"author":{"gitId":"yhtMinceraft1010X"},"content":"Expected Outcome:"},{"lineNumber":351,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":352,"author":{"gitId":"yhtMinceraft1010X"},"content":"Given a description, stores todo task."},{"lineNumber":353,"author":{"gitId":"yhtMinceraft1010X"},"content":"Format of arguments: todo [description]"},{"lineNumber":354,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":355,"author":{"gitId":"yhtMinceraft1010X"},"content":"Outcome if you do not give a command:"},{"lineNumber":356,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":357,"author":{"gitId":"yhtMinceraft1010X"},"content":"Command not given! Not stonks!"},{"lineNumber":358,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":359,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":360,"author":{"gitId":"yhtMinceraft1010X"},"content":"Outcome for invalid commands:"},{"lineNumber":361,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":362,"author":{"gitId":"yhtMinceraft1010X"},"content":"Helper does not recognise command. Not Stonks!"},{"lineNumber":363,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":364,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":365,"author":{"gitId":"yhtMinceraft1010X"},"content":"### Easter egg - `orang`"},{"lineNumber":366,"author":{"gitId":"yhtMinceraft1010X"},"content":"Format: `orang`"},{"lineNumber":367,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":368,"author":{"gitId":"yhtMinceraft1010X"},"content":"The orang here refers to the Surreal Memes orange (spelled \"Orang\"), not Orang Utan orang."},{"lineNumber":369,"author":{"gitId":"yhtMinceraft1010X"},"content":"Key this command in and you\u0027d be pleasantly surprised at how punny Orang can be (AND have a realisation about the nature of CS2103/T)."},{"lineNumber":370,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":371,"author":{"gitId":"yhtMinceraft1010X"},"content":"### Easter egg - `vegetal`"},{"lineNumber":372,"author":{"gitId":"yhtMinceraft1010X"},"content":"Format: `vegetal`"},{"lineNumber":373,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":374,"author":{"gitId":"yhtMinceraft1010X"},"content":"Did someone said... NO VEGETALS?"},{"lineNumber":375,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":376,"author":{"gitId":"yhtMinceraft1010X"},"content":"### Easter egg - `icandoit` or `aikendueet`"},{"lineNumber":377,"author":{"gitId":"yhtMinceraft1010X"},"content":"Format: `icandoit` or `aikendueet`"},{"lineNumber":378,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":379,"author":{"gitId":"yhtMinceraft1010X"},"content":"You can use either command to achieve transcendence. Try it out!"},{"lineNumber":380,"author":{"gitId":"-"},"content":""},{"lineNumber":381,"author":{"gitId":"yhtMinceraft1010X"},"content":"### Invalid commands"},{"lineNumber":382,"author":{"gitId":"yhtMinceraft1010X"},"content":"If you key in an unrecognised command, this is what Meme Man has to say:"},{"lineNumber":383,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":384,"author":{"gitId":"yhtMinceraft1010X"},"content":"Command not recognised. Not stonks!"},{"lineNumber":385,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":386,"author":{"gitId":"yhtMinceraft1010X"},"content":"### Excess inputs"},{"lineNumber":387,"author":{"gitId":"yhtMinceraft1010X"},"content":"If you key in additional inputs next to a no-input command such as `list`, this is what Meme Man has to say:"},{"lineNumber":388,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":389,"author":{"gitId":"yhtMinceraft1010X"},"content":"Excessive inputs for a no-input command. Not stonks!"},{"lineNumber":390,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":391,"author":{"gitId":"yhtMinceraft1010X"},"content":"### Nothing given"},{"lineNumber":392,"author":{"gitId":"yhtMinceraft1010X"},"content":"If you do not key in anything but press enter anyway, this is what Meme Man has to say:"},{"lineNumber":393,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"},{"lineNumber":394,"author":{"gitId":"yhtMinceraft1010X"},"content":"Nothing was typed in! Not stonks!"},{"lineNumber":395,"author":{"gitId":"yhtMinceraft1010X"},"content":"```"}],"authorContributionMap":{"yhtMinceraft1010X":379,"-":16}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":" */"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private void flip() {"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010X"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010X"},"content":"        Collections.reverse(tmp);"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010X"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010X"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Creates DialogBox from what user says."},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param text User input."},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param img User avatar."},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return DialogBox with user input as text and user avatar."},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Creates DialogBox from what Meme Man says."},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param text Meme Man\u0027s words."},{"lineNumber":63,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param img Meme Man\u0027s avatar."},{"lineNumber":64,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return DialogBox with Meme Man\u0027s words as text and Meme Man\u0027s avatar."},{"lineNumber":65,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public static DialogBox getSurrealDialog(String text, Image img) {"},{"lineNumber":67,"author":{"gitId":"yhtMinceraft1010X"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":68,"author":{"gitId":"yhtMinceraft1010X"},"content":"        db.flip();"},{"lineNumber":69,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return db;"},{"lineNumber":70,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":71}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"import javafx.scene.Scene;"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":" * A GUI for Duke using FXML."},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":" */"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class Main extends Application {"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private SurrealChat surrealChat \u003d SurrealChat.initSurrealChat(new File(SurrealChat.TASK_FILE_PATH));"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Starts up the application."},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param stage The stage for the GUI."},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void start(Stage stage) {"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"            stage.setScene(scene);"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setSurreal(surrealChat);"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"            stage.show();"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } catch (IOException e) {"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"            e.printStackTrace();"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":34}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":"import javafx.scene.control.Button;"},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":" */"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @FXML"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private VBox dialogContainer;"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private TextField textField;"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private Button sendButton;"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private SurrealChat surrealChat;"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private Image userImage \u003d new Image(getClass().getResourceAsStream(\"/images/Meme Orang Disguise.png\"));"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private Image surrealImage \u003d new Image(getClass().getResourceAsStream(\"/images/Meme Man.png\"));"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Initialises the dialog box."},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void initialize() {"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":"                DialogBox.getSurrealDialog(initialGreeting(), surrealImage)"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":"        );"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private String initialGreeting() {"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String initialOutput \u003d \"I am Meme Man. Whoms\u0027t be entering the VIMension?\\n\";"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return initialOutput;"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Sets the SurrealChat object to property."},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param surrealChat The SurrealChat object containining internal logic."},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void setSurreal(SurrealChat surrealChat) {"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010X"},"content":"        this.surrealChat \u003d surrealChat;"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @FXML"},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private void handleUserInput() {"},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String input \u003d textField.getText();"},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String response \u003d surrealChat.commandLogic(input);"},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010X"},"content":"        response +\u003d surrealChat.saveFile();"},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010X"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":61,"author":{"gitId":"yhtMinceraft1010X"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010X"},"content":"                DialogBox.getSurrealDialog(response, surrealImage)"},{"lineNumber":63,"author":{"gitId":"yhtMinceraft1010X"},"content":"        );"},{"lineNumber":64,"author":{"gitId":"yhtMinceraft1010X"},"content":"        textField.clear();"},{"lineNumber":65,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":66}},{"path":"src/main/java/SurrealChat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.io.IOException;"},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.util.InputMismatchException;"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.command.Command;"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.command.DeadlineCommand;"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.command.DeleteCommand;"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.command.DoneCommand;"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.command.EditCommand;"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.command.EventCommand;"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.command.FindCommand;"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.command.ListCommand;"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.command.ScronchCommand;"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.command.ToDoCommand;"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.easteregg.EasterEgg;"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.easteregg.HandEasterEgg;"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.easteregg.OrangEasterEgg;"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.easteregg.VegetalEasterEgg;"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.file.FileManagement;"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.help.HelpMode;"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.task.Task;"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.task.TaskManagement;"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"/**"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":" * Handles logic of SurrealChat."},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":" */"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class SurrealChat {"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"    protected static final String TASK_FILE_PATH \u003d \"tasks.txt\";"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"    protected final TaskManagement taskManagement;"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":"    protected final FileManagement fileManagement;"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":"    protected final String fileLoadOutput;"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private SurrealChat(TaskManagement taskManagement,"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":"                        FileManagement fileManagement) {"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assert taskManagement !\u003d null : \"Null taskManagement! Not stonks!\\n\";"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assert fileManagement !\u003d null : \"Null fileManagement! Not stonks!\\n\";"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010X"},"content":"        this.taskManagement \u003d taskManagement;"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":"        this.fileManagement \u003d fileManagement;"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":"        fileLoadOutput \u003d loadFile();"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Creates new SurrealChat instance."},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param filePath Path of file for save/load."},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return SurrealChat instance."},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public static SurrealChat initSurrealChat(File filePath) {"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assert filePath !\u003d null : \"Null filePath. File path needed for save/load. Not stonks!\\n\";"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010X"},"content":"        TaskManagement taskManagement \u003d new TaskManagement(new ArrayList\u003cTask\u003e());"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010X"},"content":"        FileManagement fileManagement \u003d new FileManagement(filePath);"},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return new SurrealChat(taskManagement, fileManagement);"},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private String[] splitString(String inputString) {"},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return inputString.split(\" \");"},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private void checkExcessArguments(String excess) {"},{"lineNumber":61,"author":{"gitId":"yhtMinceraft1010X"},"content":"        if (!excess.isEmpty()) {"},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010X"},"content":"            throw new InputMismatchException(\"Excessive inputs for a no-input command. Not stonks!\\n\");"},{"lineNumber":63,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":66,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Generates output to be printed based on what command is executed."},{"lineNumber":68,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param inputString The entire command, inclusive of arguments if any."},{"lineNumber":69,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return Output to be printed."},{"lineNumber":70,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public String commandLogic(String inputString) {"},{"lineNumber":72,"author":{"gitId":"yhtMinceraft1010X"},"content":"        if (inputString.isEmpty()) {"},{"lineNumber":73,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return \"Nothing was typed in! Not stonks!\\n\";"},{"lineNumber":74,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String[] separatedWords \u003d splitString(inputString);"},{"lineNumber":76,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String userCommand \u003d separatedWords[0];"},{"lineNumber":77,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String restOfInput \u003d \"\";"},{"lineNumber":78,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":79,"author":{"gitId":"yhtMinceraft1010X"},"content":"        //Reorganise the remainder of input."},{"lineNumber":80,"author":{"gitId":"yhtMinceraft1010X"},"content":"        for (int i \u003d 1; i \u003c separatedWords.length; i++) {"},{"lineNumber":81,"author":{"gitId":"yhtMinceraft1010X"},"content":"            restOfInput +\u003d String.format(\"%s \", separatedWords[i]);"},{"lineNumber":82,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"yhtMinceraft1010X"},"content":"        restOfInput \u003d restOfInput.trim();"},{"lineNumber":84,"author":{"gitId":"yhtMinceraft1010X"},"content":"        try {"},{"lineNumber":85,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return executeCommand(userCommand, restOfInput);"},{"lineNumber":86,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } catch (Exception e) {"},{"lineNumber":87,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return e.getMessage();"},{"lineNumber":88,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":91,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private String executeCommand(String command, String restOfInput) {"},{"lineNumber":92,"author":{"gitId":"yhtMinceraft1010X"},"content":"        switch(command) {"},{"lineNumber":93,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case \"help\":"},{"lineNumber":94,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return HelpMode.displayHelp(restOfInput);"},{"lineNumber":95,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case \"list\":"},{"lineNumber":96,"author":{"gitId":"yhtMinceraft1010X"},"content":"            checkExcessArguments(restOfInput);"},{"lineNumber":97,"author":{"gitId":"yhtMinceraft1010X"},"content":"            Command listCommand \u003d new ListCommand();"},{"lineNumber":98,"author":{"gitId":"yhtMinceraft1010X"},"content":"            String outputList \u003d listCommand.execute(taskManagement);"},{"lineNumber":99,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return outputList;"},{"lineNumber":100,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case \"todo\":"},{"lineNumber":101,"author":{"gitId":"yhtMinceraft1010X"},"content":"            Command addToDoCommand \u003d new ToDoCommand(restOfInput);"},{"lineNumber":102,"author":{"gitId":"yhtMinceraft1010X"},"content":"            String outputString \u003d addToDoCommand.execute(taskManagement);"},{"lineNumber":103,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return outputString;"},{"lineNumber":104,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case \"deadline\":"},{"lineNumber":105,"author":{"gitId":"yhtMinceraft1010X"},"content":"            Command addDeadlineCommand \u003d new DeadlineCommand(restOfInput);"},{"lineNumber":106,"author":{"gitId":"yhtMinceraft1010X"},"content":"            outputString \u003d addDeadlineCommand.execute(taskManagement);"},{"lineNumber":107,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return outputString;"},{"lineNumber":108,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case \"event\":"},{"lineNumber":109,"author":{"gitId":"yhtMinceraft1010X"},"content":"            Command addEventCommand \u003d new EventCommand(restOfInput);"},{"lineNumber":110,"author":{"gitId":"yhtMinceraft1010X"},"content":"            outputString \u003d addEventCommand.execute(taskManagement);"},{"lineNumber":111,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return outputString;"},{"lineNumber":112,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case \"edit\":"},{"lineNumber":113,"author":{"gitId":"yhtMinceraft1010X"},"content":"            Command editCommand \u003d new EditCommand(restOfInput);"},{"lineNumber":114,"author":{"gitId":"yhtMinceraft1010X"},"content":"            outputString \u003d editCommand.execute(taskManagement);"},{"lineNumber":115,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return outputString;"},{"lineNumber":116,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case \"done\":"},{"lineNumber":117,"author":{"gitId":"yhtMinceraft1010X"},"content":"            Command doneCommand \u003d new DoneCommand(restOfInput);"},{"lineNumber":118,"author":{"gitId":"yhtMinceraft1010X"},"content":"            outputString \u003d doneCommand.execute(taskManagement);"},{"lineNumber":119,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return outputString;"},{"lineNumber":120,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case \"delete\":"},{"lineNumber":121,"author":{"gitId":"yhtMinceraft1010X"},"content":"            Command deleteCommand \u003d new DeleteCommand(restOfInput);"},{"lineNumber":122,"author":{"gitId":"yhtMinceraft1010X"},"content":"            outputString \u003d deleteCommand.execute(taskManagement);"},{"lineNumber":123,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return outputString;"},{"lineNumber":124,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case \"scronch\":"},{"lineNumber":125,"author":{"gitId":"yhtMinceraft1010X"},"content":"            checkExcessArguments(restOfInput);"},{"lineNumber":126,"author":{"gitId":"yhtMinceraft1010X"},"content":"            Command scronchCommand \u003d new ScronchCommand();"},{"lineNumber":127,"author":{"gitId":"yhtMinceraft1010X"},"content":"            outputString \u003d scronchCommand.execute(taskManagement);"},{"lineNumber":128,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return outputString;"},{"lineNumber":129,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case \"find\":"},{"lineNumber":130,"author":{"gitId":"yhtMinceraft1010X"},"content":"            Command findCommand \u003d new FindCommand(restOfInput);"},{"lineNumber":131,"author":{"gitId":"yhtMinceraft1010X"},"content":"            outputString \u003d findCommand.execute(taskManagement);"},{"lineNumber":132,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return outputString;"},{"lineNumber":133,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case \"orang\":"},{"lineNumber":134,"author":{"gitId":"yhtMinceraft1010X"},"content":"            checkExcessArguments(restOfInput);"},{"lineNumber":135,"author":{"gitId":"yhtMinceraft1010X"},"content":"            EasterEgg orangEasterEgg \u003d new OrangEasterEgg();"},{"lineNumber":136,"author":{"gitId":"yhtMinceraft1010X"},"content":"            outputString \u003d orangEasterEgg.execute();"},{"lineNumber":137,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return outputString;"},{"lineNumber":138,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case \"vegetal\":"},{"lineNumber":139,"author":{"gitId":"yhtMinceraft1010X"},"content":"            checkExcessArguments(restOfInput);"},{"lineNumber":140,"author":{"gitId":"yhtMinceraft1010X"},"content":"            EasterEgg vegetalEasterEgg \u003d new VegetalEasterEgg();"},{"lineNumber":141,"author":{"gitId":"yhtMinceraft1010X"},"content":"            outputString \u003d vegetalEasterEgg.execute();"},{"lineNumber":142,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return outputString;"},{"lineNumber":143,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case \"icandoit\":"},{"lineNumber":144,"author":{"gitId":"yhtMinceraft1010X"},"content":"            //Fallthrough to aikendueet"},{"lineNumber":145,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case \"aikendueet\":"},{"lineNumber":146,"author":{"gitId":"yhtMinceraft1010X"},"content":"            checkExcessArguments(restOfInput);"},{"lineNumber":147,"author":{"gitId":"yhtMinceraft1010X"},"content":"            EasterEgg handEasterEgg \u003d new HandEasterEgg();"},{"lineNumber":148,"author":{"gitId":"yhtMinceraft1010X"},"content":"            outputString \u003d handEasterEgg.execute();"},{"lineNumber":149,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return outputString;"},{"lineNumber":150,"author":{"gitId":"yhtMinceraft1010X"},"content":"        default:"},{"lineNumber":151,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return \"Command not recognised. Not stonks!\\n\";"},{"lineNumber":152,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":153,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":155,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":156,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Loads the tasks from file."},{"lineNumber":157,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":158,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public String loadFile() {"},{"lineNumber":159,"author":{"gitId":"yhtMinceraft1010X"},"content":"        try {"},{"lineNumber":160,"author":{"gitId":"yhtMinceraft1010X"},"content":"            List\u003cString\u003e fileLines \u003d fileManagement.loadTaskFile();"},{"lineNumber":161,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return taskManagement.parseFileLines(fileLines);"},{"lineNumber":162,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } catch (IOException e) {"},{"lineNumber":163,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return \"File loading error. Not stonks!\\n\";"},{"lineNumber":164,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":167,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":168,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Saves the tasks into file."},{"lineNumber":169,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return A string indicating that tasks are being saved."},{"lineNumber":170,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":171,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public String saveFile() {"},{"lineNumber":172,"author":{"gitId":"yhtMinceraft1010X"},"content":"        List\u003cString\u003e fileTaskList \u003d taskManagement.convertTasksForFile();"},{"lineNumber":173,"author":{"gitId":"yhtMinceraft1010X"},"content":"        fileManagement.saveTasksToFile(fileTaskList);"},{"lineNumber":174,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return \"Saving tasks now...\\n\";"},{"lineNumber":175,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":176}},{"path":"src/main/java/surrealchat/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.command;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.exception.SurrealException;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.task.TaskManagement;"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":" * Base class for user commands."},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":" */"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"public abstract class Command {"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":"    protected final String commandType;"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Creates new Command object."},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param commandType Type of command."},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public Command(String commandType) {"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"        this.commandType \u003d commandType;"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Executes the user command to give a String output."},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param taskManagement TaskManagement object that handles Task objects relevant to command."},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String to be printed."},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public abstract String execute(TaskManagement taskManagement);"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Checks if taskNumber falls outside the range [1, size of task list]."},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param taskNumber Number keyed in by user."},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param size Total number of tasks in list."},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return True if out of range, false if within range."},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":"    protected static boolean isInvalidTaskNumber(int taskNumber, int size) {"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return (taskNumber \u003c\u003d 0 || taskNumber \u003e size);"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Obtains int from String."},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param description String to be parsed to int."},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return Int inside the String."},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @throws SurrealException If description cannot be parsed to String."},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010X"},"content":"    protected static int getInputNumber(String description) throws SurrealException {"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010X"},"content":"        description \u003d description.trim();"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010X"},"content":"        if (description.isEmpty()) {"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010X"},"content":"            throw new SurrealException("},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010X"},"content":"                    \"Did you forget to put a number for the command you just typed in? Not stonks!\\n\");"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } else {"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010X"},"content":"            try {"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010X"},"content":"                return Integer.valueOf(description);"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010X"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010X"},"content":"                throw new SurrealException("},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010X"},"content":"                        \"Did you put something other than a number or did you put a number incorrectly? Not stonks!\\n\");"},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010X"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":57}},{"path":"src/main/java/surrealchat/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.command;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.exception.SurrealException;"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.task.DeadlineTask;"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.task.Task;"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.task.TaskManagement;"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":" * Command object for creating a new DeadlineTask object."},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":" */"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"    protected final String rawDescription;"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Creates new DeadlineCommand object."},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param rawDescription The description for new DeadlineTask object, inclusive of date."},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public DeadlineCommand(String rawDescription) {"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"        super(\"deadline\");"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"        this.rawDescription \u003d rawDescription;"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private LocalDateTime parseDate(String dateString) throws SurrealException {"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return LocalDateTime.parse(dateString);"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"            throw new SurrealException(\"Input date time format is incorrect. Not stonks!\\n\");"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private DeadlineTask addDeadline(String taskDescription) throws SurrealException {"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":"        if (taskDescription.isEmpty()) {"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":"            throw new SurrealException(\"Empty deadline task description. Not stonks!\\n\");"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010X"},"content":"        //Split the description into description and deadline"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String[] descriptionSplitArray \u003d taskDescription.split(\"/by\");"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":"            LocalDateTime deadlineDateTime \u003d parseDate(descriptionSplitArray[1].trim());"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010X"},"content":"            //Create Deadline task"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return DeadlineTask.createNewDeadlineTask(descriptionSplitArray[0].trim(),"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010X"},"content":"                    deadlineDateTime);"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } catch (ArrayIndexOutOfBoundsException e) { //Happens if split does not occur"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010X"},"content":"            throw new SurrealException(\"Wrong formatting. Did you forget to put \u0027/by\u0027? Not stonks!\\n\");"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private String printOutput(Task task, int size) {"},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String outputString \u003d String.format(\"Meme Man has added deadline task: %s\\n\", task);"},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010X"},"content":"        outputString +\u003d String.format(\"Total number of tasks: %d\\n\", size);"},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return outputString;"},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Executes deadline command to generate new DeadlineTask object."},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param taskManagement TaskManagement object to which DeadlineTask is added."},{"lineNumber":61,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String to be printed upon successful addition of DeadlineTask."},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public String execute(TaskManagement taskManagement) {"},{"lineNumber":64,"author":{"gitId":"yhtMinceraft1010X"},"content":"        try {"},{"lineNumber":65,"author":{"gitId":"yhtMinceraft1010X"},"content":"            DeadlineTask addedTask \u003d addDeadline(rawDescription);"},{"lineNumber":66,"author":{"gitId":"yhtMinceraft1010X"},"content":"            taskManagement.addTask(addedTask);"},{"lineNumber":67,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return printOutput(addedTask, taskManagement.getNumberOfTasks());"},{"lineNumber":68,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } catch (SurrealException e) {"},{"lineNumber":69,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return e.getMessage();"},{"lineNumber":70,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":73,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Describes usage of deadline command."},{"lineNumber":75,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String describing the deadline command."},{"lineNumber":76,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public static String displayHelp() {"},{"lineNumber":78,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String outputString \u003d \"Given a description and deadline, stores deadline task.\\n\";"},{"lineNumber":79,"author":{"gitId":"yhtMinceraft1010X"},"content":"        outputString +\u003d \"Format of arguments: deadline [description] /by [deadline]\\n\";"},{"lineNumber":80,"author":{"gitId":"yhtMinceraft1010X"},"content":"        outputString +\u003d \"[deadline] must be of the form {YYYY-MM-DD}T{HH:MM:SS} in 24 hour clock\\n\";"},{"lineNumber":81,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return outputString;"},{"lineNumber":82,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":83}},{"path":"src/main/java/surrealchat/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.command;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.exception.SurrealException;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.task.Task;"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.task.TaskManagement;"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":" * Command object for deleting a Task object."},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":" */"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"    protected final String taskNumberString;"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Creates new DeleteCommand object."},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param taskNumberString Index number of Task to be deleted."},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public DeleteCommand(String taskNumberString) {"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"        super(\"delete\");"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"        this.taskNumberString \u003d taskNumberString;"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private String printOutput(Task deletedTask, int size) {"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String outputString \u003d \"This task has been deleted:\\n\";"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"        outputString +\u003d String.format(\"%s\\n\", deletedTask);"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"        outputString +\u003d String.format(\"Total number of tasks: %d\\n\", size);"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return outputString;"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Executes delete command to delete a task."},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param taskManagement TaskManagement object where Task to be deleted is stored."},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String output upon successful deletion of Task."},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public String execute(TaskManagement taskManagement) {"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":"            int taskNumber \u003d Command.getInputNumber(this.taskNumberString);"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":"            if (Command.isInvalidTaskNumber(taskNumber, taskManagement.getNumberOfTasks())) {"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010X"},"content":"                throw new SurrealException(\"Invalid task number. Not stonks!\\n\");"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010X"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":"            Task deletedTask \u003d taskManagement.deleteTask(taskNumber);"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return printOutput(deletedTask, taskManagement.getNumberOfTasks());"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } catch (SurrealException e) {"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return e.getMessage();"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Describes usage of delete command."},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String describing the delete command."},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public static String displayHelp() {"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String outputString \u003d \"Given a task number, deletes that task from list.\\n\";"},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010X"},"content":"        outputString +\u003d \"Format of arguments: delete [task number]\\n\";"},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return outputString;"},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":56}},{"path":"src/main/java/surrealchat/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.command;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.exception.SurrealException;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.task.Task;"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.task.TaskManagement;"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":" * Command object for toggling the isDone variable on Task object."},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":" */"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class DoneCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private static final int TASK_DONE \u003d 1;"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private static final int TASK_NOT_DONE \u003d 0;"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"    protected final String taskNumberString;"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Creates a new DoneCommand object."},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param taskNumberString Index number of Task for which to toggle done/undone."},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public DoneCommand(String taskNumberString) {"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"        super(\"done\");"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"        this.taskNumberString \u003d taskNumberString;"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private String printOutput(Task task) {"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String outputString \u003d \"\";"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"        if (task.getStatusInt() \u003d\u003d DoneCommand.TASK_DONE) {"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"            outputString +\u003d \"Stonks! You\u0027ve done this task:\\n\";"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } else if (task.getStatusInt() \u003d\u003d DoneCommand.TASK_NOT_DONE) {"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"            outputString +\u003d \"Not stonks! This task has been marked as undone:\\n\";"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } else {"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"            throw new IllegalArgumentException(\"Incorrect task done number! It should be 1 or 0. Not stonks!\\n\");"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":"        outputString +\u003d String.format(\"%s\\n\", task);"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return outputString;"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Executes done command to toggle isDone variable on Task object."},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param taskManagement TaskManagement object where Task object to be marked done/undone is stored."},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String upon successful toggling of Task."},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public String execute(TaskManagement taskManagement) {"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010X"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010X"},"content":"            int taskNumber \u003d Command.getInputNumber(this.taskNumberString);"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010X"},"content":"            if (Command.isInvalidTaskNumber(taskNumber, taskManagement.getNumberOfTasks())) {"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010X"},"content":"                throw new SurrealException(\"Invalid task number. Not stonks!\\n\");"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010X"},"content":"            }"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010X"},"content":"            Task doneTask \u003d taskManagement.markAsDone(taskNumber);"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return printOutput(doneTask);"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } catch (SurrealException e) {"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return e.getMessage();"},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Describes usage of done command."},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String describing the done command."},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public static String displayHelp() {"},{"lineNumber":61,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String outputString \u003d \"Given a task number, toggles whether task is done/undone.\\n\";"},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010X"},"content":"        outputString +\u003d \"Format of arguments: done [task number]\\n\";"},{"lineNumber":63,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return outputString;"},{"lineNumber":64,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":65}},{"path":"src/main/java/surrealchat/command/EditCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.command;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.util.InputMismatchException;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.task.Task;"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.task.TaskManagement;"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":" * Command object for editing description of Task objects."},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":" */"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class EditCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"    protected final String rawDescription;"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Creates a new EditCommand object"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param rawDescription The task number to edit + /edit tag + new description."},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public EditCommand(String rawDescription) {"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"        super(\"edit\");"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"        this.rawDescription \u003d rawDescription;"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private String printOutput(Task editedTask) {"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String outputString \u003d \"You have edited a task description to this:\\n\";"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"        outputString +\u003d String.format(\"%s\\n\", editedTask);"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return outputString;"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Executes edit command to edit a Task description."},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param taskManagement TaskManagement object where Task to be edited is stored."},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String to describe the new task."},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public String execute(TaskManagement taskManagement) {"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":"        if (rawDescription.isEmpty()) {"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return \"Did you forget to add the task number and new description? Not stonks!\\n\";"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010X"},"content":"        //Split the description into task number and description"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String[] descriptionSplitArray \u003d rawDescription.split(\"/edit\");"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":"            int taskNumber \u003d Integer.valueOf(descriptionSplitArray[0].trim());"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":"            if (Command.isInvalidTaskNumber(taskNumber, taskManagement.getNumberOfTasks())) {"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010X"},"content":"                throw new InputMismatchException(\"Invalid task number. Not stonks!\\n\");"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010X"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010X"},"content":"            String newDescription \u003d descriptionSplitArray[1].trim();"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010X"},"content":"            if (newDescription.isEmpty()) {"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010X"},"content":"                throw new InputMismatchException(\"No description provided for editing. Not stonks!\\n\");"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010X"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010X"},"content":"            Task editedTask \u003d taskManagement.editDescription(taskNumber, newDescription);"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return printOutput(editedTask);"},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } catch (NumberFormatException e) { //Can happen if clean split does not occur."},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return \"Task number not parsed. Did you forget to put \u0027/edit\u0027? Or did you not put a number? Not stonks!\\n\";"},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } catch (ArrayIndexOutOfBoundsException e) { //Happens if split does not occur."},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return \"Wrong formatting. Did you forget to put \u0027/edit\u0027 and/or the description? Not stonks!\\n\";"},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } catch (Exception e) {"},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return e.getMessage();"},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Describes usage of edit command."},{"lineNumber":64,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String describing the edit command."},{"lineNumber":65,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public static String displayHelp() {"},{"lineNumber":67,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String outputString \u003d \"Given a task number and new description, edits that task with new description.\\n\";"},{"lineNumber":68,"author":{"gitId":"yhtMinceraft1010X"},"content":"        outputString +\u003d \"Format of arguments: edit [task number] /edit [new description]\\n\";"},{"lineNumber":69,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return outputString;"},{"lineNumber":70,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":71}},{"path":"src/main/java/surrealchat/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.command;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.exception.SurrealException;"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.task.EventTask;"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.task.Task;"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.task.TaskManagement;"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":" * Command object for creating a new EventTask object."},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":" */"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class EventCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"    protected final String rawDescription;"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Creates new EventCommand object."},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param rawDescription The description for new EventTask object, inclusive of date."},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public EventCommand(String rawDescription) {"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"        super(\"event\");"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"        this.rawDescription \u003d rawDescription;"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private LocalDateTime parseDate(String dateString) throws SurrealException {"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return LocalDateTime.parse(dateString);"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"            throw new SurrealException(\"Input date time format is incorrect. Not stonks!\\n\");"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private EventTask addEvent(String taskDescription) throws SurrealException {"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":"        if (taskDescription.isEmpty()) {"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":"            throw new SurrealException(\"Empty event task description. Not stonks!\\n\");"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010X"},"content":"        //Split the description into description and event"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String[] descriptionSplitArray \u003d taskDescription.split(\"/at\");"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":"        try {"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":"            LocalDateTime eventDateTime \u003d parseDate(descriptionSplitArray[1].trim());"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010X"},"content":"            //Create Event task"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return EventTask.createNewEventTask(descriptionSplitArray[0].trim(),"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010X"},"content":"                    eventDateTime);"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } catch (ArrayIndexOutOfBoundsException e) { //Happens if split does not occur"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010X"},"content":"            throw new SurrealException(\"Wrong formatting. Did you forget to put \u0027/at\u0027? Not stonks!\\n\");"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private String printOutput(Task task, int size) {"},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String outputString \u003d String.format(\"Meme Man has added event task: %s\\n\", task);"},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010X"},"content":"        outputString +\u003d String.format(\"Total number of tasks: %d\\n\", size);"},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return outputString;"},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Executes event command to generate new EventTask object."},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param taskManagement TaskManagement object to which EventTask is added."},{"lineNumber":61,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String to be printed upon successful addition of EventTask."},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public String execute(TaskManagement taskManagement) {"},{"lineNumber":64,"author":{"gitId":"yhtMinceraft1010X"},"content":"        try {"},{"lineNumber":65,"author":{"gitId":"yhtMinceraft1010X"},"content":"            EventTask addedTask \u003d addEvent(rawDescription);"},{"lineNumber":66,"author":{"gitId":"yhtMinceraft1010X"},"content":"            taskManagement.addTask(addedTask);"},{"lineNumber":67,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return printOutput(addedTask, taskManagement.getNumberOfTasks());"},{"lineNumber":68,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } catch (SurrealException e) {"},{"lineNumber":69,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return e.getMessage();"},{"lineNumber":70,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":73,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Describes usage of event command."},{"lineNumber":75,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String describing the event command."},{"lineNumber":76,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public static String displayHelp() {"},{"lineNumber":78,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String outputString \u003d \"Given a description and event date, stores event task.\\n\";"},{"lineNumber":79,"author":{"gitId":"yhtMinceraft1010X"},"content":"        outputString +\u003d \"Format of arguments: event [description] /at [event date and time]\\n\";"},{"lineNumber":80,"author":{"gitId":"yhtMinceraft1010X"},"content":"        outputString +\u003d \"[event date and time] must be of the form {YYYY-MM-DD}T{HH:MM:SS} in 24 hour clock\\n\";"},{"lineNumber":81,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return outputString;"},{"lineNumber":82,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":83}},{"path":"src/main/java/surrealchat/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.command;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.task.TaskManagement;"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":" * Command object for finding Tasks based on a keyword."},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":" */"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class FindCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"    protected final String keyword;"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Creates new FindCommand object."},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param keyword The keyword to search. Case-insensitive."},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public FindCommand(String keyword) {"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"        super(\"find\");"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private String compileSearchResults(List\u003cString\u003e searchResults) {"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String outputString \u003d \"\";"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"        if (searchResults.isEmpty()) {"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"            throw new NoSuchElementException(\"My search returned nothing. Not stonks!\\n\");"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":"        outputString +\u003d \"Here are my search results:\\n\";"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"        for (int i \u003d 0; i \u003c searchResults.size(); i++) {"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"            outputString +\u003d searchResults.get(i);"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":"        outputString +\u003d \"Hmmst\u0027ve... Stonks\\n\";"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return outputString;"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Executes find command to locate a Task based on keyword."},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param taskManagement TaskManagement object where Tasks are stored."},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String of list of Tasks and their corresponding numbers with keyword if any are found."},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public String execute(TaskManagement taskManagement) {"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":"        if (keyword.isEmpty()) {"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return \"No keyword given! Not stonks!\\n\";"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010X"},"content":"        List\u003cString\u003e searchResults \u003d taskManagement.getSearchResults(keyword);"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010X"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return compileSearchResults(searchResults);"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } catch (NoSuchElementException e) {"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return e.getMessage();"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Describes usage of find command."},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String describing the find command."},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public static String displayHelp() {"},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String outputString \u003d \"Given a keyword, finds tasks that contain that keyword.\\n\";"},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010X"},"content":"        outputString +\u003d \"Format of arguments: find [keyword]\\n\";"},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return outputString;"},{"lineNumber":61,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":62}},{"path":"src/main/java/surrealchat/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.command;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.exception.SurrealException;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.task.TaskManagement;"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":" * Command object for listing out all tasks."},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":" */"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class ListCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Creates new ListCommand object."},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public ListCommand() {"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"        super(\"list\");"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Executes list command to list out all Tasks."},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param taskManagement TaskManagement object that stores all Task objects."},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String of list of all Tasks."},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public String execute(TaskManagement taskManagement) {"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"            String outputString \u003d \"I print the tasks:\\n\";"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"            outputString +\u003d taskManagement.listOutTasks();"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"            outputString +\u003d \"Hmmst\u0027ve... Stonks\\n\";"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return outputString;"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } catch (SurrealException e) {"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return e.getMessage();"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Describes usage of list command."},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String describing the list command."},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public static String displayHelp() {"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String outputString \u003d \"Displays full list of tasks.\\n\";"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010X"},"content":"        outputString +\u003d \"Format of arguments: list\\n\";"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return outputString;"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":42}},{"path":"src/main/java/surrealchat/command/ScronchCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.command;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.exception.SurrealException;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.task.TaskManagement;"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":" * Command object for deleting all tasks objects, essentially emptying task list."},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":" */"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class ScronchCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Creates new ScronchCommand object."},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public ScronchCommand() {"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"        super(\"scronch\");"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private String printOutput(int size) {"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String outputString \u003d \"Scronching all tasks...\\n\";"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"        outputString +\u003d String.format(\"Total number of tasks: %d\\n\", size);"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return outputString;"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Executes scronch command to delete all tasks."},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param taskManagement TaskManagement object that handles Task objects relevant to command."},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String output upon successful deletion of all tasks."},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public String execute(TaskManagement taskManagement) {"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"            taskManagement.deleteAllTasks();"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return printOutput(taskManagement.getNumberOfTasks());"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } catch (SurrealException e) {"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return e.getMessage();"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Describes usage of scronch command."},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String describing the scronch command."},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public static String displayHelp() {"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return \"Deletes all tasks from the list.\\n\";"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":44}},{"path":"src/main/java/surrealchat/command/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.command;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.exception.SurrealException;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.task.Task;"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.task.TaskManagement;"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.task.ToDoTask;"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":" * Command object for creating a new ToDoTask object."},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":" */"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class ToDoCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"    protected final String taskDescription;"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Creates new ToDoCommand object."},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param taskDescription The description for new ToDoTask object."},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public ToDoCommand(String taskDescription) {"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"        super(\"todo\");"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private ToDoTask addToDo(String taskDescription) throws SurrealException {"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"        if (taskDescription.isEmpty()) {"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"            throw new SurrealException(\"Empty todo task description. Not stonks!\\n\");"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return ToDoTask.createNewToDoTask(taskDescription.trim());"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private String printOutput(Task task, int size) {"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String outputString \u003d String.format(\"Meme Man has added todo task: %s\\n\", task);"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":"        outputString +\u003d String.format(\"Total number of tasks: %d\\n\", size);"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return outputString;"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Executes todo command to generate new ToDoTask object."},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param taskManagement TaskManagement object to which ToDoTask is added."},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String to be printed upon successful addition of DeadlineTask."},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public String execute(TaskManagement taskManagement) {"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010X"},"content":"            ToDoTask addedTask \u003d addToDo(taskDescription);"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010X"},"content":"            taskManagement.addTask(addedTask);"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return printOutput(addedTask, taskManagement.getNumberOfTasks());"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } catch (SurrealException e) {"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return e.getMessage();"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Describes usage of todo command."},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String describing the todo command."},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public static String displayHelp() {"},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String outputString \u003d \"Given a description, stores todo task.\\n\";"},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010X"},"content":"        outputString +\u003d \"Format of arguments: todo [description]\\n\";"},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return outputString;"},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":60}},{"path":"src/main/java/surrealchat/easteregg/EasterEgg.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.easteregg;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":" * Abstract base class for easter eggs meant to humour users."},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"public abstract class EasterEgg {"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private final String easterEggType;"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Creates new EasterEgg command."},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param easterEggType The type of easter egg."},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public EasterEgg(String easterEggType) {"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"        this.easterEggType \u003d easterEggType;"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Executes easteregg command to give some funny output."},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String to be printed."},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public abstract String execute();"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":22}},{"path":"src/main/java/surrealchat/easteregg/HandEasterEgg.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.easteregg;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":" * EasterEgg subclass for Hand."},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class HandEasterEgg extends EasterEgg {"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Creates new HandEasterEgg object."},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public HandEasterEgg() {"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"        super(\"HAND\");"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Executes icandoit or aikendueet easteregg command to give hilarious output about HAND."},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String of hilarious output."},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public String execute() {"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return \"HAND\\n\";"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Describes usage of icandoit or aikendueet easteregg command."},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String describing the icandoit or aikendueet easteregg command."},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public static String displayHelp() {"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return \"Gives a hilarious output. Try it out!.\\n\";"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":29}},{"path":"src/main/java/surrealchat/easteregg/OrangEasterEgg.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.easteregg;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":" * EasterEgg subclass for Orang."},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class OrangEasterEgg extends EasterEgg {"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Creates new OrangEasterEgg object."},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public OrangEasterEgg() {"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"        super(\"orang\");"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Executes orang easteregg command to give hilarious output regarding the nature of CS2103T."},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String of hilarious output."},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public String execute() {"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String outputString \u003d \"Meme Man: ORANG! IT S U...\\n\";"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"        outputString +\u003d \"Orang: No you can\u0027t SU\\n\";"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"        outputString +\u003d \"Meme Man: ANGERY!\\n\";"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return outputString;"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Describes usage of orang easteregg command."},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String describing the orang easteregg command."},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public static String displayHelp() {"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return \"Gives a hilarious output. Try it out!.\\n\";"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":32}},{"path":"src/main/java/surrealchat/easteregg/VegetalEasterEgg.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.easteregg;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":" * EasterEgg subclass for Vegetal."},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class VegetalEasterEgg extends EasterEgg {"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Creates new VegetalEasterEgg object."},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public VegetalEasterEgg() {"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"        super(\"vegetal\");"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Executes vegetal easteregg command to give hilarious output about someone saying no vegetals."},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String of hilarious output."},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public String execute() {"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String outputString \u003d \"Vegetal: Did someone said... NO VEGETALS?\\n\";"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"        outputString +\u003d \"Meme Man: I taste a vegetal... ANGERY!\\n\";"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return outputString;"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Describes usage of vegetal easteregg command."},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String describing the vegetal easteregg command."},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public static String displayHelp() {"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return \"Gives a hilarious output. Try it out!.\\n\";"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":31}},{"path":"src/main/java/surrealchat/exception/SurrealException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.exception;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":" * Custom Exception class for SurrealChat. Can be used for any anomalous inputs."},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class SurrealException extends Exception {"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Constructs SurrealException object."},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param message The message for Meme Man display."},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public SurrealException(String message) {"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"        super(message);"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":15}},{"path":"src/main/java/surrealchat/file/FileManagement.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.file;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":" * Handles file save/load operations."},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":" */"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class FileManagement {"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"    protected File file;"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Creates a new FileManagement instance."},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param file File object with specified file path for save/load."},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public FileManagement(File file) {"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"        this.file \u003d file;"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Scans a file to generate list of tasks in the file."},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return List of tasks as taken from file."},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @throws IOException If error arises during file creation process."},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public List\u003cString\u003e loadTaskFile() throws IOException {"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"        //Create file if not available and scan the file"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":"        file.createNewFile();"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":"        Scanner fileScanner \u003d new Scanner(file);"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":"        //Obtain task lines"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":"        List\u003cString\u003e fileLines \u003d new ArrayList\u003cString\u003e();"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":"        while (fileScanner.hasNext()) {"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010X"},"content":"            String nextTask \u003d fileScanner.nextLine();"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010X"},"content":"            fileLines.add(nextTask);"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return fileLines;"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Writes tasks into file to be saved."},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param fileTaskList List of tasks to be keyed into the file."},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void saveTasksToFile(List\u003cString\u003e fileTaskList) {"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010X"},"content":"        try {"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010X"},"content":"            //Write the tasks to file"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010X"},"content":"            FileWriter fw \u003d new FileWriter(file);"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010X"},"content":"            for (int i \u003d 0; i \u003c fileTaskList.size(); i++) {"},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010X"},"content":"                fw.write(String.format(\"%s\\n\", fileTaskList.get(i)));"},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010X"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010X"},"content":"            fw.close();"},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } catch (IOException e) {"},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010X"},"content":"            System.err.println(\"Something went wrong! Not stonks!\\n\");"},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":60}},{"path":"src/main/java/surrealchat/help/HelpMode.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.help;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.command.DeadlineCommand;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.command.DeleteCommand;"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.command.DoneCommand;"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.command.EditCommand;"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.command.EventCommand;"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.command.FindCommand;"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.command.ListCommand;"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.command.ScronchCommand;"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.command.ToDoCommand;"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.easteregg.HandEasterEgg;"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.easteregg.OrangEasterEgg;"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.easteregg.VegetalEasterEgg;"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":" * Class for displaying descriptions to help user in understanding commands."},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":" */"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class HelpMode {"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Displays descriptions on how to use commands."},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param command The command which user wishes to understand how to use."},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String related to how the above command works."},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public static String displayHelp(String command) {"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"        if (command.isEmpty()) {"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return \"Command not given! Not stonks!\\n\";"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"        switch(command.trim()) {"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case \"todo\":"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return ToDoCommand.displayHelp();"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case \"deadline\":"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return DeadlineCommand.displayHelp();"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case \"event\":"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return EventCommand.displayHelp();"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case \"delete\":"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return DeleteCommand.displayHelp();"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case \"done\":"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return DoneCommand.displayHelp();"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case \"scronch\":"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return ScronchCommand.displayHelp();"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case \"find\":"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return FindCommand.displayHelp();"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case \"list\":"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return ListCommand.displayHelp();"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case \"edit\":"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return EditCommand.displayHelp();"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case \"orang\":"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return OrangEasterEgg.displayHelp();"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case \"vegetal\":"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return VegetalEasterEgg.displayHelp();"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case \"icandoit\":"},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010X"},"content":"            //Fallthrough"},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case \"aikendueet\":"},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return HandEasterEgg.displayHelp();"},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010X"},"content":"        default:"},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return \"Helper does not recognise command. Not Stonks!\\n\";"},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":60}},{"path":"src/main/java/surrealchat/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.task;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":" * Represents a task with a deadline."},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":" */"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class DeadlineTask extends Task {"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private LocalDateTime deadline;"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private DeadlineTask(String taskDescription, LocalDateTime deadline, boolean isDone) {"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"        super(taskDescription, \"D\", isDone);"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Creates new instance of DeadlineTask object."},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param taskDescription The description of task."},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param deadline LocalDate object of the date and time by which task should be completed."},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return New DeadlineTask that is not done."},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public static DeadlineTask createNewDeadlineTask(String taskDescription, LocalDateTime deadline) {"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return new DeadlineTask(taskDescription, deadline, false);"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Creates instance of DeadlineTask based on what was loaded from file."},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param taskDescription The description of new task."},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param deadline The deadline of the task."},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param isDone Whether task was previously marked as done."},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return DeadlineTask as loaded from file."},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public static DeadlineTask loadDeadlineTaskFromFile("},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":"            String taskDescription, LocalDateTime deadline, boolean isDone) {"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return new DeadlineTask(taskDescription, deadline, isDone);"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Changes the description of the DeadlineTask"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param newDescription New description of the task."},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return New DeadlineTask with edited description"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public DeadlineTask editDescription(String newDescription) {"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return new DeadlineTask(newDescription, deadline, isDone);"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Toggles a DeadlineTask between done and undone."},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return Deadline that is marked as done/undone."},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public DeadlineTask markAsDone() {"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return new DeadlineTask(getDescription(), deadline, !isDone);"},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Converts the DeadlineTask into a string format for saving into file."},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return DeadlineTask in string format for file storage."},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Override"},{"lineNumber":61,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public String saveTask() {"},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return String.format(\"%s /by %s\", super.saveTask(), deadline);"},{"lineNumber":63,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":65,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Converts the DeadlineTask into a string format for display on user output."},{"lineNumber":67,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return DeadlineTask in string format for user output."},{"lineNumber":68,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Override"},{"lineNumber":70,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public String toString() {"},{"lineNumber":71,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return String.format(\"%s (by: %s, %s)\","},{"lineNumber":72,"author":{"gitId":"yhtMinceraft1010X"},"content":"                super.toString(), deadline.toLocalDate(), deadline.toLocalTime());"},{"lineNumber":73,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":74}},{"path":"src/main/java/surrealchat/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.task;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":" * Represents a task that can occur only at a certain time."},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":" */"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class EventTask extends Task {"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private LocalDateTime event;"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private EventTask(String taskDescription, LocalDateTime event, boolean isDone) {"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"        super(taskDescription, \"E\", isDone);"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"        this.event \u003d event;"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Creates new instance of EventTask object."},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param taskDescription The description of task."},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param event LocalDateTime object of the date and time at which task should happen."},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return New EventTask that is not done."},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public static EventTask createNewEventTask(String taskDescription, LocalDateTime event) {"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return new EventTask(taskDescription, event, false);"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Creates instance of EventTask based on what was loaded from file."},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param taskDescription The description of new task."},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param event The event date and time of the task."},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param isDone Whether task was previously marked as done."},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return EventTask as loaded from file."},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public static EventTask loadEventTaskFromFile(String taskDescription, LocalDateTime event, boolean isDone) {"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return new EventTask(taskDescription, event, isDone);"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Changes the description of the EventTask"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param newDescription New description of the task."},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return New EventTask with edited description"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public EventTask editDescription(String newDescription) {"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return new EventTask(newDescription, event, isDone);"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Toggles an EventTask between done and undone."},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return EventTask that is marked as done/undone."},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public EventTask markAsDone() {"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return new EventTask(getDescription(), event, !isDone);"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Converts the EventTask into a string format for saving into file."},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return EventTask in string format for file storage."},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Override"},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public String saveTask() {"},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return String.format(\"%s /at %s\", super.saveTask(), event);"},{"lineNumber":61,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":63,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Converts the EventTask into a string format for display on user output."},{"lineNumber":65,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return EventTask in string format for user output."},{"lineNumber":66,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Override"},{"lineNumber":68,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public String toString() {"},{"lineNumber":69,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return String.format(\"%s (at: %s, %s)\", super.toString(), event.toLocalDate(), event.toLocalTime());"},{"lineNumber":70,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":71}},{"path":"src/main/java/surrealchat/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.task;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"//Below solution adapted from partial solution in:"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":"// https://nus-cs2103-ay2021s2.github.io/website/schedule/week2/project.html"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":" * Represents an abstract task, which task subclasses inherit from."},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":" */"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"public abstract class Task {"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"    protected final String description;"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":"    protected final String type;"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"    protected final boolean isDone;"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Creates instance of Task object."},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param description Description of task."},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param type Type in terms of todo (denoted \"T\"), deadline (denoted \"D\"), event (denoted \"E\")."},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param isDone Boolean flag of whether task is done or not."},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public Task(String description, String type, boolean isDone) {"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"        this.description \u003d description;"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"        this.type \u003d type;"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public String getType() {"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return type;"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Converts status of isDone into integer."},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return 1 if task was completed and 0 if task was not completed."},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public int getStatusInt() {"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":"        if (isDone) {"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return 1;"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } else {"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return 0;"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Gives an icon displaying whether task was completed."},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return Tick if task was completed and cross if task was not completed."},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public String getStatusIcon() {"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Gives a description of the Task."},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return Task description."},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public String getDescription() {"},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return description;"},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Changes the description of the Task."},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param newDescription The new description for the Task."},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return New Task with edited description."},{"lineNumber":61,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public abstract Task editDescription(String newDescription);"},{"lineNumber":63,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":64,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Toggles the Task between done and undone."},{"lineNumber":66,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return Task marked as done/undone."},{"lineNumber":67,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public abstract Task markAsDone();"},{"lineNumber":69,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":70,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":71,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Converts the Task into a string format for saving into file."},{"lineNumber":73,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return Task in string format for file storage."},{"lineNumber":74,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public String saveTask() {"},{"lineNumber":76,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return String.format(\"%s/split/%s/split/%s\", getType(), getStatusInt(), getDescription());"},{"lineNumber":77,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":79,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Converts the Task into a string format for display on user output."},{"lineNumber":81,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return Task in string format for user output."},{"lineNumber":82,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":83,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Override"},{"lineNumber":84,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public String toString() {"},{"lineNumber":85,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return String.format(\"[%s][%s] %s\", getType(), getStatusIcon(), getDescription());"},{"lineNumber":86,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":87}},{"path":"src/main/java/surrealchat/task/TaskManagement.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.task;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.util.InputMismatchException;"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.util.stream.Collectors;"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.exception.SurrealException;"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":" * Handles storing of tasks and file loading/unloading operations."},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":" */"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class TaskManagement {"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"    protected static final String TODO_TYPE \u003d \"T\";"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"    protected static final String DEADLINE_TYPE \u003d \"D\";"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"    protected static final String EVENT_TYPE \u003d \"E\";"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"    protected final List\u003cTask\u003e taskList; //Protect taskList from being changed to null."},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Creates instance of TaskManagement object."},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param taskList List of tasks."},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public TaskManagement(List\u003cTask\u003e taskList) {"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assert taskList !\u003d null : \"Null taskList passed in! Not stonks!\\n\"; //Protection against null"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Returns List of tasks for further processing."},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return List of tasks."},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public List\u003cTask\u003e getTaskList() {"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return taskList;"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Returns number of tasks stored."},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return Number of tasks stored."},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public int getNumberOfTasks() {"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return getTaskList().size();"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Adds task to internal task list."},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param task Task to be added."},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void addTask(Task task) {"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010X"},"content":"        taskList.add(task);"},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Changes the description of a task designated by a number."},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param taskNumber Position number of task (starting from 1) to be edited."},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param newDescription New description of the task."},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return Task that has been edited."},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public Task editDescription(int taskNumber, String newDescription) {"},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010X"},"content":"        Task editedTask \u003d taskList.get(taskNumber - 1).editDescription(newDescription);"},{"lineNumber":63,"author":{"gitId":"yhtMinceraft1010X"},"content":"        taskList.set(taskNumber - 1, editedTask);"},{"lineNumber":64,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return editedTask;"},{"lineNumber":65,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":67,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Toggles a task designated by number between done and undone."},{"lineNumber":69,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param taskNumber Position number of task (starting from 1) to be marked as done/undone."},{"lineNumber":70,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return Task that has been marked as done/undone."},{"lineNumber":71,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public Task markAsDone(int taskNumber) {"},{"lineNumber":73,"author":{"gitId":"yhtMinceraft1010X"},"content":"        Task doneTask \u003d taskList.get(taskNumber - 1).markAsDone();"},{"lineNumber":74,"author":{"gitId":"yhtMinceraft1010X"},"content":"        taskList.set(taskNumber - 1, doneTask);"},{"lineNumber":75,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return doneTask;"},{"lineNumber":76,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":78,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":79,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Deletes a task from the list."},{"lineNumber":81,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param taskNumber Position number of task (starting from 1) to be deleted."},{"lineNumber":82,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return Deleted task."},{"lineNumber":83,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public Task deleteTask(int taskNumber) {"},{"lineNumber":85,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return taskList.remove(taskNumber - 1);"},{"lineNumber":86,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":88,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Deletes all tasks from the list."},{"lineNumber":90,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @throws SurrealException If list was empty to begin with."},{"lineNumber":91,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void deleteAllTasks() throws SurrealException {"},{"lineNumber":93,"author":{"gitId":"yhtMinceraft1010X"},"content":"        if (taskList.isEmpty()) {"},{"lineNumber":94,"author":{"gitId":"yhtMinceraft1010X"},"content":"            throw new SurrealException(\"List is already empty. Not stonks!\\n\");"},{"lineNumber":95,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"yhtMinceraft1010X"},"content":"        taskList.clear();"},{"lineNumber":97,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":99,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private String spellTaskType(String taskType) {"},{"lineNumber":100,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assert taskType !\u003d null : \"Somehow there was a null taskType. Not stonks!\\n\";"},{"lineNumber":101,"author":{"gitId":"yhtMinceraft1010X"},"content":"        switch(taskType) {"},{"lineNumber":102,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case TODO_TYPE:"},{"lineNumber":103,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return \"todo\";"},{"lineNumber":104,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case DEADLINE_TYPE:"},{"lineNumber":105,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return \"deadline\";"},{"lineNumber":106,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case EVENT_TYPE:"},{"lineNumber":107,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return \"event\";"},{"lineNumber":108,"author":{"gitId":"yhtMinceraft1010X"},"content":"        default:"},{"lineNumber":109,"author":{"gitId":"yhtMinceraft1010X"},"content":"            throw new InputMismatchException(\"The task type in task is invalid. Not Stonks!\\n\");"},{"lineNumber":110,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":113,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private String printFileLoadOutput(List\u003cTask\u003e taskList) {"},{"lineNumber":114,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String outputString \u003d \"\";"},{"lineNumber":115,"author":{"gitId":"yhtMinceraft1010X"},"content":"        int total \u003d taskList.size();"},{"lineNumber":116,"author":{"gitId":"yhtMinceraft1010X"},"content":"        for (int i \u003d 0; i \u003c total; i++) {"},{"lineNumber":117,"author":{"gitId":"yhtMinceraft1010X"},"content":"            Task task \u003d taskList.get(i);"},{"lineNumber":118,"author":{"gitId":"yhtMinceraft1010X"},"content":"            String printTaskType \u003d spellTaskType(task.getType());"},{"lineNumber":119,"author":{"gitId":"yhtMinceraft1010X"},"content":"            outputString +\u003d String.format(\"Meme Man has added %s task from file: %s\\n\", printTaskType, task);"},{"lineNumber":120,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"yhtMinceraft1010X"},"content":"        outputString +\u003d String.format(\"Total number of tasks loaded from file: %s\\n\", total);"},{"lineNumber":122,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return outputString;"},{"lineNumber":123,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":125,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private void convertToTasks(String taskType, String description, boolean taskDone) {"},{"lineNumber":126,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assert taskType !\u003d null : \"Somehow there was a null taskType. Not stonks!\\n\";"},{"lineNumber":127,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assert description !\u003d null : \"Somehow, description was empty. Not stonks!\\n\";"},{"lineNumber":128,"author":{"gitId":"yhtMinceraft1010X"},"content":"        switch(taskType) {"},{"lineNumber":129,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case TODO_TYPE:"},{"lineNumber":130,"author":{"gitId":"yhtMinceraft1010X"},"content":"            addToDoFromFile(description, taskDone);"},{"lineNumber":131,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return;"},{"lineNumber":132,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case DEADLINE_TYPE:"},{"lineNumber":133,"author":{"gitId":"yhtMinceraft1010X"},"content":"            addDeadlineFromFile(description, taskDone);"},{"lineNumber":134,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return;"},{"lineNumber":135,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case EVENT_TYPE:"},{"lineNumber":136,"author":{"gitId":"yhtMinceraft1010X"},"content":"            addEventFromFile(description, taskDone);"},{"lineNumber":137,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return;"},{"lineNumber":138,"author":{"gitId":"yhtMinceraft1010X"},"content":"        default:"},{"lineNumber":139,"author":{"gitId":"yhtMinceraft1010X"},"content":"            throw new InputMismatchException(\"The task type scanned from file is invalid. Not Stonks!\\n\");"},{"lineNumber":140,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":143,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private void parseTaskFromFile(String fileLine) {"},{"lineNumber":144,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String[] taskComponents \u003d fileLine.split(\"/split/\");"},{"lineNumber":145,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String taskType \u003d taskComponents[0];"},{"lineNumber":146,"author":{"gitId":"yhtMinceraft1010X"},"content":"        boolean taskDone \u003d parseDoneFromInt(Integer.valueOf(taskComponents[1]));"},{"lineNumber":147,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String description \u003d taskComponents[2];"},{"lineNumber":148,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":149,"author":{"gitId":"yhtMinceraft1010X"},"content":"        //Convert to Task objects"},{"lineNumber":150,"author":{"gitId":"yhtMinceraft1010X"},"content":"        convertToTasks(taskType, description, taskDone);"},{"lineNumber":151,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":153,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":154,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Parses lines that were loaded form file into tasks."},{"lineNumber":155,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param fileLines Lines from the loaded file."},{"lineNumber":156,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return String of tasks successfully loaded from files."},{"lineNumber":157,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":158,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public String parseFileLines(List\u003cString\u003e fileLines) {"},{"lineNumber":159,"author":{"gitId":"yhtMinceraft1010X"},"content":"        for (int i \u003d 0; i \u003c fileLines.size(); i++) {"},{"lineNumber":160,"author":{"gitId":"yhtMinceraft1010X"},"content":"            parseTaskFromFile(fileLines.get(i));"},{"lineNumber":161,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"yhtMinceraft1010X"},"content":"        //Obtain list for printing"},{"lineNumber":163,"author":{"gitId":"yhtMinceraft1010X"},"content":"        List\u003cTask\u003e taskList \u003d getTaskList();"},{"lineNumber":164,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return printFileLoadOutput(taskList);"},{"lineNumber":165,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":167,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private boolean parseDoneFromInt(int doneInt) {"},{"lineNumber":168,"author":{"gitId":"yhtMinceraft1010X"},"content":"        switch(doneInt) {"},{"lineNumber":169,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case 1:"},{"lineNumber":170,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return true;"},{"lineNumber":171,"author":{"gitId":"yhtMinceraft1010X"},"content":"        case 0:"},{"lineNumber":172,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return false;"},{"lineNumber":173,"author":{"gitId":"yhtMinceraft1010X"},"content":"        default:"},{"lineNumber":174,"author":{"gitId":"yhtMinceraft1010X"},"content":"            throw new InputMismatchException("},{"lineNumber":175,"author":{"gitId":"yhtMinceraft1010X"},"content":"                    \"doneInt is not correct. Check the file to see if doneInt is 0 or 1. Not stonks!\\n\");"},{"lineNumber":176,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":177,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":178,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":179,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private ToDoTask addToDoFromFile(String taskDescription, boolean isDone) {"},{"lineNumber":180,"author":{"gitId":"yhtMinceraft1010X"},"content":"        if (taskDescription.isEmpty()) {"},{"lineNumber":181,"author":{"gitId":"yhtMinceraft1010X"},"content":"            throw new NoSuchElementException(\"Empty todo task description. Not stonks!\\n\");"},{"lineNumber":182,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":183,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":184,"author":{"gitId":"yhtMinceraft1010X"},"content":"        ToDoTask newTask \u003d ToDoTask.loadToDoTaskFromFile(taskDescription.trim(), isDone);"},{"lineNumber":185,"author":{"gitId":"yhtMinceraft1010X"},"content":"        addTask(newTask);"},{"lineNumber":186,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return newTask;"},{"lineNumber":187,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":189,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private LocalDateTime parseDate(String dateString) {"},{"lineNumber":190,"author":{"gitId":"yhtMinceraft1010X"},"content":"        try {"},{"lineNumber":191,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return LocalDateTime.parse(dateString);"},{"lineNumber":192,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":193,"author":{"gitId":"yhtMinceraft1010X"},"content":"            throw new IllegalArgumentException(\"Input date time format is incorrect. Not stonks!\\n\");"},{"lineNumber":194,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":195,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":196,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":197,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private DeadlineTask addDeadlineFromFile(String taskDescription, boolean isDone) {"},{"lineNumber":198,"author":{"gitId":"yhtMinceraft1010X"},"content":"        if (taskDescription.isEmpty()) {"},{"lineNumber":199,"author":{"gitId":"yhtMinceraft1010X"},"content":"            throw new NoSuchElementException(\"Empty deadline task description. Not stonks!\\n\");"},{"lineNumber":200,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":201,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":202,"author":{"gitId":"yhtMinceraft1010X"},"content":"        //Split the description into description and deadline"},{"lineNumber":203,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String[] descriptionSplitArray \u003d taskDescription.split(\"/by\");"},{"lineNumber":204,"author":{"gitId":"yhtMinceraft1010X"},"content":"        try {"},{"lineNumber":205,"author":{"gitId":"yhtMinceraft1010X"},"content":"            LocalDateTime deadlineDateTime \u003d parseDate(descriptionSplitArray[1].trim());"},{"lineNumber":206,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":207,"author":{"gitId":"yhtMinceraft1010X"},"content":"            //Create Deadline task"},{"lineNumber":208,"author":{"gitId":"yhtMinceraft1010X"},"content":"            DeadlineTask newTask \u003d DeadlineTask.loadDeadlineTaskFromFile(descriptionSplitArray[0].trim(),"},{"lineNumber":209,"author":{"gitId":"yhtMinceraft1010X"},"content":"                    deadlineDateTime, isDone);"},{"lineNumber":210,"author":{"gitId":"yhtMinceraft1010X"},"content":"            addTask(newTask);"},{"lineNumber":211,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return newTask;"},{"lineNumber":212,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } catch (ArrayIndexOutOfBoundsException e) { //Happens if split does not occur"},{"lineNumber":213,"author":{"gitId":"yhtMinceraft1010X"},"content":"            throw new ArrayIndexOutOfBoundsException(\"Wrong formatting. Did you forget to put \u0027/by\u0027? Not stonks!\\n\");"},{"lineNumber":214,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":215,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":217,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private EventTask addEventFromFile(String taskDescription, boolean isDone) {"},{"lineNumber":218,"author":{"gitId":"yhtMinceraft1010X"},"content":"        if (taskDescription.isEmpty()) {"},{"lineNumber":219,"author":{"gitId":"yhtMinceraft1010X"},"content":"            throw new NoSuchElementException(\"Empty event task description. Not stonks!\\n\");"},{"lineNumber":220,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":221,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":222,"author":{"gitId":"yhtMinceraft1010X"},"content":"        //Split the description into description and event"},{"lineNumber":223,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String[] descriptionSplitArray \u003d taskDescription.split(\"/at\");"},{"lineNumber":224,"author":{"gitId":"yhtMinceraft1010X"},"content":"        try {"},{"lineNumber":225,"author":{"gitId":"yhtMinceraft1010X"},"content":"            LocalDateTime eventDateTime \u003d parseDate(descriptionSplitArray[1].trim());"},{"lineNumber":226,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":227,"author":{"gitId":"yhtMinceraft1010X"},"content":"            //Create Event task"},{"lineNumber":228,"author":{"gitId":"yhtMinceraft1010X"},"content":"            EventTask newTask \u003d EventTask.loadEventTaskFromFile(descriptionSplitArray[0].trim(),"},{"lineNumber":229,"author":{"gitId":"yhtMinceraft1010X"},"content":"                    eventDateTime, isDone);"},{"lineNumber":230,"author":{"gitId":"yhtMinceraft1010X"},"content":"            addTask(newTask);"},{"lineNumber":231,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return newTask;"},{"lineNumber":232,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } catch (ArrayIndexOutOfBoundsException e) { //Happens if split does not occur"},{"lineNumber":233,"author":{"gitId":"yhtMinceraft1010X"},"content":"            throw new ArrayIndexOutOfBoundsException(\"Wrong formatting. Did you forget to put \u0027/at\u0027? Not stonks!\\n\");"},{"lineNumber":234,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":235,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":236,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":237,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":238,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Generates list of tasks for saving into a file."},{"lineNumber":239,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return List of tasks in file string format."},{"lineNumber":240,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":241,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public List\u003cString\u003e convertTasksForFile() {"},{"lineNumber":242,"author":{"gitId":"yhtMinceraft1010X"},"content":"        List\u003cTask\u003e rawTaskList \u003d getTaskList();"},{"lineNumber":243,"author":{"gitId":"yhtMinceraft1010X"},"content":"        List\u003cString\u003e fileTaskList \u003d rawTaskList.stream().map(x -\u003e x.saveTask()).collect(Collectors.toList());"},{"lineNumber":244,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return fileTaskList;"},{"lineNumber":245,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":246,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":247,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":248,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Converts list of tasks into string form for printing."},{"lineNumber":249,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return List of tasks in print string format."},{"lineNumber":250,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @throws SurrealException If list is empty."},{"lineNumber":251,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":252,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public String listOutTasks() throws SurrealException {"},{"lineNumber":253,"author":{"gitId":"yhtMinceraft1010X"},"content":"        List\u003cTask\u003e rawTaskList \u003d getTaskList();"},{"lineNumber":254,"author":{"gitId":"yhtMinceraft1010X"},"content":"        if (rawTaskList.isEmpty()) {"},{"lineNumber":255,"author":{"gitId":"yhtMinceraft1010X"},"content":"            throw new SurrealException(\"I have nothing to print. Not stonks!\\n\");"},{"lineNumber":256,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":257,"author":{"gitId":"yhtMinceraft1010X"},"content":"        String outputTasks \u003d \"\";"},{"lineNumber":258,"author":{"gitId":"yhtMinceraft1010X"},"content":"        for (int i \u003d 1; i \u003c\u003d rawTaskList.size(); i++) {"},{"lineNumber":259,"author":{"gitId":"yhtMinceraft1010X"},"content":"            outputTasks +\u003d String.format(\"%d. %s\\n\", i, rawTaskList.get(i - 1));"},{"lineNumber":260,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":261,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return outputTasks;"},{"lineNumber":262,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":263,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":264,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":265,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Obtains the tasks with keyword and corresponding numbers."},{"lineNumber":266,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param keyword The keyword for which to search."},{"lineNumber":267,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return List of tasks with their corresponding numbers in string form."},{"lineNumber":268,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":269,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public List\u003cString\u003e getSearchResults(String keyword) {"},{"lineNumber":270,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assert keyword !\u003d null : \"Null keyword somehow bypassed FindCommand exception. Not stonks!\\n\";"},{"lineNumber":271,"author":{"gitId":"yhtMinceraft1010X"},"content":"        List\u003cString\u003e searchResults \u003d new ArrayList\u003cString\u003e();"},{"lineNumber":272,"author":{"gitId":"yhtMinceraft1010X"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"},{"lineNumber":273,"author":{"gitId":"yhtMinceraft1010X"},"content":"            Task task \u003d taskList.get(i - 1);"},{"lineNumber":274,"author":{"gitId":"yhtMinceraft1010X"},"content":"            if (task.toString().toLowerCase().contains(keyword.toLowerCase())) {"},{"lineNumber":275,"author":{"gitId":"yhtMinceraft1010X"},"content":"                String taskString \u003d String.format(\"%d. %s\\n\", i, task);"},{"lineNumber":276,"author":{"gitId":"yhtMinceraft1010X"},"content":"                searchResults.add(taskString);"},{"lineNumber":277,"author":{"gitId":"yhtMinceraft1010X"},"content":"            }"},{"lineNumber":278,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":279,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return searchResults;"},{"lineNumber":280,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":281,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":281}},{"path":"src/main/java/surrealchat/task/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.task;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":" * Represents a task with no condition."},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":" */"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class ToDoTask extends Task {"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private ToDoTask(String taskDescription, boolean isDone) {"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"        super(taskDescription, \"T\", isDone);"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Creates new instance of ToDoTask object."},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param taskDescription The description of new task."},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return New ToDoTask that is not done."},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public static ToDoTask createNewToDoTask(String taskDescription) {"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return new ToDoTask(taskDescription, false);"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Creates instance of ToDoTask based on what was loaded from file."},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param taskDescription The description of new task."},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param isDone Whether task was previously marked as done."},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return ToDoTask as loaded from file."},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public static ToDoTask loadToDoTaskFromFile(String taskDescription, boolean isDone) {"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return new ToDoTask(taskDescription, isDone);"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Changes the description of the ToDoTask"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @param newDescription New description of the task."},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return New ToDoTask with edited description"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public ToDoTask editDescription(String newDescription) {"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return new ToDoTask(newDescription, isDone);"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Toggles a ToDoTask between done and undone."},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * @return ToDoTask that is marked as done/undone."},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public ToDoTask markAsDone() {"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010X"},"content":"        return new ToDoTask(getDescription(), !isDone);"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":46}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"  \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"  \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"  \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"  \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"yhtMinceraft1010X":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":"  \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"    \u003cTextField fx:id\u003d\"textField\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"Speak now or forever hold your peace!\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"SPEAK\" /\u003e"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"      \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"      \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"  \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"yhtMinceraft1010X":19}},{"path":"src/test/java/surrealchat/easteregg/EasterEggTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.easteregg;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class EasterEggTest {"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private static final String ORANG_OUTPUT \u003d \"Meme Man: ORANG! IT S U...\\n\""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"            + \"Orang: No you can\u0027t SU\\n\""},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":"            + \"Meme Man: ANGERY!\\n\";"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private static final String VEGETAL_OUTPUT \u003d \"Vegetal: Did someone said... NO VEGETALS?\\n\""},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"            + \"Meme Man: I taste a vegetal... ANGERY!\\n\";"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Tests the execute() function on OrangEasterEgg and VegetalEasterEgg."},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void testEasterEggOutput() {"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(new OrangEasterEgg().execute(), ORANG_OUTPUT);"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(new VegetalEasterEgg().execute(), VEGETAL_OUTPUT);"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":22}},{"path":"src/test/java/surrealchat/exception/SurrealExceptionTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.exception;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.task.TaskManagement;"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class SurrealExceptionTest {"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private String printEmptyList() {"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"        try {"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return new TaskManagement(new ArrayList\u003c\u003e()).listOutTasks();"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"        } catch (SurrealException e) {"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"            return e.getMessage();"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Tests whether exception prints correct output upon trying to list out tasks from empty list."},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void testNothingToPrint() {"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(printEmptyList(), \"I have nothing to print. Not stonks!\\n\");"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":27}},{"path":"src/test/java/surrealchat/help/HelpModeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.help;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.command.DeadlineCommand;"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.command.DeleteCommand;"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.command.DoneCommand;"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.command.EditCommand;"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.command.EventCommand;"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.command.FindCommand;"},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.command.ListCommand;"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.command.ToDoCommand;"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.easteregg.OrangEasterEgg;"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"import surrealchat.easteregg.VegetalEasterEgg;"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class HelpModeTest {"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private static final String TODO_HELP \u003d ToDoCommand.displayHelp();"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private static final String DEADLINE_HELP \u003d DeadlineCommand.displayHelp();"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private static final String EVENT_HELP \u003d EventCommand.displayHelp();"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private static final String DONE_HELP \u003d DoneCommand.displayHelp();"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private static final String FIND_HELP \u003d FindCommand.displayHelp();"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private static final String LIST_HELP \u003d ListCommand.displayHelp();"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private static final String EDIT_HELP \u003d EditCommand.displayHelp();"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private static final String DELETE_HELP \u003d DeleteCommand.displayHelp();"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private static final String ORANG_HELP \u003d OrangEasterEgg.displayHelp();"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private static final String VEGETAL_HELP \u003d VegetalEasterEgg.displayHelp();"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Tests the functionality of displayHelp() method in HelpMode class."},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void testDisplayHelp() {"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(HelpMode.displayHelp(\"todo\"), HelpModeTest.TODO_HELP);"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(HelpMode.displayHelp(\"deadline\"), HelpModeTest.DEADLINE_HELP);"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(HelpMode.displayHelp(\"event\"), HelpModeTest.EVENT_HELP);"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(HelpMode.displayHelp(\"done\"), HelpModeTest.DONE_HELP);"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(HelpMode.displayHelp(\"find\"), HelpModeTest.FIND_HELP);"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(HelpMode.displayHelp(\"list\"), HelpModeTest.LIST_HELP);"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(HelpMode.displayHelp(\"edit\"), HelpModeTest.EDIT_HELP);"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(HelpMode.displayHelp(\"delete\"), HelpModeTest.DELETE_HELP);"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(HelpMode.displayHelp(\"orang\"), HelpModeTest.ORANG_HELP);"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(HelpMode.displayHelp(\"vegetal\"), HelpModeTest.VEGETAL_HELP);"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":47}},{"path":"src/test/java/surrealchat/task/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.task;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class DeadlineTaskTest {"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private static final String TEST_DESCRIPTION \u003d \"Do CS2103T quiz\";"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private static final LocalDateTime TEST_DEADLINE \u003d LocalDateTime.parse(\"2020-10-21T10:10:10\");"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private static final DeadlineTask STARTING_TASK \u003d DeadlineTask.createNewDeadlineTask("},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"            DeadlineTaskTest.TEST_DESCRIPTION, DeadlineTaskTest.TEST_DEADLINE);"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Tests the functionality of toString() method in DeadlineTask class."},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void testPrintStringConversion() {"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(DeadlineTaskTest.STARTING_TASK.toString(),"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"                \"[D][\\u2718] Do CS2103T quiz (by: 2020-10-21, 10:10:10)\");"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Tests the functionality of saveTask() method in DeadlineTask class."},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void testFileStringConversion() {"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(DeadlineTaskTest.STARTING_TASK.saveTask(),"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"                \"D/split/0/split/Do CS2103T quiz /by 2020-10-21T10:10:10\");"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Tests whether getType() returns \"D\" for DeadlineTask."},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void testDeadlineTaskType() {"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(DeadlineTaskTest.STARTING_TASK.getType(),"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010X"},"content":"                \"D\");"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Tests functionality of getDescription()."},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Test"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void testGetDescription() {"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(DeadlineTaskTest.STARTING_TASK.getDescription(),"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010X"},"content":"                \"Do CS2103T quiz\");"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Tests functionality of editDescription()."},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Test"},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void testEditDescription() {"},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(DeadlineTaskTest.STARTING_TASK.editDescription(\"Eat biscuits\").getDescription(),"},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010X"},"content":"                \"Eat biscuits\");"},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Tests functionality of whether task can be marked as done."},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Test"},{"lineNumber":64,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void testMarkDone() {"},{"lineNumber":65,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(DeadlineTaskTest.STARTING_TASK.markAsDone().toString(),"},{"lineNumber":66,"author":{"gitId":"yhtMinceraft1010X"},"content":"                \"[D][\\u2713] Do CS2103T quiz (by: 2020-10-21, 10:10:10)\");"},{"lineNumber":67,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":69,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Tests functionality of whether task can be marked as undone after being marked as done."},{"lineNumber":71,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Test"},{"lineNumber":73,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void testMarkUndone() {"},{"lineNumber":74,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(DeadlineTaskTest.STARTING_TASK.markAsDone().markAsDone().toString(),"},{"lineNumber":75,"author":{"gitId":"yhtMinceraft1010X"},"content":"                \"[D][\\u2718] Do CS2103T quiz (by: 2020-10-21, 10:10:10)\");"},{"lineNumber":76,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":77}},{"path":"src/test/java/surrealchat/task/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.task;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class EventTaskTest {"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private static final String TEST_DESCRIPTION \u003d \"Do CS2103T quiz\";"},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private static final LocalDateTime TEST_EVENT \u003d LocalDateTime.parse(\"2020-10-21T10:10:10\");"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private static final EventTask STARTING_TASK \u003d EventTask.createNewEventTask("},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"            EventTaskTest.TEST_DESCRIPTION, EventTaskTest.TEST_EVENT);"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Tests the functionality of toString() method in EventTask class."},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void testPrintStringConversion() {"},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(EventTaskTest.STARTING_TASK.toString(),"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"                \"[E][\\u2718] Do CS2103T quiz (at: 2020-10-21, 10:10:10)\");"},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Tests the functionality of saveTask() method in EventTask class."},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void testFileStringConversion() {"},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(EventTaskTest.STARTING_TASK.saveTask(),"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"                \"E/split/0/split/Do CS2103T quiz /at 2020-10-21T10:10:10\");"},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Tests whether getType() returns \"E\" for EventTask."},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void testEventTaskType() {"},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(EventTaskTest.STARTING_TASK.getType(),"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010X"},"content":"                \"E\");"},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Tests functionality of getDescription()."},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Test"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void testGetDescription() {"},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(EventTaskTest.STARTING_TASK.getDescription(),"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010X"},"content":"                \"Do CS2103T quiz\");"},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Tests functionality of editDescription()."},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Test"},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void testEditDescription() {"},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(EventTaskTest.STARTING_TASK.editDescription(\"Eat biscuits\").getDescription(),"},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010X"},"content":"                \"Eat biscuits\");"},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Tests functionality of whether task can be marked as done."},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Test"},{"lineNumber":64,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void testMarkDone() {"},{"lineNumber":65,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(EventTaskTest.STARTING_TASK.markAsDone().toString(),"},{"lineNumber":66,"author":{"gitId":"yhtMinceraft1010X"},"content":"                \"[E][\\u2713] Do CS2103T quiz (at: 2020-10-21, 10:10:10)\");"},{"lineNumber":67,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":69,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Tests functionality of whether task can be marked as undone after being marked as done."},{"lineNumber":71,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Test"},{"lineNumber":73,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void testMarkUndone() {"},{"lineNumber":74,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(EventTaskTest.STARTING_TASK.markAsDone().markAsDone().toString(),"},{"lineNumber":75,"author":{"gitId":"yhtMinceraft1010X"},"content":"                \"[E][\\u2718] Do CS2103T quiz (at: 2020-10-21, 10:10:10)\");"},{"lineNumber":76,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":77}},{"path":"src/test/java/surrealchat/task/ToDoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yhtMinceraft1010X"},"content":"package surrealchat.task;"},{"lineNumber":2,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":3,"author":{"gitId":"yhtMinceraft1010X"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":5,"author":{"gitId":"yhtMinceraft1010X"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":7,"author":{"gitId":"yhtMinceraft1010X"},"content":"public class ToDoTaskTest {"},{"lineNumber":8,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private static final String TEST_DESCRIPTION \u003d \"Do CS2103T quiz\";"},{"lineNumber":9,"author":{"gitId":"yhtMinceraft1010X"},"content":"    private static final ToDoTask STARTING_TASK \u003d ToDoTask.createNewToDoTask(TEST_DESCRIPTION);"},{"lineNumber":10,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":11,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Tests the functionality of toString() method in ToDoTask class."},{"lineNumber":13,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void testPrintStringConversion() {"},{"lineNumber":16,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(ToDoTaskTest.STARTING_TASK.toString(),"},{"lineNumber":17,"author":{"gitId":"yhtMinceraft1010X"},"content":"                \"[T][\\u2718] Do CS2103T quiz\");"},{"lineNumber":18,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":20,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Tests the functionality of saveTask() method in ToDoTask class."},{"lineNumber":22,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void testFileStringConversion() {"},{"lineNumber":25,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(ToDoTaskTest.STARTING_TASK.saveTask(),"},{"lineNumber":26,"author":{"gitId":"yhtMinceraft1010X"},"content":"                \"T/split/0/split/Do CS2103T quiz\");"},{"lineNumber":27,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":29,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Tests whether getType() returns \"D\" for ToDoTask."},{"lineNumber":31,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void testToDoTaskType() {"},{"lineNumber":34,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(ToDoTaskTest.STARTING_TASK.getType(),"},{"lineNumber":35,"author":{"gitId":"yhtMinceraft1010X"},"content":"                \"T\");"},{"lineNumber":36,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":38,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Tests functionality of getDescription()."},{"lineNumber":40,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void testGetDescription() {"},{"lineNumber":43,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(ToDoTaskTest.STARTING_TASK.getDescription(),"},{"lineNumber":44,"author":{"gitId":"yhtMinceraft1010X"},"content":"                \"Do CS2103T quiz\");"},{"lineNumber":45,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":47,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Tests functionality of editDescription()."},{"lineNumber":49,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void testEditDescription() {"},{"lineNumber":52,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(ToDoTaskTest.STARTING_TASK.editDescription(\"Eat biscuits\").getDescription(),"},{"lineNumber":53,"author":{"gitId":"yhtMinceraft1010X"},"content":"                \"Eat biscuits\");"},{"lineNumber":54,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":56,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Tests functionality of whether task can be marked as done."},{"lineNumber":58,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Test"},{"lineNumber":60,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void testMarkDone() {"},{"lineNumber":61,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(ToDoTaskTest.STARTING_TASK.markAsDone().toString(),"},{"lineNumber":62,"author":{"gitId":"yhtMinceraft1010X"},"content":"                \"[T][\\u2713] Do CS2103T quiz\");"},{"lineNumber":63,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"yhtMinceraft1010X"},"content":""},{"lineNumber":65,"author":{"gitId":"yhtMinceraft1010X"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"yhtMinceraft1010X"},"content":"     * Tests functionality of whether task can be marked as undone after being marked as done."},{"lineNumber":67,"author":{"gitId":"yhtMinceraft1010X"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"yhtMinceraft1010X"},"content":"    @Test"},{"lineNumber":69,"author":{"gitId":"yhtMinceraft1010X"},"content":"    public void testMarkUndone() {"},{"lineNumber":70,"author":{"gitId":"yhtMinceraft1010X"},"content":"        assertEquals(ToDoTaskTest.STARTING_TASK.markAsDone().markAsDone().toString(),"},{"lineNumber":71,"author":{"gitId":"yhtMinceraft1010X"},"content":"                \"[T][\\u2718] Do CS2103T quiz\");"},{"lineNumber":72,"author":{"gitId":"yhtMinceraft1010X"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"yhtMinceraft1010X"},"content":"}"}],"authorContributionMap":{"yhtMinceraft1010X":73}}]
