[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"HuaiZe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"HuaiZe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"HuaiZe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"HuaiZe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"HuaiZe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"HuaiZe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"HuaiZe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"HuaiZe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"HuaiZe"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"HuaiZe":16,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":"Duke is a Personal Assistant Chatbot that helps users to manage their tasks."},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":"### Add new tasks"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"You can add 4 different types of tasks in Duke:"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"* **Todo** - *Tasks that can be done anytime*"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":"* **Deadline** - *Tasks that must be completed before a specific date/time*"},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":"* **Event** - *Events that are occurring at a specific date/time*"},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":"* **Fixed Duration** - *Tasks that take a fixed amount of time to complete but do not have a fixed start/end time*"},{"lineNumber":12,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"### Delete tasks"},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"You can delete existing tasks in Duke."},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":"### Mark tasks as completed"},{"lineNumber":17,"author":{"gitId":"HuaiZe"},"content":"You can mark existing tasks as completed in Duke."},{"lineNumber":18,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":19,"author":{"gitId":"HuaiZe"},"content":"### List tasks"},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":"You can list all existing tasks in Duke."},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":22,"author":{"gitId":"HuaiZe"},"content":"### Find tasks"},{"lineNumber":23,"author":{"gitId":"HuaiZe"},"content":"You can search through all tasks in Duke and find tasks matching the keyword(s)."},{"lineNumber":24,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":25,"author":{"gitId":"HuaiZe"},"content":"### Save and load tasks"},{"lineNumber":26,"author":{"gitId":"HuaiZe"},"content":"All tasks will be automatically saved into a local file when you exit Duke, and are loaded when you start"},{"lineNumber":27,"author":{"gitId":"HuaiZe"},"content":"the application."},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":30,"author":{"gitId":"HuaiZe"},"content":"**Note:**  "},{"lineNumber":31,"author":{"gitId":"HuaiZe"},"content":"Words in `UPPER_CASE` are the parameters to be supplied by the user.  "},{"lineNumber":32,"author":{"gitId":"HuaiZe"},"content":"*e.g. in `t DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as `t Read book`.*"},{"lineNumber":33,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":34,"author":{"gitId":"HuaiZe"},"content":"### `t` - Add a new Todo task "},{"lineNumber":35,"author":{"gitId":"HuaiZe"},"content":"Adds a new Todo task."},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"HuaiZe"},"content":"Format: `t DESCRIPTION`"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"HuaiZe"},"content":"Example of usage:  "},{"lineNumber":40,"author":{"gitId":"HuaiZe"},"content":"`t Read book`"},{"lineNumber":41,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":42,"author":{"gitId":"HuaiZe"},"content":"Expected outcome:"},{"lineNumber":43,"author":{"gitId":"HuaiZe"},"content":"\u003cpre\u003e"},{"lineNumber":44,"author":{"gitId":"HuaiZe"},"content":"Got it! I\u0027ve added this task:"},{"lineNumber":45,"author":{"gitId":"HuaiZe"},"content":"    [T][] Read book"},{"lineNumber":46,"author":{"gitId":"HuaiZe"},"content":"Now you have 1 task in the list."},{"lineNumber":47,"author":{"gitId":"HuaiZe"},"content":"\u003c/pre\u003e"},{"lineNumber":48,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":49,"author":{"gitId":"HuaiZe"},"content":"### `d` - Add a new Deadline task"},{"lineNumber":50,"author":{"gitId":"HuaiZe"},"content":"Adds a new Deadline task.  "},{"lineNumber":51,"author":{"gitId":"HuaiZe"},"content":"Input date should be in **yyyy-mm-dd format**."},{"lineNumber":52,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":53,"author":{"gitId":"HuaiZe"},"content":"Format: `d DESCRIPTION /by DATE`"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"Example of usage:  "},{"lineNumber":56,"author":{"gitId":"HuaiZe"},"content":"`d Return book /by 2021-03-05`"},{"lineNumber":57,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":58,"author":{"gitId":"HuaiZe"},"content":"Expected outcome:"},{"lineNumber":59,"author":{"gitId":"HuaiZe"},"content":"\u003cpre\u003e"},{"lineNumber":60,"author":{"gitId":"HuaiZe"},"content":"Got it! I\u0027ve added this task:"},{"lineNumber":61,"author":{"gitId":"HuaiZe"},"content":"    [D][] Return book (by: Mar 05 2021)"},{"lineNumber":62,"author":{"gitId":"HuaiZe"},"content":"Now you have 2 tasks in the list."},{"lineNumber":63,"author":{"gitId":"HuaiZe"},"content":"\u003c/pre\u003e"},{"lineNumber":64,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":65,"author":{"gitId":"HuaiZe"},"content":"### `e` - Add a new Event task"},{"lineNumber":66,"author":{"gitId":"HuaiZe"},"content":"Adds a new Event task.  "},{"lineNumber":67,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":68,"author":{"gitId":"HuaiZe"},"content":"Format: `e DESCRIPTION /at DATE`"},{"lineNumber":69,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":70,"author":{"gitId":"HuaiZe"},"content":"Example of usage:  "},{"lineNumber":71,"author":{"gitId":"HuaiZe"},"content":"`e Project meeting /at Mon 5pm`"},{"lineNumber":72,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":73,"author":{"gitId":"HuaiZe"},"content":"Expected outcome:"},{"lineNumber":74,"author":{"gitId":"HuaiZe"},"content":"\u003cpre\u003e"},{"lineNumber":75,"author":{"gitId":"HuaiZe"},"content":"Got it! I\u0027ve added this task:"},{"lineNumber":76,"author":{"gitId":"HuaiZe"},"content":"    [E][] Project meeting (at: Mon 5pm)"},{"lineNumber":77,"author":{"gitId":"HuaiZe"},"content":"Now you have 3 tasks in the list."},{"lineNumber":78,"author":{"gitId":"HuaiZe"},"content":"\u003c/pre\u003e"},{"lineNumber":79,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":80,"author":{"gitId":"HuaiZe"},"content":"### `fd` - Add a new Fixed Duration task"},{"lineNumber":81,"author":{"gitId":"HuaiZe"},"content":"Adds a new Fixed Duration task.  "},{"lineNumber":82,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":83,"author":{"gitId":"HuaiZe"},"content":"Format: `fd DESCRIPTION /dur DURATION`"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"HuaiZe"},"content":"Example of usage:  "},{"lineNumber":86,"author":{"gitId":"HuaiZe"},"content":"`fd Fix bicycle /dur 1 hour`"},{"lineNumber":87,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":88,"author":{"gitId":"HuaiZe"},"content":"Expected outcome:"},{"lineNumber":89,"author":{"gitId":"HuaiZe"},"content":"\u003cpre\u003e"},{"lineNumber":90,"author":{"gitId":"HuaiZe"},"content":"Got it! I\u0027ve added this task:"},{"lineNumber":91,"author":{"gitId":"HuaiZe"},"content":"    [FD][] Fix bicycle (time required: 1 hour)"},{"lineNumber":92,"author":{"gitId":"HuaiZe"},"content":"Now you have 4 tasks in the list."},{"lineNumber":93,"author":{"gitId":"HuaiZe"},"content":"\u003c/pre\u003e"},{"lineNumber":94,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":95,"author":{"gitId":"HuaiZe"},"content":"### `delete` - Delete an existing task"},{"lineNumber":96,"author":{"gitId":"HuaiZe"},"content":"Deletes the task with the specified **index**."},{"lineNumber":97,"author":{"gitId":"-"},"content":""},{"lineNumber":98,"author":{"gitId":"HuaiZe"},"content":"Format: `delete INDEX`"},{"lineNumber":99,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":100,"author":{"gitId":"HuaiZe"},"content":"Example of usage:  "},{"lineNumber":101,"author":{"gitId":"HuaiZe"},"content":"`delete 2`"},{"lineNumber":102,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":103,"author":{"gitId":"HuaiZe"},"content":"Expected outcome:"},{"lineNumber":104,"author":{"gitId":"HuaiZe"},"content":"\u003cpre\u003e"},{"lineNumber":105,"author":{"gitId":"HuaiZe"},"content":"Noted! I\u0027ve removed this task:"},{"lineNumber":106,"author":{"gitId":"HuaiZe"},"content":"    [D][] Return book (by: Mar 05 2021)"},{"lineNumber":107,"author":{"gitId":"HuaiZe"},"content":"Now you have 3 tasks in the list."},{"lineNumber":108,"author":{"gitId":"HuaiZe"},"content":"\u003c/pre\u003e"},{"lineNumber":109,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":110,"author":{"gitId":"HuaiZe"},"content":"### `done` - Mark an existing task as completed"},{"lineNumber":111,"author":{"gitId":"HuaiZe"},"content":"Marks the task with the specified **index** as completed."},{"lineNumber":112,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":113,"author":{"gitId":"HuaiZe"},"content":"Format: `done INDEX`"},{"lineNumber":114,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":115,"author":{"gitId":"HuaiZe"},"content":"Example of usage:  "},{"lineNumber":116,"author":{"gitId":"HuaiZe"},"content":"`done 1`"},{"lineNumber":117,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":118,"author":{"gitId":"HuaiZe"},"content":"Expected outcome:"},{"lineNumber":119,"author":{"gitId":"HuaiZe"},"content":"\u003cpre\u003e"},{"lineNumber":120,"author":{"gitId":"HuaiZe"},"content":"Nice! I\u0027ve marked this task as done:"},{"lineNumber":121,"author":{"gitId":"HuaiZe"},"content":"    [T][X] Read book"},{"lineNumber":122,"author":{"gitId":"HuaiZe"},"content":"\u003c/pre\u003e"},{"lineNumber":123,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":124,"author":{"gitId":"HuaiZe"},"content":"### `list` - List all existing tasks"},{"lineNumber":125,"author":{"gitId":"HuaiZe"},"content":"Lists all existing tasks.  "},{"lineNumber":126,"author":{"gitId":"HuaiZe"},"content":"The type and status icon of the task will be shown."},{"lineNumber":127,"author":{"gitId":"HuaiZe"},"content":"The status icon will be `[X]` for completed tasks and `[]` otherwise."},{"lineNumber":128,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":129,"author":{"gitId":"HuaiZe"},"content":"Format: `list`"},{"lineNumber":130,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":131,"author":{"gitId":"HuaiZe"},"content":"Example of usage:  "},{"lineNumber":132,"author":{"gitId":"HuaiZe"},"content":"`list`"},{"lineNumber":133,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":134,"author":{"gitId":"HuaiZe"},"content":"Expected outcome:"},{"lineNumber":135,"author":{"gitId":"HuaiZe"},"content":"\u003cpre\u003e"},{"lineNumber":136,"author":{"gitId":"HuaiZe"},"content":"Here are the tasks in your list:"},{"lineNumber":137,"author":{"gitId":"HuaiZe"},"content":"    1. [T][X] Read book"},{"lineNumber":138,"author":{"gitId":"HuaiZe"},"content":"    2. [E][] Project meeting (at: Mon 5pm)"},{"lineNumber":139,"author":{"gitId":"HuaiZe"},"content":"    3. [FD][] Fix bicycle (time required: 1 hour)"},{"lineNumber":140,"author":{"gitId":"HuaiZe"},"content":"\u003c/pre\u003e"},{"lineNumber":141,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":142,"author":{"gitId":"HuaiZe"},"content":"### `find` - Search tasks"},{"lineNumber":143,"author":{"gitId":"HuaiZe"},"content":"Finds all existing tasks matching the **keyword(s)**."},{"lineNumber":144,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":145,"author":{"gitId":"HuaiZe"},"content":"Format: `find KEYWORDS`"},{"lineNumber":146,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":147,"author":{"gitId":"HuaiZe"},"content":"Example of usage:  "},{"lineNumber":148,"author":{"gitId":"HuaiZe"},"content":"`find book`"},{"lineNumber":149,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":150,"author":{"gitId":"HuaiZe"},"content":"Expected outcome:"},{"lineNumber":151,"author":{"gitId":"HuaiZe"},"content":"\u003cpre\u003e"},{"lineNumber":152,"author":{"gitId":"HuaiZe"},"content":"Here are the matching tasks in your list:"},{"lineNumber":153,"author":{"gitId":"HuaiZe"},"content":"    1. [T][X] Read book"},{"lineNumber":154,"author":{"gitId":"HuaiZe"},"content":"\u003c/pre\u003e"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"HuaiZe"},"content":"### `bye` - Save tasks"},{"lineNumber":157,"author":{"gitId":"HuaiZe"},"content":"Saves all existing tasks to the hard disk.  "},{"lineNumber":158,"author":{"gitId":"HuaiZe"},"content":"**The user may now close the app.**"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"HuaiZe"},"content":"Format: `bye`"},{"lineNumber":161,"author":{"gitId":"-"},"content":""},{"lineNumber":162,"author":{"gitId":"HuaiZe"},"content":"Example of usage:  "},{"lineNumber":163,"author":{"gitId":"HuaiZe"},"content":"`bye`"},{"lineNumber":164,"author":{"gitId":"-"},"content":""},{"lineNumber":165,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":166,"author":{"gitId":"HuaiZe"},"content":"\u003cpre\u003e"},{"lineNumber":167,"author":{"gitId":"HuaiZe"},"content":"Bye! Hope to see you again soon!"},{"lineNumber":168,"author":{"gitId":"HuaiZe"},"content":"\u003c/pre\u003e"},{"lineNumber":169,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"HuaiZe":151,"-":18}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"HuaiZe"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"HuaiZe"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"HuaiZe"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"HuaiZe"},"content":" */"},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"HuaiZe"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"HuaiZe"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"HuaiZe"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":26,"author":{"gitId":"HuaiZe"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"HuaiZe"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"HuaiZe"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"HuaiZe"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"HuaiZe"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"HuaiZe"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"HuaiZe"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"HuaiZe"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"HuaiZe"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":36,"author":{"gitId":"HuaiZe"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"HuaiZe"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":40,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"HuaiZe"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":42,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"HuaiZe"},"content":"    private void flip() {"},{"lineNumber":44,"author":{"gitId":"HuaiZe"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":45,"author":{"gitId":"HuaiZe"},"content":"        Collections.reverse(tmp);"},{"lineNumber":46,"author":{"gitId":"HuaiZe"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":47,"author":{"gitId":"HuaiZe"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":48,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":50,"author":{"gitId":"HuaiZe"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":51,"author":{"gitId":"HuaiZe"},"content":"        return new DialogBox(text, img);"},{"lineNumber":52,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":54,"author":{"gitId":"HuaiZe"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"HuaiZe"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":56,"author":{"gitId":"HuaiZe"},"content":"        db.flip();"},{"lineNumber":57,"author":{"gitId":"HuaiZe"},"content":"        return db;"},{"lineNumber":58,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"HuaiZe"},"content":"}"}],"authorContributionMap":{"HuaiZe":59}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":" */"},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":"}"}],"authorContributionMap":{"HuaiZe":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":"import javafx.scene.Scene;"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":" * A GUI for Duke using FXML."},{"lineNumber":12,"author":{"gitId":"HuaiZe"},"content":" */"},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"public class Main extends Application {"},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":"    private Duke duke \u003d new Duke(\"tasks.txt\");"},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":17,"author":{"gitId":"HuaiZe"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"HuaiZe"},"content":"    public void start(Stage stage) {"},{"lineNumber":19,"author":{"gitId":"HuaiZe"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":22,"author":{"gitId":"HuaiZe"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":23,"author":{"gitId":"HuaiZe"},"content":"            stage.setTitle(\"Duke\");"},{"lineNumber":24,"author":{"gitId":"HuaiZe"},"content":"            stage.setResizable(false);"},{"lineNumber":25,"author":{"gitId":"HuaiZe"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"HuaiZe"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":27,"author":{"gitId":"HuaiZe"},"content":"            stage.show();"},{"lineNumber":28,"author":{"gitId":"HuaiZe"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"HuaiZe"},"content":"            e.printStackTrace();"},{"lineNumber":30,"author":{"gitId":"HuaiZe"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"HuaiZe"},"content":"}"}],"authorContributionMap":{"HuaiZe":32}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"import duke.Duke;"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":"import javafx.fxml.FXML;"},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"import javafx.scene.control.Button;"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":"import javafx.scene.image.Image;"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":12,"author":{"gitId":"HuaiZe"},"content":" */"},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"    @FXML"},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"HuaiZe"},"content":"    private VBox dialogContainer;"},{"lineNumber":18,"author":{"gitId":"HuaiZe"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"HuaiZe"},"content":"    private TextField userInput;"},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":"    private Button sendButton;"},{"lineNumber":22,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":23,"author":{"gitId":"HuaiZe"},"content":"    private Duke duke;"},{"lineNumber":24,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":25,"author":{"gitId":"HuaiZe"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/charmander.png\"));"},{"lineNumber":26,"author":{"gitId":"HuaiZe"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/squirtle.png\"));"},{"lineNumber":27,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":28,"author":{"gitId":"HuaiZe"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"HuaiZe"},"content":"    public void initialize() {"},{"lineNumber":30,"author":{"gitId":"HuaiZe"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":31,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":33,"author":{"gitId":"HuaiZe"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":34,"author":{"gitId":"HuaiZe"},"content":"        duke \u003d d;"},{"lineNumber":35,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":37,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"HuaiZe"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":39,"author":{"gitId":"HuaiZe"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":40,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"HuaiZe"},"content":"    @FXML"},{"lineNumber":42,"author":{"gitId":"HuaiZe"},"content":"    private void handleUserInput() {"},{"lineNumber":43,"author":{"gitId":"HuaiZe"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":44,"author":{"gitId":"HuaiZe"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":45,"author":{"gitId":"HuaiZe"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":46,"author":{"gitId":"HuaiZe"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":47,"author":{"gitId":"HuaiZe"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":48,"author":{"gitId":"HuaiZe"},"content":"        );"},{"lineNumber":49,"author":{"gitId":"HuaiZe"},"content":"        userInput.clear();"},{"lineNumber":50,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"HuaiZe"},"content":"}"}],"authorContributionMap":{"HuaiZe":51}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":" * Represents a task that is to be completed by a deadline."},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":" */"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":"    private final String by;"},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":"    private final LocalDate date;"},{"lineNumber":12,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"     * Creates a new Deadline object with a description and deadline."},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":"     * If deadline is not properly formatted in yyyy-mm-dd format, the date attribute will be null."},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"HuaiZe"},"content":"     * @param description Description of the task."},{"lineNumber":18,"author":{"gitId":"HuaiZe"},"content":"     * @param by          Deadline that the task is to be completed by (in yyyy-mm-dd format)."},{"lineNumber":19,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":"        super(description);"},{"lineNumber":22,"author":{"gitId":"HuaiZe"},"content":"        this.by \u003d by;"},{"lineNumber":23,"author":{"gitId":"HuaiZe"},"content":"        date \u003d parseStringToDateTime(by);"},{"lineNumber":24,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":26,"author":{"gitId":"HuaiZe"},"content":"    private LocalDate parseStringToDateTime(String by) {"},{"lineNumber":27,"author":{"gitId":"HuaiZe"},"content":"        if (by.matches(\"\\\\d{4}-\\\\d{2}-\\\\d{2}\")) {"},{"lineNumber":28,"author":{"gitId":"HuaiZe"},"content":"            return LocalDate.parse(by);"},{"lineNumber":29,"author":{"gitId":"HuaiZe"},"content":"        } else {"},{"lineNumber":30,"author":{"gitId":"HuaiZe"},"content":"            return null;"},{"lineNumber":31,"author":{"gitId":"HuaiZe"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":34,"author":{"gitId":"HuaiZe"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"HuaiZe"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitId":"HuaiZe"},"content":"        String deadline;"},{"lineNumber":37,"author":{"gitId":"HuaiZe"},"content":"        if (date !\u003d null) {"},{"lineNumber":38,"author":{"gitId":"HuaiZe"},"content":"            DateTimeFormatter myFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":39,"author":{"gitId":"HuaiZe"},"content":"            deadline \u003d date.format(myFormatter);"},{"lineNumber":40,"author":{"gitId":"HuaiZe"},"content":"        } else {"},{"lineNumber":41,"author":{"gitId":"HuaiZe"},"content":"            deadline \u003d by;"},{"lineNumber":42,"author":{"gitId":"HuaiZe"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"HuaiZe"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";"},{"lineNumber":44,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":46,"author":{"gitId":"HuaiZe"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"HuaiZe"},"content":"    public String getTaskCommand() {"},{"lineNumber":48,"author":{"gitId":"HuaiZe"},"content":"        return \"d \" + getDescription() + \" /by \" + by;"},{"lineNumber":49,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"HuaiZe"},"content":"}"}],"authorContributionMap":{"HuaiZe":50}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":" * A Personal Assistant Chatbot that helps the user to keep track of various things."},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":" */"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"    private Storage storage;"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"    private Ui ui;"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":"    private Parser parser;"},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":"    private TaskList tasks;"},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":12,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"     * Creates a new Duke object."},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"     * Existing tasks previously saved, if any, will be loaded from the file specified by filePath."},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":"     * @param filePath Path of the file that tasks are to be loaded from and saved in."},{"lineNumber":17,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"HuaiZe"},"content":"    public Duke(String filePath) {"},{"lineNumber":19,"author":{"gitId":"HuaiZe"},"content":"        assert filePath.length() \u003e 0 : \"filePath cannot be empty\";"},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":"        ui \u003d new Ui();"},{"lineNumber":22,"author":{"gitId":"HuaiZe"},"content":"        parser \u003d new Parser();"},{"lineNumber":23,"author":{"gitId":"HuaiZe"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"HuaiZe"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":25,"author":{"gitId":"HuaiZe"},"content":"        } catch (LoadTasksException e) {"},{"lineNumber":26,"author":{"gitId":"HuaiZe"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":27,"author":{"gitId":"HuaiZe"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":30,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"HuaiZe"},"content":"     * Returns the response message that is to be displayed to the user depending"},{"lineNumber":32,"author":{"gitId":"HuaiZe"},"content":"     * on the input of the user."},{"lineNumber":33,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"HuaiZe"},"content":"     * @param input User input"},{"lineNumber":35,"author":{"gitId":"HuaiZe"},"content":"     * @return Response message."},{"lineNumber":36,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"HuaiZe"},"content":"    public String getResponse(String input) {"},{"lineNumber":38,"author":{"gitId":"HuaiZe"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"HuaiZe"},"content":"            return parser.handleInput(storage, ui, tasks, input);"},{"lineNumber":40,"author":{"gitId":"HuaiZe"},"content":"        } catch (EmptyDescriptionException e) {"},{"lineNumber":41,"author":{"gitId":"HuaiZe"},"content":"            return ui.getEmptyDescriptionErrorMsg();"},{"lineNumber":42,"author":{"gitId":"HuaiZe"},"content":"        } catch (InvalidCommandException e) {"},{"lineNumber":43,"author":{"gitId":"HuaiZe"},"content":"            return ui.getInvalidCommandErrorMsg();"},{"lineNumber":44,"author":{"gitId":"HuaiZe"},"content":"        } catch (WriteTasksException e) {"},{"lineNumber":45,"author":{"gitId":"HuaiZe"},"content":"            return ui.getWritingErrorMsg();"},{"lineNumber":46,"author":{"gitId":"HuaiZe"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"HuaiZe"},"content":"}"},{"lineNumber":49,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":50,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":51,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":52,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":53,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":54,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":55,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":56,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":57,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":58,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":59,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":60,"author":{"gitId":"HuaiZe"},"content":""}],"authorContributionMap":{"HuaiZe":59,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":" * Represents exceptions that are specific to the Duke program."},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":" */"},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"}"}],"authorContributionMap":{"HuaiZe":7}},{"path":"src/main/java/duke/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":" * An exception that is thrown when the user tries to create a task with no description."},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":" */"},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":"public class EmptyDescriptionException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"}"}],"authorContributionMap":{"HuaiZe":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":" * Represents an event that is occurring at a given date/time."},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":" */"},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"    private final String at;"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":"     * Creates a new Event object with a description and date/time of occurrence."},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"HuaiZe"},"content":"     * @param description Description of the event."},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"     * @param at          Date/time that the event is occurring at."},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":"    public Event(String description, String at) {"},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":"        super(description);"},{"lineNumber":17,"author":{"gitId":"HuaiZe"},"content":"        this.at \u003d at;"},{"lineNumber":18,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"HuaiZe"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":23,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":25,"author":{"gitId":"HuaiZe"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"HuaiZe"},"content":"    public String getTaskCommand() {"},{"lineNumber":27,"author":{"gitId":"HuaiZe"},"content":"        return \"e \" + getDescription() + \" /at \" + at;"},{"lineNumber":28,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"HuaiZe"},"content":"}"}],"authorContributionMap":{"HuaiZe":29}},{"path":"src/main/java/duke/FixedDurationTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":" * Represents a task that takes a fixed amount of time to complete but does not have a fixed"},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":" * start/end time."},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":" */"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"public class FixedDurationTask extends Task {"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"    private final String duration;"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":"     * Creates a new FixedDurationTask object with a description and duration."},{"lineNumber":12,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"     * @param description Description of the task."},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"     * @param duration    Duration needed to complete the task."},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":"    public FixedDurationTask(String description, String duration) {"},{"lineNumber":17,"author":{"gitId":"HuaiZe"},"content":"        super(description);"},{"lineNumber":18,"author":{"gitId":"HuaiZe"},"content":"        this.duration \u003d duration;"},{"lineNumber":19,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"HuaiZe"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"HuaiZe"},"content":"        return \"[FD]\" + super.toString() + \" (time required: \" + duration + \")\";"},{"lineNumber":24,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":26,"author":{"gitId":"HuaiZe"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"HuaiZe"},"content":"    public String getTaskCommand() {"},{"lineNumber":28,"author":{"gitId":"HuaiZe"},"content":"        return \"fd \" + getDescription() + \" /dur \" + duration;"},{"lineNumber":29,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"HuaiZe"},"content":"}"}],"authorContributionMap":{"HuaiZe":30}},{"path":"src/main/java/duke/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":" * An exception that is thrown when the user enters an invalid command."},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":" */"},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":"public class InvalidCommandException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"}"}],"authorContributionMap":{"HuaiZe":7}},{"path":"src/main/java/duke/LoadTasksException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":" * An exception that is thrown when an error is encountered while trying to load tasks"},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":" * from the hard disk."},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":" */"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"public class LoadTasksException extends DukeException {"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"}"}],"authorContributionMap":{"HuaiZe":8}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":" * A parser that deals with making sense of the user command."},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":" */"},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"     * Identifies the type of user command and calls the relevant method to perform the action."},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":"     * Commands accepted are list, done, delete, find, todo, deadline, event, fixedDur and bye."},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":"     * @param storage Storage object that deals with loading and saving tasks."},{"lineNumber":12,"author":{"gitId":"HuaiZe"},"content":"     * @param ui      Ui object that deals with interactions with the user."},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"     * @param tasks   TaskList that contains the list of Task objects."},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"     * @param cmd     Command entered by the user."},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":"     * @return Message to be displayed to the user after the command has been performed."},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":"     * @throws EmptyDescriptionException If the user tries to create a task without a description."},{"lineNumber":17,"author":{"gitId":"HuaiZe"},"content":"     * @throws InvalidCommandException   If the user enters an invalid command."},{"lineNumber":18,"author":{"gitId":"HuaiZe"},"content":"     * @throws WriteTasksException       If an error is encountered when trying to write tasks to the hard disk."},{"lineNumber":19,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":"    public String handleInput(Storage storage, Ui ui, TaskList tasks, String cmd) throws"},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":"            EmptyDescriptionException, InvalidCommandException, WriteTasksException {"},{"lineNumber":22,"author":{"gitId":"HuaiZe"},"content":"        if (cmd.equals(\"list\")) {"},{"lineNumber":23,"author":{"gitId":"HuaiZe"},"content":"            return ui.getListOfTasks(tasks.getPrintableTasks());"},{"lineNumber":24,"author":{"gitId":"HuaiZe"},"content":"        } else if (cmd.equals(\"bye\")) {"},{"lineNumber":25,"author":{"gitId":"HuaiZe"},"content":"            storage.writeTasksToDisk(tasks);"},{"lineNumber":26,"author":{"gitId":"HuaiZe"},"content":"            return ui.getExitMsg();"},{"lineNumber":27,"author":{"gitId":"HuaiZe"},"content":"        } else {"},{"lineNumber":28,"author":{"gitId":"HuaiZe"},"content":"            String[] arr \u003d cmd.split(\" \", 2);"},{"lineNumber":29,"author":{"gitId":"HuaiZe"},"content":"            switch (arr[0]) {"},{"lineNumber":30,"author":{"gitId":"HuaiZe"},"content":"            case \"find\":"},{"lineNumber":31,"author":{"gitId":"HuaiZe"},"content":"                return ui.getListOfFoundTasks(tasks.getPrintableTasksWithKeyword(arr[1]));"},{"lineNumber":32,"author":{"gitId":"HuaiZe"},"content":"            case \"done\":"},{"lineNumber":33,"author":{"gitId":"HuaiZe"},"content":"                int doneId \u003d Integer.parseInt(arr[1]);"},{"lineNumber":34,"author":{"gitId":"HuaiZe"},"content":"                tasks.markTaskAsDone(doneId);"},{"lineNumber":35,"author":{"gitId":"HuaiZe"},"content":"                return ui.getMarkTaskAsDoneMsg(tasks.getTaskString(doneId));"},{"lineNumber":36,"author":{"gitId":"HuaiZe"},"content":"            case \"delete\":"},{"lineNumber":37,"author":{"gitId":"HuaiZe"},"content":"                int deleteId \u003d Integer.parseInt(arr[1]);"},{"lineNumber":38,"author":{"gitId":"HuaiZe"},"content":"                String taskString \u003d tasks.getTaskString(deleteId);"},{"lineNumber":39,"author":{"gitId":"HuaiZe"},"content":"                tasks.deleteTask(deleteId);"},{"lineNumber":40,"author":{"gitId":"HuaiZe"},"content":"                return ui.getDeleteTaskMsg(taskString, tasks.getNumOfTasks());"},{"lineNumber":41,"author":{"gitId":"HuaiZe"},"content":"            case \"t\":"},{"lineNumber":42,"author":{"gitId":"HuaiZe"},"content":"                // Fallthrough"},{"lineNumber":43,"author":{"gitId":"HuaiZe"},"content":"            case \"d\":"},{"lineNumber":44,"author":{"gitId":"HuaiZe"},"content":"                // Fallthrough"},{"lineNumber":45,"author":{"gitId":"HuaiZe"},"content":"            case \"e\":"},{"lineNumber":46,"author":{"gitId":"HuaiZe"},"content":"                // Fallthrough"},{"lineNumber":47,"author":{"gitId":"HuaiZe"},"content":"            case \"fd\":"},{"lineNumber":48,"author":{"gitId":"HuaiZe"},"content":"                tasks.addTask(cmd);"},{"lineNumber":49,"author":{"gitId":"HuaiZe"},"content":"                int numOfTasks \u003d tasks.getNumOfTasks();"},{"lineNumber":50,"author":{"gitId":"HuaiZe"},"content":"                return ui.getAddTaskMsg(tasks.getTaskString(numOfTasks), numOfTasks);"},{"lineNumber":51,"author":{"gitId":"HuaiZe"},"content":"            default:"},{"lineNumber":52,"author":{"gitId":"HuaiZe"},"content":"                throw new InvalidCommandException();"},{"lineNumber":53,"author":{"gitId":"HuaiZe"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"HuaiZe"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"HuaiZe"},"content":"}"}],"authorContributionMap":{"HuaiZe":56}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":"import java.io.File;"},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":"import java.io.FileReader;"},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":"import java.io.FileWriter;"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":" * Deals with loading tasks from a file and saving tasks to the file."},{"lineNumber":12,"author":{"gitId":"HuaiZe"},"content":" */"},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"    private final String filePath;"},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"HuaiZe"},"content":"     * Creates a new Storage object with a file path."},{"lineNumber":18,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"HuaiZe"},"content":"     * @param filePath File path."},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":"    public Storage(String filePath) {"},{"lineNumber":22,"author":{"gitId":"HuaiZe"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":23,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":25,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"HuaiZe"},"content":"     * Loads the task commands from the file specified by filePath and stores them in an ArrayList."},{"lineNumber":27,"author":{"gitId":"HuaiZe"},"content":"     * If the file does not exist, a new file is created in that path."},{"lineNumber":28,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"HuaiZe"},"content":"     * @return ArrayList of Strings representing the task commands."},{"lineNumber":30,"author":{"gitId":"HuaiZe"},"content":"     * @throws LoadTasksException If an error is encountered when trying to load tasks from the file."},{"lineNumber":31,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"HuaiZe"},"content":"    public ArrayList\u003cString\u003e load() throws LoadTasksException {"},{"lineNumber":33,"author":{"gitId":"HuaiZe"},"content":"        ArrayList\u003cString\u003e taskCommands \u003d new ArrayList\u003c\u003e();"},{"lineNumber":34,"author":{"gitId":"HuaiZe"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":35,"author":{"gitId":"HuaiZe"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"HuaiZe"},"content":"            if (file.exists()) {"},{"lineNumber":37,"author":{"gitId":"HuaiZe"},"content":"                BufferedReader br \u003d new BufferedReader(new FileReader(file));"},{"lineNumber":38,"author":{"gitId":"HuaiZe"},"content":"                String taskCommand \u003d br.readLine();"},{"lineNumber":39,"author":{"gitId":"HuaiZe"},"content":"                while (taskCommand !\u003d null) {"},{"lineNumber":40,"author":{"gitId":"HuaiZe"},"content":"                    taskCommands.add(taskCommand);"},{"lineNumber":41,"author":{"gitId":"HuaiZe"},"content":"                    taskCommand \u003d br.readLine();"},{"lineNumber":42,"author":{"gitId":"HuaiZe"},"content":"                }"},{"lineNumber":43,"author":{"gitId":"HuaiZe"},"content":"            } else {"},{"lineNumber":44,"author":{"gitId":"HuaiZe"},"content":"                file.createNewFile();"},{"lineNumber":45,"author":{"gitId":"HuaiZe"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"HuaiZe"},"content":"        } catch (IOException e) {"},{"lineNumber":47,"author":{"gitId":"HuaiZe"},"content":"            throw new LoadTasksException();"},{"lineNumber":48,"author":{"gitId":"HuaiZe"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"HuaiZe"},"content":"        return taskCommands;"},{"lineNumber":50,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":52,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"HuaiZe"},"content":"     * Writes the task commands of current tasks in the TaskList to the file specified by filePath."},{"lineNumber":54,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"HuaiZe"},"content":"     * @param tasks TaskList containing the current tasks."},{"lineNumber":56,"author":{"gitId":"HuaiZe"},"content":"     * @throws WriteTasksException If an error is encountered when trying to write tasks to the file."},{"lineNumber":57,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"HuaiZe"},"content":"    public void writeTasksToDisk(TaskList tasks) throws WriteTasksException {"},{"lineNumber":59,"author":{"gitId":"HuaiZe"},"content":"        try {"},{"lineNumber":60,"author":{"gitId":"HuaiZe"},"content":"            ArrayList\u003cString\u003e writableTasks \u003d tasks.getWritableTasks();"},{"lineNumber":61,"author":{"gitId":"HuaiZe"},"content":"            FileWriter myWriter \u003d new FileWriter(filePath);"},{"lineNumber":62,"author":{"gitId":"HuaiZe"},"content":"            for (String writableTask : writableTasks) {"},{"lineNumber":63,"author":{"gitId":"HuaiZe"},"content":"                myWriter.write(writableTask + \"\\n\");"},{"lineNumber":64,"author":{"gitId":"HuaiZe"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"HuaiZe"},"content":"            myWriter.close();"},{"lineNumber":66,"author":{"gitId":"HuaiZe"},"content":"        } catch (IOException e) {"},{"lineNumber":67,"author":{"gitId":"HuaiZe"},"content":"            throw new WriteTasksException();"},{"lineNumber":68,"author":{"gitId":"HuaiZe"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"HuaiZe"},"content":"}"}],"authorContributionMap":{"HuaiZe":70}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":" * Abstract class that represents a task."},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":" */"},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":"public abstract class Task {"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"    private final String description;"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"    private boolean isDone;"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":"     * Creates a new Task object with a description."},{"lineNumber":12,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"     * @param description Task description."},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":"    public Task(String description) {"},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":"        this.description \u003d description;"},{"lineNumber":17,"author":{"gitId":"HuaiZe"},"content":"        this.isDone \u003d false;"},{"lineNumber":18,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":"     * Returns the status icon of the task."},{"lineNumber":22,"author":{"gitId":"HuaiZe"},"content":"     * The status icon is \"X\" if the task is completed and \" \" otherwise."},{"lineNumber":23,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"HuaiZe"},"content":"     * @return Status icon."},{"lineNumber":25,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"HuaiZe"},"content":"    public String getStatusIcon() {"},{"lineNumber":27,"author":{"gitId":"HuaiZe"},"content":"        return (isDone ? \"X\" : \" \");"},{"lineNumber":28,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":30,"author":{"gitId":"HuaiZe"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"HuaiZe"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"HuaiZe"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":33,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":35,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"HuaiZe"},"content":"     * Marks the task as completed."},{"lineNumber":37,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"HuaiZe"},"content":"    public void setDone() {"},{"lineNumber":39,"author":{"gitId":"HuaiZe"},"content":"        isDone \u003d true;"},{"lineNumber":40,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":42,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"HuaiZe"},"content":"     * Returns the user command required to create this Task object."},{"lineNumber":44,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"HuaiZe"},"content":"     * @return User command."},{"lineNumber":46,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"HuaiZe"},"content":"    public abstract String getTaskCommand();"},{"lineNumber":48,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":49,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"HuaiZe"},"content":"     * Returns the description of the task."},{"lineNumber":51,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"HuaiZe"},"content":"     * @return Task description."},{"lineNumber":53,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"HuaiZe"},"content":"    public String getDescription() {"},{"lineNumber":55,"author":{"gitId":"HuaiZe"},"content":"        return description;"},{"lineNumber":56,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":58,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"HuaiZe"},"content":"     * Returns true if the task is completed and false otherwise."},{"lineNumber":60,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"HuaiZe"},"content":"     * @return True if the task is completed."},{"lineNumber":62,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"HuaiZe"},"content":"    public boolean isDone() {"},{"lineNumber":64,"author":{"gitId":"HuaiZe"},"content":"        return isDone;"},{"lineNumber":65,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":67,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"HuaiZe"},"content":"     * Returns true if the task description contains the keyword."},{"lineNumber":69,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"HuaiZe"},"content":"     * @param keyword Keyword"},{"lineNumber":71,"author":{"gitId":"HuaiZe"},"content":"     * @return True if the task description contains the keyword."},{"lineNumber":72,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"HuaiZe"},"content":"    public boolean descriptionContains(String keyword) {"},{"lineNumber":74,"author":{"gitId":"HuaiZe"},"content":"        return description.contains(keyword);"},{"lineNumber":75,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"HuaiZe"},"content":"}"}],"authorContributionMap":{"HuaiZe":76}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":" * Represents a list of tasks."},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":" */"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"HuaiZe"},"content":"     * Creates a new TaskList object with an ArrayList of tasks."},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"     * @param taskCommands ArrayList of Strings representing task commands."},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":"    public TaskList(ArrayList\u003cString\u003e taskCommands) {"},{"lineNumber":17,"author":{"gitId":"HuaiZe"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"HuaiZe"},"content":"            tasks \u003d initialiseTasks(taskCommands);"},{"lineNumber":19,"author":{"gitId":"HuaiZe"},"content":"        } catch (EmptyDescriptionException e) {"},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":"            tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":24,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"HuaiZe"},"content":"     * Creates a new TaskList object with an empty list of tasks."},{"lineNumber":26,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"HuaiZe"},"content":"    public TaskList() {"},{"lineNumber":28,"author":{"gitId":"HuaiZe"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":29,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":31,"author":{"gitId":"HuaiZe"},"content":"    private ArrayList\u003cTask\u003e initialiseTasks(ArrayList\u003cString\u003e taskCommands) throws EmptyDescriptionException {"},{"lineNumber":32,"author":{"gitId":"HuaiZe"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":33,"author":{"gitId":"HuaiZe"},"content":"        for (String taskCommand : taskCommands) {"},{"lineNumber":34,"author":{"gitId":"HuaiZe"},"content":"            Task task;"},{"lineNumber":35,"author":{"gitId":"HuaiZe"},"content":"            if (taskCommand.charAt(0) \u003d\u003d \u0027#\u0027) {"},{"lineNumber":36,"author":{"gitId":"HuaiZe"},"content":"                taskCommand \u003d taskCommand.substring(1);"},{"lineNumber":37,"author":{"gitId":"HuaiZe"},"content":"                task \u003d createTask(taskCommand);"},{"lineNumber":38,"author":{"gitId":"HuaiZe"},"content":"                task.setDone();"},{"lineNumber":39,"author":{"gitId":"HuaiZe"},"content":"            } else {"},{"lineNumber":40,"author":{"gitId":"HuaiZe"},"content":"                task \u003d createTask(taskCommand);"},{"lineNumber":41,"author":{"gitId":"HuaiZe"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"HuaiZe"},"content":"            tasks.add(task);"},{"lineNumber":43,"author":{"gitId":"HuaiZe"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"HuaiZe"},"content":"        return tasks;"},{"lineNumber":45,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":47,"author":{"gitId":"HuaiZe"},"content":"    private Task createTask(String taskCommand) throws EmptyDescriptionException {"},{"lineNumber":48,"author":{"gitId":"HuaiZe"},"content":"        String[] arr \u003d taskCommand.split(\" \", 2);"},{"lineNumber":49,"author":{"gitId":"HuaiZe"},"content":"        if (arr.length \u003d\u003d 1) {"},{"lineNumber":50,"author":{"gitId":"HuaiZe"},"content":"            throw new EmptyDescriptionException();"},{"lineNumber":51,"author":{"gitId":"HuaiZe"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"HuaiZe"},"content":"        String type \u003d arr[0];"},{"lineNumber":53,"author":{"gitId":"HuaiZe"},"content":"        String rest \u003d arr[1];"},{"lineNumber":54,"author":{"gitId":"HuaiZe"},"content":"        Task task;"},{"lineNumber":55,"author":{"gitId":"HuaiZe"},"content":"        if (type.equals(\"t\")) {"},{"lineNumber":56,"author":{"gitId":"HuaiZe"},"content":"            task \u003d new Todo(rest);"},{"lineNumber":57,"author":{"gitId":"HuaiZe"},"content":"        } else if (type.equals(\"d\")) {"},{"lineNumber":58,"author":{"gitId":"HuaiZe"},"content":"            String[] temp \u003d rest.split(\" /by \");"},{"lineNumber":59,"author":{"gitId":"HuaiZe"},"content":"            String description \u003d temp[0];"},{"lineNumber":60,"author":{"gitId":"HuaiZe"},"content":"            String by \u003d temp[1];"},{"lineNumber":61,"author":{"gitId":"HuaiZe"},"content":"            task \u003d new Deadline(description, by);"},{"lineNumber":62,"author":{"gitId":"HuaiZe"},"content":"        } else if (type.equals(\"e\")) {"},{"lineNumber":63,"author":{"gitId":"HuaiZe"},"content":"            String[] temp \u003d rest.split(\" /at \");"},{"lineNumber":64,"author":{"gitId":"HuaiZe"},"content":"            String description \u003d temp[0];"},{"lineNumber":65,"author":{"gitId":"HuaiZe"},"content":"            String at \u003d temp[1];"},{"lineNumber":66,"author":{"gitId":"HuaiZe"},"content":"            task \u003d new Event(description, at);"},{"lineNumber":67,"author":{"gitId":"HuaiZe"},"content":"        } else {"},{"lineNumber":68,"author":{"gitId":"HuaiZe"},"content":"            String[] temp \u003d rest.split(\" /dur \");"},{"lineNumber":69,"author":{"gitId":"HuaiZe"},"content":"            String description \u003d temp[0];"},{"lineNumber":70,"author":{"gitId":"HuaiZe"},"content":"            String duration \u003d temp[1];"},{"lineNumber":71,"author":{"gitId":"HuaiZe"},"content":"            task \u003d new FixedDurationTask(description, duration);"},{"lineNumber":72,"author":{"gitId":"HuaiZe"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"HuaiZe"},"content":"        return task;"},{"lineNumber":74,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":76,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"HuaiZe"},"content":"     * Creates and adds a new task to the list of tasks."},{"lineNumber":78,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"HuaiZe"},"content":"     * @param taskCommand Command entered by the user to create a new task."},{"lineNumber":80,"author":{"gitId":"HuaiZe"},"content":"     * @throws EmptyDescriptionException If the task does not contain a description."},{"lineNumber":81,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"HuaiZe"},"content":"    public void addTask(String taskCommand) throws EmptyDescriptionException {"},{"lineNumber":83,"author":{"gitId":"HuaiZe"},"content":"        Task task \u003d createTask(taskCommand);"},{"lineNumber":84,"author":{"gitId":"HuaiZe"},"content":"        tasks.add(task);"},{"lineNumber":85,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":87,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"HuaiZe"},"content":"     * Deletes the task with taskId from the list of tasks."},{"lineNumber":89,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"HuaiZe"},"content":"     * @param taskId ID of the task."},{"lineNumber":91,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"HuaiZe"},"content":"    public void deleteTask(int taskId) {"},{"lineNumber":93,"author":{"gitId":"HuaiZe"},"content":"        tasks.remove(taskId - 1);"},{"lineNumber":94,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":96,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"HuaiZe"},"content":"     * Returns an ArrayList of Strings representing the current tasks in the list of tasks."},{"lineNumber":98,"author":{"gitId":"HuaiZe"},"content":"     * The tasks are represented in a format that is to be displayed to the user."},{"lineNumber":99,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":100,"author":{"gitId":"HuaiZe"},"content":"     * @return ArrayList of Strings representing the tasks in printable format."},{"lineNumber":101,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"HuaiZe"},"content":"    public ArrayList\u003cString\u003e getPrintableTasks() {"},{"lineNumber":103,"author":{"gitId":"HuaiZe"},"content":"        ArrayList\u003cString\u003e printableTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":104,"author":{"gitId":"HuaiZe"},"content":"        int id \u003d 1;"},{"lineNumber":105,"author":{"gitId":"HuaiZe"},"content":"        for (Task task : tasks) {"},{"lineNumber":106,"author":{"gitId":"HuaiZe"},"content":"            printableTasks.add(id + \". \" + task);"},{"lineNumber":107,"author":{"gitId":"HuaiZe"},"content":"            id++;"},{"lineNumber":108,"author":{"gitId":"HuaiZe"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"HuaiZe"},"content":"        return printableTasks;"},{"lineNumber":110,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":112,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":113,"author":{"gitId":"HuaiZe"},"content":"     * Returns an ArrayList of Strings representing the current tasks in the list of tasks whose"},{"lineNumber":114,"author":{"gitId":"HuaiZe"},"content":"     * description contains the key word specified by the user."},{"lineNumber":115,"author":{"gitId":"HuaiZe"},"content":"     * The tasks are represented in a format that is to be displayed to the user."},{"lineNumber":116,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"HuaiZe"},"content":"     * @param keyword Keyword"},{"lineNumber":118,"author":{"gitId":"HuaiZe"},"content":"     * @return ArrayList of Strings representing the tasks in printable format."},{"lineNumber":119,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":120,"author":{"gitId":"HuaiZe"},"content":"    public ArrayList\u003cString\u003e getPrintableTasksWithKeyword(String keyword) {"},{"lineNumber":121,"author":{"gitId":"HuaiZe"},"content":"        ArrayList\u003cString\u003e printableTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":122,"author":{"gitId":"HuaiZe"},"content":"        int id \u003d 1;"},{"lineNumber":123,"author":{"gitId":"HuaiZe"},"content":"        for (Task task : tasks) {"},{"lineNumber":124,"author":{"gitId":"HuaiZe"},"content":"            if (task.descriptionContains(keyword)) {"},{"lineNumber":125,"author":{"gitId":"HuaiZe"},"content":"                printableTasks.add(id + \". \" + task);"},{"lineNumber":126,"author":{"gitId":"HuaiZe"},"content":"                id++;"},{"lineNumber":127,"author":{"gitId":"HuaiZe"},"content":"            }"},{"lineNumber":128,"author":{"gitId":"HuaiZe"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"HuaiZe"},"content":"        return printableTasks;"},{"lineNumber":130,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":132,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"HuaiZe"},"content":"     * Returns an ArrayList of Strings representing the current tasks in the list of tasks."},{"lineNumber":134,"author":{"gitId":"HuaiZe"},"content":"     * The tasks are represented in a format that is to be stored in a file."},{"lineNumber":135,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":136,"author":{"gitId":"HuaiZe"},"content":"     * @return ArrayList of Strings representing the tasks in writable format."},{"lineNumber":137,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":138,"author":{"gitId":"HuaiZe"},"content":"    public ArrayList\u003cString\u003e getWritableTasks() {"},{"lineNumber":139,"author":{"gitId":"HuaiZe"},"content":"        ArrayList\u003cString\u003e writableTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":140,"author":{"gitId":"HuaiZe"},"content":"        for (Task task : tasks) {"},{"lineNumber":141,"author":{"gitId":"HuaiZe"},"content":"            if (task.isDone()) {"},{"lineNumber":142,"author":{"gitId":"HuaiZe"},"content":"                writableTasks.add(\"#\" + task.getTaskCommand());"},{"lineNumber":143,"author":{"gitId":"HuaiZe"},"content":"            } else {"},{"lineNumber":144,"author":{"gitId":"HuaiZe"},"content":"                writableTasks.add(task.getTaskCommand());"},{"lineNumber":145,"author":{"gitId":"HuaiZe"},"content":"            }"},{"lineNumber":146,"author":{"gitId":"HuaiZe"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"HuaiZe"},"content":"        return writableTasks;"},{"lineNumber":148,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":150,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":151,"author":{"gitId":"HuaiZe"},"content":"     * Marks the task with taskId as completed."},{"lineNumber":152,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":153,"author":{"gitId":"HuaiZe"},"content":"     * @param taskId ID of the task."},{"lineNumber":154,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":155,"author":{"gitId":"HuaiZe"},"content":"    public void markTaskAsDone(int taskId) {"},{"lineNumber":156,"author":{"gitId":"HuaiZe"},"content":"        tasks.get(taskId - 1).setDone();"},{"lineNumber":157,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":158,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":159,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":160,"author":{"gitId":"HuaiZe"},"content":"     * Returns the string representation of the task with taskId in the list of tasks."},{"lineNumber":161,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":162,"author":{"gitId":"HuaiZe"},"content":"     * @param taskId ID of the task."},{"lineNumber":163,"author":{"gitId":"HuaiZe"},"content":"     * @return String representation of the task."},{"lineNumber":164,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":165,"author":{"gitId":"HuaiZe"},"content":"    public String getTaskString(int taskId) {"},{"lineNumber":166,"author":{"gitId":"HuaiZe"},"content":"        return tasks.get(taskId - 1).toString();"},{"lineNumber":167,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":168,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":169,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":170,"author":{"gitId":"HuaiZe"},"content":"     * Returns the number of tasks in the list of tasks."},{"lineNumber":171,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":172,"author":{"gitId":"HuaiZe"},"content":"     * @return Number of tasks."},{"lineNumber":173,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":174,"author":{"gitId":"HuaiZe"},"content":"    public int getNumOfTasks() {"},{"lineNumber":175,"author":{"gitId":"HuaiZe"},"content":"        return tasks.size();"},{"lineNumber":176,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":177,"author":{"gitId":"HuaiZe"},"content":"}"}],"authorContributionMap":{"HuaiZe":177}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":" * Represents a task with a description."},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":" */"},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"     * Creates a new Todo object with a description."},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":"     * @param description Task description."},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"HuaiZe"},"content":"    public Todo(String description) {"},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"HuaiZe"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"HuaiZe"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":19,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"HuaiZe"},"content":"    public String getTaskCommand() {"},{"lineNumber":23,"author":{"gitId":"HuaiZe"},"content":"        return \"t \" + getDescription();"},{"lineNumber":24,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"HuaiZe"},"content":"}"}],"authorContributionMap":{"HuaiZe":25}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":" * Generates messages to display to the user."},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":" */"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":"     * Returns an exit message to be displayed when the user exits the program."},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"HuaiZe"},"content":"     * @return Message."},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"    public String getExitMsg() {"},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":"        return \"Bye! Hope to see you again soon!\";"},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":18,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"HuaiZe"},"content":"     * Returns a message confirming that a new task has been added."},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":"     * @param taskString String representation of the task."},{"lineNumber":22,"author":{"gitId":"HuaiZe"},"content":"     * @param numOfTasks Number of tasks in the list of tasks."},{"lineNumber":23,"author":{"gitId":"HuaiZe"},"content":"     * @return Message."},{"lineNumber":24,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"HuaiZe"},"content":"    public String getAddTaskMsg(String taskString, int numOfTasks) {"},{"lineNumber":26,"author":{"gitId":"HuaiZe"},"content":"        return \"Got it! I\u0027ve added this task:\\n    \" + taskString + \"\\nNow you have \""},{"lineNumber":27,"author":{"gitId":"HuaiZe"},"content":"                + numOfTasks + \" task\" + (numOfTasks \u003d\u003d 1 ? \"\" : \"s\") + \" in the list.\";"},{"lineNumber":28,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":30,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"HuaiZe"},"content":"     * Returns a message confirming that a task has been marked as completed."},{"lineNumber":32,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"HuaiZe"},"content":"     * @param taskString String representation of the task."},{"lineNumber":34,"author":{"gitId":"HuaiZe"},"content":"     * @return Message."},{"lineNumber":35,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"HuaiZe"},"content":"    public String getMarkTaskAsDoneMsg(String taskString) {"},{"lineNumber":37,"author":{"gitId":"HuaiZe"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n    \" + taskString;"},{"lineNumber":38,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":40,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"HuaiZe"},"content":"     * Returns a message confirming that a task has been deleted."},{"lineNumber":42,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"HuaiZe"},"content":"     * @param taskString String representation of the task."},{"lineNumber":44,"author":{"gitId":"HuaiZe"},"content":"     * @param numOfTasksRemaining Number of tasks remaining in the list of tasks."},{"lineNumber":45,"author":{"gitId":"HuaiZe"},"content":"     * @return Message."},{"lineNumber":46,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"HuaiZe"},"content":"    public String getDeleteTaskMsg(String taskString, int numOfTasksRemaining) {"},{"lineNumber":48,"author":{"gitId":"HuaiZe"},"content":"        return \"Noted! I\u0027ve removed this task:\\n    \" + taskString + \"\\nNow you have \""},{"lineNumber":49,"author":{"gitId":"HuaiZe"},"content":"                + numOfTasksRemaining + \" task\" + (numOfTasksRemaining \u003d\u003d 1 ? \"\" : \"s\") + \" in the list.\";"},{"lineNumber":50,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":52,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"HuaiZe"},"content":"     * Returns a String that lists out all tasks in the list of tasks."},{"lineNumber":54,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"HuaiZe"},"content":"     * @param printableTasks ArrayList of Strings representing the tasks."},{"lineNumber":56,"author":{"gitId":"HuaiZe"},"content":"     * @return String representing the list of tasks."},{"lineNumber":57,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"HuaiZe"},"content":"    public String getListOfTasks(ArrayList\u003cString\u003e printableTasks) {"},{"lineNumber":59,"author":{"gitId":"HuaiZe"},"content":"        if (printableTasks.size() \u003d\u003d 0) {"},{"lineNumber":60,"author":{"gitId":"HuaiZe"},"content":"            return \"You have no tasks currently.\";"},{"lineNumber":61,"author":{"gitId":"HuaiZe"},"content":"        } else {"},{"lineNumber":62,"author":{"gitId":"HuaiZe"},"content":"            StringBuilder listOfTasks \u003d new StringBuilder(\"Here are the tasks in your list:\");"},{"lineNumber":63,"author":{"gitId":"HuaiZe"},"content":"            for (String printableTask : printableTasks) {"},{"lineNumber":64,"author":{"gitId":"HuaiZe"},"content":"                listOfTasks.append(\"\\n    \").append(printableTask);"},{"lineNumber":65,"author":{"gitId":"HuaiZe"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"HuaiZe"},"content":"            return listOfTasks.toString();"},{"lineNumber":67,"author":{"gitId":"HuaiZe"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":70,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"HuaiZe"},"content":"     * Returns a String that lists out all tasks in the list of tasks whose description"},{"lineNumber":72,"author":{"gitId":"HuaiZe"},"content":"     * contains the keyword specified by the user."},{"lineNumber":73,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":74,"author":{"gitId":"HuaiZe"},"content":"     * @param printableTasks ArrayList of Strings representing the tasks."},{"lineNumber":75,"author":{"gitId":"HuaiZe"},"content":"     * @return String representing the list of tasks containing the keyword."},{"lineNumber":76,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"HuaiZe"},"content":"    public String getListOfFoundTasks(ArrayList\u003cString\u003e printableTasks) {"},{"lineNumber":78,"author":{"gitId":"HuaiZe"},"content":"        if (printableTasks.size() \u003d\u003d 0) {"},{"lineNumber":79,"author":{"gitId":"HuaiZe"},"content":"            return \"Found no matching tasks.\";"},{"lineNumber":80,"author":{"gitId":"HuaiZe"},"content":"        } else {"},{"lineNumber":81,"author":{"gitId":"HuaiZe"},"content":"            StringBuilder listOfTasks \u003d new StringBuilder(\"Here are the matching tasks in your list:\");"},{"lineNumber":82,"author":{"gitId":"HuaiZe"},"content":"            for (String printableTask : printableTasks) {"},{"lineNumber":83,"author":{"gitId":"HuaiZe"},"content":"                listOfTasks.append(\"\\n    \").append(printableTask);"},{"lineNumber":84,"author":{"gitId":"HuaiZe"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"HuaiZe"},"content":"            return listOfTasks.toString();"},{"lineNumber":86,"author":{"gitId":"HuaiZe"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":89,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"HuaiZe"},"content":"     * Returns an error message to be displayed when the user tries to create a new"},{"lineNumber":91,"author":{"gitId":"HuaiZe"},"content":"     * task without a description."},{"lineNumber":92,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"HuaiZe"},"content":"     * @return Error message."},{"lineNumber":94,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"HuaiZe"},"content":"    public String getEmptyDescriptionErrorMsg() {"},{"lineNumber":96,"author":{"gitId":"HuaiZe"},"content":"        return \"The description of a task cannot be empty!\";"},{"lineNumber":97,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":99,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"HuaiZe"},"content":"     * Returns an error message to be displayed when the user enters an invalid command."},{"lineNumber":101,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"HuaiZe"},"content":"     * @return Error message."},{"lineNumber":103,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"HuaiZe"},"content":"    public String getInvalidCommandErrorMsg() {"},{"lineNumber":105,"author":{"gitId":"HuaiZe"},"content":"        return \"Invalid command! Please try again.\";"},{"lineNumber":106,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":108,"author":{"gitId":"HuaiZe"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"HuaiZe"},"content":"     * Returns an error message to be displayed when an error is encountered while trying"},{"lineNumber":110,"author":{"gitId":"HuaiZe"},"content":"     * to save tasks to the hard disk."},{"lineNumber":111,"author":{"gitId":"HuaiZe"},"content":"     *"},{"lineNumber":112,"author":{"gitId":"HuaiZe"},"content":"     * @return Error message."},{"lineNumber":113,"author":{"gitId":"HuaiZe"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"HuaiZe"},"content":"    public String getWritingErrorMsg() {"},{"lineNumber":115,"author":{"gitId":"HuaiZe"},"content":"        return \"Encountered an error when trying to write tasks to the hard disk.\";"},{"lineNumber":116,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"HuaiZe"},"content":"}"}],"authorContributionMap":{"HuaiZe":117}},{"path":"src/main/java/duke/WriteTasksException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":" * An exception that is thrown when an error is encountered while trying to write tasks to the"},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":" * hard disk."},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":" */"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"public class WriteTasksException extends DukeException {"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"}"}],"authorContributionMap":{"HuaiZe":8}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\""},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"},{"lineNumber":12,"author":{"gitId":"HuaiZe"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"HuaiZe":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":"            fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"HuaiZe"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e"},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\""},{"lineNumber":17,"author":{"gitId":"HuaiZe"},"content":"                    vvalue\u003d\"1.0\"\u003e"},{"lineNumber":18,"author":{"gitId":"HuaiZe"},"content":"            \u003ccontent\u003e"},{"lineNumber":19,"author":{"gitId":"HuaiZe"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e"},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":"            \u003c/content\u003e"},{"lineNumber":21,"author":{"gitId":"HuaiZe"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":22,"author":{"gitId":"HuaiZe"},"content":"    \u003c/children\u003e"},{"lineNumber":23,"author":{"gitId":"HuaiZe"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"HuaiZe":23}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":"import duke.Deadline;"},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"public class DeadlineTest {"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":"    public void testStringConversion_properlyFormattedDate() {"},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":"        assertEquals(\"[D][ ] Do CS2103T iP (by: Feb 19 2021)\","},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":"                new Deadline(\"Do CS2103T iP\", \"2021-02-19\").toString());"},{"lineNumber":12,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":"    public void testStringConversion_dateNotInExpectedFormat() {"},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":"        assertEquals(\"[D][ ] Do CS2103T iP (by: 19/02/2021)\","},{"lineNumber":17,"author":{"gitId":"HuaiZe"},"content":"                new Deadline(\"Do CS2103T iP\", \"19/02/2021\").toString());"},{"lineNumber":18,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"HuaiZe"},"content":"}"}],"authorContributionMap":{"HuaiZe":19}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":"import duke.EmptyDescriptionException;"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"import duke.TaskList;"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":""},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":"public class TaskListTest {"},{"lineNumber":10,"author":{"gitId":"HuaiZe"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"HuaiZe"},"content":"    public void addTask_emptyDescription_exceptionThrown() {"},{"lineNumber":12,"author":{"gitId":"HuaiZe"},"content":"        try {"},{"lineNumber":13,"author":{"gitId":"HuaiZe"},"content":"            new TaskList().addTask(\"todo\");"},{"lineNumber":14,"author":{"gitId":"HuaiZe"},"content":"            fail();"},{"lineNumber":15,"author":{"gitId":"HuaiZe"},"content":"        } catch (EmptyDescriptionException e) {"},{"lineNumber":16,"author":{"gitId":"HuaiZe"},"content":"            assertEquals(\"duke.EmptyDescriptionException\", e.toString());"},{"lineNumber":17,"author":{"gitId":"HuaiZe"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"HuaiZe"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"HuaiZe"},"content":"}"},{"lineNumber":20,"author":{"gitId":"HuaiZe"},"content":""}],"authorContributionMap":{"HuaiZe":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HuaiZe"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"HuaiZe"},"content":"list"},{"lineNumber":3,"author":{"gitId":"HuaiZe"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"HuaiZe"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"HuaiZe"},"content":"list"},{"lineNumber":6,"author":{"gitId":"HuaiZe"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"HuaiZe"},"content":"don 1"},{"lineNumber":8,"author":{"gitId":"HuaiZe"},"content":"list"},{"lineNumber":9,"author":{"gitId":"HuaiZe"},"content":"bye"}],"authorContributionMap":{"HuaiZe":9}}]
