[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aaronsms"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":3,"author":{"gitId":"aaronsms"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"aaronsms"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":6,"author":{"gitId":"aaronsms"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"aaronsms"},"content":"\tpublic final LocalDate date;"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":"\tpublic final LocalTime time;"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":10,"author":{"gitId":"aaronsms"},"content":"\tprivate Deadline(String description, LocalDate date) {"},{"lineNumber":11,"author":{"gitId":"aaronsms"},"content":"\t\tsuper(false, description);"},{"lineNumber":12,"author":{"gitId":"aaronsms"},"content":"\t\tthis.date \u003d date;"},{"lineNumber":13,"author":{"gitId":"aaronsms"},"content":"\t\tthis.time \u003d null;"},{"lineNumber":14,"author":{"gitId":"aaronsms"},"content":"\t}"},{"lineNumber":15,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":16,"author":{"gitId":"aaronsms"},"content":"\tprivate Deadline(String description, LocalDate date, LocalTime time) {"},{"lineNumber":17,"author":{"gitId":"aaronsms"},"content":"\t\tsuper(false, description);"},{"lineNumber":18,"author":{"gitId":"aaronsms"},"content":"\t\tthis.date \u003d date;"},{"lineNumber":19,"author":{"gitId":"aaronsms"},"content":"\t\tthis.time \u003d time;"},{"lineNumber":20,"author":{"gitId":"aaronsms"},"content":"\t}"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":22,"author":{"gitId":"aaronsms"},"content":"\tpublic static Deadline create(String description, String dateStr) {"},{"lineNumber":23,"author":{"gitId":"aaronsms"},"content":"\t\ttry {"},{"lineNumber":24,"author":{"gitId":"aaronsms"},"content":"\t\t\tLocalDate date \u003d LocalDate.parse(dateStr, DateTimeFormatter.ISO_LOCAL_DATE);"},{"lineNumber":25,"author":{"gitId":"aaronsms"},"content":"\t\t\treturn new Deadline(description, date);"},{"lineNumber":26,"author":{"gitId":"aaronsms"},"content":"\t\t} catch (DateTimeParseException e) {"},{"lineNumber":27,"author":{"gitId":"aaronsms"},"content":"\t\t\treturn null;"},{"lineNumber":28,"author":{"gitId":"aaronsms"},"content":"\t\t}"},{"lineNumber":29,"author":{"gitId":"aaronsms"},"content":"\t}"},{"lineNumber":30,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":31,"author":{"gitId":"aaronsms"},"content":"\tpublic static Deadline create(String description, String dateStr, String timeStr) {"},{"lineNumber":32,"author":{"gitId":"aaronsms"},"content":"\t\ttry {"},{"lineNumber":33,"author":{"gitId":"aaronsms"},"content":"\t\t\tLocalDate date \u003d LocalDate.parse(dateStr, DateTimeFormatter.ISO_LOCAL_DATE);"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"\t\t\tLocalTime time \u003d LocalTime.parse(timeStr, DateTimeFormatter.ISO_LOCAL_TIME);"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"\t\t\treturn new Deadline(description, date, time);"},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"\t\t} catch (DateTimeParseException e) {"},{"lineNumber":37,"author":{"gitId":"aaronsms"},"content":"\t\t\treturn null;"},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"\t\t}"},{"lineNumber":39,"author":{"gitId":"aaronsms"},"content":"\t}"},{"lineNumber":40,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":41,"author":{"gitId":"aaronsms"},"content":"\tpublic String getDateTime() {"},{"lineNumber":42,"author":{"gitId":"aaronsms"},"content":"\t\tif (time \u003d\u003d null) {"},{"lineNumber":43,"author":{"gitId":"aaronsms"},"content":"\t\t\treturn date.toString();"},{"lineNumber":44,"author":{"gitId":"aaronsms"},"content":"\t\t}"},{"lineNumber":45,"author":{"gitId":"aaronsms"},"content":"\t\treturn String.format(\"%s %s\", this.date, this.time);"},{"lineNumber":46,"author":{"gitId":"aaronsms"},"content":"\t}"},{"lineNumber":47,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":48,"author":{"gitId":"aaronsms"},"content":"\t@Override"},{"lineNumber":49,"author":{"gitId":"aaronsms"},"content":"\tpublic String toString() {"},{"lineNumber":50,"author":{"gitId":"aaronsms"},"content":"\t\treturn String.format(\"[D][%s] %s (by: %s)\", this.getStatusIcon(), this.description, this.getDateTime());"},{"lineNumber":51,"author":{"gitId":"aaronsms"},"content":"\t}"},{"lineNumber":52,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":53,"author":{"gitId":"aaronsms"},"content":"\t@Override"},{"lineNumber":54,"author":{"gitId":"aaronsms"},"content":"\tpublic String encode() {"},{"lineNumber":55,"author":{"gitId":"aaronsms"},"content":"\t\treturn String.format(\"D | %s | %s | %s\", this.isDone ? \"1\" : \"0\", this.description, this.getDateTime());"},{"lineNumber":56,"author":{"gitId":"aaronsms"},"content":"\t}"},{"lineNumber":57,"author":{"gitId":"aaronsms"},"content":"}"}],"authorContributionMap":{"aaronsms":57}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aaronsms"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"import java.nio.charset.StandardCharsets;"},{"lineNumber":3,"author":{"gitId":"aaronsms"},"content":"import java.nio.file.Files;"},{"lineNumber":4,"author":{"gitId":"aaronsms"},"content":"import java.nio.file.Path;"},{"lineNumber":5,"author":{"gitId":"aaronsms"},"content":"import java.nio.file.Paths;"},{"lineNumber":6,"author":{"gitId":"aaronsms"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"aaronsms"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":"import java.util.stream.Collectors;"},{"lineNumber":10,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":12,"author":{"gitId":"aaronsms"},"content":"    public static void main(final String[] args) {"},{"lineNumber":13,"author":{"gitId":"aaronsms"},"content":"        final String logo \u003d \" ____        _        \\n\" + \"|  _ \\\\ _   _| | _____ \\n\" + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":14,"author":{"gitId":"aaronsms"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\" + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":16,"author":{"gitId":"aaronsms"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":17,"author":{"gitId":"aaronsms"},"content":"        horizontalLine();"},{"lineNumber":18,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":19,"author":{"gitId":"aaronsms"},"content":"        final List\u003cTask\u003e store \u003d new ArrayList\u003c\u003e();"},{"lineNumber":20,"author":{"gitId":"aaronsms"},"content":"        final List\u003cString\u003e lines \u003d loadFile();"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":"        if (lines \u003d\u003d null) { // No files exist or file is corrupted"},{"lineNumber":22,"author":{"gitId":"aaronsms"},"content":"            createDirectoryAndFile();"},{"lineNumber":23,"author":{"gitId":"aaronsms"},"content":"        } else { // File may contains bad data: for now we ignore them"},{"lineNumber":24,"author":{"gitId":"aaronsms"},"content":"            store.addAll(lines.stream()"},{"lineNumber":25,"author":{"gitId":"aaronsms"},"content":"                    .map(str -\u003e parseStringToTask(str))"},{"lineNumber":26,"author":{"gitId":"aaronsms"},"content":"                    .filter(task -\u003e task !\u003d null)"},{"lineNumber":27,"author":{"gitId":"aaronsms"},"content":"                    .collect(Collectors.toList()));"},{"lineNumber":28,"author":{"gitId":"aaronsms"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":30,"author":{"gitId":"aaronsms"},"content":"        final Scanner scan \u003d new Scanner(System.in);"},{"lineNumber":31,"author":{"gitId":"aaronsms"},"content":"        while (scan.hasNextLine()) {"},{"lineNumber":32,"author":{"gitId":"aaronsms"},"content":"            final String input \u003d scan.nextLine().strip();"},{"lineNumber":33,"author":{"gitId":"aaronsms"},"content":"            final String command \u003d input.split(\" \")[0];"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"            horizontalLine();"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"            if (input.toLowerCase().equals(\"bye\")) {"},{"lineNumber":37,"author":{"gitId":"aaronsms"},"content":"                // save file"},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"                final List\u003cString\u003e data \u003d store.stream()"},{"lineNumber":39,"author":{"gitId":"aaronsms"},"content":"                        .map(task -\u003e encodeTaskToString(task))"},{"lineNumber":40,"author":{"gitId":"aaronsms"},"content":"                        .filter(str -\u003e str !\u003d null).collect(Collectors.toList());"},{"lineNumber":41,"author":{"gitId":"aaronsms"},"content":"                saveFile(data);"},{"lineNumber":42,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":43,"author":{"gitId":"aaronsms"},"content":"                System.out.println(\"\\tBye. Hope to see you again soon!\");"},{"lineNumber":44,"author":{"gitId":"aaronsms"},"content":"                horizontalLine();"},{"lineNumber":45,"author":{"gitId":"aaronsms"},"content":"                break;"},{"lineNumber":46,"author":{"gitId":"aaronsms"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":48,"author":{"gitId":"aaronsms"},"content":"            if (input.equals(\"\")) { // empty string"},{"lineNumber":49,"author":{"gitId":"aaronsms"},"content":"                System.out.println(\"\\t...\");"},{"lineNumber":50,"author":{"gitId":"aaronsms"},"content":"            } else if (input.equals(\"list\")) { // list tasks"},{"lineNumber":51,"author":{"gitId":"aaronsms"},"content":"                listTasks(store);"},{"lineNumber":52,"author":{"gitId":"aaronsms"},"content":"            } else if (command.equals(\"done\")) { // mark task as done"},{"lineNumber":53,"author":{"gitId":"aaronsms"},"content":"                markTaskAsDone(store, input);"},{"lineNumber":54,"author":{"gitId":"aaronsms"},"content":"            } else if (command.equals(\"delete\")) { // mark task as delete"},{"lineNumber":55,"author":{"gitId":"aaronsms"},"content":"                deleteTask(store, input);"},{"lineNumber":56,"author":{"gitId":"aaronsms"},"content":"            } else { // add task to list"},{"lineNumber":57,"author":{"gitId":"aaronsms"},"content":"                addTaskToList(store, command, input);"},{"lineNumber":58,"author":{"gitId":"aaronsms"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"aaronsms"},"content":"            horizontalLine();"},{"lineNumber":60,"author":{"gitId":"aaronsms"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"aaronsms"},"content":"        scan.close();"},{"lineNumber":62,"author":{"gitId":"aaronsms"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":64,"author":{"gitId":"aaronsms"},"content":"    private static Task parseStringToTask(String str) {"},{"lineNumber":65,"author":{"gitId":"aaronsms"},"content":"        final String[] tokens \u003d str.split(\" \\\\| \");"},{"lineNumber":66,"author":{"gitId":"aaronsms"},"content":"        String[] datetime;"},{"lineNumber":67,"author":{"gitId":"aaronsms"},"content":"        try {"},{"lineNumber":68,"author":{"gitId":"aaronsms"},"content":"            switch (tokens[0]) {"},{"lineNumber":69,"author":{"gitId":"aaronsms"},"content":"            case \"T\":"},{"lineNumber":70,"author":{"gitId":"aaronsms"},"content":"                final ToDo todo \u003d new ToDo(tokens[2]);"},{"lineNumber":71,"author":{"gitId":"aaronsms"},"content":"                if (tokens[1].equals(\"1\")) todo.markAsDone();"},{"lineNumber":72,"author":{"gitId":"aaronsms"},"content":"                return todo; "},{"lineNumber":73,"author":{"gitId":"aaronsms"},"content":"            case \"D\":"},{"lineNumber":74,"author":{"gitId":"aaronsms"},"content":"                datetime \u003d tokens[3].split(\" \", 2);"},{"lineNumber":75,"author":{"gitId":"aaronsms"},"content":"                Deadline deadline;"},{"lineNumber":76,"author":{"gitId":"aaronsms"},"content":"                if (datetime.length \u003d\u003d 2) {"},{"lineNumber":77,"author":{"gitId":"aaronsms"},"content":"                    deadline \u003d Deadline.create(tokens[2], datetime[0].strip(), datetime[1].strip());"},{"lineNumber":78,"author":{"gitId":"aaronsms"},"content":"                } else {"},{"lineNumber":79,"author":{"gitId":"aaronsms"},"content":"                    deadline \u003d Deadline.create(tokens[2], datetime[0].strip());"},{"lineNumber":80,"author":{"gitId":"aaronsms"},"content":"                }"},{"lineNumber":81,"author":{"gitId":"aaronsms"},"content":"                if (tokens[1].equals(\"1\")) deadline.markAsDone();"},{"lineNumber":82,"author":{"gitId":"aaronsms"},"content":"                return deadline;"},{"lineNumber":83,"author":{"gitId":"aaronsms"},"content":"            case \"E\":"},{"lineNumber":84,"author":{"gitId":"aaronsms"},"content":"                datetime \u003d tokens[3].split(\" \", 2);"},{"lineNumber":85,"author":{"gitId":"aaronsms"},"content":"                Event event;"},{"lineNumber":86,"author":{"gitId":"aaronsms"},"content":"                if (datetime.length \u003d\u003d 2) {"},{"lineNumber":87,"author":{"gitId":"aaronsms"},"content":"                    event \u003d Event.create(tokens[2], datetime[0].strip(), datetime[1].strip());"},{"lineNumber":88,"author":{"gitId":"aaronsms"},"content":"                } else {"},{"lineNumber":89,"author":{"gitId":"aaronsms"},"content":"                    event \u003d Event.create(tokens[2], datetime[0].strip());"},{"lineNumber":90,"author":{"gitId":"aaronsms"},"content":"                }"},{"lineNumber":91,"author":{"gitId":"aaronsms"},"content":"                if (tokens[1].equals(\"1\")) event.markAsDone();"},{"lineNumber":92,"author":{"gitId":"aaronsms"},"content":"                return event;"},{"lineNumber":93,"author":{"gitId":"aaronsms"},"content":"            default:"},{"lineNumber":94,"author":{"gitId":"aaronsms"},"content":"                return null;"},{"lineNumber":95,"author":{"gitId":"aaronsms"},"content":"            }"},{"lineNumber":96,"author":{"gitId":"aaronsms"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":97,"author":{"gitId":"aaronsms"},"content":"            return null;"},{"lineNumber":98,"author":{"gitId":"aaronsms"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"aaronsms"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":101,"author":{"gitId":"aaronsms"},"content":"    private static String encodeTaskToString(Task task) {"},{"lineNumber":102,"author":{"gitId":"aaronsms"},"content":"        return task.encode();"},{"lineNumber":103,"author":{"gitId":"aaronsms"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":105,"author":{"gitId":"aaronsms"},"content":"    private static void saveFile(List\u003cString\u003e data) {"},{"lineNumber":106,"author":{"gitId":"aaronsms"},"content":"        Path path \u003d Paths.get(\".\", \"data\", \"duke.txt\");"},{"lineNumber":107,"author":{"gitId":"aaronsms"},"content":"        if (!Files.exists(path))"},{"lineNumber":108,"author":{"gitId":"aaronsms"},"content":"            createDirectoryAndFile();"},{"lineNumber":109,"author":{"gitId":"aaronsms"},"content":"        try {"},{"lineNumber":110,"author":{"gitId":"aaronsms"},"content":"            Files.write(path, data, StandardCharsets.UTF_8);"},{"lineNumber":111,"author":{"gitId":"aaronsms"},"content":"        } catch (IOException e) {"},{"lineNumber":112,"author":{"gitId":"aaronsms"},"content":"            System.err.println(\"Duke cannot save file.\");"},{"lineNumber":113,"author":{"gitId":"aaronsms"},"content":"            e.printStackTrace();"},{"lineNumber":114,"author":{"gitId":"aaronsms"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"aaronsms"},"content":"    }"},{"lineNumber":116,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":117,"author":{"gitId":"aaronsms"},"content":"    private static void createDirectoryAndFile() {"},{"lineNumber":118,"author":{"gitId":"aaronsms"},"content":"        Path dir \u003d Paths.get(\".\", \"data\");"},{"lineNumber":119,"author":{"gitId":"aaronsms"},"content":"        Path path \u003d Paths.get(\".\", \"data\", \"duke.txt\");"},{"lineNumber":120,"author":{"gitId":"aaronsms"},"content":"        try {"},{"lineNumber":121,"author":{"gitId":"aaronsms"},"content":"            if (!Files.exists(dir))"},{"lineNumber":122,"author":{"gitId":"aaronsms"},"content":"                Files.createDirectory(dir);"},{"lineNumber":123,"author":{"gitId":"aaronsms"},"content":"            Files.createFile(path);"},{"lineNumber":124,"author":{"gitId":"aaronsms"},"content":"        } catch (IOException e) {"},{"lineNumber":125,"author":{"gitId":"aaronsms"},"content":"            System.err.println(\"Parent directory does not exist.\");"},{"lineNumber":126,"author":{"gitId":"aaronsms"},"content":"            e.printStackTrace();"},{"lineNumber":127,"author":{"gitId":"aaronsms"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"aaronsms"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":130,"author":{"gitId":"aaronsms"},"content":"    private static List\u003cString\u003e loadFile() {"},{"lineNumber":131,"author":{"gitId":"aaronsms"},"content":"        Path path \u003d Paths.get(\".\", \"data\", \"duke.txt\");"},{"lineNumber":132,"author":{"gitId":"aaronsms"},"content":"        if (!Files.exists(path))"},{"lineNumber":133,"author":{"gitId":"aaronsms"},"content":"            return null;"},{"lineNumber":134,"author":{"gitId":"aaronsms"},"content":"        try {"},{"lineNumber":135,"author":{"gitId":"aaronsms"},"content":"            return Files.readAllLines(path, StandardCharsets.UTF_8);"},{"lineNumber":136,"author":{"gitId":"aaronsms"},"content":"        } catch (IOException e) {"},{"lineNumber":137,"author":{"gitId":"aaronsms"},"content":"            System.err.println(\"Duke cannot read the file.\");"},{"lineNumber":138,"author":{"gitId":"aaronsms"},"content":"            e.printStackTrace();"},{"lineNumber":139,"author":{"gitId":"aaronsms"},"content":"            return null;"},{"lineNumber":140,"author":{"gitId":"aaronsms"},"content":"        }"},{"lineNumber":141,"author":{"gitId":"aaronsms"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":143,"author":{"gitId":"aaronsms"},"content":"    private static void deleteTask(List\u003cTask\u003e store, String input) {"},{"lineNumber":144,"author":{"gitId":"aaronsms"},"content":"        final String[] splitOnSpace \u003d input.split(\" \", 2);"},{"lineNumber":145,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":146,"author":{"gitId":"aaronsms"},"content":"        if (splitOnSpace.length \u003d\u003d 2 \u0026\u0026 !splitOnSpace[1].strip().equals(\"\")) {"},{"lineNumber":147,"author":{"gitId":"aaronsms"},"content":"            try {"},{"lineNumber":148,"author":{"gitId":"aaronsms"},"content":"                final int index \u003d Integer.parseInt(splitOnSpace[1].strip()) - 1;"},{"lineNumber":149,"author":{"gitId":"aaronsms"},"content":"                if (0 \u003c\u003d index \u0026\u0026 index \u003c store.size()) {"},{"lineNumber":150,"author":{"gitId":"aaronsms"},"content":"                    final Task removed \u003d store.remove(index);"},{"lineNumber":151,"author":{"gitId":"aaronsms"},"content":"                    System.out.println(\"\\tNoted. I\u0027ve removed this task: \");"},{"lineNumber":152,"author":{"gitId":"aaronsms"},"content":"                    System.out.printf(\"\\t%s\\n\", removed);"},{"lineNumber":153,"author":{"gitId":"aaronsms"},"content":"                    System.out.printf(\"\\tNow you have %d task%s in the list.\\n\", store.size(),"},{"lineNumber":154,"author":{"gitId":"aaronsms"},"content":"                            store.size() \u003d\u003d 1 ? \"\" : \"s\");"},{"lineNumber":155,"author":{"gitId":"aaronsms"},"content":"                } else {"},{"lineNumber":156,"author":{"gitId":"aaronsms"},"content":"                    System.out.println(\"\\tOops! The index is out of bound.\");"},{"lineNumber":157,"author":{"gitId":"aaronsms"},"content":"                }"},{"lineNumber":158,"author":{"gitId":"aaronsms"},"content":"            } catch (final NumberFormatException e) {"},{"lineNumber":159,"author":{"gitId":"aaronsms"},"content":"                System.out.println(\"\\tOops! Please input a number.\");"},{"lineNumber":160,"author":{"gitId":"aaronsms"},"content":"            }"},{"lineNumber":161,"author":{"gitId":"aaronsms"},"content":"        } else {"},{"lineNumber":162,"author":{"gitId":"aaronsms"},"content":"            System.out.println(\"\\tPlease follow this format \\\"done \u003cindex\u003e\\\".\");"},{"lineNumber":163,"author":{"gitId":"aaronsms"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"aaronsms"},"content":"    }"},{"lineNumber":165,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":166,"author":{"gitId":"aaronsms"},"content":"    private static void addTaskToList(List\u003cTask\u003e store, String command, String input) {"},{"lineNumber":167,"author":{"gitId":"aaronsms"},"content":"        boolean isInsert \u003d false;"},{"lineNumber":168,"author":{"gitId":"aaronsms"},"content":"        if (store.size() \u003e\u003d 100) {"},{"lineNumber":169,"author":{"gitId":"aaronsms"},"content":"            System.out.println(\"\\tSorry. The database is full!\");"},{"lineNumber":170,"author":{"gitId":"aaronsms"},"content":"        } else if (command.equals(\"todo\")) {"},{"lineNumber":171,"author":{"gitId":"aaronsms"},"content":"            final String[] splitOnSpace \u003d input.split(\" \", 2);"},{"lineNumber":172,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":173,"author":{"gitId":"aaronsms"},"content":"            if (splitOnSpace.length \u003c 2 || splitOnSpace[1].strip().equals(\"\")) {"},{"lineNumber":174,"author":{"gitId":"aaronsms"},"content":"                System.out.println(\"\\tPlease follow this format \\\"todo \u003ctask\u003e\\\".\");"},{"lineNumber":175,"author":{"gitId":"aaronsms"},"content":"            } else {"},{"lineNumber":176,"author":{"gitId":"aaronsms"},"content":"                final String task \u003d splitOnSpace[1].strip();"},{"lineNumber":177,"author":{"gitId":"aaronsms"},"content":"                store.add(new ToDo(task));"},{"lineNumber":178,"author":{"gitId":"aaronsms"},"content":"                isInsert \u003d true;"},{"lineNumber":179,"author":{"gitId":"aaronsms"},"content":"            }"},{"lineNumber":180,"author":{"gitId":"aaronsms"},"content":"        } else if (command.equals(\"deadline\")) {"},{"lineNumber":181,"author":{"gitId":"aaronsms"},"content":"            final int index \u003d input.indexOf(\" /by \");"},{"lineNumber":182,"author":{"gitId":"aaronsms"},"content":"            final String[] splitOnBy \u003d input.split(\" /by \", 2);"},{"lineNumber":183,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":184,"author":{"gitId":"aaronsms"},"content":"            if (index \u003d\u003d -1 || splitOnBy.length \u003c 2 || splitOnBy[1].strip().equals(\"\")) {"},{"lineNumber":185,"author":{"gitId":"aaronsms"},"content":"                System.out.println(\"\\tPlease follow this format \\\"deadline \u003ctodo\u003e /by \u003cdatetime\u003e\\\".\");"},{"lineNumber":186,"author":{"gitId":"aaronsms"},"content":"            } else {"},{"lineNumber":187,"author":{"gitId":"aaronsms"},"content":"                final String task \u003d splitOnBy[0].split(\"deadline \", 2)[1].strip();"},{"lineNumber":188,"author":{"gitId":"aaronsms"},"content":"                final String[] datetime \u003d splitOnBy[1].strip().split(\" \", 2);"},{"lineNumber":189,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":190,"author":{"gitId":"aaronsms"},"content":"                Deadline deadline \u003d null;"},{"lineNumber":191,"author":{"gitId":"aaronsms"},"content":"                if (datetime.length \u003d\u003d 1) {"},{"lineNumber":192,"author":{"gitId":"aaronsms"},"content":"                    deadline \u003d Deadline.create(task, datetime[0].strip());"},{"lineNumber":193,"author":{"gitId":"aaronsms"},"content":"                } else if (datetime.length \u003d\u003d 2) {"},{"lineNumber":194,"author":{"gitId":"aaronsms"},"content":"                    deadline \u003d Deadline.create(task, datetime[0].strip(), datetime[1].strip());"},{"lineNumber":195,"author":{"gitId":"aaronsms"},"content":"                }"},{"lineNumber":196,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":197,"author":{"gitId":"aaronsms"},"content":"                if (deadline !\u003d null) {"},{"lineNumber":198,"author":{"gitId":"aaronsms"},"content":"                    store.add(deadline);"},{"lineNumber":199,"author":{"gitId":"aaronsms"},"content":"                    isInsert \u003d true;"},{"lineNumber":200,"author":{"gitId":"aaronsms"},"content":"                } else {"},{"lineNumber":201,"author":{"gitId":"aaronsms"},"content":"                    System.out.println(\"\\tPlease follow this format \\\"YYYY-MM-DD [hh:mm[:ss]]\\\" for datetime.\");"},{"lineNumber":202,"author":{"gitId":"aaronsms"},"content":"                }"},{"lineNumber":203,"author":{"gitId":"aaronsms"},"content":"            }"},{"lineNumber":204,"author":{"gitId":"aaronsms"},"content":"        } else if (command.equals(\"event\")) {"},{"lineNumber":205,"author":{"gitId":"aaronsms"},"content":"            final int index \u003d input.indexOf(\" /at \");"},{"lineNumber":206,"author":{"gitId":"aaronsms"},"content":"            final String[] splitOnAt \u003d input.split(\" /at \", 2);"},{"lineNumber":207,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":208,"author":{"gitId":"aaronsms"},"content":"            if (index \u003d\u003d -1 || splitOnAt.length \u003c 2 || splitOnAt[1].strip().equals(\"\")) {"},{"lineNumber":209,"author":{"gitId":"aaronsms"},"content":"                System.out.println(\"\\tPlease follow this format \\\"event \u003ctodo\u003e /at \u003cdatetime\u003e\\\".\");"},{"lineNumber":210,"author":{"gitId":"aaronsms"},"content":"            } else {"},{"lineNumber":211,"author":{"gitId":"aaronsms"},"content":"                final String task \u003d splitOnAt[0].split(\"event \", 2)[1].strip();"},{"lineNumber":212,"author":{"gitId":"aaronsms"},"content":"                final String[] datetime \u003d splitOnAt[1].strip().split(\" \", 2);"},{"lineNumber":213,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":214,"author":{"gitId":"aaronsms"},"content":"                Event event \u003d null;"},{"lineNumber":215,"author":{"gitId":"aaronsms"},"content":"                if (datetime.length \u003d\u003d 1) {"},{"lineNumber":216,"author":{"gitId":"aaronsms"},"content":"                    event \u003d Event.create(task, datetime[0].strip());"},{"lineNumber":217,"author":{"gitId":"aaronsms"},"content":"                } else if (datetime.length \u003d\u003d 2) {"},{"lineNumber":218,"author":{"gitId":"aaronsms"},"content":"                    event \u003d Event.create(task, datetime[0].strip(), datetime[1].strip());"},{"lineNumber":219,"author":{"gitId":"aaronsms"},"content":"                }"},{"lineNumber":220,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":221,"author":{"gitId":"aaronsms"},"content":"                if (event !\u003d null) {"},{"lineNumber":222,"author":{"gitId":"aaronsms"},"content":"                    store.add(event);"},{"lineNumber":223,"author":{"gitId":"aaronsms"},"content":"                    isInsert \u003d true;"},{"lineNumber":224,"author":{"gitId":"aaronsms"},"content":"                } else {"},{"lineNumber":225,"author":{"gitId":"aaronsms"},"content":"                    System.out.println(\"\\tPlease follow this format \\\"YYYY-MM-DD [hh:mm[:ss]]\\\" for datetime.\");"},{"lineNumber":226,"author":{"gitId":"aaronsms"},"content":"                }"},{"lineNumber":227,"author":{"gitId":"aaronsms"},"content":"            }"},{"lineNumber":228,"author":{"gitId":"aaronsms"},"content":"        } else {"},{"lineNumber":229,"author":{"gitId":"aaronsms"},"content":"            System.out.println(\"\\tOops! Try inputting \\\"todo|deadline|event \u003ctask\u003e (\u003c/by|/at\u003e \u003cdatetime\u003e)\\\".\");"},{"lineNumber":230,"author":{"gitId":"aaronsms"},"content":"        }"},{"lineNumber":231,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":232,"author":{"gitId":"aaronsms"},"content":"        if (isInsert) {"},{"lineNumber":233,"author":{"gitId":"aaronsms"},"content":"            System.out.println(\"\\tGot it. I\u0027ve added this task: \");"},{"lineNumber":234,"author":{"gitId":"aaronsms"},"content":"            System.out.printf(\"\\tTask added: %s\\n\", store.get(store.size() - 1));"},{"lineNumber":235,"author":{"gitId":"aaronsms"},"content":"            System.out.printf(\"\\tNow you have %d task%s in the list.\\n\", store.size(), store.size() \u003d\u003d 1 ? \"\" : \"s\");"},{"lineNumber":236,"author":{"gitId":"aaronsms"},"content":"        }"},{"lineNumber":237,"author":{"gitId":"aaronsms"},"content":"    }"},{"lineNumber":238,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":239,"author":{"gitId":"aaronsms"},"content":"    private static void markTaskAsDone(List\u003cTask\u003e store, String input) {"},{"lineNumber":240,"author":{"gitId":"aaronsms"},"content":"        final String[] splitOnSpace \u003d input.split(\" \", 2);"},{"lineNumber":241,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":242,"author":{"gitId":"aaronsms"},"content":"        if (splitOnSpace.length \u003d\u003d 2 \u0026\u0026 !splitOnSpace[1].strip().equals(\"\")) {"},{"lineNumber":243,"author":{"gitId":"aaronsms"},"content":"            try {"},{"lineNumber":244,"author":{"gitId":"aaronsms"},"content":"                final int index \u003d Integer.parseInt(splitOnSpace[1].strip()) - 1;"},{"lineNumber":245,"author":{"gitId":"aaronsms"},"content":"                if (0 \u003c\u003d index \u0026\u0026 index \u003c store.size()) {"},{"lineNumber":246,"author":{"gitId":"aaronsms"},"content":"                    store.get(index).markAsDone();"},{"lineNumber":247,"author":{"gitId":"aaronsms"},"content":"                    System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");"},{"lineNumber":248,"author":{"gitId":"aaronsms"},"content":"                    System.out.printf(\"\\t%s\\n\", store.get(index));"},{"lineNumber":249,"author":{"gitId":"aaronsms"},"content":"                } else {"},{"lineNumber":250,"author":{"gitId":"aaronsms"},"content":"                    System.out.println(\"\\tOops! The index is out of bound.\");"},{"lineNumber":251,"author":{"gitId":"aaronsms"},"content":"                }"},{"lineNumber":252,"author":{"gitId":"aaronsms"},"content":"            } catch (final NumberFormatException e) {"},{"lineNumber":253,"author":{"gitId":"aaronsms"},"content":"                System.out.println(\"\\tOops! Please input a number.\");"},{"lineNumber":254,"author":{"gitId":"aaronsms"},"content":"            }"},{"lineNumber":255,"author":{"gitId":"aaronsms"},"content":"        } else {"},{"lineNumber":256,"author":{"gitId":"aaronsms"},"content":"            System.out.println(\"\\tPlease follow this format \\\"done \u003cindex\u003e\\\".\");"},{"lineNumber":257,"author":{"gitId":"aaronsms"},"content":"        }"},{"lineNumber":258,"author":{"gitId":"aaronsms"},"content":"    }"},{"lineNumber":259,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":260,"author":{"gitId":"aaronsms"},"content":"    private static void listTasks(List\u003cTask\u003e store) {"},{"lineNumber":261,"author":{"gitId":"aaronsms"},"content":"        if (store.size() \u003d\u003d 0) {"},{"lineNumber":262,"author":{"gitId":"aaronsms"},"content":"            System.out.println(\"\\tHmm... You do not have any tasks!\");"},{"lineNumber":263,"author":{"gitId":"aaronsms"},"content":"        } else {"},{"lineNumber":264,"author":{"gitId":"aaronsms"},"content":"            System.out.println(\"\\tHere are the tasks in your list:\");"},{"lineNumber":265,"author":{"gitId":"aaronsms"},"content":"        }"},{"lineNumber":266,"author":{"gitId":"aaronsms"},"content":"        int i \u003d 0;"},{"lineNumber":267,"author":{"gitId":"aaronsms"},"content":"        for (final Task t : store) {"},{"lineNumber":268,"author":{"gitId":"aaronsms"},"content":"            System.out.printf(\"\\t%d. %s\\n\", ++i, t);"},{"lineNumber":269,"author":{"gitId":"aaronsms"},"content":"        }"},{"lineNumber":270,"author":{"gitId":"aaronsms"},"content":"    }"},{"lineNumber":271,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":272,"author":{"gitId":"aaronsms"},"content":"    private static void horizontalLine() {"},{"lineNumber":273,"author":{"gitId":"aaronsms"},"content":"        System.out.println(\"────────────────────────────────────────────────────────────────────────────────\");"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":4,"aaronsms":271}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aaronsms"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":3,"author":{"gitId":"aaronsms"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"aaronsms"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":6,"author":{"gitId":"aaronsms"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"aaronsms"},"content":"\tpublic final LocalDate date;"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":"\tpublic final LocalTime time;"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":10,"author":{"gitId":"aaronsms"},"content":"\tprivate Event(String description, LocalDate date) {"},{"lineNumber":11,"author":{"gitId":"aaronsms"},"content":"\t\tsuper(false, description);"},{"lineNumber":12,"author":{"gitId":"aaronsms"},"content":"\t\tthis.date \u003d date;"},{"lineNumber":13,"author":{"gitId":"aaronsms"},"content":"\t\tthis.time \u003d null;"},{"lineNumber":14,"author":{"gitId":"aaronsms"},"content":"\t}"},{"lineNumber":15,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":16,"author":{"gitId":"aaronsms"},"content":"\tprivate Event(String description, LocalDate date, LocalTime time) {"},{"lineNumber":17,"author":{"gitId":"aaronsms"},"content":"\t\tsuper(false, description);"},{"lineNumber":18,"author":{"gitId":"aaronsms"},"content":"\t\tthis.date \u003d date;"},{"lineNumber":19,"author":{"gitId":"aaronsms"},"content":"\t\tthis.time \u003d time;"},{"lineNumber":20,"author":{"gitId":"aaronsms"},"content":"\t}"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":22,"author":{"gitId":"aaronsms"},"content":"\tpublic static Event create(String description, String dateStr) {"},{"lineNumber":23,"author":{"gitId":"aaronsms"},"content":"\t\ttry {"},{"lineNumber":24,"author":{"gitId":"aaronsms"},"content":"\t\t\tLocalDate date \u003d LocalDate.parse(dateStr, DateTimeFormatter.ISO_LOCAL_DATE);"},{"lineNumber":25,"author":{"gitId":"aaronsms"},"content":"\t\t\treturn new Event(description, date);"},{"lineNumber":26,"author":{"gitId":"aaronsms"},"content":"\t\t} catch (DateTimeParseException e) {"},{"lineNumber":27,"author":{"gitId":"aaronsms"},"content":"\t\t\treturn null;"},{"lineNumber":28,"author":{"gitId":"aaronsms"},"content":"\t\t}"},{"lineNumber":29,"author":{"gitId":"aaronsms"},"content":"\t}"},{"lineNumber":30,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":31,"author":{"gitId":"aaronsms"},"content":"\tpublic static Event create(String description, String dateStr, String timeStr) {"},{"lineNumber":32,"author":{"gitId":"aaronsms"},"content":"\t\ttry {"},{"lineNumber":33,"author":{"gitId":"aaronsms"},"content":"\t\t\tLocalDate date \u003d LocalDate.parse(dateStr, DateTimeFormatter.ISO_LOCAL_DATE);"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"\t\t\tLocalTime time \u003d LocalTime.parse(timeStr, DateTimeFormatter.ISO_LOCAL_TIME);"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"\t\t\treturn new Event(description, date, time);"},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"\t\t} catch (DateTimeParseException e) {"},{"lineNumber":37,"author":{"gitId":"aaronsms"},"content":"\t\t\treturn null;"},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"\t\t}"},{"lineNumber":39,"author":{"gitId":"aaronsms"},"content":"\t}"},{"lineNumber":40,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":41,"author":{"gitId":"aaronsms"},"content":"\tpublic String getDateTime() {"},{"lineNumber":42,"author":{"gitId":"aaronsms"},"content":"\t\tif (time \u003d\u003d null) {"},{"lineNumber":43,"author":{"gitId":"aaronsms"},"content":"\t\t\treturn date.toString();"},{"lineNumber":44,"author":{"gitId":"aaronsms"},"content":"\t\t}"},{"lineNumber":45,"author":{"gitId":"aaronsms"},"content":"\t\treturn String.format(\"%s %s\", this.date, this.time);"},{"lineNumber":46,"author":{"gitId":"aaronsms"},"content":"\t}"},{"lineNumber":47,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":48,"author":{"gitId":"aaronsms"},"content":"\t@Override"},{"lineNumber":49,"author":{"gitId":"aaronsms"},"content":"\tpublic String toString() {"},{"lineNumber":50,"author":{"gitId":"aaronsms"},"content":"\t\treturn String.format(\"[E][%s] %s (at: %s)\", this.getStatusIcon(), this.description, this.getDateTime());"},{"lineNumber":51,"author":{"gitId":"aaronsms"},"content":"\t}"},{"lineNumber":52,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":53,"author":{"gitId":"aaronsms"},"content":"\t@Override"},{"lineNumber":54,"author":{"gitId":"aaronsms"},"content":"\tpublic String encode() {"},{"lineNumber":55,"author":{"gitId":"aaronsms"},"content":"\t\treturn String.format(\"E | %s | %s | %s\", this.isDone ? \"1\" : \"0\", this.description, this.getDateTime());"},{"lineNumber":56,"author":{"gitId":"aaronsms"},"content":"\t}"},{"lineNumber":57,"author":{"gitId":"aaronsms"},"content":"}"}],"authorContributionMap":{"aaronsms":57}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aaronsms"},"content":"public abstract class Task {"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"    protected boolean isDone;"},{"lineNumber":3,"author":{"gitId":"aaronsms"},"content":"    protected final String description;"},{"lineNumber":4,"author":{"gitId":"aaronsms"},"content":"    public abstract String encode();"},{"lineNumber":5,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":6,"author":{"gitId":"aaronsms"},"content":"    protected Task(final boolean isDone, final String description) {"},{"lineNumber":7,"author":{"gitId":"aaronsms"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":11,"author":{"gitId":"aaronsms"},"content":"    public String getStatusIcon() {"},{"lineNumber":12,"author":{"gitId":"aaronsms"},"content":"        return (this.isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":13,"author":{"gitId":"aaronsms"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":15,"author":{"gitId":"aaronsms"},"content":"    public void markAsDone() {"},{"lineNumber":16,"author":{"gitId":"aaronsms"},"content":"        this.isDone \u003d true;"},{"lineNumber":17,"author":{"gitId":"aaronsms"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":19,"author":{"gitId":"aaronsms"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"aaronsms"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);"},{"lineNumber":22,"author":{"gitId":"aaronsms"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"aaronsms"},"content":"}"}],"authorContributionMap":{"aaronsms":23}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aaronsms"},"content":"public class ToDo extends Task {"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"\tpublic ToDo(String description) {"},{"lineNumber":3,"author":{"gitId":"aaronsms"},"content":"\t\tsuper(false, description);"},{"lineNumber":4,"author":{"gitId":"aaronsms"},"content":"\t}"},{"lineNumber":5,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":6,"author":{"gitId":"aaronsms"},"content":"\t@Override"},{"lineNumber":7,"author":{"gitId":"aaronsms"},"content":"\tpublic String toString() {"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":"\t\treturn String.format(\"[T][%s] %s\", this.getStatusIcon(), this.description);"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":"\t}"},{"lineNumber":10,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":11,"author":{"gitId":"aaronsms"},"content":"\t@Override"},{"lineNumber":12,"author":{"gitId":"aaronsms"},"content":"\tpublic String encode() {"},{"lineNumber":13,"author":{"gitId":"aaronsms"},"content":"\t\treturn String.format(\"T | %s | %s\", this.isDone ? \"1\" : \"0\", this.description);"},{"lineNumber":14,"author":{"gitId":"aaronsms"},"content":"\t}"},{"lineNumber":15,"author":{"gitId":"aaronsms"},"content":"}"}],"authorContributionMap":{"aaronsms":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"aaronsms"},"content":"list"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"todo borrow book"},{"lineNumber":3,"author":{"gitId":"aaronsms"},"content":"list"},{"lineNumber":4,"author":{"gitId":"aaronsms"},"content":"deadline math assignment /by 2021-01-27 "},{"lineNumber":5,"author":{"gitId":"aaronsms"},"content":"event project meeting /at    2021-01-29   10:30"},{"lineNumber":6,"author":{"gitId":"aaronsms"},"content":"list"},{"lineNumber":7,"author":{"gitId":"aaronsms"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":"list"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":"delete 2"},{"lineNumber":10,"author":{"gitId":"aaronsms"},"content":"done 2"},{"lineNumber":11,"author":{"gitId":"aaronsms"},"content":"delete 4"},{"lineNumber":12,"author":{"gitId":"aaronsms"},"content":"list"},{"lineNumber":13,"author":{"gitId":"aaronsms"},"content":"todo"},{"lineNumber":14,"author":{"gitId":"aaronsms"},"content":"deadline"},{"lineNumber":15,"author":{"gitId":"aaronsms"},"content":"event"},{"lineNumber":16,"author":{"gitId":"aaronsms"},"content":"todo todo"},{"lineNumber":17,"author":{"gitId":"aaronsms"},"content":"list list"},{"lineNumber":18,"author":{"gitId":"aaronsms"},"content":"bye bye"},{"lineNumber":19,"author":{"gitId":"aaronsms"},"content":"deadline physics homework"},{"lineNumber":20,"author":{"gitId":"aaronsms"},"content":"event dinner with Jen"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":"deadline programming assignment /by"},{"lineNumber":22,"author":{"gitId":"aaronsms"},"content":"event class gathering /at"},{"lineNumber":23,"author":{"gitId":"aaronsms"},"content":"list"},{"lineNumber":24,"author":{"gitId":"aaronsms"},"content":"deadline         physics homework       /by     Monday      "},{"lineNumber":25,"author":{"gitId":"aaronsms"},"content":"   event      dinner with Jen  /at      2021-01-28"},{"lineNumber":26,"author":{"gitId":"aaronsms"},"content":"list"},{"lineNumber":27,"author":{"gitId":"aaronsms"},"content":"deadline chemistry assignment /by /by /by 2021-02-25"},{"lineNumber":28,"author":{"gitId":"aaronsms"},"content":"event tea with Wilson /at /by /at 30 Jan"},{"lineNumber":29,"author":{"gitId":"aaronsms"},"content":"list"},{"lineNumber":30,"author":{"gitId":"aaronsms"},"content":"delete       4"},{"lineNumber":31,"author":{"gitId":"aaronsms"},"content":"done    4"},{"lineNumber":32,"author":{"gitId":"aaronsms"},"content":"   delete 6  "},{"lineNumber":33,"author":{"gitId":"aaronsms"},"content":"done asdf"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"delete 13edewq11 2 r2"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"delete 7"},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"done 8"},{"lineNumber":37,"author":{"gitId":"aaronsms"},"content":"list"},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"bye"}],"authorContributionMap":{"aaronsms":38}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"    rm -r ACTUAL.TXT EXPECTED-UNIX.TXT ./data"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"    rm -r ACTUAL.TXT EXPECTED-UNIX.TXT ./data"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":40,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"-":38,"aaronsms":2}}]
