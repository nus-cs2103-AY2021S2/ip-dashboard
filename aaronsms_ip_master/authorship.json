[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aaronsms"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"\tpublic final String dateTime;"},{"lineNumber":3,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":4,"author":{"gitId":"aaronsms"},"content":"\tpublic Deadline(String description, String dateTime) {"},{"lineNumber":5,"author":{"gitId":"aaronsms"},"content":"\t\tsuper(false, description);"},{"lineNumber":6,"author":{"gitId":"aaronsms"},"content":"\t\tthis.dateTime \u003d dateTime;"},{"lineNumber":7,"author":{"gitId":"aaronsms"},"content":"\t}"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":"\t@Override"},{"lineNumber":10,"author":{"gitId":"aaronsms"},"content":"\tpublic String toString() {"},{"lineNumber":11,"author":{"gitId":"aaronsms"},"content":"\t\treturn String.format(\"[D][%s] %s (by: %s)\", this.getStatusIcon(), this.description, this.dateTime);"},{"lineNumber":12,"author":{"gitId":"aaronsms"},"content":"\t}"},{"lineNumber":13,"author":{"gitId":"aaronsms"},"content":"}"}],"authorContributionMap":{"aaronsms":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aaronsms"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"aaronsms"},"content":"    public static void main(final String[] args) {"},{"lineNumber":5,"author":{"gitId":"aaronsms"},"content":"        final String logo \u003d \" ____        _        \\n\" + \"|  _ \\\\ _   _| | _____ \\n\" + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":6,"author":{"gitId":"aaronsms"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\" + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":7,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":"        System.out.println(\"What can I do for you?\");"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":"        horizontalLine();"},{"lineNumber":10,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":11,"author":{"gitId":"aaronsms"},"content":"        final Task store[] \u003d new Task[100];"},{"lineNumber":12,"author":{"gitId":"aaronsms"},"content":"        int counter \u003d 0;"},{"lineNumber":13,"author":{"gitId":"aaronsms"},"content":"        final Scanner scan \u003d new Scanner(System.in);"},{"lineNumber":14,"author":{"gitId":"aaronsms"},"content":"        while (scan.hasNextLine()) {"},{"lineNumber":15,"author":{"gitId":"aaronsms"},"content":"            final String input \u003d scan.nextLine();"},{"lineNumber":16,"author":{"gitId":"aaronsms"},"content":"            final String[] tokens \u003d input.split(\" \");"},{"lineNumber":17,"author":{"gitId":"aaronsms"},"content":"            boolean isInsert \u003d false;"},{"lineNumber":18,"author":{"gitId":"aaronsms"},"content":"            horizontalLine();"},{"lineNumber":19,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":20,"author":{"gitId":"aaronsms"},"content":"            if (input.toLowerCase().equals(\"bye\")) {"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":"                System.out.println(\"\\tBye. Hope to see you again soon!\");"},{"lineNumber":22,"author":{"gitId":"aaronsms"},"content":"                horizontalLine();"},{"lineNumber":23,"author":{"gitId":"aaronsms"},"content":"                break;"},{"lineNumber":24,"author":{"gitId":"aaronsms"},"content":"            }"},{"lineNumber":25,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":26,"author":{"gitId":"aaronsms"},"content":"            if (input.equals(\"\")) { // empty string"},{"lineNumber":27,"author":{"gitId":"aaronsms"},"content":"                System.out.println(\"\\t...\");"},{"lineNumber":28,"author":{"gitId":"aaronsms"},"content":"            } else if (input.equals(\"list\")) { // list tasks"},{"lineNumber":29,"author":{"gitId":"aaronsms"},"content":"                if (counter \u003d\u003d 0) {"},{"lineNumber":30,"author":{"gitId":"aaronsms"},"content":"                    System.out.println(\"\\tHmm... You do not have any tasks!\");"},{"lineNumber":31,"author":{"gitId":"aaronsms"},"content":"                } else {"},{"lineNumber":32,"author":{"gitId":"aaronsms"},"content":"                    System.out.println(\"\\tHere are the tasks in your list:\");"},{"lineNumber":33,"author":{"gitId":"aaronsms"},"content":"                }"},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"                for (int i \u003d 0; i \u003c counter; i++) {"},{"lineNumber":35,"author":{"gitId":"aaronsms"},"content":"                    System.out.printf(\"\\t%d. %s\\n\", i + 1, store[i]);"},{"lineNumber":36,"author":{"gitId":"aaronsms"},"content":"                }"},{"lineNumber":37,"author":{"gitId":"aaronsms"},"content":"            } else if (tokens[0].equals(\"done\")) { // mark task as done"},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"                if (tokens.length \u003d\u003d 2) {"},{"lineNumber":39,"author":{"gitId":"aaronsms"},"content":"                    try {"},{"lineNumber":40,"author":{"gitId":"aaronsms"},"content":"                        final int index \u003d Integer.parseInt(tokens[1]) - 1;"},{"lineNumber":41,"author":{"gitId":"aaronsms"},"content":"                        if (0 \u003c\u003d index \u0026\u0026 index \u003c counter) {"},{"lineNumber":42,"author":{"gitId":"aaronsms"},"content":"                            store[index].markAsDone();"},{"lineNumber":43,"author":{"gitId":"aaronsms"},"content":"                            System.out.println(\"\\tNice! I\u0027ve marked this task as done:\");"},{"lineNumber":44,"author":{"gitId":"aaronsms"},"content":"                            System.out.printf(\"\\t%s\\n\", store[index]);"},{"lineNumber":45,"author":{"gitId":"aaronsms"},"content":"                        } else {"},{"lineNumber":46,"author":{"gitId":"aaronsms"},"content":"                            System.out.println(\"\\tOpps! The index is out of bound.\");"},{"lineNumber":47,"author":{"gitId":"aaronsms"},"content":"                        }"},{"lineNumber":48,"author":{"gitId":"aaronsms"},"content":"                    } catch (final NumberFormatException e) {"},{"lineNumber":49,"author":{"gitId":"aaronsms"},"content":"                        System.out.println(\"\\tOpps! Please input a number.\");"},{"lineNumber":50,"author":{"gitId":"aaronsms"},"content":"                    }"},{"lineNumber":51,"author":{"gitId":"aaronsms"},"content":"                } else {"},{"lineNumber":52,"author":{"gitId":"aaronsms"},"content":"                    System.out.println(\"\\tPlease follow this format \\\"done \u003cindex\u003e\\\".\");"},{"lineNumber":53,"author":{"gitId":"aaronsms"},"content":"                }"},{"lineNumber":54,"author":{"gitId":"aaronsms"},"content":"            } else { // add task to list"},{"lineNumber":55,"author":{"gitId":"aaronsms"},"content":"                if (counter \u003e\u003d 100) {"},{"lineNumber":56,"author":{"gitId":"aaronsms"},"content":"                    System.out.println(\"\\tSorry. The database is full!\");"},{"lineNumber":57,"author":{"gitId":"aaronsms"},"content":"                } else if (tokens[0].equals(\"todo\")) {"},{"lineNumber":58,"author":{"gitId":"aaronsms"},"content":"                    if (tokens.length \u003c 2) {"},{"lineNumber":59,"author":{"gitId":"aaronsms"},"content":"                        System.out.println(\"\\tPlease follow this format \\\"todo \u003ctask\u003e\\\".\");"},{"lineNumber":60,"author":{"gitId":"aaronsms"},"content":"                    } else {"},{"lineNumber":61,"author":{"gitId":"aaronsms"},"content":"                        store[counter] \u003d new ToDo(input.split(\" \", 2)[1]);"},{"lineNumber":62,"author":{"gitId":"aaronsms"},"content":"                        isInsert \u003d true;"},{"lineNumber":63,"author":{"gitId":"aaronsms"},"content":"                    }"},{"lineNumber":64,"author":{"gitId":"aaronsms"},"content":"                } else if (tokens[0].equals(\"deadline\")) {"},{"lineNumber":65,"author":{"gitId":"aaronsms"},"content":"                    final int index \u003d input.indexOf(\" /by \");"},{"lineNumber":66,"author":{"gitId":"aaronsms"},"content":"                    final String[] splitOnBy \u003d input.split(\" /by \", 2);"},{"lineNumber":67,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":68,"author":{"gitId":"aaronsms"},"content":"                    if (index \u003d\u003d -1 || splitOnBy.length \u003c 2) {"},{"lineNumber":69,"author":{"gitId":"aaronsms"},"content":"                        System.out.println(\"\\tPlease follow this format \\\"deadline \u003ctodo\u003e /by \u003cdatetime\u003e\\\".\");"},{"lineNumber":70,"author":{"gitId":"aaronsms"},"content":"                    } else {"},{"lineNumber":71,"author":{"gitId":"aaronsms"},"content":"                        final String task \u003d splitOnBy[0].split(\"deadline \", 2)[1];"},{"lineNumber":72,"author":{"gitId":"aaronsms"},"content":"                        final String datetime \u003d splitOnBy[1];"},{"lineNumber":73,"author":{"gitId":"aaronsms"},"content":"                        store[counter] \u003d new Deadline(task, datetime);"},{"lineNumber":74,"author":{"gitId":"aaronsms"},"content":"                        isInsert \u003d true;"},{"lineNumber":75,"author":{"gitId":"aaronsms"},"content":"                    }"},{"lineNumber":76,"author":{"gitId":"aaronsms"},"content":"                } else if (tokens[0].equals(\"event\")) {"},{"lineNumber":77,"author":{"gitId":"aaronsms"},"content":"                    final int index \u003d input.indexOf(\" /at \");"},{"lineNumber":78,"author":{"gitId":"aaronsms"},"content":"                    final String[] splitOnAt \u003d input.split(\" /at \", 2);"},{"lineNumber":79,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":80,"author":{"gitId":"aaronsms"},"content":"                    if (index \u003d\u003d -1 || splitOnAt.length \u003c 2) {"},{"lineNumber":81,"author":{"gitId":"aaronsms"},"content":"                        System.out.println(\"\\tPlease follow this format \\\"event \u003ctodo\u003e /at \u003cdatetime\u003e\\\".\");"},{"lineNumber":82,"author":{"gitId":"aaronsms"},"content":"                    } else {"},{"lineNumber":83,"author":{"gitId":"aaronsms"},"content":"                        final String task \u003d splitOnAt[0].split(\"event \", 2)[1];"},{"lineNumber":84,"author":{"gitId":"aaronsms"},"content":"                        final String datetime \u003d splitOnAt[1];"},{"lineNumber":85,"author":{"gitId":"aaronsms"},"content":"                        store[counter] \u003d new Event(task, datetime);"},{"lineNumber":86,"author":{"gitId":"aaronsms"},"content":"                        isInsert \u003d true;"},{"lineNumber":87,"author":{"gitId":"aaronsms"},"content":"                    }"},{"lineNumber":88,"author":{"gitId":"aaronsms"},"content":"                } else {"},{"lineNumber":89,"author":{"gitId":"aaronsms"},"content":"                    System.out.println(\"\\tOpps! Try inputting \\\"todo|deadline|event \u003ctask\u003e (\u003c/by|/at\u003e \u003cdatetime\u003e)\\\".\");"},{"lineNumber":90,"author":{"gitId":"aaronsms"},"content":"                }"},{"lineNumber":91,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":92,"author":{"gitId":"aaronsms"},"content":"                if (isInsert) {"},{"lineNumber":93,"author":{"gitId":"aaronsms"},"content":"                    System.out.println(\"\\tGot it. I\u0027ve added this task: \");"},{"lineNumber":94,"author":{"gitId":"aaronsms"},"content":"                    System.out.printf(\"\\tTask added: %s\\n\", store[counter++]);"},{"lineNumber":95,"author":{"gitId":"aaronsms"},"content":"                    System.out.printf(\"\\tNow you have %d task%s in the list.\\n\", counter, counter \u003d\u003d 1 ? \"\" : \"s\");"},{"lineNumber":96,"author":{"gitId":"aaronsms"},"content":"                }"},{"lineNumber":97,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":98,"author":{"gitId":"aaronsms"},"content":"            }"},{"lineNumber":99,"author":{"gitId":"aaronsms"},"content":"            horizontalLine();"},{"lineNumber":100,"author":{"gitId":"aaronsms"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"aaronsms"},"content":"        scan.close();"},{"lineNumber":102,"author":{"gitId":"aaronsms"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":104,"author":{"gitId":"aaronsms"},"content":"    private static void horizontalLine() {"},{"lineNumber":105,"author":{"gitId":"aaronsms"},"content":"        System.out.println(\"────────────────────────────────────────────────────────────────────────────────\");"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":4,"aaronsms":103}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aaronsms"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"\tpublic final String dateTime;"},{"lineNumber":3,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":4,"author":{"gitId":"aaronsms"},"content":"\tpublic Event(String description, String dateTime) {"},{"lineNumber":5,"author":{"gitId":"aaronsms"},"content":"\t\tsuper(false, description);"},{"lineNumber":6,"author":{"gitId":"aaronsms"},"content":"\t\tthis.dateTime \u003d dateTime;"},{"lineNumber":7,"author":{"gitId":"aaronsms"},"content":"\t}"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":"\t@Override"},{"lineNumber":10,"author":{"gitId":"aaronsms"},"content":"\tpublic String toString() {"},{"lineNumber":11,"author":{"gitId":"aaronsms"},"content":"\t\treturn String.format(\"[E][%s] %s (at: %s)\", this.getStatusIcon(), this.description, this.dateTime);"},{"lineNumber":12,"author":{"gitId":"aaronsms"},"content":"\t}"},{"lineNumber":13,"author":{"gitId":"aaronsms"},"content":"}"}],"authorContributionMap":{"aaronsms":13}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aaronsms"},"content":"public abstract class Task {"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"    protected boolean isDone;"},{"lineNumber":3,"author":{"gitId":"aaronsms"},"content":"    protected final String description;"},{"lineNumber":4,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":5,"author":{"gitId":"aaronsms"},"content":"    protected Task(final boolean isDone, final String description) {"},{"lineNumber":6,"author":{"gitId":"aaronsms"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":7,"author":{"gitId":"aaronsms"},"content":"        this.description \u003d description;"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":10,"author":{"gitId":"aaronsms"},"content":"    public String getStatusIcon() {"},{"lineNumber":11,"author":{"gitId":"aaronsms"},"content":"        return (this.isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":12,"author":{"gitId":"aaronsms"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":14,"author":{"gitId":"aaronsms"},"content":"    public void markAsDone() {"},{"lineNumber":15,"author":{"gitId":"aaronsms"},"content":"        this.isDone \u003d true;"},{"lineNumber":16,"author":{"gitId":"aaronsms"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":18,"author":{"gitId":"aaronsms"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"aaronsms"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"aaronsms"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);"},{"lineNumber":21,"author":{"gitId":"aaronsms"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"aaronsms"},"content":"}"}],"authorContributionMap":{"aaronsms":22}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"aaronsms"},"content":"public class ToDo extends Task {"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"\tpublic ToDo(String description) {"},{"lineNumber":3,"author":{"gitId":"aaronsms"},"content":"\t\tsuper(false, description);"},{"lineNumber":4,"author":{"gitId":"aaronsms"},"content":"\t}"},{"lineNumber":5,"author":{"gitId":"aaronsms"},"content":""},{"lineNumber":6,"author":{"gitId":"aaronsms"},"content":"\t@Override"},{"lineNumber":7,"author":{"gitId":"aaronsms"},"content":"\tpublic String toString() {"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":"\t\treturn String.format(\"[T][%s] %s\", this.getStatusIcon(), this.description);"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":"\t}"},{"lineNumber":10,"author":{"gitId":"aaronsms"},"content":"}"}],"authorContributionMap":{"aaronsms":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"aaronsms"},"content":"list"},{"lineNumber":2,"author":{"gitId":"aaronsms"},"content":"todo borrow book"},{"lineNumber":3,"author":{"gitId":"aaronsms"},"content":"deadline math assignment /by Sunday"},{"lineNumber":4,"author":{"gitId":"aaronsms"},"content":"event project meeting /at 27 Jan"},{"lineNumber":5,"author":{"gitId":"aaronsms"},"content":"list"},{"lineNumber":6,"author":{"gitId":"aaronsms"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"aaronsms"},"content":"todo return book"},{"lineNumber":8,"author":{"gitId":"aaronsms"},"content":"done 2"},{"lineNumber":9,"author":{"gitId":"aaronsms"},"content":"list"},{"lineNumber":10,"author":{"gitId":"aaronsms"},"content":"done 4"},{"lineNumber":11,"author":{"gitId":"aaronsms"},"content":"list"},{"lineNumber":12,"author":{"gitId":"aaronsms"},"content":"done 3"},{"lineNumber":13,"author":{"gitId":"aaronsms"},"content":"list"},{"lineNumber":14,"author":{"gitId":"aaronsms"},"content":"bye"}],"authorContributionMap":{"aaronsms":14}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"aaronsms"},"content":"    rm ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":38,"author":{"gitId":"aaronsms"},"content":"    rm ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":40,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"-":38,"aaronsms":2}}]
