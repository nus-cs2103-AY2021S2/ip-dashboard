[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import duke.Parser;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import duke.Ui;"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import duke.command.Command;"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"import duke.exception.DukeCommandException;"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"import duke.exception.DukeException;"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"import duke.exception.DukeToDoException;"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"    private Storage storage;"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    private TaskList tasks;"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"    private Ui ui;"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"    public Duke(String filePathStr) {"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"        ui \u003d new Ui();"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"        storage \u003d new Storage(filePathStr);"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"            tasks \u003d new TaskList(storage.loadData());"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"        } catch (IOException e) {"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"    public void run() {"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"        ui.showWelcome();"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"        boolean isExit \u003d false;"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"        while (!isExit) {"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"            try{"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"                String fullCommand \u003d ui.getUserCommand();"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"                ui.showLine();"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"                Command c \u003d Parser.parseCommand(fullCommand);"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"                c.execute(tasks, ui, storage);"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"            } catch (IOException | DukeCommandException e) {"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"                ui.showError(e.getMessage());"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"            } catch (DukeToDoException e) {"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"                 ui.showError(e.getMessage());"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"        new Duke(\"tasks.txt\").run();"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"mechastriker3":45,"-":4}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import duke.command.*;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import duke.exception.DukeCommandException;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import duke.exception.DukeToDoException;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"public class Parser {"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"     * Parses a userInput and outputs a command for execution"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"     * @param userInput"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"     * @return Different Command depending on input"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"    public static Command parseCommand(String userInput) throws DukeToDoException, DukeCommandException {"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"        String[] splitInput \u003d userInput.split(\" \", 2);"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"        String command \u003d splitInput[0];"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"        if (command.equals(\"list\")) {"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"            return new ListCommand();"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"        } else if (command.equals(\"done\")){"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"            return parseDone(splitInput[1]);"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"        } else if (command.equals(\"delete\")){"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"            return parseDelete(splitInput[1]);"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"        } else if (isValidTaskCommand(command)) {"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"            return parseTask(userInput);"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"        } else {"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"            throw new DukeCommandException(\"Sorry Human. I do not comprehend.\\n\"+"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"                    \"Please read the user manual and try again\");"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"    public static boolean isValidTaskCommand(String command) {"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"        return command.equals(\"event\") || command.equals(\"deadline\") || command.equals(\"todo\");"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"     * Parse the command args in the context of Done"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"     * @param arg"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"     * @return DoneCommand"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"    public static Command parseDone(String arg) {"},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"        int idxDone \u003d Integer.parseInt(arg) - 1;"},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":"        return new DoneCommand(idxDone);"},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":51,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"mechastriker3"},"content":"     * Parse the command args in the context of Delete"},{"lineNumber":53,"author":{"gitId":"mechastriker3"},"content":"     * @param arg"},{"lineNumber":54,"author":{"gitId":"mechastriker3"},"content":"     * @return DeleteCommand"},{"lineNumber":55,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"mechastriker3"},"content":"    public static Command parseDelete(String arg) {"},{"lineNumber":57,"author":{"gitId":"mechastriker3"},"content":"        int idxDel \u003d Integer.parseInt(arg) - 1;"},{"lineNumber":58,"author":{"gitId":"mechastriker3"},"content":"        return new DeleteCommand(idxDel);"},{"lineNumber":59,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":61,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"mechastriker3"},"content":"     * Parse the command in the context of Task"},{"lineNumber":63,"author":{"gitId":"mechastriker3"},"content":"     * @param input"},{"lineNumber":64,"author":{"gitId":"mechastriker3"},"content":"     * @return TaskCommand"},{"lineNumber":65,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"mechastriker3"},"content":"    public static Command parseTask(String input) throws DukeToDoException, DukeCommandException {"},{"lineNumber":67,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":68,"author":{"gitId":"mechastriker3"},"content":"        String[] splitInput \u003d input.split(\" \", 2);"},{"lineNumber":69,"author":{"gitId":"mechastriker3"},"content":"        String command \u003d splitInput[0];"},{"lineNumber":70,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":71,"author":{"gitId":"mechastriker3"},"content":"        switch (command) {"},{"lineNumber":72,"author":{"gitId":"mechastriker3"},"content":"        case \"todo\":"},{"lineNumber":73,"author":{"gitId":"mechastriker3"},"content":"            if(splitInput.length \u003d\u003d 1) {"},{"lineNumber":74,"author":{"gitId":"mechastriker3"},"content":"                throw new DukeToDoException(\"The description of a todo cannot be empty.\");"},{"lineNumber":75,"author":{"gitId":"mechastriker3"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"mechastriker3"},"content":"            String taskDescription \u003d splitInput[1];"},{"lineNumber":77,"author":{"gitId":"mechastriker3"},"content":"            return new TaskCommand(command, taskDescription);"},{"lineNumber":78,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":79,"author":{"gitId":"mechastriker3"},"content":"        case \"deadline\":"},{"lineNumber":80,"author":{"gitId":"mechastriker3"},"content":"            String[] taskDetails \u003d splitInput[1].split(\"/by\");"},{"lineNumber":81,"author":{"gitId":"mechastriker3"},"content":"            taskDescription \u003d taskDetails[0];"},{"lineNumber":82,"author":{"gitId":"mechastriker3"},"content":"            LocalDate endTime \u003d  LocalDate.parse(taskDetails[1].trim());"},{"lineNumber":83,"author":{"gitId":"mechastriker3"},"content":"            return new TaskCommand(command, taskDescription, endTime);"},{"lineNumber":84,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":85,"author":{"gitId":"mechastriker3"},"content":"        case \"event\":"},{"lineNumber":86,"author":{"gitId":"mechastriker3"},"content":"            taskDetails \u003d splitInput[1].split(\"/at\");"},{"lineNumber":87,"author":{"gitId":"mechastriker3"},"content":"            taskDescription \u003d taskDetails[0];"},{"lineNumber":88,"author":{"gitId":"mechastriker3"},"content":"            LocalDate eventTime \u003d  LocalDate.parse(taskDetails[1].trim());"},{"lineNumber":89,"author":{"gitId":"mechastriker3"},"content":"            return new TaskCommand(command, taskDescription, eventTime);"},{"lineNumber":90,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":91,"author":{"gitId":"mechastriker3"},"content":"        default:"},{"lineNumber":92,"author":{"gitId":"mechastriker3"},"content":"            throw new DukeCommandException(\"Invalid Command.\");"},{"lineNumber":93,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":95}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import duke.task.Event;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import duke.task.ToDo;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import duke.task.Deadline;"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"import java.io.File;"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"import java.io.FileWriter;"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"import java.nio.file.Files;"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"import java.nio.file.Path;"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"import java.nio.file.Paths;"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"import java.util.ArrayList;"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"import java.util.List;"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":" * Storage class to save information to hard disk."},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":" */"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"public class Storage {"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"    private final String DEFAULT_PATH \u003d \"./duke.txt\";"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"    private final Path filePath;"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"    public Storage() {"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"        this.filePath \u003d Paths.get(DEFAULT_PATH);"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"        File file \u003d new File(DEFAULT_PATH);"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"        if (Files.notExists(this.filePath)) {"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"            try {"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"                System.out.println(\"created new file\");"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"                file.createNewFile();"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"            } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"                e.printStackTrace();"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"            }"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"     * Constructor that takes in filepath to data file"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"     * @param filePathStr"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"    public Storage(String filePathStr) {"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"        this.filePath \u003d Paths.get(filePathStr);"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"        File file \u003d new File(DEFAULT_PATH);"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"        if (Files.notExists(this.filePath)) {"},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"            try {"},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":"                System.out.println(\"created new file\");"},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":"                file.createNewFile();"},{"lineNumber":50,"author":{"gitId":"mechastriker3"},"content":"            } catch (IOException e) {"},{"lineNumber":51,"author":{"gitId":"mechastriker3"},"content":"                e.printStackTrace();"},{"lineNumber":52,"author":{"gitId":"mechastriker3"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":56,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"mechastriker3"},"content":"     * Method to save TaskList to hard disk."},{"lineNumber":58,"author":{"gitId":"mechastriker3"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"mechastriker3"},"content":"     * @param taskList"},{"lineNumber":60,"author":{"gitId":"mechastriker3"},"content":"     * @throws IOException"},{"lineNumber":61,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"mechastriker3"},"content":"    public void writeData(List\u003cTask\u003e taskList) throws IOException {"},{"lineNumber":63,"author":{"gitId":"mechastriker3"},"content":"        FileWriter file \u003d new FileWriter(DEFAULT_PATH);"},{"lineNumber":64,"author":{"gitId":"mechastriker3"},"content":"        for (Task task : taskList) {"},{"lineNumber":65,"author":{"gitId":"mechastriker3"},"content":"            String toBeSaved \u003d \"\";"},{"lineNumber":66,"author":{"gitId":"mechastriker3"},"content":"            switch (task.getTaskType()) {"},{"lineNumber":67,"author":{"gitId":"mechastriker3"},"content":"                case \"DEADLINE\":"},{"lineNumber":68,"author":{"gitId":"mechastriker3"},"content":"                    toBeSaved \u003d String.format(\"%s|%s|%s|%s\","},{"lineNumber":69,"author":{"gitId":"mechastriker3"},"content":"                            task.getTaskType(),"},{"lineNumber":70,"author":{"gitId":"mechastriker3"},"content":"                            task.getIsDone(),"},{"lineNumber":71,"author":{"gitId":"mechastriker3"},"content":"                            task.getTaskDescription(),"},{"lineNumber":72,"author":{"gitId":"mechastriker3"},"content":"                            ((Deadline) task).getEndTime());"},{"lineNumber":73,"author":{"gitId":"mechastriker3"},"content":"                    break;"},{"lineNumber":74,"author":{"gitId":"mechastriker3"},"content":"                case \"TODO\":"},{"lineNumber":75,"author":{"gitId":"mechastriker3"},"content":"                    toBeSaved \u003d String.format(\"%s|%s|%s\","},{"lineNumber":76,"author":{"gitId":"mechastriker3"},"content":"                            task.getTaskType(),"},{"lineNumber":77,"author":{"gitId":"mechastriker3"},"content":"                            task.getIsDone(),"},{"lineNumber":78,"author":{"gitId":"mechastriker3"},"content":"                            task.getTaskDescription());"},{"lineNumber":79,"author":{"gitId":"mechastriker3"},"content":"                    // System.out.println(\"im at todo\");"},{"lineNumber":80,"author":{"gitId":"mechastriker3"},"content":"                    break;"},{"lineNumber":81,"author":{"gitId":"mechastriker3"},"content":"                case \"EVENT\":"},{"lineNumber":82,"author":{"gitId":"mechastriker3"},"content":"                    toBeSaved \u003d String.format(\"%s|%s|%s|%s\","},{"lineNumber":83,"author":{"gitId":"mechastriker3"},"content":"                            task.getTaskType(),"},{"lineNumber":84,"author":{"gitId":"mechastriker3"},"content":"                            task.getIsDone(),"},{"lineNumber":85,"author":{"gitId":"mechastriker3"},"content":"                            task.getTaskDescription(),"},{"lineNumber":86,"author":{"gitId":"mechastriker3"},"content":"                            ((Event) task).getEventTime());"},{"lineNumber":87,"author":{"gitId":"mechastriker3"},"content":"                    break;"},{"lineNumber":88,"author":{"gitId":"mechastriker3"},"content":"                default:"},{"lineNumber":89,"author":{"gitId":"mechastriker3"},"content":"                    continue;"},{"lineNumber":90,"author":{"gitId":"mechastriker3"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"mechastriker3"},"content":"            file.write(toBeSaved + \"\\n\");"},{"lineNumber":92,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"mechastriker3"},"content":"        file.close();"},{"lineNumber":94,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":96,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":97,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"mechastriker3"},"content":"     * Wrapper method to accept TaskList instead of a List."},{"lineNumber":99,"author":{"gitId":"mechastriker3"},"content":"     *"},{"lineNumber":100,"author":{"gitId":"mechastriker3"},"content":"     * @param taskList"},{"lineNumber":101,"author":{"gitId":"mechastriker3"},"content":"     * @throws IOException"},{"lineNumber":102,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"mechastriker3"},"content":"    public void writeData(TaskList taskList) throws IOException {"},{"lineNumber":104,"author":{"gitId":"mechastriker3"},"content":"        writeData(taskList.getTaskList());"},{"lineNumber":105,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":107,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":108,"author":{"gitId":"mechastriker3"},"content":"    public List\u003cTask\u003e loadData() throws IOException {"},{"lineNumber":109,"author":{"gitId":"mechastriker3"},"content":"        // checks to see if a file is already supposed to be there"},{"lineNumber":110,"author":{"gitId":"mechastriker3"},"content":"        Scanner sc \u003d new Scanner(filePath.toFile());"},{"lineNumber":111,"author":{"gitId":"mechastriker3"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":112,"author":{"gitId":"mechastriker3"},"content":"        while (sc.hasNext()) {"},{"lineNumber":113,"author":{"gitId":"mechastriker3"},"content":"            String line \u003d sc.nextLine();"},{"lineNumber":114,"author":{"gitId":"mechastriker3"},"content":"            String[] storedTask \u003d line.split(\"\\\\|\");"},{"lineNumber":115,"author":{"gitId":"mechastriker3"},"content":"            String taskType \u003d storedTask[0];"},{"lineNumber":116,"author":{"gitId":"mechastriker3"},"content":"            boolean isDone \u003d storedTask[1].equals(\"true\");"},{"lineNumber":117,"author":{"gitId":"mechastriker3"},"content":"            String taskDescription \u003d storedTask[2];"},{"lineNumber":118,"author":{"gitId":"mechastriker3"},"content":"            Task taskToBeAdded \u003d null;"},{"lineNumber":119,"author":{"gitId":"mechastriker3"},"content":"            switch (taskType) {"},{"lineNumber":120,"author":{"gitId":"mechastriker3"},"content":"                case \"DEADLINE\":"},{"lineNumber":121,"author":{"gitId":"mechastriker3"},"content":"                    taskToBeAdded \u003d new Deadline(taskDescription, LocalDate.parse(storedTask[3]), isDone);"},{"lineNumber":122,"author":{"gitId":"mechastriker3"},"content":"                    break;"},{"lineNumber":123,"author":{"gitId":"mechastriker3"},"content":"                case \"TODO\":"},{"lineNumber":124,"author":{"gitId":"mechastriker3"},"content":"                    taskToBeAdded \u003d new ToDo(taskDescription, isDone);"},{"lineNumber":125,"author":{"gitId":"mechastriker3"},"content":"                    break;"},{"lineNumber":126,"author":{"gitId":"mechastriker3"},"content":"                case \"EVENT\":"},{"lineNumber":127,"author":{"gitId":"mechastriker3"},"content":"                    taskToBeAdded \u003d new Event(taskDescription, LocalDate.parse(storedTask[3]), isDone);"},{"lineNumber":128,"author":{"gitId":"mechastriker3"},"content":"                    break;"},{"lineNumber":129,"author":{"gitId":"mechastriker3"},"content":"                default:"},{"lineNumber":130,"author":{"gitId":"mechastriker3"},"content":"                    continue;"},{"lineNumber":131,"author":{"gitId":"mechastriker3"},"content":"            }"},{"lineNumber":132,"author":{"gitId":"mechastriker3"},"content":"            taskList.add(taskToBeAdded);"},{"lineNumber":133,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":134,"author":{"gitId":"mechastriker3"},"content":"        sc.close();"},{"lineNumber":135,"author":{"gitId":"mechastriker3"},"content":"        return taskList;"},{"lineNumber":136,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":137}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"    private List\u003cTask\u003e taskList;"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"    public TaskList() {"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"    public TaskList(List\u003cTask\u003e taskList) {"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"     * To get current total count of tasks in a list."},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"     * @return total count of tasks."},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"    public int getTasksCount() {"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"        return this.taskList.size();"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"     * To get current task list"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"     * @return current task list"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"    public List\u003cTask\u003e getTaskList() {"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"        return taskList;"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"    public Task getTask(int index) {"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"        return taskList.get(index);"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"     * To set a task\u0027s completion status."},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"     * @param index Position of the task in the list."},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"    public void setTaskIsDone(int index, boolean isDone) {"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"        this.taskList.get(index).setIsDone(isDone);"},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":"    public void addTask(Task task) {"},{"lineNumber":50,"author":{"gitId":"mechastriker3"},"content":"        this.taskList.add(task);"},{"lineNumber":51,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":53,"author":{"gitId":"mechastriker3"},"content":"    public void deleteTask(int index) {"},{"lineNumber":54,"author":{"gitId":"mechastriker3"},"content":"        this.taskList.remove(index);"},{"lineNumber":55,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":57,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":57}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import duke.task.Event;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import duke.task.Task;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import duke.task.ToDo;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import duke.task.Deadline;"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"import java.io.InputStream;"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"import java.io.PrintStream;"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"import java.time.LocalDate;"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":" * Class to represent text UI of application."},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":" */"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"public class Ui {"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"    private static final String LINE_PREFIX \u003d \"\u003e\u003e\u003e \";"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Hello Human, I am Bob.\";"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"    private static final String EXIT_MESSAGE \u003d \"Goodbye Human.\";"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"    private final Scanner in;"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"    private final PrintStream out;"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"     * Wrapper constructor to be used."},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"    public Ui() {"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"        this(System.in, System.out);"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"     * Constructor to set standard input and output for Ui"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"     * @param in"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"     * @param out"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"    public Ui(InputStream in, PrintStream out) {"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"        this.in \u003d new Scanner(in);"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"        this.out \u003d out;"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"    public String getUserCommand() {"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"        out.print(LINE_PREFIX);"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"        String rawInput \u003d in.nextLine();"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"        return rawInput;"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":"    public void showWelcome() {"},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":"        out.println(LINE_PREFIX + WELCOME_MESSAGE);"},{"lineNumber":50,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":52,"author":{"gitId":"mechastriker3"},"content":"    public void showBye() {"},{"lineNumber":53,"author":{"gitId":"mechastriker3"},"content":"        out.println(LINE_PREFIX + EXIT_MESSAGE);"},{"lineNumber":54,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":56,"author":{"gitId":"mechastriker3"},"content":"    public void printTasks(TaskList taskList) {"},{"lineNumber":57,"author":{"gitId":"mechastriker3"},"content":"        out.println(LINE_PREFIX + \"Ok Human. Here are your tasks:\");"},{"lineNumber":58,"author":{"gitId":"mechastriker3"},"content":"        int i \u003d 1;"},{"lineNumber":59,"author":{"gitId":"mechastriker3"},"content":"        for( Task t : taskList.getTaskList()) {"},{"lineNumber":60,"author":{"gitId":"mechastriker3"},"content":"            out.printf(\"    %d: [%s] [%s] %s\\n\", i,"},{"lineNumber":61,"author":{"gitId":"mechastriker3"},"content":"                    t.getTaskType(), t.getStatusIcon(), t.getTaskDescription());"},{"lineNumber":62,"author":{"gitId":"mechastriker3"},"content":"            i++;"},{"lineNumber":63,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":66,"author":{"gitId":"mechastriker3"},"content":"    public void printTaskDone(Task task) {"},{"lineNumber":67,"author":{"gitId":"mechastriker3"},"content":"        out.printf(\"%s Noted Human. I\u0027ve marked this task as done:\\n  [%s] [%s] %s\\n\","},{"lineNumber":68,"author":{"gitId":"mechastriker3"},"content":"                LINE_PREFIX, task.getTaskType(), task.getStatusIcon(),"},{"lineNumber":69,"author":{"gitId":"mechastriker3"},"content":"                task.getTaskDescription());"},{"lineNumber":70,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":72,"author":{"gitId":"mechastriker3"},"content":"    public void printTaskDeleted(Task task) {"},{"lineNumber":73,"author":{"gitId":"mechastriker3"},"content":"        out.printf(\"%s Task deleted successfully:\\n  [%s] [%s] %s\\n \","},{"lineNumber":74,"author":{"gitId":"mechastriker3"},"content":"                LINE_PREFIX, task.getTaskType(), task.getStatusIcon(),"},{"lineNumber":75,"author":{"gitId":"mechastriker3"},"content":"                task.getTaskDescription());"},{"lineNumber":76,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"mechastriker3"},"content":"    "},{"lineNumber":78,"author":{"gitId":"mechastriker3"},"content":"    public void printAddToDo(ToDo toDo) {"},{"lineNumber":79,"author":{"gitId":"mechastriker3"},"content":"        System.out.printf(\"%s added:\\n   [%s] [%s] %s\\n\","},{"lineNumber":80,"author":{"gitId":"mechastriker3"},"content":"                LINE_PREFIX, toDo.getTaskType(), toDo.getStatusIcon(),"},{"lineNumber":81,"author":{"gitId":"mechastriker3"},"content":"                toDo.getTaskDescription());"},{"lineNumber":82,"author":{"gitId":"mechastriker3"},"content":"        "},{"lineNumber":83,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":85,"author":{"gitId":"mechastriker3"},"content":"    public void printAddDeadLine(Deadline deadline) {"},{"lineNumber":86,"author":{"gitId":"mechastriker3"},"content":"        LocalDate time \u003d deadline.getEndTime();"},{"lineNumber":87,"author":{"gitId":"mechastriker3"},"content":"        System.out.printf(\"%s added:\\n   [%s] [%s] %s (by: %s %s %s)\\n\","},{"lineNumber":88,"author":{"gitId":"mechastriker3"},"content":"                LINE_PREFIX, deadline.getTaskType(), deadline.getStatusIcon(),"},{"lineNumber":89,"author":{"gitId":"mechastriker3"},"content":"                deadline.getTaskDescription(), time.getMonth(),"},{"lineNumber":90,"author":{"gitId":"mechastriker3"},"content":"                time.getDayOfMonth(), time.getYear());"},{"lineNumber":91,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":93,"author":{"gitId":"mechastriker3"},"content":"    public void printAddEvent(Event event) {"},{"lineNumber":94,"author":{"gitId":"mechastriker3"},"content":"        LocalDate time \u003d event.getEventTime();"},{"lineNumber":95,"author":{"gitId":"mechastriker3"},"content":"        System.out.printf(\"%s added:\\n   [%s] [%s] %s (at: %s %s %s)\\n\","},{"lineNumber":96,"author":{"gitId":"mechastriker3"},"content":"                LINE_PREFIX, event.getTaskType(), event.getStatusIcon(),"},{"lineNumber":97,"author":{"gitId":"mechastriker3"},"content":"                event.getTaskDescription(), time.getMonth(),"},{"lineNumber":98,"author":{"gitId":"mechastriker3"},"content":"                time.getDayOfMonth(), time.getYear());"},{"lineNumber":99,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":101,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":102,"author":{"gitId":"mechastriker3"},"content":"    public void showError(String errorMsg) {"},{"lineNumber":103,"author":{"gitId":"mechastriker3"},"content":"        out.println(\"[ERROR]: \" + errorMsg);"},{"lineNumber":104,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":105,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":106,"author":{"gitId":"mechastriker3"},"content":"    public void showLine() {"},{"lineNumber":107,"author":{"gitId":"mechastriker3"},"content":"        out.println(\"-----------------------------\");"},{"lineNumber":108,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":110,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":110}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"public abstract class Command {"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"    private boolean isExit;"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    public Command() {"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"        this.isExit \u003d false;"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws IOException;"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"    public boolean isExit() {"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"        return this.isExit;"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":21}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"    private int index;"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    public DeleteCommand(int index) {"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"        this.index \u003d index;"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"        taskList.deleteTask(index);"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"        // System.out.printf(\"\u003e\u003e\u003e Nice! I\u0027ve marked this task as done:\\n  [%s] [%s] %s\\n\","},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"        //         taskList..getTaskType(), newTask.getStatusIcon(), newTask.getTaskDescription());"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"        ui.printTaskDeleted(taskList.getTask(index));"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"        storage.writeData(taskList);"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":24}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import duke.*;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"public class DoneCommand extends Command{"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"    private int index;"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"    public DoneCommand(int index) {"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"        this.index \u003d index;"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"        taskList.setTaskIsDone(index,true);"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"        // System.out.printf(\"\u003e\u003e\u003e Nice! I\u0027ve marked this task as done:\\n  [%s] [%s] %s\\n\","},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"        //         taskList..getTaskType(), newTask.getStatusIcon(), newTask.getTaskDescription());"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"        ui.printTaskDone(taskList.getTask(index));"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"        storage.writeData(taskList);"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":22}},{"path":"src/main/java/duke/command/DummyCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"public class DummyCommand extends Command{"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException { }"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":12}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"public class ExitCommand {"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"    "},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":5}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"public class ListCommand extends Command{"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"        ui.printTasks(taskList);"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":14}},{"path":"src/main/java/duke/command/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import duke.task.Event;"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import duke.task.Task;"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"import duke.task.ToDo;"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"import duke.task.Deadline;"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"import duke.Ui;"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"import java.time.LocalDate;"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"public class TaskCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"    private LocalDate time \u003d null;"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    private String description;"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"    private String taskType;"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"    public TaskCommand(String taskType, String description) {"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"        this.description \u003d description;"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"    public TaskCommand(String taskType, String description, LocalDate time) {"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"        this.description \u003d description;"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"        this.time \u003d time;"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws IllegalArgumentException {"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"        Task newTask;"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"        switch(taskType) {"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"        case \"todo\":"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"            ToDo newToDo \u003d new ToDo(this.description);"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"            taskList.addTask(newToDo);"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"            ui.printAddToDo(newToDo);"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"            break;"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"        case \"deadline\":"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"            Deadline newDeadLine \u003d new Deadline(this.description, this.time);"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"            taskList.addTask(newDeadLine);"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"            ui.printAddDeadLine(newDeadLine);"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"            break;"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"        case \"event\":"},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":"            Event newEvent \u003d new Event(this.description, this.time);"},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":"            taskList.addTask(newEvent);"},{"lineNumber":50,"author":{"gitId":"mechastriker3"},"content":"            ui.printAddEvent(newEvent);"},{"lineNumber":51,"author":{"gitId":"mechastriker3"},"content":"            break;"},{"lineNumber":52,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":54,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":55,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":56}},{"path":"src/main/java/duke/exception/DukeCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"public class DukeCommandException extends DukeException{"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"    public DukeCommandException(String str) {"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"        super(str);"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":7}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"     * Constructor for DukeException"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"     * @param str Error message."},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"    public DukeException(String str) {"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"        super(str);"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":13}},{"path":"src/main/java/duke/exception/DukeToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":" * DukeToDoException to handle exceptions related to the ToDo object."},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":" */"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"public class DukeToDoException extends DukeException{"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"     * Constructor for DukeToDoException"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"     * @param str"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    public DukeToDoException(String str) {"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"        super(str);"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":15}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"public class Deadline extends Task {"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"    private static String taskType \u003d \"DEADLINE\";"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"    private LocalDate endTime;"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"    public Deadline(String taskDescription, LocalDate endTime) {"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"        super(taskDescription);"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    public Deadline(String taskDescription, LocalDate endTime, boolean isDone) {"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"        super(taskDescription, isDone);"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"    public String getTaskType() {"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"        return taskType;"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"    public LocalDate getEndTime() {"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"        return endTime;"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":27}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"public class Event extends Task {"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"    private static String taskType \u003d \"EVENT\";"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"//    private String startTime;"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"//    private String endTime;"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"    private LocalDate eventTime;"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"    public Event(String description, LocalDate eventTime) {"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    public Event(String description, LocalDate eventTime, boolean isDone) {"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"        super(description, isDone);"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"    public String getTaskType() {"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"        return taskType;"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"    public LocalDate getEventTime() {"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"        return eventTime;"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":28}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"    private static String taskType \u003d \"TASK\";"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"    private String taskDescription;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"    private boolean isDone;"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"    public Task(String taskDescription) {"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"    public Task(String taskDescription, boolean isDone) {"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"    public String getTaskDescription() {"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"        return taskDescription;"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"    public String getTaskType() {"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"        return taskType;"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"    // public Task setIsDone(boolean done) {"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"    //"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"    //     return new Task(this.taskDescription, done);"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"    // }"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"    public void setIsDone(boolean done) {"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"        this.isDone \u003d done;"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"    public boolean getIsDone() {"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"        return isDone;"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"    public String getStatusIcon() {"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":43}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"public class ToDo extends Task {"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"    private static String taskType \u003d \"TODO\";"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"    public ToDo(String description) {"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"    public ToDo(String description, boolean isDone) {"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"        super(description, isDone);"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"    public  String getTaskType() {"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"        return taskType;"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":18}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"public class DukeTest {"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"    public void dummyTest(){"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"        assertEquals(2, 2);"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":12}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import duke.command.DoneCommand;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"public class ParserTest {"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"    public void validTaskCommand() {"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"        String dummyInput \u003d \"hello\";"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"        assertEquals(Parser.isValidTaskCommand(dummyInput), false);"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":14}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"public class ToDoTest {"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"    public void validTodo() {"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"        ToDo dummyToDo \u003d new ToDo(\"hold diamond hands\");"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"        assertEquals(\"[TODO]\" + \" [\\u2718] \" + \"hold diamond hands\", dummyToDo.toString());"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"hello"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"todo cook"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"bye"}],"authorContributionMap":{"mechastriker3":3}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"diff -u ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"mechastriker3":1,"-":37}}]
