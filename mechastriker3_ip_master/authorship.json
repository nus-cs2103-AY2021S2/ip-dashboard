[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"mechastriker3"},"content":"    archiveBaseName \u003d \"bob\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"mechastriker3"},"content":"//     sourceSets \u003d []"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"mechastriker3":18,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"\u003ch1\u003e"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"   \u003cspan style\u003d\"color:#4285F4\"\u003e "},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"      B.O.B Task Manager User Guide"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"   \u003c/span\u003e"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"\u003c/h1\u003e"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"A todo task manager bot to record and store list of tasks."},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"![image](./images/MrDestructoid.png)"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"Source: MrDestructoid (Twitch Emote) "},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"# Features"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"Below are the features currently implemented:"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"1. [**`Add`**](#add) Adding tasks to the bot."},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"   - 1.1. [**`Todo`**](#todo)"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"   - 1.2. [**`Event`**](#event)"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"   - 1.3. [**`Deadline`**](#deadline)"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"2. [**`List`**](#list) Listing all existing tasks."},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"3. [**`Marking Done`**](#done) Mark completed tasks as done."},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"4. [**`Delete`**](#delete) Deleting tasks using index."},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"5. [**`Find`**](#find) Finding tasks based on keywords."},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"6. [**`Remind`**](#remind) Remind Users about upcoming tasks."},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"7. [**`Storage \u0026 Retrieval`**](#storage) Storing of tasks in local drive."},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"## Feature Details"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"\u003ch3\u003e"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"   \u003cspan style\u003d\"color:#4285F4\"\u003e "},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"      Feature 1 - Adding tasks\u003ca name\u003d\"add\"\u003e\u003c/a\u003e"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"   \u003c/span\u003e"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"\u003c/h3\u003e"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"The user will be able to add new tasks into B.O.B Task Manager. "},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"There are 3 types of tasking of which the user can"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"segment his tasks into."},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"- Todo"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"- Event"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"- Deadline"},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"### Todo\u003ca name\u003d\"todo\"\u003e\u003c/a\u003e"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"Adds a todo task with **task description** into B.O.B Task Manager."},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"**Command Syntax**"},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"    "},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":"    todo \u003ctask description\u003e "},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":50,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":51,"author":{"gitId":"mechastriker3"},"content":"**Example of usage:**"},{"lineNumber":52,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":53,"author":{"gitId":"mechastriker3"},"content":"    todo read book"},{"lineNumber":54,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":55,"author":{"gitId":"mechastriker3"},"content":"**Expected outcome:**"},{"lineNumber":56,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":57,"author":{"gitId":"mechastriker3"},"content":"CLI:"},{"lineNumber":58,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":59,"author":{"gitId":"mechastriker3"},"content":"    ADDED: [TODO][X] read book"},{"lineNumber":60,"author":{"gitId":"mechastriker3"},"content":"    Current Total Tasks: 1 task"},{"lineNumber":61,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":62,"author":{"gitId":"mechastriker3"},"content":"GUI"},{"lineNumber":63,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":64,"author":{"gitId":"mechastriker3"},"content":"![image](./images/add-todo.png)"},{"lineNumber":65,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":66,"author":{"gitId":"mechastriker3"},"content":"### Event\u003ca name\u003d\"event\"\u003e\u003c/a\u003e"},{"lineNumber":67,"author":{"gitId":"mechastriker3"},"content":"Adds an event task with the **task description** and "},{"lineNumber":68,"author":{"gitId":"mechastriker3"},"content":"**Date and Time** into B.O.B Task Manager."},{"lineNumber":69,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":70,"author":{"gitId":"mechastriker3"},"content":"**Command Syntax**"},{"lineNumber":71,"author":{"gitId":"mechastriker3"},"content":"    "},{"lineNumber":72,"author":{"gitId":"mechastriker3"},"content":"    event \u003ctask description\u003e/at\u003cDate \u0026 Time\u003e"},{"lineNumber":73,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":74,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":75,"author":{"gitId":"mechastriker3"},"content":"**Date \u0026 Time format:** `yyyy-MM-dd HHmm`"},{"lineNumber":76,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":77,"author":{"gitId":"mechastriker3"},"content":"**Example of usage:**"},{"lineNumber":78,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":79,"author":{"gitId":"mechastriker3"},"content":"    event watch movie/at2021-02-14 1700"},{"lineNumber":80,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":81,"author":{"gitId":"mechastriker3"},"content":"**Expected outcome:**"},{"lineNumber":82,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":83,"author":{"gitId":"mechastriker3"},"content":"CLI:"},{"lineNumber":84,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":85,"author":{"gitId":"mechastriker3"},"content":"    ADDED: [EVENT][X] watch movie (at: Feb 14 2021, 17:00)"},{"lineNumber":86,"author":{"gitId":"mechastriker3"},"content":"    Current Total Tasks: 2 tasks"},{"lineNumber":87,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":88,"author":{"gitId":"mechastriker3"},"content":"GUI:"},{"lineNumber":89,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":90,"author":{"gitId":"mechastriker3"},"content":"![image](./images/add-event.png)"},{"lineNumber":91,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":92,"author":{"gitId":"mechastriker3"},"content":"### Deadline\u003ca name\u003d\"deadline\"\u003e\u003c/a\u003e"},{"lineNumber":93,"author":{"gitId":"mechastriker3"},"content":"Adds a deadline task with the **task description** and"},{"lineNumber":94,"author":{"gitId":"mechastriker3"},"content":"**Date and Time** into B.O.B Task Manager."},{"lineNumber":95,"author":{"gitId":"mechastriker3"},"content":"      "},{"lineNumber":96,"author":{"gitId":"mechastriker3"},"content":"**Command Syntax**"},{"lineNumber":97,"author":{"gitId":"mechastriker3"},"content":"    "},{"lineNumber":98,"author":{"gitId":"mechastriker3"},"content":"    deadline \u003ctask description\u003e/by\u003cDate \u0026 Time\u003e"},{"lineNumber":99,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":100,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":101,"author":{"gitId":"mechastriker3"},"content":"**Date \u0026 Time format:** `yyyy-MM-dd HHmm`"},{"lineNumber":102,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":103,"author":{"gitId":"mechastriker3"},"content":"**Example of usage:**"},{"lineNumber":104,"author":{"gitId":"mechastriker3"},"content":" "},{"lineNumber":105,"author":{"gitId":"mechastriker3"},"content":"    deadline return book/by2021-03-11 2359"},{"lineNumber":106,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":107,"author":{"gitId":"mechastriker3"},"content":"**Expected outcome:**"},{"lineNumber":108,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":109,"author":{"gitId":"mechastriker3"},"content":"CLI:"},{"lineNumber":110,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":111,"author":{"gitId":"mechastriker3"},"content":"    ADDED: [DEADLINE][X] return book (by: Mar 11 2021, 23:59)"},{"lineNumber":112,"author":{"gitId":"mechastriker3"},"content":"    Current Total Tasks: 3 tasks"},{"lineNumber":113,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":114,"author":{"gitId":"mechastriker3"},"content":"GUI:"},{"lineNumber":115,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":116,"author":{"gitId":"mechastriker3"},"content":"![image](./images/add-deadline.png)"},{"lineNumber":117,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":118,"author":{"gitId":"mechastriker3"},"content":"---"},{"lineNumber":119,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":120,"author":{"gitId":"mechastriker3"},"content":"\u003ch3\u003e"},{"lineNumber":121,"author":{"gitId":"mechastriker3"},"content":"   \u003cspan style\u003d\"color:#4285F4\"\u003e "},{"lineNumber":122,"author":{"gitId":"mechastriker3"},"content":"      Feature 2 - Listing tasks\u003ca name\u003d\"list\"\u003e\u003c/a\u003e"},{"lineNumber":123,"author":{"gitId":"mechastriker3"},"content":"   \u003c/span\u003e"},{"lineNumber":124,"author":{"gitId":"mechastriker3"},"content":"\u003c/h3\u003e"},{"lineNumber":125,"author":{"gitId":"mechastriker3"},"content":"The user will be able to list all existing tasks in B.O.B Task Manager."},{"lineNumber":126,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":127,"author":{"gitId":"mechastriker3"},"content":"**Command Syntax** "},{"lineNumber":128,"author":{"gitId":"mechastriker3"},"content":"  "},{"lineNumber":129,"author":{"gitId":"mechastriker3"},"content":"    list"},{"lineNumber":130,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":131,"author":{"gitId":"mechastriker3"},"content":"**Example of usage:**"},{"lineNumber":132,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":133,"author":{"gitId":"mechastriker3"},"content":"    list"},{"lineNumber":134,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":135,"author":{"gitId":"mechastriker3"},"content":"**Expected outcome:**"},{"lineNumber":136,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":137,"author":{"gitId":"mechastriker3"},"content":"CLI:"},{"lineNumber":138,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":139,"author":{"gitId":"mechastriker3"},"content":"    Ok Human. Here are your tasks:"},{"lineNumber":140,"author":{"gitId":"mechastriker3"},"content":"        1. [TODO][X] read book"},{"lineNumber":141,"author":{"gitId":"mechastriker3"},"content":"        2. [EVENT][X] watch movie (at: Feb 14 2021, 17:00)"},{"lineNumber":142,"author":{"gitId":"mechastriker3"},"content":"        3. [DEADLINE][X] return book (by: Mar 11 2021, 23:59)"},{"lineNumber":143,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":144,"author":{"gitId":"mechastriker3"},"content":"GUI:"},{"lineNumber":145,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":146,"author":{"gitId":"mechastriker3"},"content":"![image](./images/list.png)      "},{"lineNumber":147,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":148,"author":{"gitId":"mechastriker3"},"content":"---"},{"lineNumber":149,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":150,"author":{"gitId":"mechastriker3"},"content":"\u003ch3\u003e"},{"lineNumber":151,"author":{"gitId":"mechastriker3"},"content":"   \u003cspan style\u003d\"color:#4285F4\"\u003e "},{"lineNumber":152,"author":{"gitId":"mechastriker3"},"content":"      Feature 3 - Marking Done  \u003ca name\u003d\"done\"\u003e\u003c/a\u003e"},{"lineNumber":153,"author":{"gitId":"mechastriker3"},"content":"   \u003c/span\u003e"},{"lineNumber":154,"author":{"gitId":"mechastriker3"},"content":"\u003c/h3\u003e"},{"lineNumber":155,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":156,"author":{"gitId":"mechastriker3"},"content":"Marks the completion of a task using the index of the task. "},{"lineNumber":157,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":158,"author":{"gitId":"mechastriker3"},"content":"Completion status is indicated by a `X` or `✓`."},{"lineNumber":159,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":160,"author":{"gitId":"mechastriker3"},"content":"**Command Syntax**"},{"lineNumber":161,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":162,"author":{"gitId":"mechastriker3"},"content":"      done \u003cindex of task\u003e"},{"lineNumber":163,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":164,"author":{"gitId":"mechastriker3"},"content":"Note: The index of the task corresponds to the number beside it when listed, you can simply use `list`"},{"lineNumber":165,"author":{"gitId":"mechastriker3"},"content":"to get the index of the task."},{"lineNumber":166,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":167,"author":{"gitId":"mechastriker3"},"content":"**Example of usage:**"},{"lineNumber":168,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":169,"author":{"gitId":"mechastriker3"},"content":"    done 1"},{"lineNumber":170,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":171,"author":{"gitId":"mechastriker3"},"content":"**Expected outcome:**"},{"lineNumber":172,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":173,"author":{"gitId":"mechastriker3"},"content":"CLI:"},{"lineNumber":174,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":175,"author":{"gitId":"mechastriker3"},"content":"    Noted Human. I\u0027ve marked this task as done:"},{"lineNumber":176,"author":{"gitId":"mechastriker3"},"content":"    [TODO][✓] read book"},{"lineNumber":177,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":178,"author":{"gitId":"mechastriker3"},"content":"GUI:"},{"lineNumber":179,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":180,"author":{"gitId":"mechastriker3"},"content":"![image](./images/done.png)"},{"lineNumber":181,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":182,"author":{"gitId":"mechastriker3"},"content":"---"},{"lineNumber":183,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":184,"author":{"gitId":"mechastriker3"},"content":"\u003ch3\u003e"},{"lineNumber":185,"author":{"gitId":"mechastriker3"},"content":"   \u003cspan style\u003d\"color:#4285F4\"\u003e "},{"lineNumber":186,"author":{"gitId":"mechastriker3"},"content":"      Feature 4 - Delete  \u003ca name\u003d\"delete\"\u003e\u003c/a\u003e"},{"lineNumber":187,"author":{"gitId":"mechastriker3"},"content":"   \u003c/span\u003e"},{"lineNumber":188,"author":{"gitId":"mechastriker3"},"content":"\u003c/h3\u003e"},{"lineNumber":189,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":190,"author":{"gitId":"mechastriker3"},"content":"Deletes a task from the list using the index of the task."},{"lineNumber":191,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":192,"author":{"gitId":"mechastriker3"},"content":"**Command Syntax**"},{"lineNumber":193,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":194,"author":{"gitId":"mechastriker3"},"content":"      delete \u003cindex of task\u003e"},{"lineNumber":195,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":196,"author":{"gitId":"mechastriker3"},"content":"Note: The index of the task corresponds to the number beside it when listed, you can simply use `list`"},{"lineNumber":197,"author":{"gitId":"mechastriker3"},"content":"to get the index of the task."},{"lineNumber":198,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":199,"author":{"gitId":"mechastriker3"},"content":"**Example of usage:**"},{"lineNumber":200,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":201,"author":{"gitId":"mechastriker3"},"content":"    delete 1"},{"lineNumber":202,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":203,"author":{"gitId":"mechastriker3"},"content":"**Expected outcome:**"},{"lineNumber":204,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":205,"author":{"gitId":"mechastriker3"},"content":"CLI:"},{"lineNumber":206,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":207,"author":{"gitId":"mechastriker3"},"content":"    Task deleted successfully:"},{"lineNumber":208,"author":{"gitId":"mechastriker3"},"content":"    [TODO][✓] read book"},{"lineNumber":209,"author":{"gitId":"mechastriker3"},"content":"    Current Total Tasks: 2 tasks"},{"lineNumber":210,"author":{"gitId":"mechastriker3"},"content":"    "},{"lineNumber":211,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":212,"author":{"gitId":"mechastriker3"},"content":"GUI:"},{"lineNumber":213,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":214,"author":{"gitId":"mechastriker3"},"content":"![image](./images/delete.png)"},{"lineNumber":215,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":216,"author":{"gitId":"mechastriker3"},"content":"----"},{"lineNumber":217,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":218,"author":{"gitId":"mechastriker3"},"content":"\u003ch3\u003e"},{"lineNumber":219,"author":{"gitId":"mechastriker3"},"content":"   \u003cspan style\u003d\"color:#4285F4\"\u003e "},{"lineNumber":220,"author":{"gitId":"mechastriker3"},"content":"      Feature 5 - Find  \u003ca name\u003d\"find\"\u003e\u003c/a\u003e"},{"lineNumber":221,"author":{"gitId":"mechastriker3"},"content":"   \u003c/span\u003e"},{"lineNumber":222,"author":{"gitId":"mechastriker3"},"content":"\u003c/h3\u003e"},{"lineNumber":223,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":224,"author":{"gitId":"mechastriker3"},"content":"Find task(s) from the list using a given keyword and lists only the relevant task(s)."},{"lineNumber":225,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":226,"author":{"gitId":"mechastriker3"},"content":"**Command Syntax**"},{"lineNumber":227,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":228,"author":{"gitId":"mechastriker3"},"content":"      find \u003ckey word(s)\u003e"},{"lineNumber":229,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":230,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":231,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":232,"author":{"gitId":"mechastriker3"},"content":"**Example of usage:**"},{"lineNumber":233,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":234,"author":{"gitId":"mechastriker3"},"content":"    find book"},{"lineNumber":235,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":236,"author":{"gitId":"mechastriker3"},"content":"**Expected outcome:**"},{"lineNumber":237,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":238,"author":{"gitId":"mechastriker3"},"content":"CLI:"},{"lineNumber":239,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":240,"author":{"gitId":"mechastriker3"},"content":"    Ok Human. Here are the tasks I found:"},{"lineNumber":241,"author":{"gitId":"mechastriker3"},"content":"    1: [DEADLINE][X] return book (by: Mar 11 2021, 23:59)"},{"lineNumber":242,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":243,"author":{"gitId":"mechastriker3"},"content":"GUI:"},{"lineNumber":244,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":245,"author":{"gitId":"mechastriker3"},"content":"![image](./images/find.png)"},{"lineNumber":246,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":247,"author":{"gitId":"mechastriker3"},"content":"---"},{"lineNumber":248,"author":{"gitId":"-"},"content":""},{"lineNumber":249,"author":{"gitId":"mechastriker3"},"content":"\u003ch3\u003e"},{"lineNumber":250,"author":{"gitId":"mechastriker3"},"content":"   \u003cspan style\u003d\"color:#4285F4\"\u003e "},{"lineNumber":251,"author":{"gitId":"mechastriker3"},"content":"      Feature 6 - Remind  \u003ca name\u003d\"find\"\u003e\u003c/a\u003e"},{"lineNumber":252,"author":{"gitId":"mechastriker3"},"content":"   \u003c/span\u003e"},{"lineNumber":253,"author":{"gitId":"mechastriker3"},"content":"\u003c/h3\u003e"},{"lineNumber":254,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":255,"author":{"gitId":"mechastriker3"},"content":"Show upcoming task(s), and optional **number of days** argument can be given to "},{"lineNumber":256,"author":{"gitId":"mechastriker3"},"content":"specify the maximum time span (in days) for the task to be considered \u0027upcoming\u0027."},{"lineNumber":257,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":258,"author":{"gitId":"mechastriker3"},"content":"**Command Syntax**"},{"lineNumber":259,"author":{"gitId":"-"},"content":""},{"lineNumber":260,"author":{"gitId":"mechastriker3"},"content":"       remind"},{"lineNumber":261,"author":{"gitId":"mechastriker3"},"content":"or"},{"lineNumber":262,"author":{"gitId":"-"},"content":""},{"lineNumber":263,"author":{"gitId":"mechastriker3"},"content":"       remind \u003cnumber of days\u003e"},{"lineNumber":264,"author":{"gitId":"-"},"content":""},{"lineNumber":265,"author":{"gitId":"mechastriker3"},"content":"Note: If **number of days** not specified, the default time span is 3 days. "},{"lineNumber":266,"author":{"gitId":"mechastriker3"},"content":"This can be configured in the line below in RemindCommand.java"},{"lineNumber":267,"author":{"gitId":"-"},"content":""},{"lineNumber":268,"author":{"gitId":"mechastriker3"},"content":"      private static final int DEFAULT_NUM_DAYS \u003d 3;"},{"lineNumber":269,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":270,"author":{"gitId":"mechastriker3"},"content":"Full file path relative to root of project folder: `/src/main/java/duke/command/RemindCommand.java`"},{"lineNumber":271,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":272,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":273,"author":{"gitId":"mechastriker3"},"content":"**Example of usage:**"},{"lineNumber":274,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":275,"author":{"gitId":"mechastriker3"},"content":"    remind 30"},{"lineNumber":276,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":277,"author":{"gitId":"mechastriker3"},"content":"**Expected outcome:**"},{"lineNumber":278,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":279,"author":{"gitId":"mechastriker3"},"content":"CLI:"},{"lineNumber":280,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":281,"author":{"gitId":"mechastriker3"},"content":"    Ok Human. Here are the tasks I found:"},{"lineNumber":282,"author":{"gitId":"mechastriker3"},"content":"    1: [DEADLINE][X] return book (by: Mar 11 2021, 23:59)"},{"lineNumber":283,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":284,"author":{"gitId":"mechastriker3"},"content":"GUI:"},{"lineNumber":285,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":286,"author":{"gitId":"mechastriker3"},"content":"![image](./images/remind.png)"},{"lineNumber":287,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":288,"author":{"gitId":"mechastriker3"},"content":"---"},{"lineNumber":289,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":290,"author":{"gitId":"mechastriker3"},"content":"\u003ch3\u003e"},{"lineNumber":291,"author":{"gitId":"mechastriker3"},"content":"   \u003cspan style\u003d\"color:#4285F4\"\u003e "},{"lineNumber":292,"author":{"gitId":"mechastriker3"},"content":"      Feature 7 - Storage and Retrieval of Tasks  \u003ca name\u003d\"storage\"\u003e\u003c/a\u003e"},{"lineNumber":293,"author":{"gitId":"mechastriker3"},"content":"   \u003c/span\u003e"},{"lineNumber":294,"author":{"gitId":"mechastriker3"},"content":"\u003c/h3\u003e"},{"lineNumber":295,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":296,"author":{"gitId":"mechastriker3"},"content":"B.O.B Task Manager will attempt to retrieve stored tasks from a storage file "},{"lineNumber":297,"author":{"gitId":"mechastriker3"},"content":"in your local computer. Upon launching, it will parse through the"},{"lineNumber":298,"author":{"gitId":"mechastriker3"},"content":"text file and populate the application with the stored data."},{"lineNumber":299,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":300,"author":{"gitId":"mechastriker3"},"content":"If there are no storage files are found, a text file named `tasks.txt` will be  "},{"lineNumber":301,"author":{"gitId":"mechastriker3"},"content":"in created in the root directory of the project. All subsequent information will"},{"lineNumber":302,"author":{"gitId":"mechastriker3"},"content":"be stored in this file."},{"lineNumber":303,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":304,"author":{"gitId":"mechastriker3"},"content":"The default file path is set as shown below:"},{"lineNumber":305,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":306,"author":{"gitId":"mechastriker3"},"content":"    private final String defaultPath \u003d \"./tasks.txt\";"},{"lineNumber":307,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":308,"author":{"gitId":"mechastriker3"},"content":"If you would like to change the default directory or change the filename, "},{"lineNumber":309,"author":{"gitId":"mechastriker3"},"content":"you can edit the above code in `Storage.java`. "},{"lineNumber":310,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":311,"author":{"gitId":"mechastriker3"},"content":"Full file path relative to root of project folder: `/src/main/java/duke/Storage.java`"},{"lineNumber":312,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":313,"author":{"gitId":"mechastriker3"},"content":"---"},{"lineNumber":314,"author":{"gitId":"-"},"content":""},{"lineNumber":315,"author":{"gitId":"mechastriker3"},"content":"# THE END"}],"authorContributionMap":{"mechastriker3":299,"-":16}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":" */"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"    private void flip() {"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"        Collections.reverse(tmp);"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":50,"author":{"gitId":"mechastriker3"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":51,"author":{"gitId":"mechastriker3"},"content":"        return new DialogBox(text, img);"},{"lineNumber":52,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":54,"author":{"gitId":"mechastriker3"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"mechastriker3"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":56,"author":{"gitId":"mechastriker3"},"content":"        db.flip();"},{"lineNumber":57,"author":{"gitId":"mechastriker3"},"content":"        return db;"},{"lineNumber":58,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":59}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import duke.Parser;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import duke.Ui;"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import duke.command.Command;"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"import duke.exception.DukeCommandException;"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"import duke.exception.DukeToDoException;"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    private final Storage storage;"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"    private TaskList tasks;"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    private final Ui ui;"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"     * Constructor for Duke object with default filepath for storage"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"    public Duke() {"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"        this(\"tasks.txt\");"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"     * Constructor for Duke object with custom filepath for storage"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"     * @param filePathStr string of the custom filepath for storage"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"    public Duke(String filePathStr) {"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"        ui \u003d new Ui();"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"        storage \u003d new Storage(filePathStr);"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"            tasks \u003d new TaskList(storage.loadData());"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"     * You should have your own function to generate a response to user input."},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"     * Replace this stub with your completed method."},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"    String getResponse(String input) {"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"            Command c \u003d Parser.parseCommand(input);"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"            return c.execute(tasks, ui, storage);"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"        } catch (IOException | DukeCommandException | DukeToDoException e) {"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"            return ui.showError(e.getMessage());"},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"mechastriker3":46,"-":4}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":" */"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":" */"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    private final Duke duke \u003d new Duke();"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"    public void start(Stage stage) {"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"            stage.setTitle(\"B.O.B TASK MANAGER\");"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"            stage.show();"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"        } catch (IOException e) {"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"            e.printStackTrace();"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":30}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"import duke.Ui;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"import javafx.fxml.FXML;"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":" */"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"    @FXML"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    private VBox dialogContainer;"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"    private TextField userInput;"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"    private Duke duke;"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"     * Init mainWindow"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"    public void initialize() {"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"                DialogBox.getDukeDialog(ui.showWelcome(), dukeImage)"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"        );"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"        duke \u003d d;"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"    @FXML"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"    private void handleUserInput() {"},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":50,"author":{"gitId":"mechastriker3"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":51,"author":{"gitId":"mechastriker3"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":52,"author":{"gitId":"mechastriker3"},"content":"        );"},{"lineNumber":53,"author":{"gitId":"mechastriker3"},"content":"        userInput.clear();"},{"lineNumber":54,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":55,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":56}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import duke.command.Command;"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"import duke.command.DoneCommand;"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"import duke.command.ExitCommand;"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"import duke.command.FindCommand;"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"import duke.command.ListCommand;"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"import duke.command.RemindCommand;"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"import duke.command.TaskCommand;"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"import duke.exception.DukeCommandException;"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"import duke.exception.DukeToDoException;"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"public class Parser {"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"     * Parses a userInput and outputs a command for execution"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"     * @param userInput user\u0027s input"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"     * @return Different Command depending on input"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"    public static Command parseCommand(String userInput) throws DukeToDoException, DukeCommandException {"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"        if (userInput.equals(\"\")) {"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"            throw new DukeCommandException(\"Hi Human. Please enter a command\");"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"        String[] splitInput \u003d userInput.trim().split(\" \", 2);"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"        String command \u003d splitInput[0];"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"        if (command.equals(\"bye\")) {"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"            return new ExitCommand();"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"        } else if (command.equals(\"list\")) {"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"            return new ListCommand();"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"        } else if (command.equals(\"done\")) {"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"            return parseDone(splitInput[1]);"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"        } else if (command.equals(\"delete\")) {"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"            return parseDelete(splitInput[1]);"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"        } else if (command.equals(\"find\")) {"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"            return parseFind(splitInput[1]);"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"        } else if (command.equals(\"remind\")) {"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"            return parseRemind(userInput);"},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"        } else if (isValidTaskCommand(command)) {"},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":"            return parseTask(userInput);"},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":"        } else {"},{"lineNumber":50,"author":{"gitId":"mechastriker3"},"content":"            throw new DukeCommandException(\"Sorry Human. I do not comprehend.\");"},{"lineNumber":51,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":53,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":55,"author":{"gitId":"mechastriker3"},"content":"    public static boolean isValidTaskCommand(String command) {"},{"lineNumber":56,"author":{"gitId":"mechastriker3"},"content":"        return command.equals(\"event\") || command.equals(\"deadline\") || command.equals(\"todo\");"},{"lineNumber":57,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":59,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"mechastriker3"},"content":"     * Parse the command args in the context of Done"},{"lineNumber":61,"author":{"gitId":"mechastriker3"},"content":"     * @param arg user\u0027s input without the command part"},{"lineNumber":62,"author":{"gitId":"mechastriker3"},"content":"     * @return DoneCommand"},{"lineNumber":63,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"mechastriker3"},"content":"    public static Command parseDone(String arg) {"},{"lineNumber":65,"author":{"gitId":"mechastriker3"},"content":"        int idxDone \u003d Integer.parseInt(arg) - 1;"},{"lineNumber":66,"author":{"gitId":"mechastriker3"},"content":"        return new DoneCommand(idxDone);"},{"lineNumber":67,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":69,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"mechastriker3"},"content":"     * Parse the command args in the context of Delete"},{"lineNumber":71,"author":{"gitId":"mechastriker3"},"content":"     * @param arg user\u0027s input without the command part"},{"lineNumber":72,"author":{"gitId":"mechastriker3"},"content":"     * @return DeleteCommand"},{"lineNumber":73,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"mechastriker3"},"content":"    public static Command parseDelete(String arg) {"},{"lineNumber":75,"author":{"gitId":"mechastriker3"},"content":"        int idxDel \u003d Integer.parseInt(arg) - 1;"},{"lineNumber":76,"author":{"gitId":"mechastriker3"},"content":"        return new DeleteCommand(idxDel);"},{"lineNumber":77,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":79,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"mechastriker3"},"content":"     * Parse the command args in the context of Find"},{"lineNumber":81,"author":{"gitId":"mechastriker3"},"content":"     * @param keyword keyword to search the task description for"},{"lineNumber":82,"author":{"gitId":"mechastriker3"},"content":"     * @return FindCommand"},{"lineNumber":83,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"mechastriker3"},"content":"    public static Command parseFind(String keyword) {"},{"lineNumber":85,"author":{"gitId":"mechastriker3"},"content":"        return new FindCommand(keyword);"},{"lineNumber":86,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":88,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"mechastriker3"},"content":"     * Parse the command args in the context of Remind"},{"lineNumber":90,"author":{"gitId":"mechastriker3"},"content":"     * @param input user\u0027s input"},{"lineNumber":91,"author":{"gitId":"mechastriker3"},"content":"     * @return FindCommand"},{"lineNumber":92,"author":{"gitId":"mechastriker3"},"content":"     * @throws DukeCommandException exceptions in user command inputs for remind"},{"lineNumber":93,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"mechastriker3"},"content":"    public static Command parseRemind(String input) throws DukeCommandException {"},{"lineNumber":95,"author":{"gitId":"mechastriker3"},"content":"        String[] splitInput \u003d input.split(\" \");"},{"lineNumber":96,"author":{"gitId":"mechastriker3"},"content":"        switch (splitInput.length) {"},{"lineNumber":97,"author":{"gitId":"mechastriker3"},"content":"        case 1:"},{"lineNumber":98,"author":{"gitId":"mechastriker3"},"content":"            return new RemindCommand();"},{"lineNumber":99,"author":{"gitId":"mechastriker3"},"content":"        case 2:"},{"lineNumber":100,"author":{"gitId":"mechastriker3"},"content":"            try {"},{"lineNumber":101,"author":{"gitId":"mechastriker3"},"content":"                int numDays \u003d Integer.parseInt(splitInput[1]);"},{"lineNumber":102,"author":{"gitId":"mechastriker3"},"content":"                return new RemindCommand(numDays);"},{"lineNumber":103,"author":{"gitId":"mechastriker3"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":104,"author":{"gitId":"mechastriker3"},"content":"                throw new DukeCommandException(\"Only give integers for argument of remind\");"},{"lineNumber":105,"author":{"gitId":"mechastriker3"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"mechastriker3"},"content":"        default:"},{"lineNumber":107,"author":{"gitId":"mechastriker3"},"content":"            throw new DukeCommandException(\"Give the command in the correct format below:\\nremind \u003cinteger\u003e\");"},{"lineNumber":108,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":111,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":112,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":113,"author":{"gitId":"mechastriker3"},"content":"     * Parse the command in the context of Task"},{"lineNumber":114,"author":{"gitId":"mechastriker3"},"content":"     * @param input user\u0027s input"},{"lineNumber":115,"author":{"gitId":"mechastriker3"},"content":"     * @return TaskCommand"},{"lineNumber":116,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"mechastriker3"},"content":"    public static Command parseTask(String input) throws DukeToDoException, DukeCommandException {"},{"lineNumber":118,"author":{"gitId":"mechastriker3"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"},{"lineNumber":119,"author":{"gitId":"mechastriker3"},"content":"        String[] splitInput \u003d input.split(\" \", 2);"},{"lineNumber":120,"author":{"gitId":"mechastriker3"},"content":"        assert splitInput !\u003d null : \"splitInput cannot be null\";"},{"lineNumber":121,"author":{"gitId":"mechastriker3"},"content":"        String command \u003d splitInput[0];"},{"lineNumber":122,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":123,"author":{"gitId":"mechastriker3"},"content":"        switch (command) {"},{"lineNumber":124,"author":{"gitId":"mechastriker3"},"content":"        case \"todo\":"},{"lineNumber":125,"author":{"gitId":"mechastriker3"},"content":"            if (splitInput.length \u003d\u003d 1) {"},{"lineNumber":126,"author":{"gitId":"mechastriker3"},"content":"                throw new DukeToDoException(\"The description of a todo cannot be empty.\");"},{"lineNumber":127,"author":{"gitId":"mechastriker3"},"content":"            }"},{"lineNumber":128,"author":{"gitId":"mechastriker3"},"content":"            String taskDescription \u003d splitInput[1].trim();"},{"lineNumber":129,"author":{"gitId":"mechastriker3"},"content":"            return new TaskCommand(command, taskDescription);"},{"lineNumber":130,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":131,"author":{"gitId":"mechastriker3"},"content":"        case \"deadline\":"},{"lineNumber":132,"author":{"gitId":"mechastriker3"},"content":"            String[] taskDetails \u003d splitInput[1].split(\"/by\");"},{"lineNumber":133,"author":{"gitId":"mechastriker3"},"content":"            taskDescription \u003d taskDetails[0].trim();"},{"lineNumber":134,"author":{"gitId":"mechastriker3"},"content":"            LocalDateTime endTime \u003d LocalDateTime.parse(taskDetails[1].trim(),"},{"lineNumber":135,"author":{"gitId":"mechastriker3"},"content":"                    dateTimeFormatter);"},{"lineNumber":136,"author":{"gitId":"mechastriker3"},"content":"            return new TaskCommand(command, taskDescription, endTime);"},{"lineNumber":137,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":138,"author":{"gitId":"mechastriker3"},"content":"        case \"event\":"},{"lineNumber":139,"author":{"gitId":"mechastriker3"},"content":"            taskDetails \u003d splitInput[1].split(\"/at\");"},{"lineNumber":140,"author":{"gitId":"mechastriker3"},"content":"            taskDescription \u003d taskDetails[0].trim();"},{"lineNumber":141,"author":{"gitId":"mechastriker3"},"content":"            LocalDateTime eventTime \u003d LocalDateTime.parse(taskDetails[1].trim(),"},{"lineNumber":142,"author":{"gitId":"mechastriker3"},"content":"                    dateTimeFormatter);"},{"lineNumber":143,"author":{"gitId":"mechastriker3"},"content":"            return new TaskCommand(command, taskDescription, eventTime);"},{"lineNumber":144,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":145,"author":{"gitId":"mechastriker3"},"content":"        default:"},{"lineNumber":146,"author":{"gitId":"mechastriker3"},"content":"            throw new DukeCommandException(\"Invalid Command.\");"},{"lineNumber":147,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":148,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":149}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import java.io.File;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import java.nio.file.Files;"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"import java.nio.file.Path;"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"import java.nio.file.Paths;"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"import java.time.LocalDateTime;"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"import java.util.Scanner;"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"import duke.task.Deadline;"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"import duke.task.Event;"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"import duke.task.Task;"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"import duke.task.ToDo;"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":" * Storage class to save information to hard disk."},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":" */"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"public class Storage {"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"    private final Path filePath;"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"    private final String filePathStr;"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"     * Constructor that takes in filepath to data file"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"     * @param filePathStr string of the file path to the data file"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"    public Storage(String filePathStr) {"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"        this.filePath \u003d Paths.get(filePathStr);"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"        this.filePathStr \u003d filePathStr;"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"        File file \u003d new File(filePathStr);"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"        if (Files.notExists(this.filePath)) {"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"            try {"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"                System.out.println(\"created new file:\" + this.filePathStr);"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"                file.createNewFile();"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"            } catch (IOException e) {"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"                e.printStackTrace();"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"     * Method to save TaskList to hard disk."},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":"     * @param taskList List of Tasks"},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":"     * @throws IOException"},{"lineNumber":50,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"mechastriker3"},"content":"    public void saveData(List\u003cTask\u003e taskList) throws IOException {"},{"lineNumber":52,"author":{"gitId":"mechastriker3"},"content":"        FileWriter file \u003d new FileWriter(filePathStr);"},{"lineNumber":53,"author":{"gitId":"mechastriker3"},"content":"        for (Task task : taskList) {"},{"lineNumber":54,"author":{"gitId":"mechastriker3"},"content":"            String toBeSaved \u003d \"\";"},{"lineNumber":55,"author":{"gitId":"mechastriker3"},"content":"            switch (task.getTaskType()) {"},{"lineNumber":56,"author":{"gitId":"mechastriker3"},"content":"            case \"DEADLINE\":"},{"lineNumber":57,"author":{"gitId":"mechastriker3"},"content":"                toBeSaved \u003d String.format(\"%s|%s|%s|%s\","},{"lineNumber":58,"author":{"gitId":"mechastriker3"},"content":"                        task.getTaskType(),"},{"lineNumber":59,"author":{"gitId":"mechastriker3"},"content":"                        task.getIsDone(),"},{"lineNumber":60,"author":{"gitId":"mechastriker3"},"content":"                        task.getTaskDescription(), ("},{"lineNumber":61,"author":{"gitId":"mechastriker3"},"content":"                                (Deadline) task).getEndTime());"},{"lineNumber":62,"author":{"gitId":"mechastriker3"},"content":"                break;"},{"lineNumber":63,"author":{"gitId":"mechastriker3"},"content":"            case \"TODO\":"},{"lineNumber":64,"author":{"gitId":"mechastriker3"},"content":"                toBeSaved \u003d String.format(\"%s|%s|%s\","},{"lineNumber":65,"author":{"gitId":"mechastriker3"},"content":"                        task.getTaskType(),"},{"lineNumber":66,"author":{"gitId":"mechastriker3"},"content":"                        task.getIsDone(),"},{"lineNumber":67,"author":{"gitId":"mechastriker3"},"content":"                        task.getTaskDescription());"},{"lineNumber":68,"author":{"gitId":"mechastriker3"},"content":"                break;"},{"lineNumber":69,"author":{"gitId":"mechastriker3"},"content":"            case \"EVENT\":"},{"lineNumber":70,"author":{"gitId":"mechastriker3"},"content":"                toBeSaved \u003d String.format(\"%s|%s|%s|%s\","},{"lineNumber":71,"author":{"gitId":"mechastriker3"},"content":"                        task.getTaskType(),"},{"lineNumber":72,"author":{"gitId":"mechastriker3"},"content":"                        task.getIsDone(),"},{"lineNumber":73,"author":{"gitId":"mechastriker3"},"content":"                        task.getTaskDescription(), ("},{"lineNumber":74,"author":{"gitId":"mechastriker3"},"content":"                                (Event) task).getEventTime());"},{"lineNumber":75,"author":{"gitId":"mechastriker3"},"content":"                break;"},{"lineNumber":76,"author":{"gitId":"mechastriker3"},"content":"            default:"},{"lineNumber":77,"author":{"gitId":"mechastriker3"},"content":"                continue;"},{"lineNumber":78,"author":{"gitId":"mechastriker3"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"mechastriker3"},"content":"            file.write(toBeSaved + \"\\n\");"},{"lineNumber":80,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"mechastriker3"},"content":"        file.close();"},{"lineNumber":82,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":84,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":85,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"mechastriker3"},"content":"     * Wrapper method to accept TaskList instead of a List."},{"lineNumber":87,"author":{"gitId":"mechastriker3"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"mechastriker3"},"content":"     * @param taskList TaskList containing List of Tasks"},{"lineNumber":89,"author":{"gitId":"mechastriker3"},"content":"     * @throws IOException"},{"lineNumber":90,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"mechastriker3"},"content":"    public void saveData(TaskList taskList) throws IOException {"},{"lineNumber":92,"author":{"gitId":"mechastriker3"},"content":"        saveData(taskList.getTaskList());"},{"lineNumber":93,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":95,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"mechastriker3"},"content":"     * Load data from hard disk"},{"lineNumber":97,"author":{"gitId":"mechastriker3"},"content":"     * @return list of tasks"},{"lineNumber":98,"author":{"gitId":"mechastriker3"},"content":"     * @throws IOException"},{"lineNumber":99,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"mechastriker3"},"content":"    public List\u003cTask\u003e loadData() throws IOException {"},{"lineNumber":101,"author":{"gitId":"mechastriker3"},"content":"        // checks to see if a file is already supposed to be there"},{"lineNumber":102,"author":{"gitId":"mechastriker3"},"content":"        Scanner sc \u003d new Scanner(filePath.toFile());"},{"lineNumber":103,"author":{"gitId":"mechastriker3"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":104,"author":{"gitId":"mechastriker3"},"content":"        while (sc.hasNext()) {"},{"lineNumber":105,"author":{"gitId":"mechastriker3"},"content":"            String line \u003d sc.nextLine();"},{"lineNumber":106,"author":{"gitId":"mechastriker3"},"content":"            String[] storedTask \u003d line.split(\"\\\\|\");"},{"lineNumber":107,"author":{"gitId":"mechastriker3"},"content":"            String taskType \u003d storedTask[0];"},{"lineNumber":108,"author":{"gitId":"mechastriker3"},"content":"            boolean isDone \u003d storedTask[1].equals(\"true\");"},{"lineNumber":109,"author":{"gitId":"mechastriker3"},"content":"            String taskDescription \u003d storedTask[2];"},{"lineNumber":110,"author":{"gitId":"mechastriker3"},"content":"            Task taskToBeAdded;"},{"lineNumber":111,"author":{"gitId":"mechastriker3"},"content":"            switch (taskType) {"},{"lineNumber":112,"author":{"gitId":"mechastriker3"},"content":"            case \"DEADLINE\":"},{"lineNumber":113,"author":{"gitId":"mechastriker3"},"content":"                taskToBeAdded \u003d new Deadline(taskDescription, LocalDateTime.parse(storedTask[3]), isDone);"},{"lineNumber":114,"author":{"gitId":"mechastriker3"},"content":"                break;"},{"lineNumber":115,"author":{"gitId":"mechastriker3"},"content":"            case \"TODO\":"},{"lineNumber":116,"author":{"gitId":"mechastriker3"},"content":"                taskToBeAdded \u003d new ToDo(taskDescription, isDone);"},{"lineNumber":117,"author":{"gitId":"mechastriker3"},"content":"                break;"},{"lineNumber":118,"author":{"gitId":"mechastriker3"},"content":"            case \"EVENT\":"},{"lineNumber":119,"author":{"gitId":"mechastriker3"},"content":"                taskToBeAdded \u003d new Event(taskDescription, LocalDateTime.parse(storedTask[3]), isDone);"},{"lineNumber":120,"author":{"gitId":"mechastriker3"},"content":"                break;"},{"lineNumber":121,"author":{"gitId":"mechastriker3"},"content":"            default:"},{"lineNumber":122,"author":{"gitId":"mechastriker3"},"content":"                continue;"},{"lineNumber":123,"author":{"gitId":"mechastriker3"},"content":"            }"},{"lineNumber":124,"author":{"gitId":"mechastriker3"},"content":"            taskList.add(taskToBeAdded);"},{"lineNumber":125,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"mechastriker3"},"content":"        sc.close();"},{"lineNumber":127,"author":{"gitId":"mechastriker3"},"content":"        return taskList;"},{"lineNumber":128,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":129}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"    private final List\u003cTask\u003e taskList;"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    public TaskList() {"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    public TaskList(List\u003cTask\u003e taskList) {"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"     * To get current total count of tasks in a list."},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"     * @return total count of tasks."},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"    public int getTasksCount() {"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"        return this.taskList.size();"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"     * To get current task list"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"     * @return current task list"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"    public List\u003cTask\u003e getTaskList() {"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"        return taskList;"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"    public Task getTask(int index) {"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"        return taskList.get(index);"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"     * To set a task\u0027s completion status."},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"     * @param index Position of the task in the list."},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"    public void setTaskIsDone(int index, boolean isDone) {"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"        this.taskList.get(index).setIsDone(isDone);"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":"    public void addTask(Task task) {"},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":"        this.taskList.add(task);"},{"lineNumber":50,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":52,"author":{"gitId":"mechastriker3"},"content":"    public void deleteTask(int index) {"},{"lineNumber":53,"author":{"gitId":"mechastriker3"},"content":"        this.taskList.remove(index);"},{"lineNumber":54,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":56,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":56}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.io.InputStream;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import java.io.PrintStream;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import duke.task.Task;"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":" * Class to represent text UI of application."},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":" */"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"public class Ui {"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    private static final int EXIT_DELAY \u003d 3;"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"    private static final String LINE_PREFIX \u003d \"\";"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Hello Human, I am B.O.B\";"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"    private static final String EXIT_MESSAGE \u003d \"Goodbye Human. Exiting in \" + EXIT_DELAY + \" seconds...\";"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"    private static final String LINE_DIVIDER \u003d \"-----------------------------\\n\";"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"    private final Scanner in;"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"    private final PrintStream out;"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"     * Wrapper constructor to be used."},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"    public Ui() {"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"        this(System.in, System.out);"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"     * Constructor to set standard input and output for Ui"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"     * @param in InputStream"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"     * @param out PrintStream"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"    public Ui(InputStream in, PrintStream out) {"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"        this.in \u003d new Scanner(in);"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"        this.out \u003d out;"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"    public static float getExitDelay() {"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"        return EXIT_DELAY;"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"    public String showWelcome() {"},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"        return LINE_PREFIX + WELCOME_MESSAGE + \"\\n\";"},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":50,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":51,"author":{"gitId":"mechastriker3"},"content":"    public String showBye() {"},{"lineNumber":52,"author":{"gitId":"mechastriker3"},"content":"        return LINE_PREFIX + EXIT_MESSAGE + \"\\n\";"},{"lineNumber":53,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":55,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"mechastriker3"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"mechastriker3"},"content":"      * @param taskList"},{"lineNumber":58,"author":{"gitId":"mechastriker3"},"content":"     * @return"},{"lineNumber":59,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"mechastriker3"},"content":"    public String showTasksCount(TaskList taskList) {"},{"lineNumber":61,"author":{"gitId":"mechastriker3"},"content":"        int count \u003d taskList.getTasksCount();"},{"lineNumber":62,"author":{"gitId":"mechastriker3"},"content":"        return (count \u003d\u003d 1)"},{"lineNumber":63,"author":{"gitId":"mechastriker3"},"content":"            ? \"Current Total Tasks: \" + count"},{"lineNumber":64,"author":{"gitId":"mechastriker3"},"content":"                + \" task\""},{"lineNumber":65,"author":{"gitId":"mechastriker3"},"content":"            : \"Current Total Tasks: \" + count"},{"lineNumber":66,"author":{"gitId":"mechastriker3"},"content":"                    + \" tasks\";"},{"lineNumber":67,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":68,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":70,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"mechastriker3"},"content":"     * Return all task in taskList as a string"},{"lineNumber":72,"author":{"gitId":"mechastriker3"},"content":"     * @param taskList"},{"lineNumber":73,"author":{"gitId":"mechastriker3"},"content":"     * @return"},{"lineNumber":74,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"mechastriker3"},"content":"    public String showTasks(TaskList taskList) {"},{"lineNumber":76,"author":{"gitId":"mechastriker3"},"content":"        int i \u003d 1;"},{"lineNumber":77,"author":{"gitId":"mechastriker3"},"content":"        StringBuilder response \u003d new StringBuilder();"},{"lineNumber":78,"author":{"gitId":"mechastriker3"},"content":"        for (Task t : taskList.getTaskList()) {"},{"lineNumber":79,"author":{"gitId":"mechastriker3"},"content":"            if (t.getTaskType().equals(\"TODO\")) {"},{"lineNumber":80,"author":{"gitId":"mechastriker3"},"content":"                response.append(String.format(\"%d: [%s] [%s] %s\\n\", i,"},{"lineNumber":81,"author":{"gitId":"mechastriker3"},"content":"                        t.getTaskType(), t.getStatusIcon(), t.getTaskDescription()));"},{"lineNumber":82,"author":{"gitId":"mechastriker3"},"content":"            } else {"},{"lineNumber":83,"author":{"gitId":"mechastriker3"},"content":"                response.append(String.format(\"%d: %s\\n\", i, t));"},{"lineNumber":84,"author":{"gitId":"mechastriker3"},"content":"            }"},{"lineNumber":85,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":86,"author":{"gitId":"mechastriker3"},"content":"            i++;"},{"lineNumber":87,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":89,"author":{"gitId":"mechastriker3"},"content":"        return response.toString();"},{"lineNumber":90,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":92,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"mechastriker3"},"content":"     * Wrapper around showTask to add interactive sentence before the tasks"},{"lineNumber":94,"author":{"gitId":"mechastriker3"},"content":"     * @param taskList"},{"lineNumber":95,"author":{"gitId":"mechastriker3"},"content":"     * @return"},{"lineNumber":96,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"mechastriker3"},"content":"    public String showAllTasks(TaskList taskList) {"},{"lineNumber":98,"author":{"gitId":"mechastriker3"},"content":"        String response \u003d \"\";"},{"lineNumber":99,"author":{"gitId":"mechastriker3"},"content":"        response +\u003d LINE_PREFIX + \"Ok Human. Here are your tasks:\\n\";"},{"lineNumber":100,"author":{"gitId":"mechastriker3"},"content":"        response +\u003d showTasks(taskList);"},{"lineNumber":101,"author":{"gitId":"mechastriker3"},"content":"        return response;"},{"lineNumber":102,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":104,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"mechastriker3"},"content":"     * Show tasks found."},{"lineNumber":106,"author":{"gitId":"mechastriker3"},"content":"     * @param taskList"},{"lineNumber":107,"author":{"gitId":"mechastriker3"},"content":"     * @return"},{"lineNumber":108,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"mechastriker3"},"content":"    public String showFoundTasks(TaskList taskList) {"},{"lineNumber":110,"author":{"gitId":"mechastriker3"},"content":"        String response \u003d \"\";"},{"lineNumber":111,"author":{"gitId":"mechastriker3"},"content":"        response +\u003d LINE_PREFIX + \"Ok Human. Here are the tasks I found:\\n\";"},{"lineNumber":112,"author":{"gitId":"mechastriker3"},"content":"        response +\u003d showTasks(taskList);"},{"lineNumber":113,"author":{"gitId":"mechastriker3"},"content":"        return response;"},{"lineNumber":114,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":116,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"mechastriker3"},"content":"     * Show upcoming tasks"},{"lineNumber":118,"author":{"gitId":"mechastriker3"},"content":"     * @param taskList"},{"lineNumber":119,"author":{"gitId":"mechastriker3"},"content":"     * @return"},{"lineNumber":120,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"mechastriker3"},"content":"    public String showUpcomingTasks(TaskList taskList) {"},{"lineNumber":122,"author":{"gitId":"mechastriker3"},"content":"        String response \u003d \"\";"},{"lineNumber":123,"author":{"gitId":"mechastriker3"},"content":"        response +\u003d LINE_PREFIX + \"Ok Human. Here are your upcoming tasks:\\n\";"},{"lineNumber":124,"author":{"gitId":"mechastriker3"},"content":"        response +\u003d showTasks(taskList);"},{"lineNumber":125,"author":{"gitId":"mechastriker3"},"content":"        return response;"},{"lineNumber":126,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":128,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"mechastriker3"},"content":"     * Show done tasks"},{"lineNumber":130,"author":{"gitId":"mechastriker3"},"content":"     * @param task"},{"lineNumber":131,"author":{"gitId":"mechastriker3"},"content":"     * @return"},{"lineNumber":132,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":133,"author":{"gitId":"mechastriker3"},"content":"    public String showTaskDone(Task task) {"},{"lineNumber":134,"author":{"gitId":"mechastriker3"},"content":"        return String.format(\"%sNoted Human. I\u0027ve marked this task as done:\\n[%s] [%s] %s\\n\","},{"lineNumber":135,"author":{"gitId":"mechastriker3"},"content":"                LINE_PREFIX, task.getTaskType(), task.getStatusIcon(),"},{"lineNumber":136,"author":{"gitId":"mechastriker3"},"content":"                task.getTaskDescription());"},{"lineNumber":137,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":139,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":140,"author":{"gitId":"mechastriker3"},"content":"     * Show deleted tasks"},{"lineNumber":141,"author":{"gitId":"mechastriker3"},"content":"     * @param task"},{"lineNumber":142,"author":{"gitId":"mechastriker3"},"content":"     * @return"},{"lineNumber":143,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":144,"author":{"gitId":"mechastriker3"},"content":"    public String showTaskDeleted(Task task, TaskList taskList) {"},{"lineNumber":145,"author":{"gitId":"mechastriker3"},"content":"        return String.format(LINE_PREFIX + \"Task deleted successfully:\\n[%s] [%s] %s\\n%s\","},{"lineNumber":146,"author":{"gitId":"mechastriker3"},"content":"                task.getTaskType(), task.getStatusIcon(),"},{"lineNumber":147,"author":{"gitId":"mechastriker3"},"content":"                task.getTaskDescription(), showTasksCount(taskList));"},{"lineNumber":148,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":150,"author":{"gitId":"mechastriker3"},"content":"    public String showAdd(Task task, TaskList taskList) {"},{"lineNumber":151,"author":{"gitId":"mechastriker3"},"content":"        return String.format(LINE_PREFIX + \"Added:\\n%s\\n%s\\n\", task, showTasksCount(taskList));"},{"lineNumber":152,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":154,"author":{"gitId":"mechastriker3"},"content":"    public String showError(String errorMsg) {"},{"lineNumber":155,"author":{"gitId":"mechastriker3"},"content":"        return \"[ERROR] : \" + errorMsg + \"\\n\";"},{"lineNumber":156,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":158,"author":{"gitId":"mechastriker3"},"content":"    public String showLine() {"},{"lineNumber":159,"author":{"gitId":"mechastriker3"},"content":"        return LINE_DIVIDER;"},{"lineNumber":160,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":162,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":162}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import duke.TaskList;"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import duke.Ui;"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"import duke.exception.DukeCommandException;"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"public abstract class Command {"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    private final boolean isExit;"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    public Command() {"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"        this.isExit \u003d false;"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"    public Command(boolean isExit) {"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"        this.isExit \u003d false;"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws IOException, DukeCommandException;"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"    public boolean isExit() {"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"        return this.isExit;"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":27}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import duke.TaskList;"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import duke.Ui;"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    private final int index;"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    public DeleteCommand(int index) {"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"        this.index \u003d index;"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"        Task deletedTask \u003d taskList.getTask(index);"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"        taskList.deleteTask(index);"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"        storage.saveData(taskList);"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"        return ui.showTaskDeleted(deletedTask, taskList);"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":25}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import duke.TaskList;"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import duke.Ui;"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"public class DoneCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"    private final int index;"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"    public DoneCommand(int index) {"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"        this.index \u003d index;"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws IOException {"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"        taskList.setTaskIsDone(index, true);"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"        storage.saveData(taskList);"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"        return ui.showTaskDone(taskList.getTask(index));"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":23}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import javafx.animation.PauseTransition;"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import javafx.application.Platform;"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"import javafx.util.Duration;"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"public class ExitCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    public ExitCommand() {"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"        super(true);"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"        PauseTransition delay \u003d new PauseTransition(Duration.seconds(Ui.getExitDelay()));"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"        delay.setOnFinished(event -\u003e Platform.exit());"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"        delay.play();"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"        return ui.showBye();"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":23}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import java.util.function.BiFunction;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import java.util.stream.Collectors;"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import java.util.stream.Stream;"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"import duke.Storage;"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"import duke.TaskList;"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"import duke.Ui;"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"import duke.task.Task;"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"public class FindCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    private final String keyword;"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"     * Constructor for FindCommand."},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"     * @param keyword given by user to return tasks that contains keyword."},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"    public FindCommand(String keyword) {"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"    private TaskList findMatchingTasks(TaskList taskList) {"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"        Stream\u003cTask\u003e fullTaskStream \u003d new ArrayList\u003c\u003e(taskList.getTaskList()).stream();"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"        BiFunction\u003cTask, String, Boolean\u003e hasKeyword \u003d (task, keyword) -\u003e {"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"            // return tasks that contains keyword"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"            return task.getTaskDescription().contains(keyword);"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"        };"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"        List\u003cTask\u003e findResults \u003d fullTaskStream.filter(task -\u003e"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"                hasKeyword.apply(task, this.keyword))"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"                .collect(Collectors.toList());"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"        return new TaskList(findResults);"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"        TaskList findResults \u003d findMatchingTasks(taskList);"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"        return ui.showFoundTasks(findResults);"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":49}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"public class ListCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"        return ui.showAllTasks(taskList);"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":13}},{"path":"src/main/java/duke/command/RemindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.time.Duration;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import java.util.function.Function;"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"import java.util.stream.Collectors;"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"import java.util.stream.Stream;"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"import duke.Storage;"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"import duke.TaskList;"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"import duke.Ui;"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"import duke.task.Deadline;"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"import duke.task.Event;"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"import duke.task.Task;"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"public class RemindCommand extends Command {"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"    private static final int DEFAULT_NUM_DAYS \u003d 3;"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"    private final int numDays;"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"     * Constructor for RemindCommand"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"    public RemindCommand() {"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"        super();"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"        this.numDays \u003d DEFAULT_NUM_DAYS;"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"     * Constructor for RemindCommand with numDays"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"     * @param numDays"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"    public RemindCommand(int numDays) {"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"        super();"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"        this.numDays \u003d numDays;"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"    boolean isUpcoming(Task task) {"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"        boolean validTaskType \u003d task.getTaskType().equals(\"DEADLINE\")"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"                || task.getTaskType().equals(\"EVENT\");"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"        if (validTaskType) {"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"            LocalDateTime taskTime;"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"            switch (task.getTaskType()) {"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"            case (\"DEADLINE\"):"},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"                taskTime \u003d ((Deadline) task).getEndTime();"},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":"                break;"},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":"            case (\"EVENT\"):"},{"lineNumber":50,"author":{"gitId":"mechastriker3"},"content":"                taskTime \u003d ((Event) task).getEventTime();"},{"lineNumber":51,"author":{"gitId":"mechastriker3"},"content":"                break;"},{"lineNumber":52,"author":{"gitId":"mechastriker3"},"content":"            default:"},{"lineNumber":53,"author":{"gitId":"mechastriker3"},"content":"                throw new IllegalStateException(\"Unexpected value: \" + task.getTaskType());"},{"lineNumber":54,"author":{"gitId":"mechastriker3"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"mechastriker3"},"content":"            LocalDateTime now \u003d LocalDateTime.now();"},{"lineNumber":56,"author":{"gitId":"mechastriker3"},"content":"            Duration timeDiff \u003d Duration.between(now, taskTime);"},{"lineNumber":57,"author":{"gitId":"mechastriker3"},"content":"            return (timeDiff.toDays() \u003c\u003d this.numDays) \u0026\u0026 (timeDiff.toDays() \u003e 0);"},{"lineNumber":58,"author":{"gitId":"mechastriker3"},"content":"        } else {"},{"lineNumber":59,"author":{"gitId":"mechastriker3"},"content":"            return false;"},{"lineNumber":60,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":62,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":63,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":65,"author":{"gitId":"mechastriker3"},"content":"    private TaskList findUpcomingTasks(TaskList taskList) throws IllegalStateException {"},{"lineNumber":66,"author":{"gitId":"mechastriker3"},"content":"        Stream\u003cTask\u003e fullTaskStream \u003d new ArrayList\u003c\u003e(taskList.getTaskList()).stream();"},{"lineNumber":67,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":68,"author":{"gitId":"mechastriker3"},"content":"        Function\u003cTask, Boolean\u003e isUpcomingFunc \u003d this::isUpcoming;"},{"lineNumber":69,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":70,"author":{"gitId":"mechastriker3"},"content":"        List\u003cTask\u003e upcomingTasks \u003d fullTaskStream.filter(isUpcomingFunc::apply)"},{"lineNumber":71,"author":{"gitId":"mechastriker3"},"content":"                .collect(Collectors.toList());"},{"lineNumber":72,"author":{"gitId":"mechastriker3"},"content":"        return new TaskList(upcomingTasks);"},{"lineNumber":73,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":75,"author":{"gitId":"mechastriker3"},"content":"    @Override"},{"lineNumber":76,"author":{"gitId":"mechastriker3"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":77,"author":{"gitId":"mechastriker3"},"content":"        TaskList upcomingTasks \u003d findUpcomingTasks(taskList);"},{"lineNumber":78,"author":{"gitId":"mechastriker3"},"content":"        return ui.showUpcomingTasks(upcomingTasks);"},{"lineNumber":79,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":80}},{"path":"src/main/java/duke/command/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import duke.Storage;"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import duke.TaskList;"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"import duke.Ui;"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"import duke.exception.DukeCommandException;"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"import duke.task.Deadline;"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"import duke.task.Event;"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"import duke.task.ToDo;"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"public class TaskCommand extends Command {"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    private LocalDateTime time \u003d null;"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"    private final String description;"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"    private final String taskType;"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"     * Constructor for TaskCommand"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"     * @param taskType"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"     * @param description"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"    public TaskCommand(String taskType, String description) {"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"        this.description \u003d description;"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"     * Constructor for TaskCommand"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"     * @param taskType"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"     * @param description"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"     * @param time"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"    public TaskCommand(String taskType, String description, LocalDateTime time) {"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"        this.description \u003d description;"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"        this.time \u003d time;"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage)"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"            throws IOException, DukeCommandException {"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"        switch(taskType) {"},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":"        case \"todo\":"},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":"            ToDo newToDo \u003d new ToDo(this.description);"},{"lineNumber":50,"author":{"gitId":"mechastriker3"},"content":"            taskList.addTask(newToDo);"},{"lineNumber":51,"author":{"gitId":"mechastriker3"},"content":"            storage.saveData(taskList);"},{"lineNumber":52,"author":{"gitId":"mechastriker3"},"content":"            return ui.showAdd(newToDo, taskList);"},{"lineNumber":53,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":54,"author":{"gitId":"mechastriker3"},"content":"        case \"deadline\":"},{"lineNumber":55,"author":{"gitId":"mechastriker3"},"content":"            Deadline newDeadLine \u003d new Deadline(this.description, this.time);"},{"lineNumber":56,"author":{"gitId":"mechastriker3"},"content":"            taskList.addTask(newDeadLine);"},{"lineNumber":57,"author":{"gitId":"mechastriker3"},"content":"            storage.saveData(taskList);"},{"lineNumber":58,"author":{"gitId":"mechastriker3"},"content":"            return ui.showAdd(newDeadLine, taskList);"},{"lineNumber":59,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":60,"author":{"gitId":"mechastriker3"},"content":"        case \"event\":"},{"lineNumber":61,"author":{"gitId":"mechastriker3"},"content":"            Event newEvent \u003d new Event(this.description, this.time);"},{"lineNumber":62,"author":{"gitId":"mechastriker3"},"content":"            taskList.addTask(newEvent);"},{"lineNumber":63,"author":{"gitId":"mechastriker3"},"content":"            storage.saveData(taskList);"},{"lineNumber":64,"author":{"gitId":"mechastriker3"},"content":"            return ui.showAdd(newEvent, taskList);"},{"lineNumber":65,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":66,"author":{"gitId":"mechastriker3"},"content":"        default:"},{"lineNumber":67,"author":{"gitId":"mechastriker3"},"content":"            throw new DukeCommandException(\"Invalid Command.\");"},{"lineNumber":68,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":70,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":71,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":72}},{"path":"src/main/java/duke/exception/DukeCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"public class DukeCommandException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"    public DukeCommandException(String str) {"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"        super(str);"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":7}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"     * Constructor for DukeException"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"     * @param str Error message."},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"    public DukeException(String str) {"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"        super(str);"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":13}},{"path":"src/main/java/duke/exception/DukeToDoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":" * DukeToDoException to handle exceptions related to the ToDo object."},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":" */"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"public class DukeToDoException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"     * Constructor for DukeToDoException"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"     * @param str"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    public DukeToDoException(String str) {"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"        super(str);"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":15}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import java.time.format.TextStyle;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import java.util.Locale;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"    private static final String TASK_TYPE \u003d \"DEADLINE\";"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"    private LocalDateTime endTime;"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"     * Constructor for Deadline"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"     * @param taskDescription"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"     * @param endTime"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    public Deadline(String taskDescription, LocalDateTime endTime) {"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"        super(taskDescription);"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"     * Constructor for Deadline"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"     * @param taskDescription"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"     * @param endTime"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"     * @param isDone"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"    public Deadline(String taskDescription, LocalDateTime endTime, boolean isDone) {"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"        super(taskDescription, isDone);"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"    public String getTaskType() {"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"        return TASK_TYPE;"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"    public LocalDateTime getEndTime() {"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"        return endTime;"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"    public String toString() {"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"        String month \u003d endTime.getMonth().getDisplayName(TextStyle.SHORT, Locale.US);"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"        return String.format(\"[%s] [%s] %s (by: %s %s %s, %02d:%02d)\","},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"                this.getTaskType(), this.getStatusIcon(),"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"                this.getTaskDescription(), month,"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"                endTime.getDayOfMonth(), endTime.getYear(),"},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"                endTime.getHour(), endTime.getMinute());"},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":49}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import java.time.format.TextStyle;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import java.util.Locale;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"public class Event extends Task {"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"    private static final String TASK_TYPE \u003d \"EVENT\";"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"    private LocalDateTime eventTime;"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"     * Constructor for Event"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"     * @param description"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"     * @param eventTime"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    public Event(String description, LocalDateTime eventTime) {"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"        super(description);"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"     * Constructor for Event with isDone"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"     * @param description"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"     * @param eventTime"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"     * @param isDone"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"    public Event(String description, LocalDateTime eventTime, boolean isDone) {"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"        super(description, isDone);"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"    public String getTaskType() {"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"        return TASK_TYPE;"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"    public LocalDateTime getEventTime() {"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"        return eventTime;"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"    public String toString() {"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"        String month \u003d eventTime.getMonth().getDisplayName(TextStyle.SHORT, Locale.US);"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"        return String.format(\"[%s] [%s] %s (at: %s %s %s, %02d:%02d)\","},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"                this.getTaskType(), this.getStatusIcon(),"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"                this.getTaskDescription(), month,"},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"                eventTime.getDayOfMonth(), eventTime.getYear(),"},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":"                eventTime.getHour(), eventTime.getMinute());"},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":50}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"    private static final String TASK_TYPE \u003d \"TASK\";"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"    private final String taskDescription;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"    private boolean isDone;"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"     * Constructor"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"     * @param taskDescription"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    public Task(String taskDescription) {"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"        this.isDone \u003d false;"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"     * Constructor"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"     * @param taskDescription"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"     * @param isDone"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"    public Task(String taskDescription, boolean isDone) {"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"    public String getTaskDescription() {"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"        return taskDescription;"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"    public String getTaskType() {"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"        return TASK_TYPE;"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"    public void setIsDone(boolean done) {"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"        this.isDone \u003d done;"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"    public boolean getIsDone() {"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"        return isDone;"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"    public String getStatusIcon() {"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":47}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"public class ToDo extends Task {"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"    private static final String TASK_TYPE \u003d \"TODO\";"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"    public ToDo(String description) {"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    public ToDo(String description, boolean isDone) {"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"        super(description, isDone);"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    public String getTaskType() {"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"        return TASK_TYPE;"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"        return String.format(\"[%s] [%s] %s\", TASK_TYPE, getStatusIcon(), getTaskDescription());"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":24}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"\u003c?import javafx.geometry.*?\u003e"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"\u003c?import javafx.scene.control.*?\u003e"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"\u003c?import javafx.scene.image.*?\u003e"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"\u003c?import javafx.scene.layout.*?\u003e"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"\u003c?import javafx.scene.text.*?\u003e"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"129.0\" prefWidth\u003d\"357.0\" stylesheets\u003d\"@/css/duke.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"        \u003cLabel fx:id\u003d\"dialog\" graphicTextGap\u003d\"3.0\" minHeight\u003d\"-Infinity\" styleClass\u003d\"messageWindow\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"            \u003cfont\u003e"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"                \u003cFont name\u003d\"Avenir Next Bold\" size\u003d\"10.0\" /\u003e"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"            \u003c/font\u003e"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"        \u003c/Label\u003e"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"94.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"            \u003cHBox.margin\u003e"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"                \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"            \u003c/HBox.margin\u003e"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"        \u003c/ImageView\u003e"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"    \u003c/children\u003e"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"    \u003cpadding\u003e"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"        \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"    \u003c/padding\u003e"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"mechastriker3":25}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"\u003c?import javafx.geometry.*?\u003e"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"\u003c?import javafx.scene.control.*?\u003e"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"\u003c?import javafx.scene.effect.*?\u003e"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"\u003c?import javafx.scene.image.*?\u003e"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"\u003c?import javafx.scene.layout.*?\u003e"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"\u003c?import javafx.scene.text.*?\u003e"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"605.0\" prefWidth\u003d\"388.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"388.0\" styleClass\u003d\"background\" stylesheets\u003d\"@/css/duke.css\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"            \u003ccontent\u003e"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"555.0\" prefWidth\u003d\"390.0\" style\u003d\"-fx-border-width: 10;\" stylesheets\u003d\"@/css/duke.css\"\u003e"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"                    \u003cchildren\u003e"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"                        \u003cBorderPane prefHeight\u003d\"76.0\" prefWidth\u003d\"396.0\"\u003e"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"                            \u003ccenter\u003e"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"                                \u003cBorderPane prefHeight\u003d\"68.0\" prefWidth\u003d\"380.0\" style\u003d\"-fx-background-color: #4285F4; -fx-background-radius: 20; -fx-border-width: 5; -fx-border-color: #000080; -fx-border-radius: 20;\" styleClass\u003d\"header-section\" BorderPane.alignment\u003d\"CENTER\"\u003e"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"                                    \u003ceffect\u003e"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"                                        \u003cBlend /\u003e"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"                                    \u003c/effect\u003e"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"                                    \u003cleft\u003e"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"                                        \u003cImageView fitHeight\u003d\"80\" fitWidth\u003d\"85\" style\u003d\"-fx-translate-x: 64; -fx-scale-x: 0.9; -fx-scale-y: 0.9;\"\u003e"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"                                            \u003cimage\u003e"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"                                                \u003cImage url\u003d\"@/images/icon.png\" /\u003e"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"                                            \u003c/image\u003e"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"                                        \u003c/ImageView\u003e"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"                                    \u003c/left\u003e"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"                                    \u003cBorderPane.margin\u003e"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"                                        \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"2.5\" /\u003e"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"                                    \u003c/BorderPane.margin\u003e"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"                                    \u003ccenter\u003e"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"                                        \u003cLabel id\u003d\"header-text\" alignment\u003d\"CENTER\" prefHeight\u003d\"77.0\" prefWidth\u003d\"205.0\" text\u003d\"B.O.B\" textFill\u003d\"WHITE\" BorderPane.alignment\u003d\"CENTER\"\u003e"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"                                            \u003cfont\u003e"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"                                                \u003cFont name\u003d\"Bombardier\" size\u003d\"66\" /\u003e"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"                                            \u003c/font\u003e"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"                                            \u003cBorderPane.margin\u003e"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"                                                \u003cInsets left\u003d\"2.0\" /\u003e"},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"                                            \u003c/BorderPane.margin\u003e"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"                                        \u003c/Label\u003e"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"                                    \u003c/center\u003e"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"                                \u003c/BorderPane\u003e"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"                            \u003c/center\u003e"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"                            \u003cVBox.margin\u003e"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"                                \u003cInsets top\u003d\"2.5\" /\u003e"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"                            \u003c/VBox.margin\u003e"},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"                        \u003c/BorderPane\u003e"},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":"                    \u003c/children\u003e"},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":"                \u003c/VBox\u003e"},{"lineNumber":50,"author":{"gitId":"mechastriker3"},"content":"            \u003c/content\u003e"},{"lineNumber":51,"author":{"gitId":"mechastriker3"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":52,"author":{"gitId":"mechastriker3"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"315.0\" layoutY\u003d\"554.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"53.0\" prefWidth\u003d\"74.0\" text\u003d\"Send\"\u003e"},{"lineNumber":53,"author":{"gitId":"mechastriker3"},"content":"            \u003cfont\u003e"},{"lineNumber":54,"author":{"gitId":"mechastriker3"},"content":"                \u003cFont name\u003d\"Bombardier\" size\u003d\"17.0\" /\u003e"},{"lineNumber":55,"author":{"gitId":"mechastriker3"},"content":"            \u003c/font\u003e"},{"lineNumber":56,"author":{"gitId":"mechastriker3"},"content":"        \u003c/Button\u003e"},{"lineNumber":57,"author":{"gitId":"mechastriker3"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"554.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"53.0\" prefWidth\u003d\"315.0\" promptText\u003d\"Write a message here...\" styleClass\u003d\"textField\" stylesheets\u003d\"@/css/duke.css\" AnchorPane.bottomAnchor\u003d\"-2.0\"\u003e"},{"lineNumber":58,"author":{"gitId":"mechastriker3"},"content":"            \u003cfont\u003e"},{"lineNumber":59,"author":{"gitId":"mechastriker3"},"content":"                \u003cFont size\u003d\"15.0\" /\u003e"},{"lineNumber":60,"author":{"gitId":"mechastriker3"},"content":"            \u003c/font\u003e\u003c/TextField\u003e"},{"lineNumber":61,"author":{"gitId":"mechastriker3"},"content":"    \u003c/children\u003e"},{"lineNumber":62,"author":{"gitId":"mechastriker3"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"mechastriker3":62}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":" * Dummy Test to test if JUnit testing is working"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":" */"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"public class DukeTest {"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    public void dummyTest() {"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"        assertEquals(2, 2);"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":15}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"public class ParserTest {"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"    public void checkValidTaskCommand() {"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"        String dummyInput \u003d \"hello\";"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"        assertEquals(Parser.isValidTaskCommand(dummyInput), false);"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":13}},{"path":"src/test/java/duke/command/RemindTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import java.time.LocalDateTime;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"import duke.task.Deadline;"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"public class RemindTest {"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    public void remindIsUpcomingTest() {"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"        Deadline dummyDeadline \u003d new Deadline(\"buy more stonks\","},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"                LocalDateTime.now().plusDays(2));"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"        RemindCommand dummyRemindCommand \u003d new RemindCommand();"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"        assertEquals(dummyRemindCommand.isUpcoming(dummyDeadline), true);"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":20}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"public class ToDoTest {"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"    public void setTodoDone() {"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"        ToDo dummyToDo \u003d new ToDo(\"hold those diamond hands\");"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"        dummyToDo.setIsDone(true);"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"        assertEquals(\"\\u2713\","},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"                dummyToDo.getStatusIcon());"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":15}},{"path":"tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"EVENT|false|watch movie|2021-02-14T17:00"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"DEADLINE|false|return book|2021-03-11T23:59"}],"authorContributionMap":{"mechastriker3":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"hello"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"todo cook"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"bye"}],"authorContributionMap":{"mechastriker3":3}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"diff -u ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"mechastriker3":1,"-":37}}]
