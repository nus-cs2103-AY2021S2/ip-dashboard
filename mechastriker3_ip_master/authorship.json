[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"import java.util.*;"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import duke.*;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"    public static void main(String[] args) throws IOException {"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"        // String logo \u003d \" ____        _        \\n\""},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"        //         + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"        //         + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"        //         + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"        //         + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"        // System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"        System.out.println(\"Hello, I\u0027m Bob\");"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"        Scanner scanner \u003d new Scanner(System.in);"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"        Storage storage \u003d new Storage();"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"        List\u003cTask\u003e savedTaskList \u003d storage.loadData();"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"        InputHandler io \u003d new InputHandler(savedTaskList);"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"        while (true) {"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"            String input \u003d scanner.nextLine();"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"            if (input.equals(\"bye\")) {"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"                System.out.println(\"\u003e\u003e\u003e Bye. Hope to see you again soon!\");"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"                break;"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"            } else {"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"                io \u003d io.processInput(input);"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"                storage.writeData(io.getTaskList());"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"mechastriker3":28,"-":3}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"public class Deadline extends Task{"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"    private static String taskType \u003d \"Deadline\";"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"    private LocalDate endTime;"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"    public Deadline(String taskDescription, LocalDate endTime) {"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"        super(taskDescription);"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    public Deadline(String taskDescription, LocalDate endTime, boolean isDone) {"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"        super(taskDescription, isDone);"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"    public String getTaskType() {"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"        return taskType;"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"    public LocalDate getEndTime() {"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"        return endTime;"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":27}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"public class Event extends Task{"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"    private static String taskType \u003d \"EVENT\";"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"//    private String startTime;"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"//    private String endTime;"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"    private LocalDate eventTime;"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"    public Event(String description, LocalDate eventTime) {"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    public Event(String description, LocalDate eventTime, boolean isDone) {"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"        super(description, isDone);"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"    public String getTaskType() {"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"        return taskType;"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"    public LocalDate getEventTime() {"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"        return eventTime;"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":28}},{"path":"src/main/java/duke/InputHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"public class InputHandler {"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"    private final ArrayList\u003cTask\u003e taskList;"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"    public InputHandler() {"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"    public InputHandler(ArrayList\u003cTask\u003e taskList) {"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"        return this.taskList;"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"    public InputHandler processInput(String input) {"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"        String[] splitInput \u003d input.split(\" \", 2);"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"        String command \u003d splitInput[0];"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"        if (command.equals(\"list\")) {"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"            System.out.println(\"\u003e\u003e\u003e Here are your tasks:\");"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"            int i \u003d 1;"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"            for( Task t : taskList) {"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"                System.out.printf(\"    %d: [%s] [%s] %s\\n\", i,"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"                        t.getTaskType(), t.getStatusIcon(), t.getTaskDescription());"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"                i++;"},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"            return this;"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"        } else if (command.equals(\"done\")){"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"            int idxDone \u003d Integer.parseInt(splitInput[1]) - 1;"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"            Task newTask \u003d this.taskList.get(idxDone).setIsDone(true);"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"            ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e(this.taskList);"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"            newList.set(idxDone, newTask);"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"            System.out.printf(\"\u003e\u003e\u003e Nice! I\u0027ve marked this task as done:\\n  [%s] [%s] %s\\n\","},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"                    newTask.getTaskType(), newTask.getStatusIcon(), newTask.getTaskDescription());"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"            return new InputHandler(newList);"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"        } else if (command.equals(\"delete\")){"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"            int idxDel \u003d Integer.parseInt(splitInput[1]) - 1;"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"            ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e(this.taskList);"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"            Task deleteTask \u003d newList.get(idxDel);"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"            newList.remove(idxDel);"},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"            System.out.printf(\"\u003e\u003e\u003e Task deleted successfully:\\n  [%s] [%s] %s\\n \","},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"                    deleteTask.getTaskType(), deleteTask.getStatusIcon(),"},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":"                    deleteTask.getTaskDescription());"},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":"            return new InputHandler(newList);"},{"lineNumber":50,"author":{"gitId":"mechastriker3"},"content":"        } else {"},{"lineNumber":51,"author":{"gitId":"mechastriker3"},"content":"            ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e(this.taskList);"},{"lineNumber":52,"author":{"gitId":"mechastriker3"},"content":"            if(command.equals(\"todo\")) {"},{"lineNumber":53,"author":{"gitId":"mechastriker3"},"content":"                if(splitInput.length \u003d\u003d 1) {"},{"lineNumber":54,"author":{"gitId":"mechastriker3"},"content":"                    // replace with proper exception handling in future"},{"lineNumber":55,"author":{"gitId":"mechastriker3"},"content":"                    System.out.println(\"The description of a todo cannot be empty.\");"},{"lineNumber":56,"author":{"gitId":"mechastriker3"},"content":"                    return this;"},{"lineNumber":57,"author":{"gitId":"mechastriker3"},"content":"                }"},{"lineNumber":58,"author":{"gitId":"mechastriker3"},"content":"                Task newTask \u003d new ToDo(splitInput[1]);"},{"lineNumber":59,"author":{"gitId":"mechastriker3"},"content":"                newList.add(newTask);"},{"lineNumber":60,"author":{"gitId":"mechastriker3"},"content":"                System.out.printf(\"\u003e\u003e\u003e added:\\n   [%s] [%s] %s\\n\","},{"lineNumber":61,"author":{"gitId":"mechastriker3"},"content":"                        newTask.getTaskType(), newTask.getStatusIcon(),"},{"lineNumber":62,"author":{"gitId":"mechastriker3"},"content":"                        newTask.getTaskDescription());"},{"lineNumber":63,"author":{"gitId":"mechastriker3"},"content":"                System.out.printf(\"You have %d tasks in the list\\n\", newList.size());"},{"lineNumber":64,"author":{"gitId":"mechastriker3"},"content":"                return new InputHandler(newList);"},{"lineNumber":65,"author":{"gitId":"mechastriker3"},"content":"            } else if (command.equals(\"deadline\")) {"},{"lineNumber":66,"author":{"gitId":"mechastriker3"},"content":"                // parse input"},{"lineNumber":67,"author":{"gitId":"mechastriker3"},"content":"                String[] taskDetails \u003d splitInput[1].split(\"/by\");"},{"lineNumber":68,"author":{"gitId":"mechastriker3"},"content":"                String taskDescription \u003d taskDetails[0];"},{"lineNumber":69,"author":{"gitId":"mechastriker3"},"content":"                LocalDate endTime \u003d  LocalDate.parse(taskDetails[1]);"},{"lineNumber":70,"author":{"gitId":"mechastriker3"},"content":"                // create Deadline Task"},{"lineNumber":71,"author":{"gitId":"mechastriker3"},"content":"                Deadline newDeadline \u003d new Deadline(taskDescription, endTime);"},{"lineNumber":72,"author":{"gitId":"mechastriker3"},"content":"                newList.add(newDeadline);"},{"lineNumber":73,"author":{"gitId":"mechastriker3"},"content":"                System.out.printf(\"\u003e\u003e\u003e added:\\n   [%s] [%s] %s (by: %s)\\n\","},{"lineNumber":74,"author":{"gitId":"mechastriker3"},"content":"                        newDeadline.getTaskType(), newDeadline.getStatusIcon(),"},{"lineNumber":75,"author":{"gitId":"mechastriker3"},"content":"                        newDeadline.getTaskDescription(), newDeadline.getEndTime());"},{"lineNumber":76,"author":{"gitId":"mechastriker3"},"content":"                System.out.printf(\"You have %d tasks in the list\\n\", newList.size());"},{"lineNumber":77,"author":{"gitId":"mechastriker3"},"content":"                return new InputHandler(newList);"},{"lineNumber":78,"author":{"gitId":"mechastriker3"},"content":"            } else if (command.equals(\"event\")) {"},{"lineNumber":79,"author":{"gitId":"mechastriker3"},"content":"                // parse input"},{"lineNumber":80,"author":{"gitId":"mechastriker3"},"content":"                String[] taskDetails \u003d splitInput[1].split(\"/at\");"},{"lineNumber":81,"author":{"gitId":"mechastriker3"},"content":"                String taskDescription \u003d taskDetails[0];"},{"lineNumber":82,"author":{"gitId":"mechastriker3"},"content":"                LocalDate eventTime \u003d  LocalDate.parse(taskDetails[1]);"},{"lineNumber":83,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":84,"author":{"gitId":"mechastriker3"},"content":"                // create Event Task"},{"lineNumber":85,"author":{"gitId":"mechastriker3"},"content":"                Event newEvent \u003d new Event(taskDescription, eventTime);"},{"lineNumber":86,"author":{"gitId":"mechastriker3"},"content":"                newList.add(newEvent);"},{"lineNumber":87,"author":{"gitId":"mechastriker3"},"content":"                System.out.printf(\"\u003e\u003e\u003e added:\\n   [%s] [%s] %s (at: %s)\\n\","},{"lineNumber":88,"author":{"gitId":"mechastriker3"},"content":"                        newEvent.getTaskType(), newEvent.getStatusIcon(),"},{"lineNumber":89,"author":{"gitId":"mechastriker3"},"content":"                        newEvent.getTaskDescription(), newEvent.getEventTime());"},{"lineNumber":90,"author":{"gitId":"mechastriker3"},"content":"                System.out.printf(\"You have %d tasks in the list\\n\", newList.size());"},{"lineNumber":91,"author":{"gitId":"mechastriker3"},"content":"                return new InputHandler(newList);"},{"lineNumber":92,"author":{"gitId":"mechastriker3"},"content":"            } else {"},{"lineNumber":93,"author":{"gitId":"mechastriker3"},"content":"                System.out.println(\"Sorry Human. I do not comprehend, please read the user manual \" +"},{"lineNumber":94,"author":{"gitId":"mechastriker3"},"content":"                        \"again and try another command\");"},{"lineNumber":95,"author":{"gitId":"mechastriker3"},"content":"                return this;"},{"lineNumber":96,"author":{"gitId":"mechastriker3"},"content":"            }"},{"lineNumber":97,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":99,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":101,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":101}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"import java.nio.file.Files;"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"import java.nio.file.Path;"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"import java.nio.file.Paths;"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"import java.util.ArrayList;"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"public class Storage {"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"    private final String DEFAULT_PATH \u003d \"./duke.txt\";"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    private final Path filePath;"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"    public Storage() {"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"        filePath \u003d Paths.get(DEFAULT_PATH);"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"        File file \u003d new File(DEFAULT_PATH);"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":"        if (Files.notExists(this.filePath)) {"},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"            try {"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"                System.out.println(\"created new file\");"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"                file.createNewFile();"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":"            } catch (IOException e) {"},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"                e.printStackTrace();"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"    public void writeData(List\u003cTask\u003e taskList) throws IOException {"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"        FileWriter file \u003d new FileWriter(DEFAULT_PATH);"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":"        for (Task task : taskList) {"},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"            String toBeSaved \u003d \"\";"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"            switch (task.getTaskType()) {"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"                case \"DEADLINE\":"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":"                    toBeSaved \u003d String.format(\"%s|%s|%s|%s\","},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"                            task.getTaskType(),"},{"lineNumber":40,"author":{"gitId":"mechastriker3"},"content":"                            task.getIsDone(),"},{"lineNumber":41,"author":{"gitId":"mechastriker3"},"content":"                            task.getTaskDescription(),"},{"lineNumber":42,"author":{"gitId":"mechastriker3"},"content":"                            ((Deadline) task).getEndTime());"},{"lineNumber":43,"author":{"gitId":"mechastriker3"},"content":"                    break;"},{"lineNumber":44,"author":{"gitId":"mechastriker3"},"content":"                case \"TODO\":"},{"lineNumber":45,"author":{"gitId":"mechastriker3"},"content":"                    toBeSaved \u003d String.format(\"%s|%s|%s\","},{"lineNumber":46,"author":{"gitId":"mechastriker3"},"content":"                            task.getTaskType(),"},{"lineNumber":47,"author":{"gitId":"mechastriker3"},"content":"                            task.getIsDone(),"},{"lineNumber":48,"author":{"gitId":"mechastriker3"},"content":"                            task.getTaskDescription());"},{"lineNumber":49,"author":{"gitId":"mechastriker3"},"content":"                    // System.out.println(\"im at todo\");"},{"lineNumber":50,"author":{"gitId":"mechastriker3"},"content":"                    break;"},{"lineNumber":51,"author":{"gitId":"mechastriker3"},"content":"                case \"EVENT\":"},{"lineNumber":52,"author":{"gitId":"mechastriker3"},"content":"                    toBeSaved \u003d String.format(\"%s|%s|%s|%s\","},{"lineNumber":53,"author":{"gitId":"mechastriker3"},"content":"                            task.getTaskType(),"},{"lineNumber":54,"author":{"gitId":"mechastriker3"},"content":"                            task.getIsDone(),"},{"lineNumber":55,"author":{"gitId":"mechastriker3"},"content":"                            task.getTaskDescription(),"},{"lineNumber":56,"author":{"gitId":"mechastriker3"},"content":"                            ((Event) task).getEventTime());"},{"lineNumber":57,"author":{"gitId":"mechastriker3"},"content":"                    break;"},{"lineNumber":58,"author":{"gitId":"mechastriker3"},"content":"                default:"},{"lineNumber":59,"author":{"gitId":"mechastriker3"},"content":"                    continue;"},{"lineNumber":60,"author":{"gitId":"mechastriker3"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"mechastriker3"},"content":"            file.write(toBeSaved + \"\\n\");"},{"lineNumber":62,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"mechastriker3"},"content":"        file.close();"},{"lineNumber":64,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":66,"author":{"gitId":"mechastriker3"},"content":"    public List\u003cTask\u003e loadData() throws IOException {"},{"lineNumber":67,"author":{"gitId":"mechastriker3"},"content":"        // checks to see if a file is already supposed to be there"},{"lineNumber":68,"author":{"gitId":"mechastriker3"},"content":"        Scanner sc \u003d new Scanner(filePath.toFile());"},{"lineNumber":69,"author":{"gitId":"mechastriker3"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":70,"author":{"gitId":"mechastriker3"},"content":"        while (sc.hasNext()) {"},{"lineNumber":71,"author":{"gitId":"mechastriker3"},"content":"            String line \u003d sc.nextLine();"},{"lineNumber":72,"author":{"gitId":"mechastriker3"},"content":"            String[] storedTask \u003d line.split(\"\\\\|\");"},{"lineNumber":73,"author":{"gitId":"mechastriker3"},"content":"            String taskType \u003d storedTask[0];"},{"lineNumber":74,"author":{"gitId":"mechastriker3"},"content":"            boolean isDone \u003d storedTask[1].equals(\"true\");"},{"lineNumber":75,"author":{"gitId":"mechastriker3"},"content":"            String taskDescription \u003d storedTask[2];"},{"lineNumber":76,"author":{"gitId":"mechastriker3"},"content":"            Task taskToBeAdded \u003d null;"},{"lineNumber":77,"author":{"gitId":"mechastriker3"},"content":"            switch (taskType) {"},{"lineNumber":78,"author":{"gitId":"mechastriker3"},"content":"                case \"DEADLINE\":"},{"lineNumber":79,"author":{"gitId":"mechastriker3"},"content":"                    taskToBeAdded \u003d new Deadline(taskDescription, LocalDate.parse(storedTask[3]), isDone);"},{"lineNumber":80,"author":{"gitId":"mechastriker3"},"content":"                    break;"},{"lineNumber":81,"author":{"gitId":"mechastriker3"},"content":"                case \"TODO\":"},{"lineNumber":82,"author":{"gitId":"mechastriker3"},"content":"                    taskToBeAdded \u003d new ToDo(taskDescription, isDone);"},{"lineNumber":83,"author":{"gitId":"mechastriker3"},"content":"                    break;"},{"lineNumber":84,"author":{"gitId":"mechastriker3"},"content":"                case \"EVENT\":"},{"lineNumber":85,"author":{"gitId":"mechastriker3"},"content":"                    taskToBeAdded \u003d new Event(taskDescription, LocalDate.parse(storedTask[3]), isDone);"},{"lineNumber":86,"author":{"gitId":"mechastriker3"},"content":"                    break;"},{"lineNumber":87,"author":{"gitId":"mechastriker3"},"content":"                default:"},{"lineNumber":88,"author":{"gitId":"mechastriker3"},"content":"                    continue;"},{"lineNumber":89,"author":{"gitId":"mechastriker3"},"content":"            }"},{"lineNumber":90,"author":{"gitId":"mechastriker3"},"content":"            taskList.add(taskToBeAdded);"},{"lineNumber":91,"author":{"gitId":"mechastriker3"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"mechastriker3"},"content":"        sc.close();"},{"lineNumber":93,"author":{"gitId":"mechastriker3"},"content":"        return taskList;"},{"lineNumber":94,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":95}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"    private static String taskType \u003d \"TASK\";"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"    private String taskDescription;"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"    private boolean isDone;"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"    public Task(String taskDescription) {"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"        this.isDone \u003d false;"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":"    public Task(String taskDescription, boolean isDone) {"},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"        this.taskDescription \u003d taskDescription;"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":18,"author":{"gitId":"mechastriker3"},"content":"    public String getTaskDescription() {"},{"lineNumber":19,"author":{"gitId":"mechastriker3"},"content":"        return taskDescription;"},{"lineNumber":20,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":22,"author":{"gitId":"mechastriker3"},"content":"    public String getTaskType() {"},{"lineNumber":23,"author":{"gitId":"mechastriker3"},"content":"        return taskType;"},{"lineNumber":24,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":26,"author":{"gitId":"mechastriker3"},"content":"    public Task setIsDone(boolean done) {"},{"lineNumber":27,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":28,"author":{"gitId":"mechastriker3"},"content":"        return new Task(this.taskDescription, done);"},{"lineNumber":29,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":31,"author":{"gitId":"mechastriker3"},"content":"    public boolean getIsDone() {"},{"lineNumber":32,"author":{"gitId":"mechastriker3"},"content":"        return isDone;"},{"lineNumber":33,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":35,"author":{"gitId":"mechastriker3"},"content":"    public String getStatusIcon() {"},{"lineNumber":36,"author":{"gitId":"mechastriker3"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":37,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":39,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":39}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":4,"author":{"gitId":"mechastriker3"},"content":"public class ToDo extends Task{"},{"lineNumber":5,"author":{"gitId":"mechastriker3"},"content":"    private static String taskType \u003d \"TODO\";"},{"lineNumber":6,"author":{"gitId":"mechastriker3"},"content":"    public ToDo(String description) {"},{"lineNumber":7,"author":{"gitId":"mechastriker3"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":10,"author":{"gitId":"mechastriker3"},"content":"    public ToDo(String description, boolean isDone) {"},{"lineNumber":11,"author":{"gitId":"mechastriker3"},"content":"        super(description, isDone);"},{"lineNumber":12,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"mechastriker3"},"content":""},{"lineNumber":14,"author":{"gitId":"mechastriker3"},"content":"    public  String getTaskType() {"},{"lineNumber":15,"author":{"gitId":"mechastriker3"},"content":"        return taskType;"},{"lineNumber":16,"author":{"gitId":"mechastriker3"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"mechastriker3"},"content":"}"}],"authorContributionMap":{"mechastriker3":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"mechastriker3"},"content":"hello"},{"lineNumber":2,"author":{"gitId":"mechastriker3"},"content":"todo cook"},{"lineNumber":3,"author":{"gitId":"mechastriker3"},"content":"bye"}],"authorContributionMap":{"mechastriker3":3}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"mechastriker3"},"content":"diff -u ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"mechastriker3":1,"-":37}}]
