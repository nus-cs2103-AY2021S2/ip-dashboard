[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":"run {"},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":"    enableAssertions \u003d true"},{"lineNumber":65,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":20,"-":45}},{"path":"src/main/java/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class AddCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public AddCommand(String action, String info) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(action, info);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"        String task;"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"        String time;"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"        String response;"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        int size;"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        Task t;"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"        if (action.equals(\"todo\")) {"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"            task \u003d Parser.getTask(info);"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"            time \u003d \"\";"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"        } else if (action.equals(\"deadline\")) {"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"            task \u003d Parser.getTask(info);"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"            time \u003d Parser.getTimeBy(info);"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"            task \u003d Parser.getTask(info);"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"            time \u003d Parser.getTimeAt(info);"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"        tasks.addTask(action, task, time);"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"        size \u003d tasks.size;"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"        t \u003d (tasks.list).get(size - 1);"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"        response \u003d ui.showAddMessage(t, size);"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"        storage.store(tasks.list);"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"        return response;"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"    public boolean isExit() {"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"        return false;"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":39}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public abstract class Command {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    protected String action;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"    protected String info;"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"     * Constructor to form a command with execute."},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"     * @param action command."},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"     * @param info detail."},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"    public Command(String action, String info) {"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        this.action \u003d action;"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"        this.info \u003d info;"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"     * Execute the command requested by the action on the current information."},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"     * If command cannot be fulfilled, throws DukeException."},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"     * @param tasks tasks."},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"     * @param ui ui."},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"     * @param storage storage."},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"     * @throws DukeException if execute fails."},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"    public abstract boolean isExit();"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":30}},{"path":"src/main/java/DateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"public class DateCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    public DateCommand(String action, String info) {"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"        super(action, info);"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        String time;"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"        String response;"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"        if (info.equals(\"\")) {"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! The description cannot be empty.\");"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"            try {"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"                LocalDate date \u003d LocalDate.parse(info);"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"                time \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"                throw new DukeException(\"OOPS!!! The timing is not in the correct format.\");"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"            }"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"            response \u003d ui.showDate(time) + \"\\n\" + tasks.searchDateTask(time);"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"        return response;"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"    public boolean isExit() {"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"        return false;"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":36}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    protected String by;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"     * Constructor to create a task with deadline."},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"     * @param description task."},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"     * @param by time."},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        this.by \u003d by;"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":21}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public DeleteCommand(String action, String info) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(action, info);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"        int num;"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"        int size;"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"        Task t;"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        String response;"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"            num \u003d Integer.parseInt(info);"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! There is no such task number.\");"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"        if (num \u003e tasks.size || num \u003d\u003d 0) {"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! There is no such task number.\");"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"            num--;"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"            t \u003d (tasks.list).get(num);"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"            tasks.deleteTask(num);"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"            size \u003d tasks.size;"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"            response \u003d ui.showDelete(t, size);"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"            storage.store(tasks.list);"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"        return response;"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"    public boolean isExit() {"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"        return false;"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":39}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":" */"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"    private void flip() {"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"        Collections.reverse(tmp);"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"        return new DialogBox(text, img);"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"        db.flip();"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"        return db;"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":60}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class DoneCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public DoneCommand(String action, String info) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(action, info);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"        int num;"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"        Task task;"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"        String response;"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"            num \u003d Integer.parseInt(info);"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! There is no such task number.\");"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"        if (num \u003e tasks.size || num \u003d\u003d 0) {"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! There is no such task number.\");"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"            num--;"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"            tasks.doneTask(num);"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"            task \u003d tasks.list.get(num);"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"            response \u003d ui.showDone(task);"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"            storage.store(tasks.list);"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"        return response;"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"    public boolean isExit() {"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"        return false;"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":37}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":2,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"    private Storage storage;"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    private TaskList tasks;"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"    private Ui ui;"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"     * Constructor to set up Duke with previously stored file."},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    public Duke() {"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        ui \u003d new Ui();"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        storage \u003d new Storage(\"Duke.txt\");"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"        } catch (DukeException e) {"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"     * Command is created by parsing the input and then executed."},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"     * Error message is shown if there is DukeException."},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"     * @param input user input."},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"     * @return response."},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"    public String getResponse(String input) {"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"        String response;"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"            Command c \u003d Parser.getCommand(input);"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"            response \u003d c.execute(tasks, ui, storage);"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"        } catch (DukeException e) {"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"            response \u003d ui.showError(e.getMessage());"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"        return response;"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"NBH99":36,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public DukeException(String message) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(message);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":7}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    protected String at;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"     * Constructor to create an event."},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"     * @param description task."},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"     * @param at time."},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    public Event(String description, String at) {"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        this.at \u003d at;"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":21}},{"path":"src/main/java/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class ExitCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public ExitCommand(String action, String info) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(action, info);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"        return ui.showGoodBye();"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"    public boolean isExit() {"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"        return true;"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":17}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class FindCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public FindCommand(String action, String info) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(action, info);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"        String response;"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"        if (info.equals(\"\")) {"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! The description cannot be empty.\");"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"            response \u003d ui.showFind() + \"\\n\" + tasks.findTask(info);"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"        return response;"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"    public boolean isExit() {"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"        return false;"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":23}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":" */"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public static void main(String[] args) {"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":12}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class ListCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public ListCommand(String action, String info) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(action, info);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"        String response;"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"        if (tasks.size \u003d\u003d 0) {"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! There is currently no tasks for you.\");"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"            response \u003d ui.showList() + \"\\n\" + tasks.listTask();"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"        return response;"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"    public boolean isExit() {"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"        return false;"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":23}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":" */"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"    public void start(Stage stage) {"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"            stage.show();"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"        } catch (IOException e) {"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"            e.printStackTrace();"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":30}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"import javafx.scene.control.Button;"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":" */"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"    @FXML"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"    private VBox dialogContainer;"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"    private TextField userInput;"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"    private Button sendButton;"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"    private Duke duke;"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"    public void initialize() {"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"        duke \u003d d;"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"    @FXML"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"    private void handleUserInput() {"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"        );"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"        userInput.clear();"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":51}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"     * Parse the input string into recognisable command."},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"     * @param string input."},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"     * @return command."},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"     * @throws DukeException if command cannot be created."},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"    public static Command getCommand(String string) throws DukeException {"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"        String action;"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"        String info;"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"        Command command;"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"        if (string.contains(\" \")) {"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"            String[] str \u003d string.split(\" \", 2);"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"            action \u003d str[0];"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"            info \u003d str[1];"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"            action \u003d string;"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"            info \u003d \"\";"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"        if (action.equals(\"todo\") || action.equals(\"deadline\") || action.equals(\"event\")) {"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"            command \u003d new AddCommand(action, info);"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"        } else if (action.equals(\"done\")) {"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"            command \u003d new DoneCommand(action, info);"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"        } else if (action.equals(\"delete\")) {"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"            command \u003d new DeleteCommand(action, info);"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"        } else if (action.equals(\"bye\")) {"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"            command \u003d new ExitCommand(action, info);"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"        } else if (action.equals(\"list\")) {"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"            command \u003d new ListCommand(action, info);"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"        } else if (action.equals(\"find\")) {"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"            command \u003d new FindCommand(action, info);"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"        } else if (action.equals(\"date\")) {"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"            command \u003d new DateCommand(action, info);"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\");"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"        return command;"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"     * Parse the information string to get the task required."},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"     * @param info details."},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"     * @return task."},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"     * @throws DukeException if there is no task."},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"    public static String getTask(String info) throws DukeException {"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"        String task;"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":"        if (info.equals(\"\")) {"},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! The description cannot be empty.\");"},{"lineNumber":61,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":"        if (info.contains(\" /\")) {"},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":"            String[] str \u003d info.split(\" /\", 2);"},{"lineNumber":65,"author":{"gitId":"NBH99"},"content":"            task \u003d str[0];"},{"lineNumber":66,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":67,"author":{"gitId":"NBH99"},"content":"            task \u003d info;"},{"lineNumber":68,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":70,"author":{"gitId":"NBH99"},"content":"        return task;"},{"lineNumber":71,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":73,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"NBH99"},"content":"     * Parse the information string to get the timing for event."},{"lineNumber":75,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"NBH99"},"content":"     * @param info detail."},{"lineNumber":77,"author":{"gitId":"NBH99"},"content":"     * @return time at."},{"lineNumber":78,"author":{"gitId":"NBH99"},"content":"     * @throws DukeException if the time is wrong."},{"lineNumber":79,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"NBH99"},"content":"    public static String getTimeAt(String info) throws DukeException {"},{"lineNumber":81,"author":{"gitId":"NBH99"},"content":"        String time;"},{"lineNumber":82,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":83,"author":{"gitId":"NBH99"},"content":"        if (info.contains(\" /at \")) {"},{"lineNumber":84,"author":{"gitId":"NBH99"},"content":"            String[] str \u003d info.split(\" /at \", 2);"},{"lineNumber":85,"author":{"gitId":"NBH99"},"content":"            try {"},{"lineNumber":86,"author":{"gitId":"NBH99"},"content":"                LocalDate date \u003d LocalDate.parse(str[1]);"},{"lineNumber":87,"author":{"gitId":"NBH99"},"content":"                time \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":88,"author":{"gitId":"NBH99"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":89,"author":{"gitId":"NBH99"},"content":"                throw new DukeException(\"OOPS!!! The timing is not in the correct format.\");"},{"lineNumber":90,"author":{"gitId":"NBH99"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":92,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! The timing cannot be empty.\");"},{"lineNumber":93,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"NBH99"},"content":"        return time;"},{"lineNumber":95,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":97,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"NBH99"},"content":"     * Parse the information string to get the timing for deadline."},{"lineNumber":99,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":100,"author":{"gitId":"NBH99"},"content":"     * @param info detail."},{"lineNumber":101,"author":{"gitId":"NBH99"},"content":"     * @return time by."},{"lineNumber":102,"author":{"gitId":"NBH99"},"content":"     * @throws DukeException if time is wrong."},{"lineNumber":103,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"NBH99"},"content":"    public static String getTimeBy(String info) throws DukeException {"},{"lineNumber":105,"author":{"gitId":"NBH99"},"content":"        String time;"},{"lineNumber":106,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":107,"author":{"gitId":"NBH99"},"content":"        if (info.contains(\" /by \")) {"},{"lineNumber":108,"author":{"gitId":"NBH99"},"content":"            String[] str \u003d info.split(\" /by \", 2);"},{"lineNumber":109,"author":{"gitId":"NBH99"},"content":"            try {"},{"lineNumber":110,"author":{"gitId":"NBH99"},"content":"                LocalDate date \u003d LocalDate.parse(str[1]);"},{"lineNumber":111,"author":{"gitId":"NBH99"},"content":"                time \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":112,"author":{"gitId":"NBH99"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":113,"author":{"gitId":"NBH99"},"content":"                throw new DukeException(\"OOPS!!! The timing is not in the correct format.\");"},{"lineNumber":114,"author":{"gitId":"NBH99"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":116,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! The timing cannot be empty.\");"},{"lineNumber":117,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":119,"author":{"gitId":"NBH99"},"content":"        return time;"},{"lineNumber":120,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":122,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":122}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"public class Storage {"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"    protected String filepath;"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"    public Storage(String filepath) {"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        this.filepath \u003d filepath;"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"     * Store the list of task into the file stated by the filepath."},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"     * @param tasks list of tasks."},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"     * @throws DukeException if filepath is incorrect."},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"    public void store(ArrayList\u003cTask\u003e tasks) throws DukeException {"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"            FileWriter fw \u003d new FileWriter(filepath);"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"            int size \u003d tasks.size();"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"            String string;"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"            String task;"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"            String time;"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"            for (int i \u003d 0; i \u003c size; i++) {"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"                string \u003d tasks.get(i).toString();"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"                if (string.contains(\"(\")) {"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"                    String[] str \u003d string.split(\"\\\\(\", 2);"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"                    task \u003d str[0];"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"                    str \u003d str[1].split(\"\\\\)\", 2);"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"                    time \u003d str[0];"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"                    fw.write(task + \"/\" + time + \"\\n\");"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"                } else {"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"                    fw.write(string + \"\\n\");"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"                }"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"            fw.close();"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"        } catch (IOException e) {"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! There is an error in storing the file.\");"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"     * Load the list of tasks from the file stated by the filepath."},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"     * @return list of tasks."},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"     * @throws DukeException if file not found or corrupted."},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"            File f \u003d new File(filepath);"},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":"            Scanner scan \u003d new Scanner(f);"},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":61,"author":{"gitId":"NBH99"},"content":"            ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":"            String string;"},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":"            String info;"},{"lineNumber":65,"author":{"gitId":"NBH99"},"content":"            String temp;"},{"lineNumber":66,"author":{"gitId":"NBH99"},"content":"            String time;"},{"lineNumber":67,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":68,"author":{"gitId":"NBH99"},"content":"            char action;"},{"lineNumber":69,"author":{"gitId":"NBH99"},"content":"            char done;"},{"lineNumber":70,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":71,"author":{"gitId":"NBH99"},"content":"            Task task;"},{"lineNumber":72,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":73,"author":{"gitId":"NBH99"},"content":"            while (scan.hasNext()) {"},{"lineNumber":74,"author":{"gitId":"NBH99"},"content":"                string \u003d scan.nextLine();"},{"lineNumber":75,"author":{"gitId":"NBH99"},"content":"                action \u003d string.charAt(1);"},{"lineNumber":76,"author":{"gitId":"NBH99"},"content":"                done \u003d string.charAt(4);"},{"lineNumber":77,"author":{"gitId":"NBH99"},"content":"                String[] str \u003d string.split(\"] \", 2);"},{"lineNumber":78,"author":{"gitId":"NBH99"},"content":"                temp \u003d str[1];"},{"lineNumber":79,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":80,"author":{"gitId":"NBH99"},"content":"                if (temp.contains(\" /\")) {"},{"lineNumber":81,"author":{"gitId":"NBH99"},"content":"                    str \u003d temp.split(\" /\", 2);"},{"lineNumber":82,"author":{"gitId":"NBH99"},"content":"                    info \u003d str[0];"},{"lineNumber":83,"author":{"gitId":"NBH99"},"content":"                    str \u003d str[1].split(\" \", 2);"},{"lineNumber":84,"author":{"gitId":"NBH99"},"content":"                    time \u003d str[1];"},{"lineNumber":85,"author":{"gitId":"NBH99"},"content":"                } else {"},{"lineNumber":86,"author":{"gitId":"NBH99"},"content":"                    info \u003d temp;"},{"lineNumber":87,"author":{"gitId":"NBH99"},"content":"                    time \u003d \"\";"},{"lineNumber":88,"author":{"gitId":"NBH99"},"content":"                }"},{"lineNumber":89,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":90,"author":{"gitId":"NBH99"},"content":"                if (action \u003d\u003d \u0027T\u0027) {"},{"lineNumber":91,"author":{"gitId":"NBH99"},"content":"                    task \u003d new Todo(info);"},{"lineNumber":92,"author":{"gitId":"NBH99"},"content":"                } else if (action \u003d\u003d \u0027D\u0027) {"},{"lineNumber":93,"author":{"gitId":"NBH99"},"content":"                    task \u003d new Deadline(info, time);"},{"lineNumber":94,"author":{"gitId":"NBH99"},"content":"                } else if (action \u003d\u003d \u0027E\u0027) {"},{"lineNumber":95,"author":{"gitId":"NBH99"},"content":"                    task \u003d new Event(info, time);"},{"lineNumber":96,"author":{"gitId":"NBH99"},"content":"                } else {"},{"lineNumber":97,"author":{"gitId":"NBH99"},"content":"                    throw new DukeException(\"OOPS!!! There is an error in loading the file.\");"},{"lineNumber":98,"author":{"gitId":"NBH99"},"content":"                }"},{"lineNumber":99,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":100,"author":{"gitId":"NBH99"},"content":"                if (done \u003d\u003d \u0027X\u0027) {"},{"lineNumber":101,"author":{"gitId":"NBH99"},"content":"                    task.markAsDone();"},{"lineNumber":102,"author":{"gitId":"NBH99"},"content":"                }"},{"lineNumber":103,"author":{"gitId":"NBH99"},"content":"                list.add(task);"},{"lineNumber":104,"author":{"gitId":"NBH99"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":106,"author":{"gitId":"NBH99"},"content":"            return list;"},{"lineNumber":107,"author":{"gitId":"NBH99"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":108,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! There is an error in loading the file.\");"},{"lineNumber":109,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":112,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":112}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    protected String description;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"    protected boolean isDone;"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"     * Constructor to create a task."},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"     * @param description task"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    public Task(String description) {"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        this.description \u003d description;"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        this.isDone \u003d false;"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"    public String getStatusIcon() {"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"        return (isDone ? \"X\" : \" \");"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"     * Put a X for the task that is done"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"    public void markAsDone() {"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"        this.isDone \u003d true;"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":31}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"public class TaskList {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    protected ArrayList\u003cTask\u003e list;"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"    protected int size;"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"     * Constructor to create a new TaskList"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    public TaskList() {"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        this.list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        this.size \u003d 0;"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"     * Constructor to create the previous TaskList"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"        this.list \u003d list;"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"        this.size \u003d list.size();"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"     * Mark the numbered task as done."},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"     * @param num task number."},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"    public void doneTask(int num) {"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"        list.get(num).markAsDone();"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"     * Delete the numbered task from the list of tasks."},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"     * @param num task number."},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"    public void deleteTask(int num) {"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"        size \u003d size - 1;"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"        list.remove(num);"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"     * Add the required task into the list of tasks."},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"     * @param action command."},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"     * @param task description."},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"     * @param time required for deadline and event."},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"    public void addTask(String action, String task, String time) {"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"        size \u003d size + 1;"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"        if (action.equals(\"todo\")) {"},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"            list.add(new Todo(task));"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"        } else if (action.equals(\"deadline\")) {"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"            list.add(new Deadline(task, time));"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"        } else if (action.equals(\"event\")) {"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"            list.add(new Event(task, time));"},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":"     * Show all the tasks in the list."},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"NBH99"},"content":"    public String listTask() {"},{"lineNumber":66,"author":{"gitId":"NBH99"},"content":"        String response \u003d \"\";"},{"lineNumber":67,"author":{"gitId":"NBH99"},"content":"        for (int i \u003d 0; i \u003c size; i++) {"},{"lineNumber":68,"author":{"gitId":"NBH99"},"content":"            response \u003d response + (i + 1) + \".\" + list.get(i) + \"\\n\";"},{"lineNumber":69,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"NBH99"},"content":"        return response;"},{"lineNumber":71,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":73,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"NBH99"},"content":"     * Find the tasks which has similar name to the string."},{"lineNumber":75,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"NBH99"},"content":"     * @param task string"},{"lineNumber":77,"author":{"gitId":"NBH99"},"content":"     * @return task found"},{"lineNumber":78,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"NBH99"},"content":"    public String findTask(String task) {"},{"lineNumber":80,"author":{"gitId":"NBH99"},"content":"        int num \u003d 1;"},{"lineNumber":81,"author":{"gitId":"NBH99"},"content":"        String response \u003d \"\";"},{"lineNumber":82,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":83,"author":{"gitId":"NBH99"},"content":"        for (int i \u003d 0; i \u003c size; i++) {"},{"lineNumber":84,"author":{"gitId":"NBH99"},"content":"            String string \u003d list.get(i).toString();"},{"lineNumber":85,"author":{"gitId":"NBH99"},"content":"            if (string.contains(task)) {"},{"lineNumber":86,"author":{"gitId":"NBH99"},"content":"                response \u003d response + num++ + \".\" + string + \"\\n\";"},{"lineNumber":87,"author":{"gitId":"NBH99"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"NBH99"},"content":"        return response;"},{"lineNumber":90,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":92,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"NBH99"},"content":"     * Search for tasks which take place at that timing."},{"lineNumber":94,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":95,"author":{"gitId":"NBH99"},"content":"     * @param time date"},{"lineNumber":96,"author":{"gitId":"NBH99"},"content":"     * @return task found"},{"lineNumber":97,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"NBH99"},"content":"    public String searchDateTask(String time) {"},{"lineNumber":99,"author":{"gitId":"NBH99"},"content":"        int num \u003d 1;"},{"lineNumber":100,"author":{"gitId":"NBH99"},"content":"        String response \u003d \"\";"},{"lineNumber":101,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":102,"author":{"gitId":"NBH99"},"content":"        for (int i \u003d 0; i \u003c size; i++) {"},{"lineNumber":103,"author":{"gitId":"NBH99"},"content":"            String string \u003d list.get(i).toString();"},{"lineNumber":104,"author":{"gitId":"NBH99"},"content":"            if (string.contains(time)) {"},{"lineNumber":105,"author":{"gitId":"NBH99"},"content":"                response \u003d response + num++ + \".\" + string + \"\\n\";"},{"lineNumber":106,"author":{"gitId":"NBH99"},"content":"            }"},{"lineNumber":107,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"NBH99"},"content":"        return response;"},{"lineNumber":109,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":111,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":111}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public Todo (String description) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(description);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":12}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"public class Ui {"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"    protected String response;"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"     * Response when the user activated Duke."},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"     * @return welcome."},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    public String showWelcome() {"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        response \u003d \"-------------------------------\""},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"                + \"--------------------------------\\n\""},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"                + \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\""},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"                + \"-------------------------------\""},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"                + \"--------------------------------\";"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"        return response;"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"     * Response when there is a error."},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"     * @param error error"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"     * @return message"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"    public String showError(String error) {"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"        response \u003d error;"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"        return response;"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"     * Response when user said bye."},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"     * @return goodbye."},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"    public String showGoodBye() {"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"        response \u003d \"Bye. Hope to see you again soon\";"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"        return response;"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"     * Line to divide the text box."},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"     * @return line."},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"    public String showLine() {"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"        response \u003d \"-------------------------------------\";"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"        return response;"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"     * Response when user want to list out the tasks."},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"     * @return list."},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"    public String showList() {"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"        response \u003d \"Here are the tasks in your list:\";"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"        return response;"},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":61,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":"     * Response when user want to add a task."},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":"     * @param t task."},{"lineNumber":65,"author":{"gitId":"NBH99"},"content":"     * @param size number of task."},{"lineNumber":66,"author":{"gitId":"NBH99"},"content":"     * @return added."},{"lineNumber":67,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"NBH99"},"content":"    public String showAddMessage(Task t, int size) {"},{"lineNumber":69,"author":{"gitId":"NBH99"},"content":"        response \u003d \"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":70,"author":{"gitId":"NBH99"},"content":"                + \"  \" + t + \"\\nNow you have \""},{"lineNumber":71,"author":{"gitId":"NBH99"},"content":"                + size + \" tasks in the list.\";"},{"lineNumber":72,"author":{"gitId":"NBH99"},"content":"        return response;"},{"lineNumber":73,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":75,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"NBH99"},"content":"     * Response when user finish a task."},{"lineNumber":77,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"NBH99"},"content":"     * @param t task."},{"lineNumber":79,"author":{"gitId":"NBH99"},"content":"     * @return done."},{"lineNumber":80,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"NBH99"},"content":"    public String showDone(Task t) {"},{"lineNumber":82,"author":{"gitId":"NBH99"},"content":"        response \u003d \"Nice! I\u0027ve marked this task as done:\\n  \" + t;"},{"lineNumber":83,"author":{"gitId":"NBH99"},"content":"        return response;"},{"lineNumber":84,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":86,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"NBH99"},"content":"     * Response when user want to delete a task."},{"lineNumber":88,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"NBH99"},"content":"     * @param t task."},{"lineNumber":90,"author":{"gitId":"NBH99"},"content":"     * @param size number of task."},{"lineNumber":91,"author":{"gitId":"NBH99"},"content":"     * @return delete."},{"lineNumber":92,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"NBH99"},"content":"    public String showDelete(Task t, int size) {"},{"lineNumber":94,"author":{"gitId":"NBH99"},"content":"        response \u003d \"Noted. I\u0027ve removed this task:\\n  \""},{"lineNumber":95,"author":{"gitId":"NBH99"},"content":"                + t + \"\\nNow you have \""},{"lineNumber":96,"author":{"gitId":"NBH99"},"content":"                + size + \" tasks in the list.\";"},{"lineNumber":97,"author":{"gitId":"NBH99"},"content":"        return response;"},{"lineNumber":98,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":100,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"NBH99"},"content":"     * Response when user want to find tasks."},{"lineNumber":102,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":103,"author":{"gitId":"NBH99"},"content":"     * @return find."},{"lineNumber":104,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":105,"author":{"gitId":"NBH99"},"content":"    public String showFind() {"},{"lineNumber":106,"author":{"gitId":"NBH99"},"content":"        response \u003d \"Here are the matching tasks in your list:\";"},{"lineNumber":107,"author":{"gitId":"NBH99"},"content":"        return response;"},{"lineNumber":108,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":110,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"NBH99"},"content":"     * Response when user want to search for tasks on certain date."},{"lineNumber":112,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":113,"author":{"gitId":"NBH99"},"content":"     * @param time date."},{"lineNumber":114,"author":{"gitId":"NBH99"},"content":"     * @return date."},{"lineNumber":115,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"NBH99"},"content":"    public String showDate(String time) {"},{"lineNumber":117,"author":{"gitId":"NBH99"},"content":"        response \u003d \"Here are the tasks occurring on \" + time + \" in your list:\";"},{"lineNumber":118,"author":{"gitId":"NBH99"},"content":"        return response;"},{"lineNumber":119,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":120}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"80.0\" fitWidth\u003d\"80.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"NBH99":16}},{"path":"src/main/resources/view/DialogBox.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"  \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"  \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"  \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"  \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"NBH99":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"NBH99":19}},{"path":"src/main/resources/view/MainWindow.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"  \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"      \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"      \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"  \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"NBH99":19}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"public class DukeTest {"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public void parserTest() throws Exception {"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"borrow book\","},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"                Parser.getTask(\"borrow book\"));"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"    public void parser_task_success() throws Exception {"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"project meeting\","},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"                Parser.getTask(\"project meeting /at 2021-10-14\"));"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"    public void parser_timeAt_success() throws Exception {"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"Oct 14 2021\","},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"                Parser.getTimeAt(\"project meeting /at 2021-10-14\"));"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"    public void parser_timeBy_success() throws Exception {"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"May 2 2021\","},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"                Parser.getTimeBy(\"read book /by 2021-05-02\"));"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"    public void stringTest() throws Exception {"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"[T][ ] borrow book\","},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"                new Todo(\"borrow book\").toString());"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"    public void string_event_success() throws Exception {"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"[E][ ] project meeting (at: Oct 14 2021)\","},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"                new Event(\"project meeting\", \"Oct 14 2021\").toString());"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"    public void string_deadline_success() throws Exception {"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"[D][ ] read book (by: May 2 2021)\","},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"                new Deadline(\"read book\", \"May 2 2021\").toString());"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":49}},{"path":"text-ui-test/Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"[D][ ] return book /by: Mar 23 2021"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"[E][X] project meeting /at: Oct 14 2021"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"[D][X] read book /by: May 2 2021"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"[T][ ] project work"}],"authorContributionMap":{"NBH99":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"list"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"deadline return book /by 2021-03-23"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"event project meeting /at 2021-10-14"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"done 3"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"done 7"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"deadline read book /by 2021-05-02"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"todo project work"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"list"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"done 4"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"delete 1"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"delete 8"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"list"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"bye"}],"authorContributionMap":{"NBH99":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"NBH99":1,"-":20}}]
