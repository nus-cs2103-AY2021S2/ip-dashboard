[{"path":"src/main/java/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class AddCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public AddCommand(String action, String info) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(action, info);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"        String task, time;"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"        int size;"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"        Task t;"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        if (action.equals(\"todo\")) {"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"            task \u003d Parser.getTask(info);"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"            time \u003d \"\";"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"        } else if (action.equals(\"deadline\")) {"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"            task \u003d Parser.getTask(info);"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"            time \u003d Parser.getTimeBy(info);"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"            task \u003d Parser.getTask(info);"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"            time \u003d Parser.getTimeAt(info);"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"        tasks.addTask(action, task, time);"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"        size \u003d tasks.size;"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"        t \u003d (tasks.list).get(size - 1);"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"        ui.showAdd(t, size);"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"        storage.store(tasks.list);"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"    public boolean isExit() {"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"        return false;"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":35}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public abstract class Command {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    protected String action, info;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    public Command(String action, String info) {"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"        this.action \u003d action;"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"        this.info \u003d info;"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"     * Execute the command reqested by the action on the current inforamtion."},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"     * If command cannot be fulfilled, throws DukeException."},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"     * @param tasks"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"     * @param ui"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"     * @param storage"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"     * @throws DukeException"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"    public abstract boolean isExit();"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":23}},{"path":"src/main/java/DateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"public class DateCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    public DateCommand(String action, String info) {"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"        super(action, info);"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        String time;"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"        if (info.equals(\"\")) {"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"☹ OOPS!!! The description cannot be empty.\");"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"            try {"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"                LocalDate date \u003d LocalDate.parse(info);"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"                time \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"                throw new DukeException(\"☹ OOPS!!! The timing is not in the correct format.\");"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"            }"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"            ui.showDate(time);"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"            tasks.dateTask(time);"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"    public boolean isExit() {"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"        return false;"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":34}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    protected String by;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"        this.by \u003d by;"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":15}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public DeleteCommand(String action, String info) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(action, info);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"        int num, size;"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"        Task t;"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"            num \u003d Integer.parseInt(info);"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"☹ OOPS!!! There is no such task number.\");"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"        if (num \u003e tasks.size || num \u003d\u003d 0) {"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"☹ OOPS!!! There is no such task number.\");"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"            num--;"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"            t \u003d (tasks.list).get(num);"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"            tasks.deleteTask(num);"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"            size \u003d tasks.size;"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"            ui.showDelete(t, size);"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"            storage.store(tasks.list);"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"    public boolean isExit() {"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"        return false;"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":35}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class DoneCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public DoneCommand(String action, String info) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(action, info);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"        int num;"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"        Task t;"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"            num \u003d Integer.parseInt(info);"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"☹ OOPS!!! There is no such task number.\");"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"        if (num \u003e tasks.size || num \u003d\u003d 0) {"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"☹ OOPS!!! There is no such task number.\");"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"            num--;"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"            tasks.doneTask(num);"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"            t \u003d tasks.list.get(num);"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"            ui.showDone(t);"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"            storage.store(tasks.list);"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"    public boolean isExit() {"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"        return false;"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":34}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    private Storage storage;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"    private TaskList tasks;"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    private Ui ui;"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    public Duke(String filePath) {"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"        ui \u003d new Ui();"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        } catch (DukeException e) {"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"            ui.showError(e.getMessage());"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"        new Duke(\"Duke.txt\").run();"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"     * Main body of Duke program."},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"     * Command is created by parsing the input and then executed."},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"     * Error message is shown if there is DukeException."},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"    public void run() {"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"        ui.showWelcome();"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"        boolean isExit \u003d false;"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"        while (!isExit) {"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"            try {"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"                String fullCommand \u003d ui.readCommand();"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"                ui.showLine();"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"                Command c \u003d Parser.parse(fullCommand);"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"                c.execute(tasks, ui, storage);"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"            } catch (DukeException e) {"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"                ui.showError(e.getMessage());"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"            } finally {"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"                ui.showLine();"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"NBH99":41,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public DukeException(String message) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(message);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":7}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    protected String at;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    public Event(String description, String at) {"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"        this.at \u003d at;"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":15}},{"path":"src/main/java/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class ExitCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public ExitCommand(String action, String info) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(action, info);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"        ui.showGoodBye();"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"    public boolean isExit() {"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"        return true;"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":17}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class FindCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public FindCommand(String action, String info) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(action, info);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"        if (info.equals(\"\")) {"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"☹ OOPS!!! The description cannot be empty.\");"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"            ui.showFind();"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"            tasks.findTask(info);"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"    public boolean isExit() {"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"        return false;"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":22}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class ListCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public ListCommand(String action, String info) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(action, info);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"        if (tasks.size \u003d\u003d 0) {"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"☹ OOPS!!! There is currently no tasks for you.\");"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"            ui.showList();"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"            tasks.listTask();"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"    public boolean isExit() {"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"        return false;"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":21}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"     * Parse the input string into recognisable command."},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"     * @param string"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"     * @return"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"     * @throws DukeException"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"    public static Command parse(String string) throws DukeException {"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"        String action, info;"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"        Command command;"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"        if (string.contains(\" \")){"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"            String[] str \u003d string.split(\" \", 2);"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"            action \u003d str[0];"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"            info \u003d str[1];"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"            action \u003d string;"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"            info \u003d \"\";"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"        if (action.equals(\"todo\") || action.equals(\"deadline\") || action.equals(\"event\")) {"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"            command \u003d new AddCommand(action, info);"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"        } else if (action.equals(\"done\")) {"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"            command \u003d new DoneCommand(action, info);"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"        } else if (action.equals(\"delete\")) {"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"            command \u003d new DeleteCommand(action, info);"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"        } else if (action.equals(\"bye\")) {"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"            command \u003d new ExitCommand(action, info);"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"        } else if (action.equals(\"list\")) {"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"            command \u003d new ListCommand(action, info);"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"        } else if (action.equals(\"find\")) {"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"            command \u003d new FindCommand(action, info);"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"        } else if (action.equals(\"date\")) {"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"            command \u003d new DateCommand(action, info);"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"        return command;"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"     * Parse the information string to get the task required."},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"     * @param info"},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"     * @return"},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"     * @throws DukeException"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"    public static String getTask(String info) throws DukeException {"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"        String task;"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":"        if (info.equals(\"\")) {"},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"☹ OOPS!!! The description cannot be empty.\");"},{"lineNumber":61,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":"        if (info.contains(\" /\")) {"},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":"            String[] str \u003d info.split(\" /\", 2);"},{"lineNumber":65,"author":{"gitId":"NBH99"},"content":"            task \u003d str[0];"},{"lineNumber":66,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":67,"author":{"gitId":"NBH99"},"content":"            task \u003d info;"},{"lineNumber":68,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":70,"author":{"gitId":"NBH99"},"content":"        return task;"},{"lineNumber":71,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":73,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"NBH99"},"content":"     * Parse the information string to get the timing for event."},{"lineNumber":75,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"NBH99"},"content":"     * @param info"},{"lineNumber":77,"author":{"gitId":"NBH99"},"content":"     * @return"},{"lineNumber":78,"author":{"gitId":"NBH99"},"content":"     * @throws DukeException"},{"lineNumber":79,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"NBH99"},"content":"    public static String getTimeAt(String info) throws DukeException {"},{"lineNumber":81,"author":{"gitId":"NBH99"},"content":"        String time;"},{"lineNumber":82,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":83,"author":{"gitId":"NBH99"},"content":"        if (info.contains(\" /at \")) {"},{"lineNumber":84,"author":{"gitId":"NBH99"},"content":"            String[] str \u003d info.split(\" /at \", 2);"},{"lineNumber":85,"author":{"gitId":"NBH99"},"content":"            try {"},{"lineNumber":86,"author":{"gitId":"NBH99"},"content":"                LocalDate date \u003d LocalDate.parse(str[1]);"},{"lineNumber":87,"author":{"gitId":"NBH99"},"content":"                time \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":88,"author":{"gitId":"NBH99"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":89,"author":{"gitId":"NBH99"},"content":"                throw new DukeException(\"☹ OOPS!!! The timing is not in the correct format.\");"},{"lineNumber":90,"author":{"gitId":"NBH99"},"content":"            }"},{"lineNumber":91,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":92,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"☹ OOPS!!! The timing cannot be empty.\");"},{"lineNumber":93,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"NBH99"},"content":"        "},{"lineNumber":95,"author":{"gitId":"NBH99"},"content":"        return time;"},{"lineNumber":96,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":98,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":99,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"NBH99"},"content":"     * Parse the information string to get the timing for deadline."},{"lineNumber":101,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"NBH99"},"content":"     * @param info"},{"lineNumber":103,"author":{"gitId":"NBH99"},"content":"     * @return"},{"lineNumber":104,"author":{"gitId":"NBH99"},"content":"     * @throws DukeException"},{"lineNumber":105,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"NBH99"},"content":"    public static String getTimeBy(String info) throws DukeException {"},{"lineNumber":107,"author":{"gitId":"NBH99"},"content":"        String time;"},{"lineNumber":108,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":109,"author":{"gitId":"NBH99"},"content":"        if (info.contains(\" /by \")) {"},{"lineNumber":110,"author":{"gitId":"NBH99"},"content":"            String[] str \u003d info.split(\" /by \", 2);"},{"lineNumber":111,"author":{"gitId":"NBH99"},"content":"            try {"},{"lineNumber":112,"author":{"gitId":"NBH99"},"content":"                LocalDate date \u003d LocalDate.parse(str[1]);"},{"lineNumber":113,"author":{"gitId":"NBH99"},"content":"                time \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":114,"author":{"gitId":"NBH99"},"content":"            } catch (DateTimeParseException e) {"},{"lineNumber":115,"author":{"gitId":"NBH99"},"content":"                throw new DukeException(\"☹ OOPS!!! The timing is not in the correct format.\");"},{"lineNumber":116,"author":{"gitId":"NBH99"},"content":"            }"},{"lineNumber":117,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":118,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"☹ OOPS!!! The timing cannot be empty.\");"},{"lineNumber":119,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":121,"author":{"gitId":"NBH99"},"content":"        return time;"},{"lineNumber":122,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":124,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":124}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"public class Storage {"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"    protected String filepath;"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"    public Storage(String filepath) {"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        this.filepath \u003d filepath;"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"     * Store the list of task into the file stated by the filepath."},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"     * @param tasks list of tasks."},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"     * @throws DukeException if filepath is incorrect."},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"    public void store(ArrayList\u003cTask\u003e tasks) throws DukeException {"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"            FileWriter fw \u003d new FileWriter(filepath);"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"            int size \u003d tasks.size();"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"            String string, task, time;"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"            for (int i \u003d 0; i \u003c size; i++) {"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"                string \u003d tasks.get(i).toString();"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"                if (string.contains(\"(\")) {"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"                    String[] str \u003d string.split(\"\\\\(\", 2);"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"                    task \u003d str[0];"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"                    str \u003d str[1].split(\"\\\\)\", 2);"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"                    time \u003d str[0];"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"                    fw.write(task + \"/\" + time + \"\\n\");"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"                } else {"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"                    fw.write(string + \"\\n\");"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"                }"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"            }"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"            fw.close();"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"        } catch (IOException e) {"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"☹ OOPS!!! There is an error in storing the file.\");"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"     * Load the list of tasks from the file stated by the filepath."},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"     * @return list of tasks."},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"     * @throws DukeException if file not found or corrupted."},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {"},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"            File f \u003d new File(filepath);"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"            Scanner scan \u003d new Scanner(f);"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"            ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"            String string, info, temp, time;"},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":"            char action, done;"},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":"            Task task;"},{"lineNumber":61,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":"            while (scan.hasNext()) {"},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":"                string \u003d scan.nextLine();"},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":"                action \u003d string.charAt(1);"},{"lineNumber":65,"author":{"gitId":"NBH99"},"content":"                done \u003d string.charAt(4);"},{"lineNumber":66,"author":{"gitId":"NBH99"},"content":"                String[] str \u003d string.split(\"] \", 2);"},{"lineNumber":67,"author":{"gitId":"NBH99"},"content":"                temp \u003d str[1];"},{"lineNumber":68,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":69,"author":{"gitId":"NBH99"},"content":"                if (temp.contains(\" /\")) {"},{"lineNumber":70,"author":{"gitId":"NBH99"},"content":"                    str \u003d temp.split(\" /\", 2);"},{"lineNumber":71,"author":{"gitId":"NBH99"},"content":"                    info \u003d str[0];"},{"lineNumber":72,"author":{"gitId":"NBH99"},"content":"                    str \u003d str[1].split(\" \", 2);"},{"lineNumber":73,"author":{"gitId":"NBH99"},"content":"                    time \u003d str[1];"},{"lineNumber":74,"author":{"gitId":"NBH99"},"content":"                } else {"},{"lineNumber":75,"author":{"gitId":"NBH99"},"content":"                    info \u003d temp;"},{"lineNumber":76,"author":{"gitId":"NBH99"},"content":"                    time \u003d \"\";"},{"lineNumber":77,"author":{"gitId":"NBH99"},"content":"                }"},{"lineNumber":78,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":79,"author":{"gitId":"NBH99"},"content":"                if (action \u003d\u003d \u0027T\u0027) {"},{"lineNumber":80,"author":{"gitId":"NBH99"},"content":"                    task \u003d new Todo(info);"},{"lineNumber":81,"author":{"gitId":"NBH99"},"content":"                } else if (action \u003d\u003d \u0027D\u0027) {"},{"lineNumber":82,"author":{"gitId":"NBH99"},"content":"                    task \u003d new Deadline(info, time);"},{"lineNumber":83,"author":{"gitId":"NBH99"},"content":"                } else if (action \u003d\u003d \u0027E\u0027) {"},{"lineNumber":84,"author":{"gitId":"NBH99"},"content":"                    task \u003d new Event(info, time);"},{"lineNumber":85,"author":{"gitId":"NBH99"},"content":"                } else {"},{"lineNumber":86,"author":{"gitId":"NBH99"},"content":"                    throw new DukeException(\"☹ OOPS!!! There is an error in loading the file.\");"},{"lineNumber":87,"author":{"gitId":"NBH99"},"content":"                }"},{"lineNumber":88,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":89,"author":{"gitId":"NBH99"},"content":"                if (done \u003d\u003d \u0027X\u0027) {"},{"lineNumber":90,"author":{"gitId":"NBH99"},"content":"                    task.markAsDone();"},{"lineNumber":91,"author":{"gitId":"NBH99"},"content":"                }"},{"lineNumber":92,"author":{"gitId":"NBH99"},"content":"                list.add(task);"},{"lineNumber":93,"author":{"gitId":"NBH99"},"content":"            }"},{"lineNumber":94,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":95,"author":{"gitId":"NBH99"},"content":"            return list;"},{"lineNumber":96,"author":{"gitId":"NBH99"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":97,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"☹ OOPS!!! There is an error in loading the file.\");"},{"lineNumber":98,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":101,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":101}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    protected String description;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"    protected boolean isDone;"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"    public Task(String description) {"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"        this.description \u003d description;"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"        this.isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    public String getStatusIcon() {"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        return (isDone ? \"X\" : \" \");"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"    public void markAsDone() {"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"        this.isDone \u003d true;"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":23}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"public class TaskList {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    protected ArrayList\u003cTask\u003e list;"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"    protected int size;"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public TaskList() {"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"        this.list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"        this.size \u003d 0;"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"        this.list \u003d list;"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"        this.size \u003d list.size();"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"     * Mark the numbered task as done."},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"     * @param num task number."},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"    public void doneTask(int num) {"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"        list.get(num).markAsDone();"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"     * Delete the numbered task from the list of tasks."},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"     * @param num task number."},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"    public void deleteTask(int num) {"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"        size \u003d size - 1;"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"        Task t \u003d list.get(num);"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"        list.remove(num);"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"     * Add the required task into the list of tasks."},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"     * @param action command."},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"     * @param task description."},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"     * @param time required for deadline and event."},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"    public void addTask(String action, String task, String time) {"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"        size \u003d size + 1;"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"        if (action.equals(\"todo\")) {"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"            list.add(new Todo(task));"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"        } else if (action.equals(\"deadline\")) {"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"            list.add(new Deadline(task, time));"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"        } else if (action.equals(\"event\")) {"},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"            list.add(new Event(task, time));"},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"     * Show all the tasks in the list."},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":"    public void listTask() {"},{"lineNumber":61,"author":{"gitId":"NBH99"},"content":"        for (int i \u003d 0; i \u003c size; i++) {"},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":"            System.out.println((i + 1) + \".\" + list.get(i));"},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":66,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"NBH99"},"content":"     * Find the tasks which has similar name to the string."},{"lineNumber":68,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"NBH99"},"content":"     * @param task string to be searched."},{"lineNumber":70,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"NBH99"},"content":"    public void findTask(String task) {"},{"lineNumber":72,"author":{"gitId":"NBH99"},"content":"        int num \u003d 1;"},{"lineNumber":73,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":74,"author":{"gitId":"NBH99"},"content":"        for (int i \u003d 0; i \u003c size; i++) {"},{"lineNumber":75,"author":{"gitId":"NBH99"},"content":"            String string \u003d list.get(i).toString();"},{"lineNumber":76,"author":{"gitId":"NBH99"},"content":"            if (string.contains(task)) {"},{"lineNumber":77,"author":{"gitId":"NBH99"},"content":"                System.out.println(num++ + \".\" + string);"},{"lineNumber":78,"author":{"gitId":"NBH99"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":82,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"NBH99"},"content":"     * Search for tasks which take place at that timing."},{"lineNumber":84,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"NBH99"},"content":"     * @param time string to be searched."},{"lineNumber":86,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"NBH99"},"content":"    public void dateTask(String time) {"},{"lineNumber":88,"author":{"gitId":"NBH99"},"content":"        int num \u003d 1;"},{"lineNumber":89,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":90,"author":{"gitId":"NBH99"},"content":"        for (int i \u003d 0; i \u003c size; i++) {"},{"lineNumber":91,"author":{"gitId":"NBH99"},"content":"            String string \u003d list.get(i).toString();"},{"lineNumber":92,"author":{"gitId":"NBH99"},"content":"            if (string.contains(time)) {"},{"lineNumber":93,"author":{"gitId":"NBH99"},"content":"                System.out.println(num++ + \".\" + string);"},{"lineNumber":94,"author":{"gitId":"NBH99"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":98,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":98}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public Todo (String description) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(description);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":12}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    protected Scanner scanner;"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    public Ui() {"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"        scanner \u003d new Scanner(System.in);"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    public void showWelcome() {"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        System.out.println(\"-------------------------------\" +"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"                \"--------------------------------\");"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"        System.out.println(\"-------------------------------\" +"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"                \"--------------------------------\");"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"    public void showError(String error) {"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"        System.out.println(error);"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"    public String readCommand() {"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"        return scanner.nextLine();"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"    public void showGoodBye() {"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"        System.out.println(\"Bye. Hope to see you again soon\");"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"    public void showLine() {"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"        System.out.println(\"-------------------------------\" +"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"                \"--------------------------------\");"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"    public void showList() {"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"    public void showAdd(Task t, int size) {"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"                + \"  \" + t + \"\\nNow you have \""},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"                + size + \" tasks in the list.\");"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"    public void showDone(Task t){"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n  \" + t);"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"    public void showDelete(Task t, int size) {"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n  \""},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"                + t + \"\\nNow you have \""},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"                + size + \" tasks in the list.\");"},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"    public void showFind() {"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":"    public void showDate(String time) {"},{"lineNumber":61,"author":{"gitId":"NBH99"},"content":"        System.out.println(\"Here are the tasks occurring on \" + time + \" in your list:\");"},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":64}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"public class DukeTest {"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    public void parserTest1() throws Exception {"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"borrow book\","},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"                Parser.getTask(\"borrow book\"));"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"    public void parserTest2() throws Exception {"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"project meeting\","},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"                Parser.getTask(\"project meeting /at 2021-10-14\"));"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"    public void parserTest3() throws Exception {"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"Oct 14 2021\","},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"                Parser.getTimeAt(\"project meeting /at 2021-10-14\"));"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"    public void parserTest4() throws Exception {"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"May 2 2021\","},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"                Parser.getTimeBy(\"read book /by 2021-05-02\"));"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"    public void stringTest1() throws Exception {"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"[T][ ] borrow book\","},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"                new Todo(\"borrow book\").toString());"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"    public void stringTest2() throws Exception {"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"[E][ ] project meeting (at: Oct 14 2021)\","},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"                new Event(\"project meeting\", \"Oct 14 2021\").toString());"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"    public void stringTest3() throws Exception {"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"[D][ ] read book (by: May 2 2021)\","},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"                new Deadline(\"read book\", \"May 2 2021\").toString());"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":48}},{"path":"text-ui-test/Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"[D][ ] return book /by: Mar 23 2021"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"[E][X] project meeting /at: Oct 14 2021"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"[D][X] read book /by: May 2 2021"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"[T][ ] project work"}],"authorContributionMap":{"NBH99":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"list"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"deadline return book /by 2021-03-23"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"event project meeting /at 2021-10-14"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"done 3"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"done 7"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"deadline read book /by 2021-05-02"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"todo project work"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"list"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"done 4"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"delete 1"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"delete 8"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"list"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"bye"}],"authorContributionMap":{"NBH99":14}}]
