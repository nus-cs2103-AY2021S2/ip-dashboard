[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":"run {"},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":"    enableAssertions \u003d true"},{"lineNumber":65,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":20,"-":45}},{"path":"data/Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"[D][ ] return book /by: Mar 23 2021"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"[E][X] project meeting /at: Oct 14 2021"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"[D][X] read book /by: May 2 2021"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"[T][ ] project work"}],"authorContributionMap":{"NBH99":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"### todo"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"Add a todo to the list with the given information"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"### event"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"Add an event to the list with the given information"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"### deadline"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"Add a deadline to the list with the given information"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"### done"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"Mark a task in the list as done by the given index"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"### list"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"Show the list of tasks."},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"### show"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"Show the statistic of the list with the given keyword."},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"### date"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"Search tasks which occur on the given date."},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"### find"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"Find tasks with names contain the given keyword."},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"### delete"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"Deletes the specified task from the list by the given index."},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"### bye"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"Save the current list and exit Duke."},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"### save"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"Duke data are saved in the hard disk automatically after any command that changes the data. "},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"There is no need to save manually."},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"### `todo` - Adding a todo"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"Add a todo to the list with the given information"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"Example of usage:"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"`todo INFO` \u003cbr /\u003e "},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"`todo borrow book`"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"Expected outcome:"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"`Got it. I\u0027ve added this task:` \u003cbr /\u003e"},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"`[T][ ] borrow book` \u003cbr /\u003e"},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"`Now you have 1 tasks in the list.`"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"### `event` - Adding an event"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"Add an event to the list with the given information"},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":"Example of usage:"},{"lineNumber":61,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":"`event INFO /at TIME` \u003cbr /\u003e"},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":"`event project meeting /at Oct 14 2021`"},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":65,"author":{"gitId":"NBH99"},"content":"Expected outcome:"},{"lineNumber":66,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":67,"author":{"gitId":"NBH99"},"content":"`Got it. I\u0027ve added this task:` \u003cbr /\u003e"},{"lineNumber":68,"author":{"gitId":"NBH99"},"content":"`[E][ ] project meeting (at: Oct 14 2021)` \u003cbr /\u003e"},{"lineNumber":69,"author":{"gitId":"NBH99"},"content":"`Now you have 2 tasks in the list.`"},{"lineNumber":70,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":71,"author":{"gitId":"NBH99"},"content":"### `deadline` - Adding a deadline"},{"lineNumber":72,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":73,"author":{"gitId":"NBH99"},"content":"Add a deadline to the list with the given information"},{"lineNumber":74,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":75,"author":{"gitId":"NBH99"},"content":"Example of usage:"},{"lineNumber":76,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":77,"author":{"gitId":"NBH99"},"content":"`deadline INFO /by TIME` \u003cbr /\u003e"},{"lineNumber":78,"author":{"gitId":"NBH99"},"content":"`deadline read book /by May 2 2021` "},{"lineNumber":79,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":80,"author":{"gitId":"NBH99"},"content":"Expected outcome:"},{"lineNumber":81,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":82,"author":{"gitId":"NBH99"},"content":"`Got it. I\u0027ve added this task:` \u003cbr /\u003e"},{"lineNumber":83,"author":{"gitId":"NBH99"},"content":"`[D][ ] read book (by: May 2 2021)` \u003cbr /\u003e"},{"lineNumber":84,"author":{"gitId":"NBH99"},"content":"`Now you have 3 tasks in the list.`"},{"lineNumber":85,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":86,"author":{"gitId":"NBH99"},"content":"### `done` - Marking task as done"},{"lineNumber":87,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":88,"author":{"gitId":"NBH99"},"content":"Mark a task in the list as done by the given index"},{"lineNumber":89,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":90,"author":{"gitId":"NBH99"},"content":"Example of usage:"},{"lineNumber":91,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":92,"author":{"gitId":"NBH99"},"content":"`done INDEX` \u003cbr /\u003e"},{"lineNumber":93,"author":{"gitId":"NBH99"},"content":"`done 3`"},{"lineNumber":94,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":95,"author":{"gitId":"NBH99"},"content":"Expected outcome:"},{"lineNumber":96,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":97,"author":{"gitId":"NBH99"},"content":"`Nice! I\u0027ve marked this task as done:` \u003cbr /\u003e"},{"lineNumber":98,"author":{"gitId":"NBH99"},"content":"`[D][X] read book (by: May 2 2021)`"},{"lineNumber":99,"author":{"gitId":"-"},"content":""},{"lineNumber":100,"author":{"gitId":"NBH99"},"content":"### `list` - Listing the tasks"},{"lineNumber":101,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":102,"author":{"gitId":"NBH99"},"content":"Show the list of tasks."},{"lineNumber":103,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":104,"author":{"gitId":"NBH99"},"content":"Example of usage:"},{"lineNumber":105,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":106,"author":{"gitId":"NBH99"},"content":"`list`"},{"lineNumber":107,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":108,"author":{"gitId":"NBH99"},"content":"Expected outcome:"},{"lineNumber":109,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":110,"author":{"gitId":"NBH99"},"content":"`Here are the tasks in your list:` \u003cbr /\u003e"},{"lineNumber":111,"author":{"gitId":"NBH99"},"content":"`1.[T][ ] borrow book` \u003cbr /\u003e"},{"lineNumber":112,"author":{"gitId":"NBH99"},"content":"`2.[E][ ] project meeting (at: Oct 14 2021)` \u003cbr /\u003e"},{"lineNumber":113,"author":{"gitId":"NBH99"},"content":"`3.[D][X] read book (by: May 2 2021)`"},{"lineNumber":114,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":115,"author":{"gitId":"NBH99"},"content":"### `show` - Showing the statistic"},{"lineNumber":116,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":117,"author":{"gitId":"NBH99"},"content":"Show the statistic of the list with the given keyword."},{"lineNumber":118,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":119,"author":{"gitId":"NBH99"},"content":"`todo` `event` `deadline` `done` `undone` `delete` `error`"},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":122,"author":{"gitId":"-"},"content":""},{"lineNumber":123,"author":{"gitId":"NBH99"},"content":"`show KEYWORD` \u003cbr /\u003e"},{"lineNumber":124,"author":{"gitId":"NBH99"},"content":"`show done`"},{"lineNumber":125,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":126,"author":{"gitId":"NBH99"},"content":"Expected outcome:"},{"lineNumber":127,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":128,"author":{"gitId":"NBH99"},"content":"`You have done 1 tasks in the list.`"},{"lineNumber":129,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":130,"author":{"gitId":"NBH99"},"content":"### `date` - Searching tasks by date"},{"lineNumber":131,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":132,"author":{"gitId":"NBH99"},"content":"Search tasks which occur on the given date."},{"lineNumber":133,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":134,"author":{"gitId":"NBH99"},"content":"Example of usage:"},{"lineNumber":135,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":136,"author":{"gitId":"NBH99"},"content":"`date DATE` \u003cbr /\u003e"},{"lineNumber":137,"author":{"gitId":"NBH99"},"content":"`date Oct 14 2021`"},{"lineNumber":138,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":139,"author":{"gitId":"NBH99"},"content":"Expected outcome:"},{"lineNumber":140,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":141,"author":{"gitId":"NBH99"},"content":"`Here are the tasks occurring on Oct 14 2021 in your list:` \u003cbr /\u003e"},{"lineNumber":142,"author":{"gitId":"NBH99"},"content":"`2.[E][ ] project meeting (at: Oct 14 2021)`"},{"lineNumber":143,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":144,"author":{"gitId":"NBH99"},"content":"### `find` - Finding tasks by name"},{"lineNumber":145,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":146,"author":{"gitId":"NBH99"},"content":"Find tasks with names contain the given keyword."},{"lineNumber":147,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":148,"author":{"gitId":"NBH99"},"content":"Example of usage:"},{"lineNumber":149,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":150,"author":{"gitId":"NBH99"},"content":"`find KEYWORD` \u003cbr /\u003e"},{"lineNumber":151,"author":{"gitId":"NBH99"},"content":"`find book`"},{"lineNumber":152,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":153,"author":{"gitId":"NBH99"},"content":"Expected outcome:"},{"lineNumber":154,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":155,"author":{"gitId":"NBH99"},"content":"`Here are the matching tasks in your list:` \u003cbr /\u003e"},{"lineNumber":156,"author":{"gitId":"NBH99"},"content":"`1.[T][ ] borrow book`"},{"lineNumber":157,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":158,"author":{"gitId":"NBH99"},"content":"### `delete` - Deleting a task"},{"lineNumber":159,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":160,"author":{"gitId":"NBH99"},"content":"Deletes the specified task from the list by the given index."},{"lineNumber":161,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":162,"author":{"gitId":"NBH99"},"content":"Example of usage:"},{"lineNumber":163,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":164,"author":{"gitId":"NBH99"},"content":"`delete INDEX` \u003cbr /\u003e"},{"lineNumber":165,"author":{"gitId":"NBH99"},"content":"`delete 3`"},{"lineNumber":166,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":167,"author":{"gitId":"NBH99"},"content":"Expected outcome:"},{"lineNumber":168,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":169,"author":{"gitId":"NBH99"},"content":"`Noted. I\u0027ve removed this task:` \u003cbr /\u003e"},{"lineNumber":170,"author":{"gitId":"NBH99"},"content":"`[D][X] read book (by: May 2 2021)` \u003cbr /\u003e"},{"lineNumber":171,"author":{"gitId":"NBH99"},"content":"`Now you have 2 tasks in the list.`"},{"lineNumber":172,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":173,"author":{"gitId":"NBH99"},"content":"### `bye` - Exiting Duke"},{"lineNumber":174,"author":{"gitId":"-"},"content":""},{"lineNumber":175,"author":{"gitId":"NBH99"},"content":"Exit the program Duke."},{"lineNumber":176,"author":{"gitId":"-"},"content":""},{"lineNumber":177,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"NBH99"},"content":"`bye`"},{"lineNumber":180,"author":{"gitId":"-"},"content":""},{"lineNumber":181,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":182,"author":{"gitId":"-"},"content":""},{"lineNumber":183,"author":{"gitId":"NBH99"},"content":"`Bye. Hope to see you again soon`"}],"authorContributionMap":{"NBH99":165,"-":18}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public abstract class Command {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    protected String info;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"     * Constructor to form a command with execute."},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"     * @param info detail."},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"    public Command(String info) {"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"        this.info \u003d info;"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"     * Execute the command requested by the action on the current information."},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"     * If command cannot be fulfilled, throws DukeException."},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"     * @param tasks tasks."},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"     * @param ui ui."},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"     * @param storage storage."},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"     * @param stat statistic."},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"     * @throws DukeException if execute fails."},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"    public abstract void execute(TaskList tasks, Ui ui,"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"                                 Storage storage, Statistics stat) throws DukeException;"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"    public abstract boolean isExit();"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":29}},{"path":"src/main/java/DateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class DateCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public DateCommand(String info) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(info);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public void execute(TaskList tasks, Ui ui,"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"                        Storage storage, Statistics stat) throws DukeException {"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"        String time;"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        if (info.equals(\"\")) {"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! The description cannot be empty.\");"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"            time \u003d Parser.parseTime(info);"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"            ui.showDate(time, tasks.searchDateTask(time));"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"    public boolean isExit() {"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"        return false;"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":25}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    protected String by;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"     * Constructor to create a task with deadline."},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"     * @param description task."},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"     * @param by time."},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        this.by \u003d by;"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":21}},{"path":"src/main/java/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public DeadlineCommand(String info) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(info);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public void execute(TaskList tasks, Ui ui,"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"                        Storage storage, Statistics stat) throws DukeException {"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"        String task;"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"        String time;"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        int size;"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        Task t;"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"        task \u003d Parser.getTask(info);"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"        if (task.equals(\"\")) {"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! The description cannot be empty.\");"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"        time \u003d Parser.getTimeBy(info);"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"        time \u003d Parser.parseTime(time);"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"        tasks.addDeadline(task, time);"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"        stat.changeStat(1, \"deadline\");"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"        size \u003d tasks.size;"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"        t \u003d (tasks.list).get(size - 1);"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"        ui.showAddMessage(t, size);"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"        storage.store(tasks.list);"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"    public boolean isExit() {"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"        return false;"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":36}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public DeleteCommand(String info) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(info);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public void execute(TaskList tasks, Ui ui,"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"                        Storage storage, Statistics stat) throws DukeException {"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"        int num;"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        assert info !\u003d null;"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"            num \u003d Integer.parseInt(info);"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! There is no such task number.\");"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"        assert tasks.size \u003e 0;"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"        if (num \u003e tasks.size || num \u003c\u003d 0) {"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! There is no such task number.\");"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"            int size;"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"            Task task;"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"            char action;"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"            char done;"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"            num--;"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"            task \u003d (tasks.list).get(num);"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"            tasks.deleteTask(num);"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"            action \u003d (task.toString()).charAt(1);"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"            done \u003d (task.toString()).charAt(4);"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"            switch (action) {"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"            case \u0027T\u0027:"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"                stat.changeStat(-1, \"todo\");"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"                break;"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"            case \u0027D\u0027:"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"                stat.changeStat(-1, \"deadline\");"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"                break;"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"            case \u0027E\u0027:"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"                stat.changeStat(-1, \"event\");"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"                break;"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"            default:"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"                throw new DukeException(\"OOPS!!! There is an error in deleting the task.\");"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"            if (done \u003d\u003d \u0027X\u0027) {"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"                stat.changeStat(-1, \"done\");"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"            }"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"            stat.changeStat(1, \"delete\");"},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"            size \u003d tasks.size;"},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"            ui.showDelete(task, size);"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"            storage.store(tasks.list);"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":"    public boolean isExit() {"},{"lineNumber":61,"author":{"gitId":"NBH99"},"content":"        return false;"},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":64}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":" */"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"    private void flip() {"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"        Collections.reverse(tmp);"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"        return new DialogBox(text, img);"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"        db.flip();"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"        return db;"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":60}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class DoneCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public DoneCommand(String info) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(info);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public void execute(TaskList tasks, Ui ui,"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"                        Storage storage, Statistics stat) throws DukeException {"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"        int num;"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"        Task task;"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"            num \u003d Integer.parseInt(info);"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! There is no such task number.\");"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"        assert tasks.size \u003e 0;"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"        if (num \u003e tasks.size || num \u003c\u003d 0) {"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! There is no such task number.\");"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"            num--;"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"            task \u003d tasks.list.get(num);"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"            if (task.getStatusIcon().equals(\"X\")) {"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"                stat.changeStat(-1, \"done\");"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"            tasks.doneTask(num);"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"            stat.changeStat(1, \"done\");"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"            task \u003d tasks.list.get(num);"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"            ui.showDone(task);"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"            storage.store(tasks.list);"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"    public boolean isExit() {"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"        return false;"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":43}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    private final Storage storage;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"    private final Statistics stat;"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    private final Ui ui;"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"    private TaskList tasks;"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"     * Constructor to set up Duke with previously stored file."},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    public Duke() {"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        ui \u003d new Ui();"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        storage \u003d new Storage();"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"        stat \u003d new Statistics();"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"     * Duke welcome the user."},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"    public String welcome() {"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"        ui.showWelcome();"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"        return ui.getMessage();"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"     * Load the file into storage and list out the current tasks."},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"     * @return loaded."},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"    public String loading() {"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"            tasks \u003d new TaskList(storage.load(stat));"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"            Command c \u003d new ListCommand(\"\");"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"            c.execute(tasks, ui, storage, stat);"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"            return ui.getMessage();"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"        } catch (DukeException e) {"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"            return e.getMessage();"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"     * Command is created by parsing the input and then executed."},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"     * Error message is shown if there is DukeException."},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"     * @param input user input."},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"     * @return response."},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"    public String getResponse(String input) {"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"            Command c \u003d Parser.parseInput(input);"},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"            c.execute(tasks, ui, storage, stat);"},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"        } catch (DukeException e) {"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"            ui.showError(e);"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"        return ui.getMessage();"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"NBH99"},"content":"     * Check whether to close the platform."},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":"     * @param input string"},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":"     * @return isOver"},{"lineNumber":65,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"NBH99"},"content":"    public boolean isOver(String input) {"},{"lineNumber":67,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":68,"author":{"gitId":"NBH99"},"content":"            Command c \u003d Parser.parseInput(input);"},{"lineNumber":69,"author":{"gitId":"NBH99"},"content":"            return c.isExit();"},{"lineNumber":70,"author":{"gitId":"NBH99"},"content":"        } catch (DukeException e) {"},{"lineNumber":71,"author":{"gitId":"NBH99"},"content":"            return false;"},{"lineNumber":72,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":75,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"NBH99":72,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public DukeException(String message) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(message);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":7}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    protected String at;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"     * Constructor to create an event."},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"     * @param description task."},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"     * @param at time."},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    public Event(String description, String at) {"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        super(description);"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        this.at \u003d at;"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":21}},{"path":"src/main/java/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class EventCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public EventCommand(String info) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(info);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public void execute(TaskList tasks, Ui ui,"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"                        Storage storage, Statistics stat) throws DukeException {"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"        String task;"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"        String time;"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        int size;"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        Task t;"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"        task \u003d Parser.getTask(info);"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"        if (task.equals(\"\")) {"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! The description cannot be empty.\");"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"        time \u003d Parser.getTimeAt(info);"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"        time \u003d Parser.parseTime(time);"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"        tasks.addEvent(task, time);"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"        stat.changeStat(1, \"event\");"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"        size \u003d tasks.size;"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"        t \u003d (tasks.list).get(size - 1);"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"        ui.showAddMessage(t, size);"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"        storage.store(tasks.list);"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"    public boolean isExit() {"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"        return false;"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":36}},{"path":"src/main/java/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class ExitCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public ExitCommand(String info) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(info);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public void execute(TaskList tasks, Ui ui,"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"                        Storage storage, Statistics stat) throws DukeException {"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"        ui.showGoodBye();"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"        storage.store(tasks.list);"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"    public boolean isExit() {"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"        return true;"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":19}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class FindCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public FindCommand(String info) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(info);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public void execute(TaskList tasks, Ui ui,"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"                        Storage storage, Statistics stat) throws DukeException {"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"        assert info !\u003d null;"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        if (info.equals(\"\")) {"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! The description cannot be empty.\");"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"            ui.showFind(tasks.findTask(info));"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"    public boolean isExit() {"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"        return false;"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":24}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":" */"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public static void main(String[] args) {"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":12}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class ListCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public ListCommand(String info) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(info);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public void execute(TaskList tasks, Ui ui,"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"                        Storage storage, Statistics stat) throws DukeException {"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"        assert tasks.size \u003e\u003d 0;"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"        if (tasks.size \u003d\u003d 0) {"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! There is currently no tasks for you.\");"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"            ui.showList(tasks.listTask());"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"    public boolean isExit() {"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"        return false;"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":23}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"import javafx.scene.image.Image;"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":" * A GUI for Duke using FXML."},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":" */"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"public class Main extends Application {"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"    private final Duke duke \u003d new Duke();"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"    public void start(Stage stage) {"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"            stage.setScene(scene);"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"            stage.show();"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"            stage.setTitle(\"Duke\");"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"            stage.getIcons().add(new Image(getClass().getResourceAsStream(\"/images/DaDuke.png\")));"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().startUp();"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":34}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"import javafx.animation.PauseTransition;"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"import javafx.application.Platform;"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"import javafx.util.Duration;"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":" */"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"    private VBox dialogContainer;"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"    private TextField userInput;"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"    private Button sendButton;"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"    private Duke duke;"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"    public void initialize() {"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"        duke \u003d d;"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends the to"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"     * the dialog container. Clears the user input after processing. Exits program if user input is bye."},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"    @FXML"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"    private void handleUserInput() {"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"        boolean isExit \u003d duke.isOver(input);"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"        );"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"        userInput.clear();"},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"        if (isExit) {"},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(3));"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"            pause.setOnFinished(event -\u003e Platform.exit());"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"            pause.play();"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"NBH99"},"content":"     * Creates two dialog boxes, one containing Duke\u0027s welcome and the other containing possible error in loading Duke"},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":"     * and then appends them to the dialog container."},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":"    public void startUp() {"},{"lineNumber":65,"author":{"gitId":"NBH99"},"content":"        String response \u003d duke.welcome();"},{"lineNumber":66,"author":{"gitId":"NBH99"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":67,"author":{"gitId":"NBH99"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":68,"author":{"gitId":"NBH99"},"content":"        );"},{"lineNumber":69,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":70,"author":{"gitId":"NBH99"},"content":"        String loaded \u003d duke.loading();"},{"lineNumber":71,"author":{"gitId":"NBH99"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":72,"author":{"gitId":"NBH99"},"content":"                DialogBox.getDukeDialog(loaded, dukeImage)"},{"lineNumber":73,"author":{"gitId":"NBH99"},"content":"        );"},{"lineNumber":74,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":76,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":76}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"public class Parser {"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"     * Parse the input string into recognisable command."},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"     * @param string input."},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"     * @return command."},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"     * @throws DukeException if no command can be created."},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"    public static Command parseInput(String string) throws DukeException {"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"        String action;"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"        String info;"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"        Command command;"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"        if (string.contains(\" \")) {"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"            String[] str \u003d string.split(\" \", 2);"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"            action \u003d str[0];"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"            info \u003d str[1];"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"            action \u003d string;"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"            info \u003d \"\";"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"        switch (action) {"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"        case \"todo\":"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"            command \u003d new TodoCommand(info);"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"        case \"deadline\":"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"            command \u003d new DeadlineCommand(info);"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"        case \"event\":"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"            command \u003d new EventCommand(info);"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"        case \"done\":"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"            command \u003d new DoneCommand(info);"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"        case \"delete\":"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"            command \u003d new DeleteCommand(info);"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"        case \"bye\":"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"            command \u003d new ExitCommand(info);"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"        case \"list\":"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"            command \u003d new ListCommand(info);"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"        case \"find\":"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"            command \u003d new FindCommand(info);"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"        case \"date\":"},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"            command \u003d new DateCommand(info);"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"        case \"show\":"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"            command \u003d new ShowCommand(info);"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":"        default:"},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means.\");"},{"lineNumber":61,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":"        return command;"},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":66,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"NBH99"},"content":"     * Parse the information string to get the task required."},{"lineNumber":68,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"NBH99"},"content":"     * @param info details."},{"lineNumber":70,"author":{"gitId":"NBH99"},"content":"     * @return task."},{"lineNumber":71,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"NBH99"},"content":"    public static String getTask(String info) {"},{"lineNumber":73,"author":{"gitId":"NBH99"},"content":"        String task;"},{"lineNumber":74,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":75,"author":{"gitId":"NBH99"},"content":"        if (info.contains(\" /\")) {"},{"lineNumber":76,"author":{"gitId":"NBH99"},"content":"            String[] str \u003d info.split(\" /\", 2);"},{"lineNumber":77,"author":{"gitId":"NBH99"},"content":"            task \u003d str[0];"},{"lineNumber":78,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":79,"author":{"gitId":"NBH99"},"content":"            task \u003d info;"},{"lineNumber":80,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":82,"author":{"gitId":"NBH99"},"content":"        return task;"},{"lineNumber":83,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":85,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"NBH99"},"content":"     * Parse the information string to get the timing for event."},{"lineNumber":87,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"NBH99"},"content":"     * @param info detail."},{"lineNumber":89,"author":{"gitId":"NBH99"},"content":"     * @return time at."},{"lineNumber":90,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"NBH99"},"content":"    public static String getTimeAt(String info) {"},{"lineNumber":92,"author":{"gitId":"NBH99"},"content":"        String time;"},{"lineNumber":93,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":94,"author":{"gitId":"NBH99"},"content":"        if (info.contains(\" /at \")) {"},{"lineNumber":95,"author":{"gitId":"NBH99"},"content":"            String[] str \u003d info.split(\" /at \", 2);"},{"lineNumber":96,"author":{"gitId":"NBH99"},"content":"            time \u003d str[1];"},{"lineNumber":97,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":98,"author":{"gitId":"NBH99"},"content":"            time \u003d \"\";"},{"lineNumber":99,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":101,"author":{"gitId":"NBH99"},"content":"        return time;"},{"lineNumber":102,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":104,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"NBH99"},"content":"     * Parse the information string to get the timing for deadline."},{"lineNumber":106,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":107,"author":{"gitId":"NBH99"},"content":"     * @param info detail."},{"lineNumber":108,"author":{"gitId":"NBH99"},"content":"     * @return time by."},{"lineNumber":109,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"NBH99"},"content":"    public static String getTimeBy(String info) {"},{"lineNumber":111,"author":{"gitId":"NBH99"},"content":"        String time;"},{"lineNumber":112,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":113,"author":{"gitId":"NBH99"},"content":"        if (info.contains(\" /by \")) {"},{"lineNumber":114,"author":{"gitId":"NBH99"},"content":"            String[] str \u003d info.split(\" /by \", 2);"},{"lineNumber":115,"author":{"gitId":"NBH99"},"content":"            time \u003d str[1];"},{"lineNumber":116,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":117,"author":{"gitId":"NBH99"},"content":"            time \u003d \"\";"},{"lineNumber":118,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":120,"author":{"gitId":"NBH99"},"content":"        return time;"},{"lineNumber":121,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":123,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"NBH99"},"content":"     * Parse the timing to get the format."},{"lineNumber":125,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":126,"author":{"gitId":"NBH99"},"content":"     * @param info detail,"},{"lineNumber":127,"author":{"gitId":"NBH99"},"content":"     * @return time."},{"lineNumber":128,"author":{"gitId":"NBH99"},"content":"     * @throws DukeException if fails."},{"lineNumber":129,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":130,"author":{"gitId":"NBH99"},"content":"    public static String parseTime(String info) throws DukeException {"},{"lineNumber":131,"author":{"gitId":"NBH99"},"content":"        String time;"},{"lineNumber":132,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":133,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":134,"author":{"gitId":"NBH99"},"content":"            LocalDate date \u003d LocalDate.parse(info, DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));"},{"lineNumber":135,"author":{"gitId":"NBH99"},"content":"            time \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":136,"author":{"gitId":"NBH99"},"content":"            return time;"},{"lineNumber":137,"author":{"gitId":"NBH99"},"content":"        } catch (DateTimeParseException ignored) {"},{"lineNumber":138,"author":{"gitId":"NBH99"},"content":"            assert true;"},{"lineNumber":139,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":141,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":142,"author":{"gitId":"NBH99"},"content":"            LocalDate date \u003d LocalDate.parse(info, DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\"));"},{"lineNumber":143,"author":{"gitId":"NBH99"},"content":"            time \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":144,"author":{"gitId":"NBH99"},"content":"            return time;"},{"lineNumber":145,"author":{"gitId":"NBH99"},"content":"        } catch (DateTimeParseException ignored) {"},{"lineNumber":146,"author":{"gitId":"NBH99"},"content":"            assert true;"},{"lineNumber":147,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":148,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":149,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":150,"author":{"gitId":"NBH99"},"content":"            LocalDate date \u003d LocalDate.parse(info, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"},{"lineNumber":151,"author":{"gitId":"NBH99"},"content":"            time \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":152,"author":{"gitId":"NBH99"},"content":"            return time;"},{"lineNumber":153,"author":{"gitId":"NBH99"},"content":"        } catch (DateTimeParseException ignored) {"},{"lineNumber":154,"author":{"gitId":"NBH99"},"content":"            assert true;"},{"lineNumber":155,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":156,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":157,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":158,"author":{"gitId":"NBH99"},"content":"            LocalDate date \u003d LocalDate.parse(info, DateTimeFormatter.ofPattern(\"dd/MMM/yyyy\"));"},{"lineNumber":159,"author":{"gitId":"NBH99"},"content":"            time \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":160,"author":{"gitId":"NBH99"},"content":"            return time;"},{"lineNumber":161,"author":{"gitId":"NBH99"},"content":"        } catch (DateTimeParseException ignored) {"},{"lineNumber":162,"author":{"gitId":"NBH99"},"content":"            assert true;"},{"lineNumber":163,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":164,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":165,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":166,"author":{"gitId":"NBH99"},"content":"            LocalDate date \u003d LocalDate.parse(info, DateTimeFormatter.ofPattern(\"dd MM yyyy\"));"},{"lineNumber":167,"author":{"gitId":"NBH99"},"content":"            time \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":168,"author":{"gitId":"NBH99"},"content":"            return time;"},{"lineNumber":169,"author":{"gitId":"NBH99"},"content":"        } catch (DateTimeParseException ignored) {"},{"lineNumber":170,"author":{"gitId":"NBH99"},"content":"            assert true;"},{"lineNumber":171,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":173,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":174,"author":{"gitId":"NBH99"},"content":"            LocalDate date \u003d LocalDate.parse(info, DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));"},{"lineNumber":175,"author":{"gitId":"NBH99"},"content":"            time \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":176,"author":{"gitId":"NBH99"},"content":"            return time;"},{"lineNumber":177,"author":{"gitId":"NBH99"},"content":"        } catch (DateTimeParseException ignored) {"},{"lineNumber":178,"author":{"gitId":"NBH99"},"content":"            assert true;"},{"lineNumber":179,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":180,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":181,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":182,"author":{"gitId":"NBH99"},"content":"            LocalDate date \u003d LocalDate.parse(info, DateTimeFormatter.ofPattern(\"MM dd yyyy\"));"},{"lineNumber":183,"author":{"gitId":"NBH99"},"content":"            time \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":184,"author":{"gitId":"NBH99"},"content":"            return time;"},{"lineNumber":185,"author":{"gitId":"NBH99"},"content":"        } catch (DateTimeParseException ignored) {"},{"lineNumber":186,"author":{"gitId":"NBH99"},"content":"            assert true;"},{"lineNumber":187,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":188,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":189,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":190,"author":{"gitId":"NBH99"},"content":"            LocalDate date \u003d LocalDate.parse(info, DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"},{"lineNumber":191,"author":{"gitId":"NBH99"},"content":"            time \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":192,"author":{"gitId":"NBH99"},"content":"            return time;"},{"lineNumber":193,"author":{"gitId":"NBH99"},"content":"        } catch (DateTimeParseException ignored) {"},{"lineNumber":194,"author":{"gitId":"NBH99"},"content":"            assert true;"},{"lineNumber":195,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":196,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":197,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":198,"author":{"gitId":"NBH99"},"content":"            LocalDate date \u003d LocalDate.parse(info);"},{"lineNumber":199,"author":{"gitId":"NBH99"},"content":"            time \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"},{"lineNumber":200,"author":{"gitId":"NBH99"},"content":"            return time;"},{"lineNumber":201,"author":{"gitId":"NBH99"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":202,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! The timing is not in the correct format.\");"},{"lineNumber":203,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":204,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":205,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":206,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":206}},{"path":"src/main/java/ShowCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class ShowCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public ShowCommand(String info) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(info);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public void execute(TaskList tasks, Ui ui,"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"                        Storage storage, Statistics stat) throws DukeException {"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"        switch (info) {"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"        case \"todo\":"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"            ui.showStatistic(\"There are \" + stat.showStat(\"todo\") + \" todo in the list.\");"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"        case \"event\":"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"            ui.showStatistic(\"There are \" + stat.showStat(\"event\") + \" events in the list.\");"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"        case \"deadline\":"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"            ui.showStatistic(\"There are \" + stat.showStat(\"deadline\") + \" deadlines in the list.\");"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"        case \"done\":"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"            ui.showStatistic(\"You have done \" + stat.showStat(\"done\") + \" tasks in the list.\");"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"        case \"undone\":"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"            ui.showStatistic(\"You have not done \" + stat.showStat(\"undone\") + \" tasks in the list.\");"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"        case \"delete\":"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"            ui.showStatistic(\"You have deleted \" + stat.showStat(\"delete\") + \" tasks in this session.\");"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"        case \"size\":"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"            ui.showStatistic(\"There are \" + stat.showStat(\"size\") + \" tasks in the list.\");"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"        case \"error\":"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"            ui.showStatistic(\"You have \" + stat.showStat(\"error\") + \" in this session.\");"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"        default:"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS! The description for show cannot be empty\");"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"    public boolean isExit() {"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"        return false;"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":45}},{"path":"src/main/java/Statistics.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class Statistics {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    private int done;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"    private int delete;"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    private int todo;"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"    private int deadline;"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    private int event;"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    private int error;"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"    private int undone;"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"    private int size;"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"     * Constructor to create a new statistics."},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"    public Statistics() {"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"        done \u003d 0;"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"        delete \u003d 0;"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"        todo \u003d 0;"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"        deadline \u003d 0;"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"        event \u003d 0;"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"        undone \u003d 0;"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"        size \u003d 0;"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"        error \u003d 0;"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"     * Update the variable in the statistics."},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"     * @param change plus or minus one"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"     * @param variable string"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"    public void changeStat(int change, String variable) {"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"        switch (variable) {"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"        case \"todo\":"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"            todo \u003d todo + change;"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"            size \u003d size + change;"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"        case \"deadline\":"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"            deadline \u003d deadline + change;"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"            size \u003d size + change;"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"        case \"event\":"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"            event \u003d event + change;"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"            size \u003d size + change;"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"        case \"done\":"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"            done \u003d done + change;"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"            undone \u003d size - done;"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"        case \"delete\":"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"            delete \u003d delete + change;"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"        default:"},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"            error \u003d error++;"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":"     * Show the variable in the statistics."},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":61,"author":{"gitId":"NBH99"},"content":"     * @param variable string"},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":"     * @return stat"},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":"    public int showStat(String variable) {"},{"lineNumber":65,"author":{"gitId":"NBH99"},"content":"        int stat;"},{"lineNumber":66,"author":{"gitId":"NBH99"},"content":"        switch (variable) {"},{"lineNumber":67,"author":{"gitId":"NBH99"},"content":"        case \"todo\":"},{"lineNumber":68,"author":{"gitId":"NBH99"},"content":"            stat \u003d todo;"},{"lineNumber":69,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":70,"author":{"gitId":"NBH99"},"content":"        case \"deadline\":"},{"lineNumber":71,"author":{"gitId":"NBH99"},"content":"            stat \u003d deadline;"},{"lineNumber":72,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":73,"author":{"gitId":"NBH99"},"content":"        case \"event\":"},{"lineNumber":74,"author":{"gitId":"NBH99"},"content":"            stat \u003d event;"},{"lineNumber":75,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":76,"author":{"gitId":"NBH99"},"content":"        case \"done\":"},{"lineNumber":77,"author":{"gitId":"NBH99"},"content":"            stat \u003d done;"},{"lineNumber":78,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":79,"author":{"gitId":"NBH99"},"content":"        case \"undone\":"},{"lineNumber":80,"author":{"gitId":"NBH99"},"content":"            stat \u003d undone;"},{"lineNumber":81,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":82,"author":{"gitId":"NBH99"},"content":"        case \"delete\":"},{"lineNumber":83,"author":{"gitId":"NBH99"},"content":"            stat \u003d delete;"},{"lineNumber":84,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":85,"author":{"gitId":"NBH99"},"content":"        case \"error\":"},{"lineNumber":86,"author":{"gitId":"NBH99"},"content":"            stat \u003d error;"},{"lineNumber":87,"author":{"gitId":"NBH99"},"content":"            break;"},{"lineNumber":88,"author":{"gitId":"NBH99"},"content":"        default:"},{"lineNumber":89,"author":{"gitId":"NBH99"},"content":"            error++;"},{"lineNumber":90,"author":{"gitId":"NBH99"},"content":"            stat \u003d 0;"},{"lineNumber":91,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"NBH99"},"content":"        return stat;"},{"lineNumber":93,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":95,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":95}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"public class Storage {"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"    private final String filepath \u003d \"./data/Duke.txt\";"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    private final File file;"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"     * Constructor to create a storage."},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"    public Storage() {"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"        this.file \u003d new File(filepath);"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"     * Store the list of task into the file stated by the filepath."},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"     * @param tasks list of tasks."},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"     * @throws DukeException if filepath is incorrect."},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"    public void store(ArrayList\u003cTask\u003e tasks) throws DukeException {"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"            FileWriter fw \u003d new FileWriter(filepath);"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"            String string;"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"            String task;"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"            String time;"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"            for (Task value : tasks) {"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"                string \u003d value.toString();"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"                if (string.contains(\"(\")) {"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"                    String[] str \u003d string.split(\"\\\\(\", 2);"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"                    task \u003d str[0];"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"                    str \u003d str[1].split(\"\\\\)\", 2);"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"                    time \u003d str[0];"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"                    fw.write(task + \"/\" + time + \"\\n\");"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"                } else {"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"                    fw.write(string + \"\\n\");"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"                }"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"            fw.close();"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"        } catch (IOException e) {"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! There is an error in storing the file.\");"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"     * Load the list of tasks from the file stated by the filepath."},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"     * @param stat statistic."},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"     * @return list of tasks."},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"     * @throws DukeException if file not found or corrupted."},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":"    public ArrayList\u003cTask\u003e load(Statistics stat) throws DukeException {"},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":61,"author":{"gitId":"NBH99"},"content":"            if (!this.file.exists()) {"},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":"                file.getParentFile().mkdir();"},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":"                file.createNewFile();"},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"NBH99"},"content":"        } catch (IOException e) {"},{"lineNumber":66,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! There is an error in creating the file.\");"},{"lineNumber":67,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":69,"author":{"gitId":"NBH99"},"content":"        Scanner scan;"},{"lineNumber":70,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":71,"author":{"gitId":"NBH99"},"content":"        try {"},{"lineNumber":72,"author":{"gitId":"NBH99"},"content":"            scan \u003d new Scanner(file);"},{"lineNumber":73,"author":{"gitId":"NBH99"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":74,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! There is no Duke.txt file.\");"},{"lineNumber":75,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":77,"author":{"gitId":"NBH99"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":78,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":79,"author":{"gitId":"NBH99"},"content":"        String string;"},{"lineNumber":80,"author":{"gitId":"NBH99"},"content":"        String info;"},{"lineNumber":81,"author":{"gitId":"NBH99"},"content":"        String temp;"},{"lineNumber":82,"author":{"gitId":"NBH99"},"content":"        String time;"},{"lineNumber":83,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":84,"author":{"gitId":"NBH99"},"content":"        char action;"},{"lineNumber":85,"author":{"gitId":"NBH99"},"content":"        char done;"},{"lineNumber":86,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":87,"author":{"gitId":"NBH99"},"content":"        Task task;"},{"lineNumber":88,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":89,"author":{"gitId":"NBH99"},"content":"        while (scan.hasNext()) {"},{"lineNumber":90,"author":{"gitId":"NBH99"},"content":"            string \u003d scan.nextLine();"},{"lineNumber":91,"author":{"gitId":"NBH99"},"content":"            action \u003d string.charAt(1);"},{"lineNumber":92,"author":{"gitId":"NBH99"},"content":"            done \u003d string.charAt(4);"},{"lineNumber":93,"author":{"gitId":"NBH99"},"content":"            String[] str \u003d string.split(\"] \", 2);"},{"lineNumber":94,"author":{"gitId":"NBH99"},"content":"            temp \u003d str[1];"},{"lineNumber":95,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":96,"author":{"gitId":"NBH99"},"content":"            if (temp.contains(\" /\")) {"},{"lineNumber":97,"author":{"gitId":"NBH99"},"content":"                str \u003d temp.split(\" /\", 2);"},{"lineNumber":98,"author":{"gitId":"NBH99"},"content":"                info \u003d str[0];"},{"lineNumber":99,"author":{"gitId":"NBH99"},"content":"                str \u003d str[1].split(\" \", 2);"},{"lineNumber":100,"author":{"gitId":"NBH99"},"content":"                time \u003d str[1];"},{"lineNumber":101,"author":{"gitId":"NBH99"},"content":"            } else {"},{"lineNumber":102,"author":{"gitId":"NBH99"},"content":"                info \u003d temp;"},{"lineNumber":103,"author":{"gitId":"NBH99"},"content":"                time \u003d \"\";"},{"lineNumber":104,"author":{"gitId":"NBH99"},"content":"            }"},{"lineNumber":105,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":106,"author":{"gitId":"NBH99"},"content":"            switch (action) {"},{"lineNumber":107,"author":{"gitId":"NBH99"},"content":"            case \u0027T\u0027:"},{"lineNumber":108,"author":{"gitId":"NBH99"},"content":"                task \u003d new Todo(info);"},{"lineNumber":109,"author":{"gitId":"NBH99"},"content":"                stat.changeStat(1, \"todo\");"},{"lineNumber":110,"author":{"gitId":"NBH99"},"content":"                break;"},{"lineNumber":111,"author":{"gitId":"NBH99"},"content":"            case \u0027D\u0027:"},{"lineNumber":112,"author":{"gitId":"NBH99"},"content":"                task \u003d new Deadline(info, time);"},{"lineNumber":113,"author":{"gitId":"NBH99"},"content":"                stat.changeStat(1, \"deadline\");"},{"lineNumber":114,"author":{"gitId":"NBH99"},"content":"                break;"},{"lineNumber":115,"author":{"gitId":"NBH99"},"content":"            case \u0027E\u0027:"},{"lineNumber":116,"author":{"gitId":"NBH99"},"content":"                task \u003d new Event(info, time);"},{"lineNumber":117,"author":{"gitId":"NBH99"},"content":"                stat.changeStat(1, \"event\");"},{"lineNumber":118,"author":{"gitId":"NBH99"},"content":"                break;"},{"lineNumber":119,"author":{"gitId":"NBH99"},"content":"            default:"},{"lineNumber":120,"author":{"gitId":"NBH99"},"content":"                throw new DukeException(\"OOPS!!! There is an error in loading the file.\");"},{"lineNumber":121,"author":{"gitId":"NBH99"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":123,"author":{"gitId":"NBH99"},"content":"            if (done \u003d\u003d \u0027X\u0027) {"},{"lineNumber":124,"author":{"gitId":"NBH99"},"content":"                task.markAsDone();"},{"lineNumber":125,"author":{"gitId":"NBH99"},"content":"                stat.changeStat(1, \"done\");"},{"lineNumber":126,"author":{"gitId":"NBH99"},"content":"            }"},{"lineNumber":127,"author":{"gitId":"NBH99"},"content":"            list.add(task);"},{"lineNumber":128,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":130,"author":{"gitId":"NBH99"},"content":"        return list;"},{"lineNumber":131,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":133,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":133}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    protected String description;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"    protected boolean isDone;"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"     * Constructor to create a task."},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"     * @param description task"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    public Task(String description) {"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        this.description \u003d description;"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        this.isDone \u003d false;"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"    public String getStatusIcon() {"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"        return (isDone ? \"X\" : \" \");"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"     * Put a X for the task that is done"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"    public void markAsDone() {"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"        this.isDone \u003d true;"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":31}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"public class TaskList {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    protected ArrayList\u003cTask\u003e list;"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"    protected int size;"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"     * Constructor to create a new TaskList"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    public TaskList() {"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        this.list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        this.size \u003d 0;"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"     * Constructor to create the previous TaskList"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"        this.list \u003d list;"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"        this.size \u003d list.size();"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"     * Mark the numbered task as done."},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"     * @param num task number."},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"    public void doneTask(int num) {"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"        list.get(num).markAsDone();"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"     * Delete the numbered task from the list of tasks."},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"     * @param num task number."},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"    public void deleteTask(int num) {"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"        size \u003d size - 1;"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"        list.remove(num);"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"     * Add the required task into the list of tasks."},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"     * @param task description."},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"    public void addTodo(String task) {"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"        size \u003d size + 1;"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"        list.add(new Todo(task));"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"     * Add the required task into the list of tasks."},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"     * @param task description."},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"     * @param time required for deadline and event."},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":"    public void addDeadline(String task, String time) {"},{"lineNumber":61,"author":{"gitId":"NBH99"},"content":"        size \u003d size + 1;"},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":"        list.add(new Deadline(task, time));"},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":65,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"NBH99"},"content":"     * Add the required task into the list of tasks."},{"lineNumber":67,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"NBH99"},"content":"     * @param task description."},{"lineNumber":69,"author":{"gitId":"NBH99"},"content":"     * @param time required for deadline and event."},{"lineNumber":70,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"NBH99"},"content":"    public void addEvent(String task, String time) {"},{"lineNumber":72,"author":{"gitId":"NBH99"},"content":"        size \u003d size + 1;"},{"lineNumber":73,"author":{"gitId":"NBH99"},"content":"        list.add(new Event(task, time));"},{"lineNumber":74,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":76,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"NBH99"},"content":"     * Show all the tasks in the list."},{"lineNumber":78,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"NBH99"},"content":"     * @return listed."},{"lineNumber":80,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"NBH99"},"content":"    public String listTask() {"},{"lineNumber":82,"author":{"gitId":"NBH99"},"content":"        String listed \u003d \"\";"},{"lineNumber":83,"author":{"gitId":"NBH99"},"content":"        for (int i \u003d 0; i \u003c size; i++) {"},{"lineNumber":84,"author":{"gitId":"NBH99"},"content":"            listed \u003d listed + (i + 1) + \".\" + list.get(i) + \"\\n\";"},{"lineNumber":85,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"NBH99"},"content":"        return listed;"},{"lineNumber":87,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":89,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"NBH99"},"content":"     * Find tasks with name containing the given keyword."},{"lineNumber":91,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":92,"author":{"gitId":"NBH99"},"content":"     * @param task keyword."},{"lineNumber":93,"author":{"gitId":"NBH99"},"content":"     * @return task found."},{"lineNumber":94,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"NBH99"},"content":"    public String findTask(String task) {"},{"lineNumber":96,"author":{"gitId":"NBH99"},"content":"        String found \u003d \"\";"},{"lineNumber":97,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":98,"author":{"gitId":"NBH99"},"content":"        for (int i \u003d 0; i \u003c size; i++) {"},{"lineNumber":99,"author":{"gitId":"NBH99"},"content":"            String string \u003d list.get(i).toString();"},{"lineNumber":100,"author":{"gitId":"NBH99"},"content":"            if (string.contains(task)) {"},{"lineNumber":101,"author":{"gitId":"NBH99"},"content":"                found \u003d found + (i + 1) + \".\" + string + \"\\n\";"},{"lineNumber":102,"author":{"gitId":"NBH99"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":105,"author":{"gitId":"NBH99"},"content":"        return found;"},{"lineNumber":106,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":108,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"NBH99"},"content":"     * Search for tasks which occur at the given date."},{"lineNumber":110,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":111,"author":{"gitId":"NBH99"},"content":"     * @param time date"},{"lineNumber":112,"author":{"gitId":"NBH99"},"content":"     * @return task found"},{"lineNumber":113,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"NBH99"},"content":"    public String searchDateTask(String time) {"},{"lineNumber":115,"author":{"gitId":"NBH99"},"content":"        String found \u003d \"\";"},{"lineNumber":116,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":117,"author":{"gitId":"NBH99"},"content":"        for (int i \u003d 0; i \u003c size; i++) {"},{"lineNumber":118,"author":{"gitId":"NBH99"},"content":"            String string \u003d list.get(i).toString();"},{"lineNumber":119,"author":{"gitId":"NBH99"},"content":"            if (string.contains(time)) {"},{"lineNumber":120,"author":{"gitId":"NBH99"},"content":"                found \u003d found + (i + 1) + \".\" + string + \"\\n\";"},{"lineNumber":121,"author":{"gitId":"NBH99"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":124,"author":{"gitId":"NBH99"},"content":"        return found;"},{"lineNumber":125,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":127,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":127}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public Todo (String description) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(description);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":12}},{"path":"src/main/java/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class TodoCommand extends Command {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public TodoCommand(String info) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(info);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public void execute(TaskList tasks, Ui ui,"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"                        Storage storage, Statistics stat) throws DukeException {"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"        String task;"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"        int size;"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        Task t;"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"        task \u003d Parser.getTask(info);"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"        if (task.equals(\"\")) {"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"OOPS!!! The description cannot be empty.\");"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"        tasks.addTodo(task);"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"        stat.changeStat(1, \"todo\");"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"        size \u003d tasks.size;"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"        t \u003d (tasks.list).get(size - 1);"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"        ui.showAddMessage(t, size);"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"        storage.store(tasks.list);"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"    public boolean isExit() {"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"        return false;"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":33}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class Ui {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    protected String response;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    public String getMessage() {"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"        return response;"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"     * Response when the user activated Duke."},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"    public void showWelcome() {"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        response \u003d \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\";"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"     * Response when there is a error."},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"     * @param error error"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"    public void showError(DukeException error) {"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"        response \u003d error.getMessage();"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"     * Response when user said bye."},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"    public void showGoodBye() {"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"        response \u003d \"Bye. Hope to see you again soon\";"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"     * Response when user want to list out the tasks."},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"    public void showList(String list) {"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":"        response \u003d \"Here are the tasks in your list:\\n\" + list;"},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"     * Response when user want to add a task."},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"     * @param t task."},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"     * @param size number of task."},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"    public void showAddMessage(Task t, int size) {"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"        response \u003d \"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"                + t + \"\\nNow you have \""},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":"                + size + \" tasks in the list.\";"},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"     * Response when user finish a task."},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"     * @param t task."},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"    public void showDone(Task t) {"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"        response \u003d \"Nice! I\u0027ve marked this task as done:\\n\" + t;"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"NBH99"},"content":"     * Response when user want to delete a task."},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":"     * @param t task."},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":"     * @param size number of task."},{"lineNumber":65,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"NBH99"},"content":"    public void showDelete(Task t, int size) {"},{"lineNumber":67,"author":{"gitId":"NBH99"},"content":"        response \u003d \"Noted. I\u0027ve removed this task:\\n\""},{"lineNumber":68,"author":{"gitId":"NBH99"},"content":"                + t + \"\\nNow you have \""},{"lineNumber":69,"author":{"gitId":"NBH99"},"content":"                + size + \" tasks in the list.\";"},{"lineNumber":70,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":72,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"NBH99"},"content":"     * Response when user want to find tasks."},{"lineNumber":74,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"NBH99"},"content":"    public void showFind(String list) {"},{"lineNumber":76,"author":{"gitId":"NBH99"},"content":"        if (list.equals(\"\")) {"},{"lineNumber":77,"author":{"gitId":"NBH99"},"content":"            response \u003d \"There are no matching task in your list\";"},{"lineNumber":78,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":79,"author":{"gitId":"NBH99"},"content":"            response \u003d \"Here are the matching tasks in your list:\\n\" + list;"},{"lineNumber":80,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":83,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"NBH99"},"content":"     * Response when user want to search for tasks on certain date."},{"lineNumber":85,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"NBH99"},"content":"     * @param time date."},{"lineNumber":87,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"NBH99"},"content":"    public void showDate(String time, String list) {"},{"lineNumber":89,"author":{"gitId":"NBH99"},"content":"        if (list.equals(\"\")) {"},{"lineNumber":90,"author":{"gitId":"NBH99"},"content":"            response \u003d \"There are no matching task in your list\";"},{"lineNumber":91,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":92,"author":{"gitId":"NBH99"},"content":"            response \u003d \"Here are the tasks occurring on \" + time + \" in your list:\\n\" + list;"},{"lineNumber":93,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":96,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"NBH99"},"content":"     * Response when user want to know about the statistic."},{"lineNumber":98,"author":{"gitId":"NBH99"},"content":"     *"},{"lineNumber":99,"author":{"gitId":"NBH99"},"content":"     * @param stat statistic"},{"lineNumber":100,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"NBH99"},"content":"    public void showStatistic(String stat) {"},{"lineNumber":102,"author":{"gitId":"NBH99"},"content":"        response \u003d stat;"},{"lineNumber":103,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":105,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":105}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-padding: 10; -fx-background-color: pink; -fx-border-color: yellow; -fx-border-style: dotted; -fx-border-width: 3; -fx-font-size: 12;\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"NBH99":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-background-color: pink; -fx-border-color: green; -fx-border-width: 3; -fx-font-size: 15;\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: blue; -fx-text-fill: white; -fx-border-color: red; -fx-border-width: 3; -fx-font-size: 15;\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: purple; -fx-border-color: blue; -fx-border-width: 3;\" /\u003e"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"NBH99":19}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"public class DukeTest {"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public void parserTest() {"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"borrow book\","},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"                Parser.getTask(\"borrow book\"));"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"    public void parser_task_success() {"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"project meeting\","},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"                Parser.getTask(\"project meeting /at 2021-10-14\"));"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"    public void parser_timeAt_success() {"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"2021-10-14\","},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"                Parser.getTimeAt(\"project meeting /at 2021-10-14\"));"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"    public void parser_timeBy_success() {"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"2021-05-02\","},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"                Parser.getTimeBy(\"read book /by 2021-05-02\"));"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"    public void stringTest() {"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"[T][ ] borrow book\","},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"                new Todo(\"borrow book\").toString());"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"    public void string_event_success() {"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"[E][ ] project meeting (at: Oct 14 2021)\","},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"                new Event(\"project meeting\", \"Oct 14 2021\").toString());"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"    public void string_deadline_success() {"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"[D][ ] read book (by: May 2 2021)\","},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"                new Deadline(\"read book\", \"May 2 2021\").toString());"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":"    public void ui_done_success() {"},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":"        ui.showDone(new Todo(\"borrow book\"));"},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"Nice! I\u0027ve marked this task as done:\\n[T][ ] borrow book\","},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"                ui.getMessage());"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":"    public void ui_list_success() {"},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":"        ui.showList(\"1.[T][ ] borrow book\");"},{"lineNumber":61,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"Here are the tasks in your list:\\n1.[T][ ] borrow book\","},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":"                ui.getMessage());"},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":65,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":66,"author":{"gitId":"NBH99"},"content":"    public void ui_add_success() {"},{"lineNumber":67,"author":{"gitId":"NBH99"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":68,"author":{"gitId":"NBH99"},"content":"        ui.showAddMessage(new Todo(\"borrow book\"), 5);"},{"lineNumber":69,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":70,"author":{"gitId":"NBH99"},"content":"                        + \"[T][ ] borrow book\\nNow you have \""},{"lineNumber":71,"author":{"gitId":"NBH99"},"content":"                        + \"5 tasks in the list.\","},{"lineNumber":72,"author":{"gitId":"NBH99"},"content":"                ui.getMessage());"},{"lineNumber":73,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":75,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":76,"author":{"gitId":"NBH99"},"content":"    public void ui_error_success() {"},{"lineNumber":77,"author":{"gitId":"NBH99"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":78,"author":{"gitId":"NBH99"},"content":"        ui.showError(new DukeException(\"error\"));"},{"lineNumber":79,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"error\", ui.getMessage());"},{"lineNumber":80,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":82,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":83,"author":{"gitId":"NBH99"},"content":"    public void ui_delete_success() {"},{"lineNumber":84,"author":{"gitId":"NBH99"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":85,"author":{"gitId":"NBH99"},"content":"        ui.showDelete(new Todo(\"borrow book\"), 5);"},{"lineNumber":86,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"Noted. I\u0027ve removed this task:\\n\""},{"lineNumber":87,"author":{"gitId":"NBH99"},"content":"                        + \"[T][ ] borrow book\\nNow you have \""},{"lineNumber":88,"author":{"gitId":"NBH99"},"content":"                        + \"5 tasks in the list.\","},{"lineNumber":89,"author":{"gitId":"NBH99"},"content":"                ui.getMessage());"},{"lineNumber":90,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":92,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":93,"author":{"gitId":"NBH99"},"content":"    public void ui_find_success() {"},{"lineNumber":94,"author":{"gitId":"NBH99"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":95,"author":{"gitId":"NBH99"},"content":"        ui.showFind(\"1.[T][ ] borrow book\");"},{"lineNumber":96,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"Here are the matching tasks in your list:\\n1.[T][ ] borrow book\","},{"lineNumber":97,"author":{"gitId":"NBH99"},"content":"                ui.getMessage());"},{"lineNumber":98,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":100,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":101,"author":{"gitId":"NBH99"},"content":"    public void ui_find_error() {"},{"lineNumber":102,"author":{"gitId":"NBH99"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":103,"author":{"gitId":"NBH99"},"content":"        ui.showFind(\"\");"},{"lineNumber":104,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"There are no matching task in your list\","},{"lineNumber":105,"author":{"gitId":"NBH99"},"content":"                ui.getMessage());"},{"lineNumber":106,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":108,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":109,"author":{"gitId":"NBH99"},"content":"    public void ui_date_success() {"},{"lineNumber":110,"author":{"gitId":"NBH99"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":111,"author":{"gitId":"NBH99"},"content":"        ui.showDate(\"Oct 14 2021\", \"1.[E][ ] project meeting (at: Oct 14 2021)\");"},{"lineNumber":112,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"Here are the tasks occurring on \""},{"lineNumber":113,"author":{"gitId":"NBH99"},"content":"                        + \"Oct 14 2021 in your list:\\n\""},{"lineNumber":114,"author":{"gitId":"NBH99"},"content":"                        + \"1.[E][ ] project meeting (at: Oct 14 2021)\","},{"lineNumber":115,"author":{"gitId":"NBH99"},"content":"                ui.getMessage());"},{"lineNumber":116,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":118,"author":{"gitId":"NBH99"},"content":"    @Test"},{"lineNumber":119,"author":{"gitId":"NBH99"},"content":"    public void ui_date_error() {"},{"lineNumber":120,"author":{"gitId":"NBH99"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":121,"author":{"gitId":"NBH99"},"content":"        ui.showDate(\"Oct 14 2021\", \"\");"},{"lineNumber":122,"author":{"gitId":"NBH99"},"content":"        assertEquals(\"There are no matching task in your list\","},{"lineNumber":123,"author":{"gitId":"NBH99"},"content":"                ui.getMessage());"},{"lineNumber":124,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":126,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":126}},{"path":"text-ui-test/Duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"[D][ ] return book /by: Mar 23 2021"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"[E][X] project meeting /at: Oct 14 2021"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"[D][X] read book /by: May 2 2021"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"[T][ ] project work"}],"authorContributionMap":{"NBH99":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"list"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"deadline return book /by 2021-03-23"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"event project meeting /at 2021-10-14"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"done 3"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"done 7"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"deadline read book /by 2021-05-02"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"todo project work"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"list"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"done 4"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"delete 1"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"delete 8"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"list"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"bye"}],"authorContributionMap":{"NBH99":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"NBH99":1,"-":20}}]
