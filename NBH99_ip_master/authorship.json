[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    protected String by;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"        this.by \u003d by;"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":14}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"import java.util.Scanner;"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\n\""},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"                + \"What can I do for you?\");"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"        Scanner scan \u003d new Scanner(System.in);"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        String string \u003d scan.nextLine();"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"        int size \u003d 0;"},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"        while (true) {"},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"            size \u003d tasks.size();"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"            try {"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":"                if (string.equals(\"bye\")) {"},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"                    System.out.println(\"Bye. Hope to see you again soon\");"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"                    break;"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"                } else if (string.equals(\"list\")) {"},{"lineNumber":27,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":28,"author":{"gitId":"NBH99"},"content":"                    if (size \u003d\u003d 0) {"},{"lineNumber":29,"author":{"gitId":"NBH99"},"content":"                        throw new DukeException(\"☹ OOPS!!! There is currently no tasks for you.\");"},{"lineNumber":30,"author":{"gitId":"NBH99"},"content":"                    } else {"},{"lineNumber":31,"author":{"gitId":"NBH99"},"content":"                        System.out.println(\"Here are the tasks in your list:\");"},{"lineNumber":32,"author":{"gitId":"NBH99"},"content":"                        for (int i \u003d 0; i \u003c size; i++) {"},{"lineNumber":33,"author":{"gitId":"NBH99"},"content":"                            System.out.println((i + 1) + \".\" + tasks.get(i));"},{"lineNumber":34,"author":{"gitId":"NBH99"},"content":"                        }"},{"lineNumber":35,"author":{"gitId":"NBH99"},"content":"                    }"},{"lineNumber":36,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":37,"author":{"gitId":"NBH99"},"content":"                } else if (string.equals(\"todo\") || string.equals(\"deadline\")|| string.equals(\"event\")"},{"lineNumber":38,"author":{"gitId":"NBH99"},"content":"                        || string.equals(\"done\") || string.equals(\"delete\")) {"},{"lineNumber":39,"author":{"gitId":"NBH99"},"content":"                    throw new DukeException(\"☹ OOPS!!! The description of a \" + string + \" cannot be empty.\");"},{"lineNumber":40,"author":{"gitId":"NBH99"},"content":"                } else {"},{"lineNumber":41,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":42,"author":{"gitId":"NBH99"},"content":"                    String action \u003d \"\", info \u003d \"\";"},{"lineNumber":43,"author":{"gitId":"NBH99"},"content":"                    if (string.contains(\" \")) {"},{"lineNumber":44,"author":{"gitId":"NBH99"},"content":"                        String[] str \u003d string.split(\" \", 2);"},{"lineNumber":45,"author":{"gitId":"NBH99"},"content":"                        action \u003d str[0];"},{"lineNumber":46,"author":{"gitId":"NBH99"},"content":"                        info \u003d str[1];"},{"lineNumber":47,"author":{"gitId":"NBH99"},"content":"                    }"},{"lineNumber":48,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":49,"author":{"gitId":"NBH99"},"content":"                    if (action.equals(\"done\") || action.equals(\"delete\")) {"},{"lineNumber":50,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":51,"author":{"gitId":"NBH99"},"content":"                        int num \u003d 0;"},{"lineNumber":52,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":53,"author":{"gitId":"NBH99"},"content":"                        try {"},{"lineNumber":54,"author":{"gitId":"NBH99"},"content":"                            num \u003d Integer.parseInt(info);"},{"lineNumber":55,"author":{"gitId":"NBH99"},"content":"                        } catch (NumberFormatException e) {"},{"lineNumber":56,"author":{"gitId":"NBH99"},"content":"                            throw new DukeException(\"☹ OOPS!!! There is no such task number.\");"},{"lineNumber":57,"author":{"gitId":"NBH99"},"content":"                        }"},{"lineNumber":58,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":59,"author":{"gitId":"NBH99"},"content":"                        if (num \u003e size || num \u003d\u003d 0) {"},{"lineNumber":60,"author":{"gitId":"NBH99"},"content":"                            throw new DukeException(\"☹ OOPS!!! There is no such task number.\");"},{"lineNumber":61,"author":{"gitId":"NBH99"},"content":"                        } else {"},{"lineNumber":62,"author":{"gitId":"NBH99"},"content":"                            goneTask(action, num - 1, tasks);"},{"lineNumber":63,"author":{"gitId":"NBH99"},"content":"                        }"},{"lineNumber":64,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":65,"author":{"gitId":"NBH99"},"content":"                    } else if (action.equals(\"todo\") || action.equals(\"deadline\") || action.equals(\"event\")) {"},{"lineNumber":66,"author":{"gitId":"NBH99"},"content":"                        addTask(action, info, tasks);"},{"lineNumber":67,"author":{"gitId":"NBH99"},"content":"                    } else {"},{"lineNumber":68,"author":{"gitId":"NBH99"},"content":"                        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":69,"author":{"gitId":"NBH99"},"content":"                    }"},{"lineNumber":70,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":71,"author":{"gitId":"NBH99"},"content":"                }"},{"lineNumber":72,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":73,"author":{"gitId":"NBH99"},"content":"            } catch (DukeException e) {"},{"lineNumber":74,"author":{"gitId":"NBH99"},"content":"                System.out.println(e);"},{"lineNumber":75,"author":{"gitId":"NBH99"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"NBH99"},"content":"            string \u003d scan.nextLine();"},{"lineNumber":77,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":78,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":82,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"NBH99"},"content":"     * Method to delete or done the task according to the task number."},{"lineNumber":84,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"NBH99"},"content":"    public static void goneTask(String action, int num, ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":86,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":87,"author":{"gitId":"NBH99"},"content":"        int size \u003d tasks.size();"},{"lineNumber":88,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":89,"author":{"gitId":"NBH99"},"content":"        if (action.equals(\"done\")) {"},{"lineNumber":90,"author":{"gitId":"NBH99"},"content":"            tasks.get(num).markAsDone();"},{"lineNumber":91,"author":{"gitId":"NBH99"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\\n  \""},{"lineNumber":92,"author":{"gitId":"NBH99"},"content":"                    + tasks.get(num));"},{"lineNumber":93,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":94,"author":{"gitId":"NBH99"},"content":"            Task t \u003d tasks.get(num);"},{"lineNumber":95,"author":{"gitId":"NBH99"},"content":"            tasks.remove(num);"},{"lineNumber":96,"author":{"gitId":"NBH99"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\\n  \""},{"lineNumber":97,"author":{"gitId":"NBH99"},"content":"                    + t + \"\\nNow you have \""},{"lineNumber":98,"author":{"gitId":"NBH99"},"content":"                    + (size - 1) + \" tasks in the list.\");"},{"lineNumber":99,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":101,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":103,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"NBH99"},"content":"     * Method to add the requested task to the list of tasks."},{"lineNumber":105,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"NBH99"},"content":"    public static void addTask(String action, String info, ArrayList\u003cTask\u003e tasks) throws DukeException {"},{"lineNumber":107,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":108,"author":{"gitId":"NBH99"},"content":"        String task \u003d \"\", time \u003d \"\";"},{"lineNumber":109,"author":{"gitId":"NBH99"},"content":"        int size \u003d tasks.size();"},{"lineNumber":110,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":111,"author":{"gitId":"NBH99"},"content":"        if (info.contains(\" /\")) {"},{"lineNumber":112,"author":{"gitId":"NBH99"},"content":"            String[] str \u003d info.split(\" /\", 2);"},{"lineNumber":113,"author":{"gitId":"NBH99"},"content":"            task \u003d str[0];"},{"lineNumber":114,"author":{"gitId":"NBH99"},"content":"            if (str[1].contains(\" \")) {"},{"lineNumber":115,"author":{"gitId":"NBH99"},"content":"                str \u003d str[1].split(\" \", 2);"},{"lineNumber":116,"author":{"gitId":"NBH99"},"content":"                time \u003d str[1];"},{"lineNumber":117,"author":{"gitId":"NBH99"},"content":"            }"},{"lineNumber":118,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":119,"author":{"gitId":"NBH99"},"content":"            task \u003d info;"},{"lineNumber":120,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":122,"author":{"gitId":"NBH99"},"content":"        if (task.equals(\"\")) {"},{"lineNumber":123,"author":{"gitId":"NBH99"},"content":"            throw new DukeException(\"☹ OOPS!!! There is no task given\");"},{"lineNumber":124,"author":{"gitId":"NBH99"},"content":"        } else {"},{"lineNumber":125,"author":{"gitId":"NBH99"},"content":"            if (action.equals(\"todo\")) {"},{"lineNumber":126,"author":{"gitId":"NBH99"},"content":"                tasks.add(new Todo(task));"},{"lineNumber":127,"author":{"gitId":"NBH99"},"content":"            } else if (action.equals(\"deadline\")) {"},{"lineNumber":128,"author":{"gitId":"NBH99"},"content":"                tasks.add(new Deadline(task, time));"},{"lineNumber":129,"author":{"gitId":"NBH99"},"content":"            } else if (action.equals(\"event\")) {"},{"lineNumber":130,"author":{"gitId":"NBH99"},"content":"                tasks.add(new Event(task, time));"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            }"},{"lineNumber":132,"author":{"gitId":"NBH99"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":134,"author":{"gitId":"NBH99"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":135,"author":{"gitId":"NBH99"},"content":"                    + \"  \" + tasks.get(size).toString()"},{"lineNumber":136,"author":{"gitId":"NBH99"},"content":"                    + \"\\nNow you have \" + (size + 1) + \" tasks in the list.\");"},{"lineNumber":137,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":138,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"NBH99":135,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class DukeException extends Exception {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public DukeException(String message) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(message);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":7}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class Event extends Task {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    protected String at;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    public Event(String description, String at) {"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"        super(description);"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"        this.at \u003d at;"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":14}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    protected String description;"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"    protected boolean isDone;"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"    public Task(String description) {"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"        this.description \u003d description;"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"        this.isDone \u003d false;"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"    public String getStatusIcon() {"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"        return (isDone ? \"X\" : \" \");"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":15,"author":{"gitId":"NBH99"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"NBH99"},"content":"     * Method to change and show that the task is done."},{"lineNumber":17,"author":{"gitId":"NBH99"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"    public void markAsDone() {"},{"lineNumber":19,"author":{"gitId":"NBH99"},"content":"        this.isDone \u003d true;"},{"lineNumber":20,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":22,"author":{"gitId":"NBH99"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"NBH99"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":24,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":26,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":26}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"    public Todo (String description) {"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"        super(description);"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":""},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"}"}],"authorContributionMap":{"NBH99":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"NBH99"},"content":"list"},{"lineNumber":2,"author":{"gitId":"NBH99"},"content":"todo borrow book"},{"lineNumber":3,"author":{"gitId":"NBH99"},"content":"todo"},{"lineNumber":4,"author":{"gitId":"NBH99"},"content":"deadline return book /by Sunday"},{"lineNumber":5,"author":{"gitId":"NBH99"},"content":"blah blah"},{"lineNumber":6,"author":{"gitId":"NBH99"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":7,"author":{"gitId":"NBH99"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"NBH99"},"content":"deadline read book /by tomorrow"},{"lineNumber":9,"author":{"gitId":"NBH99"},"content":"list"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"done 5"},{"lineNumber":11,"author":{"gitId":"NBH99"},"content":"delete 2"},{"lineNumber":12,"author":{"gitId":"NBH99"},"content":"done 2"},{"lineNumber":13,"author":{"gitId":"NBH99"},"content":"list"},{"lineNumber":14,"author":{"gitId":"NBH99"},"content":"bye"}],"authorContributionMap":{"NBH99":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"NBH99"},"content":"javac  -cp C:\\Users\\lamet\\OneDrive\\Desktop\\School\\202021S2\\CS2103T\\Project\\ip\\src\\main\\java -Xlint:none -d C:\\Users\\lamet\\OneDrive\\Desktop\\School\\202021S2\\CS2103T\\Project\\ip\\bin C:\\Users\\lamet\\OneDrive\\Desktop\\School\\202021S2\\CS2103T\\Project\\ip\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"NBH99"},"content":"java -classpath C:\\Users\\lamet\\OneDrive\\Desktop\\School\\202021S2\\CS2103T\\Project\\ip\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"NBH99":2,"-":19}}]
