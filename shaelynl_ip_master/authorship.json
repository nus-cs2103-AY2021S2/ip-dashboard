[{"path":"src/main/java/DukeLevel.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"import java.io.*;"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":"import java.text.ParseException;"},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"import java.util.Date;"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"import java.util.Locale;"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":" * The DukeLevel class is an interactive chat bot that can:"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":" * - add items to a list"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":" * - display a list of items which were previously added"},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":" * - mark items in the list as done"},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":" * - remove items from the list"},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":" * - throw exceptions if the input is incorrect"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":" *"},{"lineNumber":19,"author":{"gitId":"shaelynl"},"content":" * @author Shaelyn"},{"lineNumber":20,"author":{"gitId":"shaelynl"},"content":" * @version CS2103T 20/21 Semester 2, Individual Project"},{"lineNumber":21,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":22,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":23,"author":{"gitId":"shaelynl"},"content":"public class DukeLevel {"},{"lineNumber":24,"author":{"gitId":"shaelynl"},"content":"    public static void main(String[] args) {"},{"lineNumber":25,"author":{"gitId":"shaelynl"},"content":"        ArrayList\u003cTask\u003e tasksArray \u003d new ArrayList\u003c\u003e();"},{"lineNumber":26,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":27,"author":{"gitId":"shaelynl"},"content":"        File dukeFile \u003d new File(\"src\\\\main\\\\data\\\\duke.txt\");"},{"lineNumber":28,"author":{"gitId":"shaelynl"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"shaelynl"},"content":"            if (!dukeFile.exists()) {"},{"lineNumber":30,"author":{"gitId":"shaelynl"},"content":"                dukeFile.createNewFile();"},{"lineNumber":31,"author":{"gitId":"shaelynl"},"content":"            }"},{"lineNumber":32,"author":{"gitId":"shaelynl"},"content":"            loadData(tasksArray, dukeFile);"},{"lineNumber":33,"author":{"gitId":"shaelynl"},"content":"        } catch (Exception e) {"},{"lineNumber":34,"author":{"gitId":"shaelynl"},"content":"            e.getStackTrace();"},{"lineNumber":35,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":37,"author":{"gitId":"shaelynl"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":38,"author":{"gitId":"shaelynl"},"content":"        String line \u003d \"    _________________________________________________\";"},{"lineNumber":39,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":40,"author":{"gitId":"shaelynl"},"content":"        System.out.println(line);"},{"lineNumber":41,"author":{"gitId":"shaelynl"},"content":"        System.out.println(\"     Hello! I\u0027m Duke :)\");"},{"lineNumber":42,"author":{"gitId":"shaelynl"},"content":"        System.out.println(\"     What can I do for you?\");"},{"lineNumber":43,"author":{"gitId":"shaelynl"},"content":"        System.out.println(line);"},{"lineNumber":44,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":45,"author":{"gitId":"shaelynl"},"content":"        while (sc.hasNext()) {"},{"lineNumber":46,"author":{"gitId":"shaelynl"},"content":"            try {"},{"lineNumber":47,"author":{"gitId":"shaelynl"},"content":"                String input \u003d sc.nextLine().trim();"},{"lineNumber":48,"author":{"gitId":"shaelynl"},"content":"                String[] strArray \u003d input.split(\" \", 2);"},{"lineNumber":49,"author":{"gitId":"shaelynl"},"content":"                String cmd \u003d strArray[0];"},{"lineNumber":50,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":51,"author":{"gitId":"shaelynl"},"content":"                if (input.equalsIgnoreCase(\"todo\") || input.equalsIgnoreCase(\"deadline\") || input.equalsIgnoreCase(\"event\")) {"},{"lineNumber":52,"author":{"gitId":"shaelynl"},"content":"                    throw new DukeException(\"Uh oh! There is nothing to do.\");"},{"lineNumber":53,"author":{"gitId":"shaelynl"},"content":"                }"},{"lineNumber":54,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":55,"author":{"gitId":"shaelynl"},"content":"                if (input.equalsIgnoreCase(\"bye\")) {"},{"lineNumber":56,"author":{"gitId":"shaelynl"},"content":"                    System.out.println(line);"},{"lineNumber":57,"author":{"gitId":"shaelynl"},"content":"                    System.out.println(\"     Bye. Hope to see you again soon! :)\");"},{"lineNumber":58,"author":{"gitId":"shaelynl"},"content":"                    System.out.println(line);"},{"lineNumber":59,"author":{"gitId":"shaelynl"},"content":"                    break;"},{"lineNumber":60,"author":{"gitId":"shaelynl"},"content":"                } else if (input.equalsIgnoreCase(\"list\")) {"},{"lineNumber":61,"author":{"gitId":"shaelynl"},"content":"                    System.out.println(line);"},{"lineNumber":62,"author":{"gitId":"shaelynl"},"content":"                    if (tasksArray.isEmpty()) {"},{"lineNumber":63,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(\"     Your list is empty, there is nothing to do. Yay!\");"},{"lineNumber":64,"author":{"gitId":"shaelynl"},"content":"                    } else {"},{"lineNumber":65,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(\"     Here are the tasks in your list:\");"},{"lineNumber":66,"author":{"gitId":"shaelynl"},"content":"                        for (int i \u003d 0; i \u003c tasksArray.size(); i++) {"},{"lineNumber":67,"author":{"gitId":"shaelynl"},"content":"                            System.out.println(\"       \" + (i+1) + \". \" + tasksArray.get(i).toString());"},{"lineNumber":68,"author":{"gitId":"shaelynl"},"content":"                        }"},{"lineNumber":69,"author":{"gitId":"shaelynl"},"content":"                    }"},{"lineNumber":70,"author":{"gitId":"shaelynl"},"content":"                    System.out.println(line);"},{"lineNumber":71,"author":{"gitId":"shaelynl"},"content":"                } else if (cmd.equalsIgnoreCase(\"done\")) {"},{"lineNumber":72,"author":{"gitId":"shaelynl"},"content":"                    int cmdNum \u003d Integer.parseInt(strArray[1]);"},{"lineNumber":73,"author":{"gitId":"shaelynl"},"content":"                    tasksArray.get(cmdNum - 1).markAsDone();"},{"lineNumber":74,"author":{"gitId":"shaelynl"},"content":"                    System.out.println(line);"},{"lineNumber":75,"author":{"gitId":"shaelynl"},"content":"                    System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":76,"author":{"gitId":"shaelynl"},"content":"                    System.out.println(\"       \" + tasksArray.get(cmdNum - 1).toString());"},{"lineNumber":77,"author":{"gitId":"shaelynl"},"content":"                    System.out.println(line);"},{"lineNumber":78,"author":{"gitId":"shaelynl"},"content":"                } else if (cmd.equalsIgnoreCase(\"delete\")) {"},{"lineNumber":79,"author":{"gitId":"shaelynl"},"content":"                    System.out.println(line);"},{"lineNumber":80,"author":{"gitId":"shaelynl"},"content":"                    if (tasksArray.isEmpty()) {"},{"lineNumber":81,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(\"     Oops! You have no tasks to delete.\");"},{"lineNumber":82,"author":{"gitId":"shaelynl"},"content":"                    } else {"},{"lineNumber":83,"author":{"gitId":"shaelynl"},"content":"                        int cmdNum \u003d Integer.parseInt(strArray[1]);"},{"lineNumber":84,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(\"     Noted. I\u0027ve removed this task: \");"},{"lineNumber":85,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(\"       \" + tasksArray.get(cmdNum - 1).toString());"},{"lineNumber":86,"author":{"gitId":"shaelynl"},"content":"                        tasksArray.remove(cmdNum - 1);"},{"lineNumber":87,"author":{"gitId":"shaelynl"},"content":"                    }"},{"lineNumber":88,"author":{"gitId":"shaelynl"},"content":"                    if (tasksArray.size() \u003d\u003d 1) {"},{"lineNumber":89,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(\"      Now you have \" + tasksArray.size() + \" task in the list.\");"},{"lineNumber":90,"author":{"gitId":"shaelynl"},"content":"                    } else {"},{"lineNumber":91,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(\"     Now you have \" + tasksArray.size() + \" tasks in the list.\");"},{"lineNumber":92,"author":{"gitId":"shaelynl"},"content":"                    }"},{"lineNumber":93,"author":{"gitId":"shaelynl"},"content":"                    System.out.println(line);"},{"lineNumber":94,"author":{"gitId":"shaelynl"},"content":"                } else {"},{"lineNumber":95,"author":{"gitId":"shaelynl"},"content":"                    if (cmd.equalsIgnoreCase(\"todo\")) {"},{"lineNumber":96,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(line);"},{"lineNumber":97,"author":{"gitId":"shaelynl"},"content":"                        String cmdTask \u003d strArray[1];"},{"lineNumber":98,"author":{"gitId":"shaelynl"},"content":"                        ToDo tempTask \u003d new ToDo(cmdTask);"},{"lineNumber":99,"author":{"gitId":"shaelynl"},"content":"                        tasksArray.add(tempTask);"},{"lineNumber":100,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(\"     Got it. I\u0027ve added this task: \");"},{"lineNumber":101,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(\"       \" + tempTask.toString());"},{"lineNumber":102,"author":{"gitId":"shaelynl"},"content":"                    } else if (cmd.equalsIgnoreCase(\"deadline\")) {"},{"lineNumber":103,"author":{"gitId":"shaelynl"},"content":"                        String cmdTask \u003d strArray[1];"},{"lineNumber":104,"author":{"gitId":"shaelynl"},"content":"                        if (!strArray[1].contains(\"/by\")) {"},{"lineNumber":105,"author":{"gitId":"shaelynl"},"content":"                            throw new DukeException(\"Uh oh! Please specify a timing using /by.\");"},{"lineNumber":106,"author":{"gitId":"shaelynl"},"content":"                        }"},{"lineNumber":107,"author":{"gitId":"shaelynl"},"content":"                        String[] tempStrArray \u003d cmdTask.split(\"/by\", 2);"},{"lineNumber":108,"author":{"gitId":"shaelynl"},"content":"                        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd-MM-yyyy\", Locale.ENGLISH);"},{"lineNumber":109,"author":{"gitId":"shaelynl"},"content":"                        try {"},{"lineNumber":110,"author":{"gitId":"shaelynl"},"content":"                            Date date \u003d formatter.parse(tempStrArray[1]);"},{"lineNumber":111,"author":{"gitId":"shaelynl"},"content":"                        } catch (Exception e) {"},{"lineNumber":112,"author":{"gitId":"shaelynl"},"content":"                            throw new DukeException(\"Uh oh! Please enter a timing in the format dd-mm-yyyy\");"},{"lineNumber":113,"author":{"gitId":"shaelynl"},"content":"                        }"},{"lineNumber":114,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(line);"},{"lineNumber":115,"author":{"gitId":"shaelynl"},"content":"                        Deadline tempTask \u003d new Deadline(tempStrArray[0], tempStrArray[1]);"},{"lineNumber":116,"author":{"gitId":"shaelynl"},"content":"                        tasksArray.add(tempTask);"},{"lineNumber":117,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(\"     Got it. I\u0027ve added this task: \");"},{"lineNumber":118,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(\"       \" + tempTask.toString());"},{"lineNumber":119,"author":{"gitId":"shaelynl"},"content":"                    } else if (cmd.equalsIgnoreCase(\"event\")) {"},{"lineNumber":120,"author":{"gitId":"shaelynl"},"content":"                        String cmdTask \u003d strArray[1];"},{"lineNumber":121,"author":{"gitId":"shaelynl"},"content":"                        if (!strArray[1].contains(\"/at\")) {"},{"lineNumber":122,"author":{"gitId":"shaelynl"},"content":"                            throw new DukeException(\"Uh oh! Please specify a timing using /at.\");"},{"lineNumber":123,"author":{"gitId":"shaelynl"},"content":"                        }"},{"lineNumber":124,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(line);"},{"lineNumber":125,"author":{"gitId":"shaelynl"},"content":"                        String[] tempStrArray \u003d cmdTask.split(\"/at\", 2);"},{"lineNumber":126,"author":{"gitId":"shaelynl"},"content":"                        Event tempTask \u003d new Event(tempStrArray[0], tempStrArray[1]);"},{"lineNumber":127,"author":{"gitId":"shaelynl"},"content":"                        tasksArray.add(tempTask);"},{"lineNumber":128,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(\"     Got it. I\u0027ve added this task: \");"},{"lineNumber":129,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(\"       \" + tempTask.toString());"},{"lineNumber":130,"author":{"gitId":"shaelynl"},"content":"                    } else {"},{"lineNumber":131,"author":{"gitId":"shaelynl"},"content":"                        throw new DukeException(\"I\u0027m sorry but I don\u0027t know what this means :(\");"},{"lineNumber":132,"author":{"gitId":"shaelynl"},"content":"                    }"},{"lineNumber":133,"author":{"gitId":"shaelynl"},"content":"                    if (tasksArray.size() \u003d\u003d 1) {"},{"lineNumber":134,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(\"     Now you have \" + tasksArray.size() + \" task in the list.\");"},{"lineNumber":135,"author":{"gitId":"shaelynl"},"content":"                    } else {"},{"lineNumber":136,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(\"     Now you have \" + tasksArray.size() + \" tasks in the list.\");"},{"lineNumber":137,"author":{"gitId":"shaelynl"},"content":"                    }"},{"lineNumber":138,"author":{"gitId":"shaelynl"},"content":"                    System.out.println(line);"},{"lineNumber":139,"author":{"gitId":"shaelynl"},"content":"                }"},{"lineNumber":140,"author":{"gitId":"shaelynl"},"content":"            } catch (DukeException exception) {"},{"lineNumber":141,"author":{"gitId":"shaelynl"},"content":"                System.out.println(line);"},{"lineNumber":142,"author":{"gitId":"shaelynl"},"content":"                System.out.println(\"     \" + exception);"},{"lineNumber":143,"author":{"gitId":"shaelynl"},"content":"                System.out.println(line);"},{"lineNumber":144,"author":{"gitId":"shaelynl"},"content":"            }"},{"lineNumber":145,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":147,"author":{"gitId":"shaelynl"},"content":"        try {"},{"lineNumber":148,"author":{"gitId":"shaelynl"},"content":"            saveData(tasksArray, dukeFile);"},{"lineNumber":149,"author":{"gitId":"shaelynl"},"content":"        } catch (Exception e) {"},{"lineNumber":150,"author":{"gitId":"shaelynl"},"content":"            e.getStackTrace();"},{"lineNumber":151,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":154,"author":{"gitId":"shaelynl"},"content":"    private static void loadData(ArrayList\u003cTask\u003e tasksArrayList, File fname) throws IOException {"},{"lineNumber":155,"author":{"gitId":"shaelynl"},"content":"        Scanner sc \u003d new Scanner(fname);"},{"lineNumber":156,"author":{"gitId":"shaelynl"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":157,"author":{"gitId":"shaelynl"},"content":"            String tempStr \u003d sc.nextLine();"},{"lineNumber":158,"author":{"gitId":"shaelynl"},"content":"            String checkForTick \u003d tempStr.substring(0, 5);"},{"lineNumber":159,"author":{"gitId":"shaelynl"},"content":"            String cmd \u003d tempStr.substring(7);"},{"lineNumber":160,"author":{"gitId":"shaelynl"},"content":"            if (tempStr.contains(\"[T]\")) {"},{"lineNumber":161,"author":{"gitId":"shaelynl"},"content":"                ToDo toDoTask \u003d new ToDo(cmd);"},{"lineNumber":162,"author":{"gitId":"shaelynl"},"content":"                if (!checkForTick.contains(\" \")) {"},{"lineNumber":163,"author":{"gitId":"shaelynl"},"content":"                    toDoTask.markAsDone();"},{"lineNumber":164,"author":{"gitId":"shaelynl"},"content":"                }"},{"lineNumber":165,"author":{"gitId":"shaelynl"},"content":"                tasksArrayList.add(toDoTask);"},{"lineNumber":166,"author":{"gitId":"shaelynl"},"content":"            } else if (tempStr.contains(\"[D]\")) {"},{"lineNumber":167,"author":{"gitId":"shaelynl"},"content":"                String[] strArray \u003d cmd.split(\"by:\", 2);"},{"lineNumber":168,"author":{"gitId":"shaelynl"},"content":"                String inst \u003d strArray[0].substring(0, strArray[0].length() - 2);"},{"lineNumber":169,"author":{"gitId":"shaelynl"},"content":"                String date \u003d strArray[1].substring(0, strArray[1].length() - 1);"},{"lineNumber":170,"author":{"gitId":"shaelynl"},"content":"                Deadline deadlineTask \u003d new Deadline(inst + \" \", date);"},{"lineNumber":171,"author":{"gitId":"shaelynl"},"content":"                if (!checkForTick.contains(\" \")) {"},{"lineNumber":172,"author":{"gitId":"shaelynl"},"content":"                    deadlineTask.markAsDone();"},{"lineNumber":173,"author":{"gitId":"shaelynl"},"content":"                }"},{"lineNumber":174,"author":{"gitId":"shaelynl"},"content":"                tasksArrayList.add(deadlineTask);"},{"lineNumber":175,"author":{"gitId":"shaelynl"},"content":"            } else if (tempStr.contains(\"[E]\")) {"},{"lineNumber":176,"author":{"gitId":"shaelynl"},"content":"                String[] strArray \u003d cmd.split(\"at:\", 2);"},{"lineNumber":177,"author":{"gitId":"shaelynl"},"content":"                String inst \u003d strArray[0].substring(0, strArray[0].length() - 2);"},{"lineNumber":178,"author":{"gitId":"shaelynl"},"content":"                String date \u003d strArray[1].substring(0, strArray[1].length() - 1);"},{"lineNumber":179,"author":{"gitId":"shaelynl"},"content":"                Event eventTask \u003d new Event(inst + \" \", date);"},{"lineNumber":180,"author":{"gitId":"shaelynl"},"content":"                if (!checkForTick.contains(\" \")) {"},{"lineNumber":181,"author":{"gitId":"shaelynl"},"content":"                    eventTask.markAsDone();"},{"lineNumber":182,"author":{"gitId":"shaelynl"},"content":"                }"},{"lineNumber":183,"author":{"gitId":"shaelynl"},"content":"                tasksArrayList.add(eventTask);"},{"lineNumber":184,"author":{"gitId":"shaelynl"},"content":"            }"},{"lineNumber":185,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":186,"author":{"gitId":"shaelynl"},"content":"        sc.close();"},{"lineNumber":187,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":189,"author":{"gitId":"shaelynl"},"content":"    private static void saveData(ArrayList\u003cTask\u003e taskArrayList, File fname) throws IOException {"},{"lineNumber":190,"author":{"gitId":"shaelynl"},"content":"        FileWriter fwriter \u003d new FileWriter(fname);"},{"lineNumber":191,"author":{"gitId":"shaelynl"},"content":"        for (int i \u003d 0; i \u003c taskArrayList.size(); i++) {"},{"lineNumber":192,"author":{"gitId":"shaelynl"},"content":"            if (taskArrayList.get(i) instanceof ToDo) {"},{"lineNumber":193,"author":{"gitId":"shaelynl"},"content":"                fwriter.write(taskArrayList.get(i).toString() + \"\\n\");"},{"lineNumber":194,"author":{"gitId":"shaelynl"},"content":"            } else if (taskArrayList.get(i) instanceof Deadline) {"},{"lineNumber":195,"author":{"gitId":"shaelynl"},"content":"                fwriter.write(taskArrayList.get(i).toString() + \"\\n\");"},{"lineNumber":196,"author":{"gitId":"shaelynl"},"content":"            } else {"},{"lineNumber":197,"author":{"gitId":"shaelynl"},"content":"                fwriter.write(taskArrayList.get(i).toString() + \"\\n\");"},{"lineNumber":198,"author":{"gitId":"shaelynl"},"content":"            }"},{"lineNumber":199,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":200,"author":{"gitId":"shaelynl"},"content":"        fwriter.close();"},{"lineNumber":201,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":202,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":203,"author":{"gitId":"shaelynl"},"content":"}"},{"lineNumber":204,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":205,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":206,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":207,"author":{"gitId":"shaelynl"},"content":" * The Task class is a parent class for ToDo, Deadline and Event"},{"lineNumber":208,"author":{"gitId":"shaelynl"},"content":" * whereby each Task has a boolean to indicate whether it has been done"},{"lineNumber":209,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":210,"author":{"gitId":"shaelynl"},"content":"class Task {"},{"lineNumber":211,"author":{"gitId":"shaelynl"},"content":"    protected String description;"},{"lineNumber":212,"author":{"gitId":"shaelynl"},"content":"    protected boolean isDone;"},{"lineNumber":213,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":214,"author":{"gitId":"shaelynl"},"content":"    /**"},{"lineNumber":215,"author":{"gitId":"shaelynl"},"content":"     * The Task applies to inputs with sufficient information to classify as a todo, deadline"},{"lineNumber":216,"author":{"gitId":"shaelynl"},"content":"     * or event task."},{"lineNumber":217,"author":{"gitId":"shaelynl"},"content":"     * @param description describes the details of a task supplied to the chat bot"},{"lineNumber":218,"author":{"gitId":"shaelynl"},"content":"     */"},{"lineNumber":219,"author":{"gitId":"shaelynl"},"content":"    public Task(String description) {"},{"lineNumber":220,"author":{"gitId":"shaelynl"},"content":"        this.description \u003d description;"},{"lineNumber":221,"author":{"gitId":"shaelynl"},"content":"        this.isDone \u003d false;"},{"lineNumber":222,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":224,"author":{"gitId":"shaelynl"},"content":"    /**"},{"lineNumber":225,"author":{"gitId":"shaelynl"},"content":"     * For a given task, indicate whether it has been done using a space or a tick"},{"lineNumber":226,"author":{"gitId":"shaelynl"},"content":"     * @return if the task has been done, return a tick, else return a space"},{"lineNumber":227,"author":{"gitId":"shaelynl"},"content":"     */"},{"lineNumber":228,"author":{"gitId":"shaelynl"},"content":"    public String getStatusIcon() {"},{"lineNumber":229,"author":{"gitId":"shaelynl"},"content":"        return (isDone ? \"\\u2713\" : \" \"); //return tick symbol"},{"lineNumber":230,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":231,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":232,"author":{"gitId":"shaelynl"},"content":"    /**"},{"lineNumber":233,"author":{"gitId":"shaelynl"},"content":"     * For a given task, if it is done, mark it as done by changing the boolean isDone to true"},{"lineNumber":234,"author":{"gitId":"shaelynl"},"content":"     */"},{"lineNumber":235,"author":{"gitId":"shaelynl"},"content":"    public void markAsDone() {"},{"lineNumber":236,"author":{"gitId":"shaelynl"},"content":"        isDone \u003d true;"},{"lineNumber":237,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":238,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":239,"author":{"gitId":"shaelynl"},"content":"    @Override"},{"lineNumber":240,"author":{"gitId":"shaelynl"},"content":"    public String toString() { return \"[\" + getStatusIcon() + \"] \" + description; }"},{"lineNumber":241,"author":{"gitId":"shaelynl"},"content":"}"},{"lineNumber":242,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":243,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":244,"author":{"gitId":"shaelynl"},"content":" * The ToDo class is a child class of the Task Class,"},{"lineNumber":245,"author":{"gitId":"shaelynl"},"content":" * it specifies the task as a ToDo using [T]"},{"lineNumber":246,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":247,"author":{"gitId":"shaelynl"},"content":"class ToDo extends Task {"},{"lineNumber":248,"author":{"gitId":"shaelynl"},"content":"    public ToDo(String description) {"},{"lineNumber":249,"author":{"gitId":"shaelynl"},"content":"        super(description);"},{"lineNumber":250,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":251,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":252,"author":{"gitId":"shaelynl"},"content":"    @Override"},{"lineNumber":253,"author":{"gitId":"shaelynl"},"content":"    public String toString() {"},{"lineNumber":254,"author":{"gitId":"shaelynl"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":255,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":256,"author":{"gitId":"shaelynl"},"content":"}"},{"lineNumber":257,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":258,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":259,"author":{"gitId":"shaelynl"},"content":" * The Deadline class is a child class of the Task Class,"},{"lineNumber":260,"author":{"gitId":"shaelynl"},"content":" * it specifies the task as a Deadline using [D]"},{"lineNumber":261,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":262,"author":{"gitId":"shaelynl"},"content":"class Deadline extends Task {"},{"lineNumber":263,"author":{"gitId":"shaelynl"},"content":"    protected String by;"},{"lineNumber":264,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":265,"author":{"gitId":"shaelynl"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":266,"author":{"gitId":"shaelynl"},"content":"        super(description);"},{"lineNumber":267,"author":{"gitId":"shaelynl"},"content":"        this.by \u003d by;"},{"lineNumber":268,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":269,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":270,"author":{"gitId":"shaelynl"},"content":"    @Override"},{"lineNumber":271,"author":{"gitId":"shaelynl"},"content":"    public String toString() {"},{"lineNumber":272,"author":{"gitId":"shaelynl"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + by + \")\";"},{"lineNumber":273,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":274,"author":{"gitId":"shaelynl"},"content":"}"},{"lineNumber":275,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":276,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":277,"author":{"gitId":"shaelynl"},"content":" * The Event class is a child class of the Task Class,"},{"lineNumber":278,"author":{"gitId":"shaelynl"},"content":" * it specifies the task as an Event using [E]"},{"lineNumber":279,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":280,"author":{"gitId":"shaelynl"},"content":"class Event extends Task {"},{"lineNumber":281,"author":{"gitId":"shaelynl"},"content":"    protected String at;"},{"lineNumber":282,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":283,"author":{"gitId":"shaelynl"},"content":"    public Event(String description, String at) {"},{"lineNumber":284,"author":{"gitId":"shaelynl"},"content":"        super(description);"},{"lineNumber":285,"author":{"gitId":"shaelynl"},"content":"        this.at \u003d at;"},{"lineNumber":286,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":287,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":288,"author":{"gitId":"shaelynl"},"content":"    @Override"},{"lineNumber":289,"author":{"gitId":"shaelynl"},"content":"    public String toString() {"},{"lineNumber":290,"author":{"gitId":"shaelynl"},"content":"        return \"[E]\" + super.toString() + \"(at:\" + at + \")\";"},{"lineNumber":291,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":292,"author":{"gitId":"shaelynl"},"content":"}"},{"lineNumber":293,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":294,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":295,"author":{"gitId":"shaelynl"},"content":" * The DukeException is a child class of the Java Exception class"},{"lineNumber":296,"author":{"gitId":"shaelynl"},"content":" * which throws an exception message when an invalid input is given to the chat bot"},{"lineNumber":297,"author":{"gitId":"shaelynl"},"content":" * either a wrong message (unidentified input) or an unclear message (not specific enough)"},{"lineNumber":298,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":299,"author":{"gitId":"shaelynl"},"content":"class DukeException extends Exception {"},{"lineNumber":300,"author":{"gitId":"shaelynl"},"content":"    public DukeException(String message) {"},{"lineNumber":301,"author":{"gitId":"shaelynl"},"content":"        super(message);"},{"lineNumber":302,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":303,"author":{"gitId":"shaelynl"},"content":"}"}],"authorContributionMap":{"shaelynl":303}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":"deadline return book /by Monday"},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":"event project meeting /at Tues 2-4pm"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":"list"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"done 3"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"list"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":"bye"}],"authorContributionMap":{"shaelynl":9}}]
