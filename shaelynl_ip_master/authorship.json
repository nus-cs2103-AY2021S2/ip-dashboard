[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00276.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":"}"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":"}"},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"javafx {"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":"    version \u003d \u002715.0.1\u0027"},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"}"},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"run {"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":"    enableAssertions \u003d true"},{"lineNumber":19,"author":{"gitId":"shaelynl"},"content":"}"},{"lineNumber":20,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":21,"author":{"gitId":"shaelynl"},"content":"dependencies {"},{"lineNumber":22,"author":{"gitId":"shaelynl"},"content":"    String javaFxVersion \u003d \u002715\u0027"},{"lineNumber":23,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":24,"author":{"gitId":"shaelynl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"shaelynl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"shaelynl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"shaelynl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"shaelynl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"shaelynl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"shaelynl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":31,"author":{"gitId":"shaelynl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":32,"author":{"gitId":"shaelynl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":33,"author":{"gitId":"shaelynl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":34,"author":{"gitId":"shaelynl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":35,"author":{"gitId":"shaelynl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":36,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":37,"author":{"gitId":"shaelynl"},"content":"    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.6.0\u0027"},{"lineNumber":38,"author":{"gitId":"shaelynl"},"content":"    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine\u0027"},{"lineNumber":39,"author":{"gitId":"shaelynl"},"content":"}"},{"lineNumber":40,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":41,"author":{"gitId":"shaelynl"},"content":"sourceSets {"},{"lineNumber":42,"author":{"gitId":"shaelynl"},"content":"    main {"},{"lineNumber":43,"author":{"gitId":"shaelynl"},"content":"        output.resourcesDir \u003d file(\u0027build/classes/java/main/main/java\u0027)"},{"lineNumber":44,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"shaelynl"},"content":"}"},{"lineNumber":46,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":47,"author":{"gitId":"shaelynl"},"content":"mainClassName \u003d \u0027Launcher\u0027"}],"authorContributionMap":{"shaelynl":47}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"# User Guide to Mister Duke"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":"Welcome to the Mister Duke\u0027s user guide! This is a comprehensive platform for you to understand how Mister Duke functions."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":"Mister Duke is an interactive chatbot that will help you to keep track of your tasks."},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":"### Adding a task "},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"Mister Duke can identify four different types of tasks: To-do, Deadlines, Events and Notes. Identify which type of task you are adding and Mister Duke will keep track of them for you."},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":"### Marking a task as done"},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"After you have completed a task, Mister Duke is able to tick its checkbox for you. This way, you are able to stay on top of things and have a quick overview of what has not been done."},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"### Deleting a task"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":"Added a wrong task by mistake? Fret not as Mister Duke can delete the task from your list."},{"lineNumber":19,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":20,"author":{"gitId":"shaelynl"},"content":"### Listing your task list"},{"lineNumber":21,"author":{"gitId":"shaelynl"},"content":"Mister Duke can display all the tasks in your list for an easy overview of what needs to be done."},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"shaelynl"},"content":"### Finding a task"},{"lineNumber":24,"author":{"gitId":"shaelynl"},"content":"By specifying a keyword, Mister Duke is able to search through your task list for the task containing that keyword."},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"shaelynl"},"content":"### `todo (task)` - Adds a To-Do Task into your task list."},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"shaelynl"},"content":"Successfully adding a To-Do Task will be confirmed by Mister Duke."},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"shaelynl"},"content":"`todo buy bread`"},{"lineNumber":34,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":35,"author":{"gitId":"shaelynl"},"content":"Expected outcome:"},{"lineNumber":36,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":37,"author":{"gitId":"shaelynl"},"content":"```"},{"lineNumber":38,"author":{"gitId":"shaelynl"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":39,"author":{"gitId":"shaelynl"},"content":"  [T][ ] buy bread"},{"lineNumber":40,"author":{"gitId":"shaelynl"},"content":"```"},{"lineNumber":41,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":42,"author":{"gitId":"shaelynl"},"content":"### `deadline (task) /by (date)` - Adds a Deadline Task into your task list."},{"lineNumber":43,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":44,"author":{"gitId":"shaelynl"},"content":"Successfully adding a Deadline Task will be confirmed by Mister Duke. Do specify when the deadline is using /by."},{"lineNumber":45,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":46,"author":{"gitId":"shaelynl"},"content":"Example of usage:"},{"lineNumber":47,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":48,"author":{"gitId":"shaelynl"},"content":"`deadline write essay /by 19-02-2021 2359`"},{"lineNumber":49,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":50,"author":{"gitId":"shaelynl"},"content":"Expected outcome:"},{"lineNumber":51,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":52,"author":{"gitId":"shaelynl"},"content":"```"},{"lineNumber":53,"author":{"gitId":"shaelynl"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":54,"author":{"gitId":"shaelynl"},"content":"  [D][ ] write essay (by: Fri Feb 19 23:59:00 SGT 2021)"},{"lineNumber":55,"author":{"gitId":"shaelynl"},"content":"```"},{"lineNumber":56,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":57,"author":{"gitId":"shaelynl"},"content":"### `event (task) /at (timing)` - Adds an Event Task into your task list."},{"lineNumber":58,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":59,"author":{"gitId":"shaelynl"},"content":"Successfully adding an Event Task will be confirmed by Mister Duke. Do specify the timing using /at."},{"lineNumber":60,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":61,"author":{"gitId":"shaelynl"},"content":"Example of usage:"},{"lineNumber":62,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":63,"author":{"gitId":"shaelynl"},"content":"`event project meeting /at 2pm`"},{"lineNumber":64,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":65,"author":{"gitId":"shaelynl"},"content":"Expected outcome:"},{"lineNumber":66,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":67,"author":{"gitId":"shaelynl"},"content":"```"},{"lineNumber":68,"author":{"gitId":"shaelynl"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":69,"author":{"gitId":"shaelynl"},"content":"  [E][ ] project meeting (at: 2pm)"},{"lineNumber":70,"author":{"gitId":"shaelynl"},"content":"```"},{"lineNumber":71,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":72,"author":{"gitId":"shaelynl"},"content":"### `note (text)` - Adds a Note Task into your task list."},{"lineNumber":73,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":74,"author":{"gitId":"shaelynl"},"content":"Successfully adding a Note Task will be confirmed by Mister Duke."},{"lineNumber":75,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":76,"author":{"gitId":"shaelynl"},"content":"Example of usage:"},{"lineNumber":77,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":78,"author":{"gitId":"shaelynl"},"content":"`note rmb to call mom`"},{"lineNumber":79,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":80,"author":{"gitId":"shaelynl"},"content":"Expected outcome:"},{"lineNumber":81,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":82,"author":{"gitId":"shaelynl"},"content":"```"},{"lineNumber":83,"author":{"gitId":"shaelynl"},"content":"Got it. I\u0027ve added this task: "},{"lineNumber":84,"author":{"gitId":"shaelynl"},"content":"  [N][ ] rmb to call mom"},{"lineNumber":85,"author":{"gitId":"shaelynl"},"content":"```"},{"lineNumber":86,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":87,"author":{"gitId":"shaelynl"},"content":"### `list` - Lists all tasks in your task list."},{"lineNumber":88,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":89,"author":{"gitId":"shaelynl"},"content":"Mister Duke will list your tasks in order of when they were added."},{"lineNumber":90,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":91,"author":{"gitId":"shaelynl"},"content":"Example of usage:"},{"lineNumber":92,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":93,"author":{"gitId":"shaelynl"},"content":"`list`"},{"lineNumber":94,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":95,"author":{"gitId":"shaelynl"},"content":"Expected outcome:"},{"lineNumber":96,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":97,"author":{"gitId":"shaelynl"},"content":"```"},{"lineNumber":98,"author":{"gitId":"shaelynl"},"content":"Here are the tasks in your list: "},{"lineNumber":99,"author":{"gitId":"shaelynl"},"content":"1. [T][ ] todo buy bread "},{"lineNumber":100,"author":{"gitId":"shaelynl"},"content":"2. [D][ ] write essay (by: Fri Feb 19 23:59:00 SGT 2021) "},{"lineNumber":101,"author":{"gitId":"shaelynl"},"content":"3. [E][ ] project meeting (at: 2pm) "},{"lineNumber":102,"author":{"gitId":"shaelynl"},"content":"4. [N][ ] rmb to call mom"},{"lineNumber":103,"author":{"gitId":"shaelynl"},"content":"```"},{"lineNumber":104,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":105,"author":{"gitId":"shaelynl"},"content":"### `done (task number)` - Marks a task as done."},{"lineNumber":106,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":107,"author":{"gitId":"shaelynl"},"content":"A tick will be indicated next to the specified task."},{"lineNumber":108,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":109,"author":{"gitId":"shaelynl"},"content":"Example of usage:"},{"lineNumber":110,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":111,"author":{"gitId":"shaelynl"},"content":"`done 4`"},{"lineNumber":112,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":113,"author":{"gitId":"shaelynl"},"content":"Expected outcome:"},{"lineNumber":114,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":115,"author":{"gitId":"shaelynl"},"content":"```"},{"lineNumber":116,"author":{"gitId":"shaelynl"},"content":"Nice! I\u0027ve marked this task as done: "},{"lineNumber":117,"author":{"gitId":"shaelynl"},"content":"  [N][✓] rmb to call mom"},{"lineNumber":118,"author":{"gitId":"shaelynl"},"content":"```"},{"lineNumber":119,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":120,"author":{"gitId":"shaelynl"},"content":"### `delete (task number)` - Deletes a task from the task list. "},{"lineNumber":121,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":122,"author":{"gitId":"shaelynl"},"content":"The specified task will be removed from the task list."},{"lineNumber":123,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":124,"author":{"gitId":"shaelynl"},"content":"Example of usage:"},{"lineNumber":125,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":126,"author":{"gitId":"shaelynl"},"content":"`delete 1`"},{"lineNumber":127,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":128,"author":{"gitId":"shaelynl"},"content":"Expected outcome:"},{"lineNumber":129,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":130,"author":{"gitId":"shaelynl"},"content":"```"},{"lineNumber":131,"author":{"gitId":"shaelynl"},"content":"Noted. I\u0027ve removed this task:"},{"lineNumber":132,"author":{"gitId":"shaelynl"},"content":"  [T][ ] buy bread"},{"lineNumber":133,"author":{"gitId":"shaelynl"},"content":"```"},{"lineNumber":134,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":135,"author":{"gitId":"shaelynl"},"content":"### `find (keyword)` - Finds a task with the specified keyword."},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"shaelynl"},"content":"Returns all tasks in the task list with the matching keyword"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"shaelynl"},"content":"`find meeting`"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"shaelynl"},"content":"```"},{"lineNumber":146,"author":{"gitId":"shaelynl"},"content":"Here are the matching tasks in your list: "},{"lineNumber":147,"author":{"gitId":"shaelynl"},"content":"1. [E][ ] project meeting (at: 2pm)"},{"lineNumber":148,"author":{"gitId":"shaelynl"},"content":"```"},{"lineNumber":149,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":150,"author":{"gitId":"shaelynl"},"content":"### `bye` - Bid Mister Duke goodbye."},{"lineNumber":151,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":152,"author":{"gitId":"shaelynl"},"content":"Mister Duke will bid you goodbye after you no longer require him. He will retain the information in the task list from the previous usage."},{"lineNumber":153,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":154,"author":{"gitId":"shaelynl"},"content":"Example of usage:"},{"lineNumber":155,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":156,"author":{"gitId":"shaelynl"},"content":"`bye`"},{"lineNumber":157,"author":{"gitId":"-"},"content":""},{"lineNumber":158,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":159,"author":{"gitId":"-"},"content":""},{"lineNumber":160,"author":{"gitId":"shaelynl"},"content":"`Bye. Hope to see you again soon! :)`"}],"authorContributionMap":{"shaelynl":138,"-":22}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"[E][✓] (at:)"}],"authorContributionMap":{"shaelynl":1}},{"path":"gradle/gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"shaelynl"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"shaelynl"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"shaelynl"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"shaelynl"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":24,"author":{"gitId":"shaelynl"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"shaelynl"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":27,"author":{"gitId":"shaelynl"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"shaelynl"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"shaelynl"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"shaelynl"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":32,"author":{"gitId":"shaelynl"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"shaelynl"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":35,"author":{"gitId":"shaelynl"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"shaelynl"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":38,"author":{"gitId":"shaelynl"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"shaelynl"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":41,"author":{"gitId":"shaelynl"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"shaelynl"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"shaelynl"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":44,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":45,"author":{"gitId":"shaelynl"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"shaelynl"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"shaelynl"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"shaelynl"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"shaelynl"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":51,"author":{"gitId":"shaelynl"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":53,"author":{"gitId":"shaelynl"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"shaelynl"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"shaelynl"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":57,"author":{"gitId":"shaelynl"},"content":"if exist \"%JAVA_EXE%\" goto execute"},{"lineNumber":58,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":59,"author":{"gitId":"shaelynl"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"shaelynl"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"shaelynl"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"shaelynl"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"shaelynl"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":65,"author":{"gitId":"shaelynl"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":67,"author":{"gitId":"shaelynl"},"content":":execute"},{"lineNumber":68,"author":{"gitId":"shaelynl"},"content":"@rem Setup the command line"},{"lineNumber":69,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":70,"author":{"gitId":"shaelynl"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":71,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":72,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":73,"author":{"gitId":"shaelynl"},"content":"@rem Execute Gradle"},{"lineNumber":74,"author":{"gitId":"shaelynl"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"},{"lineNumber":75,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":76,"author":{"gitId":"shaelynl"},"content":":end"},{"lineNumber":77,"author":{"gitId":"shaelynl"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":78,"author":{"gitId":"shaelynl"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":79,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":80,"author":{"gitId":"shaelynl"},"content":":fail"},{"lineNumber":81,"author":{"gitId":"shaelynl"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":82,"author":{"gitId":"shaelynl"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":83,"author":{"gitId":"shaelynl"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":84,"author":{"gitId":"shaelynl"},"content":"exit /b 1"},{"lineNumber":85,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":86,"author":{"gitId":"shaelynl"},"content":":mainEnd"},{"lineNumber":87,"author":{"gitId":"shaelynl"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":88,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":89,"author":{"gitId":"shaelynl"},"content":":omega"}],"authorContributionMap":{"shaelynl":89}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"rootProject.name \u003d \u0027dukeproj\u0027"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":""}],"authorContributionMap":{"shaelynl":2}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":"public abstract class Command {"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":"    public abstract String executeCommand(Ui ui, Storage storage, ArrayList\u003cTask\u003e taskList) throws DukeException;"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":"    public abstract boolean isRunning();"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"}"}],"authorContributionMap":{"shaelynl":7}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"import java.util.Date;"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":" * The Deadline class is a child class of the Task Class,"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":" * it specifies the task as a Deadline using [D]"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"public class Deadline extends Task {"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"    protected Date deadlineBy;"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":"    public Deadline(String description, Date deadlineBy) {"},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":"        super(description);"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"        this.deadlineBy \u003d deadlineBy;"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + deadlineBy + \")\";"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"shaelynl"},"content":"}"}],"authorContributionMap":{"shaelynl":19}},{"path":"src/main/java/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":"import java.util.Date;"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":"import java.util.Locale;"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":" * When the user inputs a Deadline task, the DeadlineCommand is returned"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":"    private String command;"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":"    public DeadlineCommand(String command) {"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":"        this.command \u003d command;"},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":"    public String executeCommand(Ui ui, Storage storage, ArrayList\u003cTask\u003e taskList) throws DukeException {"},{"lineNumber":19,"author":{"gitId":"shaelynl"},"content":"        String input \u003d command.trim();"},{"lineNumber":20,"author":{"gitId":"shaelynl"},"content":"        if (input.equalsIgnoreCase(\"deadline\")) {"},{"lineNumber":21,"author":{"gitId":"shaelynl"},"content":"            throw new DukeException(\"Could you please specify your task? :)\");"},{"lineNumber":22,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":24,"author":{"gitId":"shaelynl"},"content":"        String[] strArray \u003d input.split(\" \", 2);"},{"lineNumber":25,"author":{"gitId":"shaelynl"},"content":"        if (!strArray[1].contains(\"/by\")) {"},{"lineNumber":26,"author":{"gitId":"shaelynl"},"content":"            throw new DukeException(\"Uh oh! Please specify a timing using /by.\");"},{"lineNumber":27,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":29,"author":{"gitId":"shaelynl"},"content":"        String cmd \u003d strArray[0];"},{"lineNumber":30,"author":{"gitId":"shaelynl"},"content":"        String cmdTask \u003d strArray[1];"},{"lineNumber":31,"author":{"gitId":"shaelynl"},"content":"        String[] tempStrArray \u003d cmdTask.split(\"/by\", 2);"},{"lineNumber":32,"author":{"gitId":"shaelynl"},"content":"        String inputDate \u003d tempStrArray[1].trim();"},{"lineNumber":33,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":34,"author":{"gitId":"shaelynl"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd-MM-yyyy HHmm\", Locale.ENGLISH);"},{"lineNumber":35,"author":{"gitId":"shaelynl"},"content":"        Date date;"},{"lineNumber":36,"author":{"gitId":"shaelynl"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"shaelynl"},"content":"            date \u003d format.parse(inputDate);"},{"lineNumber":38,"author":{"gitId":"shaelynl"},"content":"        } catch (Exception e) {"},{"lineNumber":39,"author":{"gitId":"shaelynl"},"content":"            throw new DukeException(\"Uh oh! Please enter a timing in the format dd-mm-yyyy HHmm\");"},{"lineNumber":40,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"shaelynl"},"content":"        Deadline tempTask \u003d new Deadline(tempStrArray[0], date);"},{"lineNumber":42,"author":{"gitId":"shaelynl"},"content":"        taskList.add(tempTask);"},{"lineNumber":43,"author":{"gitId":"shaelynl"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"shaelynl"},"content":"            storage.save(taskList);"},{"lineNumber":45,"author":{"gitId":"shaelynl"},"content":"        } catch (IOException e) {"},{"lineNumber":46,"author":{"gitId":"shaelynl"},"content":"            e.printStackTrace();"},{"lineNumber":47,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"shaelynl"},"content":"        return ui.showTaskAdded(tempTask);"},{"lineNumber":49,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":51,"author":{"gitId":"shaelynl"},"content":"    public boolean isRunning() {"},{"lineNumber":52,"author":{"gitId":"shaelynl"},"content":"        return true;"},{"lineNumber":53,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"shaelynl"},"content":"}"}],"authorContributionMap":{"shaelynl":54}},{"path":"src/main/java/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":" * When the user deletes a specified task from the task list,"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":" * the DeleteCommand is called"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":"    private String command;"},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":"    public DeleteCommand(String command) {"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"        this.command \u003d command;"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":"    public String executeCommand(Ui ui, Storage storage, ArrayList\u003cTask\u003e taskList) throws DukeException {"},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"        String[] commandArray \u003d command.trim().split(\" \");"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":"        if (Integer.parseInt(commandArray[1]) \u003e taskList.size() || Integer.parseInt(commandArray[1]) \u003d\u003d 0) {"},{"lineNumber":19,"author":{"gitId":"shaelynl"},"content":"            return ui.showOutOfBounds();"},{"lineNumber":20,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"shaelynl"},"content":"        String output \u003d ui.showTaskDelete(taskList, commandArray[1]);"},{"lineNumber":22,"author":{"gitId":"shaelynl"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"shaelynl"},"content":"            storage.save(taskList);"},{"lineNumber":24,"author":{"gitId":"shaelynl"},"content":"        } catch (IOException e) {"},{"lineNumber":25,"author":{"gitId":"shaelynl"},"content":"            e.printStackTrace();"},{"lineNumber":26,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"shaelynl"},"content":"        return output;"},{"lineNumber":28,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":30,"author":{"gitId":"shaelynl"},"content":"    public boolean isRunning() {"},{"lineNumber":31,"author":{"gitId":"shaelynl"},"content":"        return true;"},{"lineNumber":32,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":34,"author":{"gitId":"shaelynl"},"content":"}"}],"authorContributionMap":{"shaelynl":34}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"import javafx.geometry.Pos;"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"import javafx.scene.Node;"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":"import javafx.scene.control.Label;"},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":20,"author":{"gitId":"shaelynl"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"shaelynl"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"shaelynl"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"shaelynl"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"shaelynl"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":26,"author":{"gitId":"shaelynl"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"shaelynl"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"shaelynl"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"view/DialogBox.fxml\")); //file"},{"lineNumber":29,"author":{"gitId":"shaelynl"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"shaelynl"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"shaelynl"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"shaelynl"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"shaelynl"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"shaelynl"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);"},{"lineNumber":36,"author":{"gitId":"shaelynl"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"shaelynl"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":40,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":41,"author":{"gitId":"shaelynl"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"shaelynl"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":43,"author":{"gitId":"shaelynl"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"shaelynl"},"content":"    private void flip() {"},{"lineNumber":45,"author":{"gitId":"shaelynl"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":46,"author":{"gitId":"shaelynl"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"shaelynl"},"content":"        FXCollections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"shaelynl"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":51,"author":{"gitId":"shaelynl"},"content":"    public static DialogBox getUserDialog(String l, Image iv) {"},{"lineNumber":52,"author":{"gitId":"shaelynl"},"content":"        return new DialogBox(l, iv);"},{"lineNumber":53,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":55,"author":{"gitId":"shaelynl"},"content":"    public static DialogBox getDukeDialog(String l, Image iv) {"},{"lineNumber":56,"author":{"gitId":"shaelynl"},"content":"        var db \u003d new DialogBox(l, iv);"},{"lineNumber":57,"author":{"gitId":"shaelynl"},"content":"        db.flip();"},{"lineNumber":58,"author":{"gitId":"shaelynl"},"content":"        return db;"},{"lineNumber":59,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"shaelynl"},"content":"}"}],"authorContributionMap":{"shaelynl":60}},{"path":"src/main/java/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":" * When the user marks a specified task as done,"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":" * the DoneCommand is called"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"public class DoneCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":"    private String command;"},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":"    public DoneCommand(String command) {"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"        this.command \u003d command;"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":"    public String executeCommand(Ui ui, Storage storage, ArrayList\u003cTask\u003e taskList) throws DukeException {"},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"        String[] commandArray \u003d command.trim().split(\" \");"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":"        if (Integer.parseInt(commandArray[1]) \u003e taskList.size() || Integer.parseInt(commandArray[1]) \u003d\u003d 0) {"},{"lineNumber":19,"author":{"gitId":"shaelynl"},"content":"            return ui.showOutOfBounds();"},{"lineNumber":20,"author":{"gitId":"shaelynl"},"content":"        } else {"},{"lineNumber":21,"author":{"gitId":"shaelynl"},"content":"            Task completedTask \u003d taskList.get(Integer.parseInt(commandArray[1]) - 1);"},{"lineNumber":22,"author":{"gitId":"shaelynl"},"content":"            completedTask.markAsDone();"},{"lineNumber":23,"author":{"gitId":"shaelynl"},"content":"            try {"},{"lineNumber":24,"author":{"gitId":"shaelynl"},"content":"                storage.save(taskList);"},{"lineNumber":25,"author":{"gitId":"shaelynl"},"content":"            } catch (IOException e) {"},{"lineNumber":26,"author":{"gitId":"shaelynl"},"content":"                e.printStackTrace();"},{"lineNumber":27,"author":{"gitId":"shaelynl"},"content":"            }"},{"lineNumber":28,"author":{"gitId":"shaelynl"},"content":"            return ui.showTaskDone(completedTask);"},{"lineNumber":29,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":32,"author":{"gitId":"shaelynl"},"content":"    public boolean isRunning() {"},{"lineNumber":33,"author":{"gitId":"shaelynl"},"content":"        return true;"},{"lineNumber":34,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":36,"author":{"gitId":"shaelynl"},"content":"}"}],"authorContributionMap":{"shaelynl":36}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":" * The DukeException is a child class of the Java Exception class"},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":" * which throws an exception message when an invalid input is given to the chat bot"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":" * either a wrong message (unidentified input) or an unclear message (not specific enough)"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":"class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"    public DukeException(String message) {"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"        super(message);"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":"        return super.getMessage();"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"}"}],"authorContributionMap":{"shaelynl":15}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":" * The Event class is a child class of the Task Class,"},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":" * it specifies the task as an Event using [E]"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":"class Event extends Task {"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":"    protected String at;"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"    public Event(String description, String at) {"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":"        this.at \u003d at;"},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"        return \"[E]\" + super.toString() + \"(at:\" + at + \")\";"},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"}"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":""}],"authorContributionMap":{"shaelynl":18}},{"path":"src/main/java/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":" * When the user inputs an Event task, the EventCommand is returned"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"public class EventCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"    private String command;"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":"    public EventCommand(String command) {"},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":"        this.command \u003d command;"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"    public String executeCommand(Ui ui, Storage storage, ArrayList\u003cTask\u003e taskList) throws DukeException {"},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":"        String input \u003d command.trim();"},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"        if (input.equalsIgnoreCase(\"event\")) {"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":"            throw new DukeException(\"Could you please specify your task? :)\");"},{"lineNumber":19,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"shaelynl"},"content":"        String[] strArray \u003d input.split(\" \", 2);"},{"lineNumber":21,"author":{"gitId":"shaelynl"},"content":"        String cmd \u003d strArray[0];"},{"lineNumber":22,"author":{"gitId":"shaelynl"},"content":"        String cmdTask \u003d strArray[1];"},{"lineNumber":23,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":24,"author":{"gitId":"shaelynl"},"content":"        if (!strArray[1].contains(\"/at\")) {"},{"lineNumber":25,"author":{"gitId":"shaelynl"},"content":"            throw new DukeException(\"Uh oh! Please specify a timing using /at.\");"},{"lineNumber":26,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"shaelynl"},"content":"        String[] tempStrArray \u003d cmdTask.split(\"/at\", 2);"},{"lineNumber":28,"author":{"gitId":"shaelynl"},"content":"        Event tempTask \u003d new Event(tempStrArray[0], tempStrArray[1]);"},{"lineNumber":29,"author":{"gitId":"shaelynl"},"content":"        taskList.add(tempTask);"},{"lineNumber":30,"author":{"gitId":"shaelynl"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"shaelynl"},"content":"            storage.save(taskList);"},{"lineNumber":32,"author":{"gitId":"shaelynl"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"shaelynl"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"shaelynl"},"content":"        return ui.showTaskAdded(tempTask);"},{"lineNumber":36,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":38,"author":{"gitId":"shaelynl"},"content":"    public boolean isRunning() {"},{"lineNumber":39,"author":{"gitId":"shaelynl"},"content":"        return true;"},{"lineNumber":40,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"shaelynl"},"content":"}"}],"authorContributionMap":{"shaelynl":41}},{"path":"src/main/java/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":" * When the user bids goodbye, the Exit Command is called"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"public class ExitCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"    private String command;"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":"    public ExitCommand(String command) {"},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":"        this.command \u003d command;"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"    public String executeCommand(Ui ui, Storage storage, ArrayList\u003cTask\u003e taskList) throws DukeException {"},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"            storage.save(taskList);"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":"        } catch (IOException e) {"},{"lineNumber":19,"author":{"gitId":"shaelynl"},"content":"            e.printStackTrace();"},{"lineNumber":20,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"shaelynl"},"content":"        return ui.showGoodbye();"},{"lineNumber":22,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":24,"author":{"gitId":"shaelynl"},"content":"    public boolean isRunning() {"},{"lineNumber":25,"author":{"gitId":"shaelynl"},"content":"        return false;"},{"lineNumber":26,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"shaelynl"},"content":"}"}],"authorContributionMap":{"shaelynl":27}},{"path":"src/main/java/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":" * When the user wishes to find a specific task,"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":" * Mister Duke will search through the current task list"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":" * for any matching tasks and display them to the user."},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"public class FindCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":"    private String command;"},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":"    public FindCommand(String command){"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"        this.command \u003d command;"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":"    public String executeCommand(Ui ui, Storage storage, ArrayList\u003cTask\u003e taskList) throws DukeException {"},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"        String input \u003d command.trim();"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":"        if (input.equalsIgnoreCase(\"find\")) {"},{"lineNumber":19,"author":{"gitId":"shaelynl"},"content":"            throw new DukeException(\"Could you please specify a keyword? :)\");"},{"lineNumber":20,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"shaelynl"},"content":"        String[] strArray \u003d input.split(\" \", 2);"},{"lineNumber":22,"author":{"gitId":"shaelynl"},"content":"        String cmd \u003d strArray[0];"},{"lineNumber":23,"author":{"gitId":"shaelynl"},"content":"        String keyword \u003d strArray[1];"},{"lineNumber":24,"author":{"gitId":"shaelynl"},"content":"        ArrayList\u003cTask\u003e tempTaskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":25,"author":{"gitId":"shaelynl"},"content":"        for (Task task : taskList) {"},{"lineNumber":26,"author":{"gitId":"shaelynl"},"content":"            if (task.toString().contains(keyword)) {"},{"lineNumber":27,"author":{"gitId":"shaelynl"},"content":"                tempTaskList.add(task);"},{"lineNumber":28,"author":{"gitId":"shaelynl"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"shaelynl"},"content":"        return ui.showMatchingItems(tempTaskList);"},{"lineNumber":31,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":33,"author":{"gitId":"shaelynl"},"content":"    public boolean isRunning() {"},{"lineNumber":34,"author":{"gitId":"shaelynl"},"content":"        return true;"},{"lineNumber":35,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"shaelynl"},"content":"}"}],"authorContributionMap":{"shaelynl":36}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":"public class Launcher {"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":"    public static void main(String[] args) {"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"}"}],"authorContributionMap":{"shaelynl":7}},{"path":"src/main/java/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":" * When the user requests for the current list of tasks,"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":" * the ListCommand is called"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"public class ListCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"    private String command;"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":"    public ListCommand(String command) {"},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":"        this.command \u003d command;"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"    public String executeCommand(Ui ui, Storage storage, ArrayList\u003cTask\u003e taskList) throws DukeException {"},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":"        return ui.showList(taskList);"},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":19,"author":{"gitId":"shaelynl"},"content":"    public boolean isRunning() {"},{"lineNumber":20,"author":{"gitId":"shaelynl"},"content":"        return true;"},{"lineNumber":21,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"shaelynl"},"content":"}"}],"authorContributionMap":{"shaelynl":22}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":" * A GUI for MisterDuke using FXML."},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":"    private MisterDuke MrDuke \u003d new MisterDuke();"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":"    public void start(Stage stage) {"},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"view/MainWindow.fxml\"));"},{"lineNumber":19,"author":{"gitId":"shaelynl"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":20,"author":{"gitId":"shaelynl"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":21,"author":{"gitId":"shaelynl"},"content":"            stage.setScene(scene);"},{"lineNumber":22,"author":{"gitId":"shaelynl"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(MrDuke);"},{"lineNumber":23,"author":{"gitId":"shaelynl"},"content":"            stage.show();"},{"lineNumber":24,"author":{"gitId":"shaelynl"},"content":"        } catch (IOException e) {"},{"lineNumber":25,"author":{"gitId":"shaelynl"},"content":"            e.printStackTrace();"},{"lineNumber":26,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"shaelynl"},"content":"}"}],"authorContributionMap":{"shaelynl":28}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":"import javafx.scene.control.Button;"},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":"    @FXML"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":"    private VBox dialogContainer;"},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":"    private TextField userInput;"},{"lineNumber":19,"author":{"gitId":"shaelynl"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"shaelynl"},"content":"    private Button sendButton;"},{"lineNumber":21,"author":{"gitId":"shaelynl"},"content":"    private MisterDuke duke;"},{"lineNumber":22,"author":{"gitId":"shaelynl"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"images/DaUser.png\"));"},{"lineNumber":23,"author":{"gitId":"shaelynl"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"images/DaDuke.png\"));"},{"lineNumber":24,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":25,"author":{"gitId":"shaelynl"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"shaelynl"},"content":"    public void initialize() {"},{"lineNumber":27,"author":{"gitId":"shaelynl"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":28,"author":{"gitId":"shaelynl"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":29,"author":{"gitId":"shaelynl"},"content":"        String welcomeMessage \u003d ui.showWelcome();"},{"lineNumber":30,"author":{"gitId":"shaelynl"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(welcomeMessage, dukeImage));"},{"lineNumber":31,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":33,"author":{"gitId":"shaelynl"},"content":"    public void setDuke(MisterDuke d) {"},{"lineNumber":34,"author":{"gitId":"shaelynl"},"content":"        duke \u003d d;"},{"lineNumber":35,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":37,"author":{"gitId":"shaelynl"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"shaelynl"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":39,"author":{"gitId":"shaelynl"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":40,"author":{"gitId":"shaelynl"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"shaelynl"},"content":"    @FXML"},{"lineNumber":42,"author":{"gitId":"shaelynl"},"content":"    private void handleUserInput() {"},{"lineNumber":43,"author":{"gitId":"shaelynl"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":44,"author":{"gitId":"shaelynl"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":45,"author":{"gitId":"shaelynl"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":46,"author":{"gitId":"shaelynl"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":47,"author":{"gitId":"shaelynl"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":48,"author":{"gitId":"shaelynl"},"content":"        );"},{"lineNumber":49,"author":{"gitId":"shaelynl"},"content":"        userInput.clear();"},{"lineNumber":50,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"shaelynl"},"content":"}"}],"authorContributionMap":{"shaelynl":51}},{"path":"src/main/java/MisterDuke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":" * Mister Duke is an interactive chat bot that"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":" * keep track of your tasks, deadlines and events"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":" * in a list."},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":" * Some things Mister Duke is good at:"},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":" * - listing the tasks on your list"},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":" * - marking specified tasks as done"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":" * - removing specified tasks from the list"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":" * - find matching tasks given a search word/phrase"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":" *"},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":" * @author Shaelyn"},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":" * @version CS2103T 20/21 Semester 2, Individual Project"},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":19,"author":{"gitId":"shaelynl"},"content":"public class MisterDuke {"},{"lineNumber":20,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":21,"author":{"gitId":"shaelynl"},"content":"    private static Ui ui \u003d new Ui();"},{"lineNumber":22,"author":{"gitId":"shaelynl"},"content":"    private static Storage storage;"},{"lineNumber":23,"author":{"gitId":"shaelynl"},"content":"    private ArrayList\u003cTask\u003e tasks;"},{"lineNumber":24,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":25,"author":{"gitId":"shaelynl"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"shaelynl"},"content":"     * Constructor method."},{"lineNumber":27,"author":{"gitId":"shaelynl"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"shaelynl"},"content":"    public MisterDuke() {"},{"lineNumber":29,"author":{"gitId":"shaelynl"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"shaelynl"},"content":"            this.storage \u003d new Storage(\"duke.txt\");"},{"lineNumber":31,"author":{"gitId":"shaelynl"},"content":"            tasks \u003d new ArrayList\u003cTask\u003e(storage.load());"},{"lineNumber":32,"author":{"gitId":"shaelynl"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":33,"author":{"gitId":"shaelynl"},"content":"            ui.showDefaultError(e);"},{"lineNumber":34,"author":{"gitId":"shaelynl"},"content":"            tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":35,"author":{"gitId":"shaelynl"},"content":"        } catch (IOException e) {"},{"lineNumber":36,"author":{"gitId":"shaelynl"},"content":"            e.printStackTrace();"},{"lineNumber":37,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":40,"author":{"gitId":"shaelynl"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"shaelynl"},"content":"     * Mister Duke\u0027s response to user input."},{"lineNumber":42,"author":{"gitId":"shaelynl"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"shaelynl"},"content":"    public String getResponse(String input) {"},{"lineNumber":44,"author":{"gitId":"shaelynl"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"shaelynl"},"content":"            Command cmd \u003d Parser.parse(input);"},{"lineNumber":46,"author":{"gitId":"shaelynl"},"content":"            return cmd.executeCommand(ui, storage, tasks);"},{"lineNumber":47,"author":{"gitId":"shaelynl"},"content":"        } catch (DukeException e) {"},{"lineNumber":48,"author":{"gitId":"shaelynl"},"content":"            return e.getMessage();"},{"lineNumber":49,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"shaelynl"},"content":"}"}],"authorContributionMap":{"shaelynl":51}},{"path":"src/main/java/Note.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":" * The Note class is a child class of the Task Class,"},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":" * it specifies the task as an Event using [N]"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":"class Note extends Task {"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"    public Note(String description) {"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":"        return \"[N]\" + super.toString();"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"}"}],"authorContributionMap":{"shaelynl":15}},{"path":"src/main/java/NoteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":" * When the user inputs a Note task, the NoteCommand is returned."},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"public class NoteCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"    private String command;"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":"    public NoteCommand(String command){"},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":"        this.command \u003d command;"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"    public String executeCommand(Ui ui, Storage storage, ArrayList\u003cTask\u003e taskList) throws DukeException {"},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":"        String input \u003d command.trim();"},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"        if (input.equalsIgnoreCase(\"note\")) {"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":"            throw new DukeException(\"Could you please specify your note? :)\");"},{"lineNumber":19,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"shaelynl"},"content":"        String[] strArray \u003d input.split(\" \", 2);"},{"lineNumber":21,"author":{"gitId":"shaelynl"},"content":"        String cmd \u003d strArray[0];"},{"lineNumber":22,"author":{"gitId":"shaelynl"},"content":"        String cmdTask \u003d strArray[1];"},{"lineNumber":23,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":24,"author":{"gitId":"shaelynl"},"content":"        Note tempTask \u003d new Note(cmdTask);"},{"lineNumber":25,"author":{"gitId":"shaelynl"},"content":"        taskList.add(tempTask);"},{"lineNumber":26,"author":{"gitId":"shaelynl"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"shaelynl"},"content":"            storage.save(taskList);"},{"lineNumber":28,"author":{"gitId":"shaelynl"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"shaelynl"},"content":"            e.printStackTrace();"},{"lineNumber":30,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"shaelynl"},"content":"        return ui.showTaskAdded(tempTask);"},{"lineNumber":32,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":34,"author":{"gitId":"shaelynl"},"content":"    public boolean isRunning() {"},{"lineNumber":35,"author":{"gitId":"shaelynl"},"content":"        return true;"},{"lineNumber":36,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"shaelynl"},"content":"}"}],"authorContributionMap":{"shaelynl":37}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":" * The Parser class takes in the user input, parses it,"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":" * then display the corresponding message from Mister Duke"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"public class Parser {"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"    private final Ui ui;"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":"    private Storage storage;"},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":"    private ArrayList\u003cTask\u003e taskList;"},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"    public Parser(Ui ui, Storage storage, ArrayList\u003cTask\u003e taskList) throws DukeException {"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":"        this.ui \u003d ui;"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":"        this.storage \u003d storage;"},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"shaelynl"},"content":"     * The parse function takes in the user\u0027s input (command) and"},{"lineNumber":20,"author":{"gitId":"shaelynl"},"content":"     * returns a class that corresponds to the command"},{"lineNumber":21,"author":{"gitId":"shaelynl"},"content":"     * @param command user input"},{"lineNumber":22,"author":{"gitId":"shaelynl"},"content":"     * @return class that corresponds to the command"},{"lineNumber":23,"author":{"gitId":"shaelynl"},"content":"     * @throws DukeException when the user input is wrong/incomplete"},{"lineNumber":24,"author":{"gitId":"shaelynl"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"shaelynl"},"content":"    public static Command parse(String command) throws DukeException {"},{"lineNumber":26,"author":{"gitId":"shaelynl"},"content":"        String input \u003d command.trim();"},{"lineNumber":27,"author":{"gitId":"shaelynl"},"content":"        String[] strArray \u003d input.split(\" \", 2);"},{"lineNumber":28,"author":{"gitId":"shaelynl"},"content":"        String cmd \u003d strArray[0].trim();"},{"lineNumber":29,"author":{"gitId":"shaelynl"},"content":"        assert !cmd.contains(\" \");"},{"lineNumber":30,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":31,"author":{"gitId":"shaelynl"},"content":"        switch (cmd) {"},{"lineNumber":32,"author":{"gitId":"shaelynl"},"content":"            case \"todo\":"},{"lineNumber":33,"author":{"gitId":"shaelynl"},"content":"                return new ToDoCommand(command);"},{"lineNumber":34,"author":{"gitId":"shaelynl"},"content":"            case \"deadline\":"},{"lineNumber":35,"author":{"gitId":"shaelynl"},"content":"                return new DeadlineCommand(command);"},{"lineNumber":36,"author":{"gitId":"shaelynl"},"content":"            case \"event\":"},{"lineNumber":37,"author":{"gitId":"shaelynl"},"content":"                return new EventCommand(command);"},{"lineNumber":38,"author":{"gitId":"shaelynl"},"content":"            case \"list\":"},{"lineNumber":39,"author":{"gitId":"shaelynl"},"content":"                return new ListCommand(command);"},{"lineNumber":40,"author":{"gitId":"shaelynl"},"content":"            case \"done\":"},{"lineNumber":41,"author":{"gitId":"shaelynl"},"content":"                return new DoneCommand(command);"},{"lineNumber":42,"author":{"gitId":"shaelynl"},"content":"            case \"delete\":"},{"lineNumber":43,"author":{"gitId":"shaelynl"},"content":"                return new DeleteCommand(command);"},{"lineNumber":44,"author":{"gitId":"shaelynl"},"content":"            case \"bye\":"},{"lineNumber":45,"author":{"gitId":"shaelynl"},"content":"                return new ExitCommand(command);"},{"lineNumber":46,"author":{"gitId":"shaelynl"},"content":"            case \"find\":"},{"lineNumber":47,"author":{"gitId":"shaelynl"},"content":"                return new FindCommand(command);"},{"lineNumber":48,"author":{"gitId":"shaelynl"},"content":"            case \"note\":"},{"lineNumber":49,"author":{"gitId":"shaelynl"},"content":"                return new NoteCommand(command);"},{"lineNumber":50,"author":{"gitId":"shaelynl"},"content":"            default:"},{"lineNumber":51,"author":{"gitId":"shaelynl"},"content":"                throw new DukeException(\"Oops! I\u0027m sorry but I don\u0027t know what you mean by that :(\");"},{"lineNumber":52,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"shaelynl"},"content":"}"}],"authorContributionMap":{"shaelynl":54}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"import java.util.Date;"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":" * The Storage class is for loading and saving the list of tasks"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":" * to the local hard disk."},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":"public class Storage {"},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"    private File txtFile;"},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"    public Storage(String filePath) throws IOException {"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":"        this.txtFile \u003d new File(filePath);"},{"lineNumber":19,"author":{"gitId":"shaelynl"},"content":"        if (txtFile.createNewFile()) {"},{"lineNumber":20,"author":{"gitId":"shaelynl"},"content":"            System.out.println(\"File created!\");"},{"lineNumber":21,"author":{"gitId":"shaelynl"},"content":"        } else {"},{"lineNumber":22,"author":{"gitId":"shaelynl"},"content":"            System.out.println(\"File loaded!\");"},{"lineNumber":23,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":26,"author":{"gitId":"shaelynl"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"shaelynl"},"content":"     * Loads list of tasks from the hard disk into the list of tasks"},{"lineNumber":28,"author":{"gitId":"shaelynl"},"content":"     * @return array list of tasks"},{"lineNumber":29,"author":{"gitId":"shaelynl"},"content":"     * @throws FileNotFoundException when the file cannot be found on the hard disk"},{"lineNumber":30,"author":{"gitId":"shaelynl"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"shaelynl"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {"},{"lineNumber":32,"author":{"gitId":"shaelynl"},"content":"        Scanner sc \u003d new Scanner(this.txtFile);"},{"lineNumber":33,"author":{"gitId":"shaelynl"},"content":"        ArrayList\u003cTask\u003e tasksArrayList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":34,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":35,"author":{"gitId":"shaelynl"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":36,"author":{"gitId":"shaelynl"},"content":"            String tempStr \u003d sc.nextLine();"},{"lineNumber":37,"author":{"gitId":"shaelynl"},"content":"            String checkForTick \u003d tempStr.substring(0, 5);"},{"lineNumber":38,"author":{"gitId":"shaelynl"},"content":"            String cmd \u003d tempStr.substring(7);"},{"lineNumber":39,"author":{"gitId":"shaelynl"},"content":"            String typeOfTask \u003d tempStr.substring(0, 3);"},{"lineNumber":40,"author":{"gitId":"shaelynl"},"content":"            switch(typeOfTask) {"},{"lineNumber":41,"author":{"gitId":"shaelynl"},"content":"                case \"[T]\":"},{"lineNumber":42,"author":{"gitId":"shaelynl"},"content":"                    ToDo toDoTask \u003d new ToDo(cmd);"},{"lineNumber":43,"author":{"gitId":"shaelynl"},"content":"                    if (!checkForTick.contains(\" \")) {"},{"lineNumber":44,"author":{"gitId":"shaelynl"},"content":"                        toDoTask.markAsDone();"},{"lineNumber":45,"author":{"gitId":"shaelynl"},"content":"                    }"},{"lineNumber":46,"author":{"gitId":"shaelynl"},"content":"                    tasksArrayList.add(toDoTask);"},{"lineNumber":47,"author":{"gitId":"shaelynl"},"content":"                    break;"},{"lineNumber":48,"author":{"gitId":"shaelynl"},"content":"                case \"[D]\":"},{"lineNumber":49,"author":{"gitId":"shaelynl"},"content":"                    String[] strArray \u003d cmd.split(\"by:\", 2);"},{"lineNumber":50,"author":{"gitId":"shaelynl"},"content":"                    String inst \u003d strArray[0].substring(0, strArray[0].length() - 2);"},{"lineNumber":51,"author":{"gitId":"shaelynl"},"content":"                    String date \u003d strArray[1].substring(0, strArray[1].length() - 1).trim();"},{"lineNumber":52,"author":{"gitId":"shaelynl"},"content":"                    try {"},{"lineNumber":53,"author":{"gitId":"shaelynl"},"content":"                        Date deadlineDate \u003d new SimpleDateFormat(\"E MMM dd HH:mm:ss Z yyyy\").parse(date);"},{"lineNumber":54,"author":{"gitId":"shaelynl"},"content":"                        Deadline deadlineTask \u003d new Deadline(inst + \" \", deadlineDate);"},{"lineNumber":55,"author":{"gitId":"shaelynl"},"content":"                        if (!checkForTick.contains(\" \")) {"},{"lineNumber":56,"author":{"gitId":"shaelynl"},"content":"                            deadlineTask.markAsDone();"},{"lineNumber":57,"author":{"gitId":"shaelynl"},"content":"                        }"},{"lineNumber":58,"author":{"gitId":"shaelynl"},"content":"                        tasksArrayList.add(deadlineTask);"},{"lineNumber":59,"author":{"gitId":"shaelynl"},"content":"                    } catch (Exception e) {"},{"lineNumber":60,"author":{"gitId":"shaelynl"},"content":"                        e.getStackTrace();"},{"lineNumber":61,"author":{"gitId":"shaelynl"},"content":"                    }"},{"lineNumber":62,"author":{"gitId":"shaelynl"},"content":"                    break;"},{"lineNumber":63,"author":{"gitId":"shaelynl"},"content":"                case \"[E]\":"},{"lineNumber":64,"author":{"gitId":"shaelynl"},"content":"                    String[] stringArray \u003d cmd.split(\"at:\", 2);"},{"lineNumber":65,"author":{"gitId":"shaelynl"},"content":"                    String instruction \u003d stringArray[0].substring(0, stringArray[0].length() - 2);"},{"lineNumber":66,"author":{"gitId":"shaelynl"},"content":"                    String time \u003d stringArray[1].substring(0, stringArray[1].length() - 1);"},{"lineNumber":67,"author":{"gitId":"shaelynl"},"content":"                    Event eventTask \u003d new Event(instruction + \" \", time);"},{"lineNumber":68,"author":{"gitId":"shaelynl"},"content":"                    if (!checkForTick.contains(\" \")) {"},{"lineNumber":69,"author":{"gitId":"shaelynl"},"content":"                        eventTask.markAsDone();"},{"lineNumber":70,"author":{"gitId":"shaelynl"},"content":"                    }"},{"lineNumber":71,"author":{"gitId":"shaelynl"},"content":"                    tasksArrayList.add(eventTask);"},{"lineNumber":72,"author":{"gitId":"shaelynl"},"content":"                    break;"},{"lineNumber":73,"author":{"gitId":"shaelynl"},"content":"                case \"[N]\":"},{"lineNumber":74,"author":{"gitId":"shaelynl"},"content":"                    Note noteTask \u003d new Note(cmd);"},{"lineNumber":75,"author":{"gitId":"shaelynl"},"content":"                    if (!checkForTick.contains(\" \")) {"},{"lineNumber":76,"author":{"gitId":"shaelynl"},"content":"                        noteTask.markAsDone();"},{"lineNumber":77,"author":{"gitId":"shaelynl"},"content":"                    }"},{"lineNumber":78,"author":{"gitId":"shaelynl"},"content":"                    tasksArrayList.add(noteTask);"},{"lineNumber":79,"author":{"gitId":"shaelynl"},"content":"                    break;"},{"lineNumber":80,"author":{"gitId":"shaelynl"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"shaelynl"},"content":"        sc.close();"},{"lineNumber":83,"author":{"gitId":"shaelynl"},"content":"        return tasksArrayList;"},{"lineNumber":84,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":86,"author":{"gitId":"shaelynl"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"shaelynl"},"content":"     * Saves the list of tasks on to the hard disk after Mister Duke"},{"lineNumber":88,"author":{"gitId":"shaelynl"},"content":"     * has been terminated"},{"lineNumber":89,"author":{"gitId":"shaelynl"},"content":"     * @param taskArrayList list of tasks"},{"lineNumber":90,"author":{"gitId":"shaelynl"},"content":"     * @throws IOException when there is a wrong/incomplete user input"},{"lineNumber":91,"author":{"gitId":"shaelynl"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"shaelynl"},"content":"    public void save(ArrayList\u003cTask\u003e taskArrayList) throws IOException {"},{"lineNumber":93,"author":{"gitId":"shaelynl"},"content":"        FileWriter fwriter \u003d new FileWriter(this.txtFile);"},{"lineNumber":94,"author":{"gitId":"shaelynl"},"content":"        for (Task task : taskArrayList) {"},{"lineNumber":95,"author":{"gitId":"shaelynl"},"content":"            if (task instanceof ToDo) {"},{"lineNumber":96,"author":{"gitId":"shaelynl"},"content":"                fwriter.write(task.toString() + \"\\n\");"},{"lineNumber":97,"author":{"gitId":"shaelynl"},"content":"            } else if (task instanceof Deadline) {"},{"lineNumber":98,"author":{"gitId":"shaelynl"},"content":"                fwriter.write(task.toString() + \"\\n\");"},{"lineNumber":99,"author":{"gitId":"shaelynl"},"content":"            } else if (task instanceof Event) {"},{"lineNumber":100,"author":{"gitId":"shaelynl"},"content":"                fwriter.write(task.toString() + \"\\n\");"},{"lineNumber":101,"author":{"gitId":"shaelynl"},"content":"            } else {"},{"lineNumber":102,"author":{"gitId":"shaelynl"},"content":"                fwriter.write(task.toString() + \"\\n\");"},{"lineNumber":103,"author":{"gitId":"shaelynl"},"content":"            }"},{"lineNumber":104,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"shaelynl"},"content":"        fwriter.close();"},{"lineNumber":106,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"shaelynl"},"content":"}"}],"authorContributionMap":{"shaelynl":107}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":" * The Task class is a parent class for ToDo, Deadline and Event"},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":" * whereby each Task has a boolean to indicate whether it has been done"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":"class Task {"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":"    protected String description;"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"    protected boolean isDone;"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":"     * The Task applies to inputs with sufficient information to classify as a todo, deadline"},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":"     * or event task."},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"     * @param description describes the details of a task supplied to the chat bot"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":"    public Task(String description) {"},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"        this.description \u003d description;"},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":"        this.isDone \u003d false;"},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":19,"author":{"gitId":"shaelynl"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"shaelynl"},"content":"     * For a given task, indicate whether it has been done using a space or a tick"},{"lineNumber":21,"author":{"gitId":"shaelynl"},"content":"     * @return if the task has been done, return a tick, else return a space"},{"lineNumber":22,"author":{"gitId":"shaelynl"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"shaelynl"},"content":"    public String getStatusIcon() {"},{"lineNumber":24,"author":{"gitId":"shaelynl"},"content":"        return (isDone ? \"\\u2713\" : \" \"); //return tick symbol"},{"lineNumber":25,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":27,"author":{"gitId":"shaelynl"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"shaelynl"},"content":"     * For a given task, if it is done, mark it as done by changing the boolean isDone to true"},{"lineNumber":29,"author":{"gitId":"shaelynl"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"shaelynl"},"content":"    public void markAsDone() {"},{"lineNumber":31,"author":{"gitId":"shaelynl"},"content":"        isDone \u003d true;"},{"lineNumber":32,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":34,"author":{"gitId":"shaelynl"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"shaelynl"},"content":"    public String toString() {"},{"lineNumber":36,"author":{"gitId":"shaelynl"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":37,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"shaelynl"},"content":"}"}],"authorContributionMap":{"shaelynl":38}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":" * The ToDo class is a child class of the Task Class,"},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":" * it specifies the task as a ToDo using [T]"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":"class ToDo extends Task {"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":"    public ToDo(String description) {"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":"}"}],"authorContributionMap":{"shaelynl":14}},{"path":"src/main/java/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":" * When the user inputs a ToDo task, the ToDoCommand is returned"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"public class ToDoCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"    private String command;"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":"    public ToDoCommand(String command) {"},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":"        this.command \u003d command;"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"    public String executeCommand(Ui ui, Storage storage, ArrayList\u003cTask\u003e taskList) throws DukeException {"},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":"        String input \u003d command.trim();"},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"        String[] strArray \u003d input.split(\" \", 2);"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":"        String cmd \u003d strArray[0];"},{"lineNumber":19,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":20,"author":{"gitId":"shaelynl"},"content":"        if (input.equalsIgnoreCase(\"todo\")) {"},{"lineNumber":21,"author":{"gitId":"shaelynl"},"content":"            throw new DukeException(\"Could you please specify your task? :)\");"},{"lineNumber":22,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"shaelynl"},"content":"        String cmdTask \u003d strArray[1];"},{"lineNumber":24,"author":{"gitId":"shaelynl"},"content":"        ToDo tempTask \u003d new ToDo(cmdTask);"},{"lineNumber":25,"author":{"gitId":"shaelynl"},"content":"        taskList.add(tempTask);"},{"lineNumber":26,"author":{"gitId":"shaelynl"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"shaelynl"},"content":"            storage.save(taskList);"},{"lineNumber":28,"author":{"gitId":"shaelynl"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"shaelynl"},"content":"            e.printStackTrace();"},{"lineNumber":30,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"shaelynl"},"content":"        return ui.showTaskAdded(tempTask);"},{"lineNumber":32,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":34,"author":{"gitId":"shaelynl"},"content":"    public boolean isRunning() {"},{"lineNumber":35,"author":{"gitId":"shaelynl"},"content":"        return true;"},{"lineNumber":36,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"shaelynl"},"content":"}"}],"authorContributionMap":{"shaelynl":37}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":"/** The user interface class is for printing Mister Duke\u0027s"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":" * responses onto the terminal."},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":" *"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":"     * Prints horizontal line to partition Mister Duke\u0027s messages"},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"    public void printLine() {"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":"        System.out.println(\"    _________________________________________________\");"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"     * Reads user\u0027s input"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":"     * @return user\u0027s input as String"},{"lineNumber":19,"author":{"gitId":"shaelynl"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"shaelynl"},"content":"    public String readCommand() {"},{"lineNumber":21,"author":{"gitId":"shaelynl"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":22,"author":{"gitId":"shaelynl"},"content":"        while (sc.hasNext()) {"},{"lineNumber":23,"author":{"gitId":"shaelynl"},"content":"            return sc.nextLine();"},{"lineNumber":24,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"shaelynl"},"content":"        return \"\";"},{"lineNumber":26,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":28,"author":{"gitId":"shaelynl"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"shaelynl"},"content":"     * Displays Mister Duke\u0027s welcome message"},{"lineNumber":30,"author":{"gitId":"shaelynl"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"shaelynl"},"content":"    public String showWelcome() {"},{"lineNumber":32,"author":{"gitId":"shaelynl"},"content":"        return \"Hello! Nice to meet you, I\u0027m Mister Duke. What can I do for you today?\";"},{"lineNumber":33,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":35,"author":{"gitId":"shaelynl"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"shaelynl"},"content":"     * Displays Mister Duke\u0027s goodbye message"},{"lineNumber":37,"author":{"gitId":"shaelynl"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"shaelynl"},"content":"    public String showGoodbye() {"},{"lineNumber":39,"author":{"gitId":"shaelynl"},"content":"        return \"Bye. Hope to see you again soon! :)\";"},{"lineNumber":40,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":42,"author":{"gitId":"shaelynl"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"shaelynl"},"content":"     * Displays number of tasks in the list"},{"lineNumber":44,"author":{"gitId":"shaelynl"},"content":"     * @param numOfTasks in the list"},{"lineNumber":45,"author":{"gitId":"shaelynl"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"shaelynl"},"content":"    public String showTaskList(int numOfTasks) {"},{"lineNumber":47,"author":{"gitId":"shaelynl"},"content":"        if (numOfTasks \u003d\u003d 1) {"},{"lineNumber":48,"author":{"gitId":"shaelynl"},"content":"            return \"Now you have \" + numOfTasks + \" task in the list.\";"},{"lineNumber":49,"author":{"gitId":"shaelynl"},"content":"        } else {"},{"lineNumber":50,"author":{"gitId":"shaelynl"},"content":"            return \"Now you have \" + numOfTasks + \" tasks in the list.\";"},{"lineNumber":51,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":54,"author":{"gitId":"shaelynl"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"shaelynl"},"content":"     * Informs user that the task input has been added to the list"},{"lineNumber":56,"author":{"gitId":"shaelynl"},"content":"     * @param task specified by user that needs to be added to the list"},{"lineNumber":57,"author":{"gitId":"shaelynl"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"shaelynl"},"content":"    public String showTaskAdded(Task task) {"},{"lineNumber":59,"author":{"gitId":"shaelynl"},"content":"        return \"Got it. I\u0027ve added this task: \\n\" +"},{"lineNumber":60,"author":{"gitId":"shaelynl"},"content":"                \"  \" + task.toString();"},{"lineNumber":61,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":63,"author":{"gitId":"shaelynl"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"shaelynl"},"content":"     * Indicates that the specified task has been completed"},{"lineNumber":65,"author":{"gitId":"shaelynl"},"content":"     * @param task specified by user that has been completed"},{"lineNumber":66,"author":{"gitId":"shaelynl"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"shaelynl"},"content":"    public String showTaskDone(Task task) {"},{"lineNumber":68,"author":{"gitId":"shaelynl"},"content":"        return \"Nice! I\u0027ve marked this task as done: \\n\" +"},{"lineNumber":69,"author":{"gitId":"shaelynl"},"content":"                \"  \" + task.toString();"},{"lineNumber":70,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":72,"author":{"gitId":"shaelynl"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"shaelynl"},"content":"     * Lists the tasks"},{"lineNumber":74,"author":{"gitId":"shaelynl"},"content":"     * @param tasksArray array list of tasks"},{"lineNumber":75,"author":{"gitId":"shaelynl"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"shaelynl"},"content":"    public String showList(ArrayList\u003cTask\u003e tasksArray) {"},{"lineNumber":77,"author":{"gitId":"shaelynl"},"content":"        if (tasksArray.isEmpty()) {"},{"lineNumber":78,"author":{"gitId":"shaelynl"},"content":"            return \"Your list is empty, there is nothing to do. Yay!\";"},{"lineNumber":79,"author":{"gitId":"shaelynl"},"content":"        } else {"},{"lineNumber":80,"author":{"gitId":"shaelynl"},"content":"            StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list: \\n\");"},{"lineNumber":81,"author":{"gitId":"shaelynl"},"content":"            for (int i \u003d 0; i \u003c tasksArray.size(); i++) {"},{"lineNumber":82,"author":{"gitId":"shaelynl"},"content":"//                sb.append(String.format(\"%d. %s\", (i + 1), tasksArray.get(i).toString()) + \"\\n\");"},{"lineNumber":83,"author":{"gitId":"shaelynl"},"content":"                sb.append(String.valueOf(i + 1) + \". \" + tasksArray.get(i).toString() + \"\\n\");"},{"lineNumber":84,"author":{"gitId":"shaelynl"},"content":"                System.out.println(sb.toString());"},{"lineNumber":85,"author":{"gitId":"shaelynl"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"shaelynl"},"content":"            return sb.toString();"},{"lineNumber":87,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":90,"author":{"gitId":"shaelynl"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"shaelynl"},"content":"     * Informs user that the specified task has been removed from the list"},{"lineNumber":92,"author":{"gitId":"shaelynl"},"content":"     * @param tasksArray array list of tasks"},{"lineNumber":93,"author":{"gitId":"shaelynl"},"content":"     * @param commandNumber the task in the list that will be removed"},{"lineNumber":94,"author":{"gitId":"shaelynl"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"shaelynl"},"content":"    public String showTaskDelete(ArrayList\u003cTask\u003e tasksArray, String commandNumber) {"},{"lineNumber":96,"author":{"gitId":"shaelynl"},"content":"        if (tasksArray.isEmpty()) {"},{"lineNumber":97,"author":{"gitId":"shaelynl"},"content":"            return \"Oops! You have no tasks to delete.\";"},{"lineNumber":98,"author":{"gitId":"shaelynl"},"content":"        } else {"},{"lineNumber":99,"author":{"gitId":"shaelynl"},"content":"            int cmdNum \u003d Integer.parseInt(commandNumber); //strArray[1]"},{"lineNumber":100,"author":{"gitId":"shaelynl"},"content":"            String deletedTask \u003d tasksArray.get(cmdNum - 1).toString();"},{"lineNumber":101,"author":{"gitId":"shaelynl"},"content":"            tasksArray.remove(cmdNum - 1);"},{"lineNumber":102,"author":{"gitId":"shaelynl"},"content":"            return \"Noted. I\u0027ve removed this task: \\n\" +"},{"lineNumber":103,"author":{"gitId":"shaelynl"},"content":"                    \"  \" + deletedTask;"},{"lineNumber":104,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":107,"author":{"gitId":"shaelynl"},"content":"    /**"},{"lineNumber":108,"author":{"gitId":"shaelynl"},"content":"     * Informs the user of wrong/incomplete input"},{"lineNumber":109,"author":{"gitId":"shaelynl"},"content":"     * @param e error message that specifies wrong/incomplete input"},{"lineNumber":110,"author":{"gitId":"shaelynl"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"shaelynl"},"content":"    public String showDefaultError(Exception e) {"},{"lineNumber":112,"author":{"gitId":"shaelynl"},"content":"        return e.getMessage();"},{"lineNumber":113,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":115,"author":{"gitId":"shaelynl"},"content":"    public String showOutOfBounds() {"},{"lineNumber":116,"author":{"gitId":"shaelynl"},"content":"        return \"Oops! You don\u0027t have that many tasks\";"},{"lineNumber":117,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":119,"author":{"gitId":"shaelynl"},"content":"    public String showMatchingItems(ArrayList\u003cTask\u003e tasksArray) {"},{"lineNumber":120,"author":{"gitId":"shaelynl"},"content":"        if (tasksArray.isEmpty()) {"},{"lineNumber":121,"author":{"gitId":"shaelynl"},"content":"            return \"Oh no! There are no matching tasks :(\";"},{"lineNumber":122,"author":{"gitId":"shaelynl"},"content":"        } else {"},{"lineNumber":123,"author":{"gitId":"shaelynl"},"content":"            StringBuilder sb \u003d new StringBuilder(\"Here are the matching tasks in your list: \\n\");"},{"lineNumber":124,"author":{"gitId":"shaelynl"},"content":"            for (int i \u003d 0; i \u003c tasksArray.size(); i++) {"},{"lineNumber":125,"author":{"gitId":"shaelynl"},"content":"//                sb.append(String.format(\"%d. %s\", (i + 1), tasksArray.get(i).toString()) + \"\\n\");"},{"lineNumber":126,"author":{"gitId":"shaelynl"},"content":"                sb.append(String.valueOf(i + 1) + \". \" + tasksArray.get(i).toString() + \"\\n\");"},{"lineNumber":127,"author":{"gitId":"shaelynl"},"content":"            }"},{"lineNumber":128,"author":{"gitId":"shaelynl"},"content":"            return sb.toString();"},{"lineNumber":129,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"shaelynl"},"content":"}"},{"lineNumber":132,"author":{"gitId":"shaelynl"},"content":""}],"authorContributionMap":{"shaelynl":132}},{"path":"src/main/java/build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"package main.java"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":"plugins {"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":"    id \u0027java\u0027"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":"    id \u0027application\u0027"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":"    id \u0027base\u0027"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.7\u0027"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":"}"},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":"repositories {"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"    mavenCentral()"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":"    jcenter()"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":"}"},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":"javafx {"},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":"    version \u003d \u002711.0.2\u0027"},{"lineNumber":19,"author":{"gitId":"shaelynl"},"content":"}"},{"lineNumber":20,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":21,"author":{"gitId":"shaelynl"},"content":"application {"},{"lineNumber":22,"author":{"gitId":"shaelynl"},"content":"    mainClassName \u003d \u0027com.gradle.tutorial.FizzBuzzProcessor\u0027"},{"lineNumber":23,"author":{"gitId":"shaelynl"},"content":"}"},{"lineNumber":24,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":25,"author":{"gitId":"shaelynl"},"content":"run {"},{"lineNumber":26,"author":{"gitId":"shaelynl"},"content":"    enableAssertions \u003d true"},{"lineNumber":27,"author":{"gitId":"shaelynl"},"content":"}"},{"lineNumber":28,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":29,"author":{"gitId":"shaelynl"},"content":"dependencies {"},{"lineNumber":30,"author":{"gitId":"shaelynl"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":31,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":32,"author":{"gitId":"shaelynl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":33,"author":{"gitId":"shaelynl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":34,"author":{"gitId":"shaelynl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":35,"author":{"gitId":"shaelynl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":36,"author":{"gitId":"shaelynl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":37,"author":{"gitId":"shaelynl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":38,"author":{"gitId":"shaelynl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":39,"author":{"gitId":"shaelynl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":40,"author":{"gitId":"shaelynl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":41,"author":{"gitId":"shaelynl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":42,"author":{"gitId":"shaelynl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":43,"author":{"gitId":"shaelynl"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":44,"author":{"gitId":"shaelynl"},"content":"    classpath \u0027com.github.jengelman.gradle.plugins:shadow:2.0.1\u0027"},{"lineNumber":45,"author":{"gitId":"shaelynl"},"content":"}"}],"authorContributionMap":{"shaelynl":45}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":"\u003c?import javafx.geometry.*?\u003e"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":"\u003c?import javafx.scene.control.*?\u003e"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":"\u003c?import javafx.scene.image.*?\u003e"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":"\u003c?import javafx.scene.layout.*?\u003e"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"\u003c?import javafx.scene.text.*?\u003e"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" spacing\u003d\"10.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.2\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" /\u003e"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":"    \u003c/children\u003e"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":"  \u003cpadding\u003e"},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":"  \u003c/padding\u003e"},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"shaelynl":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":"  \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":"      \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":"      \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":"  \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"shaelynl"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"shaelynl":19}},{"path":"src/test/java/duke/MisterDuke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"//import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":"//"},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":"//"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":"//class ToDoTest {"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":"//    @Test"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"//    public void testToDoString(){"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"//        ToDo toDoTask \u003d new ToDo(\"read book\");"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":"//        assertEquals(\"[T][ ] read book\", toDoTask.toString());"},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":"//    }"},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":"//}"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":"//"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":"//class EventTest {"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":"//    @Test"},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":"//    public void testEventString() {"},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":"//        Event eventTask \u003d new Event(\"proj meeting \", \" 2pm\");"},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"//        assertEquals(\"[E][ ] proj meeting (at: 2pm)\", eventTask.toString());"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":"//    }"},{"lineNumber":19,"author":{"gitId":"shaelynl"},"content":"//}"},{"lineNumber":20,"author":{"gitId":"shaelynl"},"content":"//"},{"lineNumber":21,"author":{"gitId":"shaelynl"},"content":"//"}],"authorContributionMap":{"shaelynl":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":"deadline return book /by Monday"},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":"event project meeting /at Tues 2-4pm"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":"list"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"done 3"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"list"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":"bye"}],"authorContributionMap":{"shaelynl":9}}]
