[{"path":"src/main/java/DukeLevel.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":"import java.util.Scanner;"},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":" * The DukeLevel class is an interactive chat bot that can:"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":" * - add items to a list"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":" * - display a list of items which were previously added"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":" * - mark items in the list as done"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":" * - remove items from the list"},{"lineNumber":10,"author":{"gitId":"shaelynl"},"content":" * - throw exceptions if the input is incorrect"},{"lineNumber":11,"author":{"gitId":"shaelynl"},"content":" *"},{"lineNumber":12,"author":{"gitId":"shaelynl"},"content":" * @author Shaelyn"},{"lineNumber":13,"author":{"gitId":"shaelynl"},"content":" * @version CS2103T 20/21 Semester 2, Individual Project"},{"lineNumber":14,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":15,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":16,"author":{"gitId":"shaelynl"},"content":"public class DukeLevel {"},{"lineNumber":17,"author":{"gitId":"shaelynl"},"content":"    public static void main(String[] args) {"},{"lineNumber":18,"author":{"gitId":"shaelynl"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":19,"author":{"gitId":"shaelynl"},"content":"        String line \u003d \"    _________________________________________________\";"},{"lineNumber":20,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":21,"author":{"gitId":"shaelynl"},"content":"        System.out.println(line);"},{"lineNumber":22,"author":{"gitId":"shaelynl"},"content":"        System.out.println(\"     Hello! I\u0027m Duke :)\");"},{"lineNumber":23,"author":{"gitId":"shaelynl"},"content":"        System.out.println(\"     What can I do for you?\");"},{"lineNumber":24,"author":{"gitId":"shaelynl"},"content":"        System.out.println(line);"},{"lineNumber":25,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":26,"author":{"gitId":"shaelynl"},"content":"        ArrayList\u003cTask\u003e tasksArray \u003d new ArrayList\u003c\u003e();"},{"lineNumber":27,"author":{"gitId":"shaelynl"},"content":"        int count \u003d 0;"},{"lineNumber":28,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":29,"author":{"gitId":"shaelynl"},"content":"        while (sc.hasNext()) {"},{"lineNumber":30,"author":{"gitId":"shaelynl"},"content":"            try {"},{"lineNumber":31,"author":{"gitId":"shaelynl"},"content":"                String input \u003d sc.nextLine().trim();"},{"lineNumber":32,"author":{"gitId":"shaelynl"},"content":"                String[] strArray \u003d input.split(\" \", 2);"},{"lineNumber":33,"author":{"gitId":"shaelynl"},"content":"                String cmd \u003d strArray[0];"},{"lineNumber":34,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":35,"author":{"gitId":"shaelynl"},"content":"                if (input.equalsIgnoreCase(\"todo\") || input.equalsIgnoreCase(\"deadline\") || input.equalsIgnoreCase(\"event\")) {"},{"lineNumber":36,"author":{"gitId":"shaelynl"},"content":"                    throw new DukeException(\"Uh oh! There is nothing to do.\");"},{"lineNumber":37,"author":{"gitId":"shaelynl"},"content":"                }"},{"lineNumber":38,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":39,"author":{"gitId":"shaelynl"},"content":"                if (input.equalsIgnoreCase(\"bye\")) {"},{"lineNumber":40,"author":{"gitId":"shaelynl"},"content":"                    System.out.println(line);"},{"lineNumber":41,"author":{"gitId":"shaelynl"},"content":"                    System.out.println(\"     Bye. Hope to see you again soon! :)\");"},{"lineNumber":42,"author":{"gitId":"shaelynl"},"content":"                    System.out.println(line);"},{"lineNumber":43,"author":{"gitId":"shaelynl"},"content":"                    break;"},{"lineNumber":44,"author":{"gitId":"shaelynl"},"content":"                } else if (input.equalsIgnoreCase(\"list\")) {"},{"lineNumber":45,"author":{"gitId":"shaelynl"},"content":"                    System.out.println(line);"},{"lineNumber":46,"author":{"gitId":"shaelynl"},"content":"                    if (tasksArray.isEmpty()) {"},{"lineNumber":47,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(\"     Your list is empty, there is nothing to do. Yay!\");"},{"lineNumber":48,"author":{"gitId":"shaelynl"},"content":"                    } else {"},{"lineNumber":49,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(\"     Here are the tasks in your list:\");"},{"lineNumber":50,"author":{"gitId":"shaelynl"},"content":"                        for (int i \u003d 0; i \u003c count; i++) {"},{"lineNumber":51,"author":{"gitId":"shaelynl"},"content":"                            System.out.println(\"      \" + (i + 1) + \".\" + tasksArray.get(i).toString());"},{"lineNumber":52,"author":{"gitId":"shaelynl"},"content":"                        }"},{"lineNumber":53,"author":{"gitId":"shaelynl"},"content":"                    }"},{"lineNumber":54,"author":{"gitId":"shaelynl"},"content":"                    System.out.println(line);"},{"lineNumber":55,"author":{"gitId":"shaelynl"},"content":"                } else if (cmd.equalsIgnoreCase(\"done\")) {"},{"lineNumber":56,"author":{"gitId":"shaelynl"},"content":"                    int cmdNum \u003d Integer.parseInt(strArray[1]);"},{"lineNumber":57,"author":{"gitId":"shaelynl"},"content":"                    tasksArray.get(cmdNum - 1).markAsDone();"},{"lineNumber":58,"author":{"gitId":"shaelynl"},"content":"                    System.out.println(line);"},{"lineNumber":59,"author":{"gitId":"shaelynl"},"content":"                    System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":60,"author":{"gitId":"shaelynl"},"content":"                    System.out.println(\"       \" + tasksArray.get(cmdNum - 1).toString());"},{"lineNumber":61,"author":{"gitId":"shaelynl"},"content":"                    System.out.println(line);"},{"lineNumber":62,"author":{"gitId":"shaelynl"},"content":"                } else if (cmd.equalsIgnoreCase(\"delete\")) {"},{"lineNumber":63,"author":{"gitId":"shaelynl"},"content":"                    int cmdNum \u003d Integer.parseInt(strArray[1]);"},{"lineNumber":64,"author":{"gitId":"shaelynl"},"content":"                    System.out.println(line);"},{"lineNumber":65,"author":{"gitId":"shaelynl"},"content":"                    System.out.println(\"     Noted. I\u0027ve removed this task: \");"},{"lineNumber":66,"author":{"gitId":"shaelynl"},"content":"                    System.out.println(\"       \" + tasksArray.get(cmdNum - 1).toString());"},{"lineNumber":67,"author":{"gitId":"shaelynl"},"content":"                    tasksArray.remove(cmdNum - 1);"},{"lineNumber":68,"author":{"gitId":"shaelynl"},"content":"                    count--;"},{"lineNumber":69,"author":{"gitId":"shaelynl"},"content":"                    if (count \u003d\u003d 1) {"},{"lineNumber":70,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(\"     Now you have \" + count + \" task in the list.\");"},{"lineNumber":71,"author":{"gitId":"shaelynl"},"content":"                    } else {"},{"lineNumber":72,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(\"     Now you have \" + count + \" tasks in the list.\");"},{"lineNumber":73,"author":{"gitId":"shaelynl"},"content":"                    }"},{"lineNumber":74,"author":{"gitId":"shaelynl"},"content":"                    System.out.println(line);"},{"lineNumber":75,"author":{"gitId":"shaelynl"},"content":"                } else {"},{"lineNumber":76,"author":{"gitId":"shaelynl"},"content":"                    if (cmd.equalsIgnoreCase(\"todo\")) {"},{"lineNumber":77,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(line);"},{"lineNumber":78,"author":{"gitId":"shaelynl"},"content":"                        String cmdTask \u003d strArray[1];"},{"lineNumber":79,"author":{"gitId":"shaelynl"},"content":"                        ToDo tempTask \u003d new ToDo(cmdTask);"},{"lineNumber":80,"author":{"gitId":"shaelynl"},"content":"                        tasksArray.add(tempTask);"},{"lineNumber":81,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(\"     Got it. I\u0027ve added this task: \");"},{"lineNumber":82,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(\"       \" + tempTask.toString());"},{"lineNumber":83,"author":{"gitId":"shaelynl"},"content":"                    } else if (cmd.equalsIgnoreCase(\"deadline\")) {"},{"lineNumber":84,"author":{"gitId":"shaelynl"},"content":"                        String cmdTask \u003d strArray[1];"},{"lineNumber":85,"author":{"gitId":"shaelynl"},"content":"                        if (!strArray[1].contains(\"/by\")) {"},{"lineNumber":86,"author":{"gitId":"shaelynl"},"content":"                            throw new DukeException(\"Uh oh! Please specify a timing using /by.\");"},{"lineNumber":87,"author":{"gitId":"shaelynl"},"content":"                        }"},{"lineNumber":88,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(line);"},{"lineNumber":89,"author":{"gitId":"shaelynl"},"content":"                        String[] tempStrArray \u003d cmdTask.split(\"/by\", 2);"},{"lineNumber":90,"author":{"gitId":"shaelynl"},"content":"                        Deadline tempTask \u003d new Deadline(tempStrArray[0], tempStrArray[1]);"},{"lineNumber":91,"author":{"gitId":"shaelynl"},"content":"                        tasksArray.add(tempTask);"},{"lineNumber":92,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(\"     Got it. I\u0027ve added this task: \");"},{"lineNumber":93,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(\"       \" + tempTask.toString());"},{"lineNumber":94,"author":{"gitId":"shaelynl"},"content":"                    } else if (cmd.equalsIgnoreCase(\"event\")) {"},{"lineNumber":95,"author":{"gitId":"shaelynl"},"content":"                        String cmdTask \u003d strArray[1];"},{"lineNumber":96,"author":{"gitId":"shaelynl"},"content":"                        if (!strArray[1].contains(\"/at\")) {"},{"lineNumber":97,"author":{"gitId":"shaelynl"},"content":"                            throw new DukeException(\"Uh oh! Please specify a timing using /at.\");"},{"lineNumber":98,"author":{"gitId":"shaelynl"},"content":"                        }"},{"lineNumber":99,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(line);"},{"lineNumber":100,"author":{"gitId":"shaelynl"},"content":"                        String[] tempStrArray \u003d cmdTask.split(\"/at\", 2);"},{"lineNumber":101,"author":{"gitId":"shaelynl"},"content":"                        Event tempTask \u003d new Event(tempStrArray[0], tempStrArray[1]);"},{"lineNumber":102,"author":{"gitId":"shaelynl"},"content":"                        tasksArray.add(tempTask);"},{"lineNumber":103,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(\"     Got it. I\u0027ve added this task: \");"},{"lineNumber":104,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(\"       \" + tempTask.toString());"},{"lineNumber":105,"author":{"gitId":"shaelynl"},"content":"                    } else {"},{"lineNumber":106,"author":{"gitId":"shaelynl"},"content":"                        throw new DukeException(\"I\u0027m sorry but I don\u0027t know what this means :(\");"},{"lineNumber":107,"author":{"gitId":"shaelynl"},"content":"                    }"},{"lineNumber":108,"author":{"gitId":"shaelynl"},"content":"                    count++;"},{"lineNumber":109,"author":{"gitId":"shaelynl"},"content":"                    if (count \u003d\u003d 1) {"},{"lineNumber":110,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(\"     Now you have \" + count + \" task in the list.\");"},{"lineNumber":111,"author":{"gitId":"shaelynl"},"content":"                    } else {"},{"lineNumber":112,"author":{"gitId":"shaelynl"},"content":"                        System.out.println(\"     Now you have \" + count + \" tasks in the list.\");"},{"lineNumber":113,"author":{"gitId":"shaelynl"},"content":"                    }"},{"lineNumber":114,"author":{"gitId":"shaelynl"},"content":"                    System.out.println(line);"},{"lineNumber":115,"author":{"gitId":"shaelynl"},"content":"                }"},{"lineNumber":116,"author":{"gitId":"shaelynl"},"content":"            } catch (DukeException exception) {"},{"lineNumber":117,"author":{"gitId":"shaelynl"},"content":"                System.out.println(line);"},{"lineNumber":118,"author":{"gitId":"shaelynl"},"content":"                System.out.println(\"     \" + exception);"},{"lineNumber":119,"author":{"gitId":"shaelynl"},"content":"                System.out.println(line);"},{"lineNumber":120,"author":{"gitId":"shaelynl"},"content":"            }"},{"lineNumber":121,"author":{"gitId":"shaelynl"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"shaelynl"},"content":"}"},{"lineNumber":124,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":125,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":126,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":127,"author":{"gitId":"shaelynl"},"content":" * The Task class is a parent class for ToDo, Deadline and Event"},{"lineNumber":128,"author":{"gitId":"shaelynl"},"content":" * whereby each Task has a boolean to indicate whether it has been done"},{"lineNumber":129,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":130,"author":{"gitId":"shaelynl"},"content":"class Task {"},{"lineNumber":131,"author":{"gitId":"shaelynl"},"content":"    protected String description;"},{"lineNumber":132,"author":{"gitId":"shaelynl"},"content":"    protected boolean isDone;"},{"lineNumber":133,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":134,"author":{"gitId":"shaelynl"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"shaelynl"},"content":"     * The Task applies to inputs with sufficient information to classify as a todo, deadline"},{"lineNumber":136,"author":{"gitId":"shaelynl"},"content":"     * or event task."},{"lineNumber":137,"author":{"gitId":"shaelynl"},"content":"     * @param description describes the details of a task supplied to the chat bot"},{"lineNumber":138,"author":{"gitId":"shaelynl"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"shaelynl"},"content":"    public Task(String description) {"},{"lineNumber":140,"author":{"gitId":"shaelynl"},"content":"        this.description \u003d description;"},{"lineNumber":141,"author":{"gitId":"shaelynl"},"content":"        this.isDone \u003d false;"},{"lineNumber":142,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":144,"author":{"gitId":"shaelynl"},"content":"    /**"},{"lineNumber":145,"author":{"gitId":"shaelynl"},"content":"     * For a given task, indicate whether it has been done using a space or a tick"},{"lineNumber":146,"author":{"gitId":"shaelynl"},"content":"     * @return if the task has been done, return a tick, else return a space"},{"lineNumber":147,"author":{"gitId":"shaelynl"},"content":"     */"},{"lineNumber":148,"author":{"gitId":"shaelynl"},"content":"    public String getStatusIcon() {"},{"lineNumber":149,"author":{"gitId":"shaelynl"},"content":"        return (isDone ? \"\\u2713\" : \" \"); //return tick symbol"},{"lineNumber":150,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":152,"author":{"gitId":"shaelynl"},"content":"    /**"},{"lineNumber":153,"author":{"gitId":"shaelynl"},"content":"     * For a given task, if it is done, mark it as done by changing the boolean isDone to true"},{"lineNumber":154,"author":{"gitId":"shaelynl"},"content":"     */"},{"lineNumber":155,"author":{"gitId":"shaelynl"},"content":"    public void markAsDone() {"},{"lineNumber":156,"author":{"gitId":"shaelynl"},"content":"        isDone \u003d true;"},{"lineNumber":157,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":158,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":159,"author":{"gitId":"shaelynl"},"content":"    @Override"},{"lineNumber":160,"author":{"gitId":"shaelynl"},"content":"    public String toString() { return \"[\" + getStatusIcon() + \"] \" + description; }"},{"lineNumber":161,"author":{"gitId":"shaelynl"},"content":"}"},{"lineNumber":162,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":163,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":164,"author":{"gitId":"shaelynl"},"content":" * The ToDo class is a child class of the Task Class,"},{"lineNumber":165,"author":{"gitId":"shaelynl"},"content":" * it specifies the task as a ToDo using [T]"},{"lineNumber":166,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":167,"author":{"gitId":"shaelynl"},"content":"class ToDo extends Task {"},{"lineNumber":168,"author":{"gitId":"shaelynl"},"content":"    public ToDo(String description) {"},{"lineNumber":169,"author":{"gitId":"shaelynl"},"content":"        super(description);"},{"lineNumber":170,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":172,"author":{"gitId":"shaelynl"},"content":"    @Override"},{"lineNumber":173,"author":{"gitId":"shaelynl"},"content":"    public String toString() {"},{"lineNumber":174,"author":{"gitId":"shaelynl"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":175,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"shaelynl"},"content":"}"},{"lineNumber":177,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":178,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":179,"author":{"gitId":"shaelynl"},"content":" * The Deadline class is a child class of the Task Class,"},{"lineNumber":180,"author":{"gitId":"shaelynl"},"content":" * it specifies the task as a Deadline using [D]"},{"lineNumber":181,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":182,"author":{"gitId":"shaelynl"},"content":"class Deadline extends Task {"},{"lineNumber":183,"author":{"gitId":"shaelynl"},"content":"    protected String by;"},{"lineNumber":184,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":185,"author":{"gitId":"shaelynl"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":186,"author":{"gitId":"shaelynl"},"content":"        super(description);"},{"lineNumber":187,"author":{"gitId":"shaelynl"},"content":"        this.by \u003d by;"},{"lineNumber":188,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":190,"author":{"gitId":"shaelynl"},"content":"    @Override"},{"lineNumber":191,"author":{"gitId":"shaelynl"},"content":"    public String toString() {"},{"lineNumber":192,"author":{"gitId":"shaelynl"},"content":"        return \"[D]\" + super.toString() + \"(by:\" + by + \")\";"},{"lineNumber":193,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":194,"author":{"gitId":"shaelynl"},"content":"}"},{"lineNumber":195,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":196,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":197,"author":{"gitId":"shaelynl"},"content":" * The Event class is a child class of the Task Class,"},{"lineNumber":198,"author":{"gitId":"shaelynl"},"content":" * it specifies the task as an Event using [E]"},{"lineNumber":199,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":200,"author":{"gitId":"shaelynl"},"content":"class Event extends Task {"},{"lineNumber":201,"author":{"gitId":"shaelynl"},"content":"    protected String at;"},{"lineNumber":202,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":203,"author":{"gitId":"shaelynl"},"content":"    public Event(String description, String at) {"},{"lineNumber":204,"author":{"gitId":"shaelynl"},"content":"        super(description);"},{"lineNumber":205,"author":{"gitId":"shaelynl"},"content":"        this.at \u003d at;"},{"lineNumber":206,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":207,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":208,"author":{"gitId":"shaelynl"},"content":"    @Override"},{"lineNumber":209,"author":{"gitId":"shaelynl"},"content":"    public String toString() {"},{"lineNumber":210,"author":{"gitId":"shaelynl"},"content":"        return \"[E]\" + super.toString() + \"(at:\" + at + \")\";"},{"lineNumber":211,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":212,"author":{"gitId":"shaelynl"},"content":"}"},{"lineNumber":213,"author":{"gitId":"shaelynl"},"content":""},{"lineNumber":214,"author":{"gitId":"shaelynl"},"content":"/**"},{"lineNumber":215,"author":{"gitId":"shaelynl"},"content":" * The DukeException is a child class of the Java Exception class"},{"lineNumber":216,"author":{"gitId":"shaelynl"},"content":" * which throws an exception message when an invalid input is given to the chat bot"},{"lineNumber":217,"author":{"gitId":"shaelynl"},"content":" * either a wrong message (unidentified input) or an unclear message (not specific enough)"},{"lineNumber":218,"author":{"gitId":"shaelynl"},"content":" */"},{"lineNumber":219,"author":{"gitId":"shaelynl"},"content":"class DukeException extends Exception {"},{"lineNumber":220,"author":{"gitId":"shaelynl"},"content":"    public DukeException(String message) {"},{"lineNumber":221,"author":{"gitId":"shaelynl"},"content":"        super(message);"},{"lineNumber":222,"author":{"gitId":"shaelynl"},"content":"    }"},{"lineNumber":223,"author":{"gitId":"shaelynl"},"content":"}"}],"authorContributionMap":{"shaelynl":223}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"shaelynl"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"shaelynl"},"content":"deadline return book /by Monday"},{"lineNumber":3,"author":{"gitId":"shaelynl"},"content":"event project meeting /at Tues 2-4pm"},{"lineNumber":4,"author":{"gitId":"shaelynl"},"content":"list"},{"lineNumber":5,"author":{"gitId":"shaelynl"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"shaelynl"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"shaelynl"},"content":"done 3"},{"lineNumber":8,"author":{"gitId":"shaelynl"},"content":"list"},{"lineNumber":9,"author":{"gitId":"shaelynl"},"content":"bye"}],"authorContributionMap":{"shaelynl":9}}]
