{"authorDailyContributionsMap":{"nighoggDatatype":[{"date":"2021-01-20","commitResults":[{"hash":"d518a02e112e147a1403e1a4d90596355d89e537","messageTitle":"Done Level-1","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":1}}}]},{"date":"2021-01-21","commitResults":[{"hash":"bcd127598d3926ecf6a9b04ca3c18220af7d691c","messageTitle":"Done Level-2","messageBody":"","tags":["Level-2","A-Collections"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":2}}},{"hash":"f4d6f0f1ce97e614a352fa94fc723d3bb6ead33f","messageTitle":"Added Task class, and cleaned up the code of warnings","messageBody":"","tags":["A-Classes"],"fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":9}}},{"hash":"179b869a94aea9fdc7b98481246812cd02c89611","messageTitle":"Done Level-3","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":6}}},{"hash":"e70781223b7f0c7279510a9d58c45e10b8a743ee","messageTitle":"Refactored Task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":5}}},{"hash":"c7cdb7887fa1af73ecc56e16ad73666eba122b22","messageTitle":"Further refactored Task to not deal with numbering","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":7}}},{"hash":"a171f30bd2897b0624255fd61c3cc63a9f92ceab","messageTitle":"Done A-Inheritance","messageBody":"","tags":["A-Inheritance"],"fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":1}}},{"hash":"d8b325f5c7848cc18ca4c85c1ebf98d684d26942","messageTitle":"Done Level-4, with some refactoring","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":5}}},{"hash":"557f98c7093ff72002a9728da156c650b4ce35ae","messageTitle":"Whoops, renamed Events to Event and actually include Event as creation. Good time for automated testing","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":3,"deletions":3}}},{"hash":"7f652e59a0d384010ece11e0261cbd2a27eca249","messageTitle":"Added test data, found bugs immediately in need of testing, unicode does not render","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":6,"deletions":1}}},{"hash":"558f9b7733a845bdd810b33ae2414069d89c369e","messageTitle":"Somewhat fixed unicode, probably need to fix how files are compared cause line endings shouldn\u0027t matter","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"691306e479b98cec691a1174bf267f2a7b48688c","messageTitle":"Removed rendundant line","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"4856b15f9763ee56dee9fa91af63b3ef460d2f54","messageTitle":"Fixed another bug I missed","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":1}}},{"hash":"819aea77b72e08f798815e83abd4f58008123c07","messageTitle":"Added some error checking","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":75,"deletions":40}}},{"hash":"dec65f380f636807d994985cb6b8fc2df8c70692","messageTitle":"Minor bugfix on leakage","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"945ec43e6c44d8e4f75bb38cb95717ae9640ab06","messageTitle":"Added Empty Argument Handling","messageBody":"","tags":["Level-5","A-Exceptions"],"fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":4}}},{"hash":"7fb940aa18b1b39206106d36a34791ad5181c54e","messageTitle":"Fixed bug to do with single arg commands","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":3}}},{"hash":"6db18be72de45b6b0368ef0c1f875da184bd82cc","messageTitle":"Implemented Delete","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}}]},{"date":"2021-01-28","commitResults":[{"hash":"6563d2c7af8f2d99cb8e68c2b959c336c8e44d50","messageTitle":"Fixed bug with event deliminator","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2021-01-29","commitResults":[{"hash":"6d3e2d1ac04b02ddae3d453cbbb96a15cabfc462","messageTitle":"Add minimal code to implement saving.","messageBody":"Code does not implement saving\n\nNeed to persist the change across runs\n\nLet\u0027s:\n* Add and call code to load and save data\n* Add file safe string functions to tasks\n","fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":0},"java":{"insertions":145,"deletions":6}}},{"hash":"eab039037fe0e0ea1afbff7ff27874a0c51d123b","messageTitle":"Fix hash calculation of CheckList for better saving","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":2}}},{"hash":"b985269c989e7022dabf35f84769049a6e76dbe5","messageTitle":"Remove duke.txt from tracking","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":0,"deletions":5}}},{"hash":"100297eca2cb50a572c55e498866f9a0a40dd11b","messageTitle":"Add date time parsing to Deadline","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":8}}},{"hash":"a66f65a7b73b7eae61cb47db0bd02f83bf48859d","messageTitle":"Add graceful handling of badly formatted date input","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":3}}},{"hash":"494dc331bba82d781b6f2ed90cc3bf3972dd532a","messageTitle":"Fix bug where feedback on done item was absent","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"1edba8d5da3d03ab6210a3646ddec68184247e40","messageTitle":"Add some Class needed for the increment A-MoreOOP","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":206,"deletions":0}}},{"hash":"079455b93190236658a3c21ed833eaee124ae353","messageTitle":"Add flag to detect edits","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":18}}}]},{"date":"2021-01-31","commitResults":[{"hash":"69d2fb319907a7f6f3e15ef0c4569d860aa0f7ef","messageTitle":"Move some Ui code into its own class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":10}}},{"hash":"52ab2afce0a06c195f02b4051e82d77d49498e2d","messageTitle":"Refactor java files into packages","messageBody":"Currently, the project src files are all in one single src folder.\n\nThis makes it very unclear what files are logically together and clutter the folder view.\n\nLet\u0027s\n* Create a top level package \u0027duke\u0027\n* Create the sub-packages \u0027command\u0027, \u0027exception\u0027 and \u0027task\u0027\n* Leave the files; \u0027Duke\u0027, \u0027Parser\u0027, \u0027TaskList\u0027, \u0027TaskListFileUtils\u0027 and \u0027Ui\u0027 in the top level package \u0027duke\u0027.\n\nNote that I only place files that will have more than one related file into packages.\nI currently do not have any packages with only one file for now.\nWhether that is best practice or not is unknown, and may change in the future.\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":126,"deletions":45}}},{"hash":"893c5e7ce6ca214ac34601eede78b8b36bf38a8d","messageTitle":"Rename TaskListFileUtils to Storage for Class req","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}},{"hash":"cfefbd8a4ce461f41ee52770532629e82c251260","messageTitle":"Made isDone only changable via a setter function to true.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":4}}}]},{"date":"2021-02-01","commitResults":[{"hash":"e32afc4f4a12e4d18d6ec11280248bd5dce1e024","messageTitle":"Intergrate previously disconnected Object Oriented classes","messageBody":"The created object oriented classes is disconnected from the actual Duke main function\n\nThere is a requirement for OOP to be used extentively by CS2103T\n\nLet\u0027s\n* Remove ill-formatted strings due to indiscriminate package refactoring\n* Properly flesh out Ui class functionality\n* Intergrate prevously created class into Duke\n* Edit TaskList and Storage to accomidate each other\n* Edit TaskList and Ui to accomidate error printing\n","fileTypesAndContributionMap":{"java":{"insertions":66,"deletions":110}}},{"hash":"c1cf9f339aa4f1218d886afd7c7e57ed1a48ecea","messageTitle":"Allow more relaxed parsing rules","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":2}}},{"hash":"eb5747d4c3ddfeaf22e464e97609e04942db8353","messageTitle":"Move Error printing into Ui Class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":5}}},{"hash":"5e0abc5b043012a02d311deaa103426e81a5faea","messageTitle":"Move last ui elements to Ui class","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":4}}},{"hash":"d5405aa738917cb45339dbf4297f2d3da6248dcf","messageTitle":"Add Skeleton Test Code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":0}}}]},{"date":"2021-02-02","commitResults":[{"hash":"f1e59d5ce5f5f481009ff7b80ef55d43011dc005","messageTitle":"Add minimal Test Code to satisfy req","messageBody":"","tags":["v0.1","A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":78,"deletions":0}}}]},{"date":"2021-02-04","commitResults":[{"hash":"abb945f42d87cb0773848e4f5cfdf29e43d2b95c","messageTitle":"Add Basic search framework code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":0}}},{"hash":"7a7c782067bc00e5526795052e9a970206455e5e","messageTitle":"Make search more intuitive","messageBody":"Search is currently only a wrapper on contains()\n\nThis is bad because this breaks intuition (At least my intuition) about\nhow searching should be done. For example: \"in\" should not match \"Beating Minecraft\"\nand \"minecraft\" should match it, but both of those cases are unfulfilled.\n\nLet\u0027s:\n* Attempt to check description on a per word basis from the start of the word\n** Allow this to be overriden by the presence of multiple spaces\n* Do lowercase matching for everything by default\n** Allow capital letters in the search to override this.\n\nThe reason we allow exceptions is because we sometimes want more specific searching rules.\n","fileTypesAndContributionMap":{"java":{"insertions":19,"deletions":1}}},{"hash":"568e9016e8d0549cd6dc62a834f6a1683f5ddb4c","messageTitle":"Minor spelling correction, from overeager refactor","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2021-02-05","commitResults":[{"hash":"4f536302d089eb7517fcf6d5b46b344512cc08c2","messageTitle":"Add possibly incomplete Javadoc, Detailed message pending","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":0}}},{"hash":"a33d08c37e40e8aaba6a81f77aeda9ba10a52d37","messageTitle":"Finish adding javadoc to every public method except main","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":64,"deletions":1}}},{"hash":"856473f3841508e20c3b0d984104e89fc7bfb449","messageTitle":"Fix import statements","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":3}}}]},{"date":"2021-02-09","commitResults":[{"hash":"d269a67d4323741f264309780da6a244196a7290","messageTitle":"Fix spacing for code formatting","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":38,"deletions":39}}},{"hash":"42cc0d0cc1969dfe043768dab89f998c42f0ceeb","messageTitle":"Fixed Array Formatting","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2021-02-10","commitResults":[{"hash":"89afdd55044b386730b7131e35b23ceff7f60a22","messageTitle":"Add JavaDoc for commandMessage","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}}]},{"date":"2021-02-11","commitResults":[{"hash":"621e63fd19955941024833d4af77bbdbb7ef5e8f","messageTitle":"Add missing import that somehow slipped past me","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}}]},{"date":"2021-02-12","commitResults":[{"hash":"5998f675561687d82363b5e1618966153ede618f","messageTitle":"Modify main code to satisfy automated checkStyle validation only","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":149,"deletions":97}}},{"hash":"725faeab5d07e481d7c2dd31c00d433c4f358c80","messageTitle":"Address concerns in reviews for my first PR","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":46}}}]},{"date":"2021-02-13","commitResults":[{"hash":"68d8318d25331c0c064fcaa5096ea798e1e89df6","messageTitle":"Fix naming and bug when searching long word","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":2}}},{"hash":"e17d7d6b8da7c0278c0bde3d5da602834e7a2fcb","messageTitle":"Set up gradle for JavaFX","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":14,"deletions":0}}},{"hash":"05f73fcada1f854c6a1501874d1158b49303f133","messageTitle":"Add skeleton for JavaFx","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":84,"deletions":0}}},{"hash":"b1bec18220051e0ef5ce373db258d8d9c08d4529","messageTitle":"Refactor code so that MainWindow handled output over Ui","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":116,"deletions":67}}},{"hash":"01fffc3e0f6aec3ef9f7797b26092cc690da2af8","messageTitle":"Add Material from Tutorial to create MVP for UI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":82,"deletions":3}}},{"hash":"14f02ebb0e6fc5977b7e01287488a09b63ccd3c4","messageTitle":"Fix checkStyle for test code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":21,"deletions":18}}},{"hash":"18cf0474f718aecb4fd792d202607a44d46ea4ab","messageTitle":"Fix minor Checkstyle issue","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"b1c6d6d389a4f19c9e6822dcef41d3a150982ddf","messageTitle":"Fix build.gradle to make shadowJar work","messageBody":"","tags":["v0.2"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}}]},{"date":"2021-02-14","commitResults":[{"hash":"076010a41ed61138fe42833a70d4e3c3afdf2d0a","messageTitle":"Make first attempt to improve Code Quality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":93,"deletions":61}}}]},{"date":"2021-02-15","commitResults":[{"hash":"eefd33e12198ed5d324167ce5094b34410bc6ef5","messageTitle":"Use more descriptive variable names for addTask","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":4}}},{"hash":"bb44eb10f7b389c82e739061338d6ba9202d9ebc","messageTitle":"Add Asserts for TaskList. Other classes in progress maybe","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":0}}}]},{"date":"2021-02-16","commitResults":[{"hash":"cc14009a10f4c47a260f83c6ece7fdbb09be297c","messageTitle":"Add more asserts","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":0}}},{"hash":"877e89615546fc064ec483633e537410aff8d947","messageTitle":"Remove erronous assert","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"5790efbe0a81cf655bdb5bd2ae4c17cd9f0be279","messageTitle":"Handle out of bounds error discovered during assert creation","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":1}}},{"hash":"a977e38fa6d580a60f8f960e866790c0d1c994d0","messageTitle":"Add Stream and Lambda","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":14}}},{"hash":"57ccda89a30313348831b2db7a44e769ea6111d4","messageTitle":"Apply SLAP to TaskList::AddTask","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":14}}},{"hash":"e8a0bc6d62151bdb1ea4004eb97003d0db151ca3","messageTitle":"Move File string generation from Storage to TaskList","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":17,"deletions":17}}},{"hash":"4e8de8862c2b4e47efa4ab006414d8e66c65c73f","messageTitle":"Make Storage a proper object, from a static interface","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":10}}},{"hash":"6f4d8ad109987944eb4217b57276e7f2aa76c55c","messageTitle":"Remove some completed comments and fix some Javadocs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":5}}},{"hash":"37c31dcae884f783de9ed956f77df4366c7b46d1","messageTitle":"Remove overloaded error handling function","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":13}}},{"hash":"a7d3eb0de8658bf3d1d0a9a4fb9a8cfe784bdbcd","messageTitle":"Remove unused method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":7}}},{"hash":"732447d679a7b19c5341c9f77c92d3beea8fb276","messageTitle":"Add missing return description for javadoc","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"e90e3a83324addecd8bf438dd50e40799f8204a3","messageTitle":"Remove unnecessary field","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":11}}},{"hash":"a0313e1300ca1585132d0ec4cdc5822c2e4c89cb","messageTitle":"Add final to variables where possible","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"cf570339d535a67d1f3229e156fe0f2977b00c7c","messageTitle":"Add spacing in javadoc where appropriate","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":0}}},{"hash":"6c11a8e5478e2b7813a5042a1e1730da939a21cf","messageTitle":"Fix typos","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":4}}},{"hash":"c0ab2dffddf38f910631b597db891e094d3c1d4e","messageTitle":"Improve code quality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":3}}},{"hash":"6bb1aa19a9e5d28b3297c15b2d7638a9a68fae67","messageTitle":"Fix bug to do with uppercase searching","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"438d93cf9becb937a1f7d04fd5f01488d101be34","messageTitle":"Add more final to variables","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}}]},{"date":"2021-02-17","commitResults":[{"hash":"dd21308124974175a6774e4a4e437aec030d070a","messageTitle":"Remove redundant code discovered during testing asserts","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}},{"hash":"4d4f3b050e258016fe38fa00e2c2e0a2c6da2bc3","messageTitle":"Fix minor javadoc mangling","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":3}}},{"hash":"41f5db3c40e31194eef9e2da47c60d1547e331ee","messageTitle":"Add new formatting options for Deadline dates, and adjusted error messages accordingly","messageBody":"","tags":["C-NaturalDates"],"fileTypesAndContributionMap":{"java":{"insertions":120,"deletions":4}}},{"hash":"97dcd140cc327a6d25b4080ce3da26b860793162","messageTitle":"Fix bug where non lowercase commands with zero args were not recognized","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2021-02-18","commitResults":[{"hash":"7f615c49420d20951e73981116f7b043a66cce6f","messageTitle":"Fix incorrect addition of newline when generating list in stream","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}}]},{"date":"2021-02-19","commitResults":[{"hash":"003db68f8114abea77abd6ef49cc7413271e0db9","messageTitle":"Clean up messages from poor porting to GUI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":6}}},{"hash":"0083b41b9483944681c5eeb9b36172a17970ca4d","messageTitle":"Add Documentation for Duke","messageBody":"","tags":["A-UserGuide"],"fileTypesAndContributionMap":{"md":{"insertions":165,"deletions":6}}}]}]},"authorFileTypeContributionMap":{"nighoggDatatype":{"java":1437,"md":165,"fxml":35,"sh":0,"bat":0,"gradle":15,"txt":8}},"authorContributionVariance":{"nighoggDatatype":16691.828},"authorDisplayNameMap":{"nighoggDatatype":"CS2103T-W12-2 HO W..RMAN"}}
