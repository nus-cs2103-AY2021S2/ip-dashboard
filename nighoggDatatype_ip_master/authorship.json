[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"public class Deadline extends Task {"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":"    protected String by;"},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":"    public Deadline(String description, String by) throws EmptyArgument {"},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"        by \u003d by.trim();"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"        if (by.isEmpty()){"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"            throw new EmptyArgument();"},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":"        }"},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"        this.by \u003d by;"},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"nighoggDatatype"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"        return \"[D]\" + super.toString() + \" (Deadline: \" + by + \")\";"},{"lineNumber":16,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"nighoggDatatype"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":17}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"import java.text.ParseException;"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":"import java.util.ArrayList;"},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"import java.util.Arrays;"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":"        String logo \u003d"},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"                  \" ____        _        \\n\""},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"        String separator \u003d \"------------------\\n\";"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":17,"author":{"gitId":"nighoggDatatype"},"content":"        System.out.println(\"No unicode allowed\");"},{"lineNumber":18,"author":{"gitId":"nighoggDatatype"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":19,"author":{"gitId":"nighoggDatatype"},"content":"        String line;"},{"lineNumber":20,"author":{"gitId":"nighoggDatatype"},"content":"        List\u003cTask\u003e store \u003d new ArrayList\u003c\u003e();"},{"lineNumber":21,"author":{"gitId":"nighoggDatatype"},"content":"        String tokens[] \u003d {\"invalid\"};"},{"lineNumber":22,"author":{"gitId":"nighoggDatatype"},"content":"        do{"},{"lineNumber":23,"author":{"gitId":"nighoggDatatype"},"content":"            System.out.print(separator + \"Listening to your input: \");"},{"lineNumber":24,"author":{"gitId":"nighoggDatatype"},"content":"            line \u003d in.nextLine();"},{"lineNumber":25,"author":{"gitId":"nighoggDatatype"},"content":"            try {"},{"lineNumber":26,"author":{"gitId":"nighoggDatatype"},"content":"                String singleTokens[] \u003d {\"bye\",\"list\"};"},{"lineNumber":27,"author":{"gitId":"nighoggDatatype"},"content":"                tokens \u003d splitTokenIntoTwo(line,\" \", singleTokens);"},{"lineNumber":28,"author":{"gitId":"nighoggDatatype"},"content":"                switch(tokens[0]){"},{"lineNumber":29,"author":{"gitId":"nighoggDatatype"},"content":"                    case \"bye\":"},{"lineNumber":30,"author":{"gitId":"nighoggDatatype"},"content":"                        System.out.println(separator + \"Goodbye from\\n\" + logo);"},{"lineNumber":31,"author":{"gitId":"nighoggDatatype"},"content":"                        break;"},{"lineNumber":32,"author":{"gitId":"nighoggDatatype"},"content":"                    case \"list\":"},{"lineNumber":33,"author":{"gitId":"nighoggDatatype"},"content":"                        for (int i \u003d 0 ; i \u003c store.size(); i++) {"},{"lineNumber":34,"author":{"gitId":"nighoggDatatype"},"content":"                            System.out.println(formatOrderedPrint(store,i));"},{"lineNumber":35,"author":{"gitId":"nighoggDatatype"},"content":"                        }"},{"lineNumber":36,"author":{"gitId":"nighoggDatatype"},"content":"                        break;"},{"lineNumber":37,"author":{"gitId":"nighoggDatatype"},"content":"                    case \"done\":"},{"lineNumber":38,"author":{"gitId":"nighoggDatatype"},"content":"                        int index \u003d Integer.valueOf(tokens[1]) - 1;"},{"lineNumber":39,"author":{"gitId":"nighoggDatatype"},"content":"                        Task t \u003d store.get(index);"},{"lineNumber":40,"author":{"gitId":"nighoggDatatype"},"content":"                        t.isDone \u003d true;"},{"lineNumber":41,"author":{"gitId":"nighoggDatatype"},"content":"                        System.out.println(\"The following task is now marked as done:\\n\" +"},{"lineNumber":42,"author":{"gitId":"nighoggDatatype"},"content":"                                formatOrderedPrint(store,-1));"},{"lineNumber":43,"author":{"gitId":"nighoggDatatype"},"content":"                        break;"},{"lineNumber":44,"author":{"gitId":"nighoggDatatype"},"content":"                    case \"todo\":"},{"lineNumber":45,"author":{"gitId":"nighoggDatatype"},"content":"                        store.add(new ToDos(tokens[1]));"},{"lineNumber":46,"author":{"gitId":"nighoggDatatype"},"content":"                        System.out.println(\"The following todo item has been added:\\n\" +"},{"lineNumber":47,"author":{"gitId":"nighoggDatatype"},"content":"                                formatOrderedPrint(store,-1));"},{"lineNumber":48,"author":{"gitId":"nighoggDatatype"},"content":"                        break;"},{"lineNumber":49,"author":{"gitId":"nighoggDatatype"},"content":"                    case \"deadline\":"},{"lineNumber":50,"author":{"gitId":"nighoggDatatype"},"content":"                        tokens \u003d splitTokenIntoTwo(tokens[1],\" /by \");"},{"lineNumber":51,"author":{"gitId":"nighoggDatatype"},"content":"                        store.add(new Deadline(tokens[0],tokens[1]));"},{"lineNumber":52,"author":{"gitId":"nighoggDatatype"},"content":"                        System.out.println(\"The following deadline item has been added:\\n\" +"},{"lineNumber":53,"author":{"gitId":"nighoggDatatype"},"content":"                                formatOrderedPrint(store,-1));"},{"lineNumber":54,"author":{"gitId":"nighoggDatatype"},"content":"                        break;"},{"lineNumber":55,"author":{"gitId":"nighoggDatatype"},"content":"                    case \"event\":"},{"lineNumber":56,"author":{"gitId":"nighoggDatatype"},"content":"                        tokens \u003d splitTokenIntoTwo(tokens[1],\" /by \");"},{"lineNumber":57,"author":{"gitId":"nighoggDatatype"},"content":"                        store.add(new Event(tokens[0],tokens[1]));"},{"lineNumber":58,"author":{"gitId":"nighoggDatatype"},"content":"                        System.out.println(\"The following event item has been added:\\n\" +"},{"lineNumber":59,"author":{"gitId":"nighoggDatatype"},"content":"                                formatOrderedPrint(store,-1));"},{"lineNumber":60,"author":{"gitId":"nighoggDatatype"},"content":"                        break;"},{"lineNumber":61,"author":{"gitId":"nighoggDatatype"},"content":"                    case \"delete\":"},{"lineNumber":62,"author":{"gitId":"nighoggDatatype"},"content":"                        int deleteIndex \u003d Integer.valueOf(tokens[1]) - 1;"},{"lineNumber":63,"author":{"gitId":"nighoggDatatype"},"content":"                        System.out.println(\"Deleting the following Task:\");"},{"lineNumber":64,"author":{"gitId":"nighoggDatatype"},"content":"                        System.out.println(formatOrderedPrint(store, deleteIndex));"},{"lineNumber":65,"author":{"gitId":"nighoggDatatype"},"content":"                        store.remove(deleteIndex);"},{"lineNumber":66,"author":{"gitId":"nighoggDatatype"},"content":"                        System.out.println(\"Done\");"},{"lineNumber":67,"author":{"gitId":"nighoggDatatype"},"content":"                        break;"},{"lineNumber":68,"author":{"gitId":"nighoggDatatype"},"content":"                    default:"},{"lineNumber":69,"author":{"gitId":"nighoggDatatype"},"content":"                        throw new InvalidCommandException(tokens[0]);"},{"lineNumber":70,"author":{"gitId":"nighoggDatatype"},"content":"                }"},{"lineNumber":71,"author":{"gitId":"nighoggDatatype"},"content":"            } catch (ParseException e) {"},{"lineNumber":72,"author":{"gitId":"nighoggDatatype"},"content":"                System.out.println(\"Command has invalid parsing.\");"},{"lineNumber":73,"author":{"gitId":"nighoggDatatype"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":74,"author":{"gitId":"nighoggDatatype"},"content":"            } catch (InvalidCommandException e){"},{"lineNumber":75,"author":{"gitId":"nighoggDatatype"},"content":"                System.out.println(e.getMessage());"},{"lineNumber":76,"author":{"gitId":"nighoggDatatype"},"content":"            } catch(EmptyArgument e){"},{"lineNumber":77,"author":{"gitId":"nighoggDatatype"},"content":"                System.out.println(\"Cannot have empty argument\");"},{"lineNumber":78,"author":{"gitId":"nighoggDatatype"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"nighoggDatatype"},"content":"        }while(!tokens[0].equals(\"bye\"));"},{"lineNumber":80,"author":{"gitId":"nighoggDatatype"},"content":"        in.close();"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"nighoggDatatype"},"content":"    private static String formatOrderedPrint(List\u003cTask\u003e tasks, int i){"},{"lineNumber":83,"author":{"gitId":"nighoggDatatype"},"content":"        final int size \u003d tasks.size();"},{"lineNumber":84,"author":{"gitId":"nighoggDatatype"},"content":"        while (i \u003c 0){"},{"lineNumber":85,"author":{"gitId":"nighoggDatatype"},"content":"            i +\u003d size;"},{"lineNumber":86,"author":{"gitId":"nighoggDatatype"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"nighoggDatatype"},"content":"        while (i \u003e\u003d size){"},{"lineNumber":88,"author":{"gitId":"nighoggDatatype"},"content":"            i -\u003d size;"},{"lineNumber":89,"author":{"gitId":"nighoggDatatype"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"nighoggDatatype"},"content":"        return \"Entry \" + (i+1) + \"|\" + tasks.get(i).toString();"},{"lineNumber":91,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"nighoggDatatype"},"content":"    private static String[] splitTokenIntoTwo(String parseTarget,String delimiter) throws ParseException{"},{"lineNumber":93,"author":{"gitId":"nighoggDatatype"},"content":"        String[] tokens \u003d parseTarget.split(delimiter,2);"},{"lineNumber":94,"author":{"gitId":"nighoggDatatype"},"content":"        if (tokens.length \u003c 2){"},{"lineNumber":95,"author":{"gitId":"nighoggDatatype"},"content":"            throw new ParseException(\"Expected deliminter \u0027\"+ delimiter +\"\u0027\", tokens[0].length());"},{"lineNumber":96,"author":{"gitId":"nighoggDatatype"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"nighoggDatatype"},"content":"        return tokens;"},{"lineNumber":98,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"nighoggDatatype"},"content":"    "},{"lineNumber":100,"author":{"gitId":"nighoggDatatype"},"content":"    private static String[] splitTokenIntoTwo(String parseTarget,String delimiter, String[] exception) throws ParseException{"},{"lineNumber":101,"author":{"gitId":"nighoggDatatype"},"content":"        List\u003cString\u003e exceptionList \u003d Arrays.asList(exception);"},{"lineNumber":102,"author":{"gitId":"nighoggDatatype"},"content":"        String[] tokens \u003d parseTarget.split(delimiter,2);"},{"lineNumber":103,"author":{"gitId":"nighoggDatatype"},"content":"        if (!exceptionList.contains(tokens[0]) \u0026\u0026 tokens.length \u003c 2){"},{"lineNumber":104,"author":{"gitId":"nighoggDatatype"},"content":"            throw new ParseException(\"Expected deliminter \u0027\"+ delimiter +\"\u0027\", tokens[0].length());"},{"lineNumber":105,"author":{"gitId":"nighoggDatatype"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"nighoggDatatype"},"content":"        return tokens;"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":98,"-":10}},{"path":"src/main/java/EmptyArgument.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"public class EmptyArgument extends Exception{"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"    /**"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":"     *"},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"     */"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"    private static final long serialVersionUID \u003d 1L;"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"    "},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":8}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"public class Event extends Task{"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":"    private String eventPeriod;"},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":"    public Event(String description, String eventPeriod) throws EmptyArgument {"},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"        eventPeriod \u003d eventPeriod.trim();"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"        if (eventPeriod.isEmpty()){"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"            throw new EmptyArgument();"},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":"        }"},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"        this.eventPeriod \u003d eventPeriod;"},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"nighoggDatatype"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"        return \"[E]\" + super.toString() + \" (Event Time: \" + eventPeriod + \")\";"},{"lineNumber":16,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"nighoggDatatype"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":17}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"public class InvalidCommandException extends Exception {"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"    private String badCommand;"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"    public InvalidCommandException(String badCommand) {"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"        this.badCommand \u003d badCommand;"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"\t}"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":"\tprivate static final long serialVersionUID \u003d 1L;"},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"    "},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":"    public String getMessage() {"},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":"        return \"Command \u0027\" + badCommand + \"\u0027 is not recognized.\";"},{"lineNumber":14,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":15}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"public abstract class Task {"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":"    private final String description;"},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"    public Task(String description) throws EmptyArgument {"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"        description \u003d description.trim();"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"        if (description.isEmpty()){"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"            throw new EmptyArgument();"},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":"        }"},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"        this.description \u003d description;"},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":"        this.isDone \u003d false;"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":14,"author":{"gitId":"nighoggDatatype"},"content":"    public String getStatusIcon() {"},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"        return (isDone ? \"*\" : \" \"); //Don\u0027t use unicode, cause it can\u0027t test properly"},{"lineNumber":16,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":18,"author":{"gitId":"nighoggDatatype"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"nighoggDatatype"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"nighoggDatatype"},"content":"        return \"[\"+ this.getStatusIcon()+\"]: \" +"},{"lineNumber":21,"author":{"gitId":"nighoggDatatype"},"content":"                description;"},{"lineNumber":22,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":24,"author":{"gitId":"nighoggDatatype"},"content":"    //..."},{"lineNumber":25,"author":{"gitId":"nighoggDatatype"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":25}},{"path":"src/main/java/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"public class ToDos extends Task{"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":"    public ToDos(String description) throws EmptyArgument {"},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"        super(description);"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"    @Override"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"    public String toString() {"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":"todo Dab on Homies"},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"event Ninja_0 /at 3pm EST"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":"list"},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"done 3"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"list"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"bye"}],"authorContributionMap":{"nighoggDatatype":8}}]
