[{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":"import duke.exception.BadDateArgumentException;"},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"import duke.exception.EmptyArgumentException;"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"import duke.exception.InvalidCommandException;"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":"import java.text.ParseException;"},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"import java.util.Scanner;"},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":14,"author":{"gitId":"nighoggDatatype"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"        ui.startUpMessage();"},{"lineNumber":16,"author":{"gitId":"nighoggDatatype"},"content":"        TaskList store;"},{"lineNumber":17,"author":{"gitId":"nighoggDatatype"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"nighoggDatatype"},"content":"            ui.loadStart();"},{"lineNumber":19,"author":{"gitId":"nighoggDatatype"},"content":"            store \u003d Storage.LoadTaskList();"},{"lineNumber":20,"author":{"gitId":"nighoggDatatype"},"content":"            ui.loadSuccess();"},{"lineNumber":21,"author":{"gitId":"nighoggDatatype"},"content":"        } catch (IOException e) {"},{"lineNumber":22,"author":{"gitId":"nighoggDatatype"},"content":"            ui.loadFail();"},{"lineNumber":23,"author":{"gitId":"nighoggDatatype"},"content":"            return;"},{"lineNumber":24,"author":{"gitId":"nighoggDatatype"},"content":"        }"},{"lineNumber":25,"author":{"gitId":"nighoggDatatype"},"content":"        Scanner in \u003d new Scanner(System.in);"},{"lineNumber":26,"author":{"gitId":"nighoggDatatype"},"content":"        String line;"},{"lineNumber":27,"author":{"gitId":"nighoggDatatype"},"content":"        do{"},{"lineNumber":28,"author":{"gitId":"nighoggDatatype"},"content":"            ui.prompt();"},{"lineNumber":29,"author":{"gitId":"nighoggDatatype"},"content":"            line \u003d in.nextLine();"},{"lineNumber":30,"author":{"gitId":"nighoggDatatype"},"content":"            try {"},{"lineNumber":31,"author":{"gitId":"nighoggDatatype"},"content":"                Command c \u003d Parser.parse(line);"},{"lineNumber":32,"author":{"gitId":"nighoggDatatype"},"content":"                if (c\u003d\u003dnull){ //Bye command"},{"lineNumber":33,"author":{"gitId":"nighoggDatatype"},"content":"                    break;"},{"lineNumber":34,"author":{"gitId":"nighoggDatatype"},"content":"                }"},{"lineNumber":35,"author":{"gitId":"nighoggDatatype"},"content":"                String data \u003d store.run(c);"},{"lineNumber":36,"author":{"gitId":"nighoggDatatype"},"content":"                ui.commandMessage(c,data);"},{"lineNumber":37,"author":{"gitId":"nighoggDatatype"},"content":"            } catch (ParseException e) {"},{"lineNumber":38,"author":{"gitId":"nighoggDatatype"},"content":"                ui.handleException(e);"},{"lineNumber":39,"author":{"gitId":"nighoggDatatype"},"content":"            } catch (InvalidCommandException e){"},{"lineNumber":40,"author":{"gitId":"nighoggDatatype"},"content":"                ui.handleException(e);"},{"lineNumber":41,"author":{"gitId":"nighoggDatatype"},"content":"            } catch(EmptyArgumentException e){"},{"lineNumber":42,"author":{"gitId":"nighoggDatatype"},"content":"                ui.handleException(e);"},{"lineNumber":43,"author":{"gitId":"nighoggDatatype"},"content":"            } catch (BadDateArgumentException e) {"},{"lineNumber":44,"author":{"gitId":"nighoggDatatype"},"content":"                ui.handleException(e);"},{"lineNumber":45,"author":{"gitId":"nighoggDatatype"},"content":"            } finally {"},{"lineNumber":46,"author":{"gitId":"nighoggDatatype"},"content":"                if(store.isEdited()){"},{"lineNumber":47,"author":{"gitId":"nighoggDatatype"},"content":"                    try {"},{"lineNumber":48,"author":{"gitId":"nighoggDatatype"},"content":"                        Storage.saveTaskList(store);"},{"lineNumber":49,"author":{"gitId":"nighoggDatatype"},"content":"                        store.markSaved();"},{"lineNumber":50,"author":{"gitId":"nighoggDatatype"},"content":"                    } catch (IOException e) {"},{"lineNumber":51,"author":{"gitId":"nighoggDatatype"},"content":"                        ui.dumpState(store);"},{"lineNumber":52,"author":{"gitId":"nighoggDatatype"},"content":"                    }"},{"lineNumber":53,"author":{"gitId":"nighoggDatatype"},"content":"                }"},{"lineNumber":54,"author":{"gitId":"nighoggDatatype"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"nighoggDatatype"},"content":"        }while(true);"},{"lineNumber":56,"author":{"gitId":"nighoggDatatype"},"content":"        ui.goodByeMessage();"},{"lineNumber":57,"author":{"gitId":"nighoggDatatype"},"content":"        in.close();"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":55,"-":4}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"import duke.command.*;"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":"import duke.exception.InvalidCommandException;"},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"import java.text.ParseException;"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"import java.util.Arrays;"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"public class Parser {"},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":"    public static Command parse(String line) throws ParseException, InvalidCommandException {"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":"        line \u003d line.trim();"},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":"        Command c \u003d null;"},{"lineNumber":14,"author":{"gitId":"nighoggDatatype"},"content":"        String singleTokens[] \u003d {\"bye\", \"list\", \"exit\", \"ls\"};"},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"        String[] tokens \u003d splitTokenIntoTwo(line, \" \", singleTokens);"},{"lineNumber":16,"author":{"gitId":"nighoggDatatype"},"content":"        switch (tokens[0].toLowerCase()) {"},{"lineNumber":17,"author":{"gitId":"nighoggDatatype"},"content":"        case \"exit\":"},{"lineNumber":18,"author":{"gitId":"nighoggDatatype"},"content":"            //Fall-through"},{"lineNumber":19,"author":{"gitId":"nighoggDatatype"},"content":"        case \"bye\":"},{"lineNumber":20,"author":{"gitId":"nighoggDatatype"},"content":"            //Leave as null"},{"lineNumber":21,"author":{"gitId":"nighoggDatatype"},"content":"            break;"},{"lineNumber":22,"author":{"gitId":"nighoggDatatype"},"content":"        case \"ls\":"},{"lineNumber":23,"author":{"gitId":"nighoggDatatype"},"content":"            //Fall-through"},{"lineNumber":24,"author":{"gitId":"nighoggDatatype"},"content":"        case \"list\":"},{"lineNumber":25,"author":{"gitId":"nighoggDatatype"},"content":"            c \u003d new ListCommand();"},{"lineNumber":26,"author":{"gitId":"nighoggDatatype"},"content":"            break;"},{"lineNumber":27,"author":{"gitId":"nighoggDatatype"},"content":"        case \"done\":"},{"lineNumber":28,"author":{"gitId":"nighoggDatatype"},"content":"            c \u003d new DoneCommand(Integer.parseInt(tokens[1]));"},{"lineNumber":29,"author":{"gitId":"nighoggDatatype"},"content":"            break;"},{"lineNumber":30,"author":{"gitId":"nighoggDatatype"},"content":"        case \"todo\":"},{"lineNumber":31,"author":{"gitId":"nighoggDatatype"},"content":"            c \u003d new AddCommand(new String[]{\"T\", tokens[1]});"},{"lineNumber":32,"author":{"gitId":"nighoggDatatype"},"content":"            break;"},{"lineNumber":33,"author":{"gitId":"nighoggDatatype"},"content":"        case \"deadline\":"},{"lineNumber":34,"author":{"gitId":"nighoggDatatype"},"content":"            tokens \u003d splitTokenIntoTwo(tokens[1], \" /by \");"},{"lineNumber":35,"author":{"gitId":"nighoggDatatype"},"content":"            c \u003d new AddCommand(new String[]{\"D\", tokens[0], tokens[1]});"},{"lineNumber":36,"author":{"gitId":"nighoggDatatype"},"content":"            break;"},{"lineNumber":37,"author":{"gitId":"nighoggDatatype"},"content":"        case \"event\":"},{"lineNumber":38,"author":{"gitId":"nighoggDatatype"},"content":"            tokens \u003d splitTokenIntoTwo(tokens[1], \" /at \");"},{"lineNumber":39,"author":{"gitId":"nighoggDatatype"},"content":"            c \u003d new AddCommand(new String[]{\"E\", tokens[0], tokens[1]});"},{"lineNumber":40,"author":{"gitId":"nighoggDatatype"},"content":"            break;"},{"lineNumber":41,"author":{"gitId":"nighoggDatatype"},"content":"        case \"rm\":"},{"lineNumber":42,"author":{"gitId":"nighoggDatatype"},"content":"            //Fall-through"},{"lineNumber":43,"author":{"gitId":"nighoggDatatype"},"content":"        case \"remove\":"},{"lineNumber":44,"author":{"gitId":"nighoggDatatype"},"content":"            //Fall-through"},{"lineNumber":45,"author":{"gitId":"nighoggDatatype"},"content":"        case \"del\":"},{"lineNumber":46,"author":{"gitId":"nighoggDatatype"},"content":"            //Fall-through"},{"lineNumber":47,"author":{"gitId":"nighoggDatatype"},"content":"        case \"delete\":"},{"lineNumber":48,"author":{"gitId":"nighoggDatatype"},"content":"            c \u003d new DeleteCommand(Integer.parseInt(tokens[1]));"},{"lineNumber":49,"author":{"gitId":"nighoggDatatype"},"content":"            break;"},{"lineNumber":50,"author":{"gitId":"nighoggDatatype"},"content":"        default:"},{"lineNumber":51,"author":{"gitId":"nighoggDatatype"},"content":"            throw new InvalidCommandException(tokens[0]);"},{"lineNumber":52,"author":{"gitId":"nighoggDatatype"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"nighoggDatatype"},"content":"        return c;"},{"lineNumber":54,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"nighoggDatatype"},"content":"    private static String[] splitTokenIntoTwo(String parseTarget,String delimiter) throws ParseException {"},{"lineNumber":56,"author":{"gitId":"nighoggDatatype"},"content":"        String[] tokens \u003d parseTarget.split(delimiter,2);"},{"lineNumber":57,"author":{"gitId":"nighoggDatatype"},"content":"        if (tokens.length \u003c 2){"},{"lineNumber":58,"author":{"gitId":"nighoggDatatype"},"content":"            throw new ParseException(\"Expected deliminter \u0027\"+ delimiter +\"\u0027\", tokens[0].length());"},{"lineNumber":59,"author":{"gitId":"nighoggDatatype"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"nighoggDatatype"},"content":"        return tokens;"},{"lineNumber":61,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":63,"author":{"gitId":"nighoggDatatype"},"content":"    private static String[] splitTokenIntoTwo(String parseTarget,String delimiter, String[] exception) throws ParseException{"},{"lineNumber":64,"author":{"gitId":"nighoggDatatype"},"content":"        List\u003cString\u003e exceptionList \u003d Arrays.asList(exception);"},{"lineNumber":65,"author":{"gitId":"nighoggDatatype"},"content":"        String[] tokens \u003d parseTarget.split(delimiter,2);"},{"lineNumber":66,"author":{"gitId":"nighoggDatatype"},"content":"        if (!exceptionList.contains(tokens[0]) \u0026\u0026 tokens.length \u003c 2){"},{"lineNumber":67,"author":{"gitId":"nighoggDatatype"},"content":"            throw new ParseException(\"Expected deliminter \u0027\"+ delimiter +\"\u0027\", tokens[0].length());"},{"lineNumber":68,"author":{"gitId":"nighoggDatatype"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"nighoggDatatype"},"content":"        return tokens;"},{"lineNumber":70,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"nighoggDatatype"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":71}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"import duke.exception.BadDateArgumentException;"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":"import duke.exception.EmptyArgumentException;"},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"import duke.task.Deadline;"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"import duke.task.Event;"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"import duke.task.Task;"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"import duke.task.ToDos;"},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"import java.io.File;"},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":"import java.io.FileWriter;"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":"import java.nio.file.Files;"},{"lineNumber":14,"author":{"gitId":"nighoggDatatype"},"content":"import java.nio.file.Paths;"},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"import java.util.ArrayList;"},{"lineNumber":16,"author":{"gitId":"nighoggDatatype"},"content":"import java.util.List;"},{"lineNumber":17,"author":{"gitId":"nighoggDatatype"},"content":"import java.util.Scanner;"},{"lineNumber":18,"author":{"gitId":"nighoggDatatype"},"content":"import java.util.regex.Matcher;"},{"lineNumber":19,"author":{"gitId":"nighoggDatatype"},"content":"import java.util.regex.Pattern;"},{"lineNumber":20,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":21,"author":{"gitId":"nighoggDatatype"},"content":"public class Storage {"},{"lineNumber":22,"author":{"gitId":"nighoggDatatype"},"content":"    public static final String FILE_DIR \u003d \"data\";"},{"lineNumber":23,"author":{"gitId":"nighoggDatatype"},"content":"    public static final String FILE_NAME \u003d \"duke.txt\";"},{"lineNumber":24,"author":{"gitId":"nighoggDatatype"},"content":"    static int badLines \u003d 0;//Last call bad lines"},{"lineNumber":25,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":26,"author":{"gitId":"nighoggDatatype"},"content":"    public static TaskList LoadTaskList() throws IOException {"},{"lineNumber":27,"author":{"gitId":"nighoggDatatype"},"content":"        badLines \u003d 0;"},{"lineNumber":28,"author":{"gitId":"nighoggDatatype"},"content":"        List\u003cTask\u003e store \u003d new ArrayList\u003c\u003e();"},{"lineNumber":29,"author":{"gitId":"nighoggDatatype"},"content":"        File file \u003d getOrCreateFile();"},{"lineNumber":30,"author":{"gitId":"nighoggDatatype"},"content":"        Scanner s \u003d new Scanner(file);"},{"lineNumber":31,"author":{"gitId":"nighoggDatatype"},"content":"        generateLines: //TODO: Whats the code style for this."},{"lineNumber":32,"author":{"gitId":"nighoggDatatype"},"content":"        while(s.hasNextLine()){"},{"lineNumber":33,"author":{"gitId":"nighoggDatatype"},"content":"            Task t;"},{"lineNumber":34,"author":{"gitId":"nighoggDatatype"},"content":"            String line \u003d s.nextLine();"},{"lineNumber":35,"author":{"gitId":"nighoggDatatype"},"content":"            String pattern \u003d \"([TED]),([01]),(\\\\d*),(.*)\";"},{"lineNumber":36,"author":{"gitId":"nighoggDatatype"},"content":"            Pattern r \u003d Pattern.compile(pattern);"},{"lineNumber":37,"author":{"gitId":"nighoggDatatype"},"content":"            Matcher m \u003d r.matcher(line);"},{"lineNumber":38,"author":{"gitId":"nighoggDatatype"},"content":"            if(!m.find()){"},{"lineNumber":39,"author":{"gitId":"nighoggDatatype"},"content":"                badLines++;"},{"lineNumber":40,"author":{"gitId":"nighoggDatatype"},"content":"                break;"},{"lineNumber":41,"author":{"gitId":"nighoggDatatype"},"content":"            }"},{"lineNumber":42,"author":{"gitId":"nighoggDatatype"},"content":"            String type \u003d m.group(1);"},{"lineNumber":43,"author":{"gitId":"nighoggDatatype"},"content":"            boolean isDone \u003d m.group(2).equals(\"1\");"},{"lineNumber":44,"author":{"gitId":"nighoggDatatype"},"content":"            int taskLength \u003d Integer.parseInt(m.group(3));"},{"lineNumber":45,"author":{"gitId":"nighoggDatatype"},"content":"            String task \u003d m.group(4).substring(0,taskLength);"},{"lineNumber":46,"author":{"gitId":"nighoggDatatype"},"content":"            String leftover \u003d m.group(4).substring(taskLength);"},{"lineNumber":47,"author":{"gitId":"nighoggDatatype"},"content":"            try {"},{"lineNumber":48,"author":{"gitId":"nighoggDatatype"},"content":"                if (type.equals(\"E\") || type.equals(\"D\") ) {"},{"lineNumber":49,"author":{"gitId":"nighoggDatatype"},"content":"                    line \u003d leftover.substring(1);"},{"lineNumber":50,"author":{"gitId":"nighoggDatatype"},"content":"                    pattern \u003d \"(\\\\d*),(.*)\";"},{"lineNumber":51,"author":{"gitId":"nighoggDatatype"},"content":"                    r \u003d Pattern.compile(pattern);"},{"lineNumber":52,"author":{"gitId":"nighoggDatatype"},"content":"                    m \u003d r.matcher(line);"},{"lineNumber":53,"author":{"gitId":"nighoggDatatype"},"content":"                    if (!m.find()) {"},{"lineNumber":54,"author":{"gitId":"nighoggDatatype"},"content":"                        badLines++;"},{"lineNumber":55,"author":{"gitId":"nighoggDatatype"},"content":"                        break;"},{"lineNumber":56,"author":{"gitId":"nighoggDatatype"},"content":"                    }"},{"lineNumber":57,"author":{"gitId":"nighoggDatatype"},"content":"                    int timeLength \u003d Integer.parseInt(m.group(1));"},{"lineNumber":58,"author":{"gitId":"nighoggDatatype"},"content":"                    String timeData \u003d m.group(2).substring(0, timeLength);"},{"lineNumber":59,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":60,"author":{"gitId":"nighoggDatatype"},"content":"                    switch (type) {"},{"lineNumber":61,"author":{"gitId":"nighoggDatatype"},"content":"                    case \"E\":"},{"lineNumber":62,"author":{"gitId":"nighoggDatatype"},"content":"                        t \u003d new Event(task, timeData);"},{"lineNumber":63,"author":{"gitId":"nighoggDatatype"},"content":"                        break;"},{"lineNumber":64,"author":{"gitId":"nighoggDatatype"},"content":"                    case \"D\":"},{"lineNumber":65,"author":{"gitId":"nighoggDatatype"},"content":"                        t \u003d new Deadline(task, timeData);"},{"lineNumber":66,"author":{"gitId":"nighoggDatatype"},"content":"                        break;"},{"lineNumber":67,"author":{"gitId":"nighoggDatatype"},"content":"                    default:"},{"lineNumber":68,"author":{"gitId":"nighoggDatatype"},"content":"                        badLines++;"},{"lineNumber":69,"author":{"gitId":"nighoggDatatype"},"content":"                        break generateLines;"},{"lineNumber":70,"author":{"gitId":"nighoggDatatype"},"content":"                    }"},{"lineNumber":71,"author":{"gitId":"nighoggDatatype"},"content":"                } else {"},{"lineNumber":72,"author":{"gitId":"nighoggDatatype"},"content":"                    t \u003d new ToDos(task);"},{"lineNumber":73,"author":{"gitId":"nighoggDatatype"},"content":"                }"},{"lineNumber":74,"author":{"gitId":"nighoggDatatype"},"content":"            }catch(EmptyArgumentException e){"},{"lineNumber":75,"author":{"gitId":"nighoggDatatype"},"content":"                badLines++;"},{"lineNumber":76,"author":{"gitId":"nighoggDatatype"},"content":"                break;"},{"lineNumber":77,"author":{"gitId":"nighoggDatatype"},"content":"            }catch(BadDateArgumentException e){"},{"lineNumber":78,"author":{"gitId":"nighoggDatatype"},"content":"                badLines++;"},{"lineNumber":79,"author":{"gitId":"nighoggDatatype"},"content":"                break;"},{"lineNumber":80,"author":{"gitId":"nighoggDatatype"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"nighoggDatatype"},"content":"            if (isDone){"},{"lineNumber":82,"author":{"gitId":"nighoggDatatype"},"content":"                t.setDone();"},{"lineNumber":83,"author":{"gitId":"nighoggDatatype"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"nighoggDatatype"},"content":"            store.add(t);"},{"lineNumber":85,"author":{"gitId":"nighoggDatatype"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"nighoggDatatype"},"content":"        s.close();"},{"lineNumber":87,"author":{"gitId":"nighoggDatatype"},"content":"        return new TaskList(store);"},{"lineNumber":88,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":90,"author":{"gitId":"nighoggDatatype"},"content":"    public static void saveTaskList(TaskList data) throws IOException {"},{"lineNumber":91,"author":{"gitId":"nighoggDatatype"},"content":"        List\u003cTask\u003e store \u003d data.getRawData();"},{"lineNumber":92,"author":{"gitId":"nighoggDatatype"},"content":"        StringBuilder saveText \u003d new StringBuilder();"},{"lineNumber":93,"author":{"gitId":"nighoggDatatype"},"content":"        for (Task t: store){"},{"lineNumber":94,"author":{"gitId":"nighoggDatatype"},"content":"            saveText.append(t.toFileString());"},{"lineNumber":95,"author":{"gitId":"nighoggDatatype"},"content":"            saveText.append(\u0027\\n\u0027);"},{"lineNumber":96,"author":{"gitId":"nighoggDatatype"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"nighoggDatatype"},"content":"        File f \u003d getOrCreateFile();"},{"lineNumber":98,"author":{"gitId":"nighoggDatatype"},"content":"        FileWriter writer \u003d new FileWriter(f);"},{"lineNumber":99,"author":{"gitId":"nighoggDatatype"},"content":"        writer.write(saveText.toString());"},{"lineNumber":100,"author":{"gitId":"nighoggDatatype"},"content":"        writer.close();"},{"lineNumber":101,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":103,"author":{"gitId":"nighoggDatatype"},"content":"    private static File getOrCreateFile() throws IOException {"},{"lineNumber":104,"author":{"gitId":"nighoggDatatype"},"content":"        Files.createDirectories(Paths.get(FILE_DIR));"},{"lineNumber":105,"author":{"gitId":"nighoggDatatype"},"content":"        File file \u003d new File(FILE_DIR, FILE_NAME); // create a File for the given file path"},{"lineNumber":106,"author":{"gitId":"nighoggDatatype"},"content":"        file.createNewFile();"},{"lineNumber":107,"author":{"gitId":"nighoggDatatype"},"content":"        return file;"},{"lineNumber":108,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"nighoggDatatype"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":109}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":"import duke.exception.BadDateArgumentException;"},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"import duke.exception.EmptyArgumentException;"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"import duke.task.Deadline;"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"import duke.task.Event;"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":"import duke.task.ToDos;"},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":"import java.util.List;"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":"public class TaskList {"},{"lineNumber":14,"author":{"gitId":"nighoggDatatype"},"content":"    public enum Action{"},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"        ADD,"},{"lineNumber":16,"author":{"gitId":"nighoggDatatype"},"content":"        LIST,"},{"lineNumber":17,"author":{"gitId":"nighoggDatatype"},"content":"        DONE,"},{"lineNumber":18,"author":{"gitId":"nighoggDatatype"},"content":"        DELETE,"},{"lineNumber":19,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"nighoggDatatype"},"content":"    private boolean edited \u003d false;"},{"lineNumber":21,"author":{"gitId":"nighoggDatatype"},"content":"    private List\u003cTask\u003e store;"},{"lineNumber":22,"author":{"gitId":"nighoggDatatype"},"content":"    public TaskList(List\u003cTask\u003e store) {"},{"lineNumber":23,"author":{"gitId":"nighoggDatatype"},"content":"        this.store \u003d store;"},{"lineNumber":24,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":26,"author":{"gitId":"nighoggDatatype"},"content":"    public List\u003cTask\u003e getRawData(){"},{"lineNumber":27,"author":{"gitId":"nighoggDatatype"},"content":"        return this.store;"},{"lineNumber":28,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":30,"author":{"gitId":"nighoggDatatype"},"content":"    public String run(Command c) throws EmptyArgumentException, BadDateArgumentException {"},{"lineNumber":31,"author":{"gitId":"nighoggDatatype"},"content":"        String[] args \u003d c.run();"},{"lineNumber":32,"author":{"gitId":"nighoggDatatype"},"content":"        String results;"},{"lineNumber":33,"author":{"gitId":"nighoggDatatype"},"content":"        switch(c.getType()){"},{"lineNumber":34,"author":{"gitId":"nighoggDatatype"},"content":"        case ADD:"},{"lineNumber":35,"author":{"gitId":"nighoggDatatype"},"content":"            results \u003d addTask(args);"},{"lineNumber":36,"author":{"gitId":"nighoggDatatype"},"content":"            edited \u003d true;"},{"lineNumber":37,"author":{"gitId":"nighoggDatatype"},"content":"            break;"},{"lineNumber":38,"author":{"gitId":"nighoggDatatype"},"content":"        case DONE:"},{"lineNumber":39,"author":{"gitId":"nighoggDatatype"},"content":"            results \u003d setDone(Integer.parseInt(args[0]));"},{"lineNumber":40,"author":{"gitId":"nighoggDatatype"},"content":"            edited \u003d true;"},{"lineNumber":41,"author":{"gitId":"nighoggDatatype"},"content":"            break;"},{"lineNumber":42,"author":{"gitId":"nighoggDatatype"},"content":"        case DELETE:"},{"lineNumber":43,"author":{"gitId":"nighoggDatatype"},"content":"            results \u003d delete(Integer.parseInt(args[0]));"},{"lineNumber":44,"author":{"gitId":"nighoggDatatype"},"content":"            edited \u003d true;"},{"lineNumber":45,"author":{"gitId":"nighoggDatatype"},"content":"            break;"},{"lineNumber":46,"author":{"gitId":"nighoggDatatype"},"content":"        case LIST:"},{"lineNumber":47,"author":{"gitId":"nighoggDatatype"},"content":"            results \u003d getList();"},{"lineNumber":48,"author":{"gitId":"nighoggDatatype"},"content":"            break;"},{"lineNumber":49,"author":{"gitId":"nighoggDatatype"},"content":"        default:"},{"lineNumber":50,"author":{"gitId":"nighoggDatatype"},"content":"            results \u003d \"\";"},{"lineNumber":51,"author":{"gitId":"nighoggDatatype"},"content":"            break;"},{"lineNumber":52,"author":{"gitId":"nighoggDatatype"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"nighoggDatatype"},"content":"        return results;"},{"lineNumber":54,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"nighoggDatatype"},"content":"    public void markSaved(){"},{"lineNumber":56,"author":{"gitId":"nighoggDatatype"},"content":"        edited \u003d false;"},{"lineNumber":57,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"nighoggDatatype"},"content":"    public boolean isEdited(){"},{"lineNumber":59,"author":{"gitId":"nighoggDatatype"},"content":"        return this.edited;"},{"lineNumber":60,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"nighoggDatatype"},"content":"    private String addTask(String[] tokens) throws EmptyArgumentException, BadDateArgumentException {"},{"lineNumber":62,"author":{"gitId":"nighoggDatatype"},"content":"        Task t;"},{"lineNumber":63,"author":{"gitId":"nighoggDatatype"},"content":"        switch(tokens[0]){"},{"lineNumber":64,"author":{"gitId":"nighoggDatatype"},"content":"        case \"D\":"},{"lineNumber":65,"author":{"gitId":"nighoggDatatype"},"content":"            t \u003d new Deadline(tokens[1], tokens[2]);"},{"lineNumber":66,"author":{"gitId":"nighoggDatatype"},"content":"            break;"},{"lineNumber":67,"author":{"gitId":"nighoggDatatype"},"content":"        case \"E\":"},{"lineNumber":68,"author":{"gitId":"nighoggDatatype"},"content":"            t \u003d new Event(tokens[1], tokens[2]);"},{"lineNumber":69,"author":{"gitId":"nighoggDatatype"},"content":"            break;"},{"lineNumber":70,"author":{"gitId":"nighoggDatatype"},"content":"        case \"T\":"},{"lineNumber":71,"author":{"gitId":"nighoggDatatype"},"content":"            //Fall through"},{"lineNumber":72,"author":{"gitId":"nighoggDatatype"},"content":"        default: //More fault tolerant"},{"lineNumber":73,"author":{"gitId":"nighoggDatatype"},"content":"            t \u003d new ToDos(tokens[1]);"},{"lineNumber":74,"author":{"gitId":"nighoggDatatype"},"content":"            break;"},{"lineNumber":75,"author":{"gitId":"nighoggDatatype"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"nighoggDatatype"},"content":"        store.add(t);"},{"lineNumber":77,"author":{"gitId":"nighoggDatatype"},"content":"        return formatOrderedPrint(-1);"},{"lineNumber":78,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"nighoggDatatype"},"content":"    private String setDone(int doneIndex){"},{"lineNumber":80,"author":{"gitId":"nighoggDatatype"},"content":"        Task t \u003d store.get(doneIndex);"},{"lineNumber":81,"author":{"gitId":"nighoggDatatype"},"content":"        t.setDone();"},{"lineNumber":82,"author":{"gitId":"nighoggDatatype"},"content":"        return formatOrderedPrint(doneIndex);"},{"lineNumber":83,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"nighoggDatatype"},"content":"    private String delete(int deleteIndex){"},{"lineNumber":85,"author":{"gitId":"nighoggDatatype"},"content":"        String returnValue \u003d formatOrderedPrint(deleteIndex);"},{"lineNumber":86,"author":{"gitId":"nighoggDatatype"},"content":"        store.remove(deleteIndex);"},{"lineNumber":87,"author":{"gitId":"nighoggDatatype"},"content":"        return returnValue;"},{"lineNumber":88,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"nighoggDatatype"},"content":"    public String getList(){"},{"lineNumber":90,"author":{"gitId":"nighoggDatatype"},"content":"        StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":91,"author":{"gitId":"nighoggDatatype"},"content":"        for (int i \u003d 0 ; i \u003c store.size(); i++) {"},{"lineNumber":92,"author":{"gitId":"nighoggDatatype"},"content":"            builder.append(formatOrderedPrint(i));"},{"lineNumber":93,"author":{"gitId":"nighoggDatatype"},"content":"            builder.append(\u0027\\n\u0027);"},{"lineNumber":94,"author":{"gitId":"nighoggDatatype"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"nighoggDatatype"},"content":"        return builder.toString();"},{"lineNumber":96,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":98,"author":{"gitId":"nighoggDatatype"},"content":"    private String formatOrderedPrint(int i){"},{"lineNumber":99,"author":{"gitId":"nighoggDatatype"},"content":"        final int size \u003d store.size();"},{"lineNumber":100,"author":{"gitId":"nighoggDatatype"},"content":"        while (i \u003c 0){"},{"lineNumber":101,"author":{"gitId":"nighoggDatatype"},"content":"            i +\u003d size;"},{"lineNumber":102,"author":{"gitId":"nighoggDatatype"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"nighoggDatatype"},"content":"        while (i \u003e\u003d size){"},{"lineNumber":104,"author":{"gitId":"nighoggDatatype"},"content":"            i -\u003d size;"},{"lineNumber":105,"author":{"gitId":"nighoggDatatype"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"nighoggDatatype"},"content":"        return \"Entry \" + (i+1) + \"|\" + store.get(i).toString();"},{"lineNumber":107,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"nighoggDatatype"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":108}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":"import duke.exception.BadDateArgumentException;"},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"import duke.exception.EmptyArgumentException;"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"import duke.exception.InvalidCommandException;"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"import java.text.ParseException;"},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"public class Ui {"},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":"    private String logo \u003d"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":"              \" ____        _        \\n\" //TODO: Figure out if this is allowed by style"},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":14,"author":{"gitId":"nighoggDatatype"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":16,"author":{"gitId":"nighoggDatatype"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":17,"author":{"gitId":"nighoggDatatype"},"content":"    private String separator \u003d \"------------------\\n\";"},{"lineNumber":18,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":19,"author":{"gitId":"nighoggDatatype"},"content":"    public void startUpMessage(){"},{"lineNumber":20,"author":{"gitId":"nighoggDatatype"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":21,"author":{"gitId":"nighoggDatatype"},"content":"        System.out.println(\"No unicode allowed\");"},{"lineNumber":22,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"nighoggDatatype"},"content":"    public void goodByeMessage(){"},{"lineNumber":24,"author":{"gitId":"nighoggDatatype"},"content":"        System.out.println(separator + \"Goodbye from\\n\" + logo);"},{"lineNumber":25,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"nighoggDatatype"},"content":"    public void prompt(){"},{"lineNumber":27,"author":{"gitId":"nighoggDatatype"},"content":"        System.out.print(separator + \"Listening to your input: \");"},{"lineNumber":28,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"nighoggDatatype"},"content":"    public void loadStart(){"},{"lineNumber":30,"author":{"gitId":"nighoggDatatype"},"content":"        System.out.println(\"Loading From File...\");"},{"lineNumber":31,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"nighoggDatatype"},"content":"    public void loadSuccess(){"},{"lineNumber":33,"author":{"gitId":"nighoggDatatype"},"content":"        System.out.println(\"Loaded\");"},{"lineNumber":34,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"nighoggDatatype"},"content":"    public void loadFail(){"},{"lineNumber":36,"author":{"gitId":"nighoggDatatype"},"content":"        System.out.println(\"Failed to Load file. Aborting.\");"},{"lineNumber":37,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"nighoggDatatype"},"content":"    public void dumpState(TaskList store){"},{"lineNumber":39,"author":{"gitId":"nighoggDatatype"},"content":"        System.out.println(\"Unable to save list. Dumping ...\");"},{"lineNumber":40,"author":{"gitId":"nighoggDatatype"},"content":"        System.out.print(store.getList());"},{"lineNumber":41,"author":{"gitId":"nighoggDatatype"},"content":"        System.out.println(\"Continuing Normal operation\");"},{"lineNumber":42,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"nighoggDatatype"},"content":"    public void commandMessage(Command command, String data){"},{"lineNumber":44,"author":{"gitId":"nighoggDatatype"},"content":"        switch(command.getType()){"},{"lineNumber":45,"author":{"gitId":"nighoggDatatype"},"content":"        case LIST:"},{"lineNumber":46,"author":{"gitId":"nighoggDatatype"},"content":"            System.out.print(data);"},{"lineNumber":47,"author":{"gitId":"nighoggDatatype"},"content":"            break;"},{"lineNumber":48,"author":{"gitId":"nighoggDatatype"},"content":"        case DONE:"},{"lineNumber":49,"author":{"gitId":"nighoggDatatype"},"content":"            System.out.println(\"The following task is now marked as done:\\n\" +"},{"lineNumber":50,"author":{"gitId":"nighoggDatatype"},"content":"                    data);"},{"lineNumber":51,"author":{"gitId":"nighoggDatatype"},"content":"            break;"},{"lineNumber":52,"author":{"gitId":"nighoggDatatype"},"content":"        case ADD:"},{"lineNumber":53,"author":{"gitId":"nighoggDatatype"},"content":"            System.out.println(\"The following task has been added:\\n\" +"},{"lineNumber":54,"author":{"gitId":"nighoggDatatype"},"content":"                    data);"},{"lineNumber":55,"author":{"gitId":"nighoggDatatype"},"content":"            break;"},{"lineNumber":56,"author":{"gitId":"nighoggDatatype"},"content":"        case DELETE:"},{"lineNumber":57,"author":{"gitId":"nighoggDatatype"},"content":"            System.out.println(\"The following Task has been deleted:\");"},{"lineNumber":58,"author":{"gitId":"nighoggDatatype"},"content":"            System.out.println(data);"},{"lineNumber":59,"author":{"gitId":"nighoggDatatype"},"content":"            break;"},{"lineNumber":60,"author":{"gitId":"nighoggDatatype"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"nighoggDatatype"},"content":"    //TODO: Figure out if this overloading is acceptable from a coding style perspective."},{"lineNumber":63,"author":{"gitId":"nighoggDatatype"},"content":"    public void handleException(ParseException e){"},{"lineNumber":64,"author":{"gitId":"nighoggDatatype"},"content":"        System.out.println(\"Command has invalid parsing.\");"},{"lineNumber":65,"author":{"gitId":"nighoggDatatype"},"content":"        System.out.println(e.getMessage());"},{"lineNumber":66,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"nighoggDatatype"},"content":"    public void handleException(InvalidCommandException e){"},{"lineNumber":68,"author":{"gitId":"nighoggDatatype"},"content":"        System.out.println(e.getMessage());"},{"lineNumber":69,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"nighoggDatatype"},"content":"    public void handleException(EmptyArgumentException e){"},{"lineNumber":71,"author":{"gitId":"nighoggDatatype"},"content":"        System.out.println(\"Cannot have empty argument\");"},{"lineNumber":72,"author":{"gitId":"nighoggDatatype"},"content":"        System.out.println(e.getMessage());"},{"lineNumber":73,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"nighoggDatatype"},"content":"    public void handleException(BadDateArgumentException e) {"},{"lineNumber":75,"author":{"gitId":"nighoggDatatype"},"content":"        System.out.println(\"Date must be of format \u0027dd MM yyyy\u0027; Eg: 27 08 2044\");"},{"lineNumber":76,"author":{"gitId":"nighoggDatatype"},"content":"        System.out.println(e.getMessage());"},{"lineNumber":77,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"nighoggDatatype"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":78}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"import duke.TaskList;"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":"import duke.TaskList.Action;"},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"public class AddCommand extends Command{"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"    String[] args;"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":"    public AddCommand(String[] args){"},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"        this.args \u003d args;"},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"nighoggDatatype"},"content":"    public String[] run() {"},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"        return args;"},{"lineNumber":16,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":18,"author":{"gitId":"nighoggDatatype"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"nighoggDatatype"},"content":"    public Action getType() {"},{"lineNumber":20,"author":{"gitId":"nighoggDatatype"},"content":"        return Action.ADD;"},{"lineNumber":21,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"nighoggDatatype"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":22}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"import duke.TaskList;"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"public abstract class Command {"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"    public abstract String[] run();"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"    public abstract TaskList.Action getType();"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":8}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"import duke.TaskList.Action;"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"public class DeleteCommand extends IndexedCommand{"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"    public DeleteCommand(int position) {"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"        super(position);"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":"    public Action getType() {"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":"        return Action.DELETE;"},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"nighoggDatatype"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":14}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"import duke.TaskList.Action;"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"public class DoneCommand extends IndexedCommand{"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"    public DoneCommand(int position) {"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"        super(position);"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":"    public Action getType() {"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":"        return Action.DONE;"},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"nighoggDatatype"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":14}},{"path":"src/main/java/duke/command/IndexedCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"abstract class IndexedCommand extends Command{"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":"    private final int index;"},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"    public IndexedCommand(int position){"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"        this.index \u003d position - 1;"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":"    @Override"},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"    public String[] run() {"},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":"        return new String[]{String.valueOf(index)};"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":13}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"import duke.TaskList.Action;"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"public class ListCommand extends Command {"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"    public String[] run() {"},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":"        return new String[0];"},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":"    public Action getType() {"},{"lineNumber":14,"author":{"gitId":"nighoggDatatype"},"content":"        return Action.LIST;"},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"nighoggDatatype"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":16}},{"path":"src/main/java/duke/exception/BadDateArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"public class BadDateArgumentException extends Exception{"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"    private static final long serialVersionUID \u003d 1L;"},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":9}},{"path":"src/main/java/duke/exception/EmptyArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"public class EmptyArgumentException extends Exception{"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"     */"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"    private static final long serialVersionUID \u003d 1L;"},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":"    "},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":10}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"public class InvalidCommandException extends Exception {"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"    private String badCommand;"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"    public InvalidCommandException(String badCommand) {"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"        this.badCommand \u003d badCommand;"},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":"\t}"},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":"\tprivate static final long serialVersionUID \u003d 1L;"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":"    "},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"nighoggDatatype"},"content":"    public String getMessage() {"},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"        return \"Command.Command \u0027\" + badCommand + \"\u0027 is not recognized.\";"},{"lineNumber":16,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"nighoggDatatype"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":17}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"import duke.exception.EmptyArgumentException;"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":"import duke.exception.BadDateArgumentException;"},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"public class Deadline extends Task {"},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":"    protected LocalDate by;"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":"    public Deadline(String description, String by) throws EmptyArgumentException, BadDateArgumentException {"},{"lineNumber":14,"author":{"gitId":"nighoggDatatype"},"content":"        super(description);"},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MM yyyy\");"},{"lineNumber":16,"author":{"gitId":"nighoggDatatype"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"nighoggDatatype"},"content":"            LocalDate date \u003d LocalDate.parse(by, formatter);"},{"lineNumber":18,"author":{"gitId":"nighoggDatatype"},"content":"            this.by \u003d date;"},{"lineNumber":19,"author":{"gitId":"nighoggDatatype"},"content":"        }catch(DateTimeParseException e){"},{"lineNumber":20,"author":{"gitId":"nighoggDatatype"},"content":"            throw new BadDateArgumentException();"},{"lineNumber":21,"author":{"gitId":"nighoggDatatype"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":24,"author":{"gitId":"nighoggDatatype"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"nighoggDatatype"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"nighoggDatatype"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMMM dd, yyyy\");"},{"lineNumber":27,"author":{"gitId":"nighoggDatatype"},"content":"        return \"[D]\" + super.toString() + \" (Deadline: \" + by.format(formatter) + \")\";"},{"lineNumber":28,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":30,"author":{"gitId":"nighoggDatatype"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"nighoggDatatype"},"content":"    public String toFileString() {"},{"lineNumber":32,"author":{"gitId":"nighoggDatatype"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MM yyyy\");"},{"lineNumber":33,"author":{"gitId":"nighoggDatatype"},"content":"        String date \u003d by.format(formatter);"},{"lineNumber":34,"author":{"gitId":"nighoggDatatype"},"content":"        return \"D,\" + super.toBaseFileString() + \",\" + date.length() + \",\" + date;"},{"lineNumber":35,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"nighoggDatatype"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":36}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"import duke.exception.EmptyArgumentException;"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"public class Event extends Task{"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"    private String eventPeriod;"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"    public Event(String description, String eventPeriod) throws EmptyArgumentException {"},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":"        super(description);"},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"        eventPeriod \u003d eventPeriod.trim();"},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":"        if (eventPeriod.isEmpty()){"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":"            throw new EmptyArgumentException();"},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":"        }"},{"lineNumber":14,"author":{"gitId":"nighoggDatatype"},"content":"        this.eventPeriod \u003d eventPeriod;"},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":17,"author":{"gitId":"nighoggDatatype"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"nighoggDatatype"},"content":"    public String toString() {"},{"lineNumber":19,"author":{"gitId":"nighoggDatatype"},"content":"        return \"[E]\" + super.toString() + \" (Event Time: \" + eventPeriod + \")\";"},{"lineNumber":20,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":22,"author":{"gitId":"nighoggDatatype"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"nighoggDatatype"},"content":"    public String toFileString() {"},{"lineNumber":24,"author":{"gitId":"nighoggDatatype"},"content":"        return \"E,\" + super.toBaseFileString() + \",\" + eventPeriod.length() + \",\" + eventPeriod;"},{"lineNumber":25,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"nighoggDatatype"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":26}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"import duke.exception.EmptyArgumentException;"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"public abstract class Task {"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"    private final String description;"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"    private boolean isDone; //TODO: Figure out if I can restrict access"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":"    public Task(String description) throws EmptyArgumentException {"},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"        description \u003d description.trim();"},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":"        if (description.isEmpty()){"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":"            throw new EmptyArgumentException();"},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":"        }"},{"lineNumber":14,"author":{"gitId":"nighoggDatatype"},"content":"        this.description \u003d description;"},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"        this.isDone \u003d false;"},{"lineNumber":16,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":18,"author":{"gitId":"nighoggDatatype"},"content":"    public void setDone(){"},{"lineNumber":19,"author":{"gitId":"nighoggDatatype"},"content":"        this.isDone \u003d true;"},{"lineNumber":20,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":22,"author":{"gitId":"nighoggDatatype"},"content":"    public String getStatusIcon() {"},{"lineNumber":23,"author":{"gitId":"nighoggDatatype"},"content":"        return (isDone ? \"*\" : \" \"); //Don\u0027t use unicode, cause it can\u0027t test properly"},{"lineNumber":24,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":26,"author":{"gitId":"nighoggDatatype"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"nighoggDatatype"},"content":"    public String toString() {"},{"lineNumber":28,"author":{"gitId":"nighoggDatatype"},"content":"        return \"[\"+ this.getStatusIcon()+\"]: \" +"},{"lineNumber":29,"author":{"gitId":"nighoggDatatype"},"content":"                description;"},{"lineNumber":30,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":32,"author":{"gitId":"nighoggDatatype"},"content":"    public abstract String toFileString();"},{"lineNumber":33,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":34,"author":{"gitId":"nighoggDatatype"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"nighoggDatatype"},"content":"    public int hashCode(){"},{"lineNumber":36,"author":{"gitId":"nighoggDatatype"},"content":"        return this.toString().hashCode();"},{"lineNumber":37,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":39,"author":{"gitId":"nighoggDatatype"},"content":"    String toBaseFileString(){"},{"lineNumber":40,"author":{"gitId":"nighoggDatatype"},"content":"        return (isDone ? \"1\" : \"0\") + \",\" + description.length() + \",\" + description;"},{"lineNumber":41,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"nighoggDatatype"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":42}},{"path":"src/main/java/duke/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"import duke.exception.EmptyArgumentException;"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"public class ToDos extends Task{"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"    public ToDos(String description) throws EmptyArgumentException {"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"        super(description);"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":"    public String toString() {"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"nighoggDatatype"},"content":"    public String toFileString() {"},{"lineNumber":17,"author":{"gitId":"nighoggDatatype"},"content":"        return \"T,\" + super.toBaseFileString();"},{"lineNumber":18,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"nighoggDatatype"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"public class DukeTest {"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":"    public void dummyTest(){"},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"        assertEquals(2, 2);"},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":12}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"import duke.command.AddCommand;"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":"import duke.command.Command;"},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"import duke.command.ListCommand;"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":"public class ParserTest {"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":"    public void exitTest(){"},{"lineNumber":14,"author":{"gitId":"nighoggDatatype"},"content":"        try {"},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"            Assertions.assertNull(Parser.parse(\"bye\"));"},{"lineNumber":16,"author":{"gitId":"nighoggDatatype"},"content":"            Assertions.assertNull(Parser.parse(\"exit\"));"},{"lineNumber":17,"author":{"gitId":"nighoggDatatype"},"content":"        } catch (Exception e) {"},{"lineNumber":18,"author":{"gitId":"nighoggDatatype"},"content":"            fail(\"Should not throw Exception\");"},{"lineNumber":19,"author":{"gitId":"nighoggDatatype"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"nighoggDatatype"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"nighoggDatatype"},"content":"    public void listTest(){"},{"lineNumber":23,"author":{"gitId":"nighoggDatatype"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"nighoggDatatype"},"content":"            Assertions.assertTrue(Parser.parse(\"list\") instanceof ListCommand);"},{"lineNumber":25,"author":{"gitId":"nighoggDatatype"},"content":"            Assertions.assertTrue(Parser.parse(\" ls \") instanceof ListCommand);"},{"lineNumber":26,"author":{"gitId":"nighoggDatatype"},"content":"        } catch (Exception e) {"},{"lineNumber":27,"author":{"gitId":"nighoggDatatype"},"content":"            fail(\"Should not throw Exception\");"},{"lineNumber":28,"author":{"gitId":"nighoggDatatype"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"nighoggDatatype"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"nighoggDatatype"},"content":"    public void todoTest(){"},{"lineNumber":32,"author":{"gitId":"nighoggDatatype"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"nighoggDatatype"},"content":"            Command c \u003d Parser.parse(\"TODO blow up the moon\");"},{"lineNumber":34,"author":{"gitId":"nighoggDatatype"},"content":"            Assertions.assertTrue(c instanceof AddCommand);"},{"lineNumber":35,"author":{"gitId":"nighoggDatatype"},"content":"            Assertions.assertEquals(2, c.run().length);"},{"lineNumber":36,"author":{"gitId":"nighoggDatatype"},"content":"            Assertions.assertEquals(\"T\", c.run()[0]);"},{"lineNumber":37,"author":{"gitId":"nighoggDatatype"},"content":"            Assertions.assertEquals(\"blow up the moon\", c.run()[1]);"},{"lineNumber":38,"author":{"gitId":"nighoggDatatype"},"content":"        } catch (Exception e) {"},{"lineNumber":39,"author":{"gitId":"nighoggDatatype"},"content":"            fail(\"Should not throw Exception\");"},{"lineNumber":40,"author":{"gitId":"nighoggDatatype"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"nighoggDatatype"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":42}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"import duke.exception.BadDateArgumentException;"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":"import duke.exception.EmptyArgumentException;"},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":9,"author":{"gitId":"nighoggDatatype"},"content":""},{"lineNumber":10,"author":{"gitId":"nighoggDatatype"},"content":"public class DeadlineTest {"},{"lineNumber":11,"author":{"gitId":"nighoggDatatype"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"nighoggDatatype"},"content":"    public void incorrectParseTest(){"},{"lineNumber":13,"author":{"gitId":"nighoggDatatype"},"content":"        String[] badList \u003d {\"2202 10 31\", \"May 20 2421\", \"11 30 2020\", \"13 8 2000\"};"},{"lineNumber":14,"author":{"gitId":"nighoggDatatype"},"content":"        for(String badString: badList) {"},{"lineNumber":15,"author":{"gitId":"nighoggDatatype"},"content":"            try {"},{"lineNumber":16,"author":{"gitId":"nighoggDatatype"},"content":"                new Deadline(\"Dud Desc.\", badString);"},{"lineNumber":17,"author":{"gitId":"nighoggDatatype"},"content":"                fail(\"Exception not thrown\");"},{"lineNumber":18,"author":{"gitId":"nighoggDatatype"},"content":"            } catch (EmptyArgumentException e) {"},{"lineNumber":19,"author":{"gitId":"nighoggDatatype"},"content":"                fail(\"Wrong Exception Thrown\");"},{"lineNumber":20,"author":{"gitId":"nighoggDatatype"},"content":"            } catch (BadDateArgumentException e) {"},{"lineNumber":21,"author":{"gitId":"nighoggDatatype"},"content":"            }"},{"lineNumber":22,"author":{"gitId":"nighoggDatatype"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"nighoggDatatype"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"nighoggDatatype"},"content":"    public void basicToStringTest(){"},{"lineNumber":26,"author":{"gitId":"nighoggDatatype"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"nighoggDatatype"},"content":"            Deadline d \u003d new Deadline(\"Dud Desc.\", \"13 08 2020\");"},{"lineNumber":28,"author":{"gitId":"nighoggDatatype"},"content":"            Assertions.assertEquals(\"[D][ ]: Dud Desc. (Deadline: August 13, 2020)\",d.toString());"},{"lineNumber":29,"author":{"gitId":"nighoggDatatype"},"content":"            d.setDone();"},{"lineNumber":30,"author":{"gitId":"nighoggDatatype"},"content":"            Assertions.assertEquals(\"[D][*]: Dud Desc. (Deadline: August 13, 2020)\",d.toString());"},{"lineNumber":31,"author":{"gitId":"nighoggDatatype"},"content":"        } catch (Exception e) {"},{"lineNumber":32,"author":{"gitId":"nighoggDatatype"},"content":"            e.printStackTrace();"},{"lineNumber":33,"author":{"gitId":"nighoggDatatype"},"content":"            fail(\"Should not have exception\");"},{"lineNumber":34,"author":{"gitId":"nighoggDatatype"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"nighoggDatatype"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"nighoggDatatype"},"content":"}"}],"authorContributionMap":{"nighoggDatatype":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"nighoggDatatype"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":2,"author":{"gitId":"nighoggDatatype"},"content":"todo Dab on Homies"},{"lineNumber":3,"author":{"gitId":"nighoggDatatype"},"content":"event Ninja_0 /at 3pm EST"},{"lineNumber":4,"author":{"gitId":"nighoggDatatype"},"content":"list"},{"lineNumber":5,"author":{"gitId":"nighoggDatatype"},"content":"done 3"},{"lineNumber":6,"author":{"gitId":"nighoggDatatype"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"nighoggDatatype"},"content":"list"},{"lineNumber":8,"author":{"gitId":"nighoggDatatype"},"content":"bye"}],"authorContributionMap":{"nighoggDatatype":8}}]
