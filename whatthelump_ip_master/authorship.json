[{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whatthelump"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":3,"author":{"gitId":"whatthelump"},"content":"enum Command {"},{"lineNumber":4,"author":{"gitId":"whatthelump"},"content":"    BYE, DEADLINE, EVENT, LIST, TODO"},{"lineNumber":5,"author":{"gitId":"whatthelump"},"content":"}"}],"authorContributionMap":{"whatthelump":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whatthelump"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":3,"author":{"gitId":"whatthelump"},"content":"public class Deadline extends Task {"},{"lineNumber":4,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":5,"author":{"gitId":"whatthelump"},"content":"    protected String by;"},{"lineNumber":6,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":7,"author":{"gitId":"whatthelump"},"content":"    public Deadline(String description, String by) {"},{"lineNumber":8,"author":{"gitId":"whatthelump"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"whatthelump"},"content":"        this.by \u003d by;"},{"lineNumber":10,"author":{"gitId":"whatthelump"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":12,"author":{"gitId":"whatthelump"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"whatthelump"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"whatthelump"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":15,"author":{"gitId":"whatthelump"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"whatthelump"},"content":"}"}],"authorContributionMap":{"whatthelump":16}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whatthelump"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":3,"author":{"gitId":"whatthelump"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"whatthelump"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"whatthelump"},"content":"import java.util.Scanner;"},{"lineNumber":6,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"whatthelump"},"content":"    public static void main(String[] args) throws StringIndexOutOfBoundsException {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":15,"author":{"gitId":"whatthelump"},"content":"        System.out.println(\"Greetings and salutations! I am Duke, a helpful chatbot.\\nPlease enter your command(s).\");"},{"lineNumber":16,"author":{"gitId":"whatthelump"},"content":"        System.out.println(\"Available commands: todo (task), deadline (task) /by (time), event (task) /at (time)\");"},{"lineNumber":17,"author":{"gitId":"whatthelump"},"content":"        System.out.println(\"To view the list of tasks, enter the command \u0027list\u0027.\");"},{"lineNumber":18,"author":{"gitId":"whatthelump"},"content":"        System.out.println(\"To exit, enter the command \u0027bye\u0027.\");"},{"lineNumber":19,"author":{"gitId":"whatthelump"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":20,"author":{"gitId":"whatthelump"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e(100);"},{"lineNumber":21,"author":{"gitId":"whatthelump"},"content":"        while (true) {"},{"lineNumber":22,"author":{"gitId":"whatthelump"},"content":"            String input \u003d sc.nextLine();"},{"lineNumber":23,"author":{"gitId":"whatthelump"},"content":"            try {"},{"lineNumber":24,"author":{"gitId":"whatthelump"},"content":"                if (input.equals(\"bye\")) {"},{"lineNumber":25,"author":{"gitId":"whatthelump"},"content":"                    break;"},{"lineNumber":26,"author":{"gitId":"whatthelump"},"content":"                } else if (input.equals(\"list\")) {"},{"lineNumber":27,"author":{"gitId":"whatthelump"},"content":"                    if (list.isEmpty()) {"},{"lineNumber":28,"author":{"gitId":"whatthelump"},"content":"                        System.out.println(\"The list of tasks is empty!\");"},{"lineNumber":29,"author":{"gitId":"whatthelump"},"content":"                    } else {"},{"lineNumber":30,"author":{"gitId":"whatthelump"},"content":"                        StringBuilder output \u003d new StringBuilder();"},{"lineNumber":31,"author":{"gitId":"whatthelump"},"content":"                        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"},{"lineNumber":32,"author":{"gitId":"whatthelump"},"content":"                            output.append(i).append(\". \").append(list.get(i - 1)).append(\"\\n\");"},{"lineNumber":33,"author":{"gitId":"whatthelump"},"content":"                        }"},{"lineNumber":34,"author":{"gitId":"whatthelump"},"content":"                        System.out.println(output);"},{"lineNumber":35,"author":{"gitId":"whatthelump"},"content":"                    }"},{"lineNumber":36,"author":{"gitId":"whatthelump"},"content":"                } else if (input.substring(0, 4).equals(\"done\")) {"},{"lineNumber":37,"author":{"gitId":"whatthelump"},"content":"                    try {"},{"lineNumber":38,"author":{"gitId":"whatthelump"},"content":"                        int pointer \u003d Integer.parseInt(input.substring(5)) - 1;"},{"lineNumber":39,"author":{"gitId":"whatthelump"},"content":"                        Task task \u003d list.get(pointer);"},{"lineNumber":40,"author":{"gitId":"whatthelump"},"content":"                        task.markAsDone();"},{"lineNumber":41,"author":{"gitId":"whatthelump"},"content":"                        list.set(pointer, task);"},{"lineNumber":42,"author":{"gitId":"whatthelump"},"content":"                        System.out.println(\"Sweet! I\u0027ve marked this task as done:\\n\" + list.get(pointer));"},{"lineNumber":43,"author":{"gitId":"whatthelump"},"content":"                    } catch (NumberFormatException e) {"},{"lineNumber":44,"author":{"gitId":"whatthelump"},"content":"                        System.out.println(\"Number format exception, enter a number from 1-100!\");"},{"lineNumber":45,"author":{"gitId":"whatthelump"},"content":"                    } catch (IndexOutOfBoundsException e) {"},{"lineNumber":46,"author":{"gitId":"whatthelump"},"content":"                        System.out.println(\"Array index is out of bounds, the current number of elements in the list \" +"},{"lineNumber":47,"author":{"gitId":"whatthelump"},"content":"                                \"is \" + list.size() + \".\");"},{"lineNumber":48,"author":{"gitId":"whatthelump"},"content":"                    }"},{"lineNumber":49,"author":{"gitId":"whatthelump"},"content":"                } else if (input.substring(0, 4).equals(\"todo\")) {"},{"lineNumber":50,"author":{"gitId":"whatthelump"},"content":"                    try {"},{"lineNumber":51,"author":{"gitId":"whatthelump"},"content":"                        todo t \u003d new todo(input.substring(5));"},{"lineNumber":52,"author":{"gitId":"whatthelump"},"content":"                        list.add(t);"},{"lineNumber":53,"author":{"gitId":"whatthelump"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\\n\" +"},{"lineNumber":54,"author":{"gitId":"whatthelump"},"content":"                                t.toString() + \"\\nNow you have \" + list.size() + \" tasks in the list.\");"},{"lineNumber":55,"author":{"gitId":"whatthelump"},"content":"                    } catch (StringIndexOutOfBoundsException e){"},{"lineNumber":56,"author":{"gitId":"whatthelump"},"content":"                        System.out.println(\"â˜¹ OOPS!!! The description of a \" + input + \" cannot be empty.\");"},{"lineNumber":57,"author":{"gitId":"whatthelump"},"content":"                    }"},{"lineNumber":58,"author":{"gitId":"whatthelump"},"content":"                } else if (input.substring(0, 5).equals(\"event\")) {"},{"lineNumber":59,"author":{"gitId":"whatthelump"},"content":"                    try {"},{"lineNumber":60,"author":{"gitId":"whatthelump"},"content":"                        String[] split \u003d input.split(\"/\");"},{"lineNumber":61,"author":{"gitId":"whatthelump"},"content":"                        String description \u003d split[0].substring(6);"},{"lineNumber":62,"author":{"gitId":"whatthelump"},"content":"                        String at \u003d split[1].substring(3);"},{"lineNumber":63,"author":{"gitId":"whatthelump"},"content":"                        Event e \u003d new Event(description, at);"},{"lineNumber":64,"author":{"gitId":"whatthelump"},"content":"                        list.add(e);"},{"lineNumber":65,"author":{"gitId":"whatthelump"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\\n\" +"},{"lineNumber":66,"author":{"gitId":"whatthelump"},"content":"                                e.toString() + \"\\nNow you have \" + list.size() + \" tasks in the list.\");"},{"lineNumber":67,"author":{"gitId":"whatthelump"},"content":"                    } catch (StringIndexOutOfBoundsException e){"},{"lineNumber":68,"author":{"gitId":"whatthelump"},"content":"                        System.out.println(\"â˜¹ OOPS!!! The description of a \" + input + \" cannot be empty.\");"},{"lineNumber":69,"author":{"gitId":"whatthelump"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":70,"author":{"gitId":"whatthelump"},"content":"                        System.out.println(\"â˜¹ OOPS!!! The format for an event task should be \u0027event (task)\" +"},{"lineNumber":71,"author":{"gitId":"whatthelump"},"content":"                                \" /at (time)\u0027\");"},{"lineNumber":72,"author":{"gitId":"whatthelump"},"content":"                    }"},{"lineNumber":73,"author":{"gitId":"whatthelump"},"content":"                } else if (input.substring(0, 6).equals(\"delete\")) {"},{"lineNumber":74,"author":{"gitId":"whatthelump"},"content":"                    try {"},{"lineNumber":75,"author":{"gitId":"whatthelump"},"content":"                        int pointer \u003d Integer.parseInt(input.substring(7)) - 1;"},{"lineNumber":76,"author":{"gitId":"whatthelump"},"content":"                        Task task \u003d list.get(pointer);"},{"lineNumber":77,"author":{"gitId":"whatthelump"},"content":"                        list.remove(pointer);"},{"lineNumber":78,"author":{"gitId":"whatthelump"},"content":"                        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" + task.toString());"},{"lineNumber":79,"author":{"gitId":"whatthelump"},"content":"                    } catch (NumberFormatException e) {"},{"lineNumber":80,"author":{"gitId":"whatthelump"},"content":"                        System.out.println(\"Number format exception, enter a number from 1-100!\");"},{"lineNumber":81,"author":{"gitId":"whatthelump"},"content":"                    } catch (IndexOutOfBoundsException e) {"},{"lineNumber":82,"author":{"gitId":"whatthelump"},"content":"                        System.out.println(\"Array index is out of bounds, the current number of elements in the list \" +"},{"lineNumber":83,"author":{"gitId":"whatthelump"},"content":"                                \"is \" + list.size() + \".\");"},{"lineNumber":84,"author":{"gitId":"whatthelump"},"content":"                    }"},{"lineNumber":85,"author":{"gitId":"whatthelump"},"content":"                } else if (input.substring(0, 8).equals(\"deadline\")) {"},{"lineNumber":86,"author":{"gitId":"whatthelump"},"content":"                    try {"},{"lineNumber":87,"author":{"gitId":"whatthelump"},"content":"                        String[] split \u003d input.split(\"/\");"},{"lineNumber":88,"author":{"gitId":"whatthelump"},"content":"                        String description \u003d split[0].substring(9);"},{"lineNumber":89,"author":{"gitId":"whatthelump"},"content":"                        String by \u003d split[1].substring(3);"},{"lineNumber":90,"author":{"gitId":"whatthelump"},"content":"                        Deadline d \u003d new Deadline(description, by);"},{"lineNumber":91,"author":{"gitId":"whatthelump"},"content":"                        list.add(d);"},{"lineNumber":92,"author":{"gitId":"whatthelump"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\\n\" +"},{"lineNumber":93,"author":{"gitId":"whatthelump"},"content":"                                d.toString() + \"\\nNow you have \" + list.size() + \" tasks in the list.\");"},{"lineNumber":94,"author":{"gitId":"whatthelump"},"content":"                    } catch (StringIndexOutOfBoundsException e){"},{"lineNumber":95,"author":{"gitId":"whatthelump"},"content":"                        System.out.println(\"â˜¹ OOPS!!! The description of a \" + input + \" cannot be empty.\");"},{"lineNumber":96,"author":{"gitId":"whatthelump"},"content":"                    } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":97,"author":{"gitId":"whatthelump"},"content":"                        System.out.println(\"â˜¹ OOPS!!! The format for a deadline task should be \u0027deadline (task)\" +"},{"lineNumber":98,"author":{"gitId":"whatthelump"},"content":"                                \" /by (time)\u0027\");"},{"lineNumber":99,"author":{"gitId":"whatthelump"},"content":"                    }"},{"lineNumber":100,"author":{"gitId":"whatthelump"},"content":"                } else {"},{"lineNumber":101,"author":{"gitId":"whatthelump"},"content":"                    System.out.println(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what \u0027\" + input + \"\u0027 means :-(\");"},{"lineNumber":102,"author":{"gitId":"whatthelump"},"content":"                }"},{"lineNumber":103,"author":{"gitId":"whatthelump"},"content":"            } catch (StringIndexOutOfBoundsException e) {"},{"lineNumber":104,"author":{"gitId":"whatthelump"},"content":"                System.out.println(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what \u0027\" + input + \"\u0027 means :-(\");"},{"lineNumber":105,"author":{"gitId":"whatthelump"},"content":"            }"},{"lineNumber":106,"author":{"gitId":"whatthelump"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"whatthelump"},"content":"        System.out.println(\"Farewell. Hope that you will visit again soon!\");"},{"lineNumber":108,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"whatthelump":101,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whatthelump"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":3,"author":{"gitId":"whatthelump"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"whatthelump"},"content":"    protected String errorMessage \u003d \"â˜¹ OOPS!!! \";"},{"lineNumber":5,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":6,"author":{"gitId":"whatthelump"},"content":"    DukeException(String s) {"},{"lineNumber":7,"author":{"gitId":"whatthelump"},"content":"        super(s);"},{"lineNumber":8,"author":{"gitId":"whatthelump"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":10,"author":{"gitId":"whatthelump"},"content":"    public String getErrorMessage() {"},{"lineNumber":11,"author":{"gitId":"whatthelump"},"content":"        return this.errorMessage;"},{"lineNumber":12,"author":{"gitId":"whatthelump"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":14,"author":{"gitId":"whatthelump"},"content":"}"}],"authorContributionMap":{"whatthelump":14}},{"path":"src/main/java/EmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whatthelump"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":3,"author":{"gitId":"whatthelump"},"content":"public class EmptyCommandException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":5,"author":{"gitId":"whatthelump"},"content":"    EmptyCommandException(String s) {"},{"lineNumber":6,"author":{"gitId":"whatthelump"},"content":"        super(\"â˜¹ OOPS!!! The description of a \" + s + \"cannot be empty.\");"},{"lineNumber":7,"author":{"gitId":"whatthelump"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"whatthelump"},"content":"}"}],"authorContributionMap":{"whatthelump":8}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whatthelump"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":3,"author":{"gitId":"whatthelump"},"content":"public class Event extends Task {"},{"lineNumber":4,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":5,"author":{"gitId":"whatthelump"},"content":"    protected String at;"},{"lineNumber":6,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":7,"author":{"gitId":"whatthelump"},"content":"    public Event(String description, String at) {"},{"lineNumber":8,"author":{"gitId":"whatthelump"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"whatthelump"},"content":"        this.at \u003d at;"},{"lineNumber":10,"author":{"gitId":"whatthelump"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":12,"author":{"gitId":"whatthelump"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"whatthelump"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"whatthelump"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":15,"author":{"gitId":"whatthelump"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"whatthelump"},"content":"}"},{"lineNumber":17,"author":{"gitId":"whatthelump"},"content":""}],"authorContributionMap":{"whatthelump":17}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whatthelump"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":3,"author":{"gitId":"whatthelump"},"content":"public class Task {"},{"lineNumber":4,"author":{"gitId":"whatthelump"},"content":"    protected String description;"},{"lineNumber":5,"author":{"gitId":"whatthelump"},"content":"    protected boolean isDone;"},{"lineNumber":6,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":7,"author":{"gitId":"whatthelump"},"content":"    public Task(String description) {"},{"lineNumber":8,"author":{"gitId":"whatthelump"},"content":"        this.description \u003d description;"},{"lineNumber":9,"author":{"gitId":"whatthelump"},"content":"        this.isDone \u003d false;"},{"lineNumber":10,"author":{"gitId":"whatthelump"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":12,"author":{"gitId":"whatthelump"},"content":"    public String getStatusIcon() {"},{"lineNumber":13,"author":{"gitId":"whatthelump"},"content":"        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"},{"lineNumber":14,"author":{"gitId":"whatthelump"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":16,"author":{"gitId":"whatthelump"},"content":"    public String getDescription() {"},{"lineNumber":17,"author":{"gitId":"whatthelump"},"content":"        return description;"},{"lineNumber":18,"author":{"gitId":"whatthelump"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":20,"author":{"gitId":"whatthelump"},"content":"    public void markAsDone() {"},{"lineNumber":21,"author":{"gitId":"whatthelump"},"content":"        this.isDone \u003d true;"},{"lineNumber":22,"author":{"gitId":"whatthelump"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":24,"author":{"gitId":"whatthelump"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"whatthelump"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"whatthelump"},"content":"        return (getStatusIcon() + \" \" + getDescription());"},{"lineNumber":27,"author":{"gitId":"whatthelump"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"whatthelump"},"content":"    //..."},{"lineNumber":29,"author":{"gitId":"whatthelump"},"content":"}"}],"authorContributionMap":{"whatthelump":29}},{"path":"src/main/java/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whatthelump"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":3,"author":{"gitId":"whatthelump"},"content":"public class UnknownCommandException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":5,"author":{"gitId":"whatthelump"},"content":"    UnknownCommandException(String s) {"},{"lineNumber":6,"author":{"gitId":"whatthelump"},"content":"        super(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what \u0027\" + s + \" means :-(\");"},{"lineNumber":7,"author":{"gitId":"whatthelump"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"whatthelump"},"content":"}"}],"authorContributionMap":{"whatthelump":8}},{"path":"src/main/java/todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"whatthelump"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":3,"author":{"gitId":"whatthelump"},"content":"public class todo extends Task {"},{"lineNumber":4,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":5,"author":{"gitId":"whatthelump"},"content":"    protected String by;"},{"lineNumber":6,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":7,"author":{"gitId":"whatthelump"},"content":"    public todo(String description) {"},{"lineNumber":8,"author":{"gitId":"whatthelump"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"whatthelump"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"whatthelump"},"content":""},{"lineNumber":11,"author":{"gitId":"whatthelump"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"whatthelump"},"content":"    public String toString() {"},{"lineNumber":13,"author":{"gitId":"whatthelump"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":14,"author":{"gitId":"whatthelump"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"whatthelump"},"content":"}"},{"lineNumber":16,"author":{"gitId":"whatthelump"},"content":""}],"authorContributionMap":{"whatthelump":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"whatthelump"},"content":"bye"}],"authorContributionMap":{"whatthelump":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"whatthelump"},"content":"java -classpath ..\\bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"whatthelump":1,"-":20}}]
