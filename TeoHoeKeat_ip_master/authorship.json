[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"# FakeBot project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"1. After the importing is complete, locate the `src/main/java/FakeBot.java` file, right-click it, and choose `Run FakeBot.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"TeoHoeKeat":2,"-":24}},{"path":"src/main/java/fakebot/FakeBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.command.Command;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.command.CommandException;"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.command.CommandType;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.*;"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalDate;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalTime;"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"public class FakeBot {"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"    private static String OLDLOGO \u003d \" ____        _        \\n\""},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    private static String LOGO \u003d \" ______      _  ________   ____   ____ _______ \\n\""},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"|  ____/ \\\\  | |/ /  ____| |  _ \\\\ / __ \\\\__   __|\\n\""},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"| |__ /  \\\\  | \u0027 /| |__    | |_) | |  | | | |   \\n\""},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"|  __/ /\\\\ \\\\ |  \u003c |  __|   |  _ \u003c| |  | | | |\\n\""},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"| | / ____ \\\\| . \\\\| |____  | |_) | |__| | | |\\n\""},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"|_|/_/    \\\\_\\\\_|\\\\_\\\\______| |____/ \\\\____/  |_|\\n\";"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    private static String EXIT_COMMAND \u003d \"bye\";"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    private static String LIST_COMMAND \u003d \"list\";"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    private static String DONE_COMMAND \u003d \"done\";"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    private static String TODO_COMMAND \u003d \"todo\";"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"    private static String DEADLINE_COMMAND \u003d \"deadline\";"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    private static String DEADLINE_SPLIT_REGEX \u003d \" /by \";"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    private static String EVENT_COMMAND \u003d \"event\";"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"    private static String EVENT_SPLIT_REGEX \u003d \" /at \";"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    private static String DELETE_COMMAND \u003d \"delete\";"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"    private static String FIND_COMMAND \u003d \"find\";"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    private static String SAVE_FILE_PATH \u003d \"/data/\";"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"    private static String SAVE_FILE_NAME \u003d \"savedHistory.txt\";"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    private static Ui ui;"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"    private TaskList taskList;"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"    private Storage storage;"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"    public static void main(String[] args) {"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"        ui \u003d new Ui();"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"        FakeBot fakeBot \u003d new FakeBot(SAVE_FILE_NAME, SAVE_FILE_PATH);"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"        fakeBot.printHelloMessage();"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"        boolean continueProgram \u003d true;"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"        while (continueProgram) {"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"            String reply \u003d ui.readLine();"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"            Command command;"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"            try {"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"                command \u003d fakeBot.validateCommand(reply);"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"            } catch (CommandException e) {"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"                ui.printBotMessage(e.getMessage());"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"                continue;"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"            continueProgram \u003d fakeBot.processCommand(command);"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"        ui.printBotMessage(\"Bye. Hope to see you again soon!\");"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"    public FakeBot(String saveFileName, String saveFilePath) {"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"        storage \u003d new Storage(SAVE_FILE_NAME, SAVE_FILE_PATH);"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList \u003d new TaskList(storage.tryReadTaskFile());"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"     * Save History to Storage."},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"    public void saveHistory() {"},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"        storage.writeTasksToFIle(taskList);"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"     * Print Hello Message used at the start of the project."},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"    public void printHelloMessage() {"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"        ui.printBotMessage(\"Hello from\\n\" + LOGO + \"What can I do for you?\");"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":"     * Print message to show that the task is done."},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param task Task to print."},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":"    public void printDoneMessage(Task task) {"},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"        ui.printBotMessage(\"Nice! I\u0027ve marked this task as done:\\n \" + task.toString());"},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":"     * Print message to show that the task is deleted and print the remaining number of task left."},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param task Deleted Task."},{"lineNumber":98,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":"    public void printDeleteMessage(Task task) {"},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"        ui.printBotMessage(\"Noted. I\u0027ve removed this task:\\n \" + task.toString()"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":"                + \"\\nNow you have \" + taskList.getSize() + \" tasks in the list.\");"},{"lineNumber":102,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":104,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"TeoHoeKeat"},"content":"     * Print message to show that the task is deleted and print the remaining number of task left."},{"lineNumber":106,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":107,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param task Added Task."},{"lineNumber":108,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"TeoHoeKeat"},"content":"    public void printAddedTaskMessage(Task task) {"},{"lineNumber":110,"author":{"gitId":"TeoHoeKeat"},"content":"        ui.printBotMessage(\"Got it. I\u0027ve added this task: \\n  \" + task.toString()"},{"lineNumber":111,"author":{"gitId":"TeoHoeKeat"},"content":"                + \"\\nNow you have \" + taskList.getSize() + \" tasks in the list.\");"},{"lineNumber":112,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":114,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":115,"author":{"gitId":"TeoHoeKeat"},"content":"     * Process Command given by user."},{"lineNumber":116,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":117,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param command Total number of Task Left."},{"lineNumber":118,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean processCommand(Command command) {"},{"lineNumber":120,"author":{"gitId":"TeoHoeKeat"},"content":"        switch (command.getCommand()) {"},{"lineNumber":121,"author":{"gitId":"TeoHoeKeat"},"content":"        case BYE:"},{"lineNumber":122,"author":{"gitId":"TeoHoeKeat"},"content":"            return false;"},{"lineNumber":123,"author":{"gitId":"TeoHoeKeat"},"content":"        case LIST:"},{"lineNumber":124,"author":{"gitId":"TeoHoeKeat"},"content":"            ui.printTasks(taskList);"},{"lineNumber":125,"author":{"gitId":"TeoHoeKeat"},"content":"            break;"},{"lineNumber":126,"author":{"gitId":"TeoHoeKeat"},"content":"        case DONE:"},{"lineNumber":127,"author":{"gitId":"TeoHoeKeat"},"content":"            processDoneCommand(command);"},{"lineNumber":128,"author":{"gitId":"TeoHoeKeat"},"content":"            break;"},{"lineNumber":129,"author":{"gitId":"TeoHoeKeat"},"content":"        case TODO:"},{"lineNumber":130,"author":{"gitId":"TeoHoeKeat"},"content":"            processTodoCommand(command);"},{"lineNumber":131,"author":{"gitId":"TeoHoeKeat"},"content":"            break;"},{"lineNumber":132,"author":{"gitId":"TeoHoeKeat"},"content":"        case DEADLINE:"},{"lineNumber":133,"author":{"gitId":"TeoHoeKeat"},"content":"            processDeadlineCommand(command);"},{"lineNumber":134,"author":{"gitId":"TeoHoeKeat"},"content":"            break;"},{"lineNumber":135,"author":{"gitId":"TeoHoeKeat"},"content":"        case EVENT:"},{"lineNumber":136,"author":{"gitId":"TeoHoeKeat"},"content":"            processEventCommand(command);"},{"lineNumber":137,"author":{"gitId":"TeoHoeKeat"},"content":"            break;"},{"lineNumber":138,"author":{"gitId":"TeoHoeKeat"},"content":"        case DELETE:"},{"lineNumber":139,"author":{"gitId":"TeoHoeKeat"},"content":"            processDeleteCommand(command);"},{"lineNumber":140,"author":{"gitId":"TeoHoeKeat"},"content":"        case FIND:"},{"lineNumber":141,"author":{"gitId":"TeoHoeKeat"},"content":"            ui.printTasks(new TaskList(taskList.find(command.getDescription())));"},{"lineNumber":142,"author":{"gitId":"TeoHoeKeat"},"content":"            break;"},{"lineNumber":143,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":144,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":145,"author":{"gitId":"TeoHoeKeat"},"content":"        return true;"},{"lineNumber":146,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":148,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":149,"author":{"gitId":"TeoHoeKeat"},"content":"     * Process Done Command"},{"lineNumber":150,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param command Command to Process"},{"lineNumber":151,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":152,"author":{"gitId":"TeoHoeKeat"},"content":"    private void processDoneCommand(Command command) {"},{"lineNumber":153,"author":{"gitId":"TeoHoeKeat"},"content":"        int doneIndex \u003d Integer.parseInt(command.getDescription()) - 1;"},{"lineNumber":154,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.getTask(doneIndex).markComplete();"},{"lineNumber":155,"author":{"gitId":"TeoHoeKeat"},"content":"        printDoneMessage(taskList.getTask(doneIndex));"},{"lineNumber":156,"author":{"gitId":"TeoHoeKeat"},"content":"        saveHistory();"},{"lineNumber":157,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":158,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":159,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":160,"author":{"gitId":"TeoHoeKeat"},"content":"     * Process Todos Command"},{"lineNumber":161,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param command Command to Process"},{"lineNumber":162,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":163,"author":{"gitId":"TeoHoeKeat"},"content":"    private void processTodoCommand(Command command) {"},{"lineNumber":164,"author":{"gitId":"TeoHoeKeat"},"content":"        ToDos todoTask \u003d new ToDos(command.getDescription());"},{"lineNumber":165,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(todoTask);"},{"lineNumber":166,"author":{"gitId":"TeoHoeKeat"},"content":"        printAddedTaskMessage(todoTask);"},{"lineNumber":167,"author":{"gitId":"TeoHoeKeat"},"content":"        saveHistory();"},{"lineNumber":168,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":170,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":171,"author":{"gitId":"TeoHoeKeat"},"content":"     * Process Deadline Command"},{"lineNumber":172,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param command Command to Process"},{"lineNumber":173,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":174,"author":{"gitId":"TeoHoeKeat"},"content":"    private void processDeadlineCommand(Command command) {"},{"lineNumber":175,"author":{"gitId":"TeoHoeKeat"},"content":"        String[] deadlineDetalis \u003d command.getDescription().split(DEADLINE_SPLIT_REGEX);"},{"lineNumber":176,"author":{"gitId":"TeoHoeKeat"},"content":"        String[] dates \u003d deadlineDetalis[1].split(\" \");"},{"lineNumber":177,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate date \u003d LocalDate.parse(dates[0]);"},{"lineNumber":178,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime time \u003d LocalTime.parse(dates[1]);"},{"lineNumber":179,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadlines deadlineTask \u003d new Deadlines(deadlineDetalis[0], date, time);"},{"lineNumber":180,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(deadlineTask);"},{"lineNumber":181,"author":{"gitId":"TeoHoeKeat"},"content":"        printAddedTaskMessage(deadlineTask);"},{"lineNumber":182,"author":{"gitId":"TeoHoeKeat"},"content":"        saveHistory();"},{"lineNumber":183,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":185,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":186,"author":{"gitId":"TeoHoeKeat"},"content":"     * Process Event Command"},{"lineNumber":187,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param command Command to Process"},{"lineNumber":188,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":189,"author":{"gitId":"TeoHoeKeat"},"content":"    private void processEventCommand(Command command) {"},{"lineNumber":190,"author":{"gitId":"TeoHoeKeat"},"content":"        String[] eventDetails \u003d command.getDescription().split(EVENT_SPLIT_REGEX);"},{"lineNumber":191,"author":{"gitId":"TeoHoeKeat"},"content":"        String[] eventDates \u003d eventDetails[1].split(\" \");"},{"lineNumber":192,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(eventDates[0]);"},{"lineNumber":193,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(eventDates[1]);"},{"lineNumber":194,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(eventDates[2]);"},{"lineNumber":195,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(eventDates[3]);"},{"lineNumber":196,"author":{"gitId":"TeoHoeKeat"},"content":"        Events eventTask \u003d new Events(eventDetails[0], startDate, startTime, endDate, endTime);"},{"lineNumber":197,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(eventTask);"},{"lineNumber":198,"author":{"gitId":"TeoHoeKeat"},"content":"        printAddedTaskMessage(eventTask);"},{"lineNumber":199,"author":{"gitId":"TeoHoeKeat"},"content":"        saveHistory();"},{"lineNumber":200,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":201,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":202,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":203,"author":{"gitId":"TeoHoeKeat"},"content":"     * Process Delete Command"},{"lineNumber":204,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param command Command to Process"},{"lineNumber":205,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":206,"author":{"gitId":"TeoHoeKeat"},"content":"    private void processDeleteCommand(Command command) {"},{"lineNumber":207,"author":{"gitId":"TeoHoeKeat"},"content":"        int deleteIndex \u003d Integer.parseInt(command.getDescription()) - 1;"},{"lineNumber":208,"author":{"gitId":"TeoHoeKeat"},"content":"        Task deletedTask \u003d taskList.getTask(deleteIndex);"},{"lineNumber":209,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.removeTask(deleteIndex);"},{"lineNumber":210,"author":{"gitId":"TeoHoeKeat"},"content":"        printDeleteMessage(deletedTask);"},{"lineNumber":211,"author":{"gitId":"TeoHoeKeat"},"content":"        saveHistory();"},{"lineNumber":212,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":213,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":214,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":215,"author":{"gitId":"TeoHoeKeat"},"content":"     * Validate User Input."},{"lineNumber":216,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":217,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param command Command String that is yet to be parsed."},{"lineNumber":218,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":219,"author":{"gitId":"TeoHoeKeat"},"content":"    public Command validateCommand(String command) throws CommandException {"},{"lineNumber":220,"author":{"gitId":"TeoHoeKeat"},"content":"        if (command.equals(EXIT_COMMAND)) {"},{"lineNumber":221,"author":{"gitId":"TeoHoeKeat"},"content":"            return new Command(CommandType.BYE);"},{"lineNumber":222,"author":{"gitId":"TeoHoeKeat"},"content":"        } else if (command.equals(LIST_COMMAND)) {"},{"lineNumber":223,"author":{"gitId":"TeoHoeKeat"},"content":"            return new Command(CommandType.LIST);"},{"lineNumber":224,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":225,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":226,"author":{"gitId":"TeoHoeKeat"},"content":"        if (command.equals(DONE_COMMAND) || command.equals(DELETE_COMMAND)) {"},{"lineNumber":227,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(\"☹ OOPS!!! You must indicate the index of the Tasks to be \" + command + \".\");"},{"lineNumber":228,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":229,"author":{"gitId":"TeoHoeKeat"},"content":"        if (command.equals(TODO_COMMAND) || command.equals(DEADLINE_COMMAND)"},{"lineNumber":230,"author":{"gitId":"TeoHoeKeat"},"content":"                || command.equals(EVENT_COMMAND) || command.equals(FIND_COMMAND)) {"},{"lineNumber":231,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(\"☹ OOPS!!! The description of a \" + command + \" cannot be empty.\");"},{"lineNumber":232,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":233,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":234,"author":{"gitId":"TeoHoeKeat"},"content":"        int firstSplit \u003d command.indexOf(\u0027 \u0027);"},{"lineNumber":235,"author":{"gitId":"TeoHoeKeat"},"content":"        if (firstSplit \u003c 0) {"},{"lineNumber":236,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":237,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":238,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":239,"author":{"gitId":"TeoHoeKeat"},"content":"        String commandName \u003d command.substring(0, firstSplit);"},{"lineNumber":240,"author":{"gitId":"TeoHoeKeat"},"content":"        String description \u003d command.substring(firstSplit + 1);"},{"lineNumber":241,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":242,"author":{"gitId":"TeoHoeKeat"},"content":"        if (commandName.equals(DONE_COMMAND) || commandName.equals(DELETE_COMMAND) || commandName.equals(TODO_COMMAND)"},{"lineNumber":243,"author":{"gitId":"TeoHoeKeat"},"content":"                || commandName.equals(EVENT_COMMAND) || commandName.equals(DEADLINE_COMMAND)"},{"lineNumber":244,"author":{"gitId":"TeoHoeKeat"},"content":"                || commandName.equals(FIND_COMMAND)) {"},{"lineNumber":245,"author":{"gitId":"TeoHoeKeat"},"content":"            if (description.isEmpty()) {"},{"lineNumber":246,"author":{"gitId":"TeoHoeKeat"},"content":"                throw new CommandException(\"☹ OOPS!!! The description of a \" + commandName + \" cannot be empty.\");"},{"lineNumber":247,"author":{"gitId":"TeoHoeKeat"},"content":"            } else if (commandName.equals(DONE_COMMAND) || commandName.equals(DELETE_COMMAND)) {"},{"lineNumber":248,"author":{"gitId":"TeoHoeKeat"},"content":"                try {"},{"lineNumber":249,"author":{"gitId":"TeoHoeKeat"},"content":"                    int index \u003d Integer.parseInt(description);"},{"lineNumber":250,"author":{"gitId":"TeoHoeKeat"},"content":"                    if (index \u003e taskList.getSize() || index \u003c 1) {"},{"lineNumber":251,"author":{"gitId":"TeoHoeKeat"},"content":"                        throw new CommandException(\"☹ OOPS!!! Task number out of range.\");"},{"lineNumber":252,"author":{"gitId":"TeoHoeKeat"},"content":"                    }"},{"lineNumber":253,"author":{"gitId":"TeoHoeKeat"},"content":"                } catch (NumberFormatException e) {"},{"lineNumber":254,"author":{"gitId":"TeoHoeKeat"},"content":"                    throw new CommandException(\"☹ OOPS!!! Invalid Task Index Format.\");"},{"lineNumber":255,"author":{"gitId":"TeoHoeKeat"},"content":"                }"},{"lineNumber":256,"author":{"gitId":"TeoHoeKeat"},"content":"                if (commandName.equals(DONE_COMMAND)) {"},{"lineNumber":257,"author":{"gitId":"TeoHoeKeat"},"content":"                    return new Command(CommandType.DONE, description);"},{"lineNumber":258,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":259,"author":{"gitId":"TeoHoeKeat"},"content":"                } else if (commandName.equals(DELETE_COMMAND)) {"},{"lineNumber":260,"author":{"gitId":"TeoHoeKeat"},"content":"                    return new Command(CommandType.DELETE, description);"},{"lineNumber":261,"author":{"gitId":"TeoHoeKeat"},"content":"                }"},{"lineNumber":262,"author":{"gitId":"TeoHoeKeat"},"content":"            } else if (commandName.equals(FIND_COMMAND)) {"},{"lineNumber":263,"author":{"gitId":"TeoHoeKeat"},"content":"                return new Command(CommandType.FIND, description);"},{"lineNumber":264,"author":{"gitId":"TeoHoeKeat"},"content":"            } else if (commandName.equals(TODO_COMMAND)) {"},{"lineNumber":265,"author":{"gitId":"TeoHoeKeat"},"content":"                return new Command(CommandType.TODO, description);"},{"lineNumber":266,"author":{"gitId":"TeoHoeKeat"},"content":"            } else if (commandName.equals(DEADLINE_COMMAND)) {"},{"lineNumber":267,"author":{"gitId":"TeoHoeKeat"},"content":"                if (!description.contains(DEADLINE_SPLIT_REGEX))"},{"lineNumber":268,"author":{"gitId":"TeoHoeKeat"},"content":"                    throw new CommandException(\"☹ OOPS!!! The description of a \""},{"lineNumber":269,"author":{"gitId":"TeoHoeKeat"},"content":"                            + DEADLINE_COMMAND + \" must contain Date indicated by \\\"\""},{"lineNumber":270,"author":{"gitId":"TeoHoeKeat"},"content":"                            + DEADLINE_SPLIT_REGEX + \"\\\".\");"},{"lineNumber":271,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":272,"author":{"gitId":"TeoHoeKeat"},"content":"                try {"},{"lineNumber":273,"author":{"gitId":"TeoHoeKeat"},"content":"                    String[] deadlineDetails \u003d description.split(DEADLINE_SPLIT_REGEX);"},{"lineNumber":274,"author":{"gitId":"TeoHoeKeat"},"content":"                    String[] dates \u003d deadlineDetails[1].split(\" \");"},{"lineNumber":275,"author":{"gitId":"TeoHoeKeat"},"content":"                    LocalDate date \u003d LocalDate.parse(dates[0]);"},{"lineNumber":276,"author":{"gitId":"TeoHoeKeat"},"content":"                    LocalTime time \u003d LocalTime.parse(dates[1]);"},{"lineNumber":277,"author":{"gitId":"TeoHoeKeat"},"content":"                } catch (Exception e) {"},{"lineNumber":278,"author":{"gitId":"TeoHoeKeat"},"content":"                    throw new CommandException(\"☹ OOPS!!! The Date format of a \""},{"lineNumber":279,"author":{"gitId":"TeoHoeKeat"},"content":"                            + DEADLINE_COMMAND + \" must be yyyy-mm-dd hh:ss.\");"},{"lineNumber":280,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":281,"author":{"gitId":"TeoHoeKeat"},"content":"                }"},{"lineNumber":282,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":283,"author":{"gitId":"TeoHoeKeat"},"content":"                return new Command(CommandType.DEADLINE, description);"},{"lineNumber":284,"author":{"gitId":"TeoHoeKeat"},"content":"            } else if (commandName.equals(EVENT_COMMAND)) {"},{"lineNumber":285,"author":{"gitId":"TeoHoeKeat"},"content":"                if (!description.contains(EVENT_SPLIT_REGEX))"},{"lineNumber":286,"author":{"gitId":"TeoHoeKeat"},"content":"                    throw new CommandException(\"☹ OOPS!!! The description of a \" + EVENT_COMMAND"},{"lineNumber":287,"author":{"gitId":"TeoHoeKeat"},"content":"                            + \" must contain Date and Duration indicated by \\\"\" + EVENT_SPLIT_REGEX + \"\\\".\");"},{"lineNumber":288,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":289,"author":{"gitId":"TeoHoeKeat"},"content":"                try {"},{"lineNumber":290,"author":{"gitId":"TeoHoeKeat"},"content":"                    String[] eventDetails \u003d description.split(EVENT_SPLIT_REGEX);"},{"lineNumber":291,"author":{"gitId":"TeoHoeKeat"},"content":"                    String[] dates \u003d eventDetails[1].split(\" \");"},{"lineNumber":292,"author":{"gitId":"TeoHoeKeat"},"content":"                    LocalDate startDate \u003d LocalDate.parse(dates[0]);"},{"lineNumber":293,"author":{"gitId":"TeoHoeKeat"},"content":"                    LocalTime startTime \u003d LocalTime.parse(dates[1]);"},{"lineNumber":294,"author":{"gitId":"TeoHoeKeat"},"content":"                    LocalDate endDate \u003d LocalDate.parse(dates[2]);"},{"lineNumber":295,"author":{"gitId":"TeoHoeKeat"},"content":"                    LocalTime endTime \u003d LocalTime.parse(dates[3]);"},{"lineNumber":296,"author":{"gitId":"TeoHoeKeat"},"content":"                } catch (Exception e) {"},{"lineNumber":297,"author":{"gitId":"TeoHoeKeat"},"content":"                    throw new CommandException(\"☹ OOPS!!! The Date format of a \""},{"lineNumber":298,"author":{"gitId":"TeoHoeKeat"},"content":"                            + EVENT_COMMAND + \" must be yyyy-mm-dd hh:ss yyyy-mm-dd hh:ss.\");"},{"lineNumber":299,"author":{"gitId":"TeoHoeKeat"},"content":"                }"},{"lineNumber":300,"author":{"gitId":"TeoHoeKeat"},"content":"                return new Command(CommandType.EVENT, description);"},{"lineNumber":301,"author":{"gitId":"TeoHoeKeat"},"content":"            }"},{"lineNumber":302,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":303,"author":{"gitId":"TeoHoeKeat"},"content":"        throw new CommandException(\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":304,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":300,"-":5}},{"path":"src/main/java/fakebot/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.*;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"public class Parser {"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String SPLIT_REGEX \u003d \"-\u0027@,-@,1\u0027-\";"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"    private enum TaskType {TODO, EVENT, DEADLINE}"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"     * Convert Task to String."},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param stringList List of string to be converted to string."},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return string."},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    public static String convertStringsToString(List\u003cString\u003e stringList) {"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"        for (String s : stringList) {"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"            builder.append(s);"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"            builder.append(System.lineSeparator());"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"        return builder.toString();"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"     * Convert Task to String."},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param task Task to be parsed to string."},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return parsed Task."},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    public static String convertTaskTOString(Task task) {"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"        StringBuilder currentString \u003d new StringBuilder();"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"        if (task instanceof ToDos) {"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(TaskType.TODO.name());"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(SPLIT_REGEX);"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(task.isComplete());"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(SPLIT_REGEX);"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(task.getTaskName());"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"        } else if (task instanceof Events) {"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"            Events events \u003d (Events) task;"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(TaskType.EVENT.name());"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(SPLIT_REGEX);"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(task.isComplete());"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(SPLIT_REGEX);"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(events.getTaskName());"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(SPLIT_REGEX);"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(events.getStartDate());"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(SPLIT_REGEX);"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(events.getStartTime());"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(SPLIT_REGEX);"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(events.getEndDate());"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(SPLIT_REGEX);"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(events.getEndTime());"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"        } else if (task instanceof Deadlines) {"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"            Deadlines deadlines \u003d (Deadlines) task;"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(TaskType.DEADLINE.name());"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(SPLIT_REGEX);"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(task.isComplete());"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(SPLIT_REGEX);"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(deadlines.getTaskName());"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(SPLIT_REGEX);"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(deadlines.getDeadlineDate());"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(SPLIT_REGEX);"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(deadlines.getDeadlineTime());"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"        return currentString.toString();"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"     * Convert List of Task to List of String."},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param taskList string of list."},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return list of String parsed from list of Task."},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"    public static List\u003cString\u003e convertTasksToStrings(TaskList taskList) {"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"        List\u003cString\u003e strings \u003d new ArrayList\u003cString\u003e();"},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":"            Task currentTask \u003d taskList.getTask(i);"},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"            strings.add(convertTaskTOString(currentTask));"},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"        return strings;"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"     * Convert String to Task."},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param string Parsed Task."},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return task parsed from string."},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"TeoHoeKeat"},"content":"    public static Task parseStringToTask(String string) {"},{"lineNumber":98,"author":{"gitId":"TeoHoeKeat"},"content":"        String[] parts \u003d string.split(SPLIT_REGEX);"},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":"        Task currentTask \u003d null;"},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"        switch (TaskType.valueOf(parts[0])) {"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":"        case TODO:"},{"lineNumber":102,"author":{"gitId":"TeoHoeKeat"},"content":"            currentTask \u003d new ToDos(parts[2]);"},{"lineNumber":103,"author":{"gitId":"TeoHoeKeat"},"content":"            break;"},{"lineNumber":104,"author":{"gitId":"TeoHoeKeat"},"content":"        case EVENT:"},{"lineNumber":105,"author":{"gitId":"TeoHoeKeat"},"content":"            currentTask \u003d new Events(parts[2], LocalDate.parse(parts[3]), LocalTime.parse(parts[4])"},{"lineNumber":106,"author":{"gitId":"TeoHoeKeat"},"content":"                    , LocalDate.parse(parts[5]), LocalTime.parse(parts[6]));"},{"lineNumber":107,"author":{"gitId":"TeoHoeKeat"},"content":"            break;"},{"lineNumber":108,"author":{"gitId":"TeoHoeKeat"},"content":"        case DEADLINE:"},{"lineNumber":109,"author":{"gitId":"TeoHoeKeat"},"content":"            currentTask \u003d new Deadlines(parts[2], LocalDate.parse(parts[3]), LocalTime.parse(parts[4]));"},{"lineNumber":110,"author":{"gitId":"TeoHoeKeat"},"content":"            break;"},{"lineNumber":111,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":113,"author":{"gitId":"TeoHoeKeat"},"content":"        if (Boolean.parseBoolean(parts[1]))"},{"lineNumber":114,"author":{"gitId":"TeoHoeKeat"},"content":"            currentTask.markComplete();"},{"lineNumber":115,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":116,"author":{"gitId":"TeoHoeKeat"},"content":"        return currentTask;"},{"lineNumber":117,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":119,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":120,"author":{"gitId":"TeoHoeKeat"},"content":"     * Convert List of String to List of Task."},{"lineNumber":121,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":122,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param stringList string of list."},{"lineNumber":123,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return list of Task parsed from list of string."},{"lineNumber":124,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":125,"author":{"gitId":"TeoHoeKeat"},"content":"    public static List\u003cTask\u003e parseStringsToTasks(List\u003cString\u003e stringList) {"},{"lineNumber":126,"author":{"gitId":"TeoHoeKeat"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":127,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":128,"author":{"gitId":"TeoHoeKeat"},"content":"        for (String line : stringList) {"},{"lineNumber":129,"author":{"gitId":"TeoHoeKeat"},"content":"            tasks.add(parseStringToTask(line));"},{"lineNumber":130,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"TeoHoeKeat"},"content":"        return tasks;"},{"lineNumber":132,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":133}},{"path":"src/main/java/fakebot/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.Task;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import java.io.FileWriter;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.List;"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.Scanner;"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"public class Storage {"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    private String fileToEdit;"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"     * Constructor of storage class."},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param fileName name of file."},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param filePath path of file."},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    public Storage(String fileName, String filePath) {"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"        filePath \u003d createDirectory(filePath);"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"        fileToEdit \u003d filePath + fileName;"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"     * Create Directory if file path doesn\u0027t exist."},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param filePath path of file."},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return path created, return empty path if path is invalid."},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"    private String createDirectory(String filePath) {"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"        file.mkdirs();"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"        //Remove directory and use root instead since it invalid"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"        if (!file.isDirectory()) {"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"            return \"\";"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"        return filePath;"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"     * Write Tasks to File."},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param taskList Tasks to write to file."},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"    public void writeTasksToFIle(TaskList taskList) {"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"        String textToAdd \u003d Parser.convertStringsToString(Parser.convertTasksToStrings(taskList));"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"        try {"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"            writeToFile(textToAdd);"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"        } catch (Exception e) {"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"     * Write String to File."},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param textToAdd write text to file."},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"    private void writeToFile(String textToAdd) throws IOException {"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"        FileWriter fw \u003d new FileWriter(fileToEdit);"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"        fw.write(textToAdd);"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"        fw.close();"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"     * Read Task from File."},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return list of task read from File."},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"    public List\u003cTask\u003e tryReadTaskFile() {"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":"        try {"},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"            List\u003cString\u003e stringList \u003d readFile();"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"            taskList \u003d Parser.parseStringsToTasks(stringList);"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"            //Do nothing, return empty list."},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":"        return taskList;"},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":"     * Read String from File."},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return list of string read from File."},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":"    private List\u003cString\u003e readFile() throws FileNotFoundException {"},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":"        List\u003cString\u003e stringList \u003d new ArrayList\u003cString\u003e();"},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":"        File f \u003d new File(fileToEdit);"},{"lineNumber":97,"author":{"gitId":"TeoHoeKeat"},"content":"        Scanner s \u003d new Scanner(f);"},{"lineNumber":98,"author":{"gitId":"TeoHoeKeat"},"content":"        while (s.hasNext()) {"},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":"            stringList.add(s.nextLine());"},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":102,"author":{"gitId":"TeoHoeKeat"},"content":"        return stringList;"},{"lineNumber":103,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":105,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":105}},{"path":"src/main/java/fakebot/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.TaskList;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"public class Ui {"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"    private Scanner scanf;"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"    public Ui() {"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"        scanf \u003d new Scanner(System.in);"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    private static String DIVIDER \u003d \"____________________________________________________________\\n\";"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"     * Print Standard Message."},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param message Message to print."},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"    public void printBotMessage(String message) {"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"        String printMessage \u003d DIVIDER + message + \"\\n\" + DIVIDER;"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"        print(printMessage);"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"     * Print List of String."},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param startingMessage Starting message to print before the list."},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param messages        List of String to print."},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    public void printList(String startingMessage, List\u003cString\u003e messages) {"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"        StringBuilder printMessage \u003d new StringBuilder(DIVIDER);"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"        printMessage.append(startingMessage);"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"        for (int i \u003d 1; i \u003c\u003d messages.size(); i++) {"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"            printMessage.append(i);"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"            printMessage.append(\".\");"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"            printMessage.append(messages.get(i - 1));"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"            printMessage.append(\"\\n\");"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"        printMessage.append(DIVIDER);"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"        print(printMessage.toString());"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"     * Print List of Task."},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param taskList List of Task to print."},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"    public void printTasks(TaskList taskList) {"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"        List\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"            messages.add(taskList.getTask(i).toString());"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"        printList(\"Here are the tasks in your list:\\n\", messages);"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"     * Print Message."},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param message message to print."},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"    private void print(String message) {"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"        System.out.println(message);"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"     * Read Line from IO."},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return String read from input."},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"    public String readLine() {"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"        String input \u003d scanf.nextLine();"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"        return input;"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":78}},{"path":"src/main/java/fakebot/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.command;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"//Store Command Entered by user"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"public class Command {"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"    private CommandType type;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"    private String description;"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"    public Command(CommandType type) {"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"        this.type \u003d type;"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"    public Command(CommandType type, String description) {"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"        this.type \u003d type;"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"        this.description \u003d description;"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"     * Get Command Type."},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return CommandType of the Command."},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    public CommandType getCommand() {"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        return type;"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"     * Get Command Description Type."},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Description of the Command."},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getDescription() {"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"        return description;"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":35}},{"path":"src/main/java/fakebot/command/CommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.command;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"public class CommandException extends Exception {"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"    public CommandException(String errorMessage) {"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"        super(errorMessage);"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":7}},{"path":"src/main/java/fakebot/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.command;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"public enum CommandType {"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"    BYE, LIST, DONE, TODO, EVENT, DEADLINE, DELETE, FIND;"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":5}},{"path":"src/main/java/fakebot/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.task;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"//Deadline class with Date"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"public class Deadlines extends Task {"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"    private LocalDate deadlineDate;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"    private LocalTime deadlineTime;"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"    public Deadlines(String name, LocalDate deadlineDate, LocalTime deadlineTime) {"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"        super(name);"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"        this.deadlineTime \u003d deadlineTime;"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"     * Get Task Deadline Date."},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return Deadline Date as String."},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getDeadlineDate() {"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"        return saveDateFormat.format(deadlineDate);"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"     * Get Task Deadline Time."},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return Deadline Time as String."},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getDeadlineTime() {"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"        return saveTimeFormat.format(deadlineTime);"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    public String toString() {"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"        return \"[D]\" + super.toString() + \" (by: \""},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"                + printDateFormat.format(deadlineDate) + \" \" + printTimeFormat.format(deadlineTime) + \")\";"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"}"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":""}],"authorContributionMap":{"TeoHoeKeat":42}},{"path":"src/main/java/fakebot/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.task;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"//Event Class with Date and Duration"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"public class Events extends Task {"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"    private LocalDate startDate;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"    private LocalTime startTime;"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"    private LocalDate endDate;"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"    private LocalTime endTime;"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    public Events(String name, LocalDate startDate, LocalTime startTime, LocalDate endDate, LocalTime endTime) {"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"        super(name);"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"        this.startDate \u003d startDate;"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"        this.endDate \u003d endDate;"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"     * Get Task Start Date."},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return Start Date as String."},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getStartDate() {"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"        return saveDateFormat.format(startDate);"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"     * Get Task Start Time."},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return Start Time as String."},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getStartTime() {"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"        return saveTimeFormat.format(startTime);"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"     * Get Task End Date."},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return End Date as String."},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getEndDate() {"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"        return saveDateFormat.format(endDate);"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"     * Get Task End Time."},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return End Time as String."},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getEndTime() {"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"        return saveTimeFormat.format(endTime);"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"    public String toString() {"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"        return \"[E]\" + super.toString() + \" (from: \""},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"                + printDateFormat.format(startDate) + \" \" + printTimeFormat.format(startTime) + \" to \" +"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"                printDateFormat.format(endDate) + \" \" + printTimeFormat.format(endTime) + \")\";"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":64}},{"path":"src/main/java/fakebot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.task;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"//Tasks Class that is parent of deadline, Events and Todo"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"public abstract class Task {"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"    protected String taskName;"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"    protected boolean isComplete;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"    protected DateTimeFormatter printDateFormat;"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"    protected DateTimeFormatter printTimeFormat;"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    protected DateTimeFormatter saveDateFormat;"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"    protected DateTimeFormatter saveTimeFormat;"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    public Task(String taskName) {"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"        isComplete \u003d false;"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"        this.printDateFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"        this.printTimeFormat \u003d DateTimeFormatter.ofPattern(\"HH:mm\");"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        this.saveDateFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"        this.saveTimeFormat \u003d DateTimeFormatter.ofPattern(\"HH:mm\");"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"     * Get Task Name."},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Task Name."},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getTaskName() {"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"        return taskName;"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"     * Mark Task as Complete."},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    public void markComplete() {"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"        isComplete \u003d true;"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"     * Get if Task is Complete."},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return If Task is Complete."},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean isComplete() {"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"        return isComplete;"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"    public String toString() {"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"        return (isComplete ? \"[X] \" + taskName : \"[ ] \" + taskName);"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":56}},{"path":"src/main/java/fakebot/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.task;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"public class TaskList {"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"    private List\u003cTask\u003e tasks;"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"    public TaskList(List\u003cTask\u003e tasks) {"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"     * Get Task at Index i."},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param i Index of Task."},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return Task."},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"    public Task getTask(int i) {"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"        return tasks.get(i);"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"     * Add task to task list."},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param task Task to add to TaskList."},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    public void addTask(Task task) {"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        tasks.add(task);"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"     * Remove Task index i."},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param i Index of Task to be removed."},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    public void removeTask(int i) {"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"        tasks.remove(i);"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"     * Get size of task list."},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return Size of Task List."},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"    public int getSize() {"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"        return tasks.size();"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"     * Find all task that contain search string"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param search String to search"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return list of task that contain search string"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"    public List\u003cTask\u003e find(String search) {"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"        List\u003cTask\u003e foundTask \u003d new ArrayList\u003c\u003e();"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"            if (tasks.get(i).getTaskName().contains(search)) {"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"                foundTask.add(tasks.get(i));"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"        return foundTask;"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":65}},{"path":"src/main/java/fakebot/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.task;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"public class ToDos extends Task {"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"    public ToDos(String name) {"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"        super(name);"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":12}},{"path":"test/fakebot/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.command.Command;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.Deadlines;"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.Events;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.Task;"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.ToDos;"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalDate;"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalTime;"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"class ParserTest {"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseTodoGetTaskName_equal() {"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"        String taskName \u003d \"Test\";"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"        ToDos todo \u003d new ToDos(taskName);"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.parseStringToTask(Parser.convertTaskTOString(todo));"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"        todo \u003d (ToDos) task;"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(taskName, todo.getTaskName(),\"Task Name does not match\");"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseTodoMarkComplete_success() {"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"        ToDos todo \u003d new ToDos(\"Test\");"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"        todo.markComplete();"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.parseStringToTask(Parser.convertTaskTOString(todo));"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        todo \u003d (ToDos) task;"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(true, todo.isComplete(), \"Task not completed\");"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    String taskName \u003d \"Test\";"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"    String startDateString \u003d \"2000-10-01\";"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"    String startTimeString \u003d \"01:04\";"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    String endDateString \u003d \"2011-10-01\";"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"    String endTimeString \u003d \"04:04\";"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseEventGetTaskName_equal() {"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"        Events event \u003d new Events(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.parseStringToTask(Parser.convertTaskTOString(event));"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"        event \u003d (Events) task;"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(taskName, event.getTaskName(),\"Task Name does not match\");"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseEventMarkComplete_success() {"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"        Events event \u003d new Events(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"        event.markComplete();"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.parseStringToTask(Parser.convertTaskTOString(event));"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"        event \u003d (Events) task;"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(true, event.isComplete(), \"Task not completed\");"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseEventGetStartDate_equal() {"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"        Events event \u003d new Events(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.parseStringToTask(Parser.convertTaskTOString(event));"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"        event \u003d (Events) task;"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(startDateString, event.getStartDate(),\"Start Date does not match\");"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseEventGetStartTime_equal() {"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"        Events event \u003d new Events(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.parseStringToTask(Parser.convertTaskTOString(event));"},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"        event \u003d (Events) task;"},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(startTimeString, event.getStartTime(),\"Start Time does not match\");"},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseEventGetEndDate_equal() {"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":"        Events event \u003d new Events(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.parseStringToTask(Parser.convertTaskTOString(event));"},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":"        event \u003d (Events) task;"},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(endDateString, event.getEndDate(),\"End Date does not match\");"},{"lineNumber":97,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseEventGetEndTime_equal() {"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":102,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":103,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":104,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":105,"author":{"gitId":"TeoHoeKeat"},"content":"        Events event \u003d new Events(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":106,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.parseStringToTask(Parser.convertTaskTOString(event));"},{"lineNumber":107,"author":{"gitId":"TeoHoeKeat"},"content":"        event \u003d (Events) task;"},{"lineNumber":108,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(endTimeString, event.getEndTime(),\"End Time does not match\");"},{"lineNumber":109,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":110,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":111,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":112,"author":{"gitId":"TeoHoeKeat"},"content":"    String dateString \u003d \"2000-10-01\";"},{"lineNumber":113,"author":{"gitId":"TeoHoeKeat"},"content":"    String timeString \u003d \"01:04\";"},{"lineNumber":114,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":115,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseDeadlineGetTaskName_equal() {"},{"lineNumber":116,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":117,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime time \u003d LocalTime.parse(timeString);"},{"lineNumber":118,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadlines deadline \u003d new Deadlines(taskName, date, time);"},{"lineNumber":119,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.parseStringToTask(Parser.convertTaskTOString(deadline));"},{"lineNumber":120,"author":{"gitId":"TeoHoeKeat"},"content":"        deadline \u003d (Deadlines) task;"},{"lineNumber":121,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(taskName, deadline.getTaskName(),\"Task Name does not match\");"},{"lineNumber":122,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":124,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":125,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseDeadlineMarkComplete_success() {"},{"lineNumber":126,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":127,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime time \u003d LocalTime.parse(timeString);"},{"lineNumber":128,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadlines deadline \u003d new Deadlines(taskName, date, time);"},{"lineNumber":129,"author":{"gitId":"TeoHoeKeat"},"content":"        deadline.markComplete();"},{"lineNumber":130,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.parseStringToTask(Parser.convertTaskTOString(deadline));"},{"lineNumber":131,"author":{"gitId":"TeoHoeKeat"},"content":"        deadline \u003d (Deadlines) task;"},{"lineNumber":132,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(true, deadline.isComplete(), \"Task not completed\");"},{"lineNumber":133,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":135,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":136,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseDeadlineGetDeadlineDate_equal() {"},{"lineNumber":137,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":138,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime time \u003d LocalTime.parse(timeString);"},{"lineNumber":139,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadlines deadline \u003d new Deadlines(taskName, date, time);"},{"lineNumber":140,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.parseStringToTask(Parser.convertTaskTOString(deadline));"},{"lineNumber":141,"author":{"gitId":"TeoHoeKeat"},"content":"        deadline \u003d (Deadlines) task;"},{"lineNumber":142,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(dateString, deadline.getDeadlineDate(),\"Deadline Date does not match\");"},{"lineNumber":143,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":145,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":146,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseDeadlineGetDeadlineTime_equal() {"},{"lineNumber":147,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":148,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime time \u003d LocalTime.parse(timeString);"},{"lineNumber":149,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadlines deadline \u003d new Deadlines(taskName, date, time);"},{"lineNumber":150,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.parseStringToTask(Parser.convertTaskTOString(deadline));"},{"lineNumber":151,"author":{"gitId":"TeoHoeKeat"},"content":"        deadline \u003d (Deadlines) task;"},{"lineNumber":152,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(timeString, deadline.getDeadlineTime(),\"Deadline Time does not match\");"},{"lineNumber":153,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":154,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":154}},{"path":"test/fakebot/command/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.command;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"class CommandTest {"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"    private CommandType type \u003d CommandType.EVENT;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"    private String description \u003d \"Test\";"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"    void getCommand_Equal() {"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"        Command test \u003d new Command(type,description);"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(type, test.getCommand(),\"Command Does not match\");"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    void getDescription_Equal() {"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"        Command test \u003d new Command(type,description);"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(description, test.getDescription(),\"Description Does not match\");"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":22}},{"path":"test/fakebot/task/DeadlinesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.task;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"class DeadlinesTest {"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"    String taskName \u003d \"Test\";"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"    String dateString \u003d \"2000-10-01\";"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    String timeString \u003d \"01:04\";"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    public void getTaskName_equal() {"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime time \u003d LocalTime.parse(timeString);"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadlines deadline \u003d new Deadlines(taskName, date, time);"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(taskName, deadline.getTaskName(),\"Task Name does not match\");"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"    public void markComplete_success() {"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime time \u003d LocalTime.parse(timeString);"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadlines deadline \u003d new Deadlines(taskName, date, time);"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"        deadline.markComplete();"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(true, deadline.isComplete(), \"Task not completed\");"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    public void getDeadlineDate_equal() {"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime time \u003d LocalTime.parse(timeString);"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadlines deadline \u003d new Deadlines(taskName, date, time);"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(dateString, deadline.getDeadlineDate(),\"Deadline Date does not match\");"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    public void getDeadlineTime_equal() {"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime time \u003d LocalTime.parse(timeString);"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadlines deadline \u003d new Deadlines(taskName, date, time);"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(timeString, deadline.getDeadlineTime(),\"Deadline Time does not match\");"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":46}},{"path":"test/fakebot/task/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.task;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"class EventsTest {"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"    String taskName \u003d \"Test\";"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"    String startDateString \u003d \"2000-10-01\";"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    String startTimeString \u003d \"01:04\";"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"    String endDateString \u003d \"2011-10-01\";"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    String endTimeString \u003d \"04:04\";"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    public void getTaskName_equal() {"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"        Events event \u003d new Events(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(taskName, event.getTaskName(),\"Task Name does not match\");"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    public void markComplete_success() {"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"        Events event \u003d new Events(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"        event.markComplete();"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(true, event.isComplete(), \"Task not completed\");"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    public void getStartDate_equal() {"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"        Events event \u003d new Events(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(startDateString, event.getStartDate(),\"Start Date does not match\");"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"    public void getStartTime_equal() {"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"        Events event \u003d new Events(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(startTimeString, event.getStartTime(),\"Start Time does not match\");"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"    public void getEndDate_equal() {"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"        Events event \u003d new Events(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(endDateString, event.getEndDate(),\"End Date does not match\");"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"    public void getEndTime_equal() {"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"        Events event \u003d new Events(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(endTimeString, event.getEndTime(),\"End Time does not match\");"},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":75}},{"path":"test/fakebot/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.task;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"class TaskListTest {"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"    String description_1 \u003d \"test1\";"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"    String description_2 \u003d \"test2\";"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"    void getTask_equal() {"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"        Task test1 \u003d new ToDos(description_1);"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"        Task test2 \u003d new ToDos(description_2);"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test2);"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(test1, taskList.getTask(0), \"Task index do not match\");"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(test2, taskList.getTask(1), \"Task index do not match\");"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    void addTask_success() {"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"        Task test1 \u003d new ToDos(description_1);"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(1, taskList.getSize(), \"Task is not added\");"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"    void removeTask_success() {"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"        Task test1 \u003d new ToDos(description_1);"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.removeTask(0);"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(0, taskList.getSize(), \"Task is not removed\");"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"    void getSize_success() {"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"        Task test1 \u003d new ToDos(description_1);"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(3, taskList.getSize(), \"Task List size does not match\");"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"    void find_success() {"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"        Task test1 \u003d new ToDos(description_1);"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"        Task test2 \u003d new ToDos(description_2);"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test2);"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test2);"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test2);"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test2);"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(6, taskList.find(\"est1\").size(), \"Task size found does not match\");"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(4, taskList.find(\"est2\").size(), \"Task size found does not match\");"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":69}},{"path":"test/fakebot/task/ToDosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.task;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.*;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"class ToDosTest {"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"    public void getTaskName_equal() {"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"        String taskName \u003d \"Test\";"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"        ToDos todo \u003d new ToDos(taskName);"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(taskName, todo.getTaskName(),\"Task Name does not match\");"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    public void markComplete_success() {"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"        ToDos todo \u003d new ToDos(\"Test\");"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"        todo.markComplete();"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(true, todo.isComplete(), \"Task not completed\");"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"deadline return book /by 2020-03-11 08:02"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"event project meeting /at 2020-01-01 21:02 2020-01-01 21:02"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"done 4"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"todo borrow book"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"list"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"deadline return book /by 2020-01-11 01:02"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"event project meeting /at 2020-01-01 01:02 2020-01-01 20:02"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"todo"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"deadline"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"event"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"todos"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"deadlines"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"events"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"blah"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"deadline test"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"event test"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"done"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"dones"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"done yu"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"done -1"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"done 8"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"done 0"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"done"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"event"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"deadline"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"todo"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"delete"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"delete"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"deletes"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"delete yu"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"list"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"delete 3"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"list"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"delete 0"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"delete -1"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"delete 7"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"delete 1"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"list"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"delete 4"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"list"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"deadline return book /by 2020-01 01:02"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"event project meeting /at 2020-01 01:02 2020-01-01 20:02"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"find book"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"find helloworld"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"bye"}],"authorContributionMap":{"TeoHoeKeat":48}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"javac  -cp ..\\src\\main\\java\\fakebot\\command\\ -Xlint:none -d ..\\bin ..\\src\\main\\java\\fakebot\\command\\*.java"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"javac  -cp ..\\src\\main\\java\\fakebot\\task\\ -Xlint:none -d ..\\bin ..\\src\\main\\java\\fakebot\\task\\*.java"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"javac  -cp ..\\src\\main\\java\\fakebot -Xlint:none -d ..\\bin ..\\src\\main\\java\\fakebot\\*.java"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":16,"author":{"gitId":"-"},"content":")"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"REM run the program, feed comm"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"ands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"java -classpath ..\\bin FakeBot \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"TeoHoeKeat":6,"-":18}}]
