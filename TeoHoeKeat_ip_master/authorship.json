[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"# FakeBot project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"1. After the importing is complete, locate the `src/main/java/FakeBot.java` file, right-click it, and choose `Run FakeBot.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"TeoHoeKeat":2,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"    mainClassName \u003d \"fakebot.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"    archiveBaseName \u003d \"fakebot\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":17,"-":44}},{"path":"src/main/java/fakebot/FakeBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.command.Command;"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.command.CommandException;"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.command.CommandType;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.Deadlines;"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.Events;"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.Task;"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.TaskList;"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.ToDos;"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":" * Fakebot class, main class for Fakebot."},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"public class FakeBot {"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String OLD_LOGO \u003d \" ____        _        \\n\""},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String LOGO \u003d \" ______      _  ________   ____   ____ _______ \\n\""},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"|  ____/ \\\\  | |/ /  ____| |  _ \\\\ / __ \\\\__   __|\\n\""},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"| |__ /  \\\\  | \u0027 /| |__    | |_) | |  | | | |   \\n\""},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"|  __/ /\\\\ \\\\ |  \u003c |  __|   |  _ \u003c| |  | | | |\\n\""},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"| | / ____ \\\\| . \\\\| |____  | |_) | |__| | | |\\n\""},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"|_|/_/    \\\\_\\\\_|\\\\_\\\\______| |____/ \\\\____/  |_|\\n\";"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String EXIT_COMMAND \u003d \"bye\";"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String LIST_COMMAND \u003d \"list\";"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String DONE_COMMAND \u003d \"done\";"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String TODO_COMMAND \u003d \"todo\";"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String DEADLINE_COMMAND \u003d \"deadline\";"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String DEADLINE_SPLIT_REGEX \u003d \" /by \";"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String EVENT_COMMAND \u003d \"event\";"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String EVENT_SPLIT_REGEX \u003d \" /at \";"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String DELETE_COMMAND \u003d \"delete\";"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String FIND_COMMAND \u003d \"find\";"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String SAVE_FILE_PATH \u003d \"/data/\";"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String SAVE_FILE_NAME \u003d \"savedHistory.txt\";"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"    private static Ui ui;"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"    private TaskList taskList;"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"    private Storage storage;"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"     * Class constructor specifying save file name and save file path."},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"    public FakeBot() {"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"        this(SAVE_FILE_PATH, SAVE_FILE_NAME);"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"     * Class constructor specifying save file name and save file path."},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"    public FakeBot(String saveFileName, String saveFilePath) {"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"        storage \u003d new Storage(SAVE_FILE_NAME, SAVE_FILE_PATH);"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList \u003d new TaskList(storage.tryReadTaskFile());"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"     * Saves History to Storage."},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"    public void saveHistory() {"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"        storage.writeTasksToFIle(taskList);"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns Hello Message used at the start of the project."},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Returns Hello Message"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getHelloMessage() {"},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"        return Parser.getBotMPrintMessage(\"Hello from\\n\" + LOGO + \"What can I do for you?\");"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns message to show that the task is done."},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param task Task to print."},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Returns Done Message"},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getDoneMessage(Task task) {"},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"        return Parser.getBotMPrintMessage(\"Nice! I\u0027ve marked this task as done:\\n \" + task.toString());"},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns message to show that the task is deleted and print the remaining number of task left."},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param task Deleted Task."},{"lineNumber":98,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Returns Delete Message"},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getDeleteMessage(Task task) {"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":"        return Parser.getBotMPrintMessage(\"Noted. I\u0027ve removed this task:\\n \" + task.toString()"},{"lineNumber":102,"author":{"gitId":"TeoHoeKeat"},"content":"                + \"\\nNow you have \" + taskList.getSize() + \" tasks in the list.\");"},{"lineNumber":103,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":105,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":106,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns message to show that the task is deleted and print the remaining number of task left."},{"lineNumber":107,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":108,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param task Added Task."},{"lineNumber":109,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Returns Added Task Message"},{"lineNumber":110,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":111,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getAddedTaskMessage(Task task) {"},{"lineNumber":112,"author":{"gitId":"TeoHoeKeat"},"content":"        return Parser.getBotMPrintMessage(\"Got it. I\u0027ve added this task: \\n  \" + task.toString()"},{"lineNumber":113,"author":{"gitId":"TeoHoeKeat"},"content":"                + \"\\nNow you have \" + taskList.getSize() + \" tasks in the list.\");"},{"lineNumber":114,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":116,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"TeoHoeKeat"},"content":"     * Process Command given by user."},{"lineNumber":118,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns process command result message"},{"lineNumber":119,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":120,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param command Total number of Task Left."},{"lineNumber":121,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Returns process command result message"},{"lineNumber":122,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"TeoHoeKeat"},"content":"    public String processCommand(Command command) {"},{"lineNumber":124,"author":{"gitId":"TeoHoeKeat"},"content":"        switch (command.getCommand()) {"},{"lineNumber":125,"author":{"gitId":"TeoHoeKeat"},"content":"        case BYE:"},{"lineNumber":126,"author":{"gitId":"TeoHoeKeat"},"content":"            return \"\";"},{"lineNumber":127,"author":{"gitId":"TeoHoeKeat"},"content":"        case LIST:"},{"lineNumber":128,"author":{"gitId":"TeoHoeKeat"},"content":"            return Parser.getTaskListPrintMessage(taskList);"},{"lineNumber":129,"author":{"gitId":"TeoHoeKeat"},"content":"        case DONE:"},{"lineNumber":130,"author":{"gitId":"TeoHoeKeat"},"content":"            return processDoneCommand(command);"},{"lineNumber":131,"author":{"gitId":"TeoHoeKeat"},"content":"        case TODO:"},{"lineNumber":132,"author":{"gitId":"TeoHoeKeat"},"content":"            return processTodoCommand(command);"},{"lineNumber":133,"author":{"gitId":"TeoHoeKeat"},"content":"        case DEADLINE:"},{"lineNumber":134,"author":{"gitId":"TeoHoeKeat"},"content":"            return processDeadlineCommand(command);"},{"lineNumber":135,"author":{"gitId":"TeoHoeKeat"},"content":"        case EVENT:"},{"lineNumber":136,"author":{"gitId":"TeoHoeKeat"},"content":"            return processEventCommand(command);"},{"lineNumber":137,"author":{"gitId":"TeoHoeKeat"},"content":"        case DELETE:"},{"lineNumber":138,"author":{"gitId":"TeoHoeKeat"},"content":"            return processDeleteCommand(command);"},{"lineNumber":139,"author":{"gitId":"TeoHoeKeat"},"content":"        case FIND:"},{"lineNumber":140,"author":{"gitId":"TeoHoeKeat"},"content":"            return Parser.getTaskListPrintMessage(new TaskList(taskList.find(command.getDescription())));"},{"lineNumber":141,"author":{"gitId":"TeoHoeKeat"},"content":"        default: break;"},{"lineNumber":142,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":144,"author":{"gitId":"TeoHoeKeat"},"content":"        return \"\";"},{"lineNumber":145,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":147,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":148,"author":{"gitId":"TeoHoeKeat"},"content":"     * Process Done Command."},{"lineNumber":149,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":150,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param command Command to Process."},{"lineNumber":151,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Returns process Done command result message"},{"lineNumber":152,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":153,"author":{"gitId":"TeoHoeKeat"},"content":"    private String processDoneCommand(Command command) {"},{"lineNumber":154,"author":{"gitId":"TeoHoeKeat"},"content":"        int doneIndex \u003d Integer.parseInt(command.getDescription()) - 1;"},{"lineNumber":155,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.getTask(doneIndex).markComplete();"},{"lineNumber":156,"author":{"gitId":"TeoHoeKeat"},"content":"        saveHistory();"},{"lineNumber":157,"author":{"gitId":"TeoHoeKeat"},"content":"        return getDoneMessage(taskList.getTask(doneIndex));"},{"lineNumber":158,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":160,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":161,"author":{"gitId":"TeoHoeKeat"},"content":"     * Process Todos Command."},{"lineNumber":162,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":163,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param command Command to Process."},{"lineNumber":164,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Returns process ToDos command result message"},{"lineNumber":165,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":166,"author":{"gitId":"TeoHoeKeat"},"content":"    private String processTodoCommand(Command command) {"},{"lineNumber":167,"author":{"gitId":"TeoHoeKeat"},"content":"        ToDos todoTask \u003d new ToDos(command.getDescription());"},{"lineNumber":168,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(todoTask);"},{"lineNumber":169,"author":{"gitId":"TeoHoeKeat"},"content":"        saveHistory();"},{"lineNumber":170,"author":{"gitId":"TeoHoeKeat"},"content":"        return getAddedTaskMessage(todoTask);"},{"lineNumber":171,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":172,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":173,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":174,"author":{"gitId":"TeoHoeKeat"},"content":"     * Process Deadline Command."},{"lineNumber":175,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":176,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param command Command to Process."},{"lineNumber":177,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Returns process Deadline command result message"},{"lineNumber":178,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":179,"author":{"gitId":"TeoHoeKeat"},"content":"    private String processDeadlineCommand(Command command) {"},{"lineNumber":180,"author":{"gitId":"TeoHoeKeat"},"content":"        String[] deadlineDetails \u003d command.getDescription().split(DEADLINE_SPLIT_REGEX);"},{"lineNumber":181,"author":{"gitId":"TeoHoeKeat"},"content":"        String[] dates \u003d deadlineDetails[1].split(\" \");"},{"lineNumber":182,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate date \u003d LocalDate.parse(dates[0]);"},{"lineNumber":183,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime time \u003d LocalTime.parse(dates[1]);"},{"lineNumber":184,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadlines deadlineTask \u003d new Deadlines(deadlineDetails[0], date, time);"},{"lineNumber":185,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(deadlineTask);"},{"lineNumber":186,"author":{"gitId":"TeoHoeKeat"},"content":"        saveHistory();"},{"lineNumber":187,"author":{"gitId":"TeoHoeKeat"},"content":"        return getAddedTaskMessage(deadlineTask);"},{"lineNumber":188,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":189,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":190,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":191,"author":{"gitId":"TeoHoeKeat"},"content":"     * Process Event Command."},{"lineNumber":192,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":193,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param command Command to Process."},{"lineNumber":194,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Returns process Event command result message"},{"lineNumber":195,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":196,"author":{"gitId":"TeoHoeKeat"},"content":"    private String processEventCommand(Command command) {"},{"lineNumber":197,"author":{"gitId":"TeoHoeKeat"},"content":"        String[] eventDetails \u003d command.getDescription().split(EVENT_SPLIT_REGEX);"},{"lineNumber":198,"author":{"gitId":"TeoHoeKeat"},"content":"        String[] eventDates \u003d eventDetails[1].split(\" \");"},{"lineNumber":199,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(eventDates[0]);"},{"lineNumber":200,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(eventDates[1]);"},{"lineNumber":201,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(eventDates[2]);"},{"lineNumber":202,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(eventDates[3]);"},{"lineNumber":203,"author":{"gitId":"TeoHoeKeat"},"content":"        Events eventTask \u003d new Events(eventDetails[0], startDate, startTime, endDate, endTime);"},{"lineNumber":204,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(eventTask);"},{"lineNumber":205,"author":{"gitId":"TeoHoeKeat"},"content":"        saveHistory();"},{"lineNumber":206,"author":{"gitId":"TeoHoeKeat"},"content":"        return getAddedTaskMessage(eventTask);"},{"lineNumber":207,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":208,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":209,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":210,"author":{"gitId":"TeoHoeKeat"},"content":"     * Process Delete Command."},{"lineNumber":211,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":212,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param command Command to Process."},{"lineNumber":213,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":214,"author":{"gitId":"TeoHoeKeat"},"content":"    private String processDeleteCommand(Command command) {"},{"lineNumber":215,"author":{"gitId":"TeoHoeKeat"},"content":"        int deleteIndex \u003d Integer.parseInt(command.getDescription()) - 1;"},{"lineNumber":216,"author":{"gitId":"TeoHoeKeat"},"content":"        Task deletedTask \u003d taskList.getTask(deleteIndex);"},{"lineNumber":217,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.removeTask(deleteIndex);"},{"lineNumber":218,"author":{"gitId":"TeoHoeKeat"},"content":"        saveHistory();"},{"lineNumber":219,"author":{"gitId":"TeoHoeKeat"},"content":"        return getDeleteMessage(deletedTask);"},{"lineNumber":220,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":221,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":222,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":223,"author":{"gitId":"TeoHoeKeat"},"content":"     * Validates User Input."},{"lineNumber":224,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":225,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param command Command String that is yet to be parsed."},{"lineNumber":226,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":227,"author":{"gitId":"TeoHoeKeat"},"content":"    public Command validateCommand(String command) throws CommandException {"},{"lineNumber":228,"author":{"gitId":"TeoHoeKeat"},"content":"        if (command.equals(EXIT_COMMAND)) {"},{"lineNumber":229,"author":{"gitId":"TeoHoeKeat"},"content":"            return new Command(CommandType.BYE);"},{"lineNumber":230,"author":{"gitId":"TeoHoeKeat"},"content":"        } else if (command.equals(LIST_COMMAND)) {"},{"lineNumber":231,"author":{"gitId":"TeoHoeKeat"},"content":"            return new Command(CommandType.LIST);"},{"lineNumber":232,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":233,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":234,"author":{"gitId":"TeoHoeKeat"},"content":"        if (command.equals(DONE_COMMAND) || command.equals(DELETE_COMMAND)) {"},{"lineNumber":235,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(\"☹ OOPS!!! You must indicate the index of the Tasks to be \" + command + \".\");"},{"lineNumber":236,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":237,"author":{"gitId":"TeoHoeKeat"},"content":"        if (command.equals(TODO_COMMAND) || command.equals(DEADLINE_COMMAND)"},{"lineNumber":238,"author":{"gitId":"TeoHoeKeat"},"content":"                || command.equals(EVENT_COMMAND) || command.equals(FIND_COMMAND)) {"},{"lineNumber":239,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(\"☹ OOPS!!! The description of a \" + command + \" cannot be empty.\");"},{"lineNumber":240,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":241,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":242,"author":{"gitId":"TeoHoeKeat"},"content":"        int firstSplit \u003d command.indexOf(\u0027 \u0027);"},{"lineNumber":243,"author":{"gitId":"TeoHoeKeat"},"content":"        if (firstSplit \u003c 0) {"},{"lineNumber":244,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":245,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":246,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":247,"author":{"gitId":"TeoHoeKeat"},"content":"        String commandName \u003d command.substring(0, firstSplit);"},{"lineNumber":248,"author":{"gitId":"TeoHoeKeat"},"content":"        String description \u003d command.substring(firstSplit + 1);"},{"lineNumber":249,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":250,"author":{"gitId":"TeoHoeKeat"},"content":"        if (commandName.equals(DONE_COMMAND) || commandName.equals(DELETE_COMMAND) || commandName.equals(TODO_COMMAND)"},{"lineNumber":251,"author":{"gitId":"TeoHoeKeat"},"content":"                || commandName.equals(EVENT_COMMAND) || commandName.equals(DEADLINE_COMMAND)"},{"lineNumber":252,"author":{"gitId":"TeoHoeKeat"},"content":"                || commandName.equals(FIND_COMMAND)) {"},{"lineNumber":253,"author":{"gitId":"TeoHoeKeat"},"content":"            if (description.isEmpty()) {"},{"lineNumber":254,"author":{"gitId":"TeoHoeKeat"},"content":"                throw new CommandException(\"☹ OOPS!!! The description of a \" + commandName + \" cannot be empty.\");"},{"lineNumber":255,"author":{"gitId":"TeoHoeKeat"},"content":"            } else if (commandName.equals(DONE_COMMAND) || commandName.equals(DELETE_COMMAND)) {"},{"lineNumber":256,"author":{"gitId":"TeoHoeKeat"},"content":"                try {"},{"lineNumber":257,"author":{"gitId":"TeoHoeKeat"},"content":"                    int index \u003d Integer.parseInt(description);"},{"lineNumber":258,"author":{"gitId":"TeoHoeKeat"},"content":"                    if (index \u003e taskList.getSize() || index \u003c 1) {"},{"lineNumber":259,"author":{"gitId":"TeoHoeKeat"},"content":"                        throw new CommandException(\"☹ OOPS!!! Task number out of range.\");"},{"lineNumber":260,"author":{"gitId":"TeoHoeKeat"},"content":"                    }"},{"lineNumber":261,"author":{"gitId":"TeoHoeKeat"},"content":"                } catch (NumberFormatException e) {"},{"lineNumber":262,"author":{"gitId":"TeoHoeKeat"},"content":"                    throw new CommandException(\"☹ OOPS!!! Invalid Task Index Format.\");"},{"lineNumber":263,"author":{"gitId":"TeoHoeKeat"},"content":"                }"},{"lineNumber":264,"author":{"gitId":"TeoHoeKeat"},"content":"                if (commandName.equals(DONE_COMMAND)) {"},{"lineNumber":265,"author":{"gitId":"TeoHoeKeat"},"content":"                    return new Command(CommandType.DONE, description);"},{"lineNumber":266,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":267,"author":{"gitId":"TeoHoeKeat"},"content":"                } else if (commandName.equals(DELETE_COMMAND)) {"},{"lineNumber":268,"author":{"gitId":"TeoHoeKeat"},"content":"                    return new Command(CommandType.DELETE, description);"},{"lineNumber":269,"author":{"gitId":"TeoHoeKeat"},"content":"                }"},{"lineNumber":270,"author":{"gitId":"TeoHoeKeat"},"content":"            } else if (commandName.equals(FIND_COMMAND)) {"},{"lineNumber":271,"author":{"gitId":"TeoHoeKeat"},"content":"                return new Command(CommandType.FIND, description);"},{"lineNumber":272,"author":{"gitId":"TeoHoeKeat"},"content":"            } else if (commandName.equals(TODO_COMMAND)) {"},{"lineNumber":273,"author":{"gitId":"TeoHoeKeat"},"content":"                return new Command(CommandType.TODO, description);"},{"lineNumber":274,"author":{"gitId":"TeoHoeKeat"},"content":"            } else if (commandName.equals(DEADLINE_COMMAND)) {"},{"lineNumber":275,"author":{"gitId":"TeoHoeKeat"},"content":"                if (!description.contains(DEADLINE_SPLIT_REGEX)) {"},{"lineNumber":276,"author":{"gitId":"TeoHoeKeat"},"content":"                    throw new CommandException(\"☹ OOPS!!! The description of a \""},{"lineNumber":277,"author":{"gitId":"TeoHoeKeat"},"content":"                            + DEADLINE_COMMAND + \" must contain Date indicated by \\\"\""},{"lineNumber":278,"author":{"gitId":"TeoHoeKeat"},"content":"                            + DEADLINE_SPLIT_REGEX + \"\\\".\");"},{"lineNumber":279,"author":{"gitId":"TeoHoeKeat"},"content":"                }"},{"lineNumber":280,"author":{"gitId":"TeoHoeKeat"},"content":"                try {"},{"lineNumber":281,"author":{"gitId":"TeoHoeKeat"},"content":"                    String[] deadlineDetails \u003d description.split(DEADLINE_SPLIT_REGEX);"},{"lineNumber":282,"author":{"gitId":"TeoHoeKeat"},"content":"                    String[] dates \u003d deadlineDetails[1].split(\" \");"},{"lineNumber":283,"author":{"gitId":"TeoHoeKeat"},"content":"                    LocalDate date \u003d LocalDate.parse(dates[0]);"},{"lineNumber":284,"author":{"gitId":"TeoHoeKeat"},"content":"                    LocalTime time \u003d LocalTime.parse(dates[1]);"},{"lineNumber":285,"author":{"gitId":"TeoHoeKeat"},"content":"                } catch (Exception e) {"},{"lineNumber":286,"author":{"gitId":"TeoHoeKeat"},"content":"                    throw new CommandException(\"☹ OOPS!!! The Date format of a \""},{"lineNumber":287,"author":{"gitId":"TeoHoeKeat"},"content":"                            + DEADLINE_COMMAND + \" must be yyyy-mm-dd hh:ss.\");"},{"lineNumber":288,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":289,"author":{"gitId":"TeoHoeKeat"},"content":"                }"},{"lineNumber":290,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":291,"author":{"gitId":"TeoHoeKeat"},"content":"                return new Command(CommandType.DEADLINE, description);"},{"lineNumber":292,"author":{"gitId":"TeoHoeKeat"},"content":"            } else if (commandName.equals(EVENT_COMMAND)) {"},{"lineNumber":293,"author":{"gitId":"TeoHoeKeat"},"content":"                if (!description.contains(EVENT_SPLIT_REGEX)) {"},{"lineNumber":294,"author":{"gitId":"TeoHoeKeat"},"content":"                    throw new CommandException(\"☹ OOPS!!! The description of a \" + EVENT_COMMAND"},{"lineNumber":295,"author":{"gitId":"TeoHoeKeat"},"content":"                            + \" must contain Date and Duration indicated by \\\"\" + EVENT_SPLIT_REGEX + \"\\\".\");"},{"lineNumber":296,"author":{"gitId":"TeoHoeKeat"},"content":"                }"},{"lineNumber":297,"author":{"gitId":"TeoHoeKeat"},"content":"                try {"},{"lineNumber":298,"author":{"gitId":"TeoHoeKeat"},"content":"                    String[] eventDetails \u003d description.split(EVENT_SPLIT_REGEX);"},{"lineNumber":299,"author":{"gitId":"TeoHoeKeat"},"content":"                    String[] dates \u003d eventDetails[1].split(\" \");"},{"lineNumber":300,"author":{"gitId":"TeoHoeKeat"},"content":"                    LocalDate startDate \u003d LocalDate.parse(dates[0]);"},{"lineNumber":301,"author":{"gitId":"TeoHoeKeat"},"content":"                    LocalTime startTime \u003d LocalTime.parse(dates[1]);"},{"lineNumber":302,"author":{"gitId":"TeoHoeKeat"},"content":"                    LocalDate endDate \u003d LocalDate.parse(dates[2]);"},{"lineNumber":303,"author":{"gitId":"TeoHoeKeat"},"content":"                    LocalTime endTime \u003d LocalTime.parse(dates[3]);"},{"lineNumber":304,"author":{"gitId":"TeoHoeKeat"},"content":"                } catch (Exception e) {"},{"lineNumber":305,"author":{"gitId":"TeoHoeKeat"},"content":"                    throw new CommandException(\"☹ OOPS!!! The Date format of a \""},{"lineNumber":306,"author":{"gitId":"TeoHoeKeat"},"content":"                            + EVENT_COMMAND + \" must be yyyy-mm-dd hh:ss yyyy-mm-dd hh:ss.\");"},{"lineNumber":307,"author":{"gitId":"TeoHoeKeat"},"content":"                }"},{"lineNumber":308,"author":{"gitId":"TeoHoeKeat"},"content":"                return new Command(CommandType.EVENT, description);"},{"lineNumber":309,"author":{"gitId":"TeoHoeKeat"},"content":"            }"},{"lineNumber":310,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":311,"author":{"gitId":"TeoHoeKeat"},"content":"        throw new CommandException(\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":312,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":308,"-":5}},{"path":"src/main/java/fakebot/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"public class Launcher {"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"    public static void main(String[] args) {"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"        Application.launch(Ui.class, args);"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":13}},{"path":"src/main/java/fakebot/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.Deadlines;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.Events;"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.Task;"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.TaskList;"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.ToDos;"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":" * Parser class use for processing syntax"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"public class Parser {"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String DIVIDER \u003d \"____________________________________________________________\\n\";"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String SPLIT_REGEX \u003d \"-\u0027@,-@,1\u0027-\";"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"     * Enum for different task type."},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    private enum TaskType {"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"        TODO, EVENT, DEADLINE"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"     * Converts Task to String."},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param stringList List of string to be converted to string."},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return string."},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"    public static String convertStringListToString(List\u003cString\u003e stringList) {"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"        StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"        for (String s : stringList) {"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"            builder.append(s);"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"            builder.append(System.lineSeparator());"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"        return builder.toString();"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"     * Converts Task to String."},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param task Task to be parsed to string."},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return parsed Task."},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"    public static String convertTaskToString(Task task) {"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"        StringBuilder currentString \u003d new StringBuilder();"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"        if (task instanceof ToDos) {"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(TaskType.TODO.name());"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(SPLIT_REGEX);"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(task.isComplete());"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(SPLIT_REGEX);"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(task.getTaskName());"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"        } else if (task instanceof Events) {"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"            Events events \u003d (Events) task;"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(TaskType.EVENT.name());"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(SPLIT_REGEX);"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(task.isComplete());"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(SPLIT_REGEX);"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(events.getTaskName());"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(SPLIT_REGEX);"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(events.getStartDate());"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(SPLIT_REGEX);"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(events.getStartTime());"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(SPLIT_REGEX);"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(events.getEndDate());"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(SPLIT_REGEX);"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(events.getEndTime());"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"        } else if (task instanceof Deadlines) {"},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"            Deadlines deadlines \u003d (Deadlines) task;"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(TaskType.DEADLINE.name());"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(SPLIT_REGEX);"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(task.isComplete());"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(SPLIT_REGEX);"},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(deadlines.getTaskName());"},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(SPLIT_REGEX);"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(deadlines.getDeadlineDate());"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(SPLIT_REGEX);"},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"            currentString.append(deadlines.getDeadlineTime());"},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":"        return currentString.toString();"},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":"     * Converts List of Task to List of String."},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param taskList string of list."},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return list of String parsed from list of Task."},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":"    public static List\u003cString\u003e convertTasksToStrings(TaskList taskList) {"},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":"        List\u003cString\u003e strings \u003d new ArrayList\u003cString\u003e();"},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":97,"author":{"gitId":"TeoHoeKeat"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"},{"lineNumber":98,"author":{"gitId":"TeoHoeKeat"},"content":"            Task currentTask \u003d taskList.getTask(i);"},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":"            strings.add(convertTaskToString(currentTask));"},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":"        return strings;"},{"lineNumber":102,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":104,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"TeoHoeKeat"},"content":"     * Converts String to Task."},{"lineNumber":106,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":107,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param string Parsed Task."},{"lineNumber":108,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return task parsed from string."},{"lineNumber":109,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"TeoHoeKeat"},"content":"    public static Task parseStringToTask(String string) {"},{"lineNumber":111,"author":{"gitId":"TeoHoeKeat"},"content":"        String[] parts \u003d string.split(SPLIT_REGEX);"},{"lineNumber":112,"author":{"gitId":"TeoHoeKeat"},"content":"        Task currentTask \u003d null;"},{"lineNumber":113,"author":{"gitId":"TeoHoeKeat"},"content":"        switch (TaskType.valueOf(parts[0])) {"},{"lineNumber":114,"author":{"gitId":"TeoHoeKeat"},"content":"        case TODO:"},{"lineNumber":115,"author":{"gitId":"TeoHoeKeat"},"content":"            currentTask \u003d new ToDos(parts[2]);"},{"lineNumber":116,"author":{"gitId":"TeoHoeKeat"},"content":"            break;"},{"lineNumber":117,"author":{"gitId":"TeoHoeKeat"},"content":"        case EVENT:"},{"lineNumber":118,"author":{"gitId":"TeoHoeKeat"},"content":"            currentTask \u003d new Events(parts[2], LocalDate.parse(parts[3]), LocalTime.parse(parts[4]),"},{"lineNumber":119,"author":{"gitId":"TeoHoeKeat"},"content":"                    LocalDate.parse(parts[5]), LocalTime.parse(parts[6]));"},{"lineNumber":120,"author":{"gitId":"TeoHoeKeat"},"content":"            break;"},{"lineNumber":121,"author":{"gitId":"TeoHoeKeat"},"content":"        case DEADLINE:"},{"lineNumber":122,"author":{"gitId":"TeoHoeKeat"},"content":"            currentTask \u003d new Deadlines(parts[2], LocalDate.parse(parts[3]), LocalTime.parse(parts[4]));"},{"lineNumber":123,"author":{"gitId":"TeoHoeKeat"},"content":"            break;"},{"lineNumber":124,"author":{"gitId":"TeoHoeKeat"},"content":"        default: break;"},{"lineNumber":125,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":127,"author":{"gitId":"TeoHoeKeat"},"content":"        if (Boolean.parseBoolean(parts[1])) {"},{"lineNumber":128,"author":{"gitId":"TeoHoeKeat"},"content":"            currentTask.markComplete();"},{"lineNumber":129,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":130,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":131,"author":{"gitId":"TeoHoeKeat"},"content":"        return currentTask;"},{"lineNumber":132,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":134,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"TeoHoeKeat"},"content":"     * Converts List of String to List of Task."},{"lineNumber":136,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":137,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param stringList string of list."},{"lineNumber":138,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return list of Task parsed from list of string."},{"lineNumber":139,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":140,"author":{"gitId":"TeoHoeKeat"},"content":"    public static List\u003cTask\u003e parseStringsToTasks(List\u003cString\u003e stringList) {"},{"lineNumber":141,"author":{"gitId":"TeoHoeKeat"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":142,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":143,"author":{"gitId":"TeoHoeKeat"},"content":"        for (String line : stringList) {"},{"lineNumber":144,"author":{"gitId":"TeoHoeKeat"},"content":"            tasks.add(parseStringToTask(line));"},{"lineNumber":145,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"TeoHoeKeat"},"content":"        return tasks;"},{"lineNumber":147,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":149,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":150,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":151,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":152,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns Standard Print Message."},{"lineNumber":153,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":154,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param message Message to print."},{"lineNumber":155,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":156,"author":{"gitId":"TeoHoeKeat"},"content":"    public static String getBotMPrintMessage(String message) {"},{"lineNumber":157,"author":{"gitId":"TeoHoeKeat"},"content":"        String printMessage \u003d DIVIDER + message + \"\\n\" + DIVIDER;"},{"lineNumber":158,"author":{"gitId":"TeoHoeKeat"},"content":"        return printMessage;"},{"lineNumber":159,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":160,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":161,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":162,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns List of String Print Message."},{"lineNumber":163,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":164,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param startingMessage Starting message to print before the list."},{"lineNumber":165,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param messages        List of String to print."},{"lineNumber":166,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":167,"author":{"gitId":"TeoHoeKeat"},"content":"    public static String getStringListPrintMessage(String startingMessage, List\u003cString\u003e messages) {"},{"lineNumber":168,"author":{"gitId":"TeoHoeKeat"},"content":"        StringBuilder printMessage \u003d new StringBuilder(DIVIDER);"},{"lineNumber":169,"author":{"gitId":"TeoHoeKeat"},"content":"        printMessage.append(startingMessage);"},{"lineNumber":170,"author":{"gitId":"TeoHoeKeat"},"content":"        for (int i \u003d 1; i \u003c\u003d messages.size(); i++) {"},{"lineNumber":171,"author":{"gitId":"TeoHoeKeat"},"content":"            printMessage.append(i);"},{"lineNumber":172,"author":{"gitId":"TeoHoeKeat"},"content":"            printMessage.append(\".\");"},{"lineNumber":173,"author":{"gitId":"TeoHoeKeat"},"content":"            printMessage.append(messages.get(i - 1));"},{"lineNumber":174,"author":{"gitId":"TeoHoeKeat"},"content":"            printMessage.append(\"\\n\");"},{"lineNumber":175,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":176,"author":{"gitId":"TeoHoeKeat"},"content":"        printMessage.append(DIVIDER);"},{"lineNumber":177,"author":{"gitId":"TeoHoeKeat"},"content":"        return printMessage.toString();"},{"lineNumber":178,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":179,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":180,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":181,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns List of Task Print Message."},{"lineNumber":182,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":183,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param taskList List of Task to convert."},{"lineNumber":184,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":185,"author":{"gitId":"TeoHoeKeat"},"content":"    public static String getTaskListPrintMessage(TaskList taskList) {"},{"lineNumber":186,"author":{"gitId":"TeoHoeKeat"},"content":"        List\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();"},{"lineNumber":187,"author":{"gitId":"TeoHoeKeat"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"},{"lineNumber":188,"author":{"gitId":"TeoHoeKeat"},"content":"            messages.add(taskList.getTask(i).toString());"},{"lineNumber":189,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"TeoHoeKeat"},"content":"        return getStringListPrintMessage(\"Here are the tasks in your list:\\n\", messages);"},{"lineNumber":191,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":192,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":193,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":193}},{"path":"src/main/java/fakebot/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.Task;"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.TaskList;"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":" * Storage class use for storing and loading data from file."},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"public class Storage {"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"     * File name and path to be edit."},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"    private String fileToEdit;"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"     * Constructor of storage class."},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param fileName name of file."},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param filePath path of file."},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    public Storage(String fileName, String filePath) {"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"        filePath \u003d createDirectory(filePath);"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"        fileToEdit \u003d filePath + fileName;"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"     * Creates Directory if file path doesn\u0027t exist."},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param filePath path of file."},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return path created, return empty path if path is invalid."},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"    private String createDirectory(String filePath) {"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"        file.mkdirs();"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"        //Remove directory and use root instead since it invalid"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"        if (!file.isDirectory()) {"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"            return \"\";"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"        return filePath;"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"     * Writes Tasks to File."},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param taskList Tasks to write to file."},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"    public void writeTasksToFIle(TaskList taskList) {"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"        String textToAdd \u003d Parser.convertStringListToString(Parser.convertTasksToStrings(taskList));"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"        try {"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"            writeToFile(textToAdd);"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"        } catch (Exception e) {"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"     * Writes String to File."},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param textToAdd write text to file."},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"    private void writeToFile(String textToAdd) throws IOException {"},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"        FileWriter fw \u003d new FileWriter(fileToEdit);"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"        fw.write(textToAdd);"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"        fw.close();"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"     * Reads Task from File."},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return list of task read from File."},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"    public List\u003cTask\u003e tryReadTaskFile() {"},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"        try {"},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":"            List\u003cString\u003e stringList \u003d readFile();"},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"            taskList \u003d Parser.parseStringsToTasks(stringList);"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"            //Do nothing, return empty list."},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"        return taskList;"},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":"     * Reads String from File."},{"lineNumber":97,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":98,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return list of string read from File."},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"    private List\u003cString\u003e readFile() throws FileNotFoundException {"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":"        List\u003cString\u003e stringList \u003d new ArrayList\u003cString\u003e();"},{"lineNumber":102,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":103,"author":{"gitId":"TeoHoeKeat"},"content":"        File f \u003d new File(fileToEdit);"},{"lineNumber":104,"author":{"gitId":"TeoHoeKeat"},"content":"        Scanner s \u003d new Scanner(f);"},{"lineNumber":105,"author":{"gitId":"TeoHoeKeat"},"content":"        while (s.hasNext()) {"},{"lineNumber":106,"author":{"gitId":"TeoHoeKeat"},"content":"            stringList.add(s.nextLine());"},{"lineNumber":107,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":109,"author":{"gitId":"TeoHoeKeat"},"content":"        return stringList;"},{"lineNumber":110,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":112,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":112}},{"path":"src/main/java/fakebot/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.command.Command;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.command.CommandException;"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.ui.DialogBox;"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.application.Application;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.Scene;"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.control.Button;"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.control.Label;"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.image.Image;"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.text.Font;"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.stage.Stage;"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":" * Ui Class use for reading and printing data."},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"public class Ui extends Application {"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    private Scanner scanf;"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    private VBox dialogContainer;"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"    private TextField userInput;"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    private Button sendButton;"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"    private Scene scene;"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Logo.png\"));"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"    private Image fakeBotImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/wolf.png\"));"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    private FakeBot fakeBot;"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"     * Class constructor for Ui."},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"    public Ui() {"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"        scanf \u003d new Scanner(System.in);"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"        fakeBot \u003d new FakeBot();"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"    //Solution below adapted from https://se-education.org/guides/tutorials/javaFx.html"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"    public void start(Stage stage) {"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"        //Setting up required components"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"        //The container for the content of the chat to scroll."},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"        userInput \u003d new TextField();"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"        sendButton \u003d new Button(\"Send\");"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"        scene \u003d new Scene(mainLayout);"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"        //Formatting the window to look as expected"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"        stage.setTitle(\"FakeBot\");"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"        stage.setResizable(false);"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"        mainLayout.setPrefSize(600.0, 600.0);"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"        scrollPane.setPrefSize(585, 535);"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"        // You will need to import `javafx.scene.layout.Region` for this."},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"        userInput.setPrefWidth(525.0);"},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);"},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":97,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":98,"author":{"gitId":"TeoHoeKeat"},"content":"        //Add functionality to handle user input."},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"            handleUserInput(userInput.getText());"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":"            userInput.clear();"},{"lineNumber":102,"author":{"gitId":"TeoHoeKeat"},"content":"        });"},{"lineNumber":103,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":104,"author":{"gitId":"TeoHoeKeat"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":105,"author":{"gitId":"TeoHoeKeat"},"content":"            handleUserInput(userInput.getText());"},{"lineNumber":106,"author":{"gitId":"TeoHoeKeat"},"content":"            userInput.clear();"},{"lineNumber":107,"author":{"gitId":"TeoHoeKeat"},"content":"        });"},{"lineNumber":108,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":109,"author":{"gitId":"TeoHoeKeat"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes."},{"lineNumber":110,"author":{"gitId":"TeoHoeKeat"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":111,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":112,"author":{"gitId":"TeoHoeKeat"},"content":"        //Creating hello text"},{"lineNumber":113,"author":{"gitId":"TeoHoeKeat"},"content":"        addTextToContainer(fakeBot.getHelloMessage());"},{"lineNumber":114,"author":{"gitId":"TeoHoeKeat"},"content":"        stage.setScene(scene);"},{"lineNumber":115,"author":{"gitId":"TeoHoeKeat"},"content":"        stage.show();"},{"lineNumber":116,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":117,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":119,"author":{"gitId":"TeoHoeKeat"},"content":"    private void handleUserInput(String userInput) {"},{"lineNumber":120,"author":{"gitId":"TeoHoeKeat"},"content":"        Command command;"},{"lineNumber":121,"author":{"gitId":"TeoHoeKeat"},"content":"        try {"},{"lineNumber":122,"author":{"gitId":"TeoHoeKeat"},"content":"            command \u003d fakeBot.validateCommand(userInput);"},{"lineNumber":123,"author":{"gitId":"TeoHoeKeat"},"content":"        } catch (CommandException e) {"},{"lineNumber":124,"author":{"gitId":"TeoHoeKeat"},"content":"            addTextToContainer(userInput, e.getMessage());"},{"lineNumber":125,"author":{"gitId":"TeoHoeKeat"},"content":"            return;"},{"lineNumber":126,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"TeoHoeKeat"},"content":"        String outputText \u003d fakeBot.processCommand(command);"},{"lineNumber":128,"author":{"gitId":"TeoHoeKeat"},"content":"        if (outputText.length() \u003e 0) {"},{"lineNumber":129,"author":{"gitId":"TeoHoeKeat"},"content":"            addTextToContainer(userInput, outputText);"},{"lineNumber":130,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":133,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":134,"author":{"gitId":"TeoHoeKeat"},"content":"     * Creates a label with the specified text and adds it to the dialog container."},{"lineNumber":135,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":136,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param text String containing text to add"},{"lineNumber":137,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a label with the specified text that has word wrap enabled."},{"lineNumber":138,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"TeoHoeKeat"},"content":"    private Label getDialogLabel(String text) {"},{"lineNumber":140,"author":{"gitId":"TeoHoeKeat"},"content":"        Label textToAdd \u003d new Label(text);"},{"lineNumber":141,"author":{"gitId":"TeoHoeKeat"},"content":"        textToAdd.setFont(Font.font (\"Courier New\", 12));"},{"lineNumber":142,"author":{"gitId":"TeoHoeKeat"},"content":"        textToAdd.setWrapText(true);"},{"lineNumber":143,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":144,"author":{"gitId":"TeoHoeKeat"},"content":"        return textToAdd;"},{"lineNumber":145,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":146,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":147,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":148,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":149,"author":{"gitId":"TeoHoeKeat"},"content":"     * Add text to container"},{"lineNumber":150,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":151,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param text text to be add to Container"},{"lineNumber":152,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":153,"author":{"gitId":"TeoHoeKeat"},"content":"    private void addTextToContainer(String text) {"},{"lineNumber":154,"author":{"gitId":"TeoHoeKeat"},"content":"        Label userText \u003d getDialogLabel(text);"},{"lineNumber":155,"author":{"gitId":"TeoHoeKeat"},"content":"        dialogContainer.getChildren().add(DialogBox.getFakebotDialog(userText, new ImageView(fakeBotImage)));"},{"lineNumber":156,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":157,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":158,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":159,"author":{"gitId":"TeoHoeKeat"},"content":"     * Add text to container"},{"lineNumber":160,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":161,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param inputText inputText to be add to Container"},{"lineNumber":162,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param outputText outputText to be add to Container"},{"lineNumber":163,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":164,"author":{"gitId":"TeoHoeKeat"},"content":"    private void addTextToContainer(String inputText, String outputText) {"},{"lineNumber":165,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":166,"author":{"gitId":"TeoHoeKeat"},"content":"        Label userText \u003d getDialogLabel(inputText);"},{"lineNumber":167,"author":{"gitId":"TeoHoeKeat"},"content":"        Label fakebotText \u003d getDialogLabel(outputText);"},{"lineNumber":168,"author":{"gitId":"TeoHoeKeat"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":169,"author":{"gitId":"TeoHoeKeat"},"content":"                DialogBox.getUserDialog(userText, new ImageView(userImage)),"},{"lineNumber":170,"author":{"gitId":"TeoHoeKeat"},"content":"                DialogBox.getFakebotDialog(fakebotText, new ImageView(fakeBotImage))"},{"lineNumber":171,"author":{"gitId":"TeoHoeKeat"},"content":"        );"},{"lineNumber":172,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":173,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":173}},{"path":"src/main/java/fakebot/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.command;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":" * Command Class."},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"public class Command {"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"    private CommandType type;"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"    private String description;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"     * Class constructor specifying the command type."},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    public Command(CommandType type) {"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"        this.type \u003d type;"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"     * Class constructor specifying the command type and description."},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    public Command(CommandType type, String description) {"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"        this.type \u003d type;"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        this.description \u003d description;"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns Command Type."},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return CommandType of the Command."},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    public CommandType getCommand() {"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"        return type;"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns Command Description Type."},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Description of the Command."},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getDescription() {"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"        return description;"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":44}},{"path":"src/main/java/fakebot/command/CommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.command;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":" * Command Exception Class."},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"public class CommandException extends Exception {"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"     * Class constructor specifying the error message."},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"    public CommandException(String errorMessage) {"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"        super(errorMessage);"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":14}},{"path":"src/main/java/fakebot/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.command;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":" * Command Type Enum."},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"public enum CommandType {"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"    BYE, LIST, DONE, TODO, EVENT, DEADLINE, DELETE, FIND;"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":7}},{"path":"src/main/java/fakebot/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.task;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":" * Deadline Task Type."},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"public class Deadlines extends Task {"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"    private LocalDate deadlineDate;"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"    private LocalTime deadlineTime;"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"     * Class constructor specifying the task description, deadline date, deadline time,"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    public Deadlines(String name, LocalDate deadlineDate, LocalTime deadlineTime) {"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"        super(name);"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"        this.deadlineTime \u003d deadlineTime;"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns Task Deadline Date."},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return Deadline Date as String."},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getDeadlineDate() {"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        return saveDateFormat.format(deadlineDate);"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns Task Deadline Time."},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return Deadline Time as String."},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getDeadlineTime() {"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"        return saveTimeFormat.format(deadlineTime);"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"    public String toString() {"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"        return \"[D]\" + super.toString() + \" (by: \""},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"                + printDateFormat.format(deadlineDate) + \" \" + printTimeFormat.format(deadlineTime) + \")\";"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"}"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":""}],"authorContributionMap":{"TeoHoeKeat":47}},{"path":"src/main/java/fakebot/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.task;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":" * Event Task Type"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"public class Events extends Task {"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"    private LocalDate startDate;"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"    private LocalTime startTime;"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"    private LocalDate endDate;"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    private LocalTime endTime;"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"     * Class constructor specifying the task description, event start date, event start time,"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"     * event end date, event end time."},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"    public Events(String name, LocalDate startDate, LocalTime startTime, LocalDate endDate, LocalTime endTime) {"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"        super(name);"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"        this.startDate \u003d startDate;"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        this.endDate \u003d endDate;"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns Task Start Date."},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return Start Date as String."},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getStartDate() {"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"        return saveDateFormat.format(startDate);"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns Task Start Time."},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return Start Time as String."},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getStartTime() {"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"        return saveTimeFormat.format(startTime);"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns Task End Date."},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return End Date as String."},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getEndDate() {"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"        return saveDateFormat.format(endDate);"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns Task End Time."},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return End Time as String."},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getEndTime() {"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"        return saveTimeFormat.format(endTime);"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"    public String toString() {"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"        return \"[E]\" + super.toString() + \" (from: \""},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"                + printDateFormat.format(startDate) + \" \" + printTimeFormat.format(startTime) + \" to \""},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"                + printDateFormat.format(endDate) + \" \" + printTimeFormat.format(endTime) + \")\";"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":70}},{"path":"src/main/java/fakebot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.task;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":" * Abstract Task Class."},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"public abstract class Task {"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"    protected String taskName;"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"    protected boolean isComplete;"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"    protected DateTimeFormatter printDateFormat;"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    protected DateTimeFormatter printTimeFormat;"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    protected DateTimeFormatter saveDateFormat;"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    protected DateTimeFormatter saveTimeFormat;"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"     * Class constructor specifying the task description."},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    public Task(String taskName) {"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        isComplete \u003d false;"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"        this.printDateFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"        this.printTimeFormat \u003d DateTimeFormatter.ofPattern(\"HH:mm\");"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"        this.saveDateFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        this.saveTimeFormat \u003d DateTimeFormatter.ofPattern(\"HH:mm\");"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns Task Name."},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Task Name."},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getTaskName() {"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"        return taskName;"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"     * Marks Task as Complete."},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"    public void markComplete() {"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"        isComplete \u003d true;"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns if Task is Complete."},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return If Task is Complete."},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean isComplete() {"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"        return isComplete;"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"    public String toString() {"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"        return (isComplete ? \"[X] \" + taskName : \"[ ] \" + taskName);"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":61}},{"path":"src/main/java/fakebot/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.task;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":" * TaskList Class use to store Task"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"    private List\u003cTask\u003e tasks;"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"     * Class constructor specifying the task list."},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"    public TaskList(List\u003cTask\u003e tasks) {"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns Task at Index i."},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param i Index of Task."},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return Task."},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    public Task getTask(int i) {"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"        return tasks.get(i);"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"     * Adds task to task list."},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param task Task to add to TaskList."},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"    public void addTask(Task task) {"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"        tasks.add(task);"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"     * Removes Task index i."},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param i Index of Task to be removed."},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"    public void removeTask(int i) {"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"        tasks.remove(i);"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns size of task list."},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return Size of Task List."},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"    public int getSize() {"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"        return tasks.size();"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"     * Finds all task that contain search string."},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param search String to search."},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Return list of task that contain search string."},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"    public List\u003cTask\u003e find(String search) {"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"        List\u003cTask\u003e foundTask \u003d new ArrayList\u003c\u003e();"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"            if (tasks.get(i).getTaskName().contains(search)) {"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"                foundTask.add(tasks.get(i));"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"        return foundTask;"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":70}},{"path":"src/main/java/fakebot/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.task;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":" * ToDos Task Type"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"public class ToDos extends Task {"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"     * Class constructor specifying the task description."},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"    public ToDos(String name) {"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"        super(name);"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":17}},{"path":"src/main/java/fakebot/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.ui;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.geometry.Insets;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.geometry.Pos;"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.Node;"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.control.Label;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.shape.Circle;"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"//Solution below adapted from https://se-education.org/guides/tutorials/javaFx.html"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":" * Dialog Box for respond and user input"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"public class DialogBox extends HBox {"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    private Label text;"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"     * Constructors for DialogBox specifying label and image view"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param l text to be display"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param iv user profile image to be display"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    public DialogBox(Label l, ImageView iv) {"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"        text \u003d l;"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"        displayPicture \u003d iv;"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"        text.setWrapText(true);"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"        displayPicture.setFitWidth(100.0);"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"        displayPicture.setFitHeight(100.0);"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"        Circle clip \u003d new Circle(50, 50, 50);"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"        displayPicture.setClip(clip);"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"        this.setAlignment(Pos.CENTER_RIGHT);"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"        BackgroundFill backgroundFill \u003d new BackgroundFill(Color.LIGHTGREEN,"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"                CornerRadii.EMPTY, Insets.EMPTY);"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"        Background background \u003d new Background(backgroundFill);"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"        this.setBackground(background);"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"        this.setPadding(new Insets(10, 10, 10, 10));"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"        this.getChildren().addAll(text, displayPicture);"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"    private void flip() {"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"        this.setAlignment(Pos.CENTER_LEFT);"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"        BackgroundFill backgroundFill \u003d new BackgroundFill(Color.LIGHTGREY,"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"                CornerRadii.EMPTY, Insets.EMPTY);"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"        Background background \u003d new Background(backgroundFill);"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"        this.setBackground(background);"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"        FXCollections.reverse(tmp);"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns dialog box for user"},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param l text of user"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param iv imageView of user"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Returns dialog box of the user"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {"},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":"        return new DialogBox(l, iv);"},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns dialog box for fakebot"},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param l text of fakebot"},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param iv imageView of fakebot"},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Returns dialog box of the fakebot"},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":"    public static DialogBox getFakebotDialog(Label l, ImageView iv) {"},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"        var db \u003d new DialogBox(l, iv);"},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"        db.flip();"},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"        return db;"},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":94}},{"path":"src/test/java/fakebot/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalTime;"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.Deadlines;"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.Events;"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.Task;"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.ToDos;"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"class ParserTest {"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"    private String endDateString \u003d \"2011-10-01\";"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"    private String endTimeString \u003d \"04:04\";"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    private String taskName \u003d \"Test\";"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    private String startDateString \u003d \"2000-10-01\";"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"    private String startTimeString \u003d \"01:04\";"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    private String dateString \u003d \"2000-10-01\";"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    private String timeString \u003d \"01:04\";"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseTodoGetTaskName_equal() {"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"        String taskName \u003d \"Test\";"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"        ToDos todo \u003d new ToDos(taskName);"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.parseStringToTask(Parser.convertTaskToString(todo));"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"        todo \u003d (ToDos) task;"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(taskName, todo.getTaskName(), \"Task Name does not match\");"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseTodoMarkComplete_success() {"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"        ToDos todo \u003d new ToDos(\"Test\");"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"        todo.markComplete();"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.parseStringToTask(Parser.convertTaskToString(todo));"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"        todo \u003d (ToDos) task;"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(true, todo.isComplete(), \"Task not completed\");"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseEventGetTaskName_equal() {"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"        Events event \u003d new Events(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.parseStringToTask(Parser.convertTaskToString(event));"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"        event \u003d (Events) task;"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(taskName, event.getTaskName(), \"Task Name does not match\");"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseEventMarkComplete_success() {"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"        Events event \u003d new Events(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"        event.markComplete();"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.parseStringToTask(Parser.convertTaskToString(event));"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"        event \u003d (Events) task;"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(true, event.isComplete(), \"Task not completed\");"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseEventGetStartDate_equal() {"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":"        Events event \u003d new Events(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.parseStringToTask(Parser.convertTaskToString(event));"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"        event \u003d (Events) task;"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(startDateString, event.getStartDate(), \"Start Date does not match\");"},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseEventGetStartTime_equal() {"},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"        Events event \u003d new Events(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.parseStringToTask(Parser.convertTaskToString(event));"},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":"        event \u003d (Events) task;"},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(startTimeString, event.getStartTime(), \"Start Time does not match\");"},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":97,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":98,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseEventGetEndDate_equal() {"},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":102,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":103,"author":{"gitId":"TeoHoeKeat"},"content":"        Events event \u003d new Events(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":104,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.parseStringToTask(Parser.convertTaskToString(event));"},{"lineNumber":105,"author":{"gitId":"TeoHoeKeat"},"content":"        event \u003d (Events) task;"},{"lineNumber":106,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(endDateString, event.getEndDate(), \"End Date does not match\");"},{"lineNumber":107,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":109,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":110,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseEventGetEndTime_equal() {"},{"lineNumber":111,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":112,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":113,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":114,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":115,"author":{"gitId":"TeoHoeKeat"},"content":"        Events event \u003d new Events(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":116,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.parseStringToTask(Parser.convertTaskToString(event));"},{"lineNumber":117,"author":{"gitId":"TeoHoeKeat"},"content":"        event \u003d (Events) task;"},{"lineNumber":118,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(endTimeString, event.getEndTime(), \"End Time does not match\");"},{"lineNumber":119,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":121,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":122,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseDeadlineGetTaskName_equal() {"},{"lineNumber":123,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":124,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime time \u003d LocalTime.parse(timeString);"},{"lineNumber":125,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadlines deadline \u003d new Deadlines(taskName, date, time);"},{"lineNumber":126,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.parseStringToTask(Parser.convertTaskToString(deadline));"},{"lineNumber":127,"author":{"gitId":"TeoHoeKeat"},"content":"        deadline \u003d (Deadlines) task;"},{"lineNumber":128,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(taskName, deadline.getTaskName(), \"Task Name does not match\");"},{"lineNumber":129,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":131,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":132,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseDeadlineMarkComplete_success() {"},{"lineNumber":133,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":134,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime time \u003d LocalTime.parse(timeString);"},{"lineNumber":135,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadlines deadline \u003d new Deadlines(taskName, date, time);"},{"lineNumber":136,"author":{"gitId":"TeoHoeKeat"},"content":"        deadline.markComplete();"},{"lineNumber":137,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.parseStringToTask(Parser.convertTaskToString(deadline));"},{"lineNumber":138,"author":{"gitId":"TeoHoeKeat"},"content":"        deadline \u003d (Deadlines) task;"},{"lineNumber":139,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(true, deadline.isComplete(), \"Task not completed\");"},{"lineNumber":140,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":142,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":143,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseDeadlineGetDeadlineDate_equal() {"},{"lineNumber":144,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":145,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime time \u003d LocalTime.parse(timeString);"},{"lineNumber":146,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadlines deadline \u003d new Deadlines(taskName, date, time);"},{"lineNumber":147,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.parseStringToTask(Parser.convertTaskToString(deadline));"},{"lineNumber":148,"author":{"gitId":"TeoHoeKeat"},"content":"        deadline \u003d (Deadlines) task;"},{"lineNumber":149,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(dateString, deadline.getDeadlineDate(), \"Deadline Date does not match\");"},{"lineNumber":150,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":152,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":153,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseDeadlineGetDeadlineTime_equal() {"},{"lineNumber":154,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":155,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime time \u003d LocalTime.parse(timeString);"},{"lineNumber":156,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadlines deadline \u003d new Deadlines(taskName, date, time);"},{"lineNumber":157,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.parseStringToTask(Parser.convertTaskToString(deadline));"},{"lineNumber":158,"author":{"gitId":"TeoHoeKeat"},"content":"        deadline \u003d (Deadlines) task;"},{"lineNumber":159,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(timeString, deadline.getDeadlineTime(), \"Deadline Time does not match\");"},{"lineNumber":160,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":161,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":161}},{"path":"src/test/java/fakebot/command/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.command;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"class CommandTest {"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"    private CommandType type \u003d CommandType.EVENT;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"    private String description \u003d \"Test\";"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"    void getCommand_equal() {"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"        Command test \u003d new Command(type, description);"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(type, test.getCommand(), \"Command Does not match\");"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    void getDescription_equal() {"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"        Command test \u003d new Command(type, description);"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(description, test.getDescription(), \"Description Does not match\");"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":22}},{"path":"src/test/java/fakebot/task/DeadlinesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.task;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"class DeadlinesTest {"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"    private String taskName \u003d \"Test\";"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    private String dateString \u003d \"2000-10-01\";"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"    private String timeString \u003d \"01:04\";"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    public void getTaskName_equal() {"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime time \u003d LocalTime.parse(timeString);"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadlines deadline \u003d new Deadlines(taskName, date, time);"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(taskName, deadline.getTaskName(), \"Task Name does not match\");"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    public void markComplete_success() {"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime time \u003d LocalTime.parse(timeString);"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadlines deadline \u003d new Deadlines(taskName, date, time);"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        deadline.markComplete();"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(true, deadline.isComplete(), \"Task not completed\");"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    public void getDeadlineDate_equal() {"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime time \u003d LocalTime.parse(timeString);"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadlines deadline \u003d new Deadlines(taskName, date, time);"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(dateString, deadline.getDeadlineDate(), \"Deadline Date does not match\");"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"    public void getDeadlineTime_equal() {"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime time \u003d LocalTime.parse(timeString);"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadlines deadline \u003d new Deadlines(taskName, date, time);"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(timeString, deadline.getDeadlineTime(), \"Deadline Time does not match\");"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":48}},{"path":"src/test/java/fakebot/task/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.task;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"class EventsTest {"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"    private String taskName \u003d \"Test\";"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    private String startDateString \u003d \"2000-10-01\";"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"    private String startTimeString \u003d \"01:04\";"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    private String endDateString \u003d \"2011-10-01\";"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    private String endTimeString \u003d \"04:04\";"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"    public void getTaskName_equal() {"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"        Events event \u003d new Events(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(taskName, event.getTaskName(), \"Task Name does not match\");"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    public void markComplete_success() {"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"        Events event \u003d new Events(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"        event.markComplete();"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(true, event.isComplete(), \"Task not completed\");"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    public void getStartDate_equal() {"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"        Events event \u003d new Events(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(startDateString, event.getStartDate(), \"Start Date does not match\");"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"    public void getStartTime_equal() {"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"        Events event \u003d new Events(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(startTimeString, event.getStartTime(), \"Start Time does not match\");"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"    public void getEndDate_equal() {"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"        Events event \u003d new Events(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(endDateString, event.getEndDate(), \"End Date does not match\");"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"    public void getEndTime_equal() {"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"        Events event \u003d new Events(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(endTimeString, event.getEndTime(), \"End Time does not match\");"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":78}},{"path":"src/test/java/fakebot/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.task;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"class TaskListTest {"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"    private String description1 \u003d \"test1\";"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"    private String description2 \u003d \"test2\";"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    void getTask_equal() {"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"        Task test1 \u003d new ToDos(description1);"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"        Task test2 \u003d new ToDos(description2);"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test2);"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(test1, taskList.getTask(0), \"Task index do not match\");"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(test2, taskList.getTask(1), \"Task index do not match\");"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    void addTask_success() {"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"        Task test1 \u003d new ToDos(description1);"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(1, taskList.getSize(), \"Task is not added\");"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    void removeTask_success() {"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"        Task test1 \u003d new ToDos(description1);"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.removeTask(0);"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(0, taskList.getSize(), \"Task is not removed\");"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"    void getSize_success() {"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"        Task test1 \u003d new ToDos(description1);"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(3, taskList.getSize(), \"Task List size does not match\");"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"    void find_success() {"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"        Task test1 \u003d new ToDos(description1);"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"        Task test2 \u003d new ToDos(description2);"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test2);"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test2);"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test2);"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test2);"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(6, taskList.find(\"est1\").size(), \"Task size found does not match\");"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(4, taskList.find(\"est2\").size(), \"Task size found does not match\");"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":70}},{"path":"src/test/java/fakebot/task/ToDosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.task;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"class ToDosTest {"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"    public void getTaskName_equal() {"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"        String taskName \u003d \"Test\";"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"        ToDos todo \u003d new ToDos(taskName);"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(taskName, todo.getTaskName(), \"Task Name does not match\");"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    public void markComplete_success() {"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"        ToDos todo \u003d new ToDos(\"Test\");"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"        todo.markComplete();"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(true, todo.isComplete(), \"Task not completed\");"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"deadline return book /by 2020-03-11 08:02"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"event project meeting /at 2020-01-01 21:02 2020-01-01 21:02"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"done 4"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"todo borrow book"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"list"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"deadline return book /by 2020-01-11 01:02"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"event project meeting /at 2020-01-01 01:02 2020-01-01 20:02"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"todo"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"deadline"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"event"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"todos"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"deadlines"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"events"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"blah"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"deadline test"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"event test"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"done"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"dones"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"done yu"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"done -1"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"done 8"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"done 0"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"done"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"event"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"deadline"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"todo"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"delete"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"delete"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"deletes"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"delete yu"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"list"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"delete 3"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"list"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"delete 0"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"delete -1"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"delete 7"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"delete 1"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"list"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"delete 4"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"list"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"deadline return book /by 2020-01 01:02"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"event project meeting /at 2020-01 01:02 2020-01-01 20:02"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"find book"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"find helloworld"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"bye"}],"authorContributionMap":{"TeoHoeKeat":48}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"javac  -cp ..\\src\\main\\java\\fakebot\\command\\ -Xlint:none -d ..\\bin ..\\src\\main\\java\\fakebot\\command\\*.java"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"javac  -cp ..\\src\\main\\java\\fakebot\\task\\ -Xlint:none -d ..\\bin ..\\src\\main\\java\\fakebot\\task\\*.java"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"javac  -cp ..\\src\\main\\java\\fakebot -Xlint:none -d ..\\bin ..\\src\\main\\java\\fakebot\\*.java"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":16,"author":{"gitId":"-"},"content":")"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"REM run the program, feed comm"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"ands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"java -classpath ..\\bin FakeBot \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"TeoHoeKeat":6,"-":18}}]
