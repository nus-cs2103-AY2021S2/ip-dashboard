[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"# FakeBot project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"1. After the importing is complete, locate the `src/main/java/Launcher.java` file, right-click it, and choose `Run Launcher.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"     ______      _  ________ ____   ____ _______ "},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"   |  ____/\\   | |/ /  ____|  _ \\ / __ \\__   __|"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"   | |__ /  \\  | \u0027 /| |__  | |_) | |  | | | |   "},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"   |  __/ /\\ \\ |  \u003c |  __| |  _ \u003c| |  | | | |   "},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"   | | / ____ \\| . \\| |____| |_) | |__| | | |   "},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"   |_|/_/    \\_\\_|\\_\\______|____/ \\____/  |_|"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"TeoHoeKeat":8,"-":19}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"    mainClassName \u003d \"fakebot.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"    archiveBaseName \u003d \"fakebot\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":17,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"# FakeBot User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"## What is Fakebot?"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"Fakebot is a fake bot application where it faked a bot that helps the user to set"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"notes for the upcoming event, deadlines and to-do list."},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"It uses CLI interfaces to ensure faster and more efficient experience."},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"### View help"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"Shows a list of command explaining the command available in the application."},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"### Add a task"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"You can add a task to the list. There are 3 different categories of tasks: `todo`, `deadline` and `event`."},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"`todo` is a task that only contains description while `deadline` contains description and deadline date"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"and `event`  contain description, start date, start time, end date and end time."},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"### Mark a task as done"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"You can mark a task as done."},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"### List all tasks"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"You can `list` all your tasks."},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"### Find tasks"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"You can `find` your tasks using a keyword."},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"### Deleting a task"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"You can `delete` a task from the list."},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"### Exiting the program"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"You can easily exit the program by `bye` command."},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"### Saving the data"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"Task data are saved in the hard disk automatically after any command that changes the data."},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"There is no need to save manually."},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"### Detecting duplicate tasks"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"Duplicate tasks are automatically detected and ignored."},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"There is no need to worry about entering the same task."},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"### `help` - Help the user"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"Show a list of command available to User"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"Example of usage:"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"`help`"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"Expected outcome:"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"```"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"List of Command Available: "},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"Deadline Command: deadline [Description] /by [yyyy-mm-dd] [hh:mm]]"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"Delete   Command: delete [index]"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"Done     Command: done [index]"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"Event    Command: event [Description] /at [yyyy-mm-dd] [hh:mm] [yyyy-mm-dd] [hh:mm]"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"Find     Command: find [Description]"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"List     Command: list"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"Todo     Command: todo [Description"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"Exit     Command: bye"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"```"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"### `todo` - Add a todo task"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"Adds a todo task to the task list."},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"Format : `todo [Description]`"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"Example of usage:"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"`todo Buy egg from supermarket`"},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"Expected outcome:"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"```"},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"Got it. I\u0027ve added this task:   "},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"  [T][ ] Buy egg from supermarket"},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":"Now you have 1 tasks in the list."},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"```"},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"### `deadline` - Add a deadline task"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"Adds a deadline task to the task list."},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"Format : `deadline [Description] /by [yyyy-mm-dd] [hh:mm]`"},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":"Example of usage:"},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":"`deadline CS2103 Week 6 Submission /by 2021-02-16 23:59`"},{"lineNumber":97,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":98,"author":{"gitId":"TeoHoeKeat"},"content":"Expected outcome:"},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"```"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":"Got it. I\u0027ve added this task:   "},{"lineNumber":102,"author":{"gitId":"TeoHoeKeat"},"content":"  [D][ ] CS2103 Week 6 Submission (by: Feb 16 2021 23:59)"},{"lineNumber":103,"author":{"gitId":"TeoHoeKeat"},"content":"Now you have 2 tasks in the list."},{"lineNumber":104,"author":{"gitId":"TeoHoeKeat"},"content":"```"},{"lineNumber":105,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":106,"author":{"gitId":"TeoHoeKeat"},"content":"### `event` - Add a event task"},{"lineNumber":107,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":108,"author":{"gitId":"TeoHoeKeat"},"content":"Adds an event task to the task list."},{"lineNumber":109,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":110,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":111,"author":{"gitId":"TeoHoeKeat"},"content":"Format : `event [Description] /at [yyyy-mm-dd] [hh:mm] [yyyy-mm-dd] [hh:mm]`"},{"lineNumber":112,"author":{"gitId":"-"},"content":""},{"lineNumber":113,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":114,"author":{"gitId":"-"},"content":""},{"lineNumber":115,"author":{"gitId":"TeoHoeKeat"},"content":"`event CS2103T Team Meeting /at 2021-02-13 18:00 2021-02-13 20:00`"},{"lineNumber":116,"author":{"gitId":"-"},"content":""},{"lineNumber":117,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"TeoHoeKeat"},"content":"```"},{"lineNumber":120,"author":{"gitId":"TeoHoeKeat"},"content":"Got it. I\u0027ve added this task:   "},{"lineNumber":121,"author":{"gitId":"TeoHoeKeat"},"content":"  [E][ ] CS2103T Team Meeting (from: Feb 13 2021 18:00 to Feb 13 2021 20:00)"},{"lineNumber":122,"author":{"gitId":"TeoHoeKeat"},"content":"Now you have 3 tasks in the list."},{"lineNumber":123,"author":{"gitId":"TeoHoeKeat"},"content":"```"},{"lineNumber":124,"author":{"gitId":"TeoHoeKeat"},"content":"### `list` - List all tasks"},{"lineNumber":125,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":126,"author":{"gitId":"TeoHoeKeat"},"content":"Show a list of all tasks in the task list."},{"lineNumber":127,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":128,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":129,"author":{"gitId":"TeoHoeKeat"},"content":"Format : `list`"},{"lineNumber":130,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":131,"author":{"gitId":"TeoHoeKeat"},"content":"Example of usage:"},{"lineNumber":132,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":133,"author":{"gitId":"TeoHoeKeat"},"content":"`list`"},{"lineNumber":134,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":135,"author":{"gitId":"TeoHoeKeat"},"content":"Expected outcome:"},{"lineNumber":136,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":137,"author":{"gitId":"TeoHoeKeat"},"content":"```"},{"lineNumber":138,"author":{"gitId":"TeoHoeKeat"},"content":"Here are the tasks in your list:"},{"lineNumber":139,"author":{"gitId":"TeoHoeKeat"},"content":"1.[T][ ] Buy egg from supermarket"},{"lineNumber":140,"author":{"gitId":"TeoHoeKeat"},"content":"2.[D][ ] CS2103 Week 6 Submission (by: Feb 16 2021 23:59)"},{"lineNumber":141,"author":{"gitId":"TeoHoeKeat"},"content":"3.[E][ ] 2103T Team Meeting (from: Feb 13 2021 18:00 to Feb 13 2021 20:00)"},{"lineNumber":142,"author":{"gitId":"TeoHoeKeat"},"content":"```"},{"lineNumber":143,"author":{"gitId":"TeoHoeKeat"},"content":"### `find` - Describe action"},{"lineNumber":144,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":145,"author":{"gitId":"TeoHoeKeat"},"content":"Finds tasks whose description contain the given keyword."},{"lineNumber":146,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":147,"author":{"gitId":"TeoHoeKeat"},"content":"Format : `find [Keyword]`"},{"lineNumber":148,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":149,"author":{"gitId":"TeoHoeKeat"},"content":"Example of usage:"},{"lineNumber":150,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":151,"author":{"gitId":"TeoHoeKeat"},"content":"`find egg`"},{"lineNumber":152,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":153,"author":{"gitId":"TeoHoeKeat"},"content":"Expected outcome:"},{"lineNumber":154,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":155,"author":{"gitId":"TeoHoeKeat"},"content":"```"},{"lineNumber":156,"author":{"gitId":"TeoHoeKeat"},"content":"Here are the tasks in your list:"},{"lineNumber":157,"author":{"gitId":"TeoHoeKeat"},"content":"1.[T][ ] Buy egg from supermarket"},{"lineNumber":158,"author":{"gitId":"TeoHoeKeat"},"content":"```"},{"lineNumber":159,"author":{"gitId":"TeoHoeKeat"},"content":"### `done` - Mark task as done"},{"lineNumber":160,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":161,"author":{"gitId":"TeoHoeKeat"},"content":"Mark a task as done."},{"lineNumber":162,"author":{"gitId":"-"},"content":""},{"lineNumber":163,"author":{"gitId":"-"},"content":""},{"lineNumber":164,"author":{"gitId":"TeoHoeKeat"},"content":"Format : `done [Index]`"},{"lineNumber":165,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":166,"author":{"gitId":"TeoHoeKeat"},"content":"Example of usage:"},{"lineNumber":167,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":168,"author":{"gitId":"TeoHoeKeat"},"content":"`done 3`"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"TeoHoeKeat"},"content":"```"},{"lineNumber":173,"author":{"gitId":"TeoHoeKeat"},"content":"Nice! I\u0027ve marked this task as done: "},{"lineNumber":174,"author":{"gitId":"TeoHoeKeat"},"content":"  [E][X] CS2103T Team Meeting (from: Feb 13 2021 18:00 to Feb 13 2021 20:00)"},{"lineNumber":175,"author":{"gitId":"TeoHoeKeat"},"content":"```"},{"lineNumber":176,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":177,"author":{"gitId":"TeoHoeKeat"},"content":"### `delete` - Delete a task"},{"lineNumber":178,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":179,"author":{"gitId":"TeoHoeKeat"},"content":"Delete a task from the task list."},{"lineNumber":180,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":181,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":182,"author":{"gitId":"TeoHoeKeat"},"content":"Format : `delete [Index]`"},{"lineNumber":183,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":184,"author":{"gitId":"TeoHoeKeat"},"content":"Example of usage:"},{"lineNumber":185,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":186,"author":{"gitId":"TeoHoeKeat"},"content":"`delete 3`"},{"lineNumber":187,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":188,"author":{"gitId":"TeoHoeKeat"},"content":"Expected outcome:"},{"lineNumber":189,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":190,"author":{"gitId":"TeoHoeKeat"},"content":"```"},{"lineNumber":191,"author":{"gitId":"TeoHoeKeat"},"content":"Noted. I\u0027ve removed this task: "},{"lineNumber":192,"author":{"gitId":"TeoHoeKeat"},"content":"  [E][X] CS2103T Team Meeting (from: Feb 13 2021 18:00 to Feb 13 2021 20:00)"},{"lineNumber":193,"author":{"gitId":"TeoHoeKeat"},"content":"Now you have 2 tasks in the list."},{"lineNumber":194,"author":{"gitId":"TeoHoeKeat"},"content":"```"},{"lineNumber":195,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":196,"author":{"gitId":"TeoHoeKeat"},"content":"### `bye` - Exit the program"},{"lineNumber":197,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":198,"author":{"gitId":"TeoHoeKeat"},"content":"Exits the program."},{"lineNumber":199,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":200,"author":{"gitId":"TeoHoeKeat"},"content":"Format : `bye`"},{"lineNumber":201,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":202,"author":{"gitId":"TeoHoeKeat"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":203,"author":{"gitId":"TeoHoeKeat"},"content":"## Command summary"},{"lineNumber":204,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":205,"author":{"gitId":"TeoHoeKeat"},"content":"Command | Format, Examples"},{"lineNumber":206,"author":{"gitId":"TeoHoeKeat"},"content":"--------|------------------"},{"lineNumber":207,"author":{"gitId":"TeoHoeKeat"},"content":"**todo** | `todo [Description]`\u003cbr\u003e e.g., `todo Buy egg from supermarket`"},{"lineNumber":208,"author":{"gitId":"TeoHoeKeat"},"content":"**deadline** | `deadline [Description] /by [yyyy-mm-dd] [hh:mm]`\u003cbr\u003e e.g., `deadline CS2103 Week 6 Submission /by 2021-02-16 23:59`"},{"lineNumber":209,"author":{"gitId":"TeoHoeKeat"},"content":"**event** | `event [Description] /at [yyyy-mm-dd] [hh:mm] [yyyy-mm-dd] [hh:mm]`\u003cbr\u003e e.g., `event CS2103T Team Meeting /at 2021-02-13 18:00 2021-02-13 20:00`"},{"lineNumber":210,"author":{"gitId":"TeoHoeKeat"},"content":"**done** | `done [Index]`\u003cbr\u003e e.g., `done 3`"},{"lineNumber":211,"author":{"gitId":"TeoHoeKeat"},"content":"**delete** | `delete [Index]`\u003cbr\u003e e.g., `delete 3`"},{"lineNumber":212,"author":{"gitId":"TeoHoeKeat"},"content":"**find** | `find [Keyword]`\u003cbr\u003e e.g., `find egg`"},{"lineNumber":213,"author":{"gitId":"TeoHoeKeat"},"content":"**list** | `list`"},{"lineNumber":214,"author":{"gitId":"TeoHoeKeat"},"content":"**help** | `help`"},{"lineNumber":215,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":216,"author":{"gitId":"TeoHoeKeat"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":217,"author":{"gitId":"TeoHoeKeat"},"content":"## Acknowledgment"},{"lineNumber":218,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":219,"author":{"gitId":"TeoHoeKeat"},"content":"Bot Image found at : https://icon-library.com/icon/robotics-icon-2.html"},{"lineNumber":220,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":221,"author":{"gitId":"TeoHoeKeat"},"content":"User image found at : https://www.shareicon.net/man-user-profile-avatar-social-829459"}],"authorContributionMap":{"TeoHoeKeat":202,"-":19}},{"path":"src/main/java/fakebot/FakeBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.command.Command;"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.command.CommandException;"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.Deadline;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.Event;"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.Task;"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.TaskList;"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.Todo;"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":" * Fakebot class, main class for Fakebot."},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"public class FakeBot {"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String LOGO \u003d \" ______      _  ________   ____   ____ _______ \\n\""},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"|  ____/ \\\\  | |/ /  ____| |  _ \\\\ / __ \\\\__   __|\\n\""},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"| |__ /  \\\\  | \u0027 /| |__    | |_) | |  | | | |   \\n\""},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"|  __/ /\\\\ \\\\ |  \u003c |  __|   |  _ \u003c| |  | | | |\\n\""},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"| | / ____ \\\\| . \\\\| |____  | |_) | |__| | | |\\n\""},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"|_|/_/    \\\\_\\\\_|\\\\_\\\\______| |____/ \\\\____/  |_|\\n\\n\";"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String SAVE_FILE_PATH \u003d \"/data/\";"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String SAVE_FILE_NAME \u003d \"savedHistory.txt\";"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"    private TaskList taskList;"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    private Storage storage;"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"     * Class constructor specifying save file name and save file path."},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"    public FakeBot() {"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"        this(SAVE_FILE_PATH, SAVE_FILE_NAME);"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"     * Class constructor specifying save file name and save file path."},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"    public FakeBot(String saveFileName, String saveFilePath) {"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"        storage \u003d new Storage(SAVE_FILE_NAME, SAVE_FILE_PATH);"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList \u003d new TaskList(storage.tryReadTaskFile());"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"     * Saves history to storage."},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"    public void saveHistory() {"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"        storage.writeTasksToFile(taskList);"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns hello message used at the start of the project."},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return hello message."},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getHelloMessage() {"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"        return Parser.getBotMPrintMessage(\"Hello from\\n\" + LOGO + \"What can I do for you?\");"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns message to show that the task is done."},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param task to print."},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a string containing resulted from done."},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getDoneMessage(Task task) {"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"        return Parser.getBotMPrintMessage(\"Nice! I\u0027ve marked this task as done:\\n \" + task.toString());"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns message to show that the task is deleted and print the remaining number of task left."},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param task deleted Task."},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a string containing resulted from deleting."},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getDeleteMessage(Task task) {"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"        return Parser.getBotMPrintMessage(\"Noted. I\u0027ve removed this task:\\n \" + task.toString()"},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"                + \"\\nNow you have \" + taskList.getSize() + \" tasks in the list.\");"},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns message to show that the task is deleted and print the remaining number of task left."},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param task added Task."},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a string containing resulted from adding."},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getAddedTaskMessage(Task task) {"},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":"        return Parser.getBotMPrintMessage(\"Got it. I\u0027ve added this task: \\n  \" + task.toString()"},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":"                + \"\\nNow you have \" + taskList.getSize() + \" tasks in the list.\");"},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":97,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"TeoHoeKeat"},"content":"     * Process command given by user."},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns process command result message"},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param command to be processed."},{"lineNumber":102,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a string containing resulted from the process."},{"lineNumber":103,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"TeoHoeKeat"},"content":"    public String processCommand(Command command) throws CommandException {"},{"lineNumber":105,"author":{"gitId":"TeoHoeKeat"},"content":"        switch (command.getCommand()) {"},{"lineNumber":106,"author":{"gitId":"TeoHoeKeat"},"content":"        case BYE:"},{"lineNumber":107,"author":{"gitId":"TeoHoeKeat"},"content":"            return \"\";"},{"lineNumber":108,"author":{"gitId":"TeoHoeKeat"},"content":"        case LIST:"},{"lineNumber":109,"author":{"gitId":"TeoHoeKeat"},"content":"            return Parser.getTaskListPrintMessage(taskList);"},{"lineNumber":110,"author":{"gitId":"TeoHoeKeat"},"content":"        case DONE:"},{"lineNumber":111,"author":{"gitId":"TeoHoeKeat"},"content":"            return processDoneCommand(command);"},{"lineNumber":112,"author":{"gitId":"TeoHoeKeat"},"content":"        case TODO:"},{"lineNumber":113,"author":{"gitId":"TeoHoeKeat"},"content":"            return processTodoCommand(command);"},{"lineNumber":114,"author":{"gitId":"TeoHoeKeat"},"content":"        case DEADLINE:"},{"lineNumber":115,"author":{"gitId":"TeoHoeKeat"},"content":"            return processDeadlineCommand(command);"},{"lineNumber":116,"author":{"gitId":"TeoHoeKeat"},"content":"        case EVENT:"},{"lineNumber":117,"author":{"gitId":"TeoHoeKeat"},"content":"            return processEventCommand(command);"},{"lineNumber":118,"author":{"gitId":"TeoHoeKeat"},"content":"        case DELETE:"},{"lineNumber":119,"author":{"gitId":"TeoHoeKeat"},"content":"            return processDeleteCommand(command);"},{"lineNumber":120,"author":{"gitId":"TeoHoeKeat"},"content":"        case FIND:"},{"lineNumber":121,"author":{"gitId":"TeoHoeKeat"},"content":"            return Parser.getTaskListPrintMessage(new TaskList(taskList.findTasks(command.getDescription())));"},{"lineNumber":122,"author":{"gitId":"TeoHoeKeat"},"content":"        case HELP:"},{"lineNumber":123,"author":{"gitId":"TeoHoeKeat"},"content":"            return command.getDescription();"},{"lineNumber":124,"author":{"gitId":"TeoHoeKeat"},"content":"        default:"},{"lineNumber":125,"author":{"gitId":"TeoHoeKeat"},"content":"            assert false : \"All command type should be handle in switch\";"},{"lineNumber":126,"author":{"gitId":"TeoHoeKeat"},"content":"            break;"},{"lineNumber":127,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":129,"author":{"gitId":"TeoHoeKeat"},"content":"        return \"\";"},{"lineNumber":130,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":132,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"TeoHoeKeat"},"content":"     * Process done command."},{"lineNumber":134,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":135,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param command to be process."},{"lineNumber":136,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a string containing resulted from the process."},{"lineNumber":137,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":138,"author":{"gitId":"TeoHoeKeat"},"content":"    private String processDoneCommand(Command command) throws CommandException {"},{"lineNumber":139,"author":{"gitId":"TeoHoeKeat"},"content":"        int doneIndex \u003d Integer.parseInt(command.getDescription()) - 1;"},{"lineNumber":140,"author":{"gitId":"TeoHoeKeat"},"content":"        boolean isIndexOutOfRange \u003d doneIndex \u003e\u003d taskList.getSize() || doneIndex \u003c 0;"},{"lineNumber":141,"author":{"gitId":"TeoHoeKeat"},"content":"        if (isIndexOutOfRange) {"},{"lineNumber":142,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(\"OOPS!!! Task number out of range.\");"},{"lineNumber":143,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":144,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.getTask(doneIndex).markComplete();"},{"lineNumber":145,"author":{"gitId":"TeoHoeKeat"},"content":"        saveHistory();"},{"lineNumber":146,"author":{"gitId":"TeoHoeKeat"},"content":"        return getDoneMessage(taskList.getTask(doneIndex));"},{"lineNumber":147,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":149,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":150,"author":{"gitId":"TeoHoeKeat"},"content":"     * Process todo command."},{"lineNumber":151,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":152,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param command to be process."},{"lineNumber":153,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a string containing resulted from the process."},{"lineNumber":154,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":155,"author":{"gitId":"TeoHoeKeat"},"content":"    private String processTodoCommand(Command command) throws CommandException {"},{"lineNumber":156,"author":{"gitId":"TeoHoeKeat"},"content":"        Todo todoTask \u003d new Todo(command.getDescription());"},{"lineNumber":157,"author":{"gitId":"TeoHoeKeat"},"content":"        return addTask(todoTask);"},{"lineNumber":158,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":160,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":161,"author":{"gitId":"TeoHoeKeat"},"content":"     * Process deadline command."},{"lineNumber":162,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":163,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param command to be process."},{"lineNumber":164,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a string containing resulted from the process."},{"lineNumber":165,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":166,"author":{"gitId":"TeoHoeKeat"},"content":"    private String processDeadlineCommand(Command command) throws CommandException {"},{"lineNumber":167,"author":{"gitId":"TeoHoeKeat"},"content":"        String[] deadlineDetails \u003d command.getDescriptions();"},{"lineNumber":168,"author":{"gitId":"TeoHoeKeat"},"content":"        String[] dates \u003d deadlineDetails[1].split(\" \");"},{"lineNumber":169,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate date \u003d LocalDate.parse(dates[0]);"},{"lineNumber":170,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime time \u003d LocalTime.parse(dates[1]);"},{"lineNumber":171,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadline deadlineTask \u003d new Deadline(deadlineDetails[0], date, time);"},{"lineNumber":172,"author":{"gitId":"TeoHoeKeat"},"content":"        return addTask(deadlineTask);"},{"lineNumber":173,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":175,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":176,"author":{"gitId":"TeoHoeKeat"},"content":"     * Process event command."},{"lineNumber":177,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":178,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param command to be process."},{"lineNumber":179,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a string containing resulted from the process."},{"lineNumber":180,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":181,"author":{"gitId":"TeoHoeKeat"},"content":"    private String processEventCommand(Command command) throws CommandException {"},{"lineNumber":182,"author":{"gitId":"TeoHoeKeat"},"content":"        String[] eventDetails \u003d command.getDescriptions();"},{"lineNumber":183,"author":{"gitId":"TeoHoeKeat"},"content":"        String[] eventDates \u003d eventDetails[1].split(\" \");"},{"lineNumber":184,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(eventDates[0]);"},{"lineNumber":185,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(eventDates[1]);"},{"lineNumber":186,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(eventDates[2]);"},{"lineNumber":187,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(eventDates[3]);"},{"lineNumber":188,"author":{"gitId":"TeoHoeKeat"},"content":"        Event eventTask \u003d new Event(eventDetails[0], startDate, startTime, endDate, endTime);"},{"lineNumber":189,"author":{"gitId":"TeoHoeKeat"},"content":"        return addTask(eventTask);"},{"lineNumber":190,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":191,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":192,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":193,"author":{"gitId":"TeoHoeKeat"},"content":"     * Adds task to task list"},{"lineNumber":194,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":195,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param task to be added to list"},{"lineNumber":196,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a string containing result of adding task"},{"lineNumber":197,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":198,"author":{"gitId":"TeoHoeKeat"},"content":"    private String addTask(Task task) throws CommandException {"},{"lineNumber":199,"author":{"gitId":"TeoHoeKeat"},"content":"        if (taskList.containTask(task)) {"},{"lineNumber":200,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(\"Duplicate task detected! Task not added.\");"},{"lineNumber":201,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":202,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(task);"},{"lineNumber":203,"author":{"gitId":"TeoHoeKeat"},"content":"        saveHistory();"},{"lineNumber":204,"author":{"gitId":"TeoHoeKeat"},"content":"        return getAddedTaskMessage(task);"},{"lineNumber":205,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":206,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":207,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":208,"author":{"gitId":"TeoHoeKeat"},"content":"     * Process delete command."},{"lineNumber":209,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":210,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param command to be process."},{"lineNumber":211,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a string containing resulted from the process."},{"lineNumber":212,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":213,"author":{"gitId":"TeoHoeKeat"},"content":"    private String processDeleteCommand(Command command) throws CommandException {"},{"lineNumber":214,"author":{"gitId":"TeoHoeKeat"},"content":"        int deleteIndex \u003d Integer.parseInt(command.getDescription()) - 1;"},{"lineNumber":215,"author":{"gitId":"TeoHoeKeat"},"content":"        boolean isIndexOutOfRange \u003d deleteIndex \u003e\u003d taskList.getSize() || deleteIndex \u003c 0;"},{"lineNumber":216,"author":{"gitId":"TeoHoeKeat"},"content":"        if (isIndexOutOfRange) {"},{"lineNumber":217,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(\"OOPS!!! Task number out of range.\");"},{"lineNumber":218,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":219,"author":{"gitId":"TeoHoeKeat"},"content":"        Task deletedTask \u003d taskList.getTask(deleteIndex);"},{"lineNumber":220,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.removeTask(deleteIndex);"},{"lineNumber":221,"author":{"gitId":"TeoHoeKeat"},"content":"        saveHistory();"},{"lineNumber":222,"author":{"gitId":"TeoHoeKeat"},"content":"        return getDeleteMessage(deletedTask);"},{"lineNumber":223,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":225,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":226,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":225,"-":1}},{"path":"src/main/java/fakebot/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"public class Launcher {"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"    public static void main(String[] args) {"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":13}},{"path":"src/main/java/fakebot/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"//Solution below adapted from https://se-education.org/guides/tutorials/javaFx.html"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":" * A GUI for Duke using FXML."},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"public class Main extends Application {"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String APP_NAME \u003d \"FakeBot\";"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    private FakeBot bot \u003d new FakeBot();"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    public void start(Stage stage) {"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"        try {"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"            stage.setScene(scene);"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"            stage.setResizable(false);"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"            stage.getIcons().add(new Image(this.getClass().getResourceAsStream(\"/images/fakebot.png\")));"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"            stage.setTitle(APP_NAME);"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setFakeBot(bot);"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"            stage.show();"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"            e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":40}},{"path":"src/main/java/fakebot/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.command.Command;"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.command.CommandException;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.command.CommandType;"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.ui.DialogBox;"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.control.Button;"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.image.Image;"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.stage.Stage;"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"//Solution below adapted from https://se-education.org/guides/tutorials/javaFx.html"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":" * Ui Class use for reading and printing data."},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    private VBox dialogContainer;"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    private TextField userInput;"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"    private Button sendButton;"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"    //Image from : https://www.shareicon.net/man-user-profile-avatar-social-829459"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"    //Image from : https://icon-library.com/icon/robotics-icon-2.html"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    private Image fakeBotImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/fakebot.png\"));"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    private Image sendImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/send.png\"));"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"    private FakeBot fakeBot;"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"     * Initialize MainWindow FXML"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"    public void initialize() {"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"        scrollPane.setPannable(true);"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"        //Setup send button"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"        ImageView imageView \u003d new ImageView(sendImage);"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"        imageView.setFitHeight(35);"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"        imageView.setFitWidth(60);"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"        sendButton.setGraphic(imageView);"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"     * Set Fakebot for the application"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param fakeBot an Fakebot"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"    public void setFakeBot(FakeBot fakeBot) {"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"        this.fakeBot \u003d fakeBot;"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"        addTextToContainer(fakeBot.getHelloMessage());"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"    private void handleSendButton() {"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"        handleUserInput(userInput.getText());"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"        userInput.clear();"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"     * Handle user input."},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param userInput the yser input string."},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":"    private void handleUserInput(String userInput) {"},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"        Command command;"},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":"        try {"},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"            command \u003d Parser.parseUserInputToCommand(userInput);"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"            //Exit when bye command detected"},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"            if (command.getCommand() \u003d\u003d CommandType.BYE) {"},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"                Stage stage \u003d (Stage) sendButton.getScene().getWindow();"},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":"                stage.close();"},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":"            String outputText \u003d fakeBot.processCommand(command);"},{"lineNumber":97,"author":{"gitId":"TeoHoeKeat"},"content":"            addTextToContainer(userInput, outputText);"},{"lineNumber":98,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":"        } catch (CommandException e) {"},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"            addAlertTextToContainer(userInput, e.getMessage());"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":104,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"TeoHoeKeat"},"content":"     * Add alert text to container."},{"lineNumber":106,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":107,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param inputText to be add to container."},{"lineNumber":108,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"TeoHoeKeat"},"content":"    private void addTextToContainer(String inputText) {"},{"lineNumber":110,"author":{"gitId":"TeoHoeKeat"},"content":"        dialogContainer.getChildren().add("},{"lineNumber":111,"author":{"gitId":"TeoHoeKeat"},"content":"                DialogBox.getFakebotDialog(inputText, fakeBotImage)"},{"lineNumber":112,"author":{"gitId":"TeoHoeKeat"},"content":"        );"},{"lineNumber":113,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":115,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":116,"author":{"gitId":"TeoHoeKeat"},"content":"     * Add text to container."},{"lineNumber":117,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":118,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param inputText  to be add to container."},{"lineNumber":119,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param outputText to be add to container."},{"lineNumber":120,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"TeoHoeKeat"},"content":"    private void addTextToContainer(String inputText, String outputText) {"},{"lineNumber":122,"author":{"gitId":"TeoHoeKeat"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":123,"author":{"gitId":"TeoHoeKeat"},"content":"                DialogBox.getUserDialog(inputText, userImage),"},{"lineNumber":124,"author":{"gitId":"TeoHoeKeat"},"content":"                DialogBox.getFakebotDialog(outputText, fakeBotImage)"},{"lineNumber":125,"author":{"gitId":"TeoHoeKeat"},"content":"        );"},{"lineNumber":126,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":128,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"TeoHoeKeat"},"content":"     * Add alert text to container."},{"lineNumber":130,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":131,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param inputText  to be add to container."},{"lineNumber":132,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param outputText to be add to container."},{"lineNumber":133,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":134,"author":{"gitId":"TeoHoeKeat"},"content":"    private void addAlertTextToContainer(String inputText, String outputText) {"},{"lineNumber":135,"author":{"gitId":"TeoHoeKeat"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":136,"author":{"gitId":"TeoHoeKeat"},"content":"                DialogBox.getUserDialog(inputText, userImage),"},{"lineNumber":137,"author":{"gitId":"TeoHoeKeat"},"content":"                DialogBox.getAlertDialog(outputText, fakeBotImage)"},{"lineNumber":138,"author":{"gitId":"TeoHoeKeat"},"content":"        );"},{"lineNumber":139,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":140}},{"path":"src/main/java/fakebot/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.command.Command;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.command.CommandException;"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.command.CommandType;"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.Deadline;"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.Event;"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.Task;"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.TaskList;"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.Todo;"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":" * Parser class use for processing syntax."},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"public class Parser {"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String DIVIDER \u003d \"\";"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String SPLIT_REGEX \u003d \"-\u0027@,-@,1\u0027-\";"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String EXIT_COMMAND \u003d \"bye\";"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String LIST_COMMAND \u003d \"list\";"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String DONE_COMMAND \u003d \"done\";"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String TODO_COMMAND \u003d \"todo\";"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String DEADLINE_COMMAND \u003d \"deadline\";"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String DEADLINE_SPLIT_REGEX \u003d \" /by \";"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String EVENT_COMMAND \u003d \"event\";"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String EVENT_SPLIT_REGEX \u003d \" /at \";"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String DELETE_COMMAND \u003d \"delete\";"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String FIND_COMMAND \u003d \"find\";"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String HELP_COMMAND \u003d \"help\";"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    private static final String HELP_STRING \u003d \"List of Command Available:\\n\""},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"Deadline Command: \" + DEADLINE_COMMAND + \" [Description]\" + DEADLINE_SPLIT_REGEX + \"\\n\""},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"                   [yyyy-mm-dd] [hh:mm]\\n\""},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"Delete   Command: \" + DELETE_COMMAND + \" [index]\\n\""},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"Done     Command: \" + DONE_COMMAND + \" [index]\\n\""},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"Event    Command: \" + EVENT_COMMAND + \" [Description]\" + EVENT_SPLIT_REGEX + \"[yyyy-mm-dd]\\n\""},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"                   [hh:mm]] [yyyy-mm-dd] [hh:mm]\\n\""},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"Find     Command: \" + FIND_COMMAND + \" [Description]\\n\""},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"List     Command: \" + LIST_COMMAND + \"\\n\""},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"Todo     Command: \" + TODO_COMMAND + \" [Description]\\n\""},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"            + \"Exit     Command: \" + EXIT_COMMAND + \"\\n\";"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"     * Enum for different task type."},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"    private enum TaskType {"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"        TODO, EVENT, DEADLINE"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"     * Converts task to string."},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param stringList the list of string to be converted to string."},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a string containing string converted from string list."},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"    public static String convertStringListToString(List\u003cString\u003e stringList) {"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"        StringBuilder builder \u003d new StringBuilder();"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"        for (String s : stringList) {"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"            builder.append(s);"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"            builder.append(System.lineSeparator());"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"        return builder.toString();"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"     * Converts task to string."},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param task to be parsed to string."},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a string containing parsed task."},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"    public static String convertTaskToString(Task task) {"},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":"        if (task instanceof Todo) {"},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"            Todo todo \u003d (Todo) task;"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"            return convertTodoToString(todo);"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"        } else if (task instanceof Event) {"},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"            Event event \u003d (Event) task;"},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"            return convertEventToString(event);"},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":"        } else if (task instanceof Deadline) {"},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"            Deadline deadline \u003d (Deadline) task;"},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":"            return convertDeadlineToString(deadline);"},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"        } else {"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":"            assert false : \"Task being handle should be handle\";"},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"            return null;"},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":"     * Converts Todo to string."},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param todo to be parsed to string."},{"lineNumber":98,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a string containing parsed todo."},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"    private static String convertTodoToString(Todo todo) {"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();"},{"lineNumber":102,"author":{"gitId":"TeoHoeKeat"},"content":"        stringBuilder.append(TaskType.TODO.name());"},{"lineNumber":103,"author":{"gitId":"TeoHoeKeat"},"content":"        stringBuilder.append(SPLIT_REGEX);"},{"lineNumber":104,"author":{"gitId":"TeoHoeKeat"},"content":"        stringBuilder.append(todo.isComplete());"},{"lineNumber":105,"author":{"gitId":"TeoHoeKeat"},"content":"        stringBuilder.append(SPLIT_REGEX);"},{"lineNumber":106,"author":{"gitId":"TeoHoeKeat"},"content":"        stringBuilder.append(todo.getTaskName());"},{"lineNumber":107,"author":{"gitId":"TeoHoeKeat"},"content":"        return stringBuilder.toString();"},{"lineNumber":108,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":110,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"TeoHoeKeat"},"content":"     * Converts Event to string."},{"lineNumber":112,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":113,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param event to be parsed to string."},{"lineNumber":114,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a string containing parsed event."},{"lineNumber":115,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"TeoHoeKeat"},"content":"    private static String convertEventToString(Event event) {"},{"lineNumber":117,"author":{"gitId":"TeoHoeKeat"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();"},{"lineNumber":118,"author":{"gitId":"TeoHoeKeat"},"content":"        stringBuilder.append(TaskType.EVENT.name());"},{"lineNumber":119,"author":{"gitId":"TeoHoeKeat"},"content":"        stringBuilder.append(SPLIT_REGEX);"},{"lineNumber":120,"author":{"gitId":"TeoHoeKeat"},"content":"        stringBuilder.append(event.isComplete());"},{"lineNumber":121,"author":{"gitId":"TeoHoeKeat"},"content":"        stringBuilder.append(SPLIT_REGEX);"},{"lineNumber":122,"author":{"gitId":"TeoHoeKeat"},"content":"        stringBuilder.append(event.getTaskName());"},{"lineNumber":123,"author":{"gitId":"TeoHoeKeat"},"content":"        stringBuilder.append(SPLIT_REGEX);"},{"lineNumber":124,"author":{"gitId":"TeoHoeKeat"},"content":"        stringBuilder.append(event.getStartDate());"},{"lineNumber":125,"author":{"gitId":"TeoHoeKeat"},"content":"        stringBuilder.append(SPLIT_REGEX);"},{"lineNumber":126,"author":{"gitId":"TeoHoeKeat"},"content":"        stringBuilder.append(event.getStartTime());"},{"lineNumber":127,"author":{"gitId":"TeoHoeKeat"},"content":"        stringBuilder.append(SPLIT_REGEX);"},{"lineNumber":128,"author":{"gitId":"TeoHoeKeat"},"content":"        stringBuilder.append(event.getEndDate());"},{"lineNumber":129,"author":{"gitId":"TeoHoeKeat"},"content":"        stringBuilder.append(SPLIT_REGEX);"},{"lineNumber":130,"author":{"gitId":"TeoHoeKeat"},"content":"        stringBuilder.append(event.getEndTime());"},{"lineNumber":131,"author":{"gitId":"TeoHoeKeat"},"content":"        return stringBuilder.toString();"},{"lineNumber":132,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":134,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"TeoHoeKeat"},"content":"     * Converts Deadline to string."},{"lineNumber":136,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":137,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param deadline to be parsed to string."},{"lineNumber":138,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a string containing parsed Deadline."},{"lineNumber":139,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":140,"author":{"gitId":"TeoHoeKeat"},"content":"    private static String convertDeadlineToString(Deadline deadline) {"},{"lineNumber":141,"author":{"gitId":"TeoHoeKeat"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();"},{"lineNumber":142,"author":{"gitId":"TeoHoeKeat"},"content":"        stringBuilder.append(TaskType.DEADLINE.name());"},{"lineNumber":143,"author":{"gitId":"TeoHoeKeat"},"content":"        stringBuilder.append(SPLIT_REGEX);"},{"lineNumber":144,"author":{"gitId":"TeoHoeKeat"},"content":"        stringBuilder.append(deadline.isComplete());"},{"lineNumber":145,"author":{"gitId":"TeoHoeKeat"},"content":"        stringBuilder.append(SPLIT_REGEX);"},{"lineNumber":146,"author":{"gitId":"TeoHoeKeat"},"content":"        stringBuilder.append(deadline.getTaskName());"},{"lineNumber":147,"author":{"gitId":"TeoHoeKeat"},"content":"        stringBuilder.append(SPLIT_REGEX);"},{"lineNumber":148,"author":{"gitId":"TeoHoeKeat"},"content":"        stringBuilder.append(deadline.getDeadlineDate());"},{"lineNumber":149,"author":{"gitId":"TeoHoeKeat"},"content":"        stringBuilder.append(SPLIT_REGEX);"},{"lineNumber":150,"author":{"gitId":"TeoHoeKeat"},"content":"        stringBuilder.append(deadline.getDeadlineTime());"},{"lineNumber":151,"author":{"gitId":"TeoHoeKeat"},"content":"        return stringBuilder.toString();"},{"lineNumber":152,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":154,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":155,"author":{"gitId":"TeoHoeKeat"},"content":"     * Converts list of task to list of string."},{"lineNumber":156,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":157,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param taskList the string of list."},{"lineNumber":158,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a list of String parsed from list of task."},{"lineNumber":159,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":160,"author":{"gitId":"TeoHoeKeat"},"content":"    public static List\u003cString\u003e convertTasksToStrings(TaskList taskList) {"},{"lineNumber":161,"author":{"gitId":"TeoHoeKeat"},"content":"        List\u003cString\u003e strings \u003d new ArrayList\u003cString\u003e();"},{"lineNumber":162,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":163,"author":{"gitId":"TeoHoeKeat"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"},{"lineNumber":164,"author":{"gitId":"TeoHoeKeat"},"content":"            Task currentTask \u003d taskList.getTask(i);"},{"lineNumber":165,"author":{"gitId":"TeoHoeKeat"},"content":"            strings.add(convertTaskToString(currentTask));"},{"lineNumber":166,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"TeoHoeKeat"},"content":"        return strings;"},{"lineNumber":168,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":169,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":170,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":171,"author":{"gitId":"TeoHoeKeat"},"content":"     * Converts string to task."},{"lineNumber":172,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":173,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param string the parsed task."},{"lineNumber":174,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a task parsed from string."},{"lineNumber":175,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":176,"author":{"gitId":"TeoHoeKeat"},"content":"    public static Task convertStringToTask(String string) {"},{"lineNumber":177,"author":{"gitId":"TeoHoeKeat"},"content":"        String[] parts \u003d string.split(SPLIT_REGEX);"},{"lineNumber":178,"author":{"gitId":"TeoHoeKeat"},"content":"        Task currentTask \u003d null;"},{"lineNumber":179,"author":{"gitId":"TeoHoeKeat"},"content":"        switch (TaskType.valueOf(parts[0])) {"},{"lineNumber":180,"author":{"gitId":"TeoHoeKeat"},"content":"        case TODO:"},{"lineNumber":181,"author":{"gitId":"TeoHoeKeat"},"content":"            currentTask \u003d new Todo(parts[2]);"},{"lineNumber":182,"author":{"gitId":"TeoHoeKeat"},"content":"            break;"},{"lineNumber":183,"author":{"gitId":"TeoHoeKeat"},"content":"        case EVENT:"},{"lineNumber":184,"author":{"gitId":"TeoHoeKeat"},"content":"            currentTask \u003d new Event(parts[2], LocalDate.parse(parts[3]), LocalTime.parse(parts[4]),"},{"lineNumber":185,"author":{"gitId":"TeoHoeKeat"},"content":"                    LocalDate.parse(parts[5]), LocalTime.parse(parts[6]));"},{"lineNumber":186,"author":{"gitId":"TeoHoeKeat"},"content":"            break;"},{"lineNumber":187,"author":{"gitId":"TeoHoeKeat"},"content":"        case DEADLINE:"},{"lineNumber":188,"author":{"gitId":"TeoHoeKeat"},"content":"            currentTask \u003d new Deadline(parts[2], LocalDate.parse(parts[3]), LocalTime.parse(parts[4]));"},{"lineNumber":189,"author":{"gitId":"TeoHoeKeat"},"content":"            break;"},{"lineNumber":190,"author":{"gitId":"TeoHoeKeat"},"content":"        default:"},{"lineNumber":191,"author":{"gitId":"TeoHoeKeat"},"content":"            assert false : \"String being parsed should be a type of parsed Task\";"},{"lineNumber":192,"author":{"gitId":"TeoHoeKeat"},"content":"            break;"},{"lineNumber":193,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":194,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":195,"author":{"gitId":"TeoHoeKeat"},"content":"        if (Boolean.parseBoolean(parts[1])) {"},{"lineNumber":196,"author":{"gitId":"TeoHoeKeat"},"content":"            currentTask.markComplete();"},{"lineNumber":197,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":198,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":199,"author":{"gitId":"TeoHoeKeat"},"content":"        return currentTask;"},{"lineNumber":200,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":201,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":202,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":203,"author":{"gitId":"TeoHoeKeat"},"content":"     * Converts list of string to list of task."},{"lineNumber":204,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":205,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param stringList the string of list."},{"lineNumber":206,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a list of task parsed from list of string."},{"lineNumber":207,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":208,"author":{"gitId":"TeoHoeKeat"},"content":"    public static List\u003cTask\u003e convertStringsToTasks(List\u003cString\u003e stringList) {"},{"lineNumber":209,"author":{"gitId":"TeoHoeKeat"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":210,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":211,"author":{"gitId":"TeoHoeKeat"},"content":"        for (String line : stringList) {"},{"lineNumber":212,"author":{"gitId":"TeoHoeKeat"},"content":"            tasks.add(convertStringToTask(line));"},{"lineNumber":213,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":214,"author":{"gitId":"TeoHoeKeat"},"content":"        return tasks;"},{"lineNumber":215,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":217,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":218,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":219,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns standard print message."},{"lineNumber":220,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":221,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param message to print."},{"lineNumber":222,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a string containing print message."},{"lineNumber":223,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":224,"author":{"gitId":"TeoHoeKeat"},"content":"    public static String getBotMPrintMessage(String message) {"},{"lineNumber":225,"author":{"gitId":"TeoHoeKeat"},"content":"        String printMessage \u003d DIVIDER + message + \"\\n\" + DIVIDER;"},{"lineNumber":226,"author":{"gitId":"TeoHoeKeat"},"content":"        return printMessage;"},{"lineNumber":227,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":228,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":229,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":230,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns list of string print message."},{"lineNumber":231,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":232,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param startingMessage to print before the list."},{"lineNumber":233,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param messages        the list of string to print."},{"lineNumber":234,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a string containing print message."},{"lineNumber":235,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":236,"author":{"gitId":"TeoHoeKeat"},"content":"    public static String getStringListPrintMessage(String startingMessage, List\u003cString\u003e messages) {"},{"lineNumber":237,"author":{"gitId":"TeoHoeKeat"},"content":"        StringBuilder printMessage \u003d new StringBuilder(DIVIDER);"},{"lineNumber":238,"author":{"gitId":"TeoHoeKeat"},"content":"        printMessage.append(startingMessage);"},{"lineNumber":239,"author":{"gitId":"TeoHoeKeat"},"content":"        for (int i \u003d 1; i \u003c\u003d messages.size(); i++) {"},{"lineNumber":240,"author":{"gitId":"TeoHoeKeat"},"content":"            printMessage.append(i);"},{"lineNumber":241,"author":{"gitId":"TeoHoeKeat"},"content":"            printMessage.append(\".\");"},{"lineNumber":242,"author":{"gitId":"TeoHoeKeat"},"content":"            printMessage.append(messages.get(i - 1));"},{"lineNumber":243,"author":{"gitId":"TeoHoeKeat"},"content":"            printMessage.append(\"\\n\");"},{"lineNumber":244,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":245,"author":{"gitId":"TeoHoeKeat"},"content":"        printMessage.append(DIVIDER);"},{"lineNumber":246,"author":{"gitId":"TeoHoeKeat"},"content":"        return printMessage.toString();"},{"lineNumber":247,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":248,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":249,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":250,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns list of task print message."},{"lineNumber":251,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":252,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param taskList the list of task to be convert."},{"lineNumber":253,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a string containing print message."},{"lineNumber":254,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":255,"author":{"gitId":"TeoHoeKeat"},"content":"    public static String getTaskListPrintMessage(TaskList taskList) {"},{"lineNumber":256,"author":{"gitId":"TeoHoeKeat"},"content":"        if (taskList.getSize() \u003d\u003d 0) {"},{"lineNumber":257,"author":{"gitId":"TeoHoeKeat"},"content":"            return getBotMPrintMessage(\"Task list is currently empty\");"},{"lineNumber":258,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":259,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":260,"author":{"gitId":"TeoHoeKeat"},"content":"        List\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();"},{"lineNumber":261,"author":{"gitId":"TeoHoeKeat"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"},{"lineNumber":262,"author":{"gitId":"TeoHoeKeat"},"content":"            messages.add(taskList.getTask(i).toString());"},{"lineNumber":263,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":264,"author":{"gitId":"TeoHoeKeat"},"content":"        return getStringListPrintMessage(\"Here are the tasks in your list:\\n\", messages);"},{"lineNumber":265,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":266,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":267,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":268,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":269,"author":{"gitId":"TeoHoeKeat"},"content":"     * Parses user input to command."},{"lineNumber":270,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":271,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param command the user input to be parsed."},{"lineNumber":272,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a command."},{"lineNumber":273,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":274,"author":{"gitId":"TeoHoeKeat"},"content":"    public static Command parseUserInputToCommand(String command) throws CommandException {"},{"lineNumber":275,"author":{"gitId":"TeoHoeKeat"},"content":"        if (isCommandWithoutDescription(command)) {"},{"lineNumber":276,"author":{"gitId":"TeoHoeKeat"},"content":"            return parseCommandWithoutDescription(command);"},{"lineNumber":277,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":278,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":279,"author":{"gitId":"TeoHoeKeat"},"content":"        int firstSplit \u003d command.indexOf(\u0027 \u0027);"},{"lineNumber":280,"author":{"gitId":"TeoHoeKeat"},"content":"        //Command with description should contain at least one space"},{"lineNumber":281,"author":{"gitId":"TeoHoeKeat"},"content":"        if (firstSplit \u003c 0) {"},{"lineNumber":282,"author":{"gitId":"TeoHoeKeat"},"content":"            if (isCommandWithDescription(command)) {"},{"lineNumber":283,"author":{"gitId":"TeoHoeKeat"},"content":"                throw new CommandException(\"OOPS!!! The description of a \" + command + \" cannot be empty.\");"},{"lineNumber":284,"author":{"gitId":"TeoHoeKeat"},"content":"            } else if (isCommandWithIndexDescription(command)) {"},{"lineNumber":285,"author":{"gitId":"TeoHoeKeat"},"content":"                throw new CommandException(\"OOPS!!! You must indicate the index of the Tasks to be \" + command + \".\");"},{"lineNumber":286,"author":{"gitId":"TeoHoeKeat"},"content":"            }"},{"lineNumber":287,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-( , \""},{"lineNumber":288,"author":{"gitId":"TeoHoeKeat"},"content":"                    + \"type \\\"help\\\" for help.\");"},{"lineNumber":289,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":290,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":291,"author":{"gitId":"TeoHoeKeat"},"content":"        String commandName \u003d command.substring(0, firstSplit);"},{"lineNumber":292,"author":{"gitId":"TeoHoeKeat"},"content":"        String description \u003d command.substring(firstSplit + 1);"},{"lineNumber":293,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":294,"author":{"gitId":"TeoHoeKeat"},"content":"        if (isCommandWithIndexDescription(commandName)) {"},{"lineNumber":295,"author":{"gitId":"TeoHoeKeat"},"content":"            return parseCommandWithIndexDescription(commandName, description);"},{"lineNumber":296,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":297,"author":{"gitId":"TeoHoeKeat"},"content":"        if (isCommandWithDescription(commandName)) {"},{"lineNumber":298,"author":{"gitId":"TeoHoeKeat"},"content":"            return parseCommandWithDescription(commandName, description);"},{"lineNumber":299,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":300,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":301,"author":{"gitId":"TeoHoeKeat"},"content":"        throw new CommandException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-( , type \\\"help\\\" for help.\");"},{"lineNumber":302,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":303,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":304,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":305,"author":{"gitId":"TeoHoeKeat"},"content":"     * Checks if the command need a description."},{"lineNumber":306,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":307,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param command the command to be checked."},{"lineNumber":308,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return true if the command do not need a description."},{"lineNumber":309,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":310,"author":{"gitId":"TeoHoeKeat"},"content":"    private static Boolean isCommandWithoutDescription(String command) {"},{"lineNumber":311,"author":{"gitId":"TeoHoeKeat"},"content":"        boolean isCommandWithoutDescription \u003d command.equals(EXIT_COMMAND) || command.equals(LIST_COMMAND)"},{"lineNumber":312,"author":{"gitId":"TeoHoeKeat"},"content":"                || command.equals(HELP_COMMAND);"},{"lineNumber":313,"author":{"gitId":"TeoHoeKeat"},"content":"        return isCommandWithoutDescription;"},{"lineNumber":314,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":315,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":316,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":317,"author":{"gitId":"TeoHoeKeat"},"content":"     * Parses the command that do not need description to Command class."},{"lineNumber":318,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":319,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param command the command that do not need description."},{"lineNumber":320,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a command without description."},{"lineNumber":321,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":322,"author":{"gitId":"TeoHoeKeat"},"content":"    private static Command parseCommandWithoutDescription(String command) {"},{"lineNumber":323,"author":{"gitId":"TeoHoeKeat"},"content":"        if (command.equals(EXIT_COMMAND)) {"},{"lineNumber":324,"author":{"gitId":"TeoHoeKeat"},"content":"            return new Command(CommandType.BYE);"},{"lineNumber":325,"author":{"gitId":"TeoHoeKeat"},"content":"        } else if (command.equals(LIST_COMMAND)) {"},{"lineNumber":326,"author":{"gitId":"TeoHoeKeat"},"content":"            return new Command(CommandType.LIST);"},{"lineNumber":327,"author":{"gitId":"TeoHoeKeat"},"content":"        } else if (command.equals(HELP_COMMAND)) {"},{"lineNumber":328,"author":{"gitId":"TeoHoeKeat"},"content":"            return new Command(CommandType.HELP, HELP_STRING);"},{"lineNumber":329,"author":{"gitId":"TeoHoeKeat"},"content":"        } else {"},{"lineNumber":330,"author":{"gitId":"TeoHoeKeat"},"content":"            assert false : \"Invalid calling of parse command without description\";"},{"lineNumber":331,"author":{"gitId":"TeoHoeKeat"},"content":"            return null;"},{"lineNumber":332,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":333,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":334,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":335,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":336,"author":{"gitId":"TeoHoeKeat"},"content":"     * Check if the command need a index description."},{"lineNumber":337,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":338,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param command the command to be checked."},{"lineNumber":339,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return true if the command do not need a description."},{"lineNumber":340,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":341,"author":{"gitId":"TeoHoeKeat"},"content":"    private static Boolean isCommandWithIndexDescription(String command) {"},{"lineNumber":342,"author":{"gitId":"TeoHoeKeat"},"content":"        boolean isCommandWithIndexDescription \u003d command.equals(DONE_COMMAND) || command.equals(DELETE_COMMAND);"},{"lineNumber":343,"author":{"gitId":"TeoHoeKeat"},"content":"        return isCommandWithIndexDescription;"},{"lineNumber":344,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":345,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":346,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":347,"author":{"gitId":"TeoHoeKeat"},"content":"     * Parses the command that need a index description to command class."},{"lineNumber":348,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":349,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param command     the command that need a index description."},{"lineNumber":350,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param indexString the string containing index."},{"lineNumber":351,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a command that need a index description."},{"lineNumber":352,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":353,"author":{"gitId":"TeoHoeKeat"},"content":"    private static Command parseCommandWithIndexDescription(String command, String indexString)"},{"lineNumber":354,"author":{"gitId":"TeoHoeKeat"},"content":"            throws CommandException {"},{"lineNumber":355,"author":{"gitId":"TeoHoeKeat"},"content":"        if (indexString.isEmpty()) {"},{"lineNumber":356,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(\"OOPS!!! You must indicate the index of the Tasks to be \" + command + \".\");"},{"lineNumber":357,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":358,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":359,"author":{"gitId":"TeoHoeKeat"},"content":"        try {"},{"lineNumber":360,"author":{"gitId":"TeoHoeKeat"},"content":"            int index \u003d Integer.parseInt(indexString);"},{"lineNumber":361,"author":{"gitId":"TeoHoeKeat"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":362,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(\"OOPS!!! Invalid Task Index Format.\");"},{"lineNumber":363,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":364,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":365,"author":{"gitId":"TeoHoeKeat"},"content":"        if (command.equals(DONE_COMMAND)) {"},{"lineNumber":366,"author":{"gitId":"TeoHoeKeat"},"content":"            return new Command(CommandType.DONE, indexString);"},{"lineNumber":367,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":368,"author":{"gitId":"TeoHoeKeat"},"content":"        } else if (command.equals(DELETE_COMMAND)) {"},{"lineNumber":369,"author":{"gitId":"TeoHoeKeat"},"content":"            return new Command(CommandType.DELETE, indexString);"},{"lineNumber":370,"author":{"gitId":"TeoHoeKeat"},"content":"        } else {"},{"lineNumber":371,"author":{"gitId":"TeoHoeKeat"},"content":"            assert false : \"Invalid calling of parse command with index description\";"},{"lineNumber":372,"author":{"gitId":"TeoHoeKeat"},"content":"            return null;"},{"lineNumber":373,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":374,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":375,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":376,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":377,"author":{"gitId":"TeoHoeKeat"},"content":"     * Check if the command need a description."},{"lineNumber":378,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":379,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param command the command to be checked."},{"lineNumber":380,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return true if the command do need a description."},{"lineNumber":381,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":382,"author":{"gitId":"TeoHoeKeat"},"content":"    private static Boolean isCommandWithDescription(String command) {"},{"lineNumber":383,"author":{"gitId":"TeoHoeKeat"},"content":"        boolean isCommandWithDescription \u003d command.equals(TODO_COMMAND) || command.equals(EVENT_COMMAND)"},{"lineNumber":384,"author":{"gitId":"TeoHoeKeat"},"content":"                || command.equals(DEADLINE_COMMAND) || command.equals(FIND_COMMAND);"},{"lineNumber":385,"author":{"gitId":"TeoHoeKeat"},"content":"        return isCommandWithDescription;"},{"lineNumber":386,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":387,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":388,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":389,"author":{"gitId":"TeoHoeKeat"},"content":"     * Parses the command that need a description to command class."},{"lineNumber":390,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":391,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param command     the name of the command."},{"lineNumber":392,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param description the description of the command."},{"lineNumber":393,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a command that need a description."},{"lineNumber":394,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":395,"author":{"gitId":"TeoHoeKeat"},"content":"    private static Command parseCommandWithDescription(String command, String description) throws CommandException {"},{"lineNumber":396,"author":{"gitId":"TeoHoeKeat"},"content":"        if (description.isEmpty()) {"},{"lineNumber":397,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(\"OOPS!!! The description of a \" + command + \" cannot be empty.\");"},{"lineNumber":398,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":399,"author":{"gitId":"TeoHoeKeat"},"content":"        if (command.equals(FIND_COMMAND)) {"},{"lineNumber":400,"author":{"gitId":"TeoHoeKeat"},"content":"            return parseFindCommand(description);"},{"lineNumber":401,"author":{"gitId":"TeoHoeKeat"},"content":"        } else if (command.equals(TODO_COMMAND)) {"},{"lineNumber":402,"author":{"gitId":"TeoHoeKeat"},"content":"            return parseTodoCommand(description);"},{"lineNumber":403,"author":{"gitId":"TeoHoeKeat"},"content":"        } else if (command.equals(DEADLINE_COMMAND)) {"},{"lineNumber":404,"author":{"gitId":"TeoHoeKeat"},"content":"            return parseDeadlineCommand(description);"},{"lineNumber":405,"author":{"gitId":"TeoHoeKeat"},"content":"        } else if (command.equals(EVENT_COMMAND)) {"},{"lineNumber":406,"author":{"gitId":"TeoHoeKeat"},"content":"            return parseEventCommand(description);"},{"lineNumber":407,"author":{"gitId":"TeoHoeKeat"},"content":"        } else {"},{"lineNumber":408,"author":{"gitId":"TeoHoeKeat"},"content":"            assert false : \"Invalid calling of parse command with description\";"},{"lineNumber":409,"author":{"gitId":"TeoHoeKeat"},"content":"            return null;"},{"lineNumber":410,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":411,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":412,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":413,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":414,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":415,"author":{"gitId":"TeoHoeKeat"},"content":"     * Parses todo command."},{"lineNumber":416,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":417,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param description the command description."},{"lineNumber":418,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a todo command."},{"lineNumber":419,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":420,"author":{"gitId":"TeoHoeKeat"},"content":"    private static Command parseTodoCommand(String description) {"},{"lineNumber":421,"author":{"gitId":"TeoHoeKeat"},"content":"        return new Command(CommandType.TODO, description);"},{"lineNumber":422,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":423,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":424,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":425,"author":{"gitId":"TeoHoeKeat"},"content":"     * Parses find command."},{"lineNumber":426,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":427,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param description the command description."},{"lineNumber":428,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a find command."},{"lineNumber":429,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":430,"author":{"gitId":"TeoHoeKeat"},"content":"    private static Command parseFindCommand(String description) {"},{"lineNumber":431,"author":{"gitId":"TeoHoeKeat"},"content":"        return new Command(CommandType.FIND, description);"},{"lineNumber":432,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":433,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":434,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":435,"author":{"gitId":"TeoHoeKeat"},"content":"     * Parses event command."},{"lineNumber":436,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":437,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param description the command description."},{"lineNumber":438,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return an event command."},{"lineNumber":439,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":440,"author":{"gitId":"TeoHoeKeat"},"content":"    private static Command parseEventCommand(String description) throws CommandException {"},{"lineNumber":441,"author":{"gitId":"TeoHoeKeat"},"content":"        if (!description.contains(EVENT_SPLIT_REGEX)) {"},{"lineNumber":442,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(\"OOPS!!! The description of a \" + EVENT_COMMAND"},{"lineNumber":443,"author":{"gitId":"TeoHoeKeat"},"content":"                    + \" must contain Date and Duration indicated by \\\"\" + EVENT_SPLIT_REGEX + \"\\\".\");"},{"lineNumber":444,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":445,"author":{"gitId":"TeoHoeKeat"},"content":"        try {"},{"lineNumber":446,"author":{"gitId":"TeoHoeKeat"},"content":"            String[] eventDetails \u003d description.split(EVENT_SPLIT_REGEX);"},{"lineNumber":447,"author":{"gitId":"TeoHoeKeat"},"content":"            String[] dates \u003d eventDetails[1].split(\" \");"},{"lineNumber":448,"author":{"gitId":"TeoHoeKeat"},"content":"            LocalDate startDate \u003d LocalDate.parse(dates[0]);"},{"lineNumber":449,"author":{"gitId":"TeoHoeKeat"},"content":"            LocalTime startTime \u003d LocalTime.parse(dates[1]);"},{"lineNumber":450,"author":{"gitId":"TeoHoeKeat"},"content":"            LocalDate endDate \u003d LocalDate.parse(dates[2]);"},{"lineNumber":451,"author":{"gitId":"TeoHoeKeat"},"content":"            LocalTime endTime \u003d LocalTime.parse(dates[3]);"},{"lineNumber":452,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":453,"author":{"gitId":"TeoHoeKeat"},"content":"            return new Command(CommandType.EVENT, eventDetails);"},{"lineNumber":454,"author":{"gitId":"TeoHoeKeat"},"content":"        } catch (Exception e) {"},{"lineNumber":455,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(\"OOPS!!! The Date format of a \""},{"lineNumber":456,"author":{"gitId":"TeoHoeKeat"},"content":"                    + EVENT_COMMAND + \" must be yyyy-mm-dd hh:mm yyyy-mm-dd hh:mm\");"},{"lineNumber":457,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":458,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":459,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":460,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":461,"author":{"gitId":"TeoHoeKeat"},"content":"     * Parses deadline command."},{"lineNumber":462,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":463,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param description the command description."},{"lineNumber":464,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a deadline command."},{"lineNumber":465,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":466,"author":{"gitId":"TeoHoeKeat"},"content":"    private static Command parseDeadlineCommand(String description) throws CommandException {"},{"lineNumber":467,"author":{"gitId":"TeoHoeKeat"},"content":"        if (!description.contains(DEADLINE_SPLIT_REGEX)) {"},{"lineNumber":468,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(\"OOPS!!! The description of a \""},{"lineNumber":469,"author":{"gitId":"TeoHoeKeat"},"content":"                    + DEADLINE_COMMAND + \" must contain Date indicated by \\\"\""},{"lineNumber":470,"author":{"gitId":"TeoHoeKeat"},"content":"                    + DEADLINE_SPLIT_REGEX + \"\\\".\");"},{"lineNumber":471,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":472,"author":{"gitId":"TeoHoeKeat"},"content":"        try {"},{"lineNumber":473,"author":{"gitId":"TeoHoeKeat"},"content":"            String[] deadlineDetails \u003d description.split(DEADLINE_SPLIT_REGEX);"},{"lineNumber":474,"author":{"gitId":"TeoHoeKeat"},"content":"            String[] dates \u003d deadlineDetails[1].split(\" \");"},{"lineNumber":475,"author":{"gitId":"TeoHoeKeat"},"content":"            LocalDate date \u003d LocalDate.parse(dates[0]);"},{"lineNumber":476,"author":{"gitId":"TeoHoeKeat"},"content":"            LocalTime time \u003d LocalTime.parse(dates[1]);"},{"lineNumber":477,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":478,"author":{"gitId":"TeoHoeKeat"},"content":"            return new Command(CommandType.DEADLINE, deadlineDetails);"},{"lineNumber":479,"author":{"gitId":"TeoHoeKeat"},"content":"        } catch (Exception e) {"},{"lineNumber":480,"author":{"gitId":"TeoHoeKeat"},"content":"            throw new CommandException(\"OOPS!!! The Date format of a \""},{"lineNumber":481,"author":{"gitId":"TeoHoeKeat"},"content":"                    + DEADLINE_COMMAND + \" must be yyyy-mm-dd hh:mm\");"},{"lineNumber":482,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":483,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":484,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":484}},{"path":"src/main/java/fakebot/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.Task;"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.TaskList;"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":" * Storage class use for storing and loading data from file."},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"public class Storage {"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"     * File name and path to be edit."},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"    private String fileToEdit;"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"     * Constructor of storage class."},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param fileName the name of file."},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param filePath the path of file."},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    public Storage(String fileName, String filePath) {"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"        filePath \u003d createDirectory(filePath);"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"        fileToEdit \u003d filePath + fileName;"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"     * Creates directory if file path doesn\u0027t exist."},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param filePath the path of the file."},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a path created, return empty path if path is invalid."},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"    private String createDirectory(String filePath) {"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"        File file \u003d new File(filePath);"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"        file.mkdirs();"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"        //Remove directory and use root instead since it invalid"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"        if (!file.isDirectory()) {"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"            return \"\";"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"        return filePath;"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"     * Writes tasks to file."},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param taskList to write to file."},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"    public void writeTasksToFile(TaskList taskList) {"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"        String textToAdd \u003d Parser.convertStringListToString(Parser.convertTasksToStrings(taskList));"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"        try {"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"            writeToFile(textToAdd);"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"        } catch (Exception e) {"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"     * Writes string to file."},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param textToAdd write text to file."},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"    private void writeToFile(String textToAdd) throws IOException {"},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"        FileWriter fw \u003d new FileWriter(fileToEdit);"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"        fw.write(textToAdd);"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"        fw.close();"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"     * Reads task from file."},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a list of task read from file."},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"    public List\u003cTask\u003e tryReadTaskFile() {"},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"        try {"},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":"            List\u003cString\u003e stringList \u003d readFile();"},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"            taskList \u003d Parser.convertStringsToTasks(stringList);"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"            //Do nothing, return empty list."},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"        return taskList;"},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":"     * Reads string from file."},{"lineNumber":97,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":98,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a list of string read from file."},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"    private List\u003cString\u003e readFile() throws FileNotFoundException {"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":"        List\u003cString\u003e stringList \u003d new ArrayList\u003cString\u003e();"},{"lineNumber":102,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":103,"author":{"gitId":"TeoHoeKeat"},"content":"        File f \u003d new File(fileToEdit);"},{"lineNumber":104,"author":{"gitId":"TeoHoeKeat"},"content":"        Scanner s \u003d new Scanner(f);"},{"lineNumber":105,"author":{"gitId":"TeoHoeKeat"},"content":"        while (s.hasNext()) {"},{"lineNumber":106,"author":{"gitId":"TeoHoeKeat"},"content":"            stringList.add(s.nextLine());"},{"lineNumber":107,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":109,"author":{"gitId":"TeoHoeKeat"},"content":"        return stringList;"},{"lineNumber":110,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":112,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":112}},{"path":"src/main/java/fakebot/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.command;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":" * Command Class."},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"public class Command {"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"    private CommandType type;"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"    private String[] descriptions;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"     * Class constructor specifying the command type."},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    public Command(CommandType type) {"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"        this.type \u003d type;"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"     * Class constructor specifying the command type and description."},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    public Command(CommandType type, String[] descriptions) {"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"        this.type \u003d type;"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        this.descriptions \u003d descriptions;"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"     * Class constructor specifying the command type and description."},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    public Command(CommandType type, String description) {"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"        this.type \u003d type;"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"        descriptions \u003d new String[]{description};"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns command cype."},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a CommandType of the command."},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    public CommandType getCommand() {"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"        return type;"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns command descriptions."},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a string containing descriptions of the command."},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"    public String[] getDescriptions() {"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"        return descriptions;"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns command description."},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a string containing description of the command."},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getDescription() {"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"        return descriptions[0];"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":61}},{"path":"src/main/java/fakebot/command/CommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.command;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":" * Command Exception Class."},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"public class CommandException extends Exception {"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"     * Class constructor specifying the error message."},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"    public CommandException(String errorMessage) {"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"        super(errorMessage);"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":14}},{"path":"src/main/java/fakebot/command/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.command;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":" * Command Type Enum."},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"public enum CommandType {"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"    BYE, LIST, DONE, TODO, EVENT, DEADLINE, DELETE, FIND, HELP;"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":8}},{"path":"src/main/java/fakebot/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.task;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":" * Deadline Task Type."},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"    private LocalDate deadlineDate;"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"    private LocalTime deadlineTime;"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"     * Class constructor specifying the task description, deadline date, deadline time,"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    public Deadline(String name, LocalDate deadlineDate, LocalTime deadlineTime) {"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"        super(name);"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"        this.deadlineTime \u003d deadlineTime;"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns task deadline date."},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a string containing deadline time."},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getDeadlineDate() {"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        return saveDateFormat.format(deadlineDate);"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns task deadline time."},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a containing deadline time."},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getDeadlineTime() {"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"        return saveTimeFormat.format(deadlineTime);"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"    public String toString() {"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"        String deadlineDateString \u003d printDateFormat.format(deadlineDate);"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"        String deadlineTimeString \u003d printTimeFormat.format(deadlineTime);"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadlineDateString + \" \" + deadlineTimeString + \")\";"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean equals(Object other) {"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"        boolean sameSuperClass \u003d super.equals(other);"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"        if (!sameSuperClass || !(other instanceof Deadline)) {"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"            return false;"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadline d2 \u003d (Deadline) other;"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"        boolean sameDeadlineDate \u003d getDeadlineDate().equals(d2.getDeadlineDate());"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"        boolean sameDeadlineTime \u003d getDeadlineTime().equals(d2.getDeadlineTime());"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"        return sameDeadlineDate \u0026\u0026 sameDeadlineTime;"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"}"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":""}],"authorContributionMap":{"TeoHoeKeat":60}},{"path":"src/main/java/fakebot/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.task;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":" * Event task type"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"    private LocalDate startDate;"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"    private LocalTime startTime;"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"    private LocalDate endDate;"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    private LocalTime endTime;"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"     * Class constructor specifying the task description, event start date, event start time,"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"     * event end date, event end time."},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"    public Event(String name, LocalDate startDate, LocalTime startTime, LocalDate endDate, LocalTime endTime) {"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"        super(name);"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"        this.startDate \u003d startDate;"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"        this.startTime \u003d startTime;"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        this.endDate \u003d endDate;"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"        this.endTime \u003d endTime;"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns task start date."},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a string containing start date."},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getStartDate() {"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"        return saveDateFormat.format(startDate);"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns task start time."},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a string containing start time."},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getStartTime() {"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"        return saveTimeFormat.format(startTime);"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns task end date."},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a string containing end date."},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getEndDate() {"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"        return saveDateFormat.format(endDate);"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns task end time."},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a string containing end time."},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getEndTime() {"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"        return saveTimeFormat.format(endTime);"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"    public String toString() {"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"        String startDateTimeString \u003d printDateFormat.format(startDate) + \" \" + printTimeFormat.format(startTime);"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"        String endDateTimeString \u003d printDateFormat.format(endDate) + \" \" + printTimeFormat.format(endTime);"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + startDateTimeString + \" to \" + endDateTimeString + \")\";"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean equals(Object other) {"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"        boolean sameSuperClass \u003d super.equals(other);"},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"        if (!sameSuperClass || !(other instanceof Event)) {"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"            return false;"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"        Event e2 \u003d (Event) other;"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"        boolean sameStartDate \u003d getStartDate().equals(e2.getStartDate());"},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":"        boolean sameStartTime \u003d getStartTime().equals(e2.getStartTime());"},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"        boolean sameEndDate \u003d getEndDate().equals(e2.getEndDate());"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"        boolean sameEndTime \u003d getEndTime().equals(e2.getEndTime());"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"        return sameStartDate \u0026\u0026 sameStartTime \u0026\u0026 sameEndDate \u0026\u0026 sameEndTime;"},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":84}},{"path":"src/main/java/fakebot/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.task;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":" * Abstract task class."},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"public abstract class Task {"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"    protected String taskName;"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"    protected boolean isComplete;"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"    protected DateTimeFormatter printDateFormat;"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    protected DateTimeFormatter printTimeFormat;"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    protected DateTimeFormatter saveDateFormat;"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    protected DateTimeFormatter saveTimeFormat;"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"     * Class constructor specifying the task description."},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    public Task(String taskName) {"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        isComplete \u003d false;"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"        this.printDateFormat \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"        this.printTimeFormat \u003d DateTimeFormatter.ofPattern(\"HH:mm\");"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"        this.saveDateFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        this.saveTimeFormat \u003d DateTimeFormatter.ofPattern(\"HH:mm\");"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns task name."},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return the task name."},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    public String getTaskName() {"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"        return taskName;"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"     * Marks task as complete."},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"    public void markComplete() {"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"        isComplete \u003d true;"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns if task is complete."},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return true if task is complete."},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean isComplete() {"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"        return isComplete;"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"    public String toString() {"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"        return (isComplete ? \"[X] \" + taskName : \"[ ] \" + taskName);"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean equals(Object other) {"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"        boolean sameClass \u003d other instanceof Task;"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"        return sameClass \u0026\u0026 taskName.equals(((Task) other).getTaskName());"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":67}},{"path":"src/main/java/fakebot/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.task;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.stream.Collectors;"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":" * TaskList class use to store task"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"    private List\u003cTask\u003e tasks;"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"     * Class constructor specifying the task list."},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    public TaskList(List\u003cTask\u003e tasks) {"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns task at index i."},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param i the index of the task."},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a task."},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    public Task getTask(int i) {"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"        return tasks.get(i);"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"     * Adds task to task list."},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param task to add to list."},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    public void addTask(Task task) {"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"        tasks.add(task);"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"     * Removes task index i."},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param i the index of task to be removed."},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"    public void removeTask(int i) {"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"        tasks.remove(i);"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns size of task list."},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return the size of task list."},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"    public int getSize() {"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"        return tasks.size();"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"     * Finds all task that contain search string."},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param search the string to be search."},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return a list of task that contain search string."},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"    public List\u003cTask\u003e findTasks(String search) {"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"        return tasks.stream()"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"                .filter(t -\u003e t.getTaskName().contains(search))"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"                .collect(Collectors.toList());"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"     * Check if task list contain the same task."},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param task the task to be check."},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return true if task exist"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"    public boolean containTask(Task task) {"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"        return tasks.contains(task);"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":77}},{"path":"src/main/java/fakebot/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.task;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":" * ToDos Task Type"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"     * Class constructor specifying the task description."},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"    public Todo(String name) {"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"        super(name);"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    public String toString() {"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":18}},{"path":"src/main/java/fakebot/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.ui;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.MainWindow;"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.fxml.FXML;"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.geometry.Insets;"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.geometry.Pos;"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.Node;"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.control.Label;"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.image.Image;"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"import javafx.scene.shape.Circle;"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"//Solution below adapted from https://se-education.org/guides/tutorials/javaFx.html"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"/**"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":" * Dialog Box for respond and user input"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":" */"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"public class DialogBox extends HBox {"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    private Label dialog;"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"    @FXML"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    private ImageView displayPicture;"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"     * Dialog Box Style Type"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    private enum Style {"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"        USER, BOT, ALERT"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"     * Constructors for DialogBox specifying label and image view"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param text  the text to be display"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param img   the user profile image to be display"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param style Dialog Box Style"},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"    private DialogBox(String text, Image img, Style style) {"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"            fxmlLoader.load();"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"        } catch (IOException e) {"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"            e.printStackTrace();"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"        //Setup Image and text"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"        dialog.setText(text);"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"        displayPicture.setImage(img);"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"        Circle clip \u003d new Circle(30, 30, 30);"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"        displayPicture.setClip(clip);"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"        styleBox(style);"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"    private void flip() {"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"        Collections.reverse(tmp);"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"     * Styles the dialog box according to style"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param style the style type"},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"    private void styleBox(Style style) {"},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":"        CornerRadii rad \u003d new CornerRadii(10);"},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"        Color color \u003d Color.BLACK;"},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":"        switch (style) {"},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"        case USER:"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":"            color \u003d Color.rgb(0, 150, 135);"},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"            break;"},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"        case BOT:"},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"            color \u003d Color.rgb(53, 60, 67);"},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":"            flip();"},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":"            break;"},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":"        case ALERT:"},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":"            color \u003d Color.rgb(159, 2, 2);"},{"lineNumber":97,"author":{"gitId":"TeoHoeKeat"},"content":"            flip();"},{"lineNumber":98,"author":{"gitId":"TeoHoeKeat"},"content":"            break;"},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":"        default:"},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"            assert false : \"All Style type should be handle in switch\";"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":"            break;"},{"lineNumber":102,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":104,"author":{"gitId":"TeoHoeKeat"},"content":"        BackgroundFill backgroundFill \u003d new BackgroundFill(color, rad, Insets.EMPTY);"},{"lineNumber":105,"author":{"gitId":"TeoHoeKeat"},"content":"        Background background \u003d new Background(backgroundFill);"},{"lineNumber":106,"author":{"gitId":"TeoHoeKeat"},"content":"        dialog.setBackground(background);"},{"lineNumber":107,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":109,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns dialog box for user"},{"lineNumber":111,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":112,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param text the text of user"},{"lineNumber":113,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param img  the image of user"},{"lineNumber":114,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Returns dialog box of the user"},{"lineNumber":115,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"TeoHoeKeat"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":117,"author":{"gitId":"TeoHoeKeat"},"content":"        return new DialogBox(text, img, Style.USER);"},{"lineNumber":118,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":120,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":121,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns dialog box for fakebot"},{"lineNumber":123,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":124,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param text the text of fakebot"},{"lineNumber":125,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param img  the image of fakebot"},{"lineNumber":126,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Returns dialog box of the fakebot"},{"lineNumber":127,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"TeoHoeKeat"},"content":"    public static DialogBox getFakebotDialog(String text, Image img) {"},{"lineNumber":129,"author":{"gitId":"TeoHoeKeat"},"content":"        return new DialogBox(text, img, Style.BOT);"},{"lineNumber":130,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":132,"author":{"gitId":"TeoHoeKeat"},"content":"    /**"},{"lineNumber":133,"author":{"gitId":"TeoHoeKeat"},"content":"     * Returns alert dialog box for fakebot"},{"lineNumber":134,"author":{"gitId":"TeoHoeKeat"},"content":"     *"},{"lineNumber":135,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param text the text of fakebot"},{"lineNumber":136,"author":{"gitId":"TeoHoeKeat"},"content":"     * @param img  the image of fakebot"},{"lineNumber":137,"author":{"gitId":"TeoHoeKeat"},"content":"     * @return Returns dialog box of the fakebot"},{"lineNumber":138,"author":{"gitId":"TeoHoeKeat"},"content":"     */"},{"lineNumber":139,"author":{"gitId":"TeoHoeKeat"},"content":"    public static DialogBox getAlertDialog(String text, Image img) {"},{"lineNumber":140,"author":{"gitId":"TeoHoeKeat"},"content":"        return new DialogBox(text, img, Style.ALERT);"},{"lineNumber":141,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":142}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\""},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textFill\u003d\"WHITESMOKE\" wrapText\u003d\"true\"\u003e"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003cfont\u003e"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"                \u003cFont name\u003d\"Courier New\" size\u003d\"12.0\"/\u003e"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003c/font\u003e"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003cHBox.margin\u003e"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"                \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\"/\u003e"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003c/HBox.margin\u003e"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003cpadding\u003e"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"                \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003c/padding\u003e"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003c/Label\u003e"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"60.0\" fitWidth\u003d\"60.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    \u003c/children\u003e"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    \u003cpadding\u003e"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    \u003c/padding\u003e"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"TeoHoeKeat":28}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.geometry.Point3D?\u003e"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"            prefWidth\u003d\"500.0\" style\u003d\"-fx-background-color: #18191d;\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\""},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"fakebot.MainWindow\"\u003e"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    \u003cchildren\u003e"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"4.0\" layoutY\u003d\"557.0\" onAction\u003d\"#handleSendButton\" prefHeight\u003d\"41.0\""},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"                   prefWidth\u003d\"415.0\" promptText\u003d\"Send a command...\""},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"                   style\u003d\"-fx-text-fill: #f5f5f5; -fx-background-color: #282e33;\" AnchorPane.bottomAnchor\u003d\"2.0\"/\u003e"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"421.0\" layoutY\u003d\"556.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleSendButton\""},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: #282e33;\""},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"                AnchorPane.bottomAnchor\u003d\"2.0\"/\u003e"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"500.0\""},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"                    style\u003d\"-fx-background-color: #18191d;\" vbarPolicy\u003d\"NEVER\" vvalue\u003d\"1.0\""},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"                    AnchorPane.bottomAnchor\u003d\"43.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\""},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"                    AnchorPane.topAnchor\u003d\"0.0\"\u003e"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003ccontent\u003e"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" minHeight\u003d\"555.0\" prefWidth\u003d\"500.0\""},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"                      style\u003d\"-fx-background-color: #18191d;\"\u003e"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"                    \u003crotationAxis\u003e"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"                        \u003cPoint3D/\u003e"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"                    \u003c/rotationAxis\u003e"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"                \u003c/VBox\u003e"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"            \u003c/content\u003e"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"    \u003c/children\u003e"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"TeoHoeKeat":34}},{"path":"src/test/java/fakebot/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalTime;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.command.Command;"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.Deadline;"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.Event;"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.Task;"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"import fakebot.task.Todo;"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"class ParserTest {"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    private String endDateString \u003d \"2011-10-01\";"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    private String endTimeString \u003d \"04:04\";"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"    private String taskName \u003d \"Test\";"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    private String startDateString \u003d \"2000-10-01\";"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    private String startTimeString \u003d \"01:04\";"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"    private String dateString \u003d \"2000-10-01\";"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    private String timeString \u003d \"01:04\";"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseTodoGetTaskName_equal() {"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"        String taskName \u003d \"Test\";"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"        Todo todo \u003d new Todo(taskName);"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.convertStringToTask(Parser.convertTaskToString(todo));"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"        todo \u003d (Todo) task;"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(taskName, todo.getTaskName(), \"Task Name does not match\");"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseTodoMarkComplete_success() {"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"        Todo todo \u003d new Todo(\"Test\");"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"        todo.markComplete();"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.convertStringToTask(Parser.convertTaskToString(todo));"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"        todo \u003d (Todo) task;"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(true, todo.isComplete(), \"Task not completed\");"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseEventGetTaskName_equal() {"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"        Event event \u003d new Event(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.convertStringToTask(Parser.convertTaskToString(event));"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"        event \u003d (Event) task;"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(taskName, event.getTaskName(), \"Task Name does not match\");"},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseEventMarkComplete_success() {"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"        Event event \u003d new Event(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"        event.markComplete();"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.convertStringToTask(Parser.convertTaskToString(event));"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"        event \u003d (Event) task;"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(true, event.isComplete(), \"Task not completed\");"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseEventGetStartDate_equal() {"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"        Event event \u003d new Event(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.convertStringToTask(Parser.convertTaskToString(event));"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"        event \u003d (Event) task;"},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(startDateString, event.getStartDate(), \"Start Date does not match\");"},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseEventGetStartTime_equal() {"},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"        Event event \u003d new Event(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.convertStringToTask(Parser.convertTaskToString(event));"},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":"        event \u003d (Event) task;"},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(startTimeString, event.getStartTime(), \"Start Time does not match\");"},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":98,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseEventGetEndDate_equal() {"},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":102,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":103,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":104,"author":{"gitId":"TeoHoeKeat"},"content":"        Event event \u003d new Event(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":105,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.convertStringToTask(Parser.convertTaskToString(event));"},{"lineNumber":106,"author":{"gitId":"TeoHoeKeat"},"content":"        event \u003d (Event) task;"},{"lineNumber":107,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(endDateString, event.getEndDate(), \"End Date does not match\");"},{"lineNumber":108,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":110,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":111,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseEventGetEndTime_equal() {"},{"lineNumber":112,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":113,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":114,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":115,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":116,"author":{"gitId":"TeoHoeKeat"},"content":"        Event event \u003d new Event(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":117,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.convertStringToTask(Parser.convertTaskToString(event));"},{"lineNumber":118,"author":{"gitId":"TeoHoeKeat"},"content":"        event \u003d (Event) task;"},{"lineNumber":119,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(endTimeString, event.getEndTime(), \"End Time does not match\");"},{"lineNumber":120,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":122,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":123,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseDeadlineGetTaskName_equal() {"},{"lineNumber":124,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":125,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime time \u003d LocalTime.parse(timeString);"},{"lineNumber":126,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadline deadline \u003d new Deadline(taskName, date, time);"},{"lineNumber":127,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.convertStringToTask(Parser.convertTaskToString(deadline));"},{"lineNumber":128,"author":{"gitId":"TeoHoeKeat"},"content":"        deadline \u003d (Deadline) task;"},{"lineNumber":129,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(taskName, deadline.getTaskName(), \"Task Name does not match\");"},{"lineNumber":130,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":132,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":133,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseDeadlineMarkComplete_success() {"},{"lineNumber":134,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":135,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime time \u003d LocalTime.parse(timeString);"},{"lineNumber":136,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadline deadline \u003d new Deadline(taskName, date, time);"},{"lineNumber":137,"author":{"gitId":"TeoHoeKeat"},"content":"        deadline.markComplete();"},{"lineNumber":138,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.convertStringToTask(Parser.convertTaskToString(deadline));"},{"lineNumber":139,"author":{"gitId":"TeoHoeKeat"},"content":"        deadline \u003d (Deadline) task;"},{"lineNumber":140,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(true, deadline.isComplete(), \"Task not completed\");"},{"lineNumber":141,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":142,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":143,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":144,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseDeadlineGetDeadlineDate_equal() {"},{"lineNumber":145,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":146,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime time \u003d LocalTime.parse(timeString);"},{"lineNumber":147,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadline deadline \u003d new Deadline(taskName, date, time);"},{"lineNumber":148,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.convertStringToTask(Parser.convertTaskToString(deadline));"},{"lineNumber":149,"author":{"gitId":"TeoHoeKeat"},"content":"        deadline \u003d (Deadline) task;"},{"lineNumber":150,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(dateString, deadline.getDeadlineDate(), \"Deadline Date does not match\");"},{"lineNumber":151,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":153,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":154,"author":{"gitId":"TeoHoeKeat"},"content":"    public void parseDeadlineGetDeadlineTime_equal() {"},{"lineNumber":155,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":156,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime time \u003d LocalTime.parse(timeString);"},{"lineNumber":157,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadline deadline \u003d new Deadline(taskName, date, time);"},{"lineNumber":158,"author":{"gitId":"TeoHoeKeat"},"content":"        Task task \u003d Parser.convertStringToTask(Parser.convertTaskToString(deadline));"},{"lineNumber":159,"author":{"gitId":"TeoHoeKeat"},"content":"        deadline \u003d (Deadline) task;"},{"lineNumber":160,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(timeString, deadline.getDeadlineTime(), \"Deadline Time does not match\");"},{"lineNumber":161,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":162,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":163,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":164,"author":{"gitId":"TeoHoeKeat"},"content":"    void parseUserInputToCommand_noError() {"},{"lineNumber":165,"author":{"gitId":"TeoHoeKeat"},"content":"        String[] userInputs \u003d {\"todo test\","},{"lineNumber":166,"author":{"gitId":"TeoHoeKeat"},"content":"            \"deadline test /by 2011-01-10 01:01\","},{"lineNumber":167,"author":{"gitId":"TeoHoeKeat"},"content":"            \"event test /at 2011-01-10 02:01 2012-01-10 02:03\","},{"lineNumber":168,"author":{"gitId":"TeoHoeKeat"},"content":"            \"done 1\","},{"lineNumber":169,"author":{"gitId":"TeoHoeKeat"},"content":"            \"delete 1\","},{"lineNumber":170,"author":{"gitId":"TeoHoeKeat"},"content":"            \"find test\","},{"lineNumber":171,"author":{"gitId":"TeoHoeKeat"},"content":"            \"list\","},{"lineNumber":172,"author":{"gitId":"TeoHoeKeat"},"content":"            \"bye\""},{"lineNumber":173,"author":{"gitId":"TeoHoeKeat"},"content":"        };"},{"lineNumber":174,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":175,"author":{"gitId":"TeoHoeKeat"},"content":"        FakeBot fakeBot \u003d new FakeBot(\"\", \"\");"},{"lineNumber":176,"author":{"gitId":"TeoHoeKeat"},"content":"        try {"},{"lineNumber":177,"author":{"gitId":"TeoHoeKeat"},"content":"            for (String input : userInputs) {"},{"lineNumber":178,"author":{"gitId":"TeoHoeKeat"},"content":"                Command command \u003d Parser.parseUserInputToCommand(input);"},{"lineNumber":179,"author":{"gitId":"TeoHoeKeat"},"content":"                String outputText \u003d fakeBot.processCommand(command);"},{"lineNumber":180,"author":{"gitId":"TeoHoeKeat"},"content":"            }"},{"lineNumber":181,"author":{"gitId":"TeoHoeKeat"},"content":"        } catch (Exception e) {"},{"lineNumber":182,"author":{"gitId":"TeoHoeKeat"},"content":"            assertTrue(false, e.getMessage());"},{"lineNumber":183,"author":{"gitId":"TeoHoeKeat"},"content":"        }"},{"lineNumber":184,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":185,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":185}},{"path":"src/test/java/fakebot/command/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.command;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"class CommandTest {"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"    private CommandType type \u003d CommandType.EVENT;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"    private String description \u003d \"Test\";"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"    void getCommand_equal() {"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"        Command test \u003d new Command(type, description);"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(type, test.getCommand(), \"Command Does not match\");"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    void getDescription_equal() {"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"        Command test \u003d new Command(type, description);"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(description, test.getDescription(), \"Description Does not match\");"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":22}},{"path":"src/test/java/fakebot/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.task;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"class DeadlineTest {"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"    private String taskName \u003d \"Test\";"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    private String dateString \u003d \"2000-10-01\";"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"    private String timeString \u003d \"01:04\";"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    public void getTaskName_equal() {"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime time \u003d LocalTime.parse(timeString);"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadline deadline \u003d new Deadline(taskName, date, time);"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(taskName, deadline.getTaskName(), \"Task Name does not match\");"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"    public void markComplete_success() {"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime time \u003d LocalTime.parse(timeString);"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadline deadline \u003d new Deadline(taskName, date, time);"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        deadline.markComplete();"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(true, deadline.isComplete(), \"Task not completed\");"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"    public void getDeadlineDate_equal() {"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime time \u003d LocalTime.parse(timeString);"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadline deadline \u003d new Deadline(taskName, date, time);"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(dateString, deadline.getDeadlineDate(), \"Deadline Date does not match\");"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"    public void getDeadlineTime_equal() {"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate date \u003d LocalDate.parse(dateString);"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime time \u003d LocalTime.parse(timeString);"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadline deadline \u003d new Deadline(taskName, date, time);"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(timeString, deadline.getDeadlineTime(), \"Deadline Time does not match\");"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":48}},{"path":"src/test/java/fakebot/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.task;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"class EventTest {"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"    private String taskName \u003d \"Test\";"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"    private String startDateString \u003d \"2000-10-01\";"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"    private String startTimeString \u003d \"01:04\";"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    private String endDateString \u003d \"2011-10-01\";"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    private String endTimeString \u003d \"04:04\";"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"    public void getTaskName_equal() {"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"        Event event \u003d new Event(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(taskName, event.getTaskName(), \"Task Name does not match\");"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"    public void markComplete_success() {"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"        Event event \u003d new Event(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"        event.markComplete();"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(true, event.isComplete(), \"Task not completed\");"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    public void getStartDate_equal() {"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"        Event event \u003d new Event(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(startDateString, event.getStartDate(), \"Start Date does not match\");"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"    public void getStartTime_equal() {"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"        Event event \u003d new Event(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(startTimeString, event.getStartTime(), \"Start Time does not match\");"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"    public void getEndDate_equal() {"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"        Event event \u003d new Event(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(endDateString, event.getEndDate(), \"End Date does not match\");"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"    public void getEndTime_equal() {"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"        Event event \u003d new Event(taskName, startDate, startTime, endDate, endTime);"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(endTimeString, event.getEndTime(), \"End Time does not match\");"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":78}},{"path":"src/test/java/fakebot/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.task;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"import java.time.LocalTime;"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"class TaskListTest {"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"    private String description1 \u003d \"test1\";"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"    private String description2 \u003d \"test2\";"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    private String startDateString \u003d \"2000-10-01\";"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    private String startTimeString \u003d \"01:04\";"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"    private String endDateString \u003d \"2011-10-01\";"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"    private String endTimeString \u003d \"04:04\";"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"    void getTask_equal() {"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"        Task test1 \u003d new Todo(description1);"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"        Task test2 \u003d new Todo(description2);"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test2);"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(test1, taskList.getTask(0), \"Task index do not match\");"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(test2, taskList.getTask(1), \"Task index do not match\");"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"    void addTask_success() {"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"        Task test1 \u003d new Todo(description1);"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(1, taskList.getSize(), \"Task is not added\");"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"    void removeTask_success() {"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"        Task test1 \u003d new Todo(description1);"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.removeTask(0);"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(0, taskList.getSize(), \"Task is not removed\");"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":49,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":50,"author":{"gitId":"TeoHoeKeat"},"content":"    void getSize_success() {"},{"lineNumber":51,"author":{"gitId":"TeoHoeKeat"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":52,"author":{"gitId":"TeoHoeKeat"},"content":"        Task test1 \u003d new Todo(description1);"},{"lineNumber":53,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":54,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":55,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":56,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(3, taskList.getSize(), \"Task List size does not match\");"},{"lineNumber":57,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":59,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":60,"author":{"gitId":"TeoHoeKeat"},"content":"    void find_success() {"},{"lineNumber":61,"author":{"gitId":"TeoHoeKeat"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":62,"author":{"gitId":"TeoHoeKeat"},"content":"        Task test1 \u003d new Todo(description1);"},{"lineNumber":63,"author":{"gitId":"TeoHoeKeat"},"content":"        Task test2 \u003d new Todo(description2);"},{"lineNumber":64,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":65,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test2);"},{"lineNumber":66,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":67,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test2);"},{"lineNumber":68,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":69,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test2);"},{"lineNumber":70,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":71,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test2);"},{"lineNumber":72,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":73,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":74,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(6, taskList.findTasks(\"est1\").size(), \"Task size found does not match\");"},{"lineNumber":75,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(4, taskList.findTasks(\"est2\").size(), \"Task size found does not match\");"},{"lineNumber":76,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":78,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":79,"author":{"gitId":"TeoHoeKeat"},"content":"    void containTask_true() {"},{"lineNumber":80,"author":{"gitId":"TeoHoeKeat"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":81,"author":{"gitId":"TeoHoeKeat"},"content":"        Task test1 \u003d new Todo(description1);"},{"lineNumber":82,"author":{"gitId":"TeoHoeKeat"},"content":"        Task test2 \u003d new Todo(description1);"},{"lineNumber":83,"author":{"gitId":"TeoHoeKeat"},"content":"        Task test3 \u003d new Todo(description1);"},{"lineNumber":84,"author":{"gitId":"TeoHoeKeat"},"content":"        Task test4 \u003d new Todo(description1);"},{"lineNumber":85,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate startDate \u003d LocalDate.parse(startDateString);"},{"lineNumber":86,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeString);"},{"lineNumber":87,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalDate endDate \u003d LocalDate.parse(endDateString);"},{"lineNumber":88,"author":{"gitId":"TeoHoeKeat"},"content":"        LocalTime endTime \u003d LocalTime.parse(endTimeString);"},{"lineNumber":89,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadline test5 \u003d new Deadline(description1, startDate, startTime);"},{"lineNumber":90,"author":{"gitId":"TeoHoeKeat"},"content":"        Deadline test6 \u003d new Deadline(description1, startDate, startTime);"},{"lineNumber":91,"author":{"gitId":"TeoHoeKeat"},"content":"        Event test7 \u003d new Event(description1, startDate, startTime, endDate, endTime);"},{"lineNumber":92,"author":{"gitId":"TeoHoeKeat"},"content":"        Event test8 \u003d new Event(description1, startDate, startTime, endDate, endTime);"},{"lineNumber":93,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test1);"},{"lineNumber":94,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test3);"},{"lineNumber":95,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test5);"},{"lineNumber":96,"author":{"gitId":"TeoHoeKeat"},"content":"        taskList.addTask(test7);"},{"lineNumber":97,"author":{"gitId":"TeoHoeKeat"},"content":"        assertTrue(taskList.containTask(test2), \"Task does not contain in list\");"},{"lineNumber":98,"author":{"gitId":"TeoHoeKeat"},"content":"        assertTrue(taskList.containTask(test4), \"Task does not contain in list\");"},{"lineNumber":99,"author":{"gitId":"TeoHoeKeat"},"content":"        assertTrue(taskList.containTask(test6), \"Task does not contain in list\");"},{"lineNumber":100,"author":{"gitId":"TeoHoeKeat"},"content":"        assertTrue(taskList.containTask(test8), \"Task does not contain in list\");"},{"lineNumber":101,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":102}},{"path":"src/test/java/fakebot/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"package fakebot.task;"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"class TodoTest {"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"    public void getTaskName_equal() {"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"        String taskName \u003d \"Test\";"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"        Todo todo \u003d new Todo(taskName);"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(taskName, todo.getTaskName(), \"Task Name does not match\");"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":""},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"    public void markComplete_success() {"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"        Todo todo \u003d new Todo(\"Test\");"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"        todo.markComplete();"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"        assertEquals(true, todo.isComplete(), \"Task not completed\");"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"}"}],"authorContributionMap":{"TeoHoeKeat":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"TeoHoeKeat"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"TeoHoeKeat"},"content":"deadline return book /by 2020-03-11 08:02"},{"lineNumber":3,"author":{"gitId":"TeoHoeKeat"},"content":"event project meeting /at 2020-01-01 21:02 2020-01-01 21:02"},{"lineNumber":4,"author":{"gitId":"TeoHoeKeat"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"TeoHoeKeat"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"TeoHoeKeat"},"content":"done 4"},{"lineNumber":7,"author":{"gitId":"TeoHoeKeat"},"content":"todo borrow book"},{"lineNumber":8,"author":{"gitId":"TeoHoeKeat"},"content":"list"},{"lineNumber":9,"author":{"gitId":"TeoHoeKeat"},"content":"deadline return book /by 2020-01-11 01:02"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"event project meeting /at 2020-01-01 01:02 2020-01-01 20:02"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"todo"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"deadline"},{"lineNumber":13,"author":{"gitId":"TeoHoeKeat"},"content":"event"},{"lineNumber":14,"author":{"gitId":"TeoHoeKeat"},"content":"todos"},{"lineNumber":15,"author":{"gitId":"TeoHoeKeat"},"content":"deadlines"},{"lineNumber":16,"author":{"gitId":"TeoHoeKeat"},"content":"events"},{"lineNumber":17,"author":{"gitId":"TeoHoeKeat"},"content":"blah"},{"lineNumber":18,"author":{"gitId":"TeoHoeKeat"},"content":"deadline test"},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"event test"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"done"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"dones"},{"lineNumber":22,"author":{"gitId":"TeoHoeKeat"},"content":"done yu"},{"lineNumber":23,"author":{"gitId":"TeoHoeKeat"},"content":"done -1"},{"lineNumber":24,"author":{"gitId":"TeoHoeKeat"},"content":"done 8"},{"lineNumber":25,"author":{"gitId":"TeoHoeKeat"},"content":"done 0"},{"lineNumber":26,"author":{"gitId":"TeoHoeKeat"},"content":"done"},{"lineNumber":27,"author":{"gitId":"TeoHoeKeat"},"content":"event"},{"lineNumber":28,"author":{"gitId":"TeoHoeKeat"},"content":"deadline"},{"lineNumber":29,"author":{"gitId":"TeoHoeKeat"},"content":"todo"},{"lineNumber":30,"author":{"gitId":"TeoHoeKeat"},"content":"delete"},{"lineNumber":31,"author":{"gitId":"TeoHoeKeat"},"content":"delete"},{"lineNumber":32,"author":{"gitId":"TeoHoeKeat"},"content":"deletes"},{"lineNumber":33,"author":{"gitId":"TeoHoeKeat"},"content":"delete yu"},{"lineNumber":34,"author":{"gitId":"TeoHoeKeat"},"content":"list"},{"lineNumber":35,"author":{"gitId":"TeoHoeKeat"},"content":"delete 3"},{"lineNumber":36,"author":{"gitId":"TeoHoeKeat"},"content":"list"},{"lineNumber":37,"author":{"gitId":"TeoHoeKeat"},"content":"delete 0"},{"lineNumber":38,"author":{"gitId":"TeoHoeKeat"},"content":"delete -1"},{"lineNumber":39,"author":{"gitId":"TeoHoeKeat"},"content":"delete 7"},{"lineNumber":40,"author":{"gitId":"TeoHoeKeat"},"content":"delete 1"},{"lineNumber":41,"author":{"gitId":"TeoHoeKeat"},"content":"list"},{"lineNumber":42,"author":{"gitId":"TeoHoeKeat"},"content":"delete 4"},{"lineNumber":43,"author":{"gitId":"TeoHoeKeat"},"content":"list"},{"lineNumber":44,"author":{"gitId":"TeoHoeKeat"},"content":"deadline return book /by 2020-01 01:02"},{"lineNumber":45,"author":{"gitId":"TeoHoeKeat"},"content":"event project meeting /at 2020-01 01:02 2020-01-01 20:02"},{"lineNumber":46,"author":{"gitId":"TeoHoeKeat"},"content":"find book"},{"lineNumber":47,"author":{"gitId":"TeoHoeKeat"},"content":"find helloworld"},{"lineNumber":48,"author":{"gitId":"TeoHoeKeat"},"content":"bye"}],"authorContributionMap":{"TeoHoeKeat":48}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"TeoHoeKeat"},"content":"javac  -cp ..\\src\\main\\java\\fakebot\\command\\ -Xlint:none -d ..\\bin ..\\src\\main\\java\\fakebot\\command\\*.java"},{"lineNumber":11,"author":{"gitId":"TeoHoeKeat"},"content":"javac  -cp ..\\src\\main\\java\\fakebot\\task\\ -Xlint:none -d ..\\bin ..\\src\\main\\java\\fakebot\\task\\*.java"},{"lineNumber":12,"author":{"gitId":"TeoHoeKeat"},"content":"javac  -cp ..\\src\\main\\java\\fakebot -Xlint:none -d ..\\bin ..\\src\\main\\java\\fakebot\\*.java"},{"lineNumber":13,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":14,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":16,"author":{"gitId":"-"},"content":")"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"TeoHoeKeat"},"content":"REM run the program, feed comm"},{"lineNumber":20,"author":{"gitId":"TeoHoeKeat"},"content":"ands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":21,"author":{"gitId":"TeoHoeKeat"},"content":"java -classpath ..\\bin FakeBot \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":24,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"TeoHoeKeat":6,"-":18}}]
