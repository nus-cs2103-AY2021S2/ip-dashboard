{"authorDailyContributionsMap":{"Tomashiwa":[{"date":"2021-01-15","commitResults":[{"hash":"9f2727775f2d749c361f9229804fbf036dab154b","messageTitle":"Add Level-1. Greet Echo Exit","messageBody":"Implements the required skeletal version of Duke that starts by\ngreeting the user, simply echos commands entered by the user,\nand exits when the user types bye.\n\nChatbot\u0027s name can be modified through the variable CHATBAT_NAME.\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":32,"deletions":7}}},{"hash":"41952b9cd10dd9eabe5dd948698885465d7384c2","messageTitle":"Add Level 2. Add, List","messageBody":"* Text entered by the user are stored into a seperate list via\naddItem\n\n* These items can be displayed to the user via listItems\n","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":5}}}]},{"date":"2021-01-16","commitResults":[{"hash":"22c45f8d3f3324492890a412b6c035f4117bad9d","messageTitle":"Add Task class and \u0027done ...\u0027 chatbot command","messageBody":"* Function declarations and implementations in Duke have been\nupdated to handle Tasks instead of Strings\n","fileTypesAndContributionMap":{"java":{"insertions":95,"deletions":16}}},{"hash":"69fdad13a0204e0766110b54a4fc978ea7c7b983","messageTitle":"Adjust spacing and brackets","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":2}}},{"hash":"ae29e602d19581385a9018410944faf6b2fcfcc1","messageTitle":"Add Automated Text UI Testing","messageBody":"* Add pause at the completion of testing to observe the file\ncomparison\n","fileTypesAndContributionMap":{"txt":{"insertions":11,"deletions":0},"bat":{"insertions":3,"deletions":1}}},{"hash":"250f69f8c642c4a8762886fe4616e3b7e7602e8a","messageTitle":"Add ToDo, Deadline, Event and Modify Task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":0}}},{"hash":"7e3e0d7e8b211981ce980ed3bc9711ddd9976c48","messageTitle":"Integrate ToDo, Deadline and Event into Duke","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":11}}},{"hash":"a876ae7b3ae6c3c998d0a2acfffe0aac564bd11f","messageTitle":"Update testing\u0027s input and expected output for Level-4","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":7,"deletions":5},"java":{"insertions":1,"deletions":1}}},{"hash":"56e2f793b3bc0c24845689a81ee75552a614f583","messageTitle":"Add DukeException and DukeCommandException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":0}}},{"hash":"233d728df98fe025d426b552198bf45c661b3415","messageTitle":"Integrate exceptions into Duke and update functions that execute chatbot commands","messageBody":"* These functions now take in a String as its parameter, a character\nsequence that is positioned after the command\u0027s name\n-\u003e Eg. todo buy breakfast \u003d\u003e parameter: \"buy breakfast\"\n\n* Instead of main, now these functions handle the process of\nbreaking down the parameter String\n","fileTypesAndContributionMap":{"java":{"insertions":71,"deletions":50}}},{"hash":"8d2dc31004374f295279fbdf996817feaad38022","messageTitle":"Add deleting task from list and Update testing\u0027s input and expected output","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":4,"deletions":0},"java":{"insertions":26,"deletions":0}}},{"hash":"a4fdd68076c58ba77f74b7e742f29375d27e1f24","messageTitle":"Print number of tasks left after deleting","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"63732c8a3fb50d77e6cbb21b341b81ad4e6c3e10","messageTitle":"Add comments for deleteTask","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":0}}}]},{"date":"2021-01-22","commitResults":[{"hash":"ea1372d15ed13a9e2423b2adb550b596754cc7ef","messageTitle":"Add custom exceptions for saving and loading from hard disk","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"0a4830497311793affd14863d8f4c1775874a220","messageTitle":"Add optional constructor and conversion to save info string for each Task class","messageBody":"Why the change?\nIndicating a task is completed needs to be easier as the previous\nmethod required calling markAsDone() every time after the task was\ncreated.\n\nAs Duke only view those tasks as Task, it has no way of accessing\nthe additional parameters of a task like date time and date time\nrange.\n\nWhat is being done?\nOptional constructor with a isDone is added to directly declare\nwhether the task is done.\n\nDeclaring a toSaveInfoString() to the base Task class and have the\nother task classes to override, adding on their own parameters.\n\nWhy is it done that way?\nInstantiating a completed task can be done in 1 line, so when\nloading completed tasks, Duke can instantiate such task without\nextra lines of code.\n\nPreserve polymorphism among the task classes. If there is new task\ntype to add, it can just override the toSaveInfoString() easily.\n","fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":5}}},{"hash":"33cf9168c9976f3f69f914fbfdd8a0195c5104f3","messageTitle":"Remove reliance on Task class for toSaveInfoString() in other tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":3}}},{"hash":"03db25240b04c5c8cb1b5554887a44b4e37470e0","messageTitle":"Add saving tasks into hard disk","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":68,"deletions":2}}},{"hash":"63104d406ba3d2d73472830cf9084f0567205e6d","messageTitle":"Add loading tasks from hard disk and comment on exception tags for javadocs","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":63,"deletions":36}}},{"hash":"e8e10dc688b93c2b8602da89c6a76685b4286490","messageTitle":"Comment return tags for Task\u0027s header comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":3}}}]},{"date":"2021-01-23","commitResults":[{"hash":"80ab15e804845f610ed382a9d318b9c645140bfd","messageTitle":"Change Deadline\u0027s date time field from String to LocalDateTime","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":18,"deletions":5}}},{"hash":"ecf8c3f3243a4831488f20c4b303e566c50e3e17","messageTitle":"Split dateTimeRange field of Event into Start and End fields","messageBody":"Why the change?\nHaving 1 field to represent a date time range require us to\nestablish a specific format to follow which may not be intuitive\nto the user.\n\nWhat is being done?\nReplace dateTimeRange field and start and end fields whereby\nthe Event command syntax is now \"event XXX /start XXX /end XXX\".\nRelated classes and functions are updated to reflect the change.\n\nWhy is it done that way?\nSince the date time range will be represented with 2 fields, instead\nof /at, using /start and /end comes more naturally to both the\ndevelopers and the users.\n","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":10}}},{"hash":"9c9b58121931000860479b2fcb74597a9895e515","messageTitle":"Update addDeadline\u0027s and addEvent\u0027s header comment with exception tag","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"38733f352461ca7ff3e76386b3250e036636c4dc","messageTitle":"Remove unnecessary comments coming from previous merge conflict","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":4}}},{"hash":"75e5fc0c71d44ca1abae61c205ed2dad7e938ef6","messageTitle":"Add Ui class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":0}}},{"hash":"82600c82e1db10bd7757141cd811eb9bb7ddd671","messageTitle":"Replace manual printing of welcome, goodbye and error messages with Ui class","messageBody":"Why the change?\nExtract out the printing aspect of Duke into a seperate Ui class, in\nan effort to keep the Duke class managable.\n\nWhat is being done?\nManual printings of welcome, goodbye and error message are replaced\nwith functions from Ui class.\n\nWhy is it done that way?\nBy seperating the printing aspect to another class, any printing\nissues will be isolated into that one class, allowing the debugging\nto be easier.\n","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":9}}},{"hash":"5da7cdb1934688c4aaa7d3a40db07a1604d57bf3","messageTitle":"Extract task saving as Storage class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":87,"deletions":32}}},{"hash":"220650db482bacdd9569fb054b4bb48ae9636ff1","messageTitle":"Add TaskManager class and DukeTaskException","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":81,"deletions":0}}},{"hash":"8fb7556a5edec14c2bb0a7a90ecf20a6c996016e","messageTitle":"Add Command class and child classes to add the different task types","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":86,"deletions":0}}},{"hash":"5013d9cd9e18dfe672c4bed99051d0c9819ab558","messageTitle":"Add remaining commands as classes and update Ui class to print a list of Task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":68,"deletions":0}}},{"hash":"e176e6fa9abcfddfd03099904fbb2bce77ce39af","messageTitle":"Extract conversion of text to executing commands as Parser class and update relevant classes to reflect the changes","messageBody":"Why the change?\nA large portion of Duke\u0027s main function is to match input strings to\na command which can be extracted to another class, isolating the\nmatching process away from the Duke class.\n\nWhat is being done?\nThe match process will be extracted into a Parser class that reads\nan input string, verify the string and return a corresponding\nfunction to be executed.\n\nWhy is it done that way?\nThis keeps the matching process to be isolated into 1 location, the\nParser class, allowing the debug process to be much easier.\n","fileTypesAndContributionMap":{"java":{"insertions":139,"deletions":8}}},{"hash":"043c5c325906cfd14a43bb51119db46a375a3857","messageTitle":"Replace conversion of text to command execution with Parser\u0027s and Command\u0027s functions","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":214}}},{"hash":"103231db1aa3c4d299942a232ca31ceb8bcf8b22","messageTitle":"Re-integrate task saving upon adding, completing, and removing tasks","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":5,"deletions":9},"java":{"insertions":17,"deletions":12}}},{"hash":"6e8359c8285af3b8a09af0fa15853e9ac186edc0","messageTitle":"Extract load tasks from hard disk to Parser class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":57,"deletions":111}}},{"hash":"f34f141d9cba5beadcdfde753d1f31e401c62a8f","messageTitle":"Refactor Duke","messageBody":"Why the change?\nIt is impossible to run multiple instance of Duke as all the running\nlogic is in the static main() function, not an instance function.\n\nWhat is being done?\nAll logic required for the bot (ie. setup and running) are allocated\nto its constructor and run().\n\nWhy is it done that way?\nIt will be possible to run multiple instances of the bot if\nrequired.\n","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":8}}},{"hash":"60b819225c9c245b71f0fb50f3f4ad82ae1cbfad","messageTitle":"Organize files into packages (duke, duke.task, duke.command, duke.exception)","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":112,"deletions":4},"bat":{"insertions":1,"deletions":1}}},{"hash":"9385099f84e064cadadfc9ede8145b8a8b379a07","messageTitle":"Add JUnit test for Ui class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":163,"deletions":0}}},{"hash":"625a3a7700f3a2960546bae7fd2c849ca2681f7a","messageTitle":"Reorder imports in UiTest","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":7}}},{"hash":"239d306cb2fd90833a4d76132f1de6c5f45402b4","messageTitle":"Change date time format for saving Deadline and Event","messageBody":"Why the change?\nPrevious format removes the year completely which will be required\nwhen we load a save file.\n\nWhat is being done?\nFormat is change to included year as well. Since the day of the week\nin english word is not required, it will be remove from the format.\n\nWhy is it done that way?\nIf future features ever need to search tasks by year, this allowed\ntasks loaded from the hard disk to be searchable by that method too.\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"b6b476e213f403825c72aeed7f3c7e528255a7ec","messageTitle":"Add Junit test for Storage class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":98,"deletions":0}}},{"hash":"b5611fcdec4f78325ddeae77d0704623c61b3e67","messageTitle":"Reorder import statements in StorageTest","messageBody":"","tags":["A-Jar","A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":7}}},{"hash":"8354f89349eac08d9000843dc3bf8f6c6984f777","messageTitle":"Add line break for done message","messageBody":"","tags":["v0.2"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}}]},{"date":"2021-01-24","commitResults":[{"hash":"56c236c4e898dfd2c3edc059dd5539f059668626","messageTitle":"Add a Find command and update the relevant classes to reflect the changes","messageBody":"Why the change?\nParser class do not understand how to identify command text as a\nFind command. Since Find command has the option of finding by date\nas well, we need to be able to retrieve the dates from the Task\nsubclasses. To display the search results to the user, Ui will also\nbe updated.\n\nWhat is being done?\nNew parseFind function for Find command has been added with parse\nfunction updated. Task sub-classes has been added with getter\nfunctions to get its dates. Ui has also been added with printFindMsg\nfor the search results.\n\nWhy is it done that way?\nFollowing the encapsilation method we have for other commands,\nFind command will also has its very own Command class and respective\nfunctions in other classes.\n","fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":527,"deletions":75}}},{"hash":"e1e8976727507cb1536d7345652d7996f668e60b","messageTitle":"Add JavaDoc for Find command and its relevant functions","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":40,"deletions":4}}},{"hash":"c20cf2b7250292d92abae534ee0fc4a6f1bf1c38","messageTitle":"Correct the spacings for if statement\u0027s conditions","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":45,"deletions":45}}},{"hash":"a85596d2f0814365a405fdf778732600933b5b88","messageTitle":"Add an exception for Done command to handle user trying to complete an already completed task","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":1}}},{"hash":"a1508ec2963b2735364b7b3188ea7433dc79570d","messageTitle":"Add a new JUnit test for Ui\u0027s printFoundMsg function","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":4}}},{"hash":"18eb3eca65299ee9c39be208d61ccd30da062e5c","messageTitle":"Update JDoc for the new JUnit test in Ui","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}},{"hash":"6bb1bbe38365b27174210399c994fede51179387","messageTitle":"Update text-ui-test test case","messageBody":"","tags":["v1.0","v0.1"],"fileTypesAndContributionMap":{"txt":{"insertions":9,"deletions":4},"bat":{"insertions":1,"deletions":1}}}]},{"date":"2021-01-27","commitResults":[{"hash":"37e0c4de10aa7f420c2e447a90f08fb6047af7a3","messageTitle":"Added header comments for classes","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":2},"java":{"insertions":25,"deletions":0}}},{"hash":"5d7a20d83ac71477a5857792171c849cd92662c2","messageTitle":"Add empty line between description and parameter in header comments","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":77,"deletions":0}}},{"hash":"47ec0f0a804f1ef31860e897c48e62bab289c659","messageTitle":"Rename the function isToExit to willExit for clarity","messageBody":"","tags":["v1.01"],"fileTypesAndContributionMap":{"java":{"insertions":3,"deletions":3}}}]},{"date":"2021-01-30","commitResults":[{"hash":"11a776bf1f57349bebf901b942fa33ca3265a180","messageTitle":"Setup gradle to run unit tests and checkstyle before build","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":21,"deletions":0}}},{"hash":"e2804247a05d846bd71f81fb6cbec4b6186e03f5","messageTitle":"Fix incorrect spacing and import order found by checkstyle","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":73,"deletions":73}}},{"hash":"85665a0be6674742e949d66540aedd1109a6ad16","messageTitle":"Fix incorrect java import order","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":30}}}]},{"date":"2021-01-31","commitResults":[{"hash":"310b29dd451673b945f376134362cfaad3bed535","messageTitle":"Add Launcher class and placeholder hello world ui (JavaFX tutorial 1)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":9}}},{"hash":"456e29d188b293bb17853387b1ed8db9cfd63326","messageTitle":"Add basic ui elements (JavaFX tutorial 2)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":54,"deletions":3}}},{"hash":"f3c799064058ac2bcab2921d88c945ac0087790d","messageTitle":"Added basic interaction in UI (JavaFX tutorial 3)","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":92,"deletions":0}}},{"hash":"cc11440d1af73c5e25c1cfc2c5f010e1840785f6","messageTitle":"Refactor ui\u0027s main window and dialogue box into its own FXML and controller class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":119,"deletions":127}}},{"hash":"b2666d69565fbcc249295e593a5249b053979db5","messageTitle":"Rearrange files into duke.controller and duke.bot packages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":26}}},{"hash":"e8a4a0d784f27573f838f37b4a35c6b2c9760f8a","messageTitle":"Redirect command line output of chatbot into JavaFX\u0027s UI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":110,"deletions":72}}},{"hash":"f481be313dde712d18c422c00f54b924de4788d0","messageTitle":"Replace Label with Text element for printing bot messages","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":11,"deletions":45}}},{"hash":"dc3a45c91357b09d53466100e1706a02656c4038","messageTitle":"Update JavaDoc comments to improve its description of the UI functions","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":46}}},{"hash":"ca52156d834be34f36324d98ed9331eb455c73a5","messageTitle":"Re-integrate exit command and outputting of welcome/goodbye message via the GUI","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":88,"deletions":6}}},{"hash":"bcd8cc21d33f65d499694502e4c3fa831114476b","messageTitle":"Update JavaDocs to add @return field for UI and Commands\u0027s functions","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":2}}},{"hash":"e7d4af2a9af69cc198cb8388c76d5d7508e13ee1","messageTitle":"Change display picture for user and duke","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"9d34a0f90bdde2d86b8844a9da202cdce8423db9","messageTitle":"Set window title to be Duke","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":0}}}]},{"date":"2021-02-06","commitResults":[{"hash":"399f3c35a5830d91c95012e5bce56e10db735993","messageTitle":"Corrected build.gradle to build from Launcher class","messageBody":"","tags":["v1.1"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"7f0aa32a968a5dcf902160dcf384ffa994765436","messageTitle":"Enable assertions in gradle","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":1}}},{"hash":"82c037574c6ddc2cd8defe5252400d7d55569fd4","messageTitle":"Add assertions to check setup, saving and loading","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":0}}},{"hash":"f409b9bf0e32ea8b4a3d49b81c46dbce9ad9ae05","messageTitle":"Rename variables and functions in acccordance to feedback","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":49}}},{"hash":"995bd6814d5bb7bb4b1893ab4f1304d77ea15577","messageTitle":"Refactor Parser class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":127,"deletions":97}}},{"hash":"6cf2ff0540912e9d2210b2cd0b8fb17385f33061","messageTitle":"Refactor Ui class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":21}}},{"hash":"f97d88fd6eff563522c67aeb9ea20c1a1e5715ca","messageTitle":"Refactor TaskManager class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":17}}},{"hash":"18a171781310256df43ca28ef958c979b0042d98","messageTitle":"Refactor Parser class further by extracting substring-ing into a seperate method","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":6}}},{"hash":"b6016297ec67753eb22e19d654a1638e0bbf2249","messageTitle":"Refactor saving in Storage class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":27}}},{"hash":"065e4ca00bd78569bc28a15609fd7648052bd1b2","messageTitle":"Refactor DoneCommand and DeleteCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":20}}},{"hash":"a97aad9ca90e3089c375463ffe02e52134c16b44","messageTitle":"Extract the behavior of matching tasks to search query into a function","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":22}}},{"hash":"e3af5dfb848841a2795552e550fb72808126afa3","messageTitle":"Rename toSaveInfoString into toSaveFileString for Task classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":8}}},{"hash":"c6f1341b4d73128541d1f64c4727be2176e74c96","messageTitle":"Refactor loading in Storage class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":53}}},{"hash":"8a2e3ed926c9c4239293ed623348d5ff614df9b5","messageTitle":"Add stream in FindCommand","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"7768977274f2ce6b8825fa123941b4749dfb9f39","messageTitle":"Remove unused imports in Storage class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":2}}},{"hash":"adabaf926e363dbbbb5be6ea5efee36bfcbcfcdb","messageTitle":"Remove trailing whitespace in FindCommand class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}},{"hash":"d9fb42d4027b442fc81f71694671c9d9d49a307d","messageTitle":"Fix checkstyle issues in JUnit test scripts","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":69,"deletions":68}}},{"hash":"f432e5fdbcd6ead68eb97fb3e2a2c0f6e5e8895e","messageTitle":"Disable all inapplicable JUnit test","messageBody":"","tags":["A-CI"],"fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":0}}}]},{"date":"2021-02-07","commitResults":[{"hash":"52a7537bd7e77b1fc6305c58f8dbd1c1f765518c","messageTitle":"Add the ability to recognize and prevent adding of duplicate tasks","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":50,"deletions":7}}},{"hash":"20534ccc6c1dc9bc5e12a6bb9d74a780b6f34597","messageTitle":"Remove unnecessary println in TaskManager","messageBody":"","tags":["BCD-Extension"],"fileTypesAndContributionMap":{"java":{"insertions":0,"deletions":1}}}]},{"date":"2021-02-11","commitResults":[{"hash":"a4148586b21d4eef2767c8311fea44855b6cfc84","messageTitle":"Add circular clipping on display pictures","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":4}}},{"hash":"d81f0c8ce730e29d43612067a9cd8567d7915b14","messageTitle":"Add conversation bubble","messageBody":"","tags":["A-BetterGui"],"fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"bb1f0c39d4611916d598186dd618e9cbe1d517bd","messageTitle":"Add an user guide in README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":122,"deletions":8}}},{"hash":"5168801da103a330369ebdd7297baa3d56582b91","messageTitle":"Correct a heading in README.md","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":1,"deletions":1}}}]}]},"authorFileTypeContributionMap":{"Tomashiwa":{"java":2076,"md":118,"fxml":42,"sh":0,"bat":4,"gradle":23,"txt":21}},"authorContributionVariance":{"Tomashiwa":123149.42},"authorDisplayNameMap":{"Tomashiwa":"CS2103-W17-4 WONG..IANG"}}
