[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"internityz"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"internityz"},"content":""},{"lineNumber":15,"author":{"gitId":"internityz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"internityz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"internityz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"internityz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"internityz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"internityz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"internityz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"internityz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"internityz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"internityz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"internityz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"internityz"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"internityz"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"internityz"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"internityz"},"content":"    archiveBaseName \u003d \"ip\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"internityz":17,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"internityz"},"content":"Kawaii Kat chat bot is a desktop app for managing daily task, categorized into todo, deadline and event tasks. It optimized for use via a Command Line Interface (CLI) while still having the benefits or a Graphical User Interface (GUI)."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"internityz"},"content":"* [Quick Start](#quick-start)"},{"lineNumber":6,"author":{"gitId":"internityz"},"content":"* [Notes](#notes)"},{"lineNumber":7,"author":{"gitId":"internityz"},"content":"* Features "},{"lineNumber":8,"author":{"gitId":"internityz"},"content":"   * [Add a todo task: `todo`](#todo---adds-a-todo-task)"},{"lineNumber":9,"author":{"gitId":"internityz"},"content":"   * [Add an event task: `event`](#event---adds-an-event-task)"},{"lineNumber":10,"author":{"gitId":"internityz"},"content":"   * [Add a deadline task: `deadline`](#deadline---adds-a-deadline-task)"},{"lineNumber":11,"author":{"gitId":"internityz"},"content":"   * [Mark a task as complete: `done`](#done---mark-a-task-as-complete)"},{"lineNumber":12,"author":{"gitId":"internityz"},"content":"   * [Delete a task from the task list: `delete`](#delete---delete-a-task)"},{"lineNumber":13,"author":{"gitId":"internityz"},"content":"   * [Exiting the programme and saving the current task list: `bye`](#bye---save-the-current-list-and-exits-the-program)"},{"lineNumber":14,"author":{"gitId":"internityz"},"content":"   * [Find for a task using a keyword: `find`](#find---locate-a-task-by-description)"},{"lineNumber":15,"author":{"gitId":"internityz"},"content":"   * [Display the current task in the list: `list`](#list---list-all-tasks)"},{"lineNumber":16,"author":{"gitId":"internityz"},"content":" * [FAQ](#faq)"},{"lineNumber":17,"author":{"gitId":"internityz"},"content":" * [Command summary](#command-summary)"},{"lineNumber":18,"author":{"gitId":"internityz"},"content":" "},{"lineNumber":19,"author":{"gitId":"internityz"},"content":"---"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"internityz"},"content":"## Quick Start"},{"lineNumber":22,"author":{"gitId":"internityz"},"content":"1. Ensure that you have Java `11` or above installed in your computer."},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"internityz"},"content":"2. Download the latest `chatbot.jar` from here."},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"internityz"},"content":"3. Copy the file to the folder you want to use as the *home folder* for your Chat Bot."},{"lineNumber":27,"author":{"gitId":"internityz"},"content":""},{"lineNumber":28,"author":{"gitId":"internityz"},"content":"4. Double-click the file to start the app. The GUI should appear in a few seconds and it should be identical to the one below."},{"lineNumber":29,"author":{"gitId":"internityz"},"content":"![Image of UI](/docs/Ui.png)"},{"lineNumber":30,"author":{"gitId":"internityz"},"content":""},{"lineNumber":31,"author":{"gitId":"internityz"},"content":"5. Typing the command in text box and press Enter to execute it. e.g. typing `list` and pressing Enter will show the list of tasks."},{"lineNumber":32,"author":{"gitId":"internityz"},"content":"   Some example commands you can try:"},{"lineNumber":33,"author":{"gitId":"internityz"},"content":"   * `todo TASK_DESCRIPTION`: Adds a todo task with the specified task descripton into the task list."},{"lineNumber":34,"author":{"gitId":"internityz"},"content":"   "},{"lineNumber":35,"author":{"gitId":"internityz"},"content":"   * `done 1`: Mark the first task in the list as completed with a tick."},{"lineNumber":36,"author":{"gitId":"internityz"},"content":"   "},{"lineNumber":37,"author":{"gitId":"internityz"},"content":"   * `delete 1`: Deletes the first task in the task list."},{"lineNumber":38,"author":{"gitId":"internityz"},"content":"   "},{"lineNumber":39,"author":{"gitId":"internityz"},"content":"   * `bye`:Exits the chat bot and saved the current list."},{"lineNumber":40,"author":{"gitId":"internityz"},"content":"   "},{"lineNumber":41,"author":{"gitId":"internityz"},"content":"6. Refer to the Features below for details of each command."},{"lineNumber":42,"author":{"gitId":"internityz"},"content":""},{"lineNumber":43,"author":{"gitId":"internityz"},"content":"---"},{"lineNumber":44,"author":{"gitId":"internityz"},"content":"## Notes"},{"lineNumber":45,"author":{"gitId":"internityz"},"content":""},{"lineNumber":46,"author":{"gitId":"internityz"},"content":"**Notes about the command format:**"},{"lineNumber":47,"author":{"gitId":"internityz"},"content":""},{"lineNumber":48,"author":{"gitId":"internityz"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user."},{"lineNumber":49,"author":{"gitId":"internityz"},"content":"  e.g in `todo TASK_DESCRIPTION`, `TASK_DESCRIPTION` is a parameter which can be used to describe the todo task."},{"lineNumber":50,"author":{"gitId":"internityz"},"content":"  "},{"lineNumber":51,"author":{"gitId":"internityz"},"content":"* Items in square brackets are optional."},{"lineNumber":52,"author":{"gitId":"internityz"},"content":"  e.g `event TASK_DESCRIPTION /at TASK_DATE [TASK_TIME]` can be used as `event TASK_DESCRIPTION /at TASK_DATE` OR `event TASK_DESCRIPTION /at TASK_DATE TASK_TIME`"},{"lineNumber":53,"author":{"gitId":"internityz"},"content":" "},{"lineNumber":54,"author":{"gitId":"internityz"},"content":" * Parameters order must be fixed."},{"lineNumber":55,"author":{"gitId":"internityz"},"content":" "},{"lineNumber":56,"author":{"gitId":"internityz"},"content":" * If a parameter is expected only once in the command but you specified it multiple times, the chat bot will display an incorrect input."},{"lineNumber":57,"author":{"gitId":"internityz"},"content":"   e.g `delete 1 2`"},{"lineNumber":58,"author":{"gitId":"internityz"},"content":" "},{"lineNumber":59,"author":{"gitId":"internityz"},"content":" * Extraneous parameters for commands that do not take in parameters (such as `list` and `bye`) will result in chat bot returning a incorrect input message."},{"lineNumber":60,"author":{"gitId":"internityz"},"content":"   e.g `list 123`"},{"lineNumber":61,"author":{"gitId":"internityz"},"content":" "},{"lineNumber":62,"author":{"gitId":"internityz"},"content":" --- "},{"lineNumber":63,"author":{"gitId":"internityz"},"content":" "},{"lineNumber":64,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"internityz"},"content":"### `list` - List all tasks"},{"lineNumber":67,"author":{"gitId":"internityz"},"content":""},{"lineNumber":68,"author":{"gitId":"internityz"},"content":"Shows a list of all tasks in the task list."},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"internityz"},"content":"Format: `list`"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"internityz"},"content":"### `todo` - Adds a todo task"},{"lineNumber":73,"author":{"gitId":"-"},"content":""},{"lineNumber":74,"author":{"gitId":"internityz"},"content":"Add a todo task with the specified task description into the task list."},{"lineNumber":75,"author":{"gitId":"internityz"},"content":""},{"lineNumber":76,"author":{"gitId":"internityz"},"content":"Format: `todo TASK_DESCRIPTION`"},{"lineNumber":77,"author":{"gitId":"-"},"content":""},{"lineNumber":78,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":79,"author":{"gitId":"internityz"},"content":"* `todo Laundry`"},{"lineNumber":80,"author":{"gitId":"internityz"},"content":"* `todo Read a book`"},{"lineNumber":81,"author":{"gitId":"internityz"},"content":""},{"lineNumber":82,"author":{"gitId":"internityz"},"content":"### `event` - Adds an event task"},{"lineNumber":83,"author":{"gitId":"internityz"},"content":""},{"lineNumber":84,"author":{"gitId":"internityz"},"content":"Add a event task with the specified task description, date and time into the task list."},{"lineNumber":85,"author":{"gitId":"internityz"},"content":""},{"lineNumber":86,"author":{"gitId":"internityz"},"content":"Format: `event /at TASK_DESCRIPTION [TASK_TIME]`"},{"lineNumber":87,"author":{"gitId":"internityz"},"content":"\u003e**NOTE**: TASK_TIME is optional"},{"lineNumber":88,"author":{"gitId":"internityz"},"content":""},{"lineNumber":89,"author":{"gitId":"internityz"},"content":"Example of usage: "},{"lineNumber":90,"author":{"gitId":"internityz"},"content":"* `event Concert /at 2020-02-10` add an Concert `event` that is happening at 10 Feb 2020."},{"lineNumber":91,"author":{"gitId":"internityz"},"content":"* `event Audition /at 2020-02-11 10:10` add an Audition `event` that is happening at 11 Feb 2020 10.10am."},{"lineNumber":92,"author":{"gitId":"internityz"},"content":""},{"lineNumber":93,"author":{"gitId":"internityz"},"content":"### `deadline` - Adds a deadline task"},{"lineNumber":94,"author":{"gitId":"internityz"},"content":""},{"lineNumber":95,"author":{"gitId":"internityz"},"content":"Add a deadline task with the specified task description, date and time into the task list."},{"lineNumber":96,"author":{"gitId":"internityz"},"content":""},{"lineNumber":97,"author":{"gitId":"internityz"},"content":"Format: `deadline /by TASK_DESCRIPTION [TASK_TIME]`"},{"lineNumber":98,"author":{"gitId":"internityz"},"content":"\u003e**NOTE**: TASK_TIME is optional"},{"lineNumber":99,"author":{"gitId":"internityz"},"content":""},{"lineNumber":100,"author":{"gitId":"internityz"},"content":"Example of usage: "},{"lineNumber":101,"author":{"gitId":"internityz"},"content":"* `deadline Do Laundry /by 2020-02-10` add a \"Do Laundry\" `deadline` that is happening at 10 Feb 2020."},{"lineNumber":102,"author":{"gitId":"internityz"},"content":"* `deadline Read a book /by 2020-02-11 10:10`add a \"Read a book\" `deadline` that is happening at 11 Feb 2020 10.10am."},{"lineNumber":103,"author":{"gitId":"internityz"},"content":""},{"lineNumber":104,"author":{"gitId":"internityz"},"content":"### `delete` - Delete a task"},{"lineNumber":105,"author":{"gitId":"internityz"},"content":""},{"lineNumber":106,"author":{"gitId":"internityz"},"content":"Delete a specified task from the task list."},{"lineNumber":107,"author":{"gitId":"internityz"},"content":""},{"lineNumber":108,"author":{"gitId":"internityz"},"content":"Format: `delete INDEX`"},{"lineNumber":109,"author":{"gitId":"internityz"},"content":"  * Deletes the task at the specified `INDEX`."},{"lineNumber":110,"author":{"gitId":"internityz"},"content":"  * The index refers to the index number shown in the displayed task list."},{"lineNumber":111,"author":{"gitId":"internityz"},"content":"  * The index **must be a positive integer** 1,2, 3, ..."},{"lineNumber":112,"author":{"gitId":"internityz"},"content":""},{"lineNumber":113,"author":{"gitId":"internityz"},"content":"Example of usage: "},{"lineNumber":114,"author":{"gitId":"internityz"},"content":"* `list` followed by `delete 1` deletes the 1st task in the task list"},{"lineNumber":115,"author":{"gitId":"internityz"},"content":""},{"lineNumber":116,"author":{"gitId":"internityz"},"content":"### `done` - Mark a task as complete"},{"lineNumber":117,"author":{"gitId":"internityz"},"content":""},{"lineNumber":118,"author":{"gitId":"internityz"},"content":"Mark a specified task from the task list as complete."},{"lineNumber":119,"author":{"gitId":"internityz"},"content":""},{"lineNumber":120,"author":{"gitId":"internityz"},"content":"Format: `done INDEX`"},{"lineNumber":121,"author":{"gitId":"internityz"},"content":"  * Mark the task at the specified `INDEX`as complete."},{"lineNumber":122,"author":{"gitId":"internityz"},"content":"  * The index refers to the index number shown in the displayed task list."},{"lineNumber":123,"author":{"gitId":"internityz"},"content":"  * The index **must be a positive integer** 1,2, 3, ..."},{"lineNumber":124,"author":{"gitId":"internityz"},"content":""},{"lineNumber":125,"author":{"gitId":"internityz"},"content":"Example of usage: "},{"lineNumber":126,"author":{"gitId":"internityz"},"content":"* `list` followed by `done 1` marks the 1st task in the task list as complete"},{"lineNumber":127,"author":{"gitId":"internityz"},"content":""},{"lineNumber":128,"author":{"gitId":"internityz"},"content":"### `find` - Locate a task by description"},{"lineNumber":129,"author":{"gitId":"internityz"},"content":""},{"lineNumber":130,"author":{"gitId":"internityz"},"content":"Finds the task with the specified description containing any of the given keywords."},{"lineNumber":131,"author":{"gitId":"internityz"},"content":""},{"lineNumber":132,"author":{"gitId":"internityz"},"content":"Format: `find KEYWORD [MORE_KEYWORD]`"},{"lineNumber":133,"author":{"gitId":"internityz"},"content":"  * The search is case-insensitive. e.g `laundry` will match `Laundry`"},{"lineNumber":134,"author":{"gitId":"internityz"},"content":"  * Partial matching words will be shown. e.g `Laundry` will match `Laundrys`"},{"lineNumber":135,"author":{"gitId":"internityz"},"content":""},{"lineNumber":136,"author":{"gitId":"internityz"},"content":"Example of usage: "},{"lineNumber":137,"author":{"gitId":"internityz"},"content":"* `find Concer` could returns task with description `Concerts` and `Concert`"},{"lineNumber":138,"author":{"gitId":"internityz"},"content":""},{"lineNumber":139,"author":{"gitId":"internityz"},"content":"### `bye` - Save the current list and exits the program"},{"lineNumber":140,"author":{"gitId":"internityz"},"content":""},{"lineNumber":141,"author":{"gitId":"internityz"},"content":"Save the current task list into the same directory as `data.txt` and exits."},{"lineNumber":142,"author":{"gitId":"internityz"},"content":""},{"lineNumber":143,"author":{"gitId":"internityz"},"content":"Format:`bye`"},{"lineNumber":144,"author":{"gitId":"internityz"},"content":""},{"lineNumber":145,"author":{"gitId":"internityz"},"content":"---"},{"lineNumber":146,"author":{"gitId":"internityz"},"content":""},{"lineNumber":147,"author":{"gitId":"internityz"},"content":"## FAQ"},{"lineNumber":148,"author":{"gitId":"-"},"content":""},{"lineNumber":149,"author":{"gitId":"internityz"},"content":"**Q**: How do i transfer my data to another Computer?"},{"lineNumber":150,"author":{"gitId":"internityz"},"content":""},{"lineNumber":151,"author":{"gitId":"internityz"},"content":"**A**: Install the app in the other compuer and overwrite the empty data file it creates with the file that contains the data of your previous Chat Bot home folder."},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"internityz"},"content":"---"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"internityz"},"content":"## Command summary"},{"lineNumber":156,"author":{"gitId":"-"},"content":""},{"lineNumber":157,"author":{"gitId":"internityz"},"content":"**Action**|**Format, Examples**"},{"lineNumber":158,"author":{"gitId":"internityz"},"content":"----------|---------------------"},{"lineNumber":159,"author":{"gitId":"internityz"},"content":"**todo** | `todo TASK_DESCRIPTION.` e.g `todo Laundry`"},{"lineNumber":160,"author":{"gitId":"internityz"},"content":"**deadline** | `deadline TASK_DESCRIPTION /by TASK_DATE [TASK_TIME]` e.g `event do homework /by 2020-02-10 10:10` or `event do homework /at 2020-02-10`"},{"lineNumber":161,"author":{"gitId":"internityz"},"content":"**event** | `event TASK_DESCRIPTION /at TASK_DATE [TASK_TIME]` e.g `event concert /at 2020-02-10 10:10` or `event concert /at 2020-02-10`"},{"lineNumber":162,"author":{"gitId":"internityz"},"content":"**delete** | `delete INDEX` e.g `list` followed by `delete 1` deletes the 1st task in the task list"},{"lineNumber":163,"author":{"gitId":"internityz"},"content":"**done** | `done INDEX` e.g `list` followed by `done 1` marks the 1st task in the task list as complete"},{"lineNumber":164,"author":{"gitId":"internityz"},"content":"**find** | `find KEY_WORD [MORE_KEYWORD]` e.g `find Concert` could returns task with description `Concerts` and `Concert`"},{"lineNumber":165,"author":{"gitId":"internityz"},"content":"**list** | `list`"},{"lineNumber":166,"author":{"gitId":"internityz"},"content":"**exit and save** | `bye`"}],"authorContributionMap":{"internityz":149,"-":17}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"internityz"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"-"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"internityz"},"content":"if exist \"%JAVA_EXE%\" goto execute"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"-"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":":execute"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@rem Setup the command line"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"internityz"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"@rem Execute Gradle"},{"lineNumber":74,"author":{"gitId":"internityz"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":":end"},{"lineNumber":77,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":78,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":":fail"},{"lineNumber":81,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":82,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":83,"author":{"gitId":"-"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":84,"author":{"gitId":"-"},"content":"exit /b 1"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":":mainEnd"},{"lineNumber":87,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":":omega"}],"authorContributionMap":{"internityz":4,"-":85}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"internityz"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"internityz"},"content":""},{"lineNumber":3,"author":{"gitId":"internityz"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"internityz"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"internityz"},"content":" */"},{"lineNumber":6,"author":{"gitId":"internityz"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"internityz"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"internityz"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"internityz"},"content":"}"}],"authorContributionMap":{"internityz":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"internityz"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"internityz"},"content":""},{"lineNumber":3,"author":{"gitId":"internityz"},"content":"import gui.Gui;"},{"lineNumber":4,"author":{"gitId":"internityz"},"content":"import gui.MainWindow;"},{"lineNumber":5,"author":{"gitId":"internityz"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"internityz"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"internityz"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"internityz"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"internityz"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"internityz"},"content":""},{"lineNumber":11,"author":{"gitId":"internityz"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"internityz"},"content":" * A GUI for Duke using FXML."},{"lineNumber":13,"author":{"gitId":"internityz"},"content":" */"},{"lineNumber":14,"author":{"gitId":"internityz"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"internityz"},"content":""},{"lineNumber":16,"author":{"gitId":"internityz"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"internityz"},"content":"    public void start(Stage stage) {"},{"lineNumber":18,"author":{"gitId":"internityz"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"internityz"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":20,"author":{"gitId":"internityz"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":21,"author":{"gitId":"internityz"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":22,"author":{"gitId":"internityz"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"internityz"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke();"},{"lineNumber":24,"author":{"gitId":"internityz"},"content":"            stage.show();"},{"lineNumber":25,"author":{"gitId":"internityz"},"content":"        } catch (IOException e) {"},{"lineNumber":26,"author":{"gitId":"internityz"},"content":"            e.printStackTrace();"},{"lineNumber":27,"author":{"gitId":"internityz"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"internityz"},"content":"}"}],"authorContributionMap":{"internityz":29}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"internityz"},"content":"package exception;"},{"lineNumber":2,"author":{"gitId":"internityz"},"content":""},{"lineNumber":3,"author":{"gitId":"internityz"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"internityz"},"content":" * public class DukeException"},{"lineNumber":5,"author":{"gitId":"internityz"},"content":" * extends Exception"},{"lineNumber":6,"author":{"gitId":"internityz"},"content":" *"},{"lineNumber":7,"author":{"gitId":"internityz"},"content":" * DukeException is a form of Throwable that indicates conditions that a reasonable application might want to catch."},{"lineNumber":8,"author":{"gitId":"internityz"},"content":" */"},{"lineNumber":9,"author":{"gitId":"internityz"},"content":""},{"lineNumber":10,"author":{"gitId":"internityz"},"content":"public class DukeException extends Exception {"},{"lineNumber":11,"author":{"gitId":"internityz"},"content":""},{"lineNumber":12,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"internityz"},"content":"     * Constructs a new DukeException with the specified detail message."},{"lineNumber":14,"author":{"gitId":"internityz"},"content":"     * @param message DukeException error message"},{"lineNumber":15,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"internityz"},"content":"    public DukeException(String message) {"},{"lineNumber":17,"author":{"gitId":"internityz"},"content":"        super(message);"},{"lineNumber":18,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"internityz"},"content":""},{"lineNumber":20,"author":{"gitId":"internityz"},"content":"}"}],"authorContributionMap":{"internityz":20}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"internityz"},"content":"package gui;"},{"lineNumber":2,"author":{"gitId":"internityz"},"content":""},{"lineNumber":3,"author":{"gitId":"internityz"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"internityz"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"internityz"},"content":""},{"lineNumber":6,"author":{"gitId":"internityz"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"internityz"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"internityz"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"internityz"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"internityz"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"internityz"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"internityz"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"internityz"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"internityz"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"internityz"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"internityz"},"content":""},{"lineNumber":17,"author":{"gitId":"internityz"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"internityz"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"internityz"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"internityz"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"internityz"},"content":" */"},{"lineNumber":22,"author":{"gitId":"internityz"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"internityz"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"internityz"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"internityz"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"internityz"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"internityz"},"content":""},{"lineNumber":28,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"internityz"},"content":"     * Constructs a DialogBox with specified \u003ccode\u003elabel\u003c/code\u003e l and \u003ccode\u003eImageView\u003c/code\u003e iv."},{"lineNumber":30,"author":{"gitId":"internityz"},"content":"     * @param l label"},{"lineNumber":31,"author":{"gitId":"internityz"},"content":"     * @param iv image view"},{"lineNumber":32,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"internityz"},"content":"    public DialogBox(Label l, ImageView iv) {"},{"lineNumber":34,"author":{"gitId":"internityz"},"content":"        displayPicture \u003d iv;"},{"lineNumber":35,"author":{"gitId":"internityz"},"content":""},{"lineNumber":36,"author":{"gitId":"internityz"},"content":"        l.setWrapText(true);"},{"lineNumber":37,"author":{"gitId":"internityz"},"content":"        displayPicture.setFitWidth(100.0);"},{"lineNumber":38,"author":{"gitId":"internityz"},"content":"        displayPicture.setFitHeight(100.0);"},{"lineNumber":39,"author":{"gitId":"internityz"},"content":""},{"lineNumber":40,"author":{"gitId":"internityz"},"content":"        this.setAlignment(Pos.TOP_RIGHT);"},{"lineNumber":41,"author":{"gitId":"internityz"},"content":"        this.getChildren().addAll(l, displayPicture);"},{"lineNumber":42,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"internityz"},"content":""},{"lineNumber":44,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"internityz"},"content":"     * Constructs a DialogBox with specified \u003ccode\u003eString\u003c/code\u003e text and \u003ccode\u003eImage/code\u003e img."},{"lineNumber":46,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"internityz"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":48,"author":{"gitId":"internityz"},"content":"        try {"},{"lineNumber":49,"author":{"gitId":"internityz"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":50,"author":{"gitId":"internityz"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":51,"author":{"gitId":"internityz"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":52,"author":{"gitId":"internityz"},"content":"            fxmlLoader.load();"},{"lineNumber":53,"author":{"gitId":"internityz"},"content":"        } catch (IOException e) {"},{"lineNumber":54,"author":{"gitId":"internityz"},"content":"            e.printStackTrace();"},{"lineNumber":55,"author":{"gitId":"internityz"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"internityz"},"content":""},{"lineNumber":57,"author":{"gitId":"internityz"},"content":"        dialog.setText(text);"},{"lineNumber":58,"author":{"gitId":"internityz"},"content":"        displayPicture.setImage(img);"},{"lineNumber":59,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"internityz"},"content":""},{"lineNumber":61,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"internityz"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":63,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"internityz"},"content":"    private void flip() {"},{"lineNumber":65,"author":{"gitId":"internityz"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":66,"author":{"gitId":"internityz"},"content":"        Collections.reverse(tmp);"},{"lineNumber":67,"author":{"gitId":"internityz"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":68,"author":{"gitId":"internityz"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":69,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"internityz"},"content":""},{"lineNumber":71,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"internityz"},"content":"     * Returns a DialogBox of the user with the specified \u003ccode\u003eString\u003c/code\u003e text and \u003ccode\u003eImage\u003c/code\u003e img."},{"lineNumber":73,"author":{"gitId":"internityz"},"content":"     * @param text text of the user"},{"lineNumber":74,"author":{"gitId":"internityz"},"content":"     * @param img image of the user"},{"lineNumber":75,"author":{"gitId":"internityz"},"content":"     * @return A DialogBox"},{"lineNumber":76,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"internityz"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":78,"author":{"gitId":"internityz"},"content":"        return new DialogBox(text, img);"},{"lineNumber":79,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"internityz"},"content":""},{"lineNumber":81,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"internityz"},"content":"     * Returns a DialogBox of the Duke with the specified \u003ccode\u003eString\u003c/code\u003e text and \u003ccode\u003eImage\u003c/code\u003e img."},{"lineNumber":83,"author":{"gitId":"internityz"},"content":"     * @param text text of chat bot"},{"lineNumber":84,"author":{"gitId":"internityz"},"content":"     * @param img image of chat bot"},{"lineNumber":85,"author":{"gitId":"internityz"},"content":"     * @return A DialogBox"},{"lineNumber":86,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"internityz"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":88,"author":{"gitId":"internityz"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":89,"author":{"gitId":"internityz"},"content":"        db.flip();"},{"lineNumber":90,"author":{"gitId":"internityz"},"content":"        return db;"},{"lineNumber":91,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"internityz"},"content":""},{"lineNumber":93,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"internityz"},"content":"     * Returns a DialogBox of the user with the specified \u003ccode\u003eLabel\u003c/code\u003e l and \u003ccode\u003eImageView\u003c/code\u003e iv."},{"lineNumber":95,"author":{"gitId":"internityz"},"content":"     * @param l label of user"},{"lineNumber":96,"author":{"gitId":"internityz"},"content":"     * @param iv image view of user"},{"lineNumber":97,"author":{"gitId":"internityz"},"content":"     * @return A DialogBox"},{"lineNumber":98,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"internityz"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {"},{"lineNumber":100,"author":{"gitId":"internityz"},"content":"        return new DialogBox(l, iv);"},{"lineNumber":101,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"internityz"},"content":""},{"lineNumber":103,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"internityz"},"content":"     * Returns a DialogBox of the Duke with the specified \u003ccode\u003eLabel\u003c/code\u003e l and \u003ccode\u003eImageView\u003c/code\u003e iv."},{"lineNumber":105,"author":{"gitId":"internityz"},"content":"     * @param l label of user"},{"lineNumber":106,"author":{"gitId":"internityz"},"content":"     * @param iv image view of user"},{"lineNumber":107,"author":{"gitId":"internityz"},"content":"     * @return A DialogBox"},{"lineNumber":108,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"internityz"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {"},{"lineNumber":110,"author":{"gitId":"internityz"},"content":"        var db \u003d new DialogBox(l, iv);"},{"lineNumber":111,"author":{"gitId":"internityz"},"content":"        db.flip();"},{"lineNumber":112,"author":{"gitId":"internityz"},"content":"        return db;"},{"lineNumber":113,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":114,"author":{"gitId":"internityz"},"content":"}"}],"authorContributionMap":{"internityz":114}},{"path":"src/main/java/gui/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"internityz"},"content":"package gui;"},{"lineNumber":2,"author":{"gitId":"internityz"},"content":""},{"lineNumber":3,"author":{"gitId":"internityz"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"internityz"},"content":"import javafx.scene.Scene;"},{"lineNumber":5,"author":{"gitId":"internityz"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"internityz"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"internityz"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"internityz"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"internityz"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"internityz"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"internityz"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":12,"author":{"gitId":"internityz"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"internityz"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"internityz"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"internityz"},"content":""},{"lineNumber":16,"author":{"gitId":"internityz"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"internityz"},"content":" * A Gui class for the ChatBot"},{"lineNumber":18,"author":{"gitId":"internityz"},"content":" */"},{"lineNumber":19,"author":{"gitId":"internityz"},"content":""},{"lineNumber":20,"author":{"gitId":"internityz"},"content":"public class Gui extends Application {"},{"lineNumber":21,"author":{"gitId":"internityz"},"content":""},{"lineNumber":22,"author":{"gitId":"internityz"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":23,"author":{"gitId":"internityz"},"content":"    private VBox dialogContainer;"},{"lineNumber":24,"author":{"gitId":"internityz"},"content":"    private TextField userInput;"},{"lineNumber":25,"author":{"gitId":"internityz"},"content":""},{"lineNumber":26,"author":{"gitId":"internityz"},"content":"    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"},{"lineNumber":27,"author":{"gitId":"internityz"},"content":"    private final Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/cat.png\"));"},{"lineNumber":28,"author":{"gitId":"internityz"},"content":""},{"lineNumber":29,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"internityz"},"content":"     * Starts up the Gui with the specified \u003ccode\u003eStage\u003c/code\u003e."},{"lineNumber":31,"author":{"gitId":"internityz"},"content":"     * @param stage Stage of application"},{"lineNumber":32,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"internityz"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"internityz"},"content":"    public void start(Stage stage) {"},{"lineNumber":35,"author":{"gitId":"internityz"},"content":"        //Step 1. Setting up required components"},{"lineNumber":36,"author":{"gitId":"internityz"},"content":""},{"lineNumber":37,"author":{"gitId":"internityz"},"content":"        //The container for the content of the chat to scroll."},{"lineNumber":38,"author":{"gitId":"internityz"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":39,"author":{"gitId":"internityz"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":40,"author":{"gitId":"internityz"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":41,"author":{"gitId":"internityz"},"content":""},{"lineNumber":42,"author":{"gitId":"internityz"},"content":"        userInput \u003d new TextField();"},{"lineNumber":43,"author":{"gitId":"internityz"},"content":"        Button sendButton \u003d new Button(\"Send\");"},{"lineNumber":44,"author":{"gitId":"internityz"},"content":""},{"lineNumber":45,"author":{"gitId":"internityz"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":46,"author":{"gitId":"internityz"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":47,"author":{"gitId":"internityz"},"content":""},{"lineNumber":48,"author":{"gitId":"internityz"},"content":"        Scene scene \u003d new Scene(mainLayout);"},{"lineNumber":49,"author":{"gitId":"internityz"},"content":""},{"lineNumber":50,"author":{"gitId":"internityz"},"content":"        stage.setScene(scene);"},{"lineNumber":51,"author":{"gitId":"internityz"},"content":"        stage.show();"},{"lineNumber":52,"author":{"gitId":"internityz"},"content":""},{"lineNumber":53,"author":{"gitId":"internityz"},"content":"        // more code to be added here later"},{"lineNumber":54,"author":{"gitId":"internityz"},"content":""},{"lineNumber":55,"author":{"gitId":"internityz"},"content":"        //Step 2. Formatting the window to look as expected"},{"lineNumber":56,"author":{"gitId":"internityz"},"content":"        stage.setTitle(\"Duke\");"},{"lineNumber":57,"author":{"gitId":"internityz"},"content":"        stage.setResizable(false);"},{"lineNumber":58,"author":{"gitId":"internityz"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":59,"author":{"gitId":"internityz"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":60,"author":{"gitId":"internityz"},"content":""},{"lineNumber":61,"author":{"gitId":"internityz"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":62,"author":{"gitId":"internityz"},"content":""},{"lineNumber":63,"author":{"gitId":"internityz"},"content":"        scrollPane.setPrefSize(385, 535);"},{"lineNumber":64,"author":{"gitId":"internityz"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":65,"author":{"gitId":"internityz"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":66,"author":{"gitId":"internityz"},"content":""},{"lineNumber":67,"author":{"gitId":"internityz"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":68,"author":{"gitId":"internityz"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":69,"author":{"gitId":"internityz"},"content":""},{"lineNumber":70,"author":{"gitId":"internityz"},"content":"        // You will need to import `javafx.scene.layout.Region` for this."},{"lineNumber":71,"author":{"gitId":"internityz"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":72,"author":{"gitId":"internityz"},"content":""},{"lineNumber":73,"author":{"gitId":"internityz"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":74,"author":{"gitId":"internityz"},"content":""},{"lineNumber":75,"author":{"gitId":"internityz"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":76,"author":{"gitId":"internityz"},"content":""},{"lineNumber":77,"author":{"gitId":"internityz"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":78,"author":{"gitId":"internityz"},"content":""},{"lineNumber":79,"author":{"gitId":"internityz"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":80,"author":{"gitId":"internityz"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":81,"author":{"gitId":"internityz"},"content":""},{"lineNumber":82,"author":{"gitId":"internityz"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);"},{"lineNumber":83,"author":{"gitId":"internityz"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":84,"author":{"gitId":"internityz"},"content":""},{"lineNumber":85,"author":{"gitId":"internityz"},"content":"        //Part 3. Add functionality to handle user input."},{"lineNumber":86,"author":{"gitId":"internityz"},"content":"        sendButton.setOnMouseClicked((event) -\u003e handleUserInput());"},{"lineNumber":87,"author":{"gitId":"internityz"},"content":""},{"lineNumber":88,"author":{"gitId":"internityz"},"content":"        userInput.setOnAction((event) -\u003e handleUserInput());"},{"lineNumber":89,"author":{"gitId":"internityz"},"content":""},{"lineNumber":90,"author":{"gitId":"internityz"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes."},{"lineNumber":91,"author":{"gitId":"internityz"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":92,"author":{"gitId":"internityz"},"content":""},{"lineNumber":93,"author":{"gitId":"internityz"},"content":""},{"lineNumber":94,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"internityz"},"content":""},{"lineNumber":96,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":97,"author":{"gitId":"internityz"},"content":"     * Iteration 1:"},{"lineNumber":98,"author":{"gitId":"internityz"},"content":"     * Creates a label with the specified text and adds it to the dialog container."},{"lineNumber":99,"author":{"gitId":"internityz"},"content":"     * @param text String containing text to add"},{"lineNumber":100,"author":{"gitId":"internityz"},"content":"     * @return a label with the specified text that has word wrap enabled."},{"lineNumber":101,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":102,"author":{"gitId":"internityz"},"content":"    private Label getDialogLabel(String text) {"},{"lineNumber":103,"author":{"gitId":"internityz"},"content":"        // You will need to import `javafx.scene.control.Label`."},{"lineNumber":104,"author":{"gitId":"internityz"},"content":"        Label textToAdd \u003d new Label(text);"},{"lineNumber":105,"author":{"gitId":"internityz"},"content":"        textToAdd.setWrapText(true);"},{"lineNumber":106,"author":{"gitId":"internityz"},"content":""},{"lineNumber":107,"author":{"gitId":"internityz"},"content":"        return textToAdd;"},{"lineNumber":108,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"internityz"},"content":""},{"lineNumber":110,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"internityz"},"content":"     * Iteration 2:"},{"lineNumber":112,"author":{"gitId":"internityz"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":113,"author":{"gitId":"internityz"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":114,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":115,"author":{"gitId":"internityz"},"content":"    private void handleUserInput() {"},{"lineNumber":116,"author":{"gitId":"internityz"},"content":"        Label userText \u003d new Label(userInput.getText());"},{"lineNumber":117,"author":{"gitId":"internityz"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));"},{"lineNumber":118,"author":{"gitId":"internityz"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":119,"author":{"gitId":"internityz"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),"},{"lineNumber":120,"author":{"gitId":"internityz"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"},{"lineNumber":121,"author":{"gitId":"internityz"},"content":"        );"},{"lineNumber":122,"author":{"gitId":"internityz"},"content":"        userInput.clear();"},{"lineNumber":123,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"internityz"},"content":""},{"lineNumber":125,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":126,"author":{"gitId":"internityz"},"content":"     * You should have your own function to generate a response to user input."},{"lineNumber":127,"author":{"gitId":"internityz"},"content":"     * Replace this stub with your completed method."},{"lineNumber":128,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":129,"author":{"gitId":"internityz"},"content":"    public String getResponse(String input) {"},{"lineNumber":130,"author":{"gitId":"internityz"},"content":"        return \"Duke heard: \" + input;"},{"lineNumber":131,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"internityz"},"content":""},{"lineNumber":133,"author":{"gitId":"internityz"},"content":"}"}],"authorContributionMap":{"internityz":133}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"internityz"},"content":"package gui;"},{"lineNumber":2,"author":{"gitId":"internityz"},"content":""},{"lineNumber":3,"author":{"gitId":"internityz"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"internityz"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"internityz"},"content":"import javafx.scene.control.Label;"},{"lineNumber":6,"author":{"gitId":"internityz"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"internityz"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"internityz"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"internityz"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":10,"author":{"gitId":"internityz"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"internityz"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"internityz"},"content":"import simulator.ChatBot;"},{"lineNumber":13,"author":{"gitId":"internityz"},"content":"import ui.Ui;"},{"lineNumber":14,"author":{"gitId":"internityz"},"content":""},{"lineNumber":15,"author":{"gitId":"internityz"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"internityz"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":17,"author":{"gitId":"internityz"},"content":" */"},{"lineNumber":18,"author":{"gitId":"internityz"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":19,"author":{"gitId":"internityz"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"internityz"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":21,"author":{"gitId":"internityz"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"internityz"},"content":"    private VBox dialogContainer;"},{"lineNumber":23,"author":{"gitId":"internityz"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"internityz"},"content":"    private TextField userInput;"},{"lineNumber":25,"author":{"gitId":"internityz"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"internityz"},"content":"    private Button sendButton;"},{"lineNumber":27,"author":{"gitId":"internityz"},"content":""},{"lineNumber":28,"author":{"gitId":"internityz"},"content":"    private ChatBot chatbot;"},{"lineNumber":29,"author":{"gitId":"internityz"},"content":""},{"lineNumber":30,"author":{"gitId":"internityz"},"content":""},{"lineNumber":31,"author":{"gitId":"internityz"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"},{"lineNumber":32,"author":{"gitId":"internityz"},"content":"    private final Image chatBotImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/cat.png\"));"},{"lineNumber":33,"author":{"gitId":"internityz"},"content":""},{"lineNumber":34,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"internityz"},"content":"     * initialize the MainWindow for ChatBot."},{"lineNumber":36,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"internityz"},"content":"    @FXML"},{"lineNumber":38,"author":{"gitId":"internityz"},"content":"    public void initialize() {"},{"lineNumber":39,"author":{"gitId":"internityz"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":40,"author":{"gitId":"internityz"},"content":"        chatbot \u003d new ChatBot();"},{"lineNumber":41,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"internityz"},"content":""},{"lineNumber":43,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"internityz"},"content":"     * Set a MainWindow for Duke."},{"lineNumber":45,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"internityz"},"content":"    public void setDuke() {"},{"lineNumber":47,"author":{"gitId":"internityz"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":48,"author":{"gitId":"internityz"},"content":"                new Label(Ui.WELCOME_MSG + Ui.LOGO),"},{"lineNumber":49,"author":{"gitId":"internityz"},"content":"                new Label(chatbot.startup()),"},{"lineNumber":50,"author":{"gitId":"internityz"},"content":"                DialogBox.getDukeDialog(Ui.GREETING_MSG, chatBotImage)"},{"lineNumber":51,"author":{"gitId":"internityz"},"content":"        );"},{"lineNumber":52,"author":{"gitId":"internityz"},"content":""},{"lineNumber":53,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"internityz"},"content":""},{"lineNumber":55,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"internityz"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":57,"author":{"gitId":"internityz"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":58,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"internityz"},"content":"    @FXML"},{"lineNumber":60,"author":{"gitId":"internityz"},"content":"    private void handleUserInput() {"},{"lineNumber":61,"author":{"gitId":"internityz"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":62,"author":{"gitId":"internityz"},"content":"        String response \u003d chatbot.process(input);"},{"lineNumber":63,"author":{"gitId":"internityz"},"content":""},{"lineNumber":64,"author":{"gitId":"internityz"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":65,"author":{"gitId":"internityz"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":66,"author":{"gitId":"internityz"},"content":"                DialogBox.getDukeDialog(response, chatBotImage)"},{"lineNumber":67,"author":{"gitId":"internityz"},"content":"        );"},{"lineNumber":68,"author":{"gitId":"internityz"},"content":"        userInput.clear();"},{"lineNumber":69,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"internityz"},"content":"}"}],"authorContributionMap":{"internityz":70}},{"path":"src/main/java/simulator/ChatBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"internityz"},"content":"package simulator;"},{"lineNumber":2,"author":{"gitId":"internityz"},"content":""},{"lineNumber":3,"author":{"gitId":"internityz"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"internityz"},"content":""},{"lineNumber":5,"author":{"gitId":"internityz"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"internityz"},"content":""},{"lineNumber":7,"author":{"gitId":"internityz"},"content":"import exception.DukeException;"},{"lineNumber":8,"author":{"gitId":"internityz"},"content":""},{"lineNumber":9,"author":{"gitId":"internityz"},"content":"import task.*;"},{"lineNumber":10,"author":{"gitId":"internityz"},"content":""},{"lineNumber":11,"author":{"gitId":"internityz"},"content":"import ui.Ui;"},{"lineNumber":12,"author":{"gitId":"internityz"},"content":""},{"lineNumber":13,"author":{"gitId":"internityz"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"internityz"},"content":" * ChatBot class that contains the function of the chat bot."},{"lineNumber":15,"author":{"gitId":"internityz"},"content":" */"},{"lineNumber":16,"author":{"gitId":"internityz"},"content":"public class ChatBot {"},{"lineNumber":17,"author":{"gitId":"internityz"},"content":"    private TaskList tasklist;"},{"lineNumber":18,"author":{"gitId":"internityz"},"content":"    private final Storage storage;"},{"lineNumber":19,"author":{"gitId":"internityz"},"content":"    private final Parser parser;"},{"lineNumber":20,"author":{"gitId":"internityz"},"content":""},{"lineNumber":21,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"internityz"},"content":"     * Construct a ChatBot object."},{"lineNumber":23,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"internityz"},"content":"    public ChatBot() {"},{"lineNumber":25,"author":{"gitId":"internityz"},"content":"        storage \u003d new Storage();"},{"lineNumber":26,"author":{"gitId":"internityz"},"content":"        parser \u003d new Parser();"},{"lineNumber":27,"author":{"gitId":"internityz"},"content":"        tasklist \u003d new TaskList();"},{"lineNumber":28,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"internityz"},"content":""},{"lineNumber":30,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"internityz"},"content":"     * Startup the chat bot by loading the task list from storage."},{"lineNumber":32,"author":{"gitId":"internityz"},"content":"     * @return null"},{"lineNumber":33,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"internityz"},"content":"    public String startup() {"},{"lineNumber":35,"author":{"gitId":"internityz"},"content":"        tasklist \u003d storage.load(tasklist);"},{"lineNumber":36,"author":{"gitId":"internityz"},"content":"        assert tasklist.size() \u003e\u003d 0 : \"size smaller than 0\";"},{"lineNumber":37,"author":{"gitId":"internityz"},"content":"        return Ui.retrieveList(tasklist.size() \u003d\u003d 0);"},{"lineNumber":38,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"internityz"},"content":""},{"lineNumber":40,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"internityz"},"content":"     * Saves the current task list into the storage."},{"lineNumber":42,"author":{"gitId":"internityz"},"content":"     * @return Save message"},{"lineNumber":43,"author":{"gitId":"internityz"},"content":"     * @throws IOException IOException"},{"lineNumber":44,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"internityz"},"content":"    public String save() throws IOException {"},{"lineNumber":46,"author":{"gitId":"internityz"},"content":"       return storage.save(tasklist);"},{"lineNumber":47,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"internityz"},"content":""},{"lineNumber":49,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"internityz"},"content":"     * Process the specified user \u003ccode\u003einput\u003c/code\u003e."},{"lineNumber":51,"author":{"gitId":"internityz"},"content":"     * @param input input from user"},{"lineNumber":52,"author":{"gitId":"internityz"},"content":"     * @return A String from ChatBot"},{"lineNumber":53,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"internityz"},"content":"    public String process(String input) {"},{"lineNumber":55,"author":{"gitId":"internityz"},"content":"        ArrayList\u003cString\u003e parsedInput \u003d parser.parseInput(input);"},{"lineNumber":56,"author":{"gitId":"internityz"},"content":"        try {"},{"lineNumber":57,"author":{"gitId":"internityz"},"content":"            String command \u003d parsedInput.get(0);"},{"lineNumber":58,"author":{"gitId":"internityz"},"content":"            if (command.equals(\"list\")) {"},{"lineNumber":59,"author":{"gitId":"internityz"},"content":"                return Ui.printList(tasklist);"},{"lineNumber":60,"author":{"gitId":"internityz"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"internityz"},"content":"            if (command.equals(\"done\") || command.equals(\"delete\")) {"},{"lineNumber":62,"author":{"gitId":"internityz"},"content":"                int index \u003d Integer.parseInt(parsedInput.get(1));"},{"lineNumber":63,"author":{"gitId":"internityz"},"content":"                return command.equals(\"done\") ? tasklist.completeTask(index)"},{"lineNumber":64,"author":{"gitId":"internityz"},"content":"                        : tasklist.deleteTask(index);"},{"lineNumber":65,"author":{"gitId":"internityz"},"content":"            } else {"},{"lineNumber":66,"author":{"gitId":"internityz"},"content":"                String description \u003d parsedInput.get(1);"},{"lineNumber":67,"author":{"gitId":"internityz"},"content":"                String duration;"},{"lineNumber":68,"author":{"gitId":"internityz"},"content":"                switch (command) {"},{"lineNumber":69,"author":{"gitId":"internityz"},"content":"                case \"find\":"},{"lineNumber":70,"author":{"gitId":"internityz"},"content":"                    return tasklist.find(description);"},{"lineNumber":71,"author":{"gitId":"internityz"},"content":"                case \"todo\":"},{"lineNumber":72,"author":{"gitId":"internityz"},"content":"                    if (detectAnomalies(command, description, null)) {"},{"lineNumber":73,"author":{"gitId":"internityz"},"content":"                        return Ui.TASK_CLASH_MSG;"},{"lineNumber":74,"author":{"gitId":"internityz"},"content":"                    }"},{"lineNumber":75,"author":{"gitId":"internityz"},"content":"                    return tasklist.addTask(new Todo(description));"},{"lineNumber":76,"author":{"gitId":"internityz"},"content":"                case \"deadline\":"},{"lineNumber":77,"author":{"gitId":"internityz"},"content":"                    duration \u003d parsedInput.get(2);"},{"lineNumber":78,"author":{"gitId":"internityz"},"content":"                    if (detectAnomalies(command, description, duration)) {"},{"lineNumber":79,"author":{"gitId":"internityz"},"content":"                        return Ui.TASK_CLASH_MSG;"},{"lineNumber":80,"author":{"gitId":"internityz"},"content":"                    }"},{"lineNumber":81,"author":{"gitId":"internityz"},"content":"                    return tasklist.addTask(new Deadline(description, duration));"},{"lineNumber":82,"author":{"gitId":"internityz"},"content":"                case \"event\":"},{"lineNumber":83,"author":{"gitId":"internityz"},"content":"                    duration \u003d parsedInput.get(2);"},{"lineNumber":84,"author":{"gitId":"internityz"},"content":"                    if (detectAnomalies(command, description, duration)) {"},{"lineNumber":85,"author":{"gitId":"internityz"},"content":"                        return Ui.TASK_CLASH_MSG;"},{"lineNumber":86,"author":{"gitId":"internityz"},"content":"                    }"},{"lineNumber":87,"author":{"gitId":"internityz"},"content":"                    return tasklist.addTask(new Event(description, duration));"},{"lineNumber":88,"author":{"gitId":"internityz"},"content":"                case \"bye\" :"},{"lineNumber":89,"author":{"gitId":"internityz"},"content":"                    return this.save();"},{"lineNumber":90,"author":{"gitId":"internityz"},"content":"                default:"},{"lineNumber":91,"author":{"gitId":"internityz"},"content":"                    throw new DukeException(\"☹ OOPS!!! Incorrect input, please check!\");"},{"lineNumber":92,"author":{"gitId":"internityz"},"content":"                }"},{"lineNumber":93,"author":{"gitId":"internityz"},"content":"            }"},{"lineNumber":94,"author":{"gitId":"internityz"},"content":"        } catch (DukeException err) {"},{"lineNumber":95,"author":{"gitId":"internityz"},"content":"            return err.getMessage();"},{"lineNumber":96,"author":{"gitId":"internityz"},"content":"        } catch (Exception err) {"},{"lineNumber":97,"author":{"gitId":"internityz"},"content":"            return \"☹ OOPS!!! Incorrect input, please check!\";"},{"lineNumber":98,"author":{"gitId":"internityz"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"internityz"},"content":""},{"lineNumber":101,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":102,"author":{"gitId":"internityz"},"content":"     * Detects whether the added task clashes with another task in the list by verifying the specified task"},{"lineNumber":103,"author":{"gitId":"internityz"},"content":"     * \u003ccode\u003etype\u003c/code\u003e, \u003ccode\u003edescription\u003c/code\u003e and \u003ccode\u003e duration\u003c/code\u003e."},{"lineNumber":104,"author":{"gitId":"internityz"},"content":"     * @param type type of task"},{"lineNumber":105,"author":{"gitId":"internityz"},"content":"     * @param description description of task"},{"lineNumber":106,"author":{"gitId":"internityz"},"content":"     * @param duration duration of task"},{"lineNumber":107,"author":{"gitId":"internityz"},"content":"     * @return true if clash is detected, otherwise false."},{"lineNumber":108,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"internityz"},"content":"    public boolean detectAnomalies(String type, String description, String duration) {"},{"lineNumber":110,"author":{"gitId":"internityz"},"content":"        if (type.equals(\"todo\")) {"},{"lineNumber":111,"author":{"gitId":"internityz"},"content":"            return tasklist.compareTodo(description);"},{"lineNumber":112,"author":{"gitId":"internityz"},"content":"        } else {"},{"lineNumber":113,"author":{"gitId":"internityz"},"content":"            String[] dateAndTime \u003d duration.split(\"\\\\s+\");"},{"lineNumber":114,"author":{"gitId":"internityz"},"content":"            if (type.equals(\"deadline\")) {"},{"lineNumber":115,"author":{"gitId":"internityz"},"content":"                return tasklist.compareDeadline(description, dateAndTime);"},{"lineNumber":116,"author":{"gitId":"internityz"},"content":"            }"},{"lineNumber":117,"author":{"gitId":"internityz"},"content":"            if (type.equals(\"event\")){"},{"lineNumber":118,"author":{"gitId":"internityz"},"content":"                return tasklist.compareEvent(description, dateAndTime);"},{"lineNumber":119,"author":{"gitId":"internityz"},"content":"            }"},{"lineNumber":120,"author":{"gitId":"internityz"},"content":"            return false;"},{"lineNumber":121,"author":{"gitId":"internityz"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"internityz"},"content":"}"}],"authorContributionMap":{"internityz":123}},{"path":"src/main/java/simulator/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"internityz"},"content":"package simulator;"},{"lineNumber":2,"author":{"gitId":"internityz"},"content":""},{"lineNumber":3,"author":{"gitId":"internityz"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"internityz"},"content":""},{"lineNumber":5,"author":{"gitId":"internityz"},"content":"import ui.Ui;"},{"lineNumber":6,"author":{"gitId":"internityz"},"content":""},{"lineNumber":7,"author":{"gitId":"internityz"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"internityz"},"content":" * Class \u003ccode\u003eParser\u003c/code\u003e deals with making sense of the user command."},{"lineNumber":9,"author":{"gitId":"internityz"},"content":" * Contains method \u003ccode\u003eparseInput\u003c/code\u003e."},{"lineNumber":10,"author":{"gitId":"internityz"},"content":" */"},{"lineNumber":11,"author":{"gitId":"internityz"},"content":"public class Parser {"},{"lineNumber":12,"author":{"gitId":"internityz"},"content":""},{"lineNumber":13,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"internityz"},"content":"     * Returns an \u003ccode\u003eArrayList\u003c/code\u003e of strings that contains the parsed \u003ccode\u003einput\u003c/code\u003e."},{"lineNumber":15,"author":{"gitId":"internityz"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"internityz"},"content":"     * @param input input parsed."},{"lineNumber":17,"author":{"gitId":"internityz"},"content":"     * @return list of parsed input."},{"lineNumber":18,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"internityz"},"content":"    public ArrayList\u003cString\u003e parseInput(String input) {"},{"lineNumber":20,"author":{"gitId":"internityz"},"content":"        ArrayList\u003cString\u003e parsedOutput \u003d new ArrayList\u003c\u003e();"},{"lineNumber":21,"author":{"gitId":"internityz"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"internityz"},"content":"            String[] contents \u003d input.split(\"\\\\s+\");"},{"lineNumber":23,"author":{"gitId":"internityz"},"content":"            String command \u003d contents[0];"},{"lineNumber":24,"author":{"gitId":"internityz"},"content":""},{"lineNumber":25,"author":{"gitId":"internityz"},"content":"            parsedOutput.add(command);"},{"lineNumber":26,"author":{"gitId":"internityz"},"content":"            parsedOutput.add(getDescription(contents));"},{"lineNumber":27,"author":{"gitId":"internityz"},"content":"            if (command.equals(\"event\") || command.equals(\"deadline\")) {"},{"lineNumber":28,"author":{"gitId":"internityz"},"content":"                parsedOutput.add(getDateAndTime(contents));"},{"lineNumber":29,"author":{"gitId":"internityz"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"internityz"},"content":"        } catch (Exception err) {"},{"lineNumber":31,"author":{"gitId":"internityz"},"content":"            Ui.printBox(\"☹ OOPS!!! Incorrect input, please check!\");"},{"lineNumber":32,"author":{"gitId":"internityz"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"internityz"},"content":"        return parsedOutput;"},{"lineNumber":34,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"internityz"},"content":""},{"lineNumber":36,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"internityz"},"content":"     * Gets the task description from the specified \u003ccode\u003econtent\u003c/code\u003e."},{"lineNumber":38,"author":{"gitId":"internityz"},"content":"     * @param contents input from user."},{"lineNumber":39,"author":{"gitId":"internityz"},"content":"     * @return String of task description."},{"lineNumber":40,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"internityz"},"content":"    public String getDescription(String[] contents) {"},{"lineNumber":42,"author":{"gitId":"internityz"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":43,"author":{"gitId":"internityz"},"content":"        for (int i \u003d 1; i \u003c contents.length; i++) {"},{"lineNumber":44,"author":{"gitId":"internityz"},"content":"            if (contents[i].equals(\"/by\") || contents[i].equals(\"/at\")) {"},{"lineNumber":45,"author":{"gitId":"internityz"},"content":"                break;"},{"lineNumber":46,"author":{"gitId":"internityz"},"content":"            } else {"},{"lineNumber":47,"author":{"gitId":"internityz"},"content":"                if (i !\u003d contents.length - 1) {"},{"lineNumber":48,"author":{"gitId":"internityz"},"content":"                    sb.append(contents[i]);"},{"lineNumber":49,"author":{"gitId":"internityz"},"content":"                    sb.append(\" \");"},{"lineNumber":50,"author":{"gitId":"internityz"},"content":"                } else {"},{"lineNumber":51,"author":{"gitId":"internityz"},"content":"                    sb.append(contents[i]);"},{"lineNumber":52,"author":{"gitId":"internityz"},"content":"                }"},{"lineNumber":53,"author":{"gitId":"internityz"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"internityz"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"internityz"},"content":"        return sb.toString();"},{"lineNumber":56,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"internityz"},"content":""},{"lineNumber":58,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"internityz"},"content":"     * Gets the task date and time from the specified \u003ccode\u003econtent\u003c/code\u003e."},{"lineNumber":60,"author":{"gitId":"internityz"},"content":"     * @param contents input from user."},{"lineNumber":61,"author":{"gitId":"internityz"},"content":"     * @return String of task date and time."},{"lineNumber":62,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"internityz"},"content":"    public String getDateAndTime(String[] contents) {"},{"lineNumber":64,"author":{"gitId":"internityz"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":65,"author":{"gitId":"internityz"},"content":"        for (int i \u003d contents.length - 1; i \u003e\u003d 0; i--) {"},{"lineNumber":66,"author":{"gitId":"internityz"},"content":"            if (contents[i - 1].equals(\"/by\") || contents[i - 1].equals(\"/at\")) {"},{"lineNumber":67,"author":{"gitId":"internityz"},"content":"                sb.insert(0, contents[i]);"},{"lineNumber":68,"author":{"gitId":"internityz"},"content":"                break;"},{"lineNumber":69,"author":{"gitId":"internityz"},"content":"            } else {"},{"lineNumber":70,"author":{"gitId":"internityz"},"content":"                sb.insert(0, contents[i]);"},{"lineNumber":71,"author":{"gitId":"internityz"},"content":"                sb.insert(0, \" \");"},{"lineNumber":72,"author":{"gitId":"internityz"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"internityz"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"internityz"},"content":"        return sb.toString();"},{"lineNumber":75,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"internityz"},"content":""},{"lineNumber":77,"author":{"gitId":"internityz"},"content":"}"}],"authorContributionMap":{"internityz":77}},{"path":"src/main/java/simulator/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"internityz"},"content":"package simulator;"},{"lineNumber":2,"author":{"gitId":"internityz"},"content":""},{"lineNumber":3,"author":{"gitId":"internityz"},"content":"import exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"internityz"},"content":""},{"lineNumber":5,"author":{"gitId":"internityz"},"content":"import java.io.BufferedWriter;"},{"lineNumber":6,"author":{"gitId":"internityz"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"internityz"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"internityz"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"internityz"},"content":""},{"lineNumber":10,"author":{"gitId":"internityz"},"content":"import task.Deadline;"},{"lineNumber":11,"author":{"gitId":"internityz"},"content":"import task.Event;"},{"lineNumber":12,"author":{"gitId":"internityz"},"content":"import task.Task;"},{"lineNumber":13,"author":{"gitId":"internityz"},"content":"import task.TaskList;"},{"lineNumber":14,"author":{"gitId":"internityz"},"content":"import task.Todo;"},{"lineNumber":15,"author":{"gitId":"internityz"},"content":""},{"lineNumber":16,"author":{"gitId":"internityz"},"content":"import java.util.Scanner;"},{"lineNumber":17,"author":{"gitId":"internityz"},"content":""},{"lineNumber":18,"author":{"gitId":"internityz"},"content":"import ui.Ui;"},{"lineNumber":19,"author":{"gitId":"internityz"},"content":""},{"lineNumber":20,"author":{"gitId":"internityz"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"internityz"},"content":" * Class \u003ccode\u003eStorage\u003c/code\u003e deals with loading tasks from file and saving task in the file."},{"lineNumber":22,"author":{"gitId":"internityz"},"content":" * Contains two method \u003ccode\u003eload\u003c/code\u003e and \u003ccode\u003esave\u003c/code\u003e."},{"lineNumber":23,"author":{"gitId":"internityz"},"content":" */"},{"lineNumber":24,"author":{"gitId":"internityz"},"content":"public class Storage {"},{"lineNumber":25,"author":{"gitId":"internityz"},"content":"    private final File data;"},{"lineNumber":26,"author":{"gitId":"internityz"},"content":""},{"lineNumber":27,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"internityz"},"content":"     * Constructs a storage with file to be loaded or saved initialized."},{"lineNumber":29,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"internityz"},"content":"    public Storage() {"},{"lineNumber":31,"author":{"gitId":"internityz"},"content":"        data \u003d new File(\"./data.txt\");"},{"lineNumber":32,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"internityz"},"content":""},{"lineNumber":34,"author":{"gitId":"internityz"},"content":""},{"lineNumber":35,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"internityz"},"content":"     * Creates a new task with specified \u003ccode\u003etype\u003c/code\u003e, \u003ccode\u003estatus\u003c/code\u003e and \u003ccode\u003edescription\u003c/code\u003e."},{"lineNumber":37,"author":{"gitId":"internityz"},"content":"     * @param type type of task."},{"lineNumber":38,"author":{"gitId":"internityz"},"content":"     * @param status status of task."},{"lineNumber":39,"author":{"gitId":"internityz"},"content":"     * @param description description of task."},{"lineNumber":40,"author":{"gitId":"internityz"},"content":"     * @return a Task object."},{"lineNumber":41,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"internityz"},"content":"    public Task newTask(String type, String status, String description) {"},{"lineNumber":43,"author":{"gitId":"internityz"},"content":"        Task task \u003d new Task();"},{"lineNumber":44,"author":{"gitId":"internityz"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"internityz"},"content":"            if (type.equals(\"T\")) {"},{"lineNumber":46,"author":{"gitId":"internityz"},"content":"                task \u003d new Todo(status, description);"},{"lineNumber":47,"author":{"gitId":"internityz"},"content":"            } else {"},{"lineNumber":48,"author":{"gitId":"internityz"},"content":"                String[] details \u003d description.split(\"@\");"},{"lineNumber":49,"author":{"gitId":"internityz"},"content":"                if (type.equals(\"D\")) {"},{"lineNumber":50,"author":{"gitId":"internityz"},"content":"                    task \u003d new Deadline(status, details);"},{"lineNumber":51,"author":{"gitId":"internityz"},"content":"                } else {"},{"lineNumber":52,"author":{"gitId":"internityz"},"content":"                    task \u003d new Event(status, details);"},{"lineNumber":53,"author":{"gitId":"internityz"},"content":"                }"},{"lineNumber":54,"author":{"gitId":"internityz"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"internityz"},"content":"        } catch (DukeException ex) {"},{"lineNumber":56,"author":{"gitId":"internityz"},"content":"            Ui.printBox(ex.getMessage());"},{"lineNumber":57,"author":{"gitId":"internityz"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"internityz"},"content":"            return task;"},{"lineNumber":59,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"internityz"},"content":""},{"lineNumber":61,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"internityz"},"content":"     * Loads from the file into the the specified \u003ccode\u003elist\u003c/code\u003e and returns a \u003ccode\u003eTaskList\u003c/code\u003e."},{"lineNumber":63,"author":{"gitId":"internityz"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"internityz"},"content":"     * @param list tasks loaded."},{"lineNumber":65,"author":{"gitId":"internityz"},"content":"     * @return loaded list."},{"lineNumber":66,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"internityz"},"content":"    public TaskList load(TaskList list) {"},{"lineNumber":68,"author":{"gitId":"internityz"},"content":"        try {"},{"lineNumber":69,"author":{"gitId":"internityz"},"content":"            if (!data.createNewFile()) {"},{"lineNumber":70,"author":{"gitId":"internityz"},"content":"                Scanner sc \u003d new Scanner(data);"},{"lineNumber":71,"author":{"gitId":"internityz"},"content":"                while (sc.hasNext()) {"},{"lineNumber":72,"author":{"gitId":"internityz"},"content":"                    String[] content \u003d sc.nextLine().split(\"\\\\|\");"},{"lineNumber":73,"author":{"gitId":"internityz"},"content":"                    String type \u003d content[0];"},{"lineNumber":74,"author":{"gitId":"internityz"},"content":"                    String status \u003d content[1];"},{"lineNumber":75,"author":{"gitId":"internityz"},"content":"                    Task task \u003d newTask(type, status, content[2]);"},{"lineNumber":76,"author":{"gitId":"internityz"},"content":"                    list.addTask(task);"},{"lineNumber":77,"author":{"gitId":"internityz"},"content":"                }"},{"lineNumber":78,"author":{"gitId":"internityz"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"internityz"},"content":"        } catch (IOException ex) {"},{"lineNumber":80,"author":{"gitId":"internityz"},"content":"            Ui.printBox(ex.getMessage());"},{"lineNumber":81,"author":{"gitId":"internityz"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"internityz"},"content":"        return list;"},{"lineNumber":83,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"internityz"},"content":""},{"lineNumber":85,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"internityz"},"content":"     * Save the task in the specified \u003ccode\u003elist\u003c/code\u003e into the file."},{"lineNumber":87,"author":{"gitId":"internityz"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"internityz"},"content":"     * @param list tasks saved"},{"lineNumber":89,"author":{"gitId":"internityz"},"content":"     * @throws IOException IOException if file not found"},{"lineNumber":90,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"internityz"},"content":"    public String save(TaskList list) throws IOException {"},{"lineNumber":92,"author":{"gitId":"internityz"},"content":"        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(data));"},{"lineNumber":93,"author":{"gitId":"internityz"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":94,"author":{"gitId":"internityz"},"content":"            Task task \u003d list.get(i);"},{"lineNumber":95,"author":{"gitId":"internityz"},"content":"            String status \u003d task.getStatus();"},{"lineNumber":96,"author":{"gitId":"internityz"},"content":"            String type \u003d task.getType();"},{"lineNumber":97,"author":{"gitId":"internityz"},"content":"            String description \u003d task.getDetails();"},{"lineNumber":98,"author":{"gitId":"internityz"},"content":"            assert type.equals(\"T\") || type.equals(\"D\") || type.equals(\"E\")"},{"lineNumber":99,"author":{"gitId":"internityz"},"content":"                    : \"Error! Not event,deadline or todo task\";"},{"lineNumber":100,"author":{"gitId":"internityz"},"content":"            // check whether the saved data is a todo"},{"lineNumber":101,"author":{"gitId":"internityz"},"content":"            if (type.equals(\"T\")) {"},{"lineNumber":102,"author":{"gitId":"internityz"},"content":"                writer.write(type + \"|\" + status + \"|\" + description);"},{"lineNumber":103,"author":{"gitId":"internityz"},"content":"            } else {"},{"lineNumber":104,"author":{"gitId":"internityz"},"content":"                // Check whether the saved data is a deadline or event"},{"lineNumber":105,"author":{"gitId":"internityz"},"content":"                String date \u003d type.equals(\"D\") ? ((Deadline) task).getDate() : ((Event) task).getDate();"},{"lineNumber":106,"author":{"gitId":"internityz"},"content":"                String time;"},{"lineNumber":107,"author":{"gitId":"internityz"},"content":"                if (type.equals(\"D\")) {"},{"lineNumber":108,"author":{"gitId":"internityz"},"content":"                    time \u003d ((Deadline) task).getTime();"},{"lineNumber":109,"author":{"gitId":"internityz"},"content":"                } else {"},{"lineNumber":110,"author":{"gitId":"internityz"},"content":"                    time \u003d ((Event) task).getTime();"},{"lineNumber":111,"author":{"gitId":"internityz"},"content":"                }"},{"lineNumber":112,"author":{"gitId":"internityz"},"content":"                if (time \u003d\u003d null ) {"},{"lineNumber":113,"author":{"gitId":"internityz"},"content":"                    writer.write(type + \"|\" + status + \"|\" + description + \"@\" + date);"},{"lineNumber":114,"author":{"gitId":"internityz"},"content":"                } else {"},{"lineNumber":115,"author":{"gitId":"internityz"},"content":"                    writer.write(type + \"|\" + status + \"|\" + description + \"@\" + date + \"@\" + time);"},{"lineNumber":116,"author":{"gitId":"internityz"},"content":"                }"},{"lineNumber":117,"author":{"gitId":"internityz"},"content":"            }"},{"lineNumber":118,"author":{"gitId":"internityz"},"content":"            writer.newLine();"},{"lineNumber":119,"author":{"gitId":"internityz"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"internityz"},"content":"        writer.close();"},{"lineNumber":121,"author":{"gitId":"internityz"},"content":"        return Ui.SAVE_EXIT_MSG;"},{"lineNumber":122,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"internityz"},"content":"}"}],"authorContributionMap":{"internityz":123}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"internityz"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"internityz"},"content":""},{"lineNumber":3,"author":{"gitId":"internityz"},"content":"import static ui.Ui.printBox;"},{"lineNumber":4,"author":{"gitId":"internityz"},"content":""},{"lineNumber":5,"author":{"gitId":"internityz"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"internityz"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitId":"internityz"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"internityz"},"content":""},{"lineNumber":9,"author":{"gitId":"internityz"},"content":"import exception.DukeException;"},{"lineNumber":10,"author":{"gitId":"internityz"},"content":""},{"lineNumber":11,"author":{"gitId":"internityz"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"internityz"},"content":" * Class \u003ccode\u003eDeadline\u003c/code\u003e extends \u003ccode\u003eTask\u003c/code\u003e. It contains date"},{"lineNumber":13,"author":{"gitId":"internityz"},"content":" * and time which describes the task."},{"lineNumber":14,"author":{"gitId":"internityz"},"content":" */"},{"lineNumber":15,"author":{"gitId":"internityz"},"content":""},{"lineNumber":16,"author":{"gitId":"internityz"},"content":"public class Deadline extends Task {"},{"lineNumber":17,"author":{"gitId":"internityz"},"content":"    protected LocalDate date;"},{"lineNumber":18,"author":{"gitId":"internityz"},"content":"    protected LocalTime time;"},{"lineNumber":19,"author":{"gitId":"internityz"},"content":""},{"lineNumber":20,"author":{"gitId":"internityz"},"content":""},{"lineNumber":21,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"internityz"},"content":"     * Contructs a Deadline task with description as specified in \u003ccode\u003edescription\u003c/code\u003e, and the time and"},{"lineNumber":23,"author":{"gitId":"internityz"},"content":"     * date specified by \u003ccode\u003eduration\u003c/code\u003e argument."},{"lineNumber":24,"author":{"gitId":"internityz"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"internityz"},"content":"     * @param taskDescription task description."},{"lineNumber":26,"author":{"gitId":"internityz"},"content":"     * @throws DukeException DukeException if task date or description is empty."},{"lineNumber":27,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"internityz"},"content":"    public Deadline(String... taskDescription) throws DukeException {"},{"lineNumber":29,"author":{"gitId":"internityz"},"content":"        this.type \u003d \"D\";"},{"lineNumber":30,"author":{"gitId":"internityz"},"content":"        assert taskDescription.length \u003e\u003d 0: \"Error in length of taskDescription\";"},{"lineNumber":31,"author":{"gitId":"internityz"},"content":"        if (taskDescription.length \u003e\u003d 1) {"},{"lineNumber":32,"author":{"gitId":"internityz"},"content":"            this.description \u003d taskDescription[0];"},{"lineNumber":33,"author":{"gitId":"internityz"},"content":""},{"lineNumber":34,"author":{"gitId":"internityz"},"content":"            String[] input \u003d taskDescription[1].split(\"\\\\s+\");"},{"lineNumber":35,"author":{"gitId":"internityz"},"content":"            try {"},{"lineNumber":36,"author":{"gitId":"internityz"},"content":"                this.date \u003d LocalDate.parse(input[0]);"},{"lineNumber":37,"author":{"gitId":"internityz"},"content":"                this.time \u003d LocalTime.parse(input[1]);"},{"lineNumber":38,"author":{"gitId":"internityz"},"content":"            } catch (ArrayIndexOutOfBoundsException ex) {"},{"lineNumber":39,"author":{"gitId":"internityz"},"content":"                if (this.time \u003d\u003d null) {"},{"lineNumber":40,"author":{"gitId":"internityz"},"content":"                    printBox(\"WARNING! No Time Detected!\");"},{"lineNumber":41,"author":{"gitId":"internityz"},"content":"                } else if (this.date \u003d\u003d null) {"},{"lineNumber":42,"author":{"gitId":"internityz"},"content":"                    throw new DukeException(\"☹ OOPS!!! Date of Deadline cannot be empty, please check!\");"},{"lineNumber":43,"author":{"gitId":"internityz"},"content":"                } else {"},{"lineNumber":44,"author":{"gitId":"internityz"},"content":"                    throw new DukeException(\"☹ OOPS!!! Date \u0026 Time of Deadline cannot be empty, please check!\");"},{"lineNumber":45,"author":{"gitId":"internityz"},"content":"                }"},{"lineNumber":46,"author":{"gitId":"internityz"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"internityz"},"content":"        } else {"},{"lineNumber":48,"author":{"gitId":"internityz"},"content":"            if (taskDescription.length \u003d\u003d 0) {"},{"lineNumber":49,"author":{"gitId":"internityz"},"content":"                throw new DukeException(\"☹ OOPS!!! Description of Deadline cannot be empty, please check!\");"},{"lineNumber":50,"author":{"gitId":"internityz"},"content":"            } else {"},{"lineNumber":51,"author":{"gitId":"internityz"},"content":"                throw new DukeException(\"☹ OOPS!!! Date of Deadline cannot be empty, please check!\");"},{"lineNumber":52,"author":{"gitId":"internityz"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"internityz"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"internityz"},"content":""},{"lineNumber":56,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"internityz"},"content":"     * Contructs a Deadline task with status as specified by \u003ccode\u003estatus\u003c/code\u003e and the description,date and time"},{"lineNumber":58,"author":{"gitId":"internityz"},"content":"     * specified by \u003ccode\u003einput\u003c/code\u003e."},{"lineNumber":59,"author":{"gitId":"internityz"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"internityz"},"content":"     * @param status task status."},{"lineNumber":61,"author":{"gitId":"internityz"},"content":"     * @param input  task description,date and time."},{"lineNumber":62,"author":{"gitId":"internityz"},"content":"     * @throws DukeException DukeException if task date or description is empty."},{"lineNumber":63,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"internityz"},"content":"    public Deadline(String status, String[] input) throws DukeException {"},{"lineNumber":65,"author":{"gitId":"internityz"},"content":"        this.type \u003d \"D\";"},{"lineNumber":66,"author":{"gitId":"internityz"},"content":"        this.isDone \u003d status.equals(\"complete\");"},{"lineNumber":67,"author":{"gitId":"internityz"},"content":"        try {"},{"lineNumber":68,"author":{"gitId":"internityz"},"content":"            this.description \u003d input[0];"},{"lineNumber":69,"author":{"gitId":"internityz"},"content":"            this.date \u003d LocalDate.parse(input[1], DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));"},{"lineNumber":70,"author":{"gitId":"internityz"},"content":"            this.time \u003d LocalTime.parse(input[2], DateTimeFormatter.ofPattern(\"hh:mm a\"));"},{"lineNumber":71,"author":{"gitId":"internityz"},"content":"        } catch (ArrayIndexOutOfBoundsException ex) {"},{"lineNumber":72,"author":{"gitId":"internityz"},"content":"            if (this.time \u003d\u003d null) {"},{"lineNumber":73,"author":{"gitId":"internityz"},"content":"                printBox(\"WARNING!!! \\n\""},{"lineNumber":74,"author":{"gitId":"internityz"},"content":"                        + \"     Deadline with no Timing Specified Detected!\");"},{"lineNumber":75,"author":{"gitId":"internityz"},"content":"            } else if (this.date \u003d\u003d null) {"},{"lineNumber":76,"author":{"gitId":"internityz"},"content":"                throw new DukeException(\"☹ OOPS!!! Date of Deadline cannot be empty, please check!\");"},{"lineNumber":77,"author":{"gitId":"internityz"},"content":"            } else {"},{"lineNumber":78,"author":{"gitId":"internityz"},"content":"                throw new DukeException(\"☹ OOPS!!! Description of Deadline cannot be empty, please check!\");"},{"lineNumber":79,"author":{"gitId":"internityz"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"internityz"},"content":"        }"},{"lineNumber":81,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"internityz"},"content":""},{"lineNumber":83,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"internityz"},"content":"     * Returns a string of the task\u0027s date with the format \"dd MM yyyy\"."},{"lineNumber":85,"author":{"gitId":"internityz"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"internityz"},"content":"     * @return formatted date."},{"lineNumber":87,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"internityz"},"content":"    public String getDate() {"},{"lineNumber":89,"author":{"gitId":"internityz"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));"},{"lineNumber":90,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"internityz"},"content":""},{"lineNumber":92,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"internityz"},"content":"     * Return a string of the task\u0027s time with the format \"hh:mm a\"."},{"lineNumber":94,"author":{"gitId":"internityz"},"content":"     *"},{"lineNumber":95,"author":{"gitId":"internityz"},"content":"     * @return formatted time."},{"lineNumber":96,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"internityz"},"content":"    public String getTime() {"},{"lineNumber":98,"author":{"gitId":"internityz"},"content":"        if (this.time !\u003d null) {"},{"lineNumber":99,"author":{"gitId":"internityz"},"content":"            return this.time.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));"},{"lineNumber":100,"author":{"gitId":"internityz"},"content":"        } else {"},{"lineNumber":101,"author":{"gitId":"internityz"},"content":"            return null;"},{"lineNumber":102,"author":{"gitId":"internityz"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"internityz"},"content":""},{"lineNumber":105,"author":{"gitId":"internityz"},"content":"    @Override"},{"lineNumber":106,"author":{"gitId":"internityz"},"content":"    public String toString() {"},{"lineNumber":107,"author":{"gitId":"internityz"},"content":"        if (this.time \u003d\u003d null) {"},{"lineNumber":108,"author":{"gitId":"internityz"},"content":"            return \"[\" + this.type + \"]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description + \"(by: \""},{"lineNumber":109,"author":{"gitId":"internityz"},"content":"                    + this.getDate() + \")\";"},{"lineNumber":110,"author":{"gitId":"internityz"},"content":"        } else {"},{"lineNumber":111,"author":{"gitId":"internityz"},"content":"            return \"[\" + this.type + \"]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description + \"(by: \""},{"lineNumber":112,"author":{"gitId":"internityz"},"content":"                    + this.getDate() + \" \" + this.getTime() + \")\";"},{"lineNumber":113,"author":{"gitId":"internityz"},"content":"        }"},{"lineNumber":114,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"internityz"},"content":"}"}],"authorContributionMap":{"internityz":115}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"internityz"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"internityz"},"content":""},{"lineNumber":3,"author":{"gitId":"internityz"},"content":"import static ui.Ui.printBox;"},{"lineNumber":4,"author":{"gitId":"internityz"},"content":""},{"lineNumber":5,"author":{"gitId":"internityz"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"internityz"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitId":"internityz"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":8,"author":{"gitId":"internityz"},"content":""},{"lineNumber":9,"author":{"gitId":"internityz"},"content":"import exception.DukeException;"},{"lineNumber":10,"author":{"gitId":"internityz"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"internityz"},"content":" * Class \u003ccode\u003eEvent\u003c/code\u003e extends \u003ccode\u003eTask\u003c/code\u003e. It contains date"},{"lineNumber":12,"author":{"gitId":"internityz"},"content":" * and time which describes the task."},{"lineNumber":13,"author":{"gitId":"internityz"},"content":" */"},{"lineNumber":14,"author":{"gitId":"internityz"},"content":"public class Event extends Task {"},{"lineNumber":15,"author":{"gitId":"internityz"},"content":"    protected LocalDate date \u003d null;"},{"lineNumber":16,"author":{"gitId":"internityz"},"content":"    protected LocalTime time \u003d null;"},{"lineNumber":17,"author":{"gitId":"internityz"},"content":""},{"lineNumber":18,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"internityz"},"content":"     * Constructs a Event task with description specified by \u003ccode\u003edescription\u003c/code\u003e ,and date and time"},{"lineNumber":20,"author":{"gitId":"internityz"},"content":"     * specified by \u003ccode\u003eduration\u003c/code\u003e."},{"lineNumber":21,"author":{"gitId":"internityz"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"internityz"},"content":"     * @param taskDescription task description."},{"lineNumber":23,"author":{"gitId":"internityz"},"content":"     * @throws DukeException DukeException if task date or description is empty."},{"lineNumber":24,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"internityz"},"content":"    public Event(String... taskDescription) throws DukeException {"},{"lineNumber":26,"author":{"gitId":"internityz"},"content":"        this.type \u003d \"E\";"},{"lineNumber":27,"author":{"gitId":"internityz"},"content":"        assert taskDescription.length \u003e\u003d 0: \"Error in length of taskDescription\";"},{"lineNumber":28,"author":{"gitId":"internityz"},"content":"        if (taskDescription.length \u003e\u003d 1) {"},{"lineNumber":29,"author":{"gitId":"internityz"},"content":"            this.description \u003d taskDescription[0];"},{"lineNumber":30,"author":{"gitId":"internityz"},"content":"            String[] input \u003d taskDescription[1].split(\"\\\\s+\");"},{"lineNumber":31,"author":{"gitId":"internityz"},"content":"            try {"},{"lineNumber":32,"author":{"gitId":"internityz"},"content":"                this.date \u003d LocalDate.parse(input[0]);"},{"lineNumber":33,"author":{"gitId":"internityz"},"content":"                this.time \u003d LocalTime.parse(input[1]);"},{"lineNumber":34,"author":{"gitId":"internityz"},"content":"            } catch (ArrayIndexOutOfBoundsException ex) {"},{"lineNumber":35,"author":{"gitId":"internityz"},"content":"                if (this.time \u003d\u003d null) {"},{"lineNumber":36,"author":{"gitId":"internityz"},"content":"                    printBox(\"WARNING! No Time Detected!\");"},{"lineNumber":37,"author":{"gitId":"internityz"},"content":"                } else if (this.date \u003d\u003d null) {"},{"lineNumber":38,"author":{"gitId":"internityz"},"content":"                    throw new DukeException(\"☹ OOPS!!! Date of Event cannot be empty, please check!\");"},{"lineNumber":39,"author":{"gitId":"internityz"},"content":"                } else {"},{"lineNumber":40,"author":{"gitId":"internityz"},"content":"                    throw new DukeException(\"☹ OOPS!!! Date \u0026 Time of Event cannot be empty, please check!\");"},{"lineNumber":41,"author":{"gitId":"internityz"},"content":"                }"},{"lineNumber":42,"author":{"gitId":"internityz"},"content":"            }"},{"lineNumber":43,"author":{"gitId":"internityz"},"content":"        } else {"},{"lineNumber":44,"author":{"gitId":"internityz"},"content":"            if (taskDescription.length \u003d\u003d 0) {"},{"lineNumber":45,"author":{"gitId":"internityz"},"content":"                throw new DukeException(\"☹ OOPS!!! Description of Event cannot be empty, please check!\");"},{"lineNumber":46,"author":{"gitId":"internityz"},"content":"            } else {"},{"lineNumber":47,"author":{"gitId":"internityz"},"content":"                throw new DukeException(\"☹ OOPS!!! Date of Event cannot be empty, please check!\");"},{"lineNumber":48,"author":{"gitId":"internityz"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"internityz"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"internityz"},"content":""},{"lineNumber":52,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"internityz"},"content":"     * Contruct a Event task with status as specified by \u003ccode\u003estatus\u003c/code\u003e and the description,date and time"},{"lineNumber":54,"author":{"gitId":"internityz"},"content":"     * specified by \u003ccode\u003einput\u003c/code\u003e."},{"lineNumber":55,"author":{"gitId":"internityz"},"content":"     * @param status task status."},{"lineNumber":56,"author":{"gitId":"internityz"},"content":"     * @param input  task description,date and time."},{"lineNumber":57,"author":{"gitId":"internityz"},"content":"     * @throws DukeException DukeException if task date or description is empty."},{"lineNumber":58,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"internityz"},"content":""},{"lineNumber":60,"author":{"gitId":"internityz"},"content":"    public Event(String status, String[] input) throws DukeException {"},{"lineNumber":61,"author":{"gitId":"internityz"},"content":"        this.type \u003d \"E\";"},{"lineNumber":62,"author":{"gitId":"internityz"},"content":"        this.isDone \u003d status.equals(\"complete\");"},{"lineNumber":63,"author":{"gitId":"internityz"},"content":"        try {"},{"lineNumber":64,"author":{"gitId":"internityz"},"content":"            this.description \u003d input[0];"},{"lineNumber":65,"author":{"gitId":"internityz"},"content":"            this.date \u003d LocalDate.parse(input[1], DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));"},{"lineNumber":66,"author":{"gitId":"internityz"},"content":"            this.time \u003d LocalTime.parse(input[2], DateTimeFormatter.ofPattern(\"hh:mm a\"));"},{"lineNumber":67,"author":{"gitId":"internityz"},"content":"        } catch (ArrayIndexOutOfBoundsException ex) {"},{"lineNumber":68,"author":{"gitId":"internityz"},"content":"            if (this.time \u003d\u003d null) {"},{"lineNumber":69,"author":{"gitId":"internityz"},"content":"                printBox(\"WARNING!!! \\n\""},{"lineNumber":70,"author":{"gitId":"internityz"},"content":"                        + \"     Event with no Timing Specified Detected!\");"},{"lineNumber":71,"author":{"gitId":"internityz"},"content":"            } else if (this.date \u003d\u003d null) {"},{"lineNumber":72,"author":{"gitId":"internityz"},"content":"                throw new DukeException(\"☹ OOPS!!! Date of Event cannot be empty, please check!\");"},{"lineNumber":73,"author":{"gitId":"internityz"},"content":"            } else {"},{"lineNumber":74,"author":{"gitId":"internityz"},"content":"                throw new DukeException(\"☹ OOPS!!! Description of Event cannot be empty, please check!\");"},{"lineNumber":75,"author":{"gitId":"internityz"},"content":"            }"},{"lineNumber":76,"author":{"gitId":"internityz"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"internityz"},"content":""},{"lineNumber":79,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"internityz"},"content":"     * Returns a string of the task\u0027s date with the format \"dd MM yyyy\"."},{"lineNumber":81,"author":{"gitId":"internityz"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"internityz"},"content":"     * @return formatted date."},{"lineNumber":83,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":84,"author":{"gitId":"internityz"},"content":"    public String getDate() {"},{"lineNumber":85,"author":{"gitId":"internityz"},"content":"        return this.date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));"},{"lineNumber":86,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"internityz"},"content":""},{"lineNumber":88,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"internityz"},"content":"     * Return a string of the task\u0027s time with the format \"hh:mm a\"."},{"lineNumber":90,"author":{"gitId":"internityz"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"internityz"},"content":"     * @return formatted time."},{"lineNumber":92,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"internityz"},"content":"    public String getTime() {"},{"lineNumber":94,"author":{"gitId":"internityz"},"content":"        if (this.time !\u003d null) {"},{"lineNumber":95,"author":{"gitId":"internityz"},"content":"            return this.time.format(DateTimeFormatter.ofPattern(\"hh:mm a\"));"},{"lineNumber":96,"author":{"gitId":"internityz"},"content":"        } else {"},{"lineNumber":97,"author":{"gitId":"internityz"},"content":"            return null;"},{"lineNumber":98,"author":{"gitId":"internityz"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"internityz"},"content":""},{"lineNumber":101,"author":{"gitId":"internityz"},"content":""},{"lineNumber":102,"author":{"gitId":"internityz"},"content":"    @Override"},{"lineNumber":103,"author":{"gitId":"internityz"},"content":"    public String toString() {"},{"lineNumber":104,"author":{"gitId":"internityz"},"content":"        if (this.time \u003d\u003d null) {"},{"lineNumber":105,"author":{"gitId":"internityz"},"content":"            return \"[\" + this.type + \"]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description + \"(at: \""},{"lineNumber":106,"author":{"gitId":"internityz"},"content":"                    + this.getDate() + \")\";"},{"lineNumber":107,"author":{"gitId":"internityz"},"content":"        } else {"},{"lineNumber":108,"author":{"gitId":"internityz"},"content":"            return \"[\" + this.type + \"]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description + \"(at: \""},{"lineNumber":109,"author":{"gitId":"internityz"},"content":"                    + this.getDate() + \" \""},{"lineNumber":110,"author":{"gitId":"internityz"},"content":"                    + this.getTime() + \")\";"},{"lineNumber":111,"author":{"gitId":"internityz"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"internityz"},"content":""},{"lineNumber":114,"author":{"gitId":"internityz"},"content":"}"}],"authorContributionMap":{"internityz":114}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"internityz"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"internityz"},"content":""},{"lineNumber":3,"author":{"gitId":"internityz"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"internityz"},"content":" * Class \u003ccode\u003eTask\u003c/code\u003e represents a \u003ccode\u003eTask\u003c/code\u003eobject in a task list. It contains descriptions, type"},{"lineNumber":5,"author":{"gitId":"internityz"},"content":" * and isDone variables which describes the task"},{"lineNumber":6,"author":{"gitId":"internityz"},"content":" */"},{"lineNumber":7,"author":{"gitId":"internityz"},"content":""},{"lineNumber":8,"author":{"gitId":"internityz"},"content":""},{"lineNumber":9,"author":{"gitId":"internityz"},"content":"public class Task {"},{"lineNumber":10,"author":{"gitId":"internityz"},"content":"    protected String description;"},{"lineNumber":11,"author":{"gitId":"internityz"},"content":"    protected boolean isDone;"},{"lineNumber":12,"author":{"gitId":"internityz"},"content":"    protected String type;"},{"lineNumber":13,"author":{"gitId":"internityz"},"content":""},{"lineNumber":14,"author":{"gitId":"internityz"},"content":"    public Task() {"},{"lineNumber":15,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"internityz"},"content":""},{"lineNumber":17,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"internityz"},"content":"     * Returns the type of the task"},{"lineNumber":19,"author":{"gitId":"internityz"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"internityz"},"content":"     * @return type of the task."},{"lineNumber":21,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"internityz"},"content":"    public String getType() {"},{"lineNumber":23,"author":{"gitId":"internityz"},"content":"        return this.type;"},{"lineNumber":24,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"internityz"},"content":""},{"lineNumber":26,"author":{"gitId":"internityz"},"content":""},{"lineNumber":27,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"internityz"},"content":"     * Returns the status icon depending on the progress of the task."},{"lineNumber":29,"author":{"gitId":"internityz"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"internityz"},"content":"     * @return status icon"},{"lineNumber":31,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"internityz"},"content":"    public String getStatusIcon() {"},{"lineNumber":33,"author":{"gitId":"internityz"},"content":"        return (this.isDone ? \"\\u2713\" : \"\\u2718\"); // return tick or X symbols"},{"lineNumber":34,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"internityz"},"content":""},{"lineNumber":36,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"internityz"},"content":"     * Mark the task as complete"},{"lineNumber":38,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"internityz"},"content":"    public void setComplete() {"},{"lineNumber":40,"author":{"gitId":"internityz"},"content":"        this.isDone \u003d true;"},{"lineNumber":41,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"internityz"},"content":""},{"lineNumber":43,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"internityz"},"content":"     * Returns the status of the task"},{"lineNumber":45,"author":{"gitId":"internityz"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"internityz"},"content":"     * @return task status"},{"lineNumber":47,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"internityz"},"content":"    public String getStatus() {"},{"lineNumber":49,"author":{"gitId":"internityz"},"content":"        return (isDone ? \"complete\" : \"incomplete\");"},{"lineNumber":50,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"internityz"},"content":""},{"lineNumber":52,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"internityz"},"content":"     * Returns the task\u0027s description"},{"lineNumber":54,"author":{"gitId":"internityz"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"internityz"},"content":"     * @return task\u0027s description"},{"lineNumber":56,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"internityz"},"content":"    public String getDetails() {"},{"lineNumber":58,"author":{"gitId":"internityz"},"content":"        return this.description;"},{"lineNumber":59,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"internityz"},"content":""},{"lineNumber":61,"author":{"gitId":"internityz"},"content":"    @Override"},{"lineNumber":62,"author":{"gitId":"internityz"},"content":"    public String toString() {"},{"lineNumber":63,"author":{"gitId":"internityz"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":64,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"internityz"},"content":""},{"lineNumber":66,"author":{"gitId":"internityz"},"content":"}"}],"authorContributionMap":{"internityz":66}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"internityz"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"internityz"},"content":""},{"lineNumber":3,"author":{"gitId":"internityz"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"internityz"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"internityz"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":6,"author":{"gitId":"internityz"},"content":""},{"lineNumber":7,"author":{"gitId":"internityz"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"internityz"},"content":""},{"lineNumber":9,"author":{"gitId":"internityz"},"content":"import ui.Ui;"},{"lineNumber":10,"author":{"gitId":"internityz"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"internityz"},"content":" * Class \u003ccode\u003eTaskList\u003c/code\u003e represents a list of \u003ccode\u003eTask\u003c/code\u003eobject using \u003ccode\u003eArrayList\u003c/code\u003e."},{"lineNumber":12,"author":{"gitId":"internityz"},"content":" * Contains \u003ccode\u003eaddTask\u003c/code\u003e and \u003ccode\u003edeleteTask\u003c/code\u003e which can add/delete tasks in the list."},{"lineNumber":13,"author":{"gitId":"internityz"},"content":" */"},{"lineNumber":14,"author":{"gitId":"internityz"},"content":"public class TaskList {"},{"lineNumber":15,"author":{"gitId":"internityz"},"content":"    private final ArrayList\u003cTask\u003e tasks;"},{"lineNumber":16,"author":{"gitId":"internityz"},"content":""},{"lineNumber":17,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"internityz"},"content":"     * Constructs a empty task list."},{"lineNumber":19,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"internityz"},"content":"    public TaskList() {"},{"lineNumber":21,"author":{"gitId":"internityz"},"content":"        tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":22,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"internityz"},"content":""},{"lineNumber":24,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"internityz"},"content":"     * Find the specified \u003ccode\u003einput\u003c/code\u003e in the task list and"},{"lineNumber":26,"author":{"gitId":"internityz"},"content":"     * print out the task with matching description."},{"lineNumber":27,"author":{"gitId":"internityz"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"internityz"},"content":"     * @param input search parameter."},{"lineNumber":29,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"internityz"},"content":"    public String find(String input) {"},{"lineNumber":31,"author":{"gitId":"internityz"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"},{"lineNumber":32,"author":{"gitId":"internityz"},"content":"        for (Task task : tasks) {"},{"lineNumber":33,"author":{"gitId":"internityz"},"content":"            String curr \u003d task.getDetails();"},{"lineNumber":34,"author":{"gitId":"internityz"},"content":"            if (curr.contains(input)) {"},{"lineNumber":35,"author":{"gitId":"internityz"},"content":"                result.add(task);"},{"lineNumber":36,"author":{"gitId":"internityz"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"internityz"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"internityz"},"content":"        return Ui.printSearch(result);"},{"lineNumber":39,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"internityz"},"content":""},{"lineNumber":41,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"internityz"},"content":"     * Returns a string that informs user of the total tally of the task in the task list."},{"lineNumber":43,"author":{"gitId":"internityz"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"internityz"},"content":"     * @return tally of task in task list."},{"lineNumber":45,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"internityz"},"content":"    public String getTally() {"},{"lineNumber":47,"author":{"gitId":"internityz"},"content":"        return \"     Currently you have \" + tasks.size() + \" tasks in the list.\";"},{"lineNumber":48,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"internityz"},"content":""},{"lineNumber":50,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"internityz"},"content":"     * Appends the specified \u003ccode\u003etask\u003c/code\u003e into the end of the task list."},{"lineNumber":52,"author":{"gitId":"internityz"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"internityz"},"content":"     * @param task task being added."},{"lineNumber":54,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"internityz"},"content":"    public String addTask(Task task) {"},{"lineNumber":56,"author":{"gitId":"internityz"},"content":"        tasks.add(task);"},{"lineNumber":57,"author":{"gitId":"internityz"},"content":"        return Ui.ADD_MSG + task + \"\\n\" + this.getTally();"},{"lineNumber":58,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"internityz"},"content":""},{"lineNumber":60,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"internityz"},"content":"     * Mark the task at the specified \u003ccode\u003eindex\u003c/code\u003e in the task list as complete."},{"lineNumber":62,"author":{"gitId":"internityz"},"content":"     *"},{"lineNumber":63,"author":{"gitId":"internityz"},"content":"     * @param index index of task."},{"lineNumber":64,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"internityz"},"content":"    public String completeTask(int index) {"},{"lineNumber":66,"author":{"gitId":"internityz"},"content":"        Task task \u003d tasks.get(index - 1);"},{"lineNumber":67,"author":{"gitId":"internityz"},"content":"        task.setComplete();"},{"lineNumber":68,"author":{"gitId":"internityz"},"content":"        return Ui.MARK_MSG + \"      \" + task;"},{"lineNumber":69,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"internityz"},"content":""},{"lineNumber":71,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":72,"author":{"gitId":"internityz"},"content":"     * Delete the task at the specified \u003ccode\u003eindex\u003c/code\u003e in the task list."},{"lineNumber":73,"author":{"gitId":"internityz"},"content":"     *"},{"lineNumber":74,"author":{"gitId":"internityz"},"content":"     * @param index index of task"},{"lineNumber":75,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"internityz"},"content":""},{"lineNumber":77,"author":{"gitId":"internityz"},"content":"    public String deleteTask(int index) {"},{"lineNumber":78,"author":{"gitId":"internityz"},"content":"        String task \u003d tasks.get(index - 1).toString();"},{"lineNumber":79,"author":{"gitId":"internityz"},"content":"        tasks.remove(index - 1);"},{"lineNumber":80,"author":{"gitId":"internityz"},"content":"        return Ui.DELETE_MSG + task + \"\\n \\n\" + getTally();"},{"lineNumber":81,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"internityz"},"content":""},{"lineNumber":83,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"internityz"},"content":"     * Returns the number of task in the task list."},{"lineNumber":85,"author":{"gitId":"internityz"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"internityz"},"content":"     * @return number of tasks."},{"lineNumber":87,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"internityz"},"content":"    public int size() {"},{"lineNumber":89,"author":{"gitId":"internityz"},"content":"        return tasks.size();"},{"lineNumber":90,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"internityz"},"content":""},{"lineNumber":92,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"internityz"},"content":"     * Returns the task at the specified \u003ccode\u003eindex\u003c/code\u003e in the task list."},{"lineNumber":94,"author":{"gitId":"internityz"},"content":"     *"},{"lineNumber":95,"author":{"gitId":"internityz"},"content":"     * @param index index of task."},{"lineNumber":96,"author":{"gitId":"internityz"},"content":"     * @return task specified by the index."},{"lineNumber":97,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"internityz"},"content":"    public Task get(int index) {"},{"lineNumber":99,"author":{"gitId":"internityz"},"content":"        return tasks.get(index);"},{"lineNumber":100,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"internityz"},"content":""},{"lineNumber":102,"author":{"gitId":"internityz"},"content":""},{"lineNumber":103,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"internityz"},"content":"     * Detects whether the added todo task of specified \u003ccode\u003edescription\u003c/code\u003e"},{"lineNumber":105,"author":{"gitId":"internityz"},"content":"     * clashes with another todo task in the list."},{"lineNumber":106,"author":{"gitId":"internityz"},"content":"     * @param description description of the task"},{"lineNumber":107,"author":{"gitId":"internityz"},"content":"     * @return true if another similar todo task is found in the task list, otherwise false."},{"lineNumber":108,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":109,"author":{"gitId":"internityz"},"content":"    public boolean compareTodo(String description) {"},{"lineNumber":110,"author":{"gitId":"internityz"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {"},{"lineNumber":111,"author":{"gitId":"internityz"},"content":"            Task task \u003d tasks.get(i);"},{"lineNumber":112,"author":{"gitId":"internityz"},"content":"            boolean compareDetails \u003d task.getDetails().equals(description);"},{"lineNumber":113,"author":{"gitId":"internityz"},"content":"            boolean compareType \u003d task.getType().equals(\"T\");"},{"lineNumber":114,"author":{"gitId":"internityz"},"content":"            if (compareType \u0026\u0026 compareDetails) {"},{"lineNumber":115,"author":{"gitId":"internityz"},"content":"                return true;"},{"lineNumber":116,"author":{"gitId":"internityz"},"content":"            }"},{"lineNumber":117,"author":{"gitId":"internityz"},"content":"        }"},{"lineNumber":118,"author":{"gitId":"internityz"},"content":"        return false;"},{"lineNumber":119,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"internityz"},"content":""},{"lineNumber":121,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"internityz"},"content":"     * Detects whether the added Deadline task of specified \u003ccode\u003e description\u003c/code\u003e and \u003ccode\u003edateAndTime\u003c/code\u003e"},{"lineNumber":123,"author":{"gitId":"internityz"},"content":"     * clashes with another Deadline task in the list."},{"lineNumber":124,"author":{"gitId":"internityz"},"content":"     * @param description description of task."},{"lineNumber":125,"author":{"gitId":"internityz"},"content":"     * @param dateAndTime date and time of task."},{"lineNumber":126,"author":{"gitId":"internityz"},"content":"     * @return true if another similar Deadline task is found in the task list, otherwise false."},{"lineNumber":127,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"internityz"},"content":"    public boolean compareDeadline(String description, String[] dateAndTime) {"},{"lineNumber":129,"author":{"gitId":"internityz"},"content":"        boolean isSame \u003d false;"},{"lineNumber":130,"author":{"gitId":"internityz"},"content":"        for (int i \u003d 0; i \u003c tasks.size() \u0026\u0026 !isSame; i++) {"},{"lineNumber":131,"author":{"gitId":"internityz"},"content":"            Task task \u003d tasks.get(i);"},{"lineNumber":132,"author":{"gitId":"internityz"},"content":"            boolean compareDetails \u003d task.getDetails().equals(description);"},{"lineNumber":133,"author":{"gitId":"internityz"},"content":"            boolean isDeadline \u003d task.getType().equals(\"D\");"},{"lineNumber":134,"author":{"gitId":"internityz"},"content":"            String time, date;"},{"lineNumber":135,"author":{"gitId":"internityz"},"content":"            if (compareDetails \u0026\u0026 isDeadline) {"},{"lineNumber":136,"author":{"gitId":"internityz"},"content":"                time \u003d ((Deadline) task).getTime();"},{"lineNumber":137,"author":{"gitId":"internityz"},"content":"                date \u003d ((Deadline) task).getDate();"},{"lineNumber":138,"author":{"gitId":"internityz"},"content":"                try {"},{"lineNumber":139,"author":{"gitId":"internityz"},"content":"                    String inputDate \u003d LocalDate.parse(dateAndTime[0])"},{"lineNumber":140,"author":{"gitId":"internityz"},"content":"                            .format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));"},{"lineNumber":141,"author":{"gitId":"internityz"},"content":"                    String inputTime \u003d LocalTime.parse(dateAndTime[1])"},{"lineNumber":142,"author":{"gitId":"internityz"},"content":"                            .format(DateTimeFormatter.ofPattern(\"hh:mm a\"));"},{"lineNumber":143,"author":{"gitId":"internityz"},"content":"                    isSame \u003d (inputTime.equals(time) \u0026\u0026 date.equals(inputDate));"},{"lineNumber":144,"author":{"gitId":"internityz"},"content":""},{"lineNumber":145,"author":{"gitId":"internityz"},"content":"                } catch (ArrayIndexOutOfBoundsException ex) {"},{"lineNumber":146,"author":{"gitId":"internityz"},"content":"                    isSame \u003d (time \u003d\u003d null);"},{"lineNumber":147,"author":{"gitId":"internityz"},"content":"                }"},{"lineNumber":148,"author":{"gitId":"internityz"},"content":"            }"},{"lineNumber":149,"author":{"gitId":"internityz"},"content":"        }"},{"lineNumber":150,"author":{"gitId":"internityz"},"content":"        return isSame;"},{"lineNumber":151,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"internityz"},"content":""},{"lineNumber":153,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":154,"author":{"gitId":"internityz"},"content":"     * Detects whether the added Event task of specified \u003ccode\u003e description\u003c/code\u003e and \u003ccode\u003edateAndTime\u003c/code\u003e"},{"lineNumber":155,"author":{"gitId":"internityz"},"content":"     * clashes with another Event task in the list."},{"lineNumber":156,"author":{"gitId":"internityz"},"content":"     * @param description description of task."},{"lineNumber":157,"author":{"gitId":"internityz"},"content":"     * @param dateAndTime date and time of task."},{"lineNumber":158,"author":{"gitId":"internityz"},"content":"     * @return true if another similar Event task is found in the task list, otherwise false."},{"lineNumber":159,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":160,"author":{"gitId":"internityz"},"content":"    public boolean compareEvent(String description, String[] dateAndTime) {"},{"lineNumber":161,"author":{"gitId":"internityz"},"content":"        boolean isSame \u003d false;"},{"lineNumber":162,"author":{"gitId":"internityz"},"content":"        for (int i \u003d 0; i \u003c tasks.size() \u0026\u0026 !isSame; i++) {"},{"lineNumber":163,"author":{"gitId":"internityz"},"content":"            Task task \u003d tasks.get(i);"},{"lineNumber":164,"author":{"gitId":"internityz"},"content":"            boolean compareDetails \u003d task.getDetails().equals(description);"},{"lineNumber":165,"author":{"gitId":"internityz"},"content":"            boolean isEvent \u003d task.getType().equals(\"E\");"},{"lineNumber":166,"author":{"gitId":"internityz"},"content":"            String time, date;"},{"lineNumber":167,"author":{"gitId":"internityz"},"content":"            if (compareDetails \u0026\u0026 isEvent) {"},{"lineNumber":168,"author":{"gitId":"internityz"},"content":"                time \u003d ((Event) task).getTime();"},{"lineNumber":169,"author":{"gitId":"internityz"},"content":"                date \u003d ((Event) task).getDate();"},{"lineNumber":170,"author":{"gitId":"internityz"},"content":"                try {"},{"lineNumber":171,"author":{"gitId":"internityz"},"content":"                    String inputDate \u003d LocalDate.parse(dateAndTime[0])"},{"lineNumber":172,"author":{"gitId":"internityz"},"content":"                            .format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));"},{"lineNumber":173,"author":{"gitId":"internityz"},"content":"                    String inputTime \u003d LocalTime.parse(dateAndTime[1])"},{"lineNumber":174,"author":{"gitId":"internityz"},"content":"                            .format(DateTimeFormatter.ofPattern(\"hh:mm a\"));"},{"lineNumber":175,"author":{"gitId":"internityz"},"content":"                    isSame \u003d (inputTime.equals(time) \u0026\u0026 date.equals(inputDate));"},{"lineNumber":176,"author":{"gitId":"internityz"},"content":"                } catch (Exception ex) {"},{"lineNumber":177,"author":{"gitId":"internityz"},"content":"                    isSame \u003d (time \u003d\u003d null);"},{"lineNumber":178,"author":{"gitId":"internityz"},"content":"                }"},{"lineNumber":179,"author":{"gitId":"internityz"},"content":"            }"},{"lineNumber":180,"author":{"gitId":"internityz"},"content":"        }"},{"lineNumber":181,"author":{"gitId":"internityz"},"content":"        return isSame;"},{"lineNumber":182,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":183,"author":{"gitId":"internityz"},"content":""},{"lineNumber":184,"author":{"gitId":"internityz"},"content":"    @Override"},{"lineNumber":185,"author":{"gitId":"internityz"},"content":"    public String toString() {"},{"lineNumber":186,"author":{"gitId":"internityz"},"content":"        return tasks.toString();"},{"lineNumber":187,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"internityz"},"content":"}"}],"authorContributionMap":{"internityz":188}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"internityz"},"content":"package task;"},{"lineNumber":2,"author":{"gitId":"internityz"},"content":""},{"lineNumber":3,"author":{"gitId":"internityz"},"content":"import exception.DukeException;"},{"lineNumber":4,"author":{"gitId":"internityz"},"content":""},{"lineNumber":5,"author":{"gitId":"internityz"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"internityz"},"content":" * Class \u003ccode\u003eTodo\u003c/code\u003e extends \u003ccode\u003eTask\u003c/code\u003e."},{"lineNumber":7,"author":{"gitId":"internityz"},"content":" */"},{"lineNumber":8,"author":{"gitId":"internityz"},"content":"public class Todo extends Task {"},{"lineNumber":9,"author":{"gitId":"internityz"},"content":""},{"lineNumber":10,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"internityz"},"content":"     * Constructs a Todo event with description specified by \u003ccode\u003e input\u003c/code\u003e."},{"lineNumber":12,"author":{"gitId":"internityz"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"internityz"},"content":"     * @param input task description."},{"lineNumber":14,"author":{"gitId":"internityz"},"content":"     * @throws DukeException DukeException if description is empty."},{"lineNumber":15,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"internityz"},"content":"    public Todo(String input) throws DukeException {"},{"lineNumber":17,"author":{"gitId":"internityz"},"content":"        this.type \u003d \"T\";"},{"lineNumber":18,"author":{"gitId":"internityz"},"content":"        assert input.length() \u003e 0 : \"string length is negative\";"},{"lineNumber":19,"author":{"gitId":"internityz"},"content":"        if (input.length() !\u003d 0) {"},{"lineNumber":20,"author":{"gitId":"internityz"},"content":"            this.description \u003d input;"},{"lineNumber":21,"author":{"gitId":"internityz"},"content":"        } else {"},{"lineNumber":22,"author":{"gitId":"internityz"},"content":"            throw new DukeException(\"☹ OOPS!!! Description of todo cannot be empty, please check!\");"},{"lineNumber":23,"author":{"gitId":"internityz"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"internityz"},"content":""},{"lineNumber":25,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"internityz"},"content":""},{"lineNumber":27,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"internityz"},"content":"     * Constructs a Todo task with status as specified by \u003ccode\u003estatus\u003c/code\u003e and the description"},{"lineNumber":29,"author":{"gitId":"internityz"},"content":"     * specified by \u003ccode\u003einput\u003c/code\u003e."},{"lineNumber":30,"author":{"gitId":"internityz"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"internityz"},"content":"     * @param status task status."},{"lineNumber":32,"author":{"gitId":"internityz"},"content":"     * @param input  task description."},{"lineNumber":33,"author":{"gitId":"internityz"},"content":"     * @throws DukeException DukeException if description is empty."},{"lineNumber":34,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"internityz"},"content":"    public Todo(String status, String input) throws DukeException {"},{"lineNumber":36,"author":{"gitId":"internityz"},"content":"        this.type \u003d \"T\";"},{"lineNumber":37,"author":{"gitId":"internityz"},"content":"        this.isDone \u003d status.equals(\"complete\");"},{"lineNumber":38,"author":{"gitId":"internityz"},"content":"        assert input.length() \u003e 0 : \"string length is negative\";"},{"lineNumber":39,"author":{"gitId":"internityz"},"content":"        if (input.length() !\u003d 0) {"},{"lineNumber":40,"author":{"gitId":"internityz"},"content":"            this.description \u003d input;"},{"lineNumber":41,"author":{"gitId":"internityz"},"content":"        } else {"},{"lineNumber":42,"author":{"gitId":"internityz"},"content":"            throw new DukeException(\"☹ OOPS!!! Description of todo cannot be empty, please check!\");"},{"lineNumber":43,"author":{"gitId":"internityz"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"internityz"},"content":""},{"lineNumber":46,"author":{"gitId":"internityz"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"internityz"},"content":"    public String toString() {"},{"lineNumber":48,"author":{"gitId":"internityz"},"content":"        return \"[\" + this.type + \"]\" + \"[\" + this.getStatusIcon() + \"] \" + this.description;"},{"lineNumber":49,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"internityz"},"content":"}"}],"authorContributionMap":{"internityz":50}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"internityz"},"content":"package ui;"},{"lineNumber":2,"author":{"gitId":"internityz"},"content":""},{"lineNumber":3,"author":{"gitId":"internityz"},"content":"import task.Task;"},{"lineNumber":4,"author":{"gitId":"internityz"},"content":"import task.TaskList;"},{"lineNumber":5,"author":{"gitId":"internityz"},"content":""},{"lineNumber":6,"author":{"gitId":"internityz"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"internityz"},"content":""},{"lineNumber":8,"author":{"gitId":"internityz"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"internityz"},"content":" * Class \u003ccode\u003eUi\u003c/code\u003e contains all the string messages that interacts with users and methods"},{"lineNumber":10,"author":{"gitId":"internityz"},"content":" * \u003ccode\u003eprintBox\u003c/code\u003e and \u003ccode\u003eprintList\u003c/code\u003e."},{"lineNumber":11,"author":{"gitId":"internityz"},"content":" */"},{"lineNumber":12,"author":{"gitId":"internityz"},"content":"public class Ui {"},{"lineNumber":13,"author":{"gitId":"internityz"},"content":"    public final static String MARK_MSG \u003d \"You have marked this task as completed: \\n\";"},{"lineNumber":14,"author":{"gitId":"internityz"},"content":"    public final static String ADD_MSG \u003d \"Roger that! Added the following task: \\n \\n      \";"},{"lineNumber":15,"author":{"gitId":"internityz"},"content":"    public final static String DELETE_MSG \u003d \"Roger that! Deleted the follow task: \\n \\n      \";"},{"lineNumber":16,"author":{"gitId":"internityz"},"content":"    public final static String INDENT_4_SPACES \u003d \"     \";"},{"lineNumber":17,"author":{"gitId":"internityz"},"content":"    public final static String TOP_BORDER \u003d \"\\n**********************************************************************\\n\";"},{"lineNumber":18,"author":{"gitId":"internityz"},"content":"    public final static String BOTTOM_BORDER \u003d \"**********************************************************************\\n\";"},{"lineNumber":19,"author":{"gitId":"internityz"},"content":"    public final static String INDENT_32_SPACES \u003d \"                                        \";"},{"lineNumber":20,"author":{"gitId":"internityz"},"content":""},{"lineNumber":21,"author":{"gitId":"internityz"},"content":""},{"lineNumber":22,"author":{"gitId":"internityz"},"content":"    public final static String WELCOME_MSG \u003d INDENT_32_SPACES + \"█▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀▀█ \\n\""},{"lineNumber":23,"author":{"gitId":"internityz"},"content":"            + INDENT_32_SPACES + \"█░░╦─╦╔╗╦─╔╗╔╗╔╦╗╔╗░░█ \\n\""},{"lineNumber":24,"author":{"gitId":"internityz"},"content":"            + INDENT_32_SPACES + \"█░░║║║╠─║─║─║║║║║╠─░░█ \\n\""},{"lineNumber":25,"author":{"gitId":"internityz"},"content":"            + INDENT_32_SPACES + \"█░░╚╩╝╚╝╚╝╚╝╚╝╩─╩╚╝░░█ \\n\""},{"lineNumber":26,"author":{"gitId":"internityz"},"content":"            + INDENT_32_SPACES + \"█▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄█ \\n\";"},{"lineNumber":27,"author":{"gitId":"internityz"},"content":"    public final static String LOGO \u003d INDENT_32_SPACES + \"──────▄▀▄─────▄▀▄ \\n\""},{"lineNumber":28,"author":{"gitId":"internityz"},"content":"            + INDENT_32_SPACES + \"─────▄█░░▀▀▀▀▀░░█▄ \\n\""},{"lineNumber":29,"author":{"gitId":"internityz"},"content":"            + INDENT_32_SPACES + \"─▄▄──█░░░░░░░░░░░█──▄▄ \\n\""},{"lineNumber":30,"author":{"gitId":"internityz"},"content":"            + INDENT_32_SPACES + \"█▄▄█─█░░▀░░┬░░▀░░█─█▄▄█ \";"},{"lineNumber":31,"author":{"gitId":"internityz"},"content":"    public final static String GREETING_MSG \u003d \"Hey there! I\u0027m Kawaii Kat \\n\""},{"lineNumber":32,"author":{"gitId":"internityz"},"content":"            + \"How can i assist you ~nya~?\";"},{"lineNumber":33,"author":{"gitId":"internityz"},"content":"    public final static String EXIT_MSG \u003d \"Farewell. See you soon :)!\";"},{"lineNumber":34,"author":{"gitId":"internityz"},"content":"    public final static String SAVE_EXIT_MSG \u003d \"Task List Saved Successfully!\\n\""},{"lineNumber":35,"author":{"gitId":"internityz"},"content":"            + EXIT_MSG;"},{"lineNumber":36,"author":{"gitId":"internityz"},"content":"    public final static String EMPTY_LIST_MSG \u003d \"OOPPS! Your Current Task List Is Empty!\";"},{"lineNumber":37,"author":{"gitId":"internityz"},"content":"    public final static String TASK_CLASH_MSG \u003d \"OOPPS! Sorry :( \\n\""},{"lineNumber":38,"author":{"gitId":"internityz"},"content":"            + \"Task added clashes with another task in list!\";"},{"lineNumber":39,"author":{"gitId":"internityz"},"content":""},{"lineNumber":40,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"internityz"},"content":"     * Surrounds the specified \u003ccode\u003einput\u003c/code\u003e with a asterisk border."},{"lineNumber":42,"author":{"gitId":"internityz"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"internityz"},"content":"     * @param input input to be bordered"},{"lineNumber":44,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"internityz"},"content":"    public static void printBox(String input) {"},{"lineNumber":46,"author":{"gitId":"internityz"},"content":"        System.out.println(TOP_BORDER + INDENT_4_SPACES + input"},{"lineNumber":47,"author":{"gitId":"internityz"},"content":"                + \"\\n\" + BOTTOM_BORDER);"},{"lineNumber":48,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"internityz"},"content":""},{"lineNumber":50,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"internityz"},"content":"     * Prints the Ui of loading save record."},{"lineNumber":52,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"internityz"},"content":"    public static String retrieveList(boolean bool) {"},{"lineNumber":54,"author":{"gitId":"internityz"},"content":"        if (bool) {"},{"lineNumber":55,"author":{"gitId":"internityz"},"content":"            return Ui.formatBox(Ui.INDENT_32_SPACES + \"No Save Record Detected... \\n\""},{"lineNumber":56,"author":{"gitId":"internityz"},"content":"                    + Ui.INDENT_32_SPACES + \"     Creating New List! :)\");"},{"lineNumber":57,"author":{"gitId":"internityz"},"content":"        } else {"},{"lineNumber":58,"author":{"gitId":"internityz"},"content":"            return Ui.formatBox(Ui.INDENT_32_SPACES + \"Saved Record Detected... \\n\""},{"lineNumber":59,"author":{"gitId":"internityz"},"content":"                    + Ui.INDENT_32_SPACES + \"     Retrieving List! :)\");"},{"lineNumber":60,"author":{"gitId":"internityz"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"internityz"},"content":""},{"lineNumber":63,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"internityz"},"content":"     * Formats the \u003ccode\u003eString\u003c/code\u003e input into a asterisk box."},{"lineNumber":65,"author":{"gitId":"internityz"},"content":"     * @param input string that requires formatting"},{"lineNumber":66,"author":{"gitId":"internityz"},"content":"     * @return formatted string"},{"lineNumber":67,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"internityz"},"content":"    public static String formatBox(String input) {"},{"lineNumber":69,"author":{"gitId":"internityz"},"content":"        return TOP_BORDER + INDENT_4_SPACES + input"},{"lineNumber":70,"author":{"gitId":"internityz"},"content":"                + \"\\n\" + BOTTOM_BORDER;"},{"lineNumber":71,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"internityz"},"content":""},{"lineNumber":73,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"internityz"},"content":"     * Prints the specified \u003ccode\u003eTaskList\u003c/code\u003e with a format"},{"lineNumber":75,"author":{"gitId":"internityz"},"content":"     * @param list list that requires formatting"},{"lineNumber":76,"author":{"gitId":"internityz"},"content":"     * @return returns a String of formatted list of elements"},{"lineNumber":77,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"internityz"},"content":"    public static String printList(TaskList list) {"},{"lineNumber":79,"author":{"gitId":"internityz"},"content":"        if (list.size() \u003d\u003d 0 ) {"},{"lineNumber":80,"author":{"gitId":"internityz"},"content":"            return EMPTY_LIST_MSG;"},{"lineNumber":81,"author":{"gitId":"internityz"},"content":"        } else {"},{"lineNumber":82,"author":{"gitId":"internityz"},"content":"            StringBuilder result \u003d new StringBuilder(\"     This is your present task list: \\n\");"},{"lineNumber":83,"author":{"gitId":"internityz"},"content":"            for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"},{"lineNumber":84,"author":{"gitId":"internityz"},"content":"                result.append(INDENT_4_SPACES).append(i).append(\") \").append(list.get(i - 1)).append(\"\\n\");"},{"lineNumber":85,"author":{"gitId":"internityz"},"content":"            }"},{"lineNumber":86,"author":{"gitId":"internityz"},"content":"            return result.toString();"},{"lineNumber":87,"author":{"gitId":"internityz"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"internityz"},"content":""},{"lineNumber":90,"author":{"gitId":"internityz"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"internityz"},"content":"     * Surrounds the elements the specified \u003ccode\u003elist/code\u003e of search result with a asterisk border."},{"lineNumber":92,"author":{"gitId":"internityz"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"internityz"},"content":"     * @param list searched elements to be border"},{"lineNumber":94,"author":{"gitId":"internityz"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"internityz"},"content":"    public static String printSearch(ArrayList\u003cTask\u003e list) {"},{"lineNumber":96,"author":{"gitId":"internityz"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":97,"author":{"gitId":"internityz"},"content":"        sb.append(\"Here are the matching tasks found: \\n\");"},{"lineNumber":98,"author":{"gitId":"internityz"},"content":"        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"},{"lineNumber":99,"author":{"gitId":"internityz"},"content":"            sb.append(INDENT_4_SPACES);"},{"lineNumber":100,"author":{"gitId":"internityz"},"content":"            sb.append(i);"},{"lineNumber":101,"author":{"gitId":"internityz"},"content":"            sb.append(\") \");"},{"lineNumber":102,"author":{"gitId":"internityz"},"content":"            sb.append(list.get(i - 1));"},{"lineNumber":103,"author":{"gitId":"internityz"},"content":"        }"},{"lineNumber":104,"author":{"gitId":"internityz"},"content":"        return sb.toString();"},{"lineNumber":105,"author":{"gitId":"internityz"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"internityz"},"content":"}"}],"authorContributionMap":{"internityz":106}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"internityz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"internityz"},"content":""},{"lineNumber":3,"author":{"gitId":"internityz"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"internityz"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"internityz"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"internityz"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"internityz"},"content":""},{"lineNumber":8,"author":{"gitId":"internityz"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"internityz"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"internityz"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\"/\u003e"},{"lineNumber":11,"author":{"gitId":"internityz"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"internityz"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"internityz"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"internityz"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"internityz"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"internityz"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"internityz":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"internityz"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"internityz"},"content":""},{"lineNumber":3,"author":{"gitId":"internityz"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"internityz"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"internityz"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"internityz"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"internityz"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"internityz"},"content":""},{"lineNumber":9,"author":{"gitId":"internityz"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"internityz"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"internityz"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"internityz"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"internityz"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"internityz"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"internityz"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"internityz"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"internityz"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"internityz"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"internityz"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"internityz":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"internityz"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"internityz"},"content":"list"},{"lineNumber":3,"author":{"gitId":"internityz"},"content":"deadline return book /by sunday"},{"lineNumber":4,"author":{"gitId":"internityz"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"internityz"},"content":"bye"}],"authorContributionMap":{"internityz":5}}]
