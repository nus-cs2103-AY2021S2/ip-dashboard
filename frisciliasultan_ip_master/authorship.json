[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"## User Guide"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"This is a CLI chatbot called Duke."},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"**Commands**"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"1. `list` - Displays the tasks contained in the task list."},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"1. `todo \u003ctask description\u003e` - Adds a task with no time limit into the task list."},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"1. `deadline \u003ctask description\u003e \\by \u003ctime\u003e` - Adds a task that needs to be done before a specific date/time into the task list."},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"1. `event \u003ctask description\u003e \\at \u003ctime\u003e` - Adds a task that start at a specific time and ends at a specific time into the task list."},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"1. `done \u003cindex\u003e` - Mark a specific task in the task list as done. E.g. `done 2` marks the second task in the task list as done."},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"1. `delete \u003cindex\u003e` - Remove a specific task from the task list. E.g. `delete 2` removes the second task from the task list."},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"1. `bye` - Exits the program"}],"authorContributionMap":{"frisciliasultan":14,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.9\u0027"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"}"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"    archiveBaseName \u003d \"launcher\""},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"javafx {"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"    version \u003d \"11.0.2\""},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]"},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"}"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"frisciliasultan":8,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"### Display task list "},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"### `Keyword` - Describe action"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"Describe action and its outcome."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"`keyword (optional arguments)`"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"`outcome`"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":""}],"authorContributionMap":{"frisciliasultan":6,"-":18}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"public class Deadline extends Task {"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"    private LocalDate time;"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created Deadline object"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents a Deadline task"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"     * with the name and time according to its supplied arguments."},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises the Deadline task isDone status to false."},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"     * @param name the description of the Deadline task."},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"     * @param time LocalDate object that represents"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"     *            the time this Deadline is happening."},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"    public Deadline(String name, String time) {"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"        super(name);"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"        this.time \u003d LocalDate.parse(time);"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created Deadline object"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents a Deadline task"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"     * with the name, isDone and time according to its supplied arguments."},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"     * @param name the description of the Deadline task."},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"     * @param isDone the status of the Deadline task."},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"     * @param time LocalDate object that represents"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"     *            the time this Deadline is happening."},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"    public Deadline(String name, boolean isDone, String time) {"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"        super(name, isDone);"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"        this.time \u003d LocalDate.parse(time);"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"     * Creates a String representation of Deadline object."},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"     * @return String representation of Deadline."},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"    public String toString() {"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),"},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"                time.format(DateTimeFormatter.ofPattern(\"dd MMM yyy\")));"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"    LocalDate getTime() {"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"        return this.time;"},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":51}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":" */"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"    private void flip() {"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"        Collections.reverse(tmp);"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"        return new DialogBox(text, img);"},{"lineNumber":52,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":54,"author":{"gitId":"frisciliasultan"},"content":"    public static DialogBox getMayaDialog(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"frisciliasultan"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":56,"author":{"gitId":"frisciliasultan"},"content":"        db.flip();"},{"lineNumber":57,"author":{"gitId":"frisciliasultan"},"content":"        return db;"},{"lineNumber":58,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":59}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"public class Event extends Task {"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"    private LocalDate time;"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created Event object"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents a Event task"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"     * with the name and time according to its supplied arguments."},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises the Event task isDone status to false."},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"     * @param name the description of the Event task."},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"     * @param time LocalDate object that represents"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"     *            the time this Event is happening."},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"    public Event(String name, String time) {"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"        super(name);"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"        this.time \u003d LocalDate.parse(time);"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created Event object"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents a Event task"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"     * with the name, isDone and time according to its supplied arguments."},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"     * @param name the description of the Event task."},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"     * @param isDone the status of the Event task."},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"     * @param time LocalDate object that represents"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"     *            the time this Event is happening."},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"    public Event(String name, boolean isDone, String time) {"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"        super(name, isDone);"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"        this.time \u003d LocalDate.parse(time);"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"     * Creates a String representation of Event object."},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"     * @return String representation of Event."},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"    public String toString() {"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(),"},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"                time.format(DateTimeFormatter.ofPattern(\"dd MMM yyy\")));"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"    LocalDate getTime() {"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"        return this.time;"},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":51}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":" */"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":" */"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"    private Maya maya \u003d new Maya(\"data/task.txt\");"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"    public void start(Stage stage) {"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setMaya(maya);"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"            stage.show();"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"        } catch (IOException e) {"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"            e.printStackTrace();"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":29}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.control.Button;"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":" */"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"    @FXML"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"    private VBox dialogContainer;"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"    private TextField userInput;"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"    private Button sendButton;"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"    private Maya maya;"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/tucker.jpg\"));"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"    private Image mayaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/maya.jpg\"));"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"    public void initialize() {"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"    public void setMaya(Maya m) {"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"        maya \u003d m;"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"    @FXML"},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"    private void handleUserInput() {"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"        String response \u003d maya.getResponse(input);"},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"        System.out.println(response);"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"                DialogBox.getMayaDialog(response, mayaImage)"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"        );"},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"        userInput.clear();"},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":52}},{"path":"src/main/java/Maya.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"import java.sql.Struct;"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.control.Button;"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.control.Label;"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.image.Image;"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"import javafx.stage.Stage;"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"public class Maya extends Application {"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"    private VBox dialogContainer;"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"    private TextField userInput;"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"    private final Image maya \u003d new Image(this.getClass().getResourceAsStream(\"/images/maya.jpg\"));"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/tucker.jpg\"));"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"    private Storage storage;"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"    private TaskList taskList;"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"    private Ui ui;"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"    public Maya(String filePath) {"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"        ui \u003d new Ui();"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"            taskList \u003d storage.load();"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"        } catch(UnknownCommandException | NoSuchElementException"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"                | ArrayIndexOutOfBoundsException | IOException e) {"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"    public void start(Stage stage) {"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"        //The container for the content of the chat to scroll."},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"        userInput \u003d new TextField();"},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"        Button sendButton \u003d new Button(\"Send\");"},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":52,"author":{"gitId":"frisciliasultan"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":53,"author":{"gitId":"frisciliasultan"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":54,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":55,"author":{"gitId":"frisciliasultan"},"content":"        Scene scene \u003d new Scene(mainLayout);"},{"lineNumber":56,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":57,"author":{"gitId":"frisciliasultan"},"content":"        stage.setScene(scene);"},{"lineNumber":58,"author":{"gitId":"frisciliasultan"},"content":"        stage.show();"},{"lineNumber":59,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":60,"author":{"gitId":"frisciliasultan"},"content":"        stage.setTitle(\"Maya\");"},{"lineNumber":61,"author":{"gitId":"frisciliasultan"},"content":"        stage.setResizable(false);"},{"lineNumber":62,"author":{"gitId":"frisciliasultan"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":63,"author":{"gitId":"frisciliasultan"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":64,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":65,"author":{"gitId":"frisciliasultan"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":66,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":67,"author":{"gitId":"frisciliasultan"},"content":"        scrollPane.setPrefSize(400, 545);"},{"lineNumber":68,"author":{"gitId":"frisciliasultan"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":69,"author":{"gitId":"frisciliasultan"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":70,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":71,"author":{"gitId":"frisciliasultan"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":72,"author":{"gitId":"frisciliasultan"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":73,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":74,"author":{"gitId":"frisciliasultan"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":75,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":76,"author":{"gitId":"frisciliasultan"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":77,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":78,"author":{"gitId":"frisciliasultan"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":79,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":80,"author":{"gitId":"frisciliasultan"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":81,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":82,"author":{"gitId":"frisciliasultan"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":83,"author":{"gitId":"frisciliasultan"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":84,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":85,"author":{"gitId":"frisciliasultan"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);"},{"lineNumber":86,"author":{"gitId":"frisciliasultan"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":87,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":88,"author":{"gitId":"frisciliasultan"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":89,"author":{"gitId":"frisciliasultan"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"},{"lineNumber":90,"author":{"gitId":"frisciliasultan"},"content":"            userInput.clear();"},{"lineNumber":91,"author":{"gitId":"frisciliasultan"},"content":"        });"},{"lineNumber":92,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":93,"author":{"gitId":"frisciliasultan"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":94,"author":{"gitId":"frisciliasultan"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"},{"lineNumber":95,"author":{"gitId":"frisciliasultan"},"content":"            userInput.clear();"},{"lineNumber":96,"author":{"gitId":"frisciliasultan"},"content":"        });"},{"lineNumber":97,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":98,"author":{"gitId":"frisciliasultan"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":99,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":100,"author":{"gitId":"frisciliasultan"},"content":"        sendButton.setOnMouseClicked((event) -\u003e handleUserInput());"},{"lineNumber":101,"author":{"gitId":"frisciliasultan"},"content":"        userInput.setOnAction((event) -\u003e handleUserInput());"},{"lineNumber":102,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":104,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":105,"author":{"gitId":"frisciliasultan"},"content":"     * Iteration 1:"},{"lineNumber":106,"author":{"gitId":"frisciliasultan"},"content":"     * Creates a label with the specified text and adds it to the dialog container."},{"lineNumber":107,"author":{"gitId":"frisciliasultan"},"content":"     * @param text String containing text to add"},{"lineNumber":108,"author":{"gitId":"frisciliasultan"},"content":"     * @return a label with the specified text that has word wrap enabled."},{"lineNumber":109,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":110,"author":{"gitId":"frisciliasultan"},"content":"    private Label getDialogLabel(String text) {"},{"lineNumber":111,"author":{"gitId":"frisciliasultan"},"content":"        // You will need to import `javafx.scene.control.Label`."},{"lineNumber":112,"author":{"gitId":"frisciliasultan"},"content":"        Label textToAdd \u003d new Label(text);"},{"lineNumber":113,"author":{"gitId":"frisciliasultan"},"content":"        textToAdd.setWrapText(true);"},{"lineNumber":114,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":115,"author":{"gitId":"frisciliasultan"},"content":"        return textToAdd;"},{"lineNumber":116,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":118,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"frisciliasultan"},"content":"     * Iteration 2:"},{"lineNumber":120,"author":{"gitId":"frisciliasultan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":121,"author":{"gitId":"frisciliasultan"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":122,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"frisciliasultan"},"content":"    private void handleUserInput() {"},{"lineNumber":124,"author":{"gitId":"frisciliasultan"},"content":"        String userText \u003d userInput.getText();"},{"lineNumber":125,"author":{"gitId":"frisciliasultan"},"content":"        String mayaText \u003d getResponse(userInput.getText());"},{"lineNumber":126,"author":{"gitId":"frisciliasultan"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":127,"author":{"gitId":"frisciliasultan"},"content":"                DialogBox.getUserDialog(userText, user),"},{"lineNumber":128,"author":{"gitId":"frisciliasultan"},"content":"                DialogBox.getMayaDialog(mayaText, maya)"},{"lineNumber":129,"author":{"gitId":"frisciliasultan"},"content":"        );"},{"lineNumber":130,"author":{"gitId":"frisciliasultan"},"content":"        userInput.clear();"},{"lineNumber":131,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":132,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":133,"author":{"gitId":"frisciliasultan"},"content":"    public String getResponse(String input) {"},{"lineNumber":134,"author":{"gitId":"frisciliasultan"},"content":"        try {"},{"lineNumber":135,"author":{"gitId":"frisciliasultan"},"content":"            return Parser.parse(input, ui, taskList, storage);"},{"lineNumber":136,"author":{"gitId":"frisciliasultan"},"content":"        } catch (UnknownCommandException | IOException e) {"},{"lineNumber":137,"author":{"gitId":"frisciliasultan"},"content":"            return e.getMessage();"},{"lineNumber":138,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":141,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":142,"author":{"gitId":"frisciliasultan"},"content":"     * Starts the Maya object to accept user commands."},{"lineNumber":143,"author":{"gitId":"frisciliasultan"},"content":"     * Processes user commands by utilising Parser object"},{"lineNumber":144,"author":{"gitId":"frisciliasultan"},"content":"     * to make sense of the user command."},{"lineNumber":145,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":146,"author":{"gitId":"frisciliasultan"},"content":"    public void run() {"},{"lineNumber":147,"author":{"gitId":"frisciliasultan"},"content":"        try {"},{"lineNumber":148,"author":{"gitId":"frisciliasultan"},"content":"            taskList \u003d storage.load();"},{"lineNumber":149,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":150,"author":{"gitId":"frisciliasultan"},"content":"            ui.showWelcome();"},{"lineNumber":151,"author":{"gitId":"frisciliasultan"},"content":"            Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":152,"author":{"gitId":"frisciliasultan"},"content":"            while (sc.hasNext()) {"},{"lineNumber":153,"author":{"gitId":"frisciliasultan"},"content":"                String command \u003d sc.next();"},{"lineNumber":154,"author":{"gitId":"frisciliasultan"},"content":"                ui.showLine();"},{"lineNumber":155,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":156,"author":{"gitId":"frisciliasultan"},"content":"                System.out.println(Parser.parse(command, ui, taskList, storage));"},{"lineNumber":157,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":158,"author":{"gitId":"frisciliasultan"},"content":"                // To exit the program with the command \"bye\""},{"lineNumber":159,"author":{"gitId":"frisciliasultan"},"content":"                if (command.equals(\"bye\")) {"},{"lineNumber":160,"author":{"gitId":"frisciliasultan"},"content":"                    break;"},{"lineNumber":161,"author":{"gitId":"frisciliasultan"},"content":"                }"},{"lineNumber":162,"author":{"gitId":"frisciliasultan"},"content":"            }"},{"lineNumber":163,"author":{"gitId":"frisciliasultan"},"content":"            sc.close();"},{"lineNumber":164,"author":{"gitId":"frisciliasultan"},"content":"        } catch(UnknownCommandException | NoSuchElementException"},{"lineNumber":165,"author":{"gitId":"frisciliasultan"},"content":"                | ArrayIndexOutOfBoundsException | IOException e){"},{"lineNumber":166,"author":{"gitId":"frisciliasultan"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":167,"author":{"gitId":"frisciliasultan"},"content":"        } finally{"},{"lineNumber":168,"author":{"gitId":"frisciliasultan"},"content":"            ui.showLine();"},{"lineNumber":169,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":170,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":172,"author":{"gitId":"frisciliasultan"},"content":"    public static void main(String[] args) {"},{"lineNumber":173,"author":{"gitId":"frisciliasultan"},"content":"        new Maya(\"data/task.txt\").run();"},{"lineNumber":174,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"frisciliasultan":174,"-":1}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"public class Parser {"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"     * Parses the user command and instructs the taskList, ui or sc"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"     * to carry out different functions according to the command argument."},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"     * @param command user input"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"     * @param ui Ui object"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"     * @param taskList TaskList object."},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"     * @param storage Storage object."},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"     * @throws NoSuchElementException if additional user input required is not provided."},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"     * @throws UnknownCommandException if command is not supported by Maya."},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"     * @throws IOException if null is supplied to Storage or if file is not found."},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"    static String parse(String command, Ui ui, TaskList taskList, Storage storage)"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"            throws NoSuchElementException, UnknownCommandException, IOException {"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"        switch(parseCommand(command)) {"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"            case \"bye\":"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"                return ui.showBye();"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"            case \"list\":"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"                return ui.showList(taskList.getList(), false);"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"            case \"done\":"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"                // To get the index"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"                int index \u003d Integer.parseInt(getDescription(command));"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"                Task doneTask \u003d taskList.markTaskAsDone(index);"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"                storage.writeToFile(taskList.getList());"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"                return ui.showDone(doneTask);"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"            case \"todo\":"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"                String name \u003d getDescription(command);"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"                if (!name.equals(\"\")) {"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"                    Todo todo \u003d new Todo(name.trim());"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"                    Task newTask \u003d taskList.addTask(todo);"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"                    storage.appendToFile(todo);"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"                    return ui.showAddTask(newTask, taskList.getListSize());"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"                } else {"},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":"                    throw new NoSuchElementException(\"☹ OOPS!!! The description of\""},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"                            + \" a todo cannot be empty.\");"},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"                }"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"            case \"deadline\":"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"                String desc \u003d getDescription(command);"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"                if (!desc.equals(\"\")) {"},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"                    String[] split \u003d desc.split(\"/by\", 2);"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"                    Deadline deadline \u003d new Deadline(split[0].trim(), split[1].trim());"},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":"                    Task newTask \u003d taskList.addTask(deadline);"},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"                    storage.appendToFile(deadline);"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"                    return ui.showAddTask(newTask, taskList.getListSize());"},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"                } else {"},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"                    throw new NoSuchElementException(\"☹ OOPS!!! The description of\""},{"lineNumber":52,"author":{"gitId":"frisciliasultan"},"content":"                            + \" a deadline cannot be empty.\");"},{"lineNumber":53,"author":{"gitId":"frisciliasultan"},"content":"                }"},{"lineNumber":54,"author":{"gitId":"frisciliasultan"},"content":"            case \"event\":"},{"lineNumber":55,"author":{"gitId":"frisciliasultan"},"content":"                String description \u003d getDescription(command);"},{"lineNumber":56,"author":{"gitId":"frisciliasultan"},"content":"                if (!description.equals(\"\")) {"},{"lineNumber":57,"author":{"gitId":"frisciliasultan"},"content":"                    String[] split \u003d description.split(\"/at\", 2);"},{"lineNumber":58,"author":{"gitId":"frisciliasultan"},"content":"                    Event event \u003d new Event(split[0].trim(), split[1].trim());"},{"lineNumber":59,"author":{"gitId":"frisciliasultan"},"content":"                    Task newTask \u003d taskList.addTask(event);"},{"lineNumber":60,"author":{"gitId":"frisciliasultan"},"content":"                    storage.appendToFile(event);"},{"lineNumber":61,"author":{"gitId":"frisciliasultan"},"content":"                    return ui.showAddTask(newTask, taskList.getListSize());"},{"lineNumber":62,"author":{"gitId":"frisciliasultan"},"content":"                } else {"},{"lineNumber":63,"author":{"gitId":"frisciliasultan"},"content":"                    throw new NoSuchElementException(\"☹ OOPS!!! The description of\""},{"lineNumber":64,"author":{"gitId":"frisciliasultan"},"content":"                            + \" an event cannot be empty.\");"},{"lineNumber":65,"author":{"gitId":"frisciliasultan"},"content":"                }"},{"lineNumber":66,"author":{"gitId":"frisciliasultan"},"content":"            case \"find\":"},{"lineNumber":67,"author":{"gitId":"frisciliasultan"},"content":"                String searchString \u003d getDescription(command);"},{"lineNumber":68,"author":{"gitId":"frisciliasultan"},"content":"                if (!searchString.equals(\"\")) {"},{"lineNumber":69,"author":{"gitId":"frisciliasultan"},"content":"                    return ui.showList(taskList.searchTask(searchString.trim()), true);"},{"lineNumber":70,"author":{"gitId":"frisciliasultan"},"content":"                } else {"},{"lineNumber":71,"author":{"gitId":"frisciliasultan"},"content":"                    throw new NoSuchElementException(\"    ☹ OOPS!!! The search keyword cannot be empty.\");"},{"lineNumber":72,"author":{"gitId":"frisciliasultan"},"content":"                }"},{"lineNumber":73,"author":{"gitId":"frisciliasultan"},"content":"            case \"delete\":"},{"lineNumber":74,"author":{"gitId":"frisciliasultan"},"content":"                // To get the index"},{"lineNumber":75,"author":{"gitId":"frisciliasultan"},"content":"                int i \u003d Integer.parseInt(getDescription(command));"},{"lineNumber":76,"author":{"gitId":"frisciliasultan"},"content":"                Task removedTask \u003d taskList.removeTask(i);"},{"lineNumber":77,"author":{"gitId":"frisciliasultan"},"content":"                storage.writeToFile(taskList.getList());"},{"lineNumber":78,"author":{"gitId":"frisciliasultan"},"content":"                return ui.showRemoveTask(removedTask, taskList.getListSize());"},{"lineNumber":79,"author":{"gitId":"frisciliasultan"},"content":"            default:"},{"lineNumber":80,"author":{"gitId":"frisciliasultan"},"content":"                throw new UnknownCommandException();"},{"lineNumber":81,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":84,"author":{"gitId":"frisciliasultan"},"content":"    static String parseCommand(String command) {"},{"lineNumber":85,"author":{"gitId":"frisciliasultan"},"content":"        return command.split(\" \", 2)[0];"},{"lineNumber":86,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":88,"author":{"gitId":"frisciliasultan"},"content":"    static String getDescription(String command) {"},{"lineNumber":89,"author":{"gitId":"frisciliasultan"},"content":"        return command.split(\" \", 2)[1];"},{"lineNumber":90,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":91}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"import java.nio.file.Paths;"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"public class Storage {"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"    private File file;"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created Storage object"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents a File"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"     * where the TaskList will be stored in."},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"     * @param pathname a String representing the path"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"     *                 where the list will be stored."},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"    public Storage(String pathname) {"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"        file \u003d new File(Paths.get(pathname).toString());"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"     * Creates a new file in the path specified"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"     * and return an empty TaskList if file does not exist."},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"     * Otherwise, reads from the existing file"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"     * and translates its contents into a TaskList."},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"     * @return a TaskList object according to the file specified."},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"     * @throws IOException if an I/O error occurred."},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"     * @throws UnknownCommandException if file contents contain unsupported Task object."},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"    TaskList load() throws IOException, UnknownCommandException {"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"        if (file.exists()) {"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"            return new TaskList(this.convertFileToList());"},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":"        } else {"},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"            this.createFile();"},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"            return new TaskList();"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"     * Parses the contents of the TaskList in the specified file"},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":"     * and translates the file into a List of Task object."},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"     * @return a List of Task containing the Task objects as specified in the file."},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"     * @throws FileNotFoundException if file specified by the path is not found."},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"     * @throws UnknownCommandException if the tag stored in the TaskList"},{"lineNumber":52,"author":{"gitId":"frisciliasultan"},"content":"     *                                      does not correspond to Todo, Deadline or Event."},{"lineNumber":53,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"frisciliasultan"},"content":"    List\u003cTask\u003e convertFileToList() throws FileNotFoundException, UnknownCommandException {"},{"lineNumber":55,"author":{"gitId":"frisciliasultan"},"content":"        Scanner sc \u003d new Scanner(file);"},{"lineNumber":56,"author":{"gitId":"frisciliasultan"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":57,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":58,"author":{"gitId":"frisciliasultan"},"content":"        // Splice the lines in the file"},{"lineNumber":59,"author":{"gitId":"frisciliasultan"},"content":"        // and generate the appropriate Tasks"},{"lineNumber":60,"author":{"gitId":"frisciliasultan"},"content":"        while (sc.hasNext()) {"},{"lineNumber":61,"author":{"gitId":"frisciliasultan"},"content":"            String item \u003d sc.nextLine();"},{"lineNumber":62,"author":{"gitId":"frisciliasultan"},"content":"            String[] split \u003d item.split(\" : \", 0);"},{"lineNumber":63,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":64,"author":{"gitId":"frisciliasultan"},"content":"            switch (split[0]) {"},{"lineNumber":65,"author":{"gitId":"frisciliasultan"},"content":"            case \"T\":"},{"lineNumber":66,"author":{"gitId":"frisciliasultan"},"content":"                list.add(new Todo(split[2], split[1].equals(\"1\")));"},{"lineNumber":67,"author":{"gitId":"frisciliasultan"},"content":"                break;"},{"lineNumber":68,"author":{"gitId":"frisciliasultan"},"content":"            case \"D\":"},{"lineNumber":69,"author":{"gitId":"frisciliasultan"},"content":"                list.add(new Deadline(split[2], split[1].equals(\"1\"), split[3]));"},{"lineNumber":70,"author":{"gitId":"frisciliasultan"},"content":"                break;"},{"lineNumber":71,"author":{"gitId":"frisciliasultan"},"content":"            case \"E\":"},{"lineNumber":72,"author":{"gitId":"frisciliasultan"},"content":"                list.add(new Event(split[2], split[1].equals(\"1\"), split[3]));"},{"lineNumber":73,"author":{"gitId":"frisciliasultan"},"content":"                break;"},{"lineNumber":74,"author":{"gitId":"frisciliasultan"},"content":"            default:"},{"lineNumber":75,"author":{"gitId":"frisciliasultan"},"content":"                throw new UnknownCommandException();"},{"lineNumber":76,"author":{"gitId":"frisciliasultan"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":79,"author":{"gitId":"frisciliasultan"},"content":"        sc.close();"},{"lineNumber":80,"author":{"gitId":"frisciliasultan"},"content":"        return list;"},{"lineNumber":81,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":83,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"frisciliasultan"},"content":"     * Creates a file according to the specified pathName."},{"lineNumber":85,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"frisciliasultan"},"content":"     * @throws IOException if an I/O error occurred."},{"lineNumber":87,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"frisciliasultan"},"content":"    void createFile() throws IOException {"},{"lineNumber":89,"author":{"gitId":"frisciliasultan"},"content":"        // Create directory and file"},{"lineNumber":90,"author":{"gitId":"frisciliasultan"},"content":"        file.getParentFile().mkdirs();"},{"lineNumber":91,"author":{"gitId":"frisciliasultan"},"content":"        file.createNewFile();"},{"lineNumber":92,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":94,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"frisciliasultan"},"content":"     * Overwrites the file with the new updated TaskList."},{"lineNumber":96,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"frisciliasultan"},"content":"     * @param list a List of Task object derived from TaskList"},{"lineNumber":98,"author":{"gitId":"frisciliasultan"},"content":"     *             with the updated Task objects."},{"lineNumber":99,"author":{"gitId":"frisciliasultan"},"content":"     * @throws IOException if an I/O error occurred."},{"lineNumber":100,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"frisciliasultan"},"content":"    void writeToFile(List\u003cTask\u003e list) throws IOException {"},{"lineNumber":102,"author":{"gitId":"frisciliasultan"},"content":"        FileWriter fw \u003d new FileWriter(file.getAbsolutePath());"},{"lineNumber":103,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":104,"author":{"gitId":"frisciliasultan"},"content":"        StringBuffer sb \u003d new StringBuffer();"},{"lineNumber":105,"author":{"gitId":"frisciliasultan"},"content":"        for (Task task : list) {"},{"lineNumber":106,"author":{"gitId":"frisciliasultan"},"content":"            sb.append(this.translateTask(task));"},{"lineNumber":107,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":109,"author":{"gitId":"frisciliasultan"},"content":"        fw.write(sb.toString());"},{"lineNumber":110,"author":{"gitId":"frisciliasultan"},"content":"        fw.close();"},{"lineNumber":111,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":113,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"frisciliasultan"},"content":"     * Adds a Task to the bottom of the file containing the TaskList."},{"lineNumber":115,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":116,"author":{"gitId":"frisciliasultan"},"content":"     * @param task a Task object to be added to the TaskList."},{"lineNumber":117,"author":{"gitId":"frisciliasultan"},"content":"     * @throws IOException if an I/O error occurred."},{"lineNumber":118,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"frisciliasultan"},"content":"    void appendToFile(Task task) throws IOException {"},{"lineNumber":120,"author":{"gitId":"frisciliasultan"},"content":"        // Create a FileWriter in append mode"},{"lineNumber":121,"author":{"gitId":"frisciliasultan"},"content":"        FileWriter fw \u003d new FileWriter(file.getAbsolutePath(), true);"},{"lineNumber":122,"author":{"gitId":"frisciliasultan"},"content":"        fw.write(this.translateTask(task));"},{"lineNumber":123,"author":{"gitId":"frisciliasultan"},"content":"        fw.close();"},{"lineNumber":124,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":125,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":126,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":127,"author":{"gitId":"frisciliasultan"},"content":"     * Translates a Task object into String format to be stored into the file."},{"lineNumber":128,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":129,"author":{"gitId":"frisciliasultan"},"content":"     * @param task a Task object to be translated to String."},{"lineNumber":130,"author":{"gitId":"frisciliasultan"},"content":"     * @return a String representation of the Task Object suitable to be stored in the file."},{"lineNumber":131,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":132,"author":{"gitId":"frisciliasultan"},"content":"    String translateTask(Task task) {"},{"lineNumber":133,"author":{"gitId":"frisciliasultan"},"content":"        int isDone \u003d task.isDone ? 1 : 0;"},{"lineNumber":134,"author":{"gitId":"frisciliasultan"},"content":"        if (task instanceof Todo) {"},{"lineNumber":135,"author":{"gitId":"frisciliasultan"},"content":"            return String.format(\"T : %d : %s\\n\", isDone, task.name);"},{"lineNumber":136,"author":{"gitId":"frisciliasultan"},"content":"        } else if (task instanceof Deadline) {"},{"lineNumber":137,"author":{"gitId":"frisciliasultan"},"content":"            return String.format(\"D : %d : %s : %s\\n\", isDone,"},{"lineNumber":138,"author":{"gitId":"frisciliasultan"},"content":"                    task.name, ((Deadline) task).getTime());"},{"lineNumber":139,"author":{"gitId":"frisciliasultan"},"content":"        } else {"},{"lineNumber":140,"author":{"gitId":"frisciliasultan"},"content":"            return String.format(\"E : %d : %s : %s\\n\", isDone,"},{"lineNumber":141,"author":{"gitId":"frisciliasultan"},"content":"                    task.name, ((Event) task).getTime());"},{"lineNumber":142,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":143,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":144,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":145,"author":{"gitId":"frisciliasultan"},"content":"    File getFile() {"},{"lineNumber":146,"author":{"gitId":"frisciliasultan"},"content":"        return file;"},{"lineNumber":147,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":148,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":148}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"    protected String name;"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"     * Initiates a Task with a name and isDone status."},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"     * @param name"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"    public Task(String name) {"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"        this.name \u003d name;"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"        this.isDone \u003d false;"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"     * Initiates a Task with a name and isDone status."},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"     * @param name"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"     * @param isDone"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"    public Task(String name, boolean isDone) {"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"        this.name \u003d name;"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"    public String toString() {"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"        if (this.isDone) {"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"            return String.format(\"[X] %s\", name);"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"        } else {"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"            return String.format(\"[ ] %s\", name);"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"    void markAsDone() {"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"        this.isDone \u003d true;"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":36}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"public class TaskList {"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"    private List\u003cTask\u003e list;"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"    private int listSize;"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created TaskList object"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents an empty List of Task."},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"    public TaskList() {"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"        this.listSize \u003d 0;"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created TaskList object"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents a List of Tasks"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"     * as given in the argument list."},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"     * @param list a List of Task containing Task objects."},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"    public TaskList(List\u003cTask\u003e list) {"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"        this.list \u003d list;"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"        this.listSize \u003d list.size();"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"     * Adds the task argument into the task list."},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"     * Prints out a response to indicate successful adding of task."},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"     * Prints out the current number of tasks in the list."},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"     * @param task a Task object to be added into the TaskList"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"    Task addTask(Task task) {"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"        list.add(task);"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"        listSize++;"},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"        return task;"},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"     * Removes the task of the given index from the task list."},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"     * Prints out a response to indicate successful removing of task."},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"     * Prints out the current number of tasks in the list."},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"     * @param index the 1-based index of the Task object to be removed."},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"    Task removeTask(int index) {"},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"        Task temp \u003d list.get(index - 1);"},{"lineNumber":52,"author":{"gitId":"frisciliasultan"},"content":"        list.remove(index - 1);"},{"lineNumber":53,"author":{"gitId":"frisciliasultan"},"content":"        listSize--;"},{"lineNumber":54,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":55,"author":{"gitId":"frisciliasultan"},"content":"        return temp;"},{"lineNumber":56,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":58,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"frisciliasultan"},"content":"     * Marks the task of the given index as done."},{"lineNumber":60,"author":{"gitId":"frisciliasultan"},"content":"     * Prints out a response to indicate successful marking of task."},{"lineNumber":61,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"frisciliasultan"},"content":"     * @param index the 1-based index of the Task object to be removed."},{"lineNumber":63,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"frisciliasultan"},"content":"    Task markTaskAsDone(int index) {"},{"lineNumber":65,"author":{"gitId":"frisciliasultan"},"content":"        Task temp \u003d list.get(index - 1);"},{"lineNumber":66,"author":{"gitId":"frisciliasultan"},"content":"        temp.markAsDone();"},{"lineNumber":67,"author":{"gitId":"frisciliasultan"},"content":"        return temp;"},{"lineNumber":68,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":70,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"frisciliasultan"},"content":"     * Returns the tasks in the list that matches the keyword argument."},{"lineNumber":72,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"frisciliasultan"},"content":"     * @param keyword the keyword to search for a Task."},{"lineNumber":74,"author":{"gitId":"frisciliasultan"},"content":"     * @return a List of Task containing all matching tasks."},{"lineNumber":75,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"frisciliasultan"},"content":"    List\u003cTask\u003e searchTask(String keyword) {"},{"lineNumber":77,"author":{"gitId":"frisciliasultan"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":78,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":79,"author":{"gitId":"frisciliasultan"},"content":"        for (Task t : list) {"},{"lineNumber":80,"author":{"gitId":"frisciliasultan"},"content":"            if (t.name.contains(keyword)) {"},{"lineNumber":81,"author":{"gitId":"frisciliasultan"},"content":"                matchingTasks.add(t);"},{"lineNumber":82,"author":{"gitId":"frisciliasultan"},"content":"            }"},{"lineNumber":83,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"frisciliasultan"},"content":"        return matchingTasks;"},{"lineNumber":85,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":87,"author":{"gitId":"frisciliasultan"},"content":"    List\u003cTask\u003e getList() {"},{"lineNumber":88,"author":{"gitId":"frisciliasultan"},"content":"        return this.list;"},{"lineNumber":89,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":91,"author":{"gitId":"frisciliasultan"},"content":"    int getListSize() {"},{"lineNumber":92,"author":{"gitId":"frisciliasultan"},"content":"        return this.listSize;"},{"lineNumber":93,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":94}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created Todo object"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents a Todo task with a name."},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises the Todo task isDone status to false."},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"     * @param name the description of the Todo task."},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"    public Todo(String name) {"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"        super(name);"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created Todo object"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents a Todo task with a name."},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises the Todo task isDone status to given isDone argument."},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"     * @param name the description of the Todo task."},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"     * @param isDone the status of the Todo task."},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"    public Todo(String name, boolean isDone) {"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"        super(name, isDone);"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"     * Creates a String representation of Todo object."},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"     * @return String representation of Todo."},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"        return String.format(\"[T]%s\", super.toString());"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":34}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"     * Prints the logo and welcome messages."},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"    String showWelcome() {"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"        String logo \u003d \"          ____                               \\n\""},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"                + \"        ,\u0027  , `.                                   \\n\""},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"                + \"     ,-+-,.\u0027 _ |                                   \\n\""},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"                + \"  ,-+-. ;   , ||                                   \\n\""},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"                + \" ,--.\u0027|\u0027   |  ;|                                   \\n\""},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"                + \"|   |  ,\u0027, |  \u0027:  ,--.--.        .--,    ,--.--.   \\n\""},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"                + \"|   | /  | |  || /       \\\\     /_ ./|   /       \\\\  \\n\""},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"                + \"\u0027   | :  | :  |,.--.  .-. | , \u0027 , \u0027 :  .--.  .-. | \\n\""},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"                + \";   . |  ; |--\u0027  \\\\__\\\\/: . ./___/ \\\\: |   \\\\__\\\\/: . . \\n\""},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"                + \"|   : |  | ,     ,\\\" .--.; | .  \\\\  \u0027 |   ,\\\" .--.; | \\n\""},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"                + \"|   : \u0027  |/     /  /  ,.  |  \\\\  ;   :  /  /  ,.  | \\n\""},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"                + \";   | |`-\u0027     ;  :   .\u0027   \\\\  \\\\  \\\\  ; ;  :   .\u0027   \\\\\\n\""},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"                + \"|   ;/         |  ,     .-./   :  \\\\  \\\\|  ,     .-./\\n\""},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"                + \"\u0027---\u0027           `--`---\u0027        \\\\  \u0027 ; `--`---\u0027    \\n\""},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"                + \"                                 `--` \";"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"        return String.format(logo + \"Hello, I\u0027m Maya! \\n    What can I do for you?\");"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"     * Prints the line separator."},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"    String showLine() {"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"        return \"    ____________________________________\";"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"     * Prints the exit message."},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"    String showBye() {"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"        return \"Bye. Hope to see you again soon!\";"},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"     * Prints the given list argument."},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"     * @param list the List of Task to be displayed."},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"     * @param isSearch a boolean representing whether"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"     *                 this command is a search command."},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"    String showList(List\u003cTask\u003e list, boolean isSearch) {"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"        if (isSearch) {"},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"            if (list.isEmpty()) {"},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"                return \"Sorry, there are no matching tasks in your list\";"},{"lineNumber":52,"author":{"gitId":"frisciliasultan"},"content":"            } else {"},{"lineNumber":53,"author":{"gitId":"frisciliasultan"},"content":"                return \"Here are matching tasks in your list:\";"},{"lineNumber":54,"author":{"gitId":"frisciliasultan"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"frisciliasultan"},"content":"        } else {"},{"lineNumber":56,"author":{"gitId":"frisciliasultan"},"content":"            StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"},{"lineNumber":57,"author":{"gitId":"frisciliasultan"},"content":"            for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"},{"lineNumber":58,"author":{"gitId":"frisciliasultan"},"content":"                sb.append(i + \". \" + list.get(i - 1) + \"\\n\");"},{"lineNumber":59,"author":{"gitId":"frisciliasultan"},"content":"            }"},{"lineNumber":60,"author":{"gitId":"frisciliasultan"},"content":"            System.out.println(\"skfj\");"},{"lineNumber":61,"author":{"gitId":"frisciliasultan"},"content":"            System.out.println(sb.toString());"},{"lineNumber":62,"author":{"gitId":"frisciliasultan"},"content":"            return sb.toString();"},{"lineNumber":63,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":66,"author":{"gitId":"frisciliasultan"},"content":"    String showDone(Task task) {"},{"lineNumber":67,"author":{"gitId":"frisciliasultan"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done:\\n%s\", task);"},{"lineNumber":68,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":70,"author":{"gitId":"frisciliasultan"},"content":"    String showAddTask(Task task, int listSize) {"},{"lineNumber":71,"author":{"gitId":"frisciliasultan"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":72,"author":{"gitId":"frisciliasultan"},"content":"                + \"%s\\nNow you have %d tasks in the list.\\n\", task, listSize);"},{"lineNumber":73,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":75,"author":{"gitId":"frisciliasultan"},"content":"    String showRemoveTask(Task task, int listSize) {"},{"lineNumber":76,"author":{"gitId":"frisciliasultan"},"content":"        return String.format(\"Noted. I\u0027ve removed this task:\\n\""},{"lineNumber":77,"author":{"gitId":"frisciliasultan"},"content":"                + \"%s\\nNow you have %d tasks in the list.\\n\", task, listSize);"},{"lineNumber":78,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":79}},{"path":"src/main/java/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"public class UnknownCommandException extends Exception {"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"    public UnknownCommandException() {"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":5}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"frisciliasultan":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"frisciliasultan":19}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"import java.io.PrintStream;"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"public class TaskListTest {"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"    private final PrintStream standardOut \u003d System.out;"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"    @BeforeEach"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"    public void setUp() {"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"    public void testAddTask() {"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"        TaskList list \u003d new TaskList();"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"        list.addTask(new Todo(\"eat\"));"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"        assertEquals(\"    Got it. I\u0027ve added this task:\\n\""},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"                        + \"        [T][ ] eat\\n\""},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"                        + \"    Now you have 1 tasks in the list.\\n\","},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"                            outputStreamCaptor.toString());"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"    @AfterEach"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"    public void tearDown() {"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"        System.setOut(standardOut);"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":36}},{"path":"src/test/java/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"import java.io.PrintStream;"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"public class UiTest {"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"    private final PrintStream standardOut \u003d System.out;"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"    @BeforeEach"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"    public void setUp() {"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"    public void testShowLine() {"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"        new Ui().showLine();"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"        assertEquals(\"    ____________________________________\\n\","},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"                outputStreamCaptor.toString());"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"    public void testShowBye() {"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"        new Ui().showBye();"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"        assertEquals(\"    Bye. Hope to see you again soon!\\n\","},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"                outputStreamCaptor.toString());"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"    public void testError() {"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"        new Ui().showError(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"        assertEquals(\"    ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\","},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"                outputStreamCaptor.toString());"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"    @AfterEach"},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"    public void tearDown() {"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"        System.setOut(standardOut);"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":44}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"list"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"list"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"delete 2"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"list"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"todo"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"deadline"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"event"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"lalala"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"bye"}],"authorContributionMap":{"frisciliasultan":13}}]
