[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"## User Guide"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"This is a CLI chatbot called Duke."},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"**Commands**"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"1. `list` - Displays the tasks contained in the task list."},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"1. `todo \u003ctask description\u003e` - Adds a task with no time limit into the task list."},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"1. `deadline \u003ctask description\u003e \\by \u003ctime\u003e` - Adds a task that needs to be done before a specific date/time into the task list."},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"1. `event \u003ctask description\u003e \\at \u003ctime\u003e` - Adds a task that start at a specific time and ends at a specific time into the task list."},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"1. `done \u003cindex\u003e` - Mark a specific task in the task list as done. E.g. `done 2` marks the second task in the task list as done."},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"1. `delete \u003cindex\u003e` - Remove a specific task from the task list. E.g. `delete 2` removes the second task from the task list."},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"1. `bye` - Exits the program"}],"authorContributionMap":{"frisciliasultan":14,"-":23}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"    archiveBaseName \u003d \"launcher\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"frisciliasultan":16,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"1. Display task list "},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"1. Add a Todo task"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"1. Add a Deadline task"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"1. Add an Event task"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"1. Search task"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"1. Mark task as done"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"1. Remove task"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"1. Say goodbye"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"### `list` - Displays the task list."},{"lineNumber":18,"author":{"gitId":"-"},"content":""},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"Displays the tasks contained in the task list. Tasks will be displayed by the order of adding to the task list."},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"Older tasks will be displayed first."},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"`list`"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"![Screenshot of task list](./screenshots/list.png)"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"### `todo \u003ctask description\u003e /p \u003clevel of priority\u003e` - Adds a Todo task"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"Adds a Todo task with no time limit into the task list. "},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"Task description and level of priority are Strings that cannot be empty."},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"Example of usage:"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"`todo eat /p high`"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"![Screenshot of Todo](./screenshots/todo.png)"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"### `deadline \u003ctask description\u003e /by \u003cYYYY-MM-DD\u003e /p \u003clevel of priority\u003e` - Adds a Deadline task"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"Adds a task that needs to be done before a specific date/time into the task list. "},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"Task description and level of priority are Strings that cannot be empty. Date must follow the format YYYY-MM-DD."},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"Example of usage:"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"`deadline eat /by 2020-10-20 /p low`"},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":52,"author":{"gitId":"frisciliasultan"},"content":"Expected outcome:"},{"lineNumber":53,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":54,"author":{"gitId":"frisciliasultan"},"content":"![Screenshot of Deadline](./screenshots/deadline.png)"},{"lineNumber":55,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":56,"author":{"gitId":"frisciliasultan"},"content":"### `event \u003ctask description\u003e /by \u003cYYYY-MM-DD\u003e /p \u003clevel of priority\u003e` - Adds an Event task"},{"lineNumber":57,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":58,"author":{"gitId":"frisciliasultan"},"content":"Adds a task that start at a specific time into the task list."},{"lineNumber":59,"author":{"gitId":"frisciliasultan"},"content":"Task description and level of priority are Strings that cannot be empty. Date must follow the format YYYY-MM-DD."},{"lineNumber":60,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":61,"author":{"gitId":"frisciliasultan"},"content":"Example of usage:"},{"lineNumber":62,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":63,"author":{"gitId":"frisciliasultan"},"content":"`event eat /at 2020-10-20 /p low`"},{"lineNumber":64,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":65,"author":{"gitId":"frisciliasultan"},"content":"Expected outcome:"},{"lineNumber":66,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":67,"author":{"gitId":"frisciliasultan"},"content":"![Screenshot of Event](./screenshots/event.png)"},{"lineNumber":68,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":69,"author":{"gitId":"frisciliasultan"},"content":"### `find \u003csearch keyword\u003e` - Search tasks"},{"lineNumber":70,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":71,"author":{"gitId":"frisciliasultan"},"content":"Searches the task list for all tasks with descriptions that contain the search keyword."},{"lineNumber":72,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":73,"author":{"gitId":"frisciliasultan"},"content":"Example of usage:"},{"lineNumber":74,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":75,"author":{"gitId":"frisciliasultan"},"content":"`find eat`"},{"lineNumber":76,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":77,"author":{"gitId":"frisciliasultan"},"content":"Expected outcome:"},{"lineNumber":78,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":79,"author":{"gitId":"frisciliasultan"},"content":"![Screenshot of Bye](./screenshots/find.png)"},{"lineNumber":80,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":81,"author":{"gitId":"frisciliasultan"},"content":"### `done \u003cindex\u003e` - Mark a task as done."},{"lineNumber":82,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":83,"author":{"gitId":"frisciliasultan"},"content":"Mark a specific task in the task list as done by specifying its index."},{"lineNumber":84,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":85,"author":{"gitId":"frisciliasultan"},"content":"Example of usage:"},{"lineNumber":86,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":87,"author":{"gitId":"frisciliasultan"},"content":"`done 2`"},{"lineNumber":88,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":89,"author":{"gitId":"frisciliasultan"},"content":"Expected outcome:"},{"lineNumber":90,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":91,"author":{"gitId":"frisciliasultan"},"content":"![Screenshot of Done](./screenshots/done.png)"},{"lineNumber":92,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":93,"author":{"gitId":"frisciliasultan"},"content":"### `delete \u003cindex\u003e` - Remove task"},{"lineNumber":94,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":95,"author":{"gitId":"frisciliasultan"},"content":"Remove a specific task from the task list by specifying its index."},{"lineNumber":96,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":97,"author":{"gitId":"frisciliasultan"},"content":"Example of usage:"},{"lineNumber":98,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":99,"author":{"gitId":"frisciliasultan"},"content":"`delete 2`"},{"lineNumber":100,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":101,"author":{"gitId":"frisciliasultan"},"content":"Expected outcome:"},{"lineNumber":102,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":103,"author":{"gitId":"frisciliasultan"},"content":"![Screenshot of Delete](./screenshots/delete.png)"},{"lineNumber":104,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":105,"author":{"gitId":"frisciliasultan"},"content":"### `bye` - Says goodbye"},{"lineNumber":106,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":107,"author":{"gitId":"frisciliasultan"},"content":"Gets Maya to say her goodbye message."},{"lineNumber":108,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":109,"author":{"gitId":"frisciliasultan"},"content":"Example of usage:"},{"lineNumber":110,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":111,"author":{"gitId":"frisciliasultan"},"content":"`bye`"},{"lineNumber":112,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":113,"author":{"gitId":"frisciliasultan"},"content":"Expected outcome:"},{"lineNumber":114,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":115,"author":{"gitId":"frisciliasultan"},"content":"![Screenshot of Bye](./screenshots/bye.png)"},{"lineNumber":116,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":117,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":118,"author":{"gitId":"frisciliasultan"},"content":""}],"authorContributionMap":{"frisciliasultan":101,"-":17}},{"path":"src/main/java/CommandFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"public class CommandFormatException extends MayaException {"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a CommandFormatException."},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"     * Message is initialised to the default message."},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"    public CommandFormatException() {"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"        super(\"The command you have entered did not follow the format. Please try again!\");"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a CommandFormatException."},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"     * @param message a String representation of the custom error message."},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"    public CommandFormatException(String message) {"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"        super(message);"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":18}},{"path":"src/main/java/CommandHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"public class CommandHandler {"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"    private Ui ui;"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"    private TaskList taskList;"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"    private Storage storage;"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"    public CommandHandler(Ui ui, TaskList taskList, Storage storage) {"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"        this.ui \u003d ui;"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"        this.storage \u003d storage;"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"     * Gets Maya\u0027s response to bye command."},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"     * @return a String representing Maya\u0027s response to bye command."},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"    String handleByeCommand() {"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"        return ui.showBye();"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"     * Gets Maya\u0027s response to list command."},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"     * @return a String representing Maya\u0027s response to list command."},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"    String handleListCommand() {"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"        return ui.showList(taskList.getList(), false);"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"     * Gets Maya\u0027s response to done command."},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"     * @param index an integer represents the index of the task to be marked as done."},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"     * @return a String representing Maya\u0027s response to done command."},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"    String handleDoneCommand(int index) throws IOException, CommandFormatException {"},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"            Task doneTask \u003d taskList.markTaskAsDone(index);"},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"            storage.writeToFile(taskList.getList());"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"            return ui.showDone(doneTask);"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"            throw new CommandFormatException(\"Index entered is invalid!\");"},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"     * Gets Maya\u0027s response to the task command. Task commands consist of todo, deadline and event."},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"     * @param taskType a String representing the type of Task."},{"lineNumber":52,"author":{"gitId":"frisciliasultan"},"content":"     * @param name a String representing the name of the Task."},{"lineNumber":53,"author":{"gitId":"frisciliasultan"},"content":"     * @param priority a String representing the level of priority of the Task."},{"lineNumber":54,"author":{"gitId":"frisciliasultan"},"content":"     * @param time a String representing when the task is to be finished."},{"lineNumber":55,"author":{"gitId":"frisciliasultan"},"content":"     * @return a String representing Maya\u0027s response to task commands."},{"lineNumber":56,"author":{"gitId":"frisciliasultan"},"content":"     * @throws IOException if Storage cannot find file."},{"lineNumber":57,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"frisciliasultan"},"content":"    String handleTaskCommand(String taskType, String name,"},{"lineNumber":59,"author":{"gitId":"frisciliasultan"},"content":"                             String priority, String time) throws IOException {"},{"lineNumber":60,"author":{"gitId":"frisciliasultan"},"content":"        Task task;"},{"lineNumber":61,"author":{"gitId":"frisciliasultan"},"content":"        if (taskType.equals(\"todo\")) {"},{"lineNumber":62,"author":{"gitId":"frisciliasultan"},"content":"            task \u003d new Todo(name, priority);"},{"lineNumber":63,"author":{"gitId":"frisciliasultan"},"content":"        } else if (taskType.equals(\"deadline\")){"},{"lineNumber":64,"author":{"gitId":"frisciliasultan"},"content":"            task \u003d new Deadline(name, time, priority);"},{"lineNumber":65,"author":{"gitId":"frisciliasultan"},"content":"        } else {"},{"lineNumber":66,"author":{"gitId":"frisciliasultan"},"content":"            task \u003d new Event(name, time, priority);"},{"lineNumber":67,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":69,"author":{"gitId":"frisciliasultan"},"content":"        Task newTask \u003d taskList.addTask(task);"},{"lineNumber":70,"author":{"gitId":"frisciliasultan"},"content":"        storage.appendToFile(task);"},{"lineNumber":71,"author":{"gitId":"frisciliasultan"},"content":"        return ui.showAddTask(newTask, taskList.getListSize());"},{"lineNumber":72,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":74,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"frisciliasultan"},"content":"     * Gets Maya\u0027s response to find command."},{"lineNumber":76,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"frisciliasultan"},"content":"     * @param searchString a String representing the keyword to search for a task."},{"lineNumber":78,"author":{"gitId":"frisciliasultan"},"content":"     * @return a String representing Maya\u0027s response to find command."},{"lineNumber":79,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"frisciliasultan"},"content":"    String handleFindCommand(String searchString) {"},{"lineNumber":81,"author":{"gitId":"frisciliasultan"},"content":"        return ui.showList(taskList.searchTask(searchString.trim()), true);"},{"lineNumber":82,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":84,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":85,"author":{"gitId":"frisciliasultan"},"content":"     * Gets Maya\u0027s response to delete command."},{"lineNumber":86,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":87,"author":{"gitId":"frisciliasultan"},"content":"     * @param index an integer represents the index of the task to be deleted."},{"lineNumber":88,"author":{"gitId":"frisciliasultan"},"content":"     * @return a String representing Maya\u0027s response to delete command."},{"lineNumber":89,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"frisciliasultan"},"content":"    String handleDeleteCommand(int index) throws IOException, CommandFormatException {"},{"lineNumber":91,"author":{"gitId":"frisciliasultan"},"content":"        try {"},{"lineNumber":92,"author":{"gitId":"frisciliasultan"},"content":"            Task removedTask \u003d taskList.removeTask(index);"},{"lineNumber":93,"author":{"gitId":"frisciliasultan"},"content":"            storage.writeToFile(taskList.getList());"},{"lineNumber":94,"author":{"gitId":"frisciliasultan"},"content":"            return ui.showRemoveTask(removedTask, taskList.getListSize());"},{"lineNumber":95,"author":{"gitId":"frisciliasultan"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":96,"author":{"gitId":"frisciliasultan"},"content":"            throw new CommandFormatException(\"Index entered is invalid!\");"},{"lineNumber":97,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":99}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"public class Deadline extends Task {"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"    private LocalDate time;"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created Deadline object"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents a Deadline task"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"     * with the name and time according to its supplied arguments."},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises the Deadline task isDone status to false."},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"     * @param name the description of the Deadline task."},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"     * @param time LocalDate object that represents"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"     *            the time this Deadline is happening."},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"    public Deadline(String name, String time, String priority) {"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"        super(name, priority);"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"        this.time \u003d LocalDate.parse(time);"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created Deadline object"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents a Deadline task"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"     * with the name, isDone and time according to its supplied arguments."},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"     * @param name the description of the Deadline task."},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"     * @param isDone the status of the Deadline task."},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"     * @param time LocalDate object that represents"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"     *            the time this Deadline is happening."},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"    public Deadline(String name, boolean isDone, String time, String priority) {"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"        super(name, isDone, priority);"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"        this.time \u003d LocalDate.parse(time);"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"     * Creates a String representation of Deadline object."},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"     * @return String representation of Deadline."},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"    public String toString() {"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),"},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"                time.format(DateTimeFormatter.ofPattern(\"dd MMM yyy\")));"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"    LocalDate getTime() {"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"        return this.time;"},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":51}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"import java.util.Collections;"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"import javafx.geometry.Pos;"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.Node;"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.control.Label;"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":" * An example of a custom control using FXML."},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":" * containing text from the speaker."},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":" */"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"public class DialogBox extends HBox {"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"    private Label dialog;"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"    private ImageView displayPicture;"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"            fxmlLoader.load();"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"        } catch (IOException e) {"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"        dialog.setText(text);"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"    private void flip() {"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"        Collections.reverse(tmp);"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"     * Creates dialog box for user according to user input with user image."},{"lineNumber":52,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"frisciliasultan"},"content":"     * @param text a String representing the user input."},{"lineNumber":54,"author":{"gitId":"frisciliasultan"},"content":"     * @param img an Image for user profile picture."},{"lineNumber":55,"author":{"gitId":"frisciliasultan"},"content":"     * @return DialogBox with user input and image."},{"lineNumber":56,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"frisciliasultan"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":58,"author":{"gitId":"frisciliasultan"},"content":"        return new DialogBox(text, img);"},{"lineNumber":59,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":61,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"frisciliasultan"},"content":"     * Creates dialog box for Maya according to response to user input."},{"lineNumber":63,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":64,"author":{"gitId":"frisciliasultan"},"content":"     * @param text a String representing the response to user input."},{"lineNumber":65,"author":{"gitId":"frisciliasultan"},"content":"     * @param img an Image for Maya profile picture."},{"lineNumber":66,"author":{"gitId":"frisciliasultan"},"content":"     * @return DialogBox with Maya response and image."},{"lineNumber":67,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"frisciliasultan"},"content":"    public static DialogBox getMayaDialog(String text, Image img) {"},{"lineNumber":69,"author":{"gitId":"frisciliasultan"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":70,"author":{"gitId":"frisciliasultan"},"content":"        db.flip();"},{"lineNumber":71,"author":{"gitId":"frisciliasultan"},"content":"        return db;"},{"lineNumber":72,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":73}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"public class Event extends Task {"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"    private LocalDate time;"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created Event object"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents a Event task"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"     * with the name and time according to its supplied arguments."},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises the Event task isDone status to false."},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"     * @param name the description of the Event task."},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"     * @param time LocalDate object that represents"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"     *            the time this Event is happening."},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"     * @param priority a String representing the priority of the task."},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"    public Event(String name, String time, String priority) {"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"        super(name, priority);"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"        this.time \u003d LocalDate.parse(time);"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created Event object"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents a Event task"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"     * with the name, isDone and time according to its supplied arguments."},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"     * @param name the description of the Event task."},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"     * @param isDone the status of the Event task."},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"     * @param time LocalDate object that represents"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"     *            the time this Event is happening."},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"     * @param priority a String representing the priority of the task."},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"    public Event(String name, boolean isDone, String time, String priority) {"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"        super(name, isDone, priority);"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"        this.time \u003d LocalDate.parse(time);"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"     * Creates a String representation of Event object."},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"     * @return String representation of Event."},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"    @Override"},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"    public String toString() {"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(),"},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":"                time.format(DateTimeFormatter.ofPattern(\"dd MMM yyy\")));"},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"    LocalDate getTime() {"},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"        return this.time;"},{"lineNumber":52,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":53}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":" */"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":" * A GUI for Duke using FXML."},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":" */"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"    private Maya maya \u003d new Maya(\"data/task.txt\");"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"    public void start(Stage stage) {"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"            stage.setTitle(\"Maya\");"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"            stage.setScene(scene);"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setMaya(maya);"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"            stage.show();"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"        } catch (IOException e) {"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"            e.printStackTrace();"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":30}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import javafx.fxml.FXML;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.control.Button;"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.image.Image;"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":" */"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"    @FXML"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"    @FXML"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"    private VBox dialogContainer;"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"    private TextField userInput;"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"    private Button sendButton;"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"    private Maya maya;"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/tucker.jpg\"));"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"    private Image mayaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/maya.jpg\"));"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"    public void initialize() {"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"    public void setMaya(Maya m) {"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"        maya \u003d m;"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"    @FXML"},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"    private void handleUserInput() {"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"        String response \u003d maya.getResponse(input);"},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"        System.out.println(response);"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"                DialogBox.getMayaDialog(response, mayaImage)"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"        );"},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"        userInput.clear();"},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":52}},{"path":"src/main/java/Maya.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.Scene;"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.control.Button;"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.control.Label;"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"import javafx.stage.Stage;"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"public class Maya extends Application {"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"    private VBox dialogContainer;"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"    private TextField userInput;"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"    private final Image maya \u003d new Image(this.getClass().getResourceAsStream(\"/images/maya.jpg\"));"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/tucker.jpg\"));"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"    private Storage storage;"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"    private TaskList taskList;"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"    private Ui ui;"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"    private CommandHandler commandHandler;"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"     * Initiates an object of Maya with a Ui and Storage object."},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"     * @param filePath a String that represents the path to store the file of Tasks."},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"    public Maya(String filePath) {"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"        ui \u003d new Ui();"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"            taskList \u003d storage.load();"},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"        } catch (UnknownCommandException | NoSuchElementException"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"                | ArrayIndexOutOfBoundsException | IOException e) {"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"        commandHandler \u003d new CommandHandler(ui, taskList, storage);"},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"    public void start(Stage stage) {"},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"        scrollPane \u003d new ScrollPane();"},{"lineNumber":52,"author":{"gitId":"frisciliasultan"},"content":"        dialogContainer \u003d new VBox();"},{"lineNumber":53,"author":{"gitId":"frisciliasultan"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":54,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":55,"author":{"gitId":"frisciliasultan"},"content":"        userInput \u003d new TextField();"},{"lineNumber":56,"author":{"gitId":"frisciliasultan"},"content":"        Button sendButton \u003d new Button(\"Send\");"},{"lineNumber":57,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":58,"author":{"gitId":"frisciliasultan"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();"},{"lineNumber":59,"author":{"gitId":"frisciliasultan"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":60,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":61,"author":{"gitId":"frisciliasultan"},"content":"        Scene scene \u003d new Scene(mainLayout);"},{"lineNumber":62,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":63,"author":{"gitId":"frisciliasultan"},"content":"        stage.setScene(scene);"},{"lineNumber":64,"author":{"gitId":"frisciliasultan"},"content":"        stage.show();"},{"lineNumber":65,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":66,"author":{"gitId":"frisciliasultan"},"content":"        stage.setTitle(\"Maya\");"},{"lineNumber":67,"author":{"gitId":"frisciliasultan"},"content":"        stage.setResizable(false);"},{"lineNumber":68,"author":{"gitId":"frisciliasultan"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":69,"author":{"gitId":"frisciliasultan"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":70,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":71,"author":{"gitId":"frisciliasultan"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":72,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":73,"author":{"gitId":"frisciliasultan"},"content":"        scrollPane.setPrefSize(400, 545);"},{"lineNumber":74,"author":{"gitId":"frisciliasultan"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":75,"author":{"gitId":"frisciliasultan"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":76,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":77,"author":{"gitId":"frisciliasultan"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":78,"author":{"gitId":"frisciliasultan"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":79,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":80,"author":{"gitId":"frisciliasultan"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":81,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":82,"author":{"gitId":"frisciliasultan"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":83,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":84,"author":{"gitId":"frisciliasultan"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":85,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":86,"author":{"gitId":"frisciliasultan"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":87,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":88,"author":{"gitId":"frisciliasultan"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":89,"author":{"gitId":"frisciliasultan"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":90,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":91,"author":{"gitId":"frisciliasultan"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);"},{"lineNumber":92,"author":{"gitId":"frisciliasultan"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":93,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":94,"author":{"gitId":"frisciliasultan"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":95,"author":{"gitId":"frisciliasultan"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"},{"lineNumber":96,"author":{"gitId":"frisciliasultan"},"content":"            userInput.clear();"},{"lineNumber":97,"author":{"gitId":"frisciliasultan"},"content":"        });"},{"lineNumber":98,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":99,"author":{"gitId":"frisciliasultan"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":100,"author":{"gitId":"frisciliasultan"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"},{"lineNumber":101,"author":{"gitId":"frisciliasultan"},"content":"            userInput.clear();"},{"lineNumber":102,"author":{"gitId":"frisciliasultan"},"content":"        });"},{"lineNumber":103,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":104,"author":{"gitId":"frisciliasultan"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":105,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":106,"author":{"gitId":"frisciliasultan"},"content":"        sendButton.setOnMouseClicked((event) -\u003e handleUserInput());"},{"lineNumber":107,"author":{"gitId":"frisciliasultan"},"content":"        userInput.setOnAction((event) -\u003e handleUserInput());"},{"lineNumber":108,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":110,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":111,"author":{"gitId":"frisciliasultan"},"content":"     * Creates a label with the specified text and adds it to the dialog container."},{"lineNumber":112,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":113,"author":{"gitId":"frisciliasultan"},"content":"     * @param text String containing text to add"},{"lineNumber":114,"author":{"gitId":"frisciliasultan"},"content":"     * @return a label with the specified text that has word wrap enabled."},{"lineNumber":115,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":116,"author":{"gitId":"frisciliasultan"},"content":"    private Label getDialogLabel(String text) {"},{"lineNumber":117,"author":{"gitId":"frisciliasultan"},"content":"        Label textToAdd \u003d new Label(text);"},{"lineNumber":118,"author":{"gitId":"frisciliasultan"},"content":"        textToAdd.setWrapText(true);"},{"lineNumber":119,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":120,"author":{"gitId":"frisciliasultan"},"content":"        return textToAdd;"},{"lineNumber":121,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":123,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"frisciliasultan"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":125,"author":{"gitId":"frisciliasultan"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":126,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"frisciliasultan"},"content":"    private void handleUserInput() {"},{"lineNumber":128,"author":{"gitId":"frisciliasultan"},"content":"        String userText \u003d userInput.getText();"},{"lineNumber":129,"author":{"gitId":"frisciliasultan"},"content":"        String mayaText \u003d getResponse(userInput.getText());"},{"lineNumber":130,"author":{"gitId":"frisciliasultan"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":131,"author":{"gitId":"frisciliasultan"},"content":"                DialogBox.getUserDialog(userText, user),"},{"lineNumber":132,"author":{"gitId":"frisciliasultan"},"content":"                DialogBox.getMayaDialog(mayaText, maya)"},{"lineNumber":133,"author":{"gitId":"frisciliasultan"},"content":"        );"},{"lineNumber":134,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":135,"author":{"gitId":"frisciliasultan"},"content":"        userInput.clear();"},{"lineNumber":136,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":137,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":138,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":139,"author":{"gitId":"frisciliasultan"},"content":"     * Gets the response to the user input."},{"lineNumber":140,"author":{"gitId":"frisciliasultan"},"content":"     * @param input a String representing the user input"},{"lineNumber":141,"author":{"gitId":"frisciliasultan"},"content":"     * @return a String representing Maya\u0027s response to user input"},{"lineNumber":142,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":143,"author":{"gitId":"frisciliasultan"},"content":"    public String getResponse(String input) {"},{"lineNumber":144,"author":{"gitId":"frisciliasultan"},"content":"        try {"},{"lineNumber":145,"author":{"gitId":"frisciliasultan"},"content":"            return Parser.parse(input, commandHandler);"},{"lineNumber":146,"author":{"gitId":"frisciliasultan"},"content":"        } catch (MayaException | IOException e) {"},{"lineNumber":147,"author":{"gitId":"frisciliasultan"},"content":"            return e.getMessage();"},{"lineNumber":148,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":151,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":152,"author":{"gitId":"frisciliasultan"},"content":"     * Starts the Maya object to accept user commands."},{"lineNumber":153,"author":{"gitId":"frisciliasultan"},"content":"     * Processes user commands by utilising Parser object"},{"lineNumber":154,"author":{"gitId":"frisciliasultan"},"content":"     * to make sense of the user command."},{"lineNumber":155,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":156,"author":{"gitId":"frisciliasultan"},"content":"    public void run() {"},{"lineNumber":157,"author":{"gitId":"frisciliasultan"},"content":"        try {"},{"lineNumber":158,"author":{"gitId":"frisciliasultan"},"content":"            taskList \u003d storage.load();"},{"lineNumber":159,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":160,"author":{"gitId":"frisciliasultan"},"content":"            ui.showWelcome();"},{"lineNumber":161,"author":{"gitId":"frisciliasultan"},"content":"            Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":162,"author":{"gitId":"frisciliasultan"},"content":"            while (sc.hasNext()) {"},{"lineNumber":163,"author":{"gitId":"frisciliasultan"},"content":"                String command \u003d sc.next();"},{"lineNumber":164,"author":{"gitId":"frisciliasultan"},"content":"                ui.showLine();"},{"lineNumber":165,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":166,"author":{"gitId":"frisciliasultan"},"content":"                System.out.println(Parser.parse(command, commandHandler));"},{"lineNumber":167,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":168,"author":{"gitId":"frisciliasultan"},"content":"                // To exit the program with the command \"bye\""},{"lineNumber":169,"author":{"gitId":"frisciliasultan"},"content":"                if (command.equals(\"bye\")) {"},{"lineNumber":170,"author":{"gitId":"frisciliasultan"},"content":"                    break;"},{"lineNumber":171,"author":{"gitId":"frisciliasultan"},"content":"                }"},{"lineNumber":172,"author":{"gitId":"frisciliasultan"},"content":"            }"},{"lineNumber":173,"author":{"gitId":"frisciliasultan"},"content":"            sc.close();"},{"lineNumber":174,"author":{"gitId":"frisciliasultan"},"content":"        } catch (MayaException | IOException e) {"},{"lineNumber":175,"author":{"gitId":"frisciliasultan"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":176,"author":{"gitId":"frisciliasultan"},"content":"        } finally {"},{"lineNumber":177,"author":{"gitId":"frisciliasultan"},"content":"            ui.showLine();"},{"lineNumber":178,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":179,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":181,"author":{"gitId":"frisciliasultan"},"content":"    public static void main(String[] args) {"},{"lineNumber":182,"author":{"gitId":"frisciliasultan"},"content":"        new Maya(\"data/task.txt\").run();"},{"lineNumber":183,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"frisciliasultan":183,"-":1}},{"path":"src/main/java/MayaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"public class MayaException extends Exception {"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"    public MayaException(String message) {"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"        super(message);"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":5}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"public class Parser {"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"     * Parses the user command and instructs the taskList, ui or sc"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"     * to carry out different functions according to the command argument."},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"     * @param command a String representing user input."},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"     * @param commandHandler a CommandHandler object to handle the response to user input."},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"     * @return a String representing Maya\u0027s response to the user command."},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"     * @throws MayaException if command is not supported by Maya."},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"     * @throws IOException if null is supplied to Storage or if file is not found."},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"    static String parse(String command, CommandHandler commandHandler) throws MayaException, IOException {"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"        switch(parseCommand(command)) {"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"        case \"bye\":"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"            return commandHandler.handleByeCommand();"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"        case \"list\":"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"            return commandHandler.handleListCommand();"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"        case \"done\":"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"            // To get the index"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"            int index \u003d Integer.parseInt(getDescription(command));"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"            return commandHandler.handleDoneCommand(index);"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"        case \"todo\":"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"            return parseTaskCommand(\"todo\", command, commandHandler);"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"        case \"deadline\":"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"            return parseTaskCommand(\"deadline\", command, commandHandler);"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"        case \"event\":"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"            return parseTaskCommand(\"event\", command, commandHandler);"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"        case \"find\":"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"            String searchString \u003d getDescription(command);"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"            return commandHandler.handleFindCommand(searchString);"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"        case \"delete\":"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"            // To get the index"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"            int i \u003d Integer.parseInt(getDescription(command));"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"            return commandHandler.handleDeleteCommand(i);"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"        default:"},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":"            throw new UnknownCommandException();"},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"     * Returns the first word of the user input."},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"     * @param command a String representing the user input."},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":"     * @return a String for the first word of the user input."},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"    static String parseCommand(String command) {"},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"        return command.split(\" \", 2)[0];"},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":53,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"frisciliasultan"},"content":"     * Returns the user input from the second word to the end."},{"lineNumber":55,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"frisciliasultan"},"content":"     * @param command a String representing the user input."},{"lineNumber":57,"author":{"gitId":"frisciliasultan"},"content":"     * @return a String the user input from the second word to the end."},{"lineNumber":58,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"frisciliasultan"},"content":"    static String getDescription(String command) throws CommandFormatException {"},{"lineNumber":60,"author":{"gitId":"frisciliasultan"},"content":"        try {"},{"lineNumber":61,"author":{"gitId":"frisciliasultan"},"content":"            return command.split(\" \", 2)[1];"},{"lineNumber":62,"author":{"gitId":"frisciliasultan"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":63,"author":{"gitId":"frisciliasultan"},"content":"            String task \u003d parseCommand(command);"},{"lineNumber":64,"author":{"gitId":"frisciliasultan"},"content":"            if (task.equals(\"find\")) {"},{"lineNumber":65,"author":{"gitId":"frisciliasultan"},"content":"                throw new CommandFormatException(\"☹ OOPS!!! The search keyword cannot be empty.\");"},{"lineNumber":66,"author":{"gitId":"frisciliasultan"},"content":"            } else {"},{"lineNumber":67,"author":{"gitId":"frisciliasultan"},"content":"                throw new CommandFormatException(\"☹ OOPS!!! The description of \" + task"},{"lineNumber":68,"author":{"gitId":"frisciliasultan"},"content":"                        + \" cannot be empty.\");"},{"lineNumber":69,"author":{"gitId":"frisciliasultan"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":73,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"frisciliasultan"},"content":"     * Splits a given text once by a given regex."},{"lineNumber":75,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"frisciliasultan"},"content":"     * @param text a String representing the text to be split."},{"lineNumber":77,"author":{"gitId":"frisciliasultan"},"content":"     * @param regex a String representing how the text should be split."},{"lineNumber":78,"author":{"gitId":"frisciliasultan"},"content":"     * @return a String array with 2 members after splitting."},{"lineNumber":79,"author":{"gitId":"frisciliasultan"},"content":"     * @throws CommandFormatException if the length of the resulting array is less than 2."},{"lineNumber":80,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"frisciliasultan"},"content":"    static String[] splitByRegex(String text, String regex) throws CommandFormatException {"},{"lineNumber":82,"author":{"gitId":"frisciliasultan"},"content":"        String[] splitArr \u003d text.split(regex, 2);"},{"lineNumber":83,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":84,"author":{"gitId":"frisciliasultan"},"content":"        if (splitArr.length \u003c 2) {"},{"lineNumber":85,"author":{"gitId":"frisciliasultan"},"content":"            throw new CommandFormatException();"},{"lineNumber":86,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":88,"author":{"gitId":"frisciliasultan"},"content":"        return splitArr;"},{"lineNumber":89,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":91,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"frisciliasultan"},"content":"     * Parses the task commands into name, priority and time."},{"lineNumber":93,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":94,"author":{"gitId":"frisciliasultan"},"content":"     * @param taskType a String representing the type of Task (todo, deadline or event)."},{"lineNumber":95,"author":{"gitId":"frisciliasultan"},"content":"     * @param command a String representing the user command."},{"lineNumber":96,"author":{"gitId":"frisciliasultan"},"content":"     * @param commandHandler a commandHandler object."},{"lineNumber":97,"author":{"gitId":"frisciliasultan"},"content":"     * @return a String representing Maya\u0027s response to the task command."},{"lineNumber":98,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":99,"author":{"gitId":"frisciliasultan"},"content":"    static String parseTaskCommand(String taskType, String command, CommandHandler commandHandler)"},{"lineNumber":100,"author":{"gitId":"frisciliasultan"},"content":"            throws CommandFormatException, IOException {"},{"lineNumber":101,"author":{"gitId":"frisciliasultan"},"content":"        String description \u003d getDescription(command);"},{"lineNumber":102,"author":{"gitId":"frisciliasultan"},"content":"        String name;"},{"lineNumber":103,"author":{"gitId":"frisciliasultan"},"content":"        String priority;"},{"lineNumber":104,"author":{"gitId":"frisciliasultan"},"content":"        String time;"},{"lineNumber":105,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":106,"author":{"gitId":"frisciliasultan"},"content":"        if (taskType.equals(\"todo\")) {"},{"lineNumber":107,"author":{"gitId":"frisciliasultan"},"content":"            String[] splitByPriorityArr \u003d splitByRegex(description, \"/p\");"},{"lineNumber":108,"author":{"gitId":"frisciliasultan"},"content":"            name \u003d splitByPriorityArr[0].trim();"},{"lineNumber":109,"author":{"gitId":"frisciliasultan"},"content":"            priority \u003d splitByPriorityArr[1].trim();"},{"lineNumber":110,"author":{"gitId":"frisciliasultan"},"content":"            time \u003d \"\";"},{"lineNumber":111,"author":{"gitId":"frisciliasultan"},"content":"        } else {"},{"lineNumber":112,"author":{"gitId":"frisciliasultan"},"content":"            String regex;"},{"lineNumber":113,"author":{"gitId":"frisciliasultan"},"content":"            if (taskType.equals(\"deadline\")) {"},{"lineNumber":114,"author":{"gitId":"frisciliasultan"},"content":"                regex \u003d \"/by\";"},{"lineNumber":115,"author":{"gitId":"frisciliasultan"},"content":"            } else {"},{"lineNumber":116,"author":{"gitId":"frisciliasultan"},"content":"                regex \u003d \"/at\";"},{"lineNumber":117,"author":{"gitId":"frisciliasultan"},"content":"            }"},{"lineNumber":118,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":119,"author":{"gitId":"frisciliasultan"},"content":"            String[] splitTimeArr \u003d splitByRegex(description, regex);"},{"lineNumber":120,"author":{"gitId":"frisciliasultan"},"content":"            String[] splitByPriorityArr \u003d splitByRegex(splitTimeArr[1], \"/p\");"},{"lineNumber":121,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":122,"author":{"gitId":"frisciliasultan"},"content":"            name \u003d splitTimeArr[0].trim();"},{"lineNumber":123,"author":{"gitId":"frisciliasultan"},"content":"            priority \u003d splitByPriorityArr[1].trim();"},{"lineNumber":124,"author":{"gitId":"frisciliasultan"},"content":"            time \u003d splitByPriorityArr[0].trim();"},{"lineNumber":125,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":127,"author":{"gitId":"frisciliasultan"},"content":"        return commandHandler.handleTaskCommand(taskType, name, priority, time);"},{"lineNumber":128,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":129}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"import java.nio.file.Paths;"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"public class Storage {"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"    private File file;"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created Storage object"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents a File"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"     * where the TaskList will be stored in."},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"     * @param pathname a String representing the path"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"     *                 where the list will be stored."},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"    public Storage(String pathname) {"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"        file \u003d new File(Paths.get(pathname).toString());"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"     * Creates a file according to the specified pathName."},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"     * @throws IOException if an I/O error occurred."},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"    void createFile() throws IOException {"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"        // Create directory and file"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"        file.getParentFile().mkdirs();"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"        file.createNewFile();"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"     * Overwrites the file with the new updated TaskList."},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":"     * @param list a List of Task object derived from TaskList"},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"     *             with the updated Task objects."},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"     * @throws IOException if an I/O error occurred."},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"    void writeToFile(List\u003cTask\u003e list) throws IOException {"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"        FileWriter fw \u003d new FileWriter(file.getAbsolutePath());"},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"        StringBuffer sb \u003d new StringBuffer();"},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":"        for (Task task : list) {"},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"            sb.append(this.translateTask(task));"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"        fw.write(sb.toString());"},{"lineNumber":52,"author":{"gitId":"frisciliasultan"},"content":"        fw.close();"},{"lineNumber":53,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":55,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"frisciliasultan"},"content":"     * Adds a Task to the bottom of the file containing the TaskList."},{"lineNumber":57,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"frisciliasultan"},"content":"     * @param task a Task object to be added to the TaskList."},{"lineNumber":59,"author":{"gitId":"frisciliasultan"},"content":"     * @throws IOException if an I/O error occurred."},{"lineNumber":60,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"frisciliasultan"},"content":"    void appendToFile(Task task) throws IOException {"},{"lineNumber":62,"author":{"gitId":"frisciliasultan"},"content":"        // Create a FileWriter in append mode"},{"lineNumber":63,"author":{"gitId":"frisciliasultan"},"content":"        FileWriter fw \u003d new FileWriter(file.getAbsolutePath(), true);"},{"lineNumber":64,"author":{"gitId":"frisciliasultan"},"content":"        fw.write(this.translateTask(task));"},{"lineNumber":65,"author":{"gitId":"frisciliasultan"},"content":"        fw.close();"},{"lineNumber":66,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":68,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"frisciliasultan"},"content":"     * Creates a new file in the path specified"},{"lineNumber":70,"author":{"gitId":"frisciliasultan"},"content":"     * and return an empty TaskList if file does not exist."},{"lineNumber":71,"author":{"gitId":"frisciliasultan"},"content":"     * Otherwise, reads from the existing file"},{"lineNumber":72,"author":{"gitId":"frisciliasultan"},"content":"     * and translates its contents into a TaskList."},{"lineNumber":73,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":74,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":75,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"frisciliasultan"},"content":"     * @return a TaskList object according to the file specified."},{"lineNumber":77,"author":{"gitId":"frisciliasultan"},"content":"     * @throws IOException if an I/O error occurred."},{"lineNumber":78,"author":{"gitId":"frisciliasultan"},"content":"     * @throws UnknownCommandException if file contents contain unsupported Task object."},{"lineNumber":79,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"frisciliasultan"},"content":"    TaskList load() throws IOException, UnknownCommandException {"},{"lineNumber":81,"author":{"gitId":"frisciliasultan"},"content":"        if (file.exists()) {"},{"lineNumber":82,"author":{"gitId":"frisciliasultan"},"content":"            return new TaskList(this.convertFileToList());"},{"lineNumber":83,"author":{"gitId":"frisciliasultan"},"content":"        } else {"},{"lineNumber":84,"author":{"gitId":"frisciliasultan"},"content":"            this.createFile();"},{"lineNumber":85,"author":{"gitId":"frisciliasultan"},"content":"            return new TaskList();"},{"lineNumber":86,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":89,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"frisciliasultan"},"content":"     * Parses the contents of the TaskList in the specified file"},{"lineNumber":91,"author":{"gitId":"frisciliasultan"},"content":"     * and translates the file into a List of Task object."},{"lineNumber":92,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"frisciliasultan"},"content":"     * @return a List of Task containing the Task objects as specified in the file."},{"lineNumber":94,"author":{"gitId":"frisciliasultan"},"content":"     * @throws FileNotFoundException if file specified by the path is not found."},{"lineNumber":95,"author":{"gitId":"frisciliasultan"},"content":"     * @throws UnknownCommandException if the tag stored in the TaskList"},{"lineNumber":96,"author":{"gitId":"frisciliasultan"},"content":"     *                                      does not correspond to Todo, Deadline or Event."},{"lineNumber":97,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"frisciliasultan"},"content":"    List\u003cTask\u003e convertFileToList() throws FileNotFoundException, UnknownCommandException {"},{"lineNumber":99,"author":{"gitId":"frisciliasultan"},"content":"        assert file !\u003d null : \"File not found\";"},{"lineNumber":100,"author":{"gitId":"frisciliasultan"},"content":"        Scanner sc \u003d new Scanner(file);"},{"lineNumber":101,"author":{"gitId":"frisciliasultan"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":102,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":103,"author":{"gitId":"frisciliasultan"},"content":"        // Splice the lines in the file"},{"lineNumber":104,"author":{"gitId":"frisciliasultan"},"content":"        // and generate the appropriate Tasks"},{"lineNumber":105,"author":{"gitId":"frisciliasultan"},"content":"        while (sc.hasNext()) {"},{"lineNumber":106,"author":{"gitId":"frisciliasultan"},"content":"            String item \u003d sc.nextLine();"},{"lineNumber":107,"author":{"gitId":"frisciliasultan"},"content":"            String[] split \u003d item.split(\" : \", 0);"},{"lineNumber":108,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":109,"author":{"gitId":"frisciliasultan"},"content":"            switch (split[0]) {"},{"lineNumber":110,"author":{"gitId":"frisciliasultan"},"content":"            case \"T\":"},{"lineNumber":111,"author":{"gitId":"frisciliasultan"},"content":"                list.add(new Todo(split[3], split[1].equals(\"1\"), split[2]));"},{"lineNumber":112,"author":{"gitId":"frisciliasultan"},"content":"                break;"},{"lineNumber":113,"author":{"gitId":"frisciliasultan"},"content":"            case \"D\":"},{"lineNumber":114,"author":{"gitId":"frisciliasultan"},"content":"                list.add(new Deadline(split[3], split[1].equals(\"1\"), split[4], split[2]));"},{"lineNumber":115,"author":{"gitId":"frisciliasultan"},"content":"                break;"},{"lineNumber":116,"author":{"gitId":"frisciliasultan"},"content":"            case \"E\":"},{"lineNumber":117,"author":{"gitId":"frisciliasultan"},"content":"                list.add(new Event(split[3], split[1].equals(\"1\"), split[4], split[2]));"},{"lineNumber":118,"author":{"gitId":"frisciliasultan"},"content":"                break;"},{"lineNumber":119,"author":{"gitId":"frisciliasultan"},"content":"            default:"},{"lineNumber":120,"author":{"gitId":"frisciliasultan"},"content":"                throw new UnknownCommandException();"},{"lineNumber":121,"author":{"gitId":"frisciliasultan"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":123,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":124,"author":{"gitId":"frisciliasultan"},"content":"        sc.close();"},{"lineNumber":125,"author":{"gitId":"frisciliasultan"},"content":"        return list;"},{"lineNumber":126,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":128,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"frisciliasultan"},"content":"     * Translates a Task object into String format to be stored into the file."},{"lineNumber":130,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":131,"author":{"gitId":"frisciliasultan"},"content":"     * @param task a Task object to be translated to String."},{"lineNumber":132,"author":{"gitId":"frisciliasultan"},"content":"     * @return a String representation of the Task Object suitable to be stored in the file."},{"lineNumber":133,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":134,"author":{"gitId":"frisciliasultan"},"content":"    String translateTask(Task task) {"},{"lineNumber":135,"author":{"gitId":"frisciliasultan"},"content":"        assert task !\u003d null : \"Task should not be null\";"},{"lineNumber":136,"author":{"gitId":"frisciliasultan"},"content":"        int isDone \u003d task.isDone ? 1 : 0;"},{"lineNumber":137,"author":{"gitId":"frisciliasultan"},"content":"        if (task instanceof Todo) {"},{"lineNumber":138,"author":{"gitId":"frisciliasultan"},"content":"            return String.format(\"T : %d : %s : %s\\n\", isDone, task.priority, task.name);"},{"lineNumber":139,"author":{"gitId":"frisciliasultan"},"content":"        } else if (task instanceof Deadline) {"},{"lineNumber":140,"author":{"gitId":"frisciliasultan"},"content":"            return String.format(\"D : %d : %s : %s : %s\\n\", isDone, task.priority,"},{"lineNumber":141,"author":{"gitId":"frisciliasultan"},"content":"                    task.name, ((Deadline) task).getTime());"},{"lineNumber":142,"author":{"gitId":"frisciliasultan"},"content":"        } else {"},{"lineNumber":143,"author":{"gitId":"frisciliasultan"},"content":"            return String.format(\"E : %d : %s : %s : %s\\n\", isDone, task.priority,"},{"lineNumber":144,"author":{"gitId":"frisciliasultan"},"content":"                    task.name, ((Event) task).getTime());"},{"lineNumber":145,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":147}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"    protected String name;"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"    protected String priority;"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"     * Initiates a Task with a name and isDone status."},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"     * isDone is initiated to be false."},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"     * @param name a String representing the name of the task."},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"     * @param priority a String representing the priority of the task."},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"    public Task(String name, String priority) {"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"        this.name \u003d name;"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"        this.priority \u003d priority;"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"        this.isDone \u003d false;"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"     * Initiates a Task with a name and isDone status."},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"     * @param name a String representing the name of the task."},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"     * @param priority a String representing the priority of the task."},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"     * @param isDone a boolean value representing whether the task has been completed."},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"    public Task(String name, boolean isDone, String priority) {"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"        this.name \u003d name;"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"        this.priority \u003d priority;"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"    public String toString() {"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"        if (this.isDone) {"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"            return String.format(\"[%s][X] %s\", priority, name);"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"        } else {"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"            return String.format(\"[%s][  ] %s\", priority, name);"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"    void markAsDone() {"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"        this.isDone \u003d true;"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":44}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"public class TaskList {"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"    private List\u003cTask\u003e list;"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"    private int listSize;"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created TaskList object"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents an empty List of Task."},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"    public TaskList() {"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"        this.listSize \u003d 0;"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created TaskList object"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents a List of Tasks"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"     * as given in the argument list."},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"     * @param list a List of Task containing Task objects."},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"    public TaskList(List\u003cTask\u003e list) {"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"        this.list \u003d list;"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"        this.listSize \u003d list.size();"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"     * Adds the task argument into the task list."},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"     * Prints out a response to indicate successful adding of task."},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"     * Prints out the current number of tasks in the list."},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"     * @param task a Task object to be added into the TaskList"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"    Task addTask(Task task) {"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"        assert list !\u003d null : \"List has not been instantiated\";"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"        list.add(task);"},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":"        listSize++;"},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"        return task;"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"     * Removes the task of the given index from the task list."},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"     * Prints out a response to indicate successful removing of task."},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":"     * Prints out the current number of tasks in the list."},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"     * @param index the 1-based index of the Task object to be removed."},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"    Task removeTask(int index) {"},{"lineNumber":52,"author":{"gitId":"frisciliasultan"},"content":"        assert list !\u003d null : \"List has not been instantiated\";"},{"lineNumber":53,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":54,"author":{"gitId":"frisciliasultan"},"content":"        Task temp \u003d list.get(index - 1);"},{"lineNumber":55,"author":{"gitId":"frisciliasultan"},"content":"        list.remove(index - 1);"},{"lineNumber":56,"author":{"gitId":"frisciliasultan"},"content":"        listSize--;"},{"lineNumber":57,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":58,"author":{"gitId":"frisciliasultan"},"content":"        return temp;"},{"lineNumber":59,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":61,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"frisciliasultan"},"content":"     * Marks the task of the given index as done."},{"lineNumber":63,"author":{"gitId":"frisciliasultan"},"content":"     * Prints out a response to indicate successful marking of task."},{"lineNumber":64,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"frisciliasultan"},"content":"     * @param index the 1-based index of the Task object to be removed."},{"lineNumber":66,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"frisciliasultan"},"content":"    Task markTaskAsDone(int index) {"},{"lineNumber":68,"author":{"gitId":"frisciliasultan"},"content":"        assert list !\u003d null : \"List has not been instantiated\";"},{"lineNumber":69,"author":{"gitId":"frisciliasultan"},"content":"        assert !list.isEmpty() : \"List has no tasks\";"},{"lineNumber":70,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":71,"author":{"gitId":"frisciliasultan"},"content":"        Task temp \u003d list.get(index - 1);"},{"lineNumber":72,"author":{"gitId":"frisciliasultan"},"content":"        temp.markAsDone();"},{"lineNumber":73,"author":{"gitId":"frisciliasultan"},"content":"        return temp;"},{"lineNumber":74,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":76,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"frisciliasultan"},"content":"     * Returns the tasks in the list that matches the keyword argument."},{"lineNumber":78,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":79,"author":{"gitId":"frisciliasultan"},"content":"     * @param keyword the keyword to search for a Task."},{"lineNumber":80,"author":{"gitId":"frisciliasultan"},"content":"     * @return a List of Task containing all matching tasks."},{"lineNumber":81,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"frisciliasultan"},"content":"    List\u003cTask\u003e searchTask(String keyword) {"},{"lineNumber":83,"author":{"gitId":"frisciliasultan"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":84,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":85,"author":{"gitId":"frisciliasultan"},"content":"        for (Task t : list) {"},{"lineNumber":86,"author":{"gitId":"frisciliasultan"},"content":"            if (t.name.contains(keyword)) {"},{"lineNumber":87,"author":{"gitId":"frisciliasultan"},"content":"                matchingTasks.add(t);"},{"lineNumber":88,"author":{"gitId":"frisciliasultan"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"frisciliasultan"},"content":"        return matchingTasks;"},{"lineNumber":91,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":93,"author":{"gitId":"frisciliasultan"},"content":"    List\u003cTask\u003e getList() {"},{"lineNumber":94,"author":{"gitId":"frisciliasultan"},"content":"        assert list !\u003d null : \"List has not been instantiated\";"},{"lineNumber":95,"author":{"gitId":"frisciliasultan"},"content":"        return this.list;"},{"lineNumber":96,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":98,"author":{"gitId":"frisciliasultan"},"content":"    int getListSize() {"},{"lineNumber":99,"author":{"gitId":"frisciliasultan"},"content":"        assert list !\u003d null : \"List has not been instantiated\";"},{"lineNumber":100,"author":{"gitId":"frisciliasultan"},"content":"        return this.listSize;"},{"lineNumber":101,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":102}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created Todo object"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents a Todo task with a name."},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises the Todo task isDone status to false."},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"     * @param name the description of the Todo task."},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"     * @param priority a String representing the priority of the task."},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"    public Todo(String name, String priority) {"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"        super(name, priority);"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created Todo object"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents a Todo task with a name."},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises the Todo task isDone status to given isDone argument."},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"     * @param name the description of the Todo task."},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"     * @param isDone the status of the Todo task."},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"     * @param priority a String representing the priority of the task."},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"    public Todo(String name, boolean isDone, String priority) {"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"        super(name, isDone, priority);"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"     * Creates a String representation of Todo object."},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"     * @return String representation of Todo."},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"        return String.format(\"[T]%s\", super.toString());"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":37}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"     * Prints the logo and welcome messages."},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"    String showWelcome() {"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"        String logo \u003d \"          ____                               \\n\""},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"                + \"        ,\u0027  , `.                                   \\n\""},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"                + \"     ,-+-,.\u0027 _ |                                   \\n\""},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"                + \"  ,-+-. ;   , ||                                   \\n\""},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"                + \" ,--.\u0027|\u0027   |  ;|                                   \\n\""},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"                + \"|   |  ,\u0027, |  \u0027:  ,--.--.        .--,    ,--.--.   \\n\""},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"                + \"|   | /  | |  || /       \\\\     /_ ./|   /       \\\\  \\n\""},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"                + \"\u0027   | :  | :  |,.--.  .-. | , \u0027 , \u0027 :  .--.  .-. | \\n\""},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"                + \";   . |  ; |--\u0027  \\\\__\\\\/: . ./___/ \\\\: |   \\\\__\\\\/: . . \\n\""},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"                + \"|   : |  | ,     ,\\\" .--.; | .  \\\\  \u0027 |   ,\\\" .--.; | \\n\""},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"                + \"|   : \u0027  |/     /  /  ,.  |  \\\\  ;   :  /  /  ,.  | \\n\""},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"                + \";   | |`-\u0027     ;  :   .\u0027   \\\\  \\\\  \\\\  ; ;  :   .\u0027   \\\\\\n\""},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"                + \"|   ;/         |  ,     .-./   :  \\\\  \\\\|  ,     .-./\\n\""},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"                + \"\u0027---\u0027           `--`---\u0027        \\\\  \u0027 ; `--`---\u0027    \\n\""},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"                + \"                                 `--` \";"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"        return String.format(logo + \"Hello, I\u0027m Maya! \\n    What can I do for you?\");"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"     * Prints the line separator."},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"    String showLine() {"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"        return \"    ____________________________________\";"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"     * Prints the given list argument."},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"     * @param list the List of Task to be displayed."},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"     * @param isSearch a boolean representing whether"},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":"     *                 this command is a search command."},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"    String showList(List\u003cTask\u003e list, boolean isSearch) {"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"        if (isSearch \u0026\u0026 list.isEmpty()) {"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"                return \"Sorry, there are no matching tasks in your list\";"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"        } else {"},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"            StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":"            for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"                sb.append(i + \". \" + list.get(i - 1) + \"\\n\");"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"            System.out.println(sb.toString());"},{"lineNumber":52,"author":{"gitId":"frisciliasultan"},"content":"            return sb.toString();"},{"lineNumber":53,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":56,"author":{"gitId":"frisciliasultan"},"content":"    String showAddTask(Task task, int listSize) {"},{"lineNumber":57,"author":{"gitId":"frisciliasultan"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":58,"author":{"gitId":"frisciliasultan"},"content":"                + \"%s\\nNow you have %d tasks in the list.\\n\", task, listSize);"},{"lineNumber":59,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":61,"author":{"gitId":"frisciliasultan"},"content":"    String showRemoveTask(Task task, int listSize) {"},{"lineNumber":62,"author":{"gitId":"frisciliasultan"},"content":"        return String.format(\"Noted. I\u0027ve removed this task:\\n\""},{"lineNumber":63,"author":{"gitId":"frisciliasultan"},"content":"                + \"%s\\nNow you have %d tasks in the list.\\n\", task, listSize);"},{"lineNumber":64,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":66,"author":{"gitId":"frisciliasultan"},"content":"    String showDone(Task task) {"},{"lineNumber":67,"author":{"gitId":"frisciliasultan"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done:\\n%s\", task);"},{"lineNumber":68,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":70,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"frisciliasultan"},"content":"     * Prints the exit message."},{"lineNumber":72,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"frisciliasultan"},"content":"    String showBye() {"},{"lineNumber":74,"author":{"gitId":"frisciliasultan"},"content":"        return \"Bye. Hope to see you again soon!\";"},{"lineNumber":75,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":76}},{"path":"src/main/java/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"public class UnknownCommandException extends MayaException {"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"    public UnknownCommandException() {"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":5}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"frisciliasultan":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"frisciliasultan":19}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"public class TaskListTest {"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"    @Test"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"    public void testAddTask() {"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"        TaskList list \u003d new TaskList();"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"        Task task \u003d new Todo(\"eat\", \"high\");"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"        assertEquals(task, list.addTask(task));"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":15}},{"path":"src/test/java/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"public class UiTest {"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"    public void testShowLine() {"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"        assertEquals(\"    ____________________________________\", new Ui().showLine());"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"    public void testShowBye() {"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"        new Ui().showBye();"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"        assertEquals(\"Bye. Hope to see you again soon!\","},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"                new Ui().showBye());"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"list"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"list"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"delete 2"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"list"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"todo"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"deadline"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"event"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"lalala"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"bye"}],"authorContributionMap":{"frisciliasultan":13}}]
