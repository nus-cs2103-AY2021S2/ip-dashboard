[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`."},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`."},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk)."},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    ____        _"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"## User Guide"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"This is a CLI chatbot called Duke."},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"**Commands**"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"1. `list` - Displays the tasks contained in the task list."},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"1. `todo \u003ctask description\u003e` - Adds a task with no time limit into the task list."},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"1. `deadline \u003ctask description\u003e \\by \u003ctime\u003e` - Adds a task that needs to be done before a specific date/time into the task list."},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"1. `event \u003ctask description\u003e \\at \u003ctime\u003e` - Adds a task that start at a specific time and ends at a specific time into the task list."},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"1. `done \u003cindex\u003e` - Mark a specific task in the task list as done. E.g. `done 2` marks the second task in the task list as done."},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"1. `delete \u003cindex\u003e` - Remove a specific task from the task list. E.g. `delete 2` removes the second task from the task list."},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"1. `bye` - Exits the program"}],"authorContributionMap":{"frisciliasultan":14,"-":23}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"### Display task list "},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"-"},"content":"### `Keyword` - Describe action"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"Describe action and its outcome."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"`keyword (optional arguments)`"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"`outcome`"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":""}],"authorContributionMap":{"frisciliasultan":6,"-":18}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"public class Deadline extends Task {"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"    LocalDate time;"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created Deadline object"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents a Deadline task"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"     * with the name and time according to its supplied arguments."},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises the Deadline task isDone status to false."},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"     * @param name the description of the Deadline task."},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"     * @param time LocalDate object that represents"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"     *            the time this Deadline is happening."},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"    public Deadline(String name, String time) {"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"        super(name);"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"        this.time \u003d LocalDate.parse(time);"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created Deadline object"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents a Deadline task"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"     * with the name, isDone and time according to its supplied arguments."},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"     * @param name the description of the Deadline task."},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"     * @param isDone the status of the Deadline task."},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"     * @param time LocalDate object that represents"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"     *            the time this Deadline is happening."},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"    public Deadline(String name, boolean isDone, String time) {"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"        super(name, isDone);"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"        this.time \u003d LocalDate.parse(time);"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"     * Creates a String representation of Deadline object."},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"     * @return String representation of Deadline."},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"    public String toString() {"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(),"},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"                time.format(DateTimeFormatter.ofPattern(\"dd MMM yyy\")));"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":47}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import java.time.LocalDate;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"public class Event extends Task{"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"    LocalDate time;"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created Event object"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents a Event task"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"     * with the name and time according to its supplied arguments."},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises the Event task isDone status to false."},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"     * @param name the description of the Event task."},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"     * @param time LocalDate object that represents"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"     *            the time this Event is happening."},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"    public Event(String name, String time) {"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"        super(name);"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"        this.time \u003d LocalDate.parse(time);"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created Event object"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents a Event task"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"     * with the name, isDone and time according to its supplied arguments."},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"     * @param name the description of the Event task."},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"     * @param isDone the status of the Event task."},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"     * @param time LocalDate object that represents"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"     *            the time this Event is happening."},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"    public Event(String name, boolean isDone, String time) {"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"        super(name, isDone);"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"        this.time \u003d LocalDate.parse(time);"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"     * Creates a String representation of Event object."},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"     * @return String representation of Event."},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"    @Override"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"    public String toString() {"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(),"},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"                time.format(DateTimeFormatter.ofPattern(\"dd MMM yyy\")));"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":47}},{"path":"src/main/java/Maya.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"public class Maya {"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"    private Storage storage;"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"    private TaskList taskList;"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"    private Ui ui;"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created Maya Object"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents a Bot."},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"     * @param filePath a String of the path"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"     *                 where the TaskList is stored."},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"    public Maya(String filePath) {"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"        ui \u003d new Ui();"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"            taskList \u003d storage.load();"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"        } catch (IOException e) {"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"            ui.showError(e.getMessage());"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"        } catch (UnknownCommandException e) {"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"            ui.showError(e.getMessage());"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"     * Starts the Maya object to accept user commands."},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"     * Processes user commands by utilising Parser object"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"     * to make sense of the user command."},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"    public void run() {"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"        ui.showWelcome();"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":"        while (sc.hasNext()) {"},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"            try {"},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"                String command \u003d sc.next();"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"                ui.showLine();"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"                Parser.parse(command, sc, ui, taskList, storage );"},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"                // To exit the program with the command \"bye\""},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":"                if (command.equals(\"bye\")) {"},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"                    break;"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"                }"},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"            } catch (UnknownCommandException e) {"},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"                ui.showError(e.getMessage());"},{"lineNumber":52,"author":{"gitId":"frisciliasultan"},"content":"            } catch (NoSuchElementException e) {"},{"lineNumber":53,"author":{"gitId":"frisciliasultan"},"content":"                ui.showError(e.getMessage());"},{"lineNumber":54,"author":{"gitId":"frisciliasultan"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {"},{"lineNumber":55,"author":{"gitId":"frisciliasultan"},"content":"                ui.showError(e.getMessage());"},{"lineNumber":56,"author":{"gitId":"frisciliasultan"},"content":"            } catch (IOException e) {"},{"lineNumber":57,"author":{"gitId":"frisciliasultan"},"content":"                ui.showError(e.getMessage());"},{"lineNumber":58,"author":{"gitId":"frisciliasultan"},"content":"            } finally {"},{"lineNumber":59,"author":{"gitId":"frisciliasultan"},"content":"                ui.showLine();"},{"lineNumber":60,"author":{"gitId":"frisciliasultan"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":63,"author":{"gitId":"frisciliasultan"},"content":"        sc.close();"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":66,"author":{"gitId":"frisciliasultan"},"content":"    public static void main(String[] args) {"},{"lineNumber":67,"author":{"gitId":"frisciliasultan"},"content":"        new Maya(\"data/task.txt\").run();"},{"lineNumber":68,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"frisciliasultan":67,"-":2}},{"path":"src/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"import java.util.NoSuchElementException;"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"import java.util.Scanner;"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"public class Parser {"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"     * Parses the user command and instructs the taskList, ui or sc"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"     * to carry out different functions according to the command argument."},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"     * @param command user input"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"     * @param sc Scanner object."},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"     * @param ui Ui object."},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"     * @param taskList TaskList object."},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"     * @param storage Storage object."},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"     * @throws NoSuchElementException if additional user input required is not provided."},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"     * @throws UnknownCommandException if command is not supported by Maya."},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"     * @throws IOException if null is supplied to Storage or if file is not found."},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"    static void parse(String command, Scanner sc, Ui ui, TaskList taskList, Storage storage)"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"            throws NoSuchElementException, UnknownCommandException, IOException {"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"        switch(command) {"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"        case \"bye\":"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"            ui.showBye();"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"            break;"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"        case \"list\":"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"            ui.showList(taskList.list, false);"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"            break;"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"        case \"done\":"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"            // To get the index"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"            int index \u003d sc.nextInt();"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"            taskList.markTaskAsDone(index);"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"            storage.writeToFile(taskList.list);"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"            break;"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"        case \"todo\":"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"            String name \u003d sc.nextLine();"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"            if (!name.equals(\"\")) {"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"                Todo todo \u003d new Todo(name.trim());"},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":"                taskList.addTask(todo);"},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"                storage.appendToFile(todo);"},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"            } else {"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"                throw new NoSuchElementException(\"☹ OOPS!!! The description of\""},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"                        + \" a todo cannot be empty.\");"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"            }"},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"            break;"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"        case \"deadline\":"},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":"            String desc \u003d sc.nextLine();"},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"            if (!desc.equals(\"\")) {"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"                String[] split \u003d desc.split(\"/by\", 2);"},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"                    Deadline deadline \u003d new Deadline(split[0].trim(), split[1].trim());"},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"                    taskList.addTask(deadline);"},{"lineNumber":52,"author":{"gitId":"frisciliasultan"},"content":"                    storage.appendToFile(deadline);"},{"lineNumber":53,"author":{"gitId":"frisciliasultan"},"content":"            } else {"},{"lineNumber":54,"author":{"gitId":"frisciliasultan"},"content":"                throw new NoSuchElementException(\"☹ OOPS!!! The description of\""},{"lineNumber":55,"author":{"gitId":"frisciliasultan"},"content":"                        + \" a deadline cannot be empty.\");"},{"lineNumber":56,"author":{"gitId":"frisciliasultan"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"frisciliasultan"},"content":"            break;"},{"lineNumber":58,"author":{"gitId":"frisciliasultan"},"content":"        case \"event\":"},{"lineNumber":59,"author":{"gitId":"frisciliasultan"},"content":"            String description \u003d sc.nextLine();"},{"lineNumber":60,"author":{"gitId":"frisciliasultan"},"content":"            if (!description.equals(\"\")) {"},{"lineNumber":61,"author":{"gitId":"frisciliasultan"},"content":"                String[] split \u003d description.split(\"/at\", 2);"},{"lineNumber":62,"author":{"gitId":"frisciliasultan"},"content":"                Event event \u003d new Event(split[0].trim(), split[1].trim());"},{"lineNumber":63,"author":{"gitId":"frisciliasultan"},"content":"                taskList.addTask(event);"},{"lineNumber":64,"author":{"gitId":"frisciliasultan"},"content":"                storage.appendToFile(event);"},{"lineNumber":65,"author":{"gitId":"frisciliasultan"},"content":"            } else {"},{"lineNumber":66,"author":{"gitId":"frisciliasultan"},"content":"                throw new NoSuchElementException(\"☹ OOPS!!! The description of\""},{"lineNumber":67,"author":{"gitId":"frisciliasultan"},"content":"                        + \" an event cannot be empty.\");"},{"lineNumber":68,"author":{"gitId":"frisciliasultan"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"frisciliasultan"},"content":"            break;"},{"lineNumber":70,"author":{"gitId":"frisciliasultan"},"content":"        case \"find\":"},{"lineNumber":71,"author":{"gitId":"frisciliasultan"},"content":"            String searchString \u003d sc.nextLine();"},{"lineNumber":72,"author":{"gitId":"frisciliasultan"},"content":"            if (!searchString.equals(\"\")) {"},{"lineNumber":73,"author":{"gitId":"frisciliasultan"},"content":"                ui.showList(taskList.searchTask(searchString.trim()), true);"},{"lineNumber":74,"author":{"gitId":"frisciliasultan"},"content":"            } else {"},{"lineNumber":75,"author":{"gitId":"frisciliasultan"},"content":"                throw new NoSuchElementException(\"    ☹ OOPS!!! The search keyword cannot be empty.\");"},{"lineNumber":76,"author":{"gitId":"frisciliasultan"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"frisciliasultan"},"content":"            break;"},{"lineNumber":78,"author":{"gitId":"frisciliasultan"},"content":"        case \"delete\":"},{"lineNumber":79,"author":{"gitId":"frisciliasultan"},"content":"            // To get the index"},{"lineNumber":80,"author":{"gitId":"frisciliasultan"},"content":"            int i \u003d sc.nextInt();"},{"lineNumber":81,"author":{"gitId":"frisciliasultan"},"content":"            taskList.removeTask(i);"},{"lineNumber":82,"author":{"gitId":"frisciliasultan"},"content":"            storage.writeToFile(taskList.list);"},{"lineNumber":83,"author":{"gitId":"frisciliasultan"},"content":"            break;"},{"lineNumber":84,"author":{"gitId":"frisciliasultan"},"content":"        default:"},{"lineNumber":85,"author":{"gitId":"frisciliasultan"},"content":"            throw new UnknownCommandException();"},{"lineNumber":86,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":88}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import java.io.File;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"import java.nio.file.Paths;"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"    File file;"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created Storage object"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents a File"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"     * where the TaskList will be stored in."},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"     * @param pathname a String representing the path"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"     *                 where the list will be stored."},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"    public Storage(String pathname) {"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"        file \u003d new File(Paths.get(pathname).toString());"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"     * Creates a new file in the path specified"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"     * and return an empty TaskList if file does not exist."},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"     * Otherwise, reads from the existing file"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"     * and translates its contents into a TaskList."},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"     * @return a TaskList object according to the file specified."},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"     * @throws IOException if an I/O error occurred."},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"     * @throws UnknownCommandException if file contents contain unsupported Task object."},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"    TaskList load() throws IOException, UnknownCommandException {"},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":"        if (file.exists()) {"},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"            return new TaskList(this.convertFileToList());"},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"        } else {"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"            this.createFile();"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"            return new TaskList();"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"     * Parses the contents of the TaskList in the specified file"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"     * and translates the file into a List\u003cTask\u003e object."},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"     * @return a List\u003cTask\u003e containing the Task objects as specified in the file."},{"lineNumber":52,"author":{"gitId":"frisciliasultan"},"content":"     * @throws FileNotFoundException if file specified by the path is not found."},{"lineNumber":53,"author":{"gitId":"frisciliasultan"},"content":"     * @throws UnknownCommandException if the tag stored in the TaskList"},{"lineNumber":54,"author":{"gitId":"frisciliasultan"},"content":"     *                                      does not correspond to Todo, Deadline or Event."},{"lineNumber":55,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"frisciliasultan"},"content":"    List\u003cTask\u003e convertFileToList() throws FileNotFoundException, UnknownCommandException {"},{"lineNumber":57,"author":{"gitId":"frisciliasultan"},"content":"        Scanner sc \u003d new Scanner(file);"},{"lineNumber":58,"author":{"gitId":"frisciliasultan"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":59,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":60,"author":{"gitId":"frisciliasultan"},"content":"        // Splice the lines in the file"},{"lineNumber":61,"author":{"gitId":"frisciliasultan"},"content":"        // and generate the appropriate Tasks"},{"lineNumber":62,"author":{"gitId":"frisciliasultan"},"content":"        while (sc.hasNext()) {"},{"lineNumber":63,"author":{"gitId":"frisciliasultan"},"content":"            String item \u003d sc.nextLine();"},{"lineNumber":64,"author":{"gitId":"frisciliasultan"},"content":"            String[] split \u003d item.split(\" : \", 0);"},{"lineNumber":65,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":66,"author":{"gitId":"frisciliasultan"},"content":"            switch (split[0]) {"},{"lineNumber":67,"author":{"gitId":"frisciliasultan"},"content":"            case \"T\":"},{"lineNumber":68,"author":{"gitId":"frisciliasultan"},"content":"                list.add(new Todo(split[2], split[1].equals(\"1\")));"},{"lineNumber":69,"author":{"gitId":"frisciliasultan"},"content":"                break;"},{"lineNumber":70,"author":{"gitId":"frisciliasultan"},"content":"            case \"D\":"},{"lineNumber":71,"author":{"gitId":"frisciliasultan"},"content":"                list.add(new Deadline(split[2], split[1].equals(\"1\"), split[3]));"},{"lineNumber":72,"author":{"gitId":"frisciliasultan"},"content":"                break;"},{"lineNumber":73,"author":{"gitId":"frisciliasultan"},"content":"            case \"E\":"},{"lineNumber":74,"author":{"gitId":"frisciliasultan"},"content":"                list.add(new Event(split[2], split[1].equals(\"1\"), split[3]));"},{"lineNumber":75,"author":{"gitId":"frisciliasultan"},"content":"                break;"},{"lineNumber":76,"author":{"gitId":"frisciliasultan"},"content":"            default:"},{"lineNumber":77,"author":{"gitId":"frisciliasultan"},"content":"                throw new UnknownCommandException();"},{"lineNumber":78,"author":{"gitId":"frisciliasultan"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":81,"author":{"gitId":"frisciliasultan"},"content":"        sc.close();"},{"lineNumber":82,"author":{"gitId":"frisciliasultan"},"content":"        "},{"lineNumber":83,"author":{"gitId":"frisciliasultan"},"content":"        return list;"},{"lineNumber":84,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":86,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":87,"author":{"gitId":"frisciliasultan"},"content":"     * Creates a file according to the specified pathName."},{"lineNumber":88,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":89,"author":{"gitId":"frisciliasultan"},"content":"     * @throws IOException if an I/O error occurred."},{"lineNumber":90,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"frisciliasultan"},"content":"    void createFile() throws IOException {"},{"lineNumber":92,"author":{"gitId":"frisciliasultan"},"content":"        // Create directory and file"},{"lineNumber":93,"author":{"gitId":"frisciliasultan"},"content":"        file.getParentFile().mkdirs();"},{"lineNumber":94,"author":{"gitId":"frisciliasultan"},"content":"        file.createNewFile();"},{"lineNumber":95,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":96,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":97,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":98,"author":{"gitId":"frisciliasultan"},"content":"     * Overwrites the file with the new updated TaskList."},{"lineNumber":99,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":100,"author":{"gitId":"frisciliasultan"},"content":"     * @param list a List\u003cTask\u003e object derived from TaskList"},{"lineNumber":101,"author":{"gitId":"frisciliasultan"},"content":"     *             with the updated Task objects."},{"lineNumber":102,"author":{"gitId":"frisciliasultan"},"content":"     * @throws IOException if an I/O error occurred."},{"lineNumber":103,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"frisciliasultan"},"content":"    void writeToFile(List\u003cTask\u003e list) throws IOException {"},{"lineNumber":105,"author":{"gitId":"frisciliasultan"},"content":"        FileWriter fw \u003d new FileWriter(file.getAbsolutePath());"},{"lineNumber":106,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":107,"author":{"gitId":"frisciliasultan"},"content":"        StringBuffer sb \u003d new StringBuffer();"},{"lineNumber":108,"author":{"gitId":"frisciliasultan"},"content":"        for (Task task : list) {"},{"lineNumber":109,"author":{"gitId":"frisciliasultan"},"content":"            sb.append(this.translateTask(task));"},{"lineNumber":110,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":111,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":112,"author":{"gitId":"frisciliasultan"},"content":"        fw.write(sb.toString());"},{"lineNumber":113,"author":{"gitId":"frisciliasultan"},"content":"        fw.close();"},{"lineNumber":114,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":116,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"frisciliasultan"},"content":"     * Adds a Task to the bottom of the file containing the TaskList."},{"lineNumber":118,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":119,"author":{"gitId":"frisciliasultan"},"content":"     * @param task a Task object to be added to the TaskList."},{"lineNumber":120,"author":{"gitId":"frisciliasultan"},"content":"     * @throws IOException if an I/O error occurred."},{"lineNumber":121,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":122,"author":{"gitId":"frisciliasultan"},"content":"    void appendToFile(Task task) throws IOException {"},{"lineNumber":123,"author":{"gitId":"frisciliasultan"},"content":"        // Create a FileWriter in append mode"},{"lineNumber":124,"author":{"gitId":"frisciliasultan"},"content":"        FileWriter fw \u003d new FileWriter(file.getAbsolutePath(), true);"},{"lineNumber":125,"author":{"gitId":"frisciliasultan"},"content":"        fw.write(this.translateTask(task));"},{"lineNumber":126,"author":{"gitId":"frisciliasultan"},"content":"        fw.close();"},{"lineNumber":127,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":128,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":129,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":130,"author":{"gitId":"frisciliasultan"},"content":"     * Translates a Task object into String format to be stored into the file."},{"lineNumber":131,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":132,"author":{"gitId":"frisciliasultan"},"content":"     * @param task a Task object to be translated to String."},{"lineNumber":133,"author":{"gitId":"frisciliasultan"},"content":"     * @return a String representation of the Task Object suitable to be stored in the file."},{"lineNumber":134,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":135,"author":{"gitId":"frisciliasultan"},"content":"    String translateTask(Task task) {"},{"lineNumber":136,"author":{"gitId":"frisciliasultan"},"content":"        int isDone \u003d task.isDone ? 1 : 0;"},{"lineNumber":137,"author":{"gitId":"frisciliasultan"},"content":"        if (task instanceof Todo) {"},{"lineNumber":138,"author":{"gitId":"frisciliasultan"},"content":"            return String.format(\"T : %d : %s\\n\", isDone, task.name);"},{"lineNumber":139,"author":{"gitId":"frisciliasultan"},"content":"        } else if (task instanceof Deadline) {"},{"lineNumber":140,"author":{"gitId":"frisciliasultan"},"content":"            return String.format(\"D : %d : %s : %s\\n\", isDone,"},{"lineNumber":141,"author":{"gitId":"frisciliasultan"},"content":"                    task.name, ((Deadline) task).time);"},{"lineNumber":142,"author":{"gitId":"frisciliasultan"},"content":"        } else {"},{"lineNumber":143,"author":{"gitId":"frisciliasultan"},"content":"            return String.format(\"E : %d : %s : %s\\n\", isDone,"},{"lineNumber":144,"author":{"gitId":"frisciliasultan"},"content":"                    task.name, ((Event) task).time);"},{"lineNumber":145,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":146,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":147}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"    protected String name;"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"    protected boolean isDone;"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"    public Task(String name) {"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"        this.name \u003d name;"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"        this.isDone \u003d false;"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"    public Task(String name, boolean isDone) {"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"        this.name \u003d name;"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"        if (this.isDone) {"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"            return String.format(\"[X] %s\", name);"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"        } else {"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"            return String.format(\"[ ] %s\", name);"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"    void markAsDone() {"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"        this.isDone \u003d true;"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":27}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import java.util.ArrayList;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"import java.util.List;"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"public class TaskList {"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"    List\u003cTask\u003e list;"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"    int listSize;"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created TaskList object"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents an empty List\u003cTask\u003e."},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"    public TaskList() {"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"        this.list \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"        this.listSize \u003d 0;"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created TaskList object"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents a List of Tasks"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"     * as given in the argument list."},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"     * @param list a List\u003cTask\u003e containing Task objects."},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"    public TaskList(List\u003cTask\u003e list) {"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"        this.list \u003d list;"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"        this.listSize \u003d list.size();"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"     * Adds the task argument into the task list."},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"     * Prints out a response to indicate successful adding of task."},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"     * Prints out the current number of tasks in the list."},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"     * @param task a Task object to be added into the TaskList"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"    void addTask(Task task) {"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"        list.add(task);"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"        listSize++;"},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"        System.out.println(\"    Got it. I\u0027ve added this task:\");"},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"        System.out.println(\"        \" + task);"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"        System.out.printf(\"    Now you have %d tasks in the list.\\n\", listSize);"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"     * Removes the task of the given index from the task list."},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":"     * Prints out a response to indicate successful removing of task."},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"     * Prints out the current number of tasks in the list."},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"     * @param index the 1-based index of the Task object to be removed."},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"frisciliasultan"},"content":"    void removeTask(int index) {"},{"lineNumber":53,"author":{"gitId":"frisciliasultan"},"content":"        Task temp \u003d list.get(index - 1);"},{"lineNumber":54,"author":{"gitId":"frisciliasultan"},"content":"        list.remove(index - 1);"},{"lineNumber":55,"author":{"gitId":"frisciliasultan"},"content":"        listSize--;"},{"lineNumber":56,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":57,"author":{"gitId":"frisciliasultan"},"content":"        System.out.println(\"    Noted. I\u0027ve removed this task:\");"},{"lineNumber":58,"author":{"gitId":"frisciliasultan"},"content":"        System.out.println(\"        \" + temp);"},{"lineNumber":59,"author":{"gitId":"frisciliasultan"},"content":"        System.out.printf(\"    Now you have %d tasks in the list.\\n\", listSize);"},{"lineNumber":60,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":62,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"frisciliasultan"},"content":"     * Marks the task of the given index as done."},{"lineNumber":64,"author":{"gitId":"frisciliasultan"},"content":"     * Prints out a response to indicate successful marking of task."},{"lineNumber":65,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"frisciliasultan"},"content":"     * @param index the 1-based index of the Task object to be removed."},{"lineNumber":67,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"frisciliasultan"},"content":"    void markTaskAsDone(int index) {"},{"lineNumber":69,"author":{"gitId":"frisciliasultan"},"content":"        Task temp \u003d list.get(index - 1);"},{"lineNumber":70,"author":{"gitId":"frisciliasultan"},"content":"        temp.markAsDone();"},{"lineNumber":71,"author":{"gitId":"frisciliasultan"},"content":"        System.out.println(\"    Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":72,"author":{"gitId":"frisciliasultan"},"content":"        System.out.println(\"        \" + temp);"},{"lineNumber":73,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":75,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":76,"author":{"gitId":"frisciliasultan"},"content":"     * Returns the tasks in the list that matches the keyword argument."},{"lineNumber":77,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":78,"author":{"gitId":"frisciliasultan"},"content":"     * @param keyword the keyword to search for a Task."},{"lineNumber":79,"author":{"gitId":"frisciliasultan"},"content":"     * @return a List\u003cTask\u003e containing all matching tasks."},{"lineNumber":80,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"frisciliasultan"},"content":"    List\u003cTask\u003e searchTask(String keyword) {"},{"lineNumber":82,"author":{"gitId":"frisciliasultan"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":83,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":84,"author":{"gitId":"frisciliasultan"},"content":"        for (Task t : list) {"},{"lineNumber":85,"author":{"gitId":"frisciliasultan"},"content":"            if(t.name.contains(keyword)) {"},{"lineNumber":86,"author":{"gitId":"frisciliasultan"},"content":"                matchingTasks.add(t);"},{"lineNumber":87,"author":{"gitId":"frisciliasultan"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":89,"author":{"gitId":"frisciliasultan"},"content":"        return matchingTasks;"},{"lineNumber":90,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":91}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"public class Todo extends Task {"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created Todo object"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents a Todo task with a name."},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises the Todo task isDone status to false."},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"     * @param name the description of the Todo task."},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"    public Todo(String name) {"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"        super(name);"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises a newly created Todo object"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"     * so that it represents a Todo task with a name."},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"     * Initialises the Todo task isDone status to given isDone argument."},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"     * @param name the description of the Todo task."},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"     * @param isDone the status of the Todo task."},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"    public Todo(String name, boolean isDone) {"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"        super(name, isDone);"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"     * Creates a String representation of Todo object."},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"     * @return String representation of Todo."},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"    public String toString() {"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"        return String.format(\"[T]%s\", super.toString());"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":34}},{"path":"src/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import java.util.List;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"public class Ui {"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"     * Prints the logo and welcome messages."},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"    void showWelcome() {"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"        String logo \u003d \"          ____                               \\n\" +"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"                \"        ,\u0027  , `.                                   \\n\" +"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"                \"     ,-+-,.\u0027 _ |                                   \\n\" +"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"                \"  ,-+-. ;   , ||                                   \\n\" +"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"                \" ,--.\u0027|\u0027   |  ;|                                   \\n\" +"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"                \"|   |  ,\u0027, |  \u0027:  ,--.--.        .--,    ,--.--.   \\n\" +"},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"                \"|   | /  | |  || /       \\\\     /_ ./|   /       \\\\  \\n\" +"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"                \"\u0027   | :  | :  |,.--.  .-. | , \u0027 , \u0027 :  .--.  .-. | \\n\" +"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"                \";   . |  ; |--\u0027  \\\\__\\\\/: . ./___/ \\\\: |   \\\\__\\\\/: . . \\n\" +"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"                \"|   : |  | ,     ,\\\" .--.; | .  \\\\  \u0027 |   ,\\\" .--.; | \\n\" +"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":"                \"|   : \u0027  |/     /  /  ,.  |  \\\\  ;   :  /  /  ,.  | \\n\" +"},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"                \";   | |`-\u0027     ;  :   .\u0027   \\\\  \\\\  \\\\  ; ;  :   .\u0027   \\\\\\n\" +"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"                \"|   ;/         |  ,     .-./   :  \\\\  \\\\|  ,     .-./\\n\" +"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"                \"\u0027---\u0027           `--`---\u0027        \\\\  \u0027 ; `--`---\u0027    \\n\" +"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"                \"                                 `--` \";"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"        System.out.println(logo);"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"        System.out.println(\"    ____________________________________\");"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"        System.out.println(\"    Hello, I\u0027m Maya! \\n    What can I do for you?\");"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"        System.out.println(\"    ____________________________________\");"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"     * Prints the line separator."},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"    void showLine() {"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"        System.out.println(\"    ____________________________________\");"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":"     * Prints the exit message."},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"    void showBye() {"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"        System.out.println(\"    Bye. Hope to see you again soon!\");"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":45,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"frisciliasultan"},"content":"     * Prints the error message."},{"lineNumber":47,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"frisciliasultan"},"content":"    void showError(String err) {"},{"lineNumber":49,"author":{"gitId":"frisciliasultan"},"content":"        System.out.println(\"    \" + err);"},{"lineNumber":50,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":52,"author":{"gitId":"frisciliasultan"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"frisciliasultan"},"content":"     * Prints the given list argument."},{"lineNumber":54,"author":{"gitId":"frisciliasultan"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"frisciliasultan"},"content":"     * @param list the List\u003cTask\u003e to be displayed."},{"lineNumber":56,"author":{"gitId":"frisciliasultan"},"content":"     * @param isSearch a boolean representing whether"},{"lineNumber":57,"author":{"gitId":"frisciliasultan"},"content":"     *                 this command is a search command."},{"lineNumber":58,"author":{"gitId":"frisciliasultan"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"frisciliasultan"},"content":"    void showList(List\u003cTask\u003e list, boolean isSearch) {"},{"lineNumber":60,"author":{"gitId":"frisciliasultan"},"content":"        if (isSearch) {"},{"lineNumber":61,"author":{"gitId":"frisciliasultan"},"content":"            if (list.isEmpty()) {"},{"lineNumber":62,"author":{"gitId":"frisciliasultan"},"content":"                System.out.println(\"    Sorry, there are no matching tasks in your list\");"},{"lineNumber":63,"author":{"gitId":"frisciliasultan"},"content":"            } else {"},{"lineNumber":64,"author":{"gitId":"frisciliasultan"},"content":"                System.out.println(\"    Here are matching tasks in your list:\");"},{"lineNumber":65,"author":{"gitId":"frisciliasultan"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"frisciliasultan"},"content":"        } else {"},{"lineNumber":67,"author":{"gitId":"frisciliasultan"},"content":"            System.out.println(\"    Here are the tasks in your list:\");"},{"lineNumber":68,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":69,"author":{"gitId":"frisciliasultan"},"content":"        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"},{"lineNumber":70,"author":{"gitId":"frisciliasultan"},"content":"            System.out.printf(\"    %d.%s\\n\", i, list.get(i - 1));"},{"lineNumber":71,"author":{"gitId":"frisciliasultan"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":73}},{"path":"src/main/java/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"public class UnknownCommandException extends Exception {"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"    public UnknownCommandException() {"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":5}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"import java.io.PrintStream;"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"public class TaskListTest {"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"    private final PrintStream standardOut \u003d System.out;"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"    @BeforeEach"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"    public void setUp() {"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"    public void testAddTask() {"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"        TaskList list \u003d new TaskList();"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"        list.addTask(new Todo(\"eat\"));"},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"        assertEquals(\"    Got it. I\u0027ve added this task:\\n\" +"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":"                            \"        [T][ ] eat\\n\" +"},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"                            \"    Now you have 1 tasks in the list.\\n\","},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"                            outputStreamCaptor.toString());"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"    @AfterEach"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"    public void tearDown() {"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":"        System.setOut(standardOut);"},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":34}},{"path":"src/test/java/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"import org.junit.jupiter.api.AfterEach;"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"import org.junit.jupiter.api.BeforeEach;"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"import java.io.PrintStream;"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"import java.io.ByteArrayOutputStream;"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"public class UiTest {"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"    private final PrintStream standardOut \u003d System.out;"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":14,"author":{"gitId":"frisciliasultan"},"content":"    @BeforeEach"},{"lineNumber":15,"author":{"gitId":"frisciliasultan"},"content":"    public void setUp() {"},{"lineNumber":16,"author":{"gitId":"frisciliasultan"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));"},{"lineNumber":17,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":19,"author":{"gitId":"frisciliasultan"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"frisciliasultan"},"content":"    public void testShowLine() {"},{"lineNumber":21,"author":{"gitId":"frisciliasultan"},"content":"        new Ui().showLine();"},{"lineNumber":22,"author":{"gitId":"frisciliasultan"},"content":"        assertEquals(\"    ____________________________________\\n\","},{"lineNumber":23,"author":{"gitId":"frisciliasultan"},"content":"                outputStreamCaptor.toString());"},{"lineNumber":24,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":26,"author":{"gitId":"frisciliasultan"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"frisciliasultan"},"content":"    public void testShowBye() {"},{"lineNumber":28,"author":{"gitId":"frisciliasultan"},"content":"        new Ui().showBye();"},{"lineNumber":29,"author":{"gitId":"frisciliasultan"},"content":"        assertEquals(\"    Bye. Hope to see you again soon!\\n\","},{"lineNumber":30,"author":{"gitId":"frisciliasultan"},"content":"                outputStreamCaptor.toString());"},{"lineNumber":31,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":33,"author":{"gitId":"frisciliasultan"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"frisciliasultan"},"content":"    public void testError() {"},{"lineNumber":35,"author":{"gitId":"frisciliasultan"},"content":"        new Ui().showError(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":36,"author":{"gitId":"frisciliasultan"},"content":"        assertEquals(\"    ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\","},{"lineNumber":37,"author":{"gitId":"frisciliasultan"},"content":"                outputStreamCaptor.toString());"},{"lineNumber":38,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"frisciliasultan"},"content":""},{"lineNumber":40,"author":{"gitId":"frisciliasultan"},"content":"    @AfterEach"},{"lineNumber":41,"author":{"gitId":"frisciliasultan"},"content":"    public void tearDown() {"},{"lineNumber":42,"author":{"gitId":"frisciliasultan"},"content":"        System.setOut(standardOut);"},{"lineNumber":43,"author":{"gitId":"frisciliasultan"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"frisciliasultan"},"content":"}"}],"authorContributionMap":{"frisciliasultan":44}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"frisciliasultan"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"frisciliasultan"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"frisciliasultan"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"frisciliasultan"},"content":"list"},{"lineNumber":5,"author":{"gitId":"frisciliasultan"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"frisciliasultan"},"content":"list"},{"lineNumber":7,"author":{"gitId":"frisciliasultan"},"content":"delete 2"},{"lineNumber":8,"author":{"gitId":"frisciliasultan"},"content":"list"},{"lineNumber":9,"author":{"gitId":"frisciliasultan"},"content":"todo"},{"lineNumber":10,"author":{"gitId":"frisciliasultan"},"content":"deadline"},{"lineNumber":11,"author":{"gitId":"frisciliasultan"},"content":"event"},{"lineNumber":12,"author":{"gitId":"frisciliasultan"},"content":"lalala"},{"lineNumber":13,"author":{"gitId":"frisciliasultan"},"content":"bye"}],"authorContributionMap":{"frisciliasultan":13}}]
