[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"BearBear is a desktop task manager application done as part of the CS2103T module in NUS."},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"![start.png](docs/images/start.png)"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"## Content Page"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"* [Add Todo Task](#add-todo-task)"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"* [Add Deadline Task](#add-deadline-task)"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"* [Add Event Task](#add-event-task)"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"* [Mark Task as Complete](#mark-task-as-complete)"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"* [Delete Task](#delete-task)"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"* [Find Task](#find-task)"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"* [List Tasks](#list-tasks)"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"* [View Help guide](#view-help-guide)"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"* [Exit Application](#exit-application)"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"## Features"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"### Add Todo Task"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"* Description: Creates and adds a Todo task to the task list."},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"* Format: `todo \u003ctask_description\u003e`"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"* Example: `todo borrow book`"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"![todo_example.png](docs/images/todo_example.png)"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"### Add Deadline Task"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"* Description: Creates and adds a Deadline task to the task list."},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"* Format: `deadline \u003ctask_description\u003e \u003cdeadline\u003e`"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"* Examples:"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"   1. `deadline submit project /by Sunday 2359`"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"   2. `deadline submit project /by 2021-2-23`"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"![deadline_example.png](docs/images/deadline_example.png)"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"### Add Event Task"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"* Description: Creates and adds an Event task to the task list."},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"* Format: `event \u003ctask_description\u003e \u003cevent_time\u003e`"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"* Examples:"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"   1. `event school /at Monday 1400`"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"   2. `event school /at 2021-2-23`"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"![event_example.png](docs/images/event_example.png)"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"### Mark Task as Complete"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"* Description: Marks a task corresponding to a task index in task list as complete."},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"* Format: done \u003ctask_index\u003e"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"* Example: `done 2`"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"![done_example.png](docs/images/done_example.png)"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"### Delete Task"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"* Description: Deletes a task corresponding to a task index in task list."},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"* Format: delete \u003ctask_index\u003e"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"* Example: `delete 2`"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"![delete_example.png](docs/images/delete_example.png)"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"### Find Task"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"* Description: Finds a task with task description that matches a keyword."},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"* Format: `find \u003ckeyword\u003e`"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"* Example: `find book`"},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"![find_example.png](docs/images/find_example.png)"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"### List Tasks"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"* Description: Shows a list of all tasks."},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"* Format: `list`"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"* Example: `list`"},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":"![list_example.png](docs/images/list_example.png)"},{"lineNumber":76,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":78,"author":{"gitId":"candyhy"},"content":"### View Help guide"},{"lineNumber":79,"author":{"gitId":"candyhy"},"content":"* Description: Shows a list of supported commands and their descriptions."},{"lineNumber":80,"author":{"gitId":"candyhy"},"content":"* Format: `help`"},{"lineNumber":81,"author":{"gitId":"candyhy"},"content":"* Example: `help`"},{"lineNumber":82,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":83,"author":{"gitId":"candyhy"},"content":"![help_example.png](docs/images/help_example.png)"},{"lineNumber":84,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":85,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":86,"author":{"gitId":"candyhy"},"content":"### Exit Application"},{"lineNumber":87,"author":{"gitId":"candyhy"},"content":"* Description: Terminates the application."},{"lineNumber":88,"author":{"gitId":"candyhy"},"content":"* Format: `bye`"},{"lineNumber":89,"author":{"gitId":"candyhy"},"content":"* Example: `bye`"},{"lineNumber":90,"author":{"gitId":"candyhy"},"content":""}],"authorContributionMap":{"candyhy":90}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"    mainClassName \u003d \"bearbear.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"    archiveBaseName \u003d \"bearbear\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"candyhy":17,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"BearBear is a desktop task manager application done as part of the CS2103T module in NUS."},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"![start.png](images/start.png)"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"## Content Page "},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"* [Add Todo Task](#add-todo-task)"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"* [Add Deadline Task](#add-deadline-task)"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"* [Add Event Task](#add-event-task)"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"* [Mark Task as Complete](#mark-task-as-complete)"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"* [Delete Task](#delete-task)"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"* [Find Task](#find-task)"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"* [List Tasks](#list-tasks)"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"* [View Help guide](#view-help-guide)"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"* [Exit Application](#exit-application)"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"### Add Todo Task"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"* Description: Creates and adds a Todo task to the task list."},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"* Format: `todo \u003ctask_description\u003e`"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"* Example: `todo borrow book`"},{"lineNumber":22,"author":{"gitId":"-"},"content":""},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"![todo_example.png](images/todo_example.png)"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"### Add Deadline Task"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"* Description: Creates and adds a Deadline task to the task list."},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"* Format: `deadline \u003ctask_description\u003e \u003cdeadline\u003e`"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"* Examples:"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"    1. `deadline submit project /by Sunday 2359`"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"    2. `deadline submit project /by 2021-2-23`"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"  "},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"![deadline_example.png](images/deadline_example.png)"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    "},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"### Add Event Task"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"* Description: Creates and adds an Event task to the task list."},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"* Format: `event \u003ctask_description\u003e \u003cevent_time\u003e`"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"* Examples:"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"    1. `event school /at Monday 1400`"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"    2. `event school /at 2021-2-23`"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"  "},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"![event_example.png](images/event_example.png)"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"### Mark Task as Complete"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"* Description: Marks a task corresponding to a task index in task list as complete."},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"* Format: done \u003ctask_index\u003e"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"* Example: `done 2`"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"![done_example.png](images/done_example.png)"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"### Delete Task"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"* Description: Deletes a task corresponding to a task index in task list."},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"* Format: delete \u003ctask_index\u003e"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"* Example: `delete 2`"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"![delete_example.png](images/delete_example.png)"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"### Find Task"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"* Description: Finds a task with task description that matches a keyword."},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"* Format: `find \u003ckeyword\u003e`"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"* Example: `find book`"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"![find_example.png](images/find_example.png)"},{"lineNumber":68,"author":{"gitId":"-"},"content":""},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"### List Tasks"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"* Description: Shows a list of all tasks."},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"* Format: `list`"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"* Example: `list`"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":"![list_example.png](images/list_example.png)"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":78,"author":{"gitId":"candyhy"},"content":"### View Help guide"},{"lineNumber":79,"author":{"gitId":"candyhy"},"content":"* Description: Shows a list of supported commands and their descriptions."},{"lineNumber":80,"author":{"gitId":"candyhy"},"content":"* Format: `help`"},{"lineNumber":81,"author":{"gitId":"candyhy"},"content":"* Example: `help`"},{"lineNumber":82,"author":{"gitId":"-"},"content":""},{"lineNumber":83,"author":{"gitId":"candyhy"},"content":"![help_example.png](images/help_example.png)"},{"lineNumber":84,"author":{"gitId":"-"},"content":""},{"lineNumber":85,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":86,"author":{"gitId":"candyhy"},"content":"### Exit Application"},{"lineNumber":87,"author":{"gitId":"candyhy"},"content":"* Description: Terminates the application."},{"lineNumber":88,"author":{"gitId":"candyhy"},"content":"* Format: `bye`"},{"lineNumber":89,"author":{"gitId":"candyhy"},"content":"* Example: `bye`"},{"lineNumber":90,"author":{"gitId":"-"},"content":""}],"authorContributionMap":{"candyhy":71,"-":19}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"-"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"if exist \"%JAVA_EXE%\" goto execute"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"-"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":":execute"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@rem Setup the command line"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"@rem Execute Gradle"},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":":end"},{"lineNumber":77,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":78,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":":fail"},{"lineNumber":81,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":82,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":83,"author":{"gitId":"-"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":84,"author":{"gitId":"-"},"content":"exit /b 1"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":":mainEnd"},{"lineNumber":87,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":":omega"}],"authorContributionMap":{"candyhy":4,"-":85}},{"path":"src/main/java/bearbear/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import bearbear.bearbear.Main;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":10}},{"path":"src/main/java/bearbear/bearbear/BearBear.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.bearbear;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import bearbear.tasks.Deadline;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import bearbear.tasks.Event;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import bearbear.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import bearbear.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import bearbear.tasks.Todo;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import bearbear.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":" * A chat bot manager for handling task list operations."},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"public class BearBear {"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    private static final String LOGO \u003d \"\\n\""},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"            + \"╔══╗───────╔══╗\\n\""},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"            + \"║╔╗╠═╦═╗╔╦╗║╔╗╠═╦═╗╔╦╗\\n\""},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"            + \"║╔╗║╩╣╬╚╣╔╝║╔╗║╩╣╬╚╣╔╝\\n\""},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"            + \"╚══╩═╩══╩╝─╚══╩═╩══╩╝\\n\";"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    private final TaskList list;"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code BearBear} object with an empty task list."},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    public BearBear() {"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"        this.list \u003d new TaskList();"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code BearBear} object with a task list."},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"     * @param list Task list."},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    public BearBear(TaskList list) {"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"        this.list \u003d list;"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"     * Adds a new task to list of tasks."},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"     * @param message Task description."},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"     * @param type Identifier of task type."},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"     * @param date Time of task."},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"    public String addTask(String message, String type, String date) {"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"        Task task \u003d null;"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"        switch (type) {"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"        case \"todo\":"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"            task \u003d new Todo(message);"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"            break;"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"        case \"deadline\":"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"            task \u003d new Deadline(message, date);"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"            break;"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"        case \"event\":"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"            task \u003d new Event(message, date);"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"            break;"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"        default:"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"            System.out.println(\"No task added\");"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"        assert task !\u003d null;"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"        list.addItem(task);"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"        return Ui.showAddTaskMessage(task, list.getLst());"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"     * Removes a task from list of tasks."},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"     * @param id Index of task to be removed."},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"    public String removeTask(int id) {"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"        int n \u003d id - 1;"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"        Task task \u003d list.getLst().get(n);"},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"        list.removeItem(n);"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"        return Ui.showRemoveTaskMessage(task, list.getLst());"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":"     * Marks a task as done."},{"lineNumber":76,"author":{"gitId":"candyhy"},"content":"     * @param id Index of task to be marked as done"},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"candyhy"},"content":"    public String markAsDone(int id) {"},{"lineNumber":79,"author":{"gitId":"candyhy"},"content":"        int n \u003d id - 1;"},{"lineNumber":80,"author":{"gitId":"candyhy"},"content":"        list.doneTask(n);"},{"lineNumber":81,"author":{"gitId":"candyhy"},"content":"        return Ui.showDoneTaskMessage(list.getLst(), n);"},{"lineNumber":82,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":85,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"candyhy"},"content":"     * Shows user list of current tasks."},{"lineNumber":87,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"candyhy"},"content":"    public String showTasks() {"},{"lineNumber":89,"author":{"gitId":"candyhy"},"content":"        return Ui.showTasksToUser(list.getLst());"},{"lineNumber":90,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":92,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"candyhy"},"content":"     * Returns Task List."},{"lineNumber":94,"author":{"gitId":"candyhy"},"content":"     * @return Task list"},{"lineNumber":95,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"candyhy"},"content":"    public TaskList getList() {"},{"lineNumber":97,"author":{"gitId":"candyhy"},"content":"        return list;"},{"lineNumber":98,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":100,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"candyhy"},"content":"     * Returns logo of chat bot."},{"lineNumber":102,"author":{"gitId":"candyhy"},"content":"     * @return Logo of chat bot"},{"lineNumber":103,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"candyhy"},"content":"    public String getLogo() {"},{"lineNumber":105,"author":{"gitId":"candyhy"},"content":"        return LOGO;"},{"lineNumber":106,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":108,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"candyhy"},"content":"     * Returns number of tasks in task list."},{"lineNumber":110,"author":{"gitId":"candyhy"},"content":"     * @return Number of tasks in task list."},{"lineNumber":111,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"candyhy"},"content":"    public int getNumberOfTasks() {"},{"lineNumber":113,"author":{"gitId":"candyhy"},"content":"        return list.size();"},{"lineNumber":114,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":116,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"candyhy"},"content":"     * Returns String of tasks containing a keyword."},{"lineNumber":118,"author":{"gitId":"candyhy"},"content":"     * @param keyword Keyword to be searched."},{"lineNumber":119,"author":{"gitId":"candyhy"},"content":"     * @return String of tasks containing a keyword."},{"lineNumber":120,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"candyhy"},"content":"    public String showTasksContainingKeyword(String keyword) {"},{"lineNumber":122,"author":{"gitId":"candyhy"},"content":"        return Ui.showTasksToUser(list.tasksContainingKeyword(keyword));"},{"lineNumber":123,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"candyhy":123,"-":2}},{"path":"src/main/java/bearbear/bearbear/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.bearbear;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import bearbear.command.Command;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import bearbear.exceptions.StorageException;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import bearbear.exceptions.UiException;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import bearbear.storage.Storage;"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import bearbear.tasks.TaskList;"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import bearbear.ui.MainWindow;"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"import javafx.application.Application;"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"import javafx.scene.Scene;"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"import javafx.stage.Stage;"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":" * Main entry point to the chat bot application."},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":" * Initialises application and starts user interaction."},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"public class Main extends Application {"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    private static final File file \u003d new File(\"data/BearBear.txt\");"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"    public void start(Stage stage) throws StorageException, UiException {"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"        BearBear bot \u003d startMain();"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"        assert bot !\u003d null : \"There should be a BearBear object at this point\";"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"            VBox ap \u003d fxmlLoader.load();"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"            stage.setTitle(\"BearBear\");"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"            stage.setScene(scene);"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setBearBear(bot);"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().showWelcomeMessage();"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"            stage.setMinWidth(400.0);"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"            stage.setMinHeight(600.0);"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"            stage.show();"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"        } catch (IOException e) {"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"            throw new UiException(\"Failure in initialising user interface.\");"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"     * Initializes task list from storage."},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"     * @return A BearBear object that manages task list operations"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"    public static BearBear startMain() throws StorageException {"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"        BearBear bot \u003d null;"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"        TaskList previous \u003d Storage.runFile(file);"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"        if (previous !\u003d null) {"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"            bot \u003d new BearBear(previous);"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"        if (bot \u003d\u003d null) {"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"            bot \u003d new BearBear();"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"        return bot;"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"     * Runs a user command."},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"     * @param userCommand A user command."},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"     * @param bot A BearBear object."},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"     * @return Output message of String to be shown to user."},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"     * @throws IOException If error occurs while writing to file."},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"    public static String runUserCommand(Command userCommand, BearBear bot) throws IOException {"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"        assert userCommand !\u003d null : \"User command should not be empty at this point\";"},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"        assert file !\u003d null;"},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":"        return userCommand.run(file, bot);"},{"lineNumber":76,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":77}},{"path":"src/main/java/bearbear/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import bearbear.bearbear.BearBear;"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":" * Exits the application."},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"public class ByeCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"    private static final String usageMessage \u003d \"Command: bye\\n\""},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"            + \"Description: Exits program\\n\";"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    public ByeCommand() {"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"        super(\"bye\");"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    public static String getUsageMessage() {"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"        return usageMessage;"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"    public String run(File file, BearBear bot) {"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"        System.exit(0);"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"        return \"\";"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":27}},{"path":"src/main/java/bearbear/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import bearbear.bearbear.BearBear;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":" * Represents a user command."},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"public abstract class Command {"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"    protected final String command;"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    public Command(String command) {"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"        this.command \u003d command;"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    public String getCommand() {"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"        return this.command;"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"     * Runs the command."},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"     * @param file The file that task information is stored and retrieved from."},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"     * @param bot A {@code BearBear} object."},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"     * @return Output message as String to be shown to user."},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"     * @throws IOException If error occurs while writing to file."},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    public abstract String run(File file, BearBear bot) throws IOException;"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":30}},{"path":"src/main/java/bearbear/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import bearbear.bearbear.BearBear;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import bearbear.exceptions.InvalidArgumentException;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import bearbear.storage.Storage;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":" * Creates a Deadline task."},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    private static final String usageMessage \u003d \"Command: deadline \u003ctask_description\u003e /by \u003cdue_date\u003e\\n\""},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"            + \"Description: Adds a deadline task with a due date to task list\\n\";"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"    private final String description;"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    private final String deadline;"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code DeadlineCommand} object with a task description and deadline date component."},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"     * @param description task description"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"     * @param deadline deadline of task"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    public DeadlineCommand(String description, String deadline) {"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"        super(\"deadline\");"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"        this.description \u003d description;"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"     * Returns description of deadline task."},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"     * @return deadline task description"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"    public String getDescription() {"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"        return description;"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"     * Returns deadline of task."},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"     * @return task deadline"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"    public String getDeadline() {"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"        return deadline;"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"     * Validates argument for Deadline Command."},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"     * @param userInput User input as String."},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"     * @return String array with task description and deadline."},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"     * @throws InvalidArgumentException If task description is missing from input."},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"    public static String[] validateArgument(String userInput) throws InvalidArgumentException {"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"        String[] userInputArr \u003d userInput.split(\"/by\");"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"        if (userInputArr.length \u003d\u003d 1) {"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"            throw new InvalidArgumentException(\"Please input task due date using \u0027/by (date)\u0027!\\n\");"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"        String[] str \u003d userInputArr[0].split(\" \", 2);"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"        if (str.length \u003d\u003d 1) {"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"            throw new InvalidArgumentException(\"Please input task description!\\n\");"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"        return userInputArr;"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"    public static String getUsageMessage() {"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"        return usageMessage;"},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"    public String run(File file, BearBear bot) throws IOException {"},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"        String output \u003d bot.addTask(getDescription(), getCommand(), getDeadline());"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"        Storage.saveFile(file, bot);"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"        return output;"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":74}},{"path":"src/main/java/bearbear/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import bearbear.bearbear.BearBear;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import bearbear.exceptions.InvalidArgumentException;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import bearbear.storage.Storage;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":" * Deletes a task."},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    private static final String usageMessage \u003d \"Command: delete \u003ctask_number\u003e\\n\""},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"            + \"Description: Deletes a task\\n\";"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"    private final int taskNumber;"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code DeleteCommand} object with a task number component only."},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"     * @param taskNumber Index of task to be removed."},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    public DeleteCommand(int taskNumber) {"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"        super(\"delete\");"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"        this.taskNumber \u003d taskNumber;"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"     * Returns index of task to be deleted."},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"     * @return Task index."},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"    public int getTaskNumber() {"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"        return taskNumber;"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"     * Validates argument of DeleteCommand."},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"     * @param userInput User Input as String."},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"     * @param bot A {@code BearBear} object."},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"     * @return Index of task as int."},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"     * @throws InvalidArgumentException If task index is invalid."},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"    public static int validateArgument(String userInput, BearBear bot) throws InvalidArgumentException {"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"        int taskIndex;"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"            taskIndex \u003d Integer.parseInt(userInput);"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"            throw new InvalidArgumentException(\"Invalid command! \""},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"                    + \"Please input task number using \u0027done (number)\u0027.\\n\");"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"        if (taskIndex \u003e bot.getNumberOfTasks()) {"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"            throw new InvalidArgumentException(\"Please input argument \u003c\u003d to \""},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"                    + bot.getNumberOfTasks() + \"!\\n\");"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"        return taskIndex;"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"    public static String getUsageMessage() {"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"        return usageMessage;"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"    public String run(File file, BearBear bot) throws IOException {"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"        String output \u003d bot.removeTask(getTaskNumber());"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"        Storage.saveFile(file, bot);"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"        return output;"},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":67}},{"path":"src/main/java/bearbear/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import bearbear.bearbear.BearBear;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import bearbear.exceptions.InvalidArgumentException;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import bearbear.storage.Storage;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":" * Completes a task."},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"public class DoneCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    private static final String usageMessage \u003d \"Command: done \u003ctask_number\u003e\\n\""},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"            + \"Description: Marks a task as done\\n\";"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"    private final int taskNumber;"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code DoneCommand} object with a task number component only."},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"     * @param taskNumber Index of task to be marked as done."},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    public DoneCommand(int taskNumber) {"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"        super(\"done\");"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"        this.taskNumber \u003d taskNumber;"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"     * Returns index of task to be marked as done."},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"     * @return Task index."},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"    public int getTaskNumber() {"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"        return taskNumber;"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"     * Validates argument of DoneCommand."},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"     * @param userInput User input as String."},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"     * @param bot A {@code BearBear} object."},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"     * @return Index of task as int."},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"     * @throws InvalidArgumentException If task number is invalid."},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"    public static int validateArgument(String userInput, BearBear bot) throws InvalidArgumentException {"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"        int taskNumber;"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"            taskNumber \u003d Integer.parseInt(userInput);"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"            throw new InvalidArgumentException(\"Invalid command! \""},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"                    + \"Please input task number using \u0027done (number)\u0027.\\n\");"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"        if (taskNumber \u003e bot.getNumberOfTasks()) {"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"            throw new InvalidArgumentException(\"Please input argument \u003c\u003d to \""},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"                    + bot.getNumberOfTasks() + \"!\\n\");"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"        return taskNumber;"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"    public static String getUsageMessage() {"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"        return usageMessage;"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"    public String run(File file, BearBear bot) throws IOException {"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"        String output \u003d bot.markAsDone(getTaskNumber());"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"        Storage.saveFile(file, bot);"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"        return output;"},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":67}},{"path":"src/main/java/bearbear/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import bearbear.bearbear.BearBear;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import bearbear.exceptions.InvalidArgumentException;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import bearbear.storage.Storage;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":" * Creates an Event task."},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"public class EventCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    private static final String usageMessage \u003d \"Command: event \u003ctask_description\u003e /at \u003cdate\u003e\\n\""},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"            + \"Description: Adds an event task with an event time to task list\\n\";"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"    private final String description;"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    private final String eventTime;"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"     * Creates an {@code EventCommand} object with a task description and event time component."},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"     * @param description Task description."},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"     * @param eventTime Time of event."},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    public EventCommand(String description, String eventTime) {"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"        super(\"event\");"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"        this.description \u003d description;"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"     * Returns description of event task."},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"     * @return Description of event task."},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"    public String getDescription() {"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"        return description;"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"     * Returns event time of task."},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"     * @return Event time of task."},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"    public String getEventTime() {"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"        return eventTime;"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"     * Validates arguments of EventCommand."},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"     * @param userInput User input as String."},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"     * @return A String array with task description and event time."},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"     * @throws InvalidArgumentException If task description or event time is missing from input."},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"    public static String[] validateArgument(String userInput) throws InvalidArgumentException {"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"        String[] userInputArr \u003d userInput.split(\"/at\");"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"        if (userInputArr.length \u003d\u003d 1) {"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"            throw new InvalidArgumentException(\"Please input task due date using \u0027/at (date)\u0027!\\n\");"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"        String[] s \u003d userInputArr[0].split(\" \", 2);"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"        if (s.length \u003d\u003d 1) {"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"            throw new InvalidArgumentException(\"Please input task description!\\n\");"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"        return userInputArr;"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"    public static String getUsageMessage() {"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"        return usageMessage;"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"    public String run(File file, BearBear bot) throws IOException {"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"        String output \u003d bot.addTask(getDescription(), getCommand(), getEventTime());"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"        Storage.saveFile(file, bot);"},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"        return output;"},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":76}},{"path":"src/main/java/bearbear/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import bearbear.bearbear.BearBear;"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"public class FindCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"    private static final String usageMessage \u003d \"Command: find \u003ckeyword\u003e\\n\""},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"            + \"Description: Searches for a keyword\\n\";"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"    private final String keyword;"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code FindCommand} object with a keyword component."},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"     * @param keyword Keyword to be searched for."},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"    public FindCommand(String keyword) {"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"        super(\"find\");"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    public String getKeyword() {"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"        return keyword;"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"    public static String getUsageMessage() {"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"        return usageMessage;"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"    public String run(File file, BearBear bot) {"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"        return bot.showTasksContainingKeyword(getKeyword());"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":33}},{"path":"src/main/java/bearbear/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import bearbear.bearbear.BearBear;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import bearbear.ui.Ui;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":" * Show help menu to user."},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"public class HelpCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    public HelpCommand() {"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"        super(\"help\");"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    public String run(File file, BearBear bot) throws IOException {"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"        return Ui.showHelpMessage();"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":21}},{"path":"src/main/java/bearbear/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import bearbear.bearbear.BearBear;"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":" * Lists the current tasks."},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"public class ListCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"    private static final String usageMessage \u003d \"Command: list\\n\""},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"            + \"Description: Shows all available tasks\\n\";"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    public ListCommand() {"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"        super(\"list\");"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    public static String getUsageMessage() {"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"        return usageMessage;"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"    public String run(File file, BearBear bot) {"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"        return bot.showTasks();"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":26}},{"path":"src/main/java/bearbear/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import bearbear.bearbear.BearBear;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import bearbear.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":" * Creates a Todo task."},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"public class TodoCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    private static final String usageMessage \u003d \"Command: todo \u003ctask_description\u003e\\n\""},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"            + \"Description: Adds a todo task with no specified time to task list\\n\";"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    private final String description;"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code TodoCommand} object with a task description component only."},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"     * @param description Task description."},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    public TodoCommand(String description) {"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"        super(\"todo\");"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"        this.description \u003d description;"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"     * Returns description of Todo task."},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"     * @return Description of Todo task."},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"    public String getDescription() {"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"        return description;"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"    public static String getUsageMessage() {"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"        return usageMessage;"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"    public String run(File file, BearBear bot) throws IOException {"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"        String output \u003d bot.addTask(getDescription(), getCommand(), null);"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"        Storage.saveFile(file, bot);"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"        return output;"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":44}},{"path":"src/main/java/bearbear/command/ValidateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import bearbear.bearbear.BearBear;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import bearbear.exceptions.InvalidArgumentException;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import bearbear.exceptions.InvalidCommandException;"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":" * Validates user command."},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"public class ValidateCommand {"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"    public static int validateDoneCommand(String userInput, BearBear bot) throws InvalidArgumentException {"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"        return DoneCommand.validateArgument(userInput, bot);"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    public static int validateDeleteCommand(String userInput, BearBear bot) throws InvalidArgumentException {"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"        return DeleteCommand.validateArgument(userInput, bot);"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    public static String[] validateDeadlineCommand(String userInput) throws InvalidArgumentException {"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"        return DeadlineCommand.validateArgument(userInput);"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"    public static String[] validateEventCommand(String userInput) throws InvalidArgumentException {"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"        return EventCommand.validateArgument(userInput);"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"     * Validates single argument commands."},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"     * @param userInput User input as String."},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"     * @return User input as Command."},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"     * @throws InvalidCommandException If command in invalid."},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    public static Command validateSingleArgumentCommand(String userInput) throws InvalidCommandException {"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"        Command userCommand;"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"        switch (userInput) {"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"        case \"todo\":"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"        case \"done\":"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"        case \"delete\":"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"        case \"deadline\":"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"        case \"event\":"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"        case \"find\":"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"            throw new InvalidCommandException(\"OOPS!!! \" + \"The description of \""},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"                    + userInput + \" command cannot be empty.\\n\""},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"                    + \"\\nUse \u0027help\u0027 to show list of commands.\");"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"        case \"bye\":"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"            userCommand \u003d new ByeCommand();"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"            break;"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"        case \"list\":"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"            userCommand \u003d new ListCommand();"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"            break;"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"        case \"help\":"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"            userCommand \u003d new HelpCommand();"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"            break;"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"        default:"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"            throw new InvalidCommandException(\"OOPS!!! \""},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"                    + \"I\u0027m sorry, but I don\u0027t know what that means :-()\\n\""},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"                    + \"\\nUse \u0027help\u0027 to show list of commands.\");"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"        return userCommand;"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":61}},{"path":"src/main/java/bearbear/exceptions/BearBearException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.exceptions;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Signals errors related to BearBear chat bot."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class BearBearException extends Exception {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    public BearBearException(String errorMessage) {"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"        super(errorMessage);"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":10}},{"path":"src/main/java/bearbear/exceptions/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.exceptions;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Signals an invalid user argument."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class InvalidArgumentException extends BearBearException {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    public InvalidArgumentException(String errorMessage) {"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"        super(errorMessage);"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":10}},{"path":"src/main/java/bearbear/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.exceptions;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Signals an invalid user command."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class InvalidCommandException extends BearBearException {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    public InvalidCommandException(String errorMessage) {"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"        super(errorMessage);"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":10}},{"path":"src/main/java/bearbear/exceptions/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.exceptions;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Signals failure in writing or reading to data file."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class StorageException extends BearBearException {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    public StorageException(String errorMessage) {"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"        super(errorMessage);"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":10}},{"path":"src/main/java/bearbear/exceptions/UiException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.exceptions;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Signals failure in initialising user interface of application."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class UiException extends BearBearException {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    public UiException(String errorMessage) {"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"        super(errorMessage);"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":10}},{"path":"src/main/java/bearbear/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.parser;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import bearbear.bearbear.BearBear;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import bearbear.command.Command;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import bearbear.command.DeadlineCommand;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import bearbear.command.DeleteCommand;"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import bearbear.command.DoneCommand;"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import bearbear.command.EventCommand;"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"import bearbear.command.FindCommand;"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"import bearbear.command.TodoCommand;"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"import bearbear.command.ValidateCommand;"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"import bearbear.exceptions.InvalidArgumentException;"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"import bearbear.exceptions.InvalidCommandException;"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"import bearbear.utils.DateValidator;"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"import bearbear.utils.DateValidatorUsingDateFormat;"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":" * Parses user input."},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"public class Parser {"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"     * Parses user input into a command."},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"     * @param userInput User input string."},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"     * @param bot A BearBear object that manages task list operations."},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"     * @return User command."},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"     * @throws InvalidCommandException If user input is an unrecognised command."},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"     * @throws InvalidArgumentException If arguments are missing from user input."},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    public static Command processInput(String userInput, BearBear bot) throws InvalidCommandException,"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"            InvalidArgumentException {"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"        String[] userInputArray \u003d userInput.split(\" \", 2);"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"        String command \u003d userInputArray[0];"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"        Command userCommand;"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"        if (userInputArray.length \u003d\u003d 1) {"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"            userCommand \u003d ValidateCommand.validateSingleArgumentCommand(command);"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"        } else {"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"            String input \u003d userInputArray[1];"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"            switch (userInputArray[0]) {"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"            case \"done\":"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"                int taskNumber \u003d ValidateCommand.validateDoneCommand(input, bot);"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"                userCommand \u003d new DoneCommand(taskNumber);"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"                break;"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"            case \"delete\":"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"                int taskIndex \u003d ValidateCommand.validateDeleteCommand(input, bot);"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"                userCommand \u003d new DeleteCommand(taskIndex);"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"                break;"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"            case \"todo\":"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"                userCommand \u003d new TodoCommand(input);"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"                break;"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"            case \"deadline\":"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"                String[] arr \u003d ValidateCommand.validateDeadlineCommand(input);"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"                String deadLine \u003d arr[1].strip();"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"                userCommand \u003d new DeadlineCommand(arr[0], processDate(deadLine));"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"                break;"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"            case \"event\":"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"                String[] a \u003d ValidateCommand.validateEventCommand(input);"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"                String eventTime \u003d a[1].strip();"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"                userCommand \u003d new EventCommand(a[0], processDate(eventTime));"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"                break;"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"            case \"find\":"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"                userCommand \u003d new FindCommand(input);"},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"                break;"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"            default:"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"                throw new InvalidCommandException(\"Invalid Command!\\n\");"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"        return userCommand;"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":"     * Parses user input date in \"yyyy-mm-dd\" or \"yyyy-mm-dd HHHH\" form as formatted string."},{"lineNumber":76,"author":{"gitId":"candyhy"},"content":"     * @param date User input date."},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":"     * @return User input date in the format \"dd/mm/yyyy HHHH\"."},{"lineNumber":78,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"candyhy"},"content":"    public static String processDate(String date) {"},{"lineNumber":80,"author":{"gitId":"candyhy"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d HHmm\");"},{"lineNumber":81,"author":{"gitId":"candyhy"},"content":"        DateValidator dateTimeValidator \u003d new DateValidatorUsingDateFormat(dateTimeFormatter);"},{"lineNumber":82,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":83,"author":{"gitId":"candyhy"},"content":"        if (!dateTimeValidator.isValid(date)) {"},{"lineNumber":84,"author":{"gitId":"candyhy"},"content":"            DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d\");"},{"lineNumber":85,"author":{"gitId":"candyhy"},"content":"            DateValidator dateValidator \u003d new DateValidatorUsingDateFormat(dateFormatter);"},{"lineNumber":86,"author":{"gitId":"candyhy"},"content":"            if (!dateValidator.isValid(date)) {"},{"lineNumber":87,"author":{"gitId":"candyhy"},"content":"                return date;"},{"lineNumber":88,"author":{"gitId":"candyhy"},"content":"            } else {"},{"lineNumber":89,"author":{"gitId":"candyhy"},"content":"                LocalDate d1 \u003d LocalDate.parse(date);"},{"lineNumber":90,"author":{"gitId":"candyhy"},"content":"                String day \u003d d1.getDayOfWeek().toString();"},{"lineNumber":91,"author":{"gitId":"candyhy"},"content":"                String month \u003d d1.getMonth().toString();"},{"lineNumber":92,"author":{"gitId":"candyhy"},"content":"                int year \u003d d1.getYear();"},{"lineNumber":93,"author":{"gitId":"candyhy"},"content":"                return String.format(\"%s %s %d\", day, month, year);"},{"lineNumber":94,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"candyhy"},"content":"        } else {"},{"lineNumber":96,"author":{"gitId":"candyhy"},"content":"            String[] deadLineArray \u003d date.split(\" \");"},{"lineNumber":97,"author":{"gitId":"candyhy"},"content":"            LocalDate d1 \u003d LocalDate.parse(deadLineArray[0]);"},{"lineNumber":98,"author":{"gitId":"candyhy"},"content":"            String day \u003d d1.getDayOfWeek().toString();"},{"lineNumber":99,"author":{"gitId":"candyhy"},"content":"            String month \u003d d1.getMonth().toString();"},{"lineNumber":100,"author":{"gitId":"candyhy"},"content":"            int year \u003d d1.getYear();"},{"lineNumber":101,"author":{"gitId":"candyhy"},"content":"            return String.format(\"%s %s %d %s\", day, month, year, deadLineArray[1]);"},{"lineNumber":102,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":104,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":104}},{"path":"src/main/java/bearbear/storage/FileReading.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.storage;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import java.io.FileReader;"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import bearbear.tasks.Deadline;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import bearbear.tasks.Event;"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import bearbear.tasks.TaskList;"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import bearbear.tasks.Todo;"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"public class FileReading {"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"     * Retrieves and loads list of task stored into task list."},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"     * @param file The file that task information retrieved from."},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"     * @return Task retrieved task list."},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"     * @throws IOException If error occurs while reading task data from file."},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    public static TaskList loadTask(File file) throws IOException {"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"        FileReader fr \u003d new FileReader(file);"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"        BufferedReader bufferedReader \u003d new BufferedReader(fr);"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"        String input \u003d bufferedReader.readLine();"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"        while (input !\u003d null) {"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"            String[] starr \u003d input.split(\"\\\\s\\\\|\\\\s\");"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"            if (starr.length \u003d\u003d 3) {"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"                Todo curr \u003d new Todo(starr[2]);"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"                if (starr[1].equals(\"1\")) {"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"                    curr.markAsDone();"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"                taskList.addItem(curr);"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"            } else {"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"                if (starr[0].equals(\"D\")) {"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"                    Deadline curr \u003d new Deadline(starr[2], starr[3]);"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"                    if (starr[1].equals(\"1\")) {"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"                        curr.markAsDone();"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"                    }"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"                    taskList.addItem(curr);"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"                } else if (starr[0].equals(\"E\")) {"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"                    Event curr \u003d new Event(starr[2], starr[3]);"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"                    if (starr[1].equals(\"1\")) {"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"                        curr.markAsDone();"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"                    }"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"                    taskList.addItem(curr);"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"            input \u003d bufferedReader.readLine();"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"        return taskList;"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":54}},{"path":"src/main/java/bearbear/storage/FileWriting.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.storage;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import bearbear.bearbear.BearBear;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import bearbear.tasks.Deadline;"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import bearbear.tasks.Event;"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import bearbear.tasks.Task;"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"import bearbear.tasks.Todo;"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":" * Used to write to a file."},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"public class FileWriting {"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"     * Saves list of tasks by writing into the file whenever a command updates the task list."},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"     * @param file The file that is written to."},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"     * @param bearBear A {@code BearBear} object that manages task list operations."},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"     * @throws IOException If error occurs while writing to the file."},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"    public static void writeToFile(File file, BearBear bearBear) throws IOException {"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"        FileWriter fw \u003d new FileWriter(file);"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"        List\u003cTask\u003e taskList \u003d bearBear.getList().getLst();"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"        StringBuilder tasks \u003d writeTasks(taskList);"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"        fw.write(tasks.toString());"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"        fw.close();"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"     * Returns list of tasks as String."},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"     * @param taskList List of tasks."},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"     * @return List of tasks as String."},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"    public static StringBuilder writeTasks(List\u003cTask\u003e taskList) {"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"        StringBuilder tasks \u003d new StringBuilder();"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"        for (Task curr : taskList) {"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"            if (curr.getStatus()) {"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"                textForCompletedTasks(curr, tasks);"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"            } else {"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"                textForUncompletedTasks(curr, tasks);"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"        return tasks;"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"     * Adds text for completed tasks."},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"     * @param curr A task from list of tasks."},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"     * @param textToAdd List of tasks as String."},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"    public static void textForCompletedTasks(Task curr, StringBuilder textToAdd) {"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"        if (curr instanceof Todo) {"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"            textToAdd.append(String.format(\"T | 1 | %s%n\", curr.getDescription()));"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"        } else if (curr instanceof Deadline) {"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"            textToAdd.append(String.format(\"D | 1 | %s | %s%n\", curr.getDescription(), ("},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"                    (Deadline) curr).getDeadline()));"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"        } else if (curr instanceof Event) {"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"            textToAdd.append(String.format(\"E | 1 | %s | %s%n\", curr.getDescription(), ("},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"                    (Event) curr).getEventTime()));"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"     * Adds text for uncompleted tasks."},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"     * @param curr A task from list of tasks."},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"     * @param textToAdd List of tasks as String."},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"    public static void textForUncompletedTasks(Task curr, StringBuilder textToAdd) {"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"        if (curr instanceof Todo) {"},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"            textToAdd.append(String.format(\"T | 0 | %s%n\", curr.getDescription()));"},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":"        } else if (curr instanceof Deadline) {"},{"lineNumber":76,"author":{"gitId":"candyhy"},"content":"            textToAdd.append(String.format(\"D | 0 | %s | %s%n\", curr.getDescription(), ("},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":"                    (Deadline) curr).getDeadline()));"},{"lineNumber":78,"author":{"gitId":"candyhy"},"content":"        } else if (curr instanceof Event) {"},{"lineNumber":79,"author":{"gitId":"candyhy"},"content":"            textToAdd.append(String.format(\"E | 0 | %s | %s%n\", curr.getDescription(), ("},{"lineNumber":80,"author":{"gitId":"candyhy"},"content":"                    (Event) curr).getEventTime()));"},{"lineNumber":81,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":83}},{"path":"src/main/java/bearbear/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.storage;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import java.nio.file.Files;"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import java.nio.file.Path;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import bearbear.bearbear.BearBear;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import bearbear.exceptions.StorageException;"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import bearbear.tasks.TaskList;"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":" * Used to read and write to a file."},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"public class Storage {"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"    private static final Path path \u003d Path.of(\"data\");"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"     * Retrieves and loads list of task stored into task list."},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"     * @param file The file that task information retrieved from."},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"     * @return Task retrieved task list"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"     * throws StorageException If error occurs while reading or writing to file."},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"    public static TaskList runFile(File file) throws StorageException {"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"        TaskList previous \u003d null;"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"        try {"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"            Files.createDirectories(path);"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"            if (!(file.createNewFile())) {"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"                previous \u003d FileReading.loadTask(file);"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"            throw new StorageException(\"Error writing to file\");"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"        return previous;"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"     * Saves list of tasks by writing into the file whenever a command updates the task list."},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"     * @param file the file that is written to"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"     * @param bearBear a Duke object that manages task list operations"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"     * @throws IOException if error occurs while writing to the file"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"    public static void saveFile(File file, BearBear bearBear) throws IOException {"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"        FileWriting.writeToFile(file, bearBear);"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":49}},{"path":"src/main/java/bearbear/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.tasks;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Represents task with a deadline."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    private final String deadline;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code Deadline} object with a task description and task deadline component."},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"     * @param description Task description."},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"     * @param deadline Task deadline."},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    public Deadline(String description, String deadline) {"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"        super(description, \"[D]\");"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"     * Returns deadline of task."},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"     * @return Task deadline."},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"    public String getDeadline() {"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"        return deadline;"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"        String str \u003d deadline.strip();"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"        return super.toString() + \"(by: \" + str + \")\";"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":32}},{"path":"src/main/java/bearbear/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.tasks;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Represents a task with an event time."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    private final String eventTime;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code Event} object with a task description and a task event time component."},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"     * @param description Task description."},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"     * @param eventTime Event time of task."},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    public Event(String description, String eventTime) {"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"        super(description, \"[E]\");"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"     * Returns time of the event."},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"     * @return Event time."},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"    public String getEventTime() {"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"        return eventTime;"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"        String str \u003d eventTime.strip();"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"        return super.toString() + \"(at: \" + str + \")\";"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":32}},{"path":"src/main/java/bearbear/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.tasks;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Represents a task."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public abstract class Task {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    protected final String description;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"    protected final String type;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    protected boolean isDone;"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code Task} object with a task description, task type,"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"     * with task initially set to not done status."},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"     * @param description Task description."},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"     * @param type Type of task."},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    public Task(String description, String type) {"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"        this.description \u003d description;"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"        this.type \u003d type;"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"        isDone \u003d false;"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"     * Marks task as done."},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    public void markAsDone() {"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"        isDone \u003d true;"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"     * Gets task status icon."},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"     * @return Task status icon."},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"    public String getStatusIcon() {"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"        return isDone ? \"[X]\" : \"[ ]\";"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"     * Returns identifier of type of task."},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"     * @return Identifier of task type."},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"    public String getType() {"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"        return type;"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"     * Returns description of task."},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"     * @return Task description."},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"    public String getDescription() {"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"        return description;"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"     * Checks if task is completed."},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"     * @return True if task is completed, false otherwise"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"    public boolean getStatus() {"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"        return isDone;"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"     * Checks if task contains a keyword."},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"     * @param keyword Keyword to be searched."},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"     * @return True if task contains the keyword, false otherwise."},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"    public boolean contains(String keyword) {"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"        String[] descriptionArray \u003d this.description.split(\" \");"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"        for (String s : descriptionArray) {"},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"            if (keyword.equals(s)) {"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"                return true;"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"        return false;"},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":78,"author":{"gitId":"candyhy"},"content":"    public String toString() {"},{"lineNumber":79,"author":{"gitId":"candyhy"},"content":"        return getType() + getStatusIcon() + \" \" + description;"},{"lineNumber":80,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":81}},{"path":"src/main/java/bearbear/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.tasks;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":" * Represents a list of {@code Task}"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"    private final List\u003cTask\u003e lst;"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code TaskList} object with an empty task list component."},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    public TaskList() {"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"        lst \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"     * Adds a task to the list of tasks."},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"     * @param task Task to be added."},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"    public void addItem(Task task) {"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"        lst.add(task);"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"     * Removes a task from the list of tasks."},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"     * @param id Index of task to be removed."},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"    public void removeItem(int id) {"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"        lst.remove(id);"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"     * Marks a task as done."},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"     * @param id Index of task to be marked as done."},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"    public void doneTask(int id) {"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"        lst.get(id).markAsDone();"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"     * Returns list of tasks."},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"     * @return List of tasks."},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"    public List\u003cTask\u003e getLst() {"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"        return lst;"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"     * Checks if tasks in task list contains the keyword."},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"     * @param keyword Keyword to be searched."},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"     * @return List of Tasks containing the keyword."},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"    public List\u003cTask\u003e tasksContainingKeyword(String keyword) {"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"        List\u003cTask\u003e tasksWithKeyword \u003d new ArrayList\u003c\u003e();"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"        lst.stream().filter(task -\u003e task.contains(keyword)).forEach(task -\u003e tasksWithKeyword.add(task));"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"        return tasksWithKeyword;"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"     * Returns size of task list."},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"     * @return Size of task list."},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"    public int size() {"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"        return lst.size();"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":69}},{"path":"src/main/java/bearbear/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.tasks;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Represents task without time attribute."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"    public Todo(String description) {"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"        super(description, \"[T]\");"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"        return super.toString();"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":16}},{"path":"src/main/java/bearbear/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.ui;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import bearbear.exceptions.UiException;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import javafx.fxml.FXML;"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import javafx.geometry.Insets;"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"import javafx.geometry.Pos;"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"import javafx.scene.Node;"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"import javafx.scene.control.Label;"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"import javafx.scene.image.Image;"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":" * An example of a custom control using FXML."},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":" * containing text from the speaker."},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"public class DialogBox extends HBox {"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    @FXML"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"    private Label dialog;"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    private ImageView displayPicture;"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"    private DialogBox(String text, Image img) throws UiException {"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"        try {"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"            fxmlLoader.load();"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"        } catch (IOException e) {"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"            throw new UiException(\"Failure in creating DialogBox\");"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"        dialog.setText(text);"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"        dialog.setBackground(new Background(new BackgroundFill(Color.LIGHTSTEELBLUE, new CornerRadii(6),"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"                new Insets(-3, -3, -3, -3))));"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"        displayPicture.setImage(img);"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"    private void flip() {"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"        Collections.reverse(tmp);"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"     * Creates a user dialogue box with a user message label and an avatar icon."},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"     * @param text User message as text."},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"     * @param img Avatar icon image."},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"     * @return {@code DialogBox} object representing a user command."},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"     * @throws UiException If error occurs when creating user DialogBox."},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"    public static DialogBox getUserDialog(String text, Image img) throws UiException {"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"        return new DialogBox(text, img);"},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"     * Creates a bearBear dialogue box with a bearBear message label and an avatar icon."},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":"     * @param text A {@code BearBear} chat bot message as Label."},{"lineNumber":76,"author":{"gitId":"candyhy"},"content":"     * @param img Avatar icon image."},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":"     * @return {@code DialogBox} object representing a chat bot response."},{"lineNumber":78,"author":{"gitId":"candyhy"},"content":"     * @throws UiException If error occurs when creating BearBear DialogBox."},{"lineNumber":79,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"candyhy"},"content":"    public static DialogBox getBearBearDialog(String text, Image img) throws UiException {"},{"lineNumber":81,"author":{"gitId":"candyhy"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":82,"author":{"gitId":"candyhy"},"content":"        db.flip();"},{"lineNumber":83,"author":{"gitId":"candyhy"},"content":"        return db;"},{"lineNumber":84,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":85}},{"path":"src/main/java/bearbear/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.ui;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import bearbear.bearbear.BearBear;"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import bearbear.bearbear.Main;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import bearbear.command.Command;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import bearbear.exceptions.InvalidArgumentException;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import bearbear.exceptions.InvalidCommandException;"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import bearbear.exceptions.UiException;"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import bearbear.parser.Parser;"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"import javafx.fxml.FXML;"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"import javafx.geometry.Insets;"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"import javafx.scene.control.Button;"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"import javafx.scene.image.Image;"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":" * The Main Window. Provides the basic application layout."},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"public class MainWindow extends VBox {"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    private VBox dialogContainer;"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"    @FXML"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    private HBox hBox;"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"    @FXML"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"    private TextField userInput;"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"    @FXML"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"    private Button sendButton;"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"    private BearBear bot;"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Pigglet.png\"));"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"    private final Image bearImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Pooh.png\"));"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"     * Initializes the required components."},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"    @FXML"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"    public void initialize() {"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"        setBackgroundColor();"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"     * Adds the welcome message label."},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"     * @throws UiException If error occurs when creating DialogBox."},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"    @FXML"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"    public void showWelcomeMessage() throws UiException {"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"        String welcomeMessage \u003d getResponse(Ui.showWelcomeMessage(bot));"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"        assert welcomeMessage !\u003d null : \"Welcome message should not be empty!\";"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getBearBearDialog(welcomeMessage, bearImage)"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"        );"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"     * Sets {@code BearBear} object."},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"     * @param bearBear A {@code BearBear} object."},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"    public void setBearBear(BearBear bearBear) {"},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"        bot \u003d bearBear;"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":"     * Sets background colour of user interface."},{"lineNumber":76,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":"    public void setBackgroundColor() {"},{"lineNumber":78,"author":{"gitId":"candyhy"},"content":"        dialogContainer.setBackground(new Background(new BackgroundFill(Color.GHOSTWHITE,"},{"lineNumber":79,"author":{"gitId":"candyhy"},"content":"                CornerRadii.EMPTY, Insets.EMPTY)));"},{"lineNumber":80,"author":{"gitId":"candyhy"},"content":"        scrollPane.setStyle(\"-fx-background: #f8f8ff; -fx-border-color: #f8f8ff;\");"},{"lineNumber":81,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":83,"author":{"gitId":"candyhy"},"content":"    @FXML"},{"lineNumber":84,"author":{"gitId":"candyhy"},"content":"    private void handleUserInput() throws UiException {"},{"lineNumber":85,"author":{"gitId":"candyhy"},"content":"        String userText \u003d userInput.getText();"},{"lineNumber":86,"author":{"gitId":"candyhy"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":87,"author":{"gitId":"candyhy"},"content":"        String response;"},{"lineNumber":88,"author":{"gitId":"candyhy"},"content":"        Command userCommand;"},{"lineNumber":89,"author":{"gitId":"candyhy"},"content":"        try {"},{"lineNumber":90,"author":{"gitId":"candyhy"},"content":"            userCommand \u003d Parser.processInput(input, bot);"},{"lineNumber":91,"author":{"gitId":"candyhy"},"content":"            assert userCommand !\u003d null : \"User command should not be empty at this point!\";"},{"lineNumber":92,"author":{"gitId":"candyhy"},"content":"            response \u003d Main.runUserCommand(userCommand, bot);"},{"lineNumber":93,"author":{"gitId":"candyhy"},"content":"        } catch (InvalidCommandException | InvalidArgumentException | IOException ex) {"},{"lineNumber":94,"author":{"gitId":"candyhy"},"content":"            response \u003d ex.getMessage();"},{"lineNumber":95,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":97,"author":{"gitId":"candyhy"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":98,"author":{"gitId":"candyhy"},"content":"                DialogBox.getUserDialog(userText, userImage),"},{"lineNumber":99,"author":{"gitId":"candyhy"},"content":"                DialogBox.getBearBearDialog(response, bearImage)"},{"lineNumber":100,"author":{"gitId":"candyhy"},"content":"        );"},{"lineNumber":101,"author":{"gitId":"candyhy"},"content":"        userInput.clear();"},{"lineNumber":102,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":104,"author":{"gitId":"candyhy"},"content":"    private String getResponse(String input) {"},{"lineNumber":105,"author":{"gitId":"candyhy"},"content":"        return input;"},{"lineNumber":106,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":107}},{"path":"src/main/java/bearbear/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.ui;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import bearbear.bearbear.BearBear;"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import bearbear.command.ByeCommand;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import bearbear.command.DeadlineCommand;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import bearbear.command.DeleteCommand;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import bearbear.command.DoneCommand;"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import bearbear.command.EventCommand;"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import bearbear.command.FindCommand;"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"import bearbear.command.ListCommand;"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"import bearbear.command.TodoCommand;"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"import bearbear.tasks.Task;"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":" * Manages the UI component of the application."},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"public class Ui {"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"     * Displays welcome message upon launch of application."},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"     * @param bot A {@code BearBear} object that manages task list operations."},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"    public static String showWelcomeMessage(BearBear bot) {"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"        return String.format(\"Hello! I\u0027m BearBear\\n%s\\n%s\\n\", bot.getLogo(), \"What can I do for you?\");"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"     * Displays response for ListCommand."},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"     * @param list List of task to be printed."},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    public static String showTasksToUser(List\u003cTask\u003e list) {"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"        StringBuilder tasks \u003d new StringBuilder();"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"        if (list.isEmpty()) {"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"            tasks.append(\"You have no tasks currently!\\n\");"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"        } else {"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"            for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"                tasks.append(String.format(\"%d.%s%n\", i + 1, list.get(i)));"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"        return tasks.toString();"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"     * Displays response for a task type Command."},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"     * @param task The new task added."},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"     * @param list List of tasks."},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"    public static String showAddTaskMessage(Task task, List\u003cTask\u003e list) {"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"        String taskMessage;"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"        taskMessage \u003d \"Got it. I\u0027ve added this task:\\n\" + String.format(\" %s%n\", task)"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"                + String.format(\"Now you have %d tasks in the list.%n\", list.size());"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"        return taskMessage;"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"     * Displays response for DeleteCommand."},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"     * @param task The task to be removed."},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"     * @param list List of tasks."},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"    public static String showRemoveTaskMessage(Task task, List\u003cTask\u003e list) {"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"        return \"Noted. I\u0027ve removed this task:\" + String.format(\" %s%n\", task)"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"                + String.format(\"Now you have %d tasks in the list.%n\", list.size());"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"     * Displays response for DoneCommand."},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"     * @param list List of tasks."},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"     * @param id Index of task to be marked as done."},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"    public static String showDoneTaskMessage(List\u003cTask\u003e list, int id) {"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"        return \"Nice! I\u0027ve marked this task as done:\""},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"                + String.format(\" %s%n\", list.get(id));"},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"candyhy"},"content":"     * Displays response for HelpCommand."},{"lineNumber":79,"author":{"gitId":"candyhy"},"content":"     * @return Message for HelpCommand."},{"lineNumber":80,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"candyhy"},"content":"    public static String showHelpMessage() {"},{"lineNumber":82,"author":{"gitId":"candyhy"},"content":"        return ListCommand.getUsageMessage() + \"\\n\""},{"lineNumber":83,"author":{"gitId":"candyhy"},"content":"                + ByeCommand.getUsageMessage() + \"\\n\""},{"lineNumber":84,"author":{"gitId":"candyhy"},"content":"                + DoneCommand.getUsageMessage() + \"\\n\""},{"lineNumber":85,"author":{"gitId":"candyhy"},"content":"                + DeleteCommand.getUsageMessage() + \"\\n\""},{"lineNumber":86,"author":{"gitId":"candyhy"},"content":"                + FindCommand.getUsageMessage() + \"\\n\""},{"lineNumber":87,"author":{"gitId":"candyhy"},"content":"                + TodoCommand.getUsageMessage() + \"\\n\""},{"lineNumber":88,"author":{"gitId":"candyhy"},"content":"                + DeadlineCommand.getUsageMessage() + \"\\n\""},{"lineNumber":89,"author":{"gitId":"candyhy"},"content":"                + EventCommand.getUsageMessage();"},{"lineNumber":90,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":91}},{"path":"src/main/java/bearbear/utils/DateValidator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.utils;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"public interface DateValidator {"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"    boolean isValid(String date);"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":5}},{"path":"src/main/java/bearbear/utils/DateValidatorUsingDateFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.utils;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"public class DateValidatorUsingDateFormat implements DateValidator {"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"    private final DateTimeFormatter dateFormatter;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"    public DateValidatorUsingDateFormat(DateTimeFormatter dateFormatter) {"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"        this.dateFormatter \u003d dateFormatter;"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    public boolean isValid(String date) {"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"            LocalDate.parse(date, dateFormatter);"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"            return false;"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"        return true;"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":23}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\""},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"         spacing\u003d\"6.0\"\u003e"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"    \u003cpadding\u003e"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    \u003c/padding\u003e"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textFill\u003d\"#010914\" wrapText\u003d\"true\"/\u003e"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"candyhy":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"bearbear.ui.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" vvalue\u003d\"1.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"        \u003cHBox fx:id\u003d\"hBox\" minHeight\u003d\"40.0\" prefHeight\u003d\"40.0\" VBox.vgrow\u003d\"NEVER\"\u003e"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"                    \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" HBox.hgrow\u003d\"ALWAYS\"/\u003e"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"                    \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" prefWidth\u003d\"70.0\" text\u003d\"Send\" HBox.hgrow\u003d\"ALWAYS\"\u003e"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"                    \u003c/Button\u003e"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"        \u003c/HBox\u003e"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"\u003c/VBox\u003e"}],"authorContributionMap":{"candyhy":18}},{"path":"src/test/java/bearbear/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.tasks;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class DeadlineTest {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"    public void testIsDone() {"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"        Deadline test \u003d new Deadline(\"test\", \"test\");"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"        Assertions.assertFalse(test.isDone);"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    public void testMarkAsDone() {"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"        Deadline test \u003d new Deadline(\"test\", \"test\");"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"        test.markAsDone();"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"        Assertions.assertTrue(test.isDone);"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    public void testGetStatusIcon() {"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"        Deadline test \u003d new Deadline(\"test\", \"test\");"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"[ ]\", test.getStatusIcon());"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"        test.markAsDone();"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"[X]\", test.getStatusIcon());"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    public void testGetType() {"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"        Deadline test \u003d new Deadline(\"test\", \"test\");"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"[D]\", test.getType());"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    public void testGetDescription() {"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"        Deadline test \u003d new Deadline(\"test\", \"test\");"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"test\", test.getDescription());"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"    public void testGetStatus() {"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"        Deadline test \u003d new Deadline(\"test\", \"test\");"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"        Assertions.assertFalse(test.getStatus());"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"    public void testGetDeadline() {"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"        Deadline test \u003d new Deadline(\"test\", \"test\");"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"test\", test.getDeadline());"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":51}},{"path":"src/test/java/bearbear/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.tasks;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class EventTest {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"    public void testIsDone() {"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"        Event test \u003d new Event(\"test\", \"test\");"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"        Assertions.assertFalse(test.isDone);"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    public void testMarkAsDone() {"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"        Event test \u003d new Event(\"test\", \"test\");"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"        test.markAsDone();"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"        Assertions.assertTrue(test.isDone);"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    public void testGetStatusIcon() {"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"        Event test \u003d new Event(\"test\", \"test\");"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"[ ]\", test.getStatusIcon());"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"        test.markAsDone();"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"[X]\", test.getStatusIcon());"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    public void testGetType() {"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"        Event test \u003d new Event(\"test\", \"test\");"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"[E]\", test.getType());"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    public void testGetDescription() {"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"        Event test \u003d new Event(\"test\", \"test\");"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"test\", test.getDescription());"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"    public void testGetStatus() {"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"        Event test \u003d new Event(\"test\", \"test\");"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"        Assertions.assertFalse(test.getStatus());"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"    public void testGetEventTime() {"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"        Event test \u003d new Event(\"test\", \"test\");"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"test\", test.getEventTime());"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":51}},{"path":"src/test/java/bearbear/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package bearbear.tasks;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class TodoTest {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"    public void testIsDone() {"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"        Todo test \u003d new Todo(\"test\");"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"        Assertions.assertFalse(test.isDone);"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    public void testMarkAsDone() {"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"        Todo test \u003d new Todo((\"test\"));"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"        test.markAsDone();"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"        Assertions.assertTrue(test.isDone);"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    public void testGetStatusIcon() {"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"        Todo test \u003d new Todo(\"test\");"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"[ ]\", test.getStatusIcon());"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"        test.markAsDone();"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"[X]\", test.getStatusIcon());"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    public void testGetType() {"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"        Todo test \u003d new Todo(\"test\");"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"[T]\", test.getType());"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    public void testGetDescription() {"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"        Todo test \u003d new Todo(\"test\");"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"test\", test.getDescription());"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"    public void testGetStatus() {"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"        Todo test \u003d new Todo(\"test\");"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"        Assertions.assertFalse(test.getStatus());"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":45}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"list"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"list"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"delete 2"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"list"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"blah"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"bye"}],"authorContributionMap":{"candyhy":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"java -classpath ../bin duke.Main \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"candyhy":2,"-":36}}]
