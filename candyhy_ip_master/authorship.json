[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"candyhy":16,"-":45}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":33,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":36,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"@rem Find java.exe"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":42,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":47,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":48,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":49,"author":{"gitId":"-"},"content":"echo location of your Java installation."},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"goto fail"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":":findJavaFromJavaHome"},{"lineNumber":54,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":55,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"if exist \"%JAVA_EXE%\" goto execute"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":61,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":62,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":63,"author":{"gitId":"-"},"content":"echo location of your Java installation."},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"goto fail"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"-"},"content":":execute"},{"lineNumber":68,"author":{"gitId":"-"},"content":"@rem Setup the command line"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"@rem Execute Gradle"},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"},{"lineNumber":75,"author":{"gitId":"-"},"content":""},{"lineNumber":76,"author":{"gitId":"-"},"content":":end"},{"lineNumber":77,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":78,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":79,"author":{"gitId":"-"},"content":""},{"lineNumber":80,"author":{"gitId":"-"},"content":":fail"},{"lineNumber":81,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":82,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":83,"author":{"gitId":"-"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":84,"author":{"gitId":"-"},"content":"exit /b 1"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"-"},"content":":mainEnd"},{"lineNumber":87,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":":omega"}],"authorContributionMap":{"candyhy":4,"-":85}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import duke.duke.Main;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":10}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import duke.duke.Duke;"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import duke.ui.Ui;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":" * Exits the application."},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"public class ByeCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    public ByeCommand() {"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"        super(\"bye\");"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    public String run(File file, Duke bot) {"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"        return Ui.showExitMessage();"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":21}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import duke.duke.Duke;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":" * Represents a user command."},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"public abstract class Command {"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"    protected final String command;"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    public Command(String command) {"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"        this.command \u003d command;"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    public String getCommand() {"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"        return this.command;"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"     * Runs the command."},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"     * @param file The file that task information is stored and retrieved from."},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"     * @param bot A duke object."},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"     * @return Output message as String to be shown to user."},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"     * @throws IOException If error occurs while writing to file."},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    public abstract String run(File file, Duke bot) throws IOException;"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":30}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import duke.duke.Duke;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import duke.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":" * Creates a Deadline task."},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    private final String description;"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    private final String deadline;"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code DeadlineCommand} object with a task description and deadline date component."},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"     * @param description task description"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"     * @param deadline deadline of task"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    public DeadlineCommand(String description, String deadline) {"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"        super(\"deadline\");"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"        this.description \u003d description;"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"     * Returns description of deadline task."},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"     * @return deadline task description"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"    public String getDescription() {"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"        return description;"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"     * Returns deadline of task."},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"     * @return task deadline"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"    public String getDeadline() {"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"        return deadline;"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"    public String run(File file, Duke bot) throws IOException {"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"        String output \u003d bot.addTask(getDescription(), getCommand(), getDeadline());"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"        Storage.saveFile(file, bot);"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"        return output;"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":49}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import duke.duke.Duke;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import duke.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":" * Deletes a task."},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    private final String taskNumber;"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code DeleteCommand} object with a task number component only."},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"     * @param taskNumber Index of task to be removed."},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    public DeleteCommand(String taskNumber) {"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"        super(\"delete\");"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"        this.taskNumber \u003d taskNumber;"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"     * Returns index of task to be deleted."},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"     * @return task index"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    public String getTaskNumber() {"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"        return taskNumber;"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    public String run(File file, Duke bot) throws IOException {"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"        String output \u003d bot.removeTask(getTaskNumber());"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"        Storage.saveFile(file, bot);"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"        return output;"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":38}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import duke.duke.Duke;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import duke.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":" * Completes a task."},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"public class DoneCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    private final String taskNumber;"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code DoneCommand} object with a task number component only."},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"     * @param taskNumber Index of task to be marked as done."},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    public DoneCommand(String taskNumber) {"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"        super(\"done\");"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"        this.taskNumber \u003d taskNumber;"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"     * Returns index of task to be marked as done."},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"     * @return task index"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    public String getTaskNumber() {"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"        return taskNumber;"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    public String run(File file, Duke bot) throws IOException {"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"        String output \u003d bot.markAsDone(getTaskNumber());"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"        Storage.saveFile(file, bot);"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"        return output;"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":38}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import duke.duke.Duke;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import duke.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":" * Creates an Event task."},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"public class EventCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    private final String description;"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    private final String eventTime;"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"     * Creates an {@code EventCommand} object with a task description and event time component."},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"     * @param description task description"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"     * @param eventTime time of event"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    public EventCommand(String description, String eventTime) {"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"        super(\"event\");"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"        this.description \u003d description;"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"     * Returns description of event task."},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"     * @return description of event task"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"    public String getDescription() {"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"        return description;"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"     * Returns event time of task."},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"     * @return event time of task"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"    public String getEventTime() {"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"        return eventTime;"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"    public String run(File file, Duke bot) throws IOException {"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"        String output \u003d bot.addTask(getDescription(), getCommand(), getEventTime());"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"        Storage.saveFile(file, bot);"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"        return output;"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":49}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import duke.duke.Duke;"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"public class FindCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"    private final String keyword;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code FindCommand} object with a keyword component."},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"     * @param keyword Keyword to be searched for."},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    public FindCommand(String keyword) {"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"        super(\"find\");"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    public String getKeyword() {"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"        return keyword;"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    public String run(File file, Duke bot) {"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"        return bot.showTasksContainingKeyword(getKeyword());"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":27}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import duke.duke.Duke;"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":" * Lists the current tasks."},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"public class ListCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"    public ListCommand() {"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"        super(\"list\");"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    public String run(File file, Duke bot) {"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"        return bot.showTasks();"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":20}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import duke.duke.Duke;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import duke.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":" * Creates a Todo task."},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"public class TodoCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    private final String description;"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code TodoCommand} object with a task description component only."},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"     * @param description task description"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    public TodoCommand(String description) {"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"        super(\"todo\");"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"        this.description \u003d description;"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"     * Returns description of Todo task."},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"     * @return description of Todo task"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    public String getDescription() {"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"        return description;"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    public String run(File file, Duke bot) throws IOException {"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"        String output \u003d bot.addTask(getDescription(), getCommand(), null);"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"        Storage.saveFile(file, bot);"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"        return output;"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":38}},{"path":"src/main/java/duke/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.duke;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import duke.tasks.Deadline;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import duke.tasks.Event;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import duke.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import duke.tasks.Todo;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":" * A chat bot manager for handling task list operations."},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    private final TaskList list;"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code Duke} object with an empty task list."},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    public Duke() {"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"        this.list \u003d new TaskList();"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code Duke} object with a task list."},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"     * @param list Task list."},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    public Duke(TaskList list) {"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"        this.list \u003d list;"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"     * Adds a new task to list of tasks."},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"     * @param message Task description."},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"     * @param type Identifier of task type."},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"     * @param date Time of task."},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"    public String addTask(String message, String type, String date) {"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"        Task task \u003d null;"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"        switch (type) {"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"        case \"todo\":"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"            task \u003d new Todo(message);"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"            break;"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"        case \"deadline\":"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"            task \u003d new Deadline(message, date);"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"            break;"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"        case \"event\":"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"            task \u003d new Event(message, date);"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"            break;"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"        default:"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"            System.out.println(\"No task added\");"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"        list.addItem(task);"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"        return Ui.showAddTaskMessage(task, list.getLst());"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"     * Removes a task from list of tasks."},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"     * @param id Index of task to be removed."},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"    public String removeTask(String id) {"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"        int n \u003d Integer.parseInt(id) - 1;"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"        Task task \u003d list.getLst().get(n);"},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"        list.removeItem(n);"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"        return Ui.showRemoveTaskMessage(task, list.getLst());"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":"     * Marks a task as done."},{"lineNumber":76,"author":{"gitId":"candyhy"},"content":"     * @param id index of task to be marked as done"},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"candyhy"},"content":"    public String markAsDone(String id) {"},{"lineNumber":79,"author":{"gitId":"candyhy"},"content":"        int n \u003d Integer.parseInt(id) - 1;"},{"lineNumber":80,"author":{"gitId":"candyhy"},"content":"        list.doneTask(n);"},{"lineNumber":81,"author":{"gitId":"candyhy"},"content":"        return Ui.showDoneTaskMessage(list.getLst(), n);"},{"lineNumber":82,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":85,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"candyhy"},"content":"     * Shows user list of current tasks."},{"lineNumber":87,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"candyhy"},"content":"    public String showTasks() {"},{"lineNumber":89,"author":{"gitId":"candyhy"},"content":"        return Ui.showTasksToUser(list.getLst());"},{"lineNumber":90,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":92,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"candyhy"},"content":"     * Returns task list."},{"lineNumber":94,"author":{"gitId":"candyhy"},"content":"     * @return Task list"},{"lineNumber":95,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"candyhy"},"content":"    public TaskList getList() {"},{"lineNumber":97,"author":{"gitId":"candyhy"},"content":"        return list;"},{"lineNumber":98,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":100,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"candyhy"},"content":"     * Returns logo of chat bot."},{"lineNumber":102,"author":{"gitId":"candyhy"},"content":"     * @return Logo of chat bot"},{"lineNumber":103,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"candyhy"},"content":"    public String getLogo() {"},{"lineNumber":105,"author":{"gitId":"candyhy"},"content":"        return LOGO;"},{"lineNumber":106,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":108,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"candyhy"},"content":"     * Returns number of tasks in task list."},{"lineNumber":110,"author":{"gitId":"candyhy"},"content":"     * @return Number of tasks in task list."},{"lineNumber":111,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"candyhy"},"content":"    public int getNumberOfTasks() {"},{"lineNumber":113,"author":{"gitId":"candyhy"},"content":"        return list.size();"},{"lineNumber":114,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":115,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":116,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":117,"author":{"gitId":"candyhy"},"content":"     * Returns String of tasks containing a keyword."},{"lineNumber":118,"author":{"gitId":"candyhy"},"content":"     * @param keyword keyword to be searched."},{"lineNumber":119,"author":{"gitId":"candyhy"},"content":"     * @return String of tasks containing a keyword."},{"lineNumber":120,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"candyhy"},"content":"    public String showTasksContainingKeyword(String keyword) {"},{"lineNumber":122,"author":{"gitId":"candyhy"},"content":"        return Ui.showTasksToUser(list.tasksContainingKeyword(keyword));"},{"lineNumber":123,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":125,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"candyhy":118,"-":7}},{"path":"src/main/java/duke/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.duke;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import duke.command.Command;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import duke.storage.Storage;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import duke.tasks.TaskList;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import duke.ui.MainWindow;"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import duke.ui.Ui;"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import javafx.application.Application;"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"import javafx.stage.Stage;"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":" * Main entry point to the chat bot application."},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":" * Initialises application and starts user interaction."},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"public class Main extends Application {"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    //private final static File f \u003d new File(\"src/main/data/duke.txt\");"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    private static final File file \u003d new File(\"duke.txt\");"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    private MainWindow mainWindow;"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"    public void init() {"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"        mainWindow \u003d new MainWindow();"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"    public void start(Stage stage) {"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"        Duke bot \u003d startMain();"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"        mainWindow.initialise(bot);"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"        stage.setTitle(\"Duke\");"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"        stage.setResizable(false);"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"        stage.setMinHeight(600.0);"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"        stage.setMinWidth(400.0);"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"        stage.setScene(mainWindow.getScene());"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"        stage.show();"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"     * Initializes task list from storage and prints welcome greeting."},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"     * @return A Duke object that manages task list operations"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"    public static Duke startMain() {"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"        Duke bot \u003d null;"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"        try {"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"            if (!(file.createNewFile())) {"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"                TaskList previous \u003d Storage.runFile(file);"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"                bot \u003d new Duke(previous);"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"        } catch (IOException e) {"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"            e.printStackTrace();"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"        if (bot \u003d\u003d null) {"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"            bot \u003d new Duke();"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"        Ui.showWelcomeMessage(bot);"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"        return bot;"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"     * Runs a user command."},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"     * @param userCommand A user command."},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"     * @param bot A duke object."},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"     * @return Output message of String to be shown to user."},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"     * @throws IOException If error occurs while writing to file."},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"    public static String runUserCommand(Command userCommand, Duke bot) throws IOException {"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"        return userCommand.run(file, bot);"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":74}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Signals errors related to Duke chat bot."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"        super(errorMessage);"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":10}},{"path":"src/main/java/duke/exceptions/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Signals an invalid user argument."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class InvalidArgumentException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    public InvalidArgumentException(String errorMessage) {"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"        super(errorMessage);"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":10}},{"path":"src/main/java/duke/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Signals an invalid user command."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class InvalidCommandException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    public InvalidCommandException(String errorMessage) {"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"        super(errorMessage);"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import duke.command.ByeCommand;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import duke.command.Command;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import duke.command.DeadlineCommand;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import duke.command.DoneCommand;"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import duke.command.EventCommand;"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"import duke.command.FindCommand;"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"import duke.command.ListCommand;"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"import duke.command.TodoCommand;"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"import duke.duke.Duke;"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"import duke.exceptions.InvalidArgumentException;"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"import duke.exceptions.InvalidCommandException;"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"import duke.utils.DateValidator;"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"import duke.utils.DateValidatorUsingDateFormat;"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":" * Parses user input."},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"public class Parser {"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"     * Parses user input into a command."},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"     * @param userInput User input string."},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"     * @param bot A Duke object that manages task list operations."},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"     * @return User command."},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"     * @throws InvalidCommandException If user input is an unrecognised command."},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"     * @throws InvalidArgumentException If argument is missing from user input."},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"    public static Command processInput(String userInput, Duke bot) throws InvalidCommandException,"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"            InvalidArgumentException {"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"        String[] userInputArray \u003d userInput.split(\" \", 2);"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"        Command userCommand \u003d null;"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"        if (userInputArray.length \u003d\u003d 1) {"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"            if (!(userInputArray[0].equals(\"bye\") || userInputArray[0].equals(\"list\"))) {"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"                if (userInputArray[0].equals(\"todo\") || userInputArray[0].equals(\"done\")"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"                        || userInputArray[0].equals(\"deadline\") || userInputArray[0].equals(\"event\")"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"                        || userInputArray[0].equals(\"delete\")) {"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"                    throw new InvalidCommandException(\"OOPS!!! \" + \"The description of a \""},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"                            + userInputArray[0] + \" cannot be empty.\\n\");"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"                } else {"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"                    throw new InvalidCommandException(\"OOPS!!! \""},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"                            + \"I\u0027m sorry, but I don\u0027t know what that means :-()\\n\");"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"            if (userInputArray[0].equals(\"bye\")) {"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"                userCommand \u003d new ByeCommand();"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"            } else {"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"                userCommand \u003d new ListCommand();"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"        } else {"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"            switch (userInputArray[0]) {"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"            case \"done\":"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"                try {"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"                    Integer.parseInt(userInputArray[1]);"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"                } catch (NumberFormatException ex) {"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"                    throw new InvalidArgumentException(\"Invalid command! \""},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"                            + \"Please input task number using \u0027delete (number)\u0027.\\n\");"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"                if (Integer.parseInt(userInputArray[1]) \u003e bot.getNumberOfTasks()) {"},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"                    throw new InvalidArgumentException(\"Please input argument \u003c\u003d to \""},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"                            + bot.getNumberOfTasks() + \"!\\n\");"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"                userCommand \u003d new DoneCommand(userInputArray[1]);"},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"                break;"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"            case \"delete\":"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"                try {"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"                    Integer.parseInt(userInputArray[1]);"},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"                } catch (NumberFormatException ex) {"},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":"                    throw new InvalidArgumentException(\"Invalid command! \""},{"lineNumber":76,"author":{"gitId":"candyhy"},"content":"                            + \"Please input task number using \u0027delete (number)\u0027.\\n\");"},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":78,"author":{"gitId":"candyhy"},"content":"                if (Integer.parseInt(userInputArray[1]) \u003e bot.getNumberOfTasks()) {"},{"lineNumber":79,"author":{"gitId":"candyhy"},"content":"                    throw new InvalidArgumentException(\"Please input argument \u003c\u003d to \""},{"lineNumber":80,"author":{"gitId":"candyhy"},"content":"                            + bot.getList().getLst().size() + \"!\\n\");"},{"lineNumber":81,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":82,"author":{"gitId":"candyhy"},"content":"                userCommand \u003d new DeleteCommand(userInputArray[1]);"},{"lineNumber":83,"author":{"gitId":"candyhy"},"content":"                break;"},{"lineNumber":84,"author":{"gitId":"candyhy"},"content":"            case \"todo\":"},{"lineNumber":85,"author":{"gitId":"candyhy"},"content":"                userCommand \u003d new TodoCommand(userInputArray[1]);"},{"lineNumber":86,"author":{"gitId":"candyhy"},"content":"                break;"},{"lineNumber":87,"author":{"gitId":"candyhy"},"content":"            case \"deadline\":"},{"lineNumber":88,"author":{"gitId":"candyhy"},"content":"                String[] arr \u003d userInputArray[1].split(\"/by\");"},{"lineNumber":89,"author":{"gitId":"candyhy"},"content":"                if (arr.length \u003d\u003d 1) {"},{"lineNumber":90,"author":{"gitId":"candyhy"},"content":"                    throw new InvalidArgumentException(\"Please input task due date using \u0027/by (date)\u0027!\\n\");"},{"lineNumber":91,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":92,"author":{"gitId":"candyhy"},"content":"                String[] str \u003d arr[0].split(\" \", 2);"},{"lineNumber":93,"author":{"gitId":"candyhy"},"content":"                if (str.length \u003d\u003d 1) {"},{"lineNumber":94,"author":{"gitId":"candyhy"},"content":"                    throw new InvalidArgumentException(\"Please input task description!\\n\");"},{"lineNumber":95,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":96,"author":{"gitId":"candyhy"},"content":"                String deadLine \u003d arr[1].strip();"},{"lineNumber":97,"author":{"gitId":"candyhy"},"content":"                userCommand \u003d new DeadlineCommand(arr[0], processDate(deadLine));"},{"lineNumber":98,"author":{"gitId":"candyhy"},"content":"                break;"},{"lineNumber":99,"author":{"gitId":"candyhy"},"content":"            case \"event\":"},{"lineNumber":100,"author":{"gitId":"candyhy"},"content":"                String[] a \u003d userInputArray[1].split(\"/at\");"},{"lineNumber":101,"author":{"gitId":"candyhy"},"content":"                if (a.length \u003d\u003d 1) {"},{"lineNumber":102,"author":{"gitId":"candyhy"},"content":"                    throw new InvalidArgumentException(\"Please input task due date using \u0027/at (date)\u0027!\\n\");"},{"lineNumber":103,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":104,"author":{"gitId":"candyhy"},"content":"                String[] s \u003d a[0].split(\" \", 2);"},{"lineNumber":105,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":106,"author":{"gitId":"candyhy"},"content":"                if (s.length \u003d\u003d 1) {"},{"lineNumber":107,"author":{"gitId":"candyhy"},"content":"                    throw new InvalidArgumentException(\"Please input task description!\\n\");"},{"lineNumber":108,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":109,"author":{"gitId":"candyhy"},"content":"                String eventTime \u003d a[1].strip();"},{"lineNumber":110,"author":{"gitId":"candyhy"},"content":"                userCommand \u003d new EventCommand(a[0], processDate(eventTime));"},{"lineNumber":111,"author":{"gitId":"candyhy"},"content":"                break;"},{"lineNumber":112,"author":{"gitId":"candyhy"},"content":"            case \"find\":"},{"lineNumber":113,"author":{"gitId":"candyhy"},"content":"                userCommand \u003d new FindCommand(userInputArray[1]);"},{"lineNumber":114,"author":{"gitId":"candyhy"},"content":"                break;"},{"lineNumber":115,"author":{"gitId":"candyhy"},"content":"            default:"},{"lineNumber":116,"author":{"gitId":"candyhy"},"content":"                throw new InvalidCommandException(\"Invalid Command!\\n\");"},{"lineNumber":117,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":118,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"candyhy"},"content":"        return userCommand;"},{"lineNumber":120,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":122,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"candyhy"},"content":"     * Parses user input date in \"yyyy-mm-dd\" or \"yyyy-mm-dd HHHH\" form as formatted string."},{"lineNumber":124,"author":{"gitId":"candyhy"},"content":"     * @param date User input date."},{"lineNumber":125,"author":{"gitId":"candyhy"},"content":"     * @return User input date in the format \"dd/mm/yyyy HHHH\"."},{"lineNumber":126,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"candyhy"},"content":"    public static String processDate(String date) {"},{"lineNumber":128,"author":{"gitId":"candyhy"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d HHmm\");"},{"lineNumber":129,"author":{"gitId":"candyhy"},"content":"        DateValidator dateTimeValidator \u003d new DateValidatorUsingDateFormat(dateTimeFormatter);"},{"lineNumber":130,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":131,"author":{"gitId":"candyhy"},"content":"        if (!dateTimeValidator.isValid(date)) {"},{"lineNumber":132,"author":{"gitId":"candyhy"},"content":"            DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d\");"},{"lineNumber":133,"author":{"gitId":"candyhy"},"content":"            DateValidator dateValidator \u003d new DateValidatorUsingDateFormat(dateFormatter);"},{"lineNumber":134,"author":{"gitId":"candyhy"},"content":"            if (!dateValidator.isValid(date)) {"},{"lineNumber":135,"author":{"gitId":"candyhy"},"content":"                return date;"},{"lineNumber":136,"author":{"gitId":"candyhy"},"content":"            } else {"},{"lineNumber":137,"author":{"gitId":"candyhy"},"content":"                LocalDate d1 \u003d LocalDate.parse(date);"},{"lineNumber":138,"author":{"gitId":"candyhy"},"content":"                String day \u003d d1.getDayOfWeek().toString();"},{"lineNumber":139,"author":{"gitId":"candyhy"},"content":"                String month \u003d d1.getMonth().toString();"},{"lineNumber":140,"author":{"gitId":"candyhy"},"content":"                int year \u003d d1.getYear();"},{"lineNumber":141,"author":{"gitId":"candyhy"},"content":"                return String.format(\"%s %s %d\", day, month, year);"},{"lineNumber":142,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":143,"author":{"gitId":"candyhy"},"content":"        } else {"},{"lineNumber":144,"author":{"gitId":"candyhy"},"content":"            String[] deadLineArray \u003d date.split(\" \");"},{"lineNumber":145,"author":{"gitId":"candyhy"},"content":"            LocalDate d1 \u003d LocalDate.parse(deadLineArray[0]);"},{"lineNumber":146,"author":{"gitId":"candyhy"},"content":"            String day \u003d d1.getDayOfWeek().toString();"},{"lineNumber":147,"author":{"gitId":"candyhy"},"content":"            String month \u003d d1.getMonth().toString();"},{"lineNumber":148,"author":{"gitId":"candyhy"},"content":"            int year \u003d d1.getYear();"},{"lineNumber":149,"author":{"gitId":"candyhy"},"content":"            return String.format(\"%s %s %d %s\", day, month, year, deadLineArray[1]);"},{"lineNumber":150,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":152,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":152}},{"path":"src/main/java/duke/storage/FileReading.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import java.io.FileReader;"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import duke.tasks.Deadline;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import duke.tasks.Event;"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import duke.tasks.TaskList;"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import duke.tasks.Todo;"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"public class FileReading {"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"     * Retrieves and loads list of task stored into task list."},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"     * @param file The file that task information retrieved from."},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"     * @return Task retrieved task list."},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"     * @throws IOException If error occurs while retrieving tasks from file."},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    public static TaskList loadTask(File file) throws IOException {"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"        FileReader fr \u003d new FileReader(file);"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"        BufferedReader bufferedReader \u003d new BufferedReader(fr);"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"        String input \u003d bufferedReader.readLine();"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"        while (input !\u003d null) {"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"            String[] starr \u003d input.split(\"\\\\s\\\\|\\\\s\");"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"            if (starr.length \u003d\u003d 3) {"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"                Todo curr \u003d new Todo(starr[2]);"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"                if (starr[1].equals(\"1\")) {"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"                    curr.markAsDone();"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"                taskList.addItem(curr);"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"            } else {"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"                if (starr[0].equals(\"D\")) {"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"                    Deadline curr \u003d new Deadline(starr[2], starr[3]);"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"                    if (starr[1].equals(\"1\")) {"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"                        curr.markAsDone();"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"                    }"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"                    taskList.addItem(curr);"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"                } else if (starr[0].equals(\"E\")) {"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"                    Event curr \u003d new Event(starr[2], starr[3]);"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"                    if (starr[1].equals(\"1\")) {"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"                        curr.markAsDone();"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"                    }"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"                    taskList.addItem(curr);"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"            input \u003d bufferedReader.readLine();"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"        return taskList;"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":54}},{"path":"src/main/java/duke/storage/FileWriting.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import duke.duke.Duke;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import duke.tasks.Deadline;"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import duke.tasks.Event;"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import duke.tasks.Task;"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"import duke.tasks.Todo;"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":" * Used to write to a file."},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"public class FileWriting {"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"     * Saves list of tasks by writing into the file whenever a command updates the task list."},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"     * @param file The file that is written to."},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"     * @param duke A Duke object that manages task list operations."},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"     * @throws IOException If error occurs while writing to the file."},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"    public static void writeToFile(File file, Duke duke) throws IOException {"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"        FileWriter fw \u003d new FileWriter(file);"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"        List\u003cTask\u003e taskList \u003d duke.getList().getLst();"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"        StringBuilder textToAdd \u003d new StringBuilder();"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"        for (Task curr : taskList) {"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"            if (curr.getStatus()) {"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"                if (curr instanceof Todo) {"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"                    textToAdd.append(String.format(\"T | 1 | %s%n\", curr.getDescription()));"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"                } else if (curr instanceof Deadline) {"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"                    textToAdd.append(String.format(\"D | 1 | %s | %s%n\", curr.getDescription(), ("},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"                            (Deadline) curr).getDeadline()));"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"                } else if (curr instanceof Event) {"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"                    textToAdd.append(String.format(\"E | 1 | %s | %s%n\", curr.getDescription(), ("},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"                            (Event) curr).getEventTime()));"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"            } else {"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"                if (curr instanceof Todo) {"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"                    textToAdd.append(String.format(\"T | 0 | %s%n\", curr.getDescription()));"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"                } else if (curr instanceof Deadline) {"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"                    textToAdd.append(String.format(\"D | 0 | %s | %s%n\", curr.getDescription(), ("},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"                            (Deadline) curr).getDeadline()));"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"                } else if (curr instanceof Event) {"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"                    textToAdd.append(String.format(\"E | 0 | %s | %s%n\", curr.getDescription(), ("},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"                            (Event) curr).getEventTime()));"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"        fw.write(textToAdd.toString());"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"        fw.close();"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":57}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import duke.duke.Duke;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import duke.tasks.TaskList;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":" * Used to read and write to a file."},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"     * Retrieves and loads list of task stored into task list."},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"     * @param file The file that task information retrieved from."},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"     * @return Task retrieved task list"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"     * @throws IOException If error occurs while writing or retrieving tasks from file."},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    public static TaskList runFile(File file) throws IOException {"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"        return FileReading.loadTask(file);"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"     * Saves list of tasks by writing into the file whenever a command updates the task list."},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"     * @param file the file that is written to"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"     * @param duke a Duke object that manages task list operations"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"     * @throws IOException if error occurs while writing to the file"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"    public static void saveFile(File file, Duke duke) throws IOException {"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"        FileWriting.writeToFile(file, duke);"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":33}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Represents task with a deadline."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    private final String deadline;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code Deadline} object with a task description and task deadline component."},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"     * @param description Task description."},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"     * @param deadline Task deadline."},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    public Deadline(String description, String deadline) {"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"        super(description, \"[D]\");"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"     * Returns deadline of task."},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"     * @return Task deadline."},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"    public String getDeadline() {"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"        return deadline;"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"        String str \u003d deadline.strip();"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"        return super.toString() + \"(by: \" + str + \")\";"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":32}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Represents a task with an event time."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    private final String eventTime;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code Event} object with a task description and a task event time component."},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"     * @param description Task description."},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"     * @param eventTime Event time of task."},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    public Event(String description, String eventTime) {"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"        super(description, \"[E]\");"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"     * Returns time of the event."},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"     * @return Event time."},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"    public String getEventTime() {"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"        return eventTime;"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"        String str \u003d eventTime.strip();"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"        return super.toString() + \"(at: \" + str + \")\";"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":32}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Represents a task."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public abstract class Task {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    protected final String description;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"    protected final String type;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    protected boolean isDone;"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code Task} object with a task description, task type,"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"     * with task initially set to not done status."},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"     * @param description Task description."},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"     * @param type Type of task"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    public Task(String description, String type) {"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"        this.description \u003d description;"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"        this.type \u003d type;"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"        isDone \u003d false;"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"     * Marks task as done."},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    public void markAsDone() {"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"        isDone \u003d true;"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"     * Gets task status icon."},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"     * @return Task status icon."},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"    public String getStatusIcon() {"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"        return isDone ? \"[X]\" : \"[ ]\";"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"     * Returns identifier of type of task."},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"     * @return Identifier of task type."},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"    public String getType() {"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"        return type;"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"     * Returns description of task."},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"     * @return Task description."},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"    public String getDescription() {"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"        return description;"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"     * Checks if task is completed."},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"     * @return True if task is completed, false otherwise"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"    public boolean getStatus() {"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"        return isDone;"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"     * Checks if task contains a keyword."},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"     * @param keyword Keyword to be searched."},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"     * @return True if task contains the keyword, false otherwise."},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"    public boolean contains(String keyword) {"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"        String[] descriptionArray \u003d this.description.split(\" \");"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"        for (String s : descriptionArray) {"},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"            if (keyword.equals(s)) {"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"                return true;"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"        return false;"},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":78,"author":{"gitId":"candyhy"},"content":"    public String toString() {"},{"lineNumber":79,"author":{"gitId":"candyhy"},"content":"        return getType() + getStatusIcon() + \" \" + description;"},{"lineNumber":80,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":81}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":" * Represents a list of {@code Task}"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"    private final List\u003cTask\u003e lst;"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code Tasklist} object with an empty task list component."},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    public TaskList() {"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"        lst \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"     * Adds a task to the list of tasks."},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"     * @param task Task to be added."},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"    public void addItem(Task task) {"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"        lst.add(task);"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"     * Removes a task from the list of tasks."},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"     * @param id Index of task to be removed."},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"    public void removeItem(int id) {"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"        lst.remove(id);"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"     * Marks a task as done."},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"     * @param id Index of task to be marked as done."},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"    public void doneTask(int id) {"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"        lst.get(id).markAsDone();"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"     * Returns list of tasks."},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"     * @return List of tasks."},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"    public List\u003cTask\u003e getLst() {"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"        return lst;"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"     * Checks if tasks in task list contains the keyword."},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"     * @param keyword Keyword to be searched."},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"     * @return List of Tasks containing the keyword."},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"    public List\u003cTask\u003e tasksContainingKeyword(String keyword) {"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"        List\u003cTask\u003e tasksWithKeyword \u003d new ArrayList\u003c\u003e();"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"        for (Task task : lst) {"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"            if (task.contains(keyword)) {"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"                tasksWithKeyword.add(task);"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"        return tasksWithKeyword;"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"     * Returns size of task list."},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"     * @return Size of task list."},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"    public int size() {"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"        return lst.size();"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":73}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Represents task without time attribute."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"    public Todo(String description) {"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"        super(description, \"[T]\");"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"        return super.toString();"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":16}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import javafx.geometry.Pos;"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import javafx.scene.Node;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":" * Represents a dialogue box with an avatar icon and the text message."},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"public class DialogBox extends HBox {"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"    private DialogBox(Label l, ImageView imageView) {"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"        l.setWrapText(true);"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"        imageView.setFitHeight(100.0);"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"        imageView.setFitWidth(100.0);"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"        this.setAlignment(Pos.TOP_RIGHT);"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"        this.getChildren().addAll(l, imageView);"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"        setSpacing(10.0);"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    private void flip() {"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"        FXCollections.reverse(tmp);"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"     * Creates a user dialogue box with a user message label and an avatar icon."},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"     * @param label User message as Label."},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"     * @param imageView Avatar icon image."},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"     * @return {@code DialogBox} object representing a user command."},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"    public static DialogBox getUserDialog(Label label, ImageView imageView) {"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"        return new DialogBox(label, imageView);"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"     * Creates a duke dialogue box with a duke message label and an avatar icon."},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"     * @param label Duke chat bot message as Label."},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"     * @param imageView Avatar icon image."},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"     * @return {@code DialogBox} object representing a chat bot response."},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"    public static DialogBox getDukeDialog(Label label, ImageView imageView) {"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"        var db \u003d new DialogBox(label, imageView);"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"        db.flip();"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"        return db;"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":56}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import duke.command.ByeCommand;"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import duke.command.Command;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import duke.duke.Duke;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import duke.duke.Main;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import duke.exceptions.InvalidArgumentException;"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import duke.exceptions.InvalidCommandException;"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import duke.parser.Parser;"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"import javafx.application.Platform;"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"import javafx.geometry.Insets;"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"import javafx.scene.Scene;"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"import javafx.scene.control.Button;"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"import javafx.scene.control.Label;"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"import javafx.scene.image.Image;"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"import javafx.scene.text.Font;"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"import javafx.scene.text.FontPosture;"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"import javafx.scene.text.FontWeight;"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":" * The Main Window. Provides the basic application layout."},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"public class MainWindow {"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"    private final ScrollPane scrollPane;"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"    private final VBox dialogContainer;"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"    private final TextField userInput;"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"    private final Button sendButton;"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"    private final Scene scene;"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"    private final AnchorPane mainLayout;"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"    private final Image user;"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"    private final Image duke;"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"     * Creates a {@code MainWindow} object with attributes that constitutes the basic layout of application."},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"    public MainWindow() {"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"        this.user \u003d new Image(this.getClass().getResourceAsStream(\"/images/heartPiglet.png\"));"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"        this.duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/sparklePooh.png\"));"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"        this.mainLayout \u003d new AnchorPane();"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"        this.userInput \u003d new TextField();"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"        this.scrollPane \u003d new ScrollPane();"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"        this.dialogContainer \u003d new VBox();"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"        this.sendButton \u003d new Button(\"Send\");"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"        this.scene \u003d new Scene(mainLayout, Color.LIGHTSTEELBLUE);"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"     * Initialises key components of the user interface."},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"     * @param bot A duke object."},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"    public void initialise(Duke bot) {"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"        setMainLayout();"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"        setUserInput(bot);"},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"        setScrollPane();"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"        setSendButton(bot);"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"        setBackgroundColor();"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"        Label welcomeMessage \u003d new Label(getResponse(Ui.showWelcomeMessage(bot)));"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"        welcomeMessage.setFont(Font.font(\"verdana\", FontWeight.BOLD, FontPosture.REGULAR, 12));"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"        Label line \u003d new Label(\"\\u2500\".repeat(50));"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(welcomeMessage, new ImageView(duke)), line);"},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":76,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":"     * Sets background colour of user interface."},{"lineNumber":78,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"candyhy"},"content":"    public void setBackgroundColor() {"},{"lineNumber":80,"author":{"gitId":"candyhy"},"content":"        dialogContainer.setBackground(new Background(new BackgroundFill(Color.LIGHTSTEELBLUE,"},{"lineNumber":81,"author":{"gitId":"candyhy"},"content":"                CornerRadii.EMPTY, Insets.EMPTY)));"},{"lineNumber":82,"author":{"gitId":"candyhy"},"content":"        scrollPane.setStyle(\"-fx-background: #B0C4DE; -fx-border-color: #B0C4DE;\");"},{"lineNumber":83,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":85,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"candyhy"},"content":"     * Adds ScrollPane, Textfield, Button to main layout."},{"lineNumber":87,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":88,"author":{"gitId":"candyhy"},"content":"    public void setMainLayout() {"},{"lineNumber":89,"author":{"gitId":"candyhy"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"},{"lineNumber":90,"author":{"gitId":"candyhy"},"content":"        mainLayout.setPrefSize(400.0, 600.0);"},{"lineNumber":91,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":92,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":94,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"candyhy"},"content":"     * Sets up scroll pane for user interface."},{"lineNumber":96,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":97,"author":{"gitId":"candyhy"},"content":"    public void setScrollPane() {"},{"lineNumber":98,"author":{"gitId":"candyhy"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":99,"author":{"gitId":"candyhy"},"content":"        scrollPane.setContent(dialogContainer);"},{"lineNumber":100,"author":{"gitId":"candyhy"},"content":"        scrollPane.setPrefSize(385, 535);"},{"lineNumber":101,"author":{"gitId":"candyhy"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":102,"author":{"gitId":"candyhy"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"},{"lineNumber":103,"author":{"gitId":"candyhy"},"content":"        scrollPane.setVvalue(1.0);"},{"lineNumber":104,"author":{"gitId":"candyhy"},"content":"        scrollPane.setFitToWidth(true);"},{"lineNumber":105,"author":{"gitId":"candyhy"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);"},{"lineNumber":106,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":108,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"candyhy"},"content":"     * Sets up Textfield that allows for user input."},{"lineNumber":110,"author":{"gitId":"candyhy"},"content":"     * @param bot A duke object."},{"lineNumber":111,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":112,"author":{"gitId":"candyhy"},"content":"    public void setUserInput(Duke bot) {"},{"lineNumber":113,"author":{"gitId":"candyhy"},"content":"        userInput.setPrefWidth(325.0);"},{"lineNumber":114,"author":{"gitId":"candyhy"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);"},{"lineNumber":115,"author":{"gitId":"candyhy"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);"},{"lineNumber":116,"author":{"gitId":"candyhy"},"content":"        userInput.setOnAction((event) -\u003e handleUserInput(bot));"},{"lineNumber":117,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":119,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":120,"author":{"gitId":"candyhy"},"content":"     * Sets up Button that allows submission of user input."},{"lineNumber":121,"author":{"gitId":"candyhy"},"content":"     * @param bot A duke object."},{"lineNumber":122,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"candyhy"},"content":"    public void setSendButton(Duke bot) {"},{"lineNumber":124,"author":{"gitId":"candyhy"},"content":"        sendButton.setPrefWidth(55.0);"},{"lineNumber":125,"author":{"gitId":"candyhy"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);"},{"lineNumber":126,"author":{"gitId":"candyhy"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);"},{"lineNumber":127,"author":{"gitId":"candyhy"},"content":"        sendButton.setOnMouseClicked((event) -\u003e handleUserInput(bot));"},{"lineNumber":128,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":130,"author":{"gitId":"candyhy"},"content":"    private void handleUserInput(Duke bot) {"},{"lineNumber":131,"author":{"gitId":"candyhy"},"content":"        Label userText \u003d new Label(userInput.getText());"},{"lineNumber":132,"author":{"gitId":"candyhy"},"content":"        Label dukeText \u003d new Label();"},{"lineNumber":133,"author":{"gitId":"candyhy"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":134,"author":{"gitId":"candyhy"},"content":"        String response;"},{"lineNumber":135,"author":{"gitId":"candyhy"},"content":"        Command userCommand;"},{"lineNumber":136,"author":{"gitId":"candyhy"},"content":"        try {"},{"lineNumber":137,"author":{"gitId":"candyhy"},"content":"            userCommand \u003d Parser.processInput(input, bot);"},{"lineNumber":138,"author":{"gitId":"candyhy"},"content":"            response \u003d Main.runUserCommand(userCommand, bot);"},{"lineNumber":139,"author":{"gitId":"candyhy"},"content":"            if (userCommand instanceof ByeCommand) {"},{"lineNumber":140,"author":{"gitId":"candyhy"},"content":"                Platform.exit();"},{"lineNumber":141,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":142,"author":{"gitId":"candyhy"},"content":"        } catch (InvalidCommandException | InvalidArgumentException | IOException ex) {"},{"lineNumber":143,"author":{"gitId":"candyhy"},"content":"            response \u003d ex.getMessage();"},{"lineNumber":144,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":145,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":146,"author":{"gitId":"candyhy"},"content":"        dukeText.setText(response);"},{"lineNumber":147,"author":{"gitId":"candyhy"},"content":"        userText.setFont(Font.font(\"verdana\", FontWeight.BOLD, FontPosture.REGULAR, 12));"},{"lineNumber":148,"author":{"gitId":"candyhy"},"content":"        dukeText.setFont(Font.font(\"verdana\", FontWeight.BOLD, FontPosture.REGULAR, 12));"},{"lineNumber":149,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":150,"author":{"gitId":"candyhy"},"content":"        Label line \u003d new Label(\"\\u2500\".repeat(50));"},{"lineNumber":151,"author":{"gitId":"candyhy"},"content":"        line.setFont(Font.font(\"verdana\", FontWeight.BOLD, FontPosture.REGULAR, 12));"},{"lineNumber":152,"author":{"gitId":"candyhy"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":153,"author":{"gitId":"candyhy"},"content":"                DialogBox.getUserDialog(userText, new ImageView(user)),"},{"lineNumber":154,"author":{"gitId":"candyhy"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(duke)),"},{"lineNumber":155,"author":{"gitId":"candyhy"},"content":"                line"},{"lineNumber":156,"author":{"gitId":"candyhy"},"content":"        );"},{"lineNumber":157,"author":{"gitId":"candyhy"},"content":"        userInput.clear();"},{"lineNumber":158,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":159,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":160,"author":{"gitId":"candyhy"},"content":"    private String getResponse(String input) {"},{"lineNumber":161,"author":{"gitId":"candyhy"},"content":"        return input;"},{"lineNumber":162,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":164,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":165,"author":{"gitId":"candyhy"},"content":"     * Returns scene of application."},{"lineNumber":166,"author":{"gitId":"candyhy"},"content":"     * @return Scene of application."},{"lineNumber":167,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":168,"author":{"gitId":"candyhy"},"content":"    public Scene getScene() {"},{"lineNumber":169,"author":{"gitId":"candyhy"},"content":"        return scene;"},{"lineNumber":170,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":171,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":171}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import duke.duke.Duke;"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import duke.tasks.Task;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":" * Manages the UI component of the application."},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"public class Ui {"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"     * Displays welcome message upon launch of application."},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"     * @param bot A Duke object that manages task list operations."},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    public static String showWelcomeMessage(Duke bot) {"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"        return String.format(\"Hello from%n%s%n\", bot.getLogo())"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"                + \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\";"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"     * Displays response for ListCommand."},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"     * @param list List of task to be printed."},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    public static String showTasksToUser(List\u003cTask\u003e list) {"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"        StringBuilder tasks \u003d new StringBuilder();"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"            tasks.append(String.format(\"%d.%s%n\", i + 1, list.get(i)));"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"        return tasks.toString();"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"     * Displays response for a task type Command."},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"     * @param task The new task added."},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"     * @param list List of tasks."},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"    public static String showAddTaskMessage(Task task, List\u003cTask\u003e list) {"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"        String taskMessage;"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"        taskMessage \u003d \"Got it. I\u0027ve added this task:\\n\" + String.format(\" %s%n\", task)"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"                + String.format(\"Now you have %d tasks in the list.%n\", list.size());"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"        return taskMessage;"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"     * Displays response for DeleteCommand."},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"     * @param task The task to be removed."},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"     * @param list List of tasks."},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"    public static String showRemoveTaskMessage(Task task, List\u003cTask\u003e list) {"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"        return \"Noted. I\u0027ve removed this task:\" + String.format(\" %s%n\", task)"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"                + String.format(\"Now you have %d tasks in the list.%n\", list.size());"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"     * Displays response for DoneCommand."},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"     * @param list List of tasks."},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"     * @param id Index of task to be marked as done."},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"    public static String showDoneTaskMessage(List\u003cTask\u003e list, int id) {"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"        return \"Nice! I\u0027ve marked this task as done:\""},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"                + String.format(\" %s%n\", list.get(id));"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"     * Displays response for ByeCommand."},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"    public static String showExitMessage() {"},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"        return \"Bye. Hope to see you again soon!\";"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":72}},{"path":"src/main/java/duke/utils/DateValidator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.utils;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"public interface DateValidator {"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"    boolean isValid(String date);"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":5}},{"path":"src/main/java/duke/utils/DateValidatorUsingDateFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.utils;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"public class DateValidatorUsingDateFormat implements DateValidator {"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"    private final DateTimeFormatter dateFormatter;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"    public DateValidatorUsingDateFormat(DateTimeFormatter dateFormatter) {"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"        this.dateFormatter \u003d dateFormatter;"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    public boolean isValid(String date) {"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"            LocalDate.parse(date, dateFormatter);"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"            return false;"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"        return true;"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":23}},{"path":"src/test/java/duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class DeadlineTest {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"    public void testIsDone() {"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"        Deadline test \u003d new Deadline(\"test\", \"test\");"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"        Assertions.assertFalse(test.isDone);"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    public void testMarkAsDone() {"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"        Deadline test \u003d new Deadline(\"test\", \"test\");"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"        test.markAsDone();"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"        Assertions.assertTrue(test.isDone);"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    public void testGetStatusIcon() {"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"        Deadline test \u003d new Deadline(\"test\", \"test\");"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"[ ]\", test.getStatusIcon());"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"        test.markAsDone();"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"[X]\", test.getStatusIcon());"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    public void testGetType() {"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"        Deadline test \u003d new Deadline(\"test\", \"test\");"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"[D]\", test.getType());"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    public void testGetDescription() {"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"        Deadline test \u003d new Deadline(\"test\", \"test\");"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"test\", test.getDescription());"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"    public void testGetStatus() {"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"        Deadline test \u003d new Deadline(\"test\", \"test\");"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"        Assertions.assertFalse(test.getStatus());"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"    public void testGetDeadline() {"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"        Deadline test \u003d new Deadline(\"test\", \"test\");"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"test\", test.getDeadline());"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":51}},{"path":"src/test/java/duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class EventTest {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"    public void testIsDone() {"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"        Event test \u003d new Event(\"test\", \"test\");"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"        Assertions.assertFalse(test.isDone);"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    public void testMarkAsDone() {"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"        Event test \u003d new Event(\"test\", \"test\");"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"        test.markAsDone();"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"        Assertions.assertTrue(test.isDone);"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    public void testGetStatusIcon() {"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"        Event test \u003d new Event(\"test\", \"test\");"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"[ ]\", test.getStatusIcon());"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"        test.markAsDone();"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"[X]\", test.getStatusIcon());"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    public void testGetType() {"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"        Event test \u003d new Event(\"test\", \"test\");"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"[E]\", test.getType());"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    public void testGetDescription() {"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"        Event test \u003d new Event(\"test\", \"test\");"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"test\", test.getDescription());"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"    public void testGetStatus() {"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"        Event test \u003d new Event(\"test\", \"test\");"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"        Assertions.assertFalse(test.getStatus());"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"    public void testGetEventTime() {"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"        Event test \u003d new Event(\"test\", \"test\");"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"test\", test.getEventTime());"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":51}},{"path":"src/test/java/duke/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class TodoTest {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"    public void testIsDone() {"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"        Todo test \u003d new Todo(\"test\");"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"        Assertions.assertFalse(test.isDone);"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    public void testMarkAsDone() {"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"        Todo test \u003d new Todo((\"test\"));"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"        test.markAsDone();"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"        Assertions.assertTrue(test.isDone);"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    public void testGetStatusIcon() {"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"        Todo test \u003d new Todo(\"test\");"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"[ ]\", test.getStatusIcon());"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"        test.markAsDone();"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"[X]\", test.getStatusIcon());"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    public void testGetType() {"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"        Todo test \u003d new Todo(\"test\");"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"[T]\", test.getType());"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    public void testGetDescription() {"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"        Todo test \u003d new Todo(\"test\");"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"test\", test.getDescription());"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"    public void testGetStatus() {"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"        Todo test \u003d new Todo(\"test\");"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"        Assertions.assertFalse(test.getStatus());"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":45}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"list"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"list"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"delete 2"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"list"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"blah"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"bye"}],"authorContributionMap":{"candyhy":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"java -classpath ../bin duke.Main \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"candyhy":2,"-":36}}]
