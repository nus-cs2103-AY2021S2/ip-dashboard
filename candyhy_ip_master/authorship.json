[{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import duke.command.ByeCommand;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import duke.command.Command;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import duke.command.DeadlineCommand;"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import duke.command.DoneCommand;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import duke.command.EventCommand;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import duke.command.FindCommand;"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import duke.command.ListCommand;"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import duke.command.TodoCommand;"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"import duke.duke.Duke;"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"import duke.exceptions.InvalidArgumentException;"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"import duke.exceptions.InvalidCommandException;"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"import duke.parser.Parser;"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"import duke.storage.Storage;"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"import duke.tasks.TaskList;"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"import duke.ui.Ui;"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":" * Main entry point to the chat bot application."},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":" * Initialises application and starts user interaction."},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"public class Main {"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    //private final static File f \u003d new File(\"src/main/data/duke.txt\");"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"    private final static File file \u003d new File(\"duke.txt\");"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"     * Entry point of chat bot application."},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"     * @param args Command-line arguments passed into application"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"     * @throws IOException if error occurs while writing to the file"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"    public static void main(String[] args) throws IOException {"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"        runMain();"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"     * Initializes task list from storage and prints welcome greeting."},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"     * @return a Duke object that manages task list operations"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"    public static Duke start() {"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"        Duke bot \u003d null;"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"        try {"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"            if (!(file.createNewFile())) {"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"                TaskList previous \u003d Storage.runFile(file);"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"                bot \u003d new Duke(previous);"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"        } catch (IOException e) {"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"            e.printStackTrace();"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"        if (bot \u003d\u003d null) {"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"            bot \u003d new Duke();"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"        Ui.showWelcomeMessage(bot);"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"        return bot;"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"     * Updates task list based on user command."},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"     * @param userCommand user command"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"     * @param bot a Duke object that manages task list operations"},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"     * @throws IOException if error occurs while writing to the file"},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"candyhy"},"content":"    public static void runUserCommand(Command userCommand, Duke bot) throws IOException {"},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":"        if (userCommand instanceof ListCommand) {"},{"lineNumber":78,"author":{"gitId":"candyhy"},"content":"            bot.showTasks();"},{"lineNumber":79,"author":{"gitId":"candyhy"},"content":"        } else if (userCommand instanceof DoneCommand) {"},{"lineNumber":80,"author":{"gitId":"candyhy"},"content":"            bot.markAsDone(((DoneCommand) userCommand).getTaskNumber());"},{"lineNumber":81,"author":{"gitId":"candyhy"},"content":"            Storage.saveFile(file, bot);"},{"lineNumber":82,"author":{"gitId":"candyhy"},"content":"        } else if (userCommand instanceof TodoCommand) {"},{"lineNumber":83,"author":{"gitId":"candyhy"},"content":"            bot.addTask(((TodoCommand) userCommand).getDescription(),"},{"lineNumber":84,"author":{"gitId":"candyhy"},"content":"                    userCommand.getCommand(), null);"},{"lineNumber":85,"author":{"gitId":"candyhy"},"content":"            Storage.saveFile(file, bot);"},{"lineNumber":86,"author":{"gitId":"candyhy"},"content":"        } else if (userCommand instanceof DeadlineCommand) {"},{"lineNumber":87,"author":{"gitId":"candyhy"},"content":"            bot.addTask(((DeadlineCommand) userCommand).getDescription(), userCommand.getCommand(),"},{"lineNumber":88,"author":{"gitId":"candyhy"},"content":"                    ((DeadlineCommand) userCommand).getDeadline());"},{"lineNumber":89,"author":{"gitId":"candyhy"},"content":"            Storage.saveFile(file, bot);"},{"lineNumber":90,"author":{"gitId":"candyhy"},"content":"        } else if (userCommand instanceof EventCommand) {"},{"lineNumber":91,"author":{"gitId":"candyhy"},"content":"            bot.addTask(((EventCommand) userCommand).getDescription(), userCommand.getCommand(),"},{"lineNumber":92,"author":{"gitId":"candyhy"},"content":"                    ((EventCommand) userCommand).getEventTime());"},{"lineNumber":93,"author":{"gitId":"candyhy"},"content":"            Storage.saveFile(file, bot);"},{"lineNumber":94,"author":{"gitId":"candyhy"},"content":"        } else if (userCommand instanceof DeleteCommand) {"},{"lineNumber":95,"author":{"gitId":"candyhy"},"content":"            bot.removeTask(((DeleteCommand) userCommand).getTaskNumber());"},{"lineNumber":96,"author":{"gitId":"candyhy"},"content":"            Storage.saveFile(file, bot);"},{"lineNumber":97,"author":{"gitId":"candyhy"},"content":"        } else if(userCommand instanceof FindCommand) {"},{"lineNumber":98,"author":{"gitId":"candyhy"},"content":"            bot.showTasksContainingKeyword(((FindCommand) userCommand).getKeyword());"},{"lineNumber":99,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":100,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":101,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":102,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":103,"author":{"gitId":"candyhy"},"content":"     * Runs application until user inputs exit command."},{"lineNumber":104,"author":{"gitId":"candyhy"},"content":"     * @throws IOException if user input is invalid"},{"lineNumber":105,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"candyhy"},"content":"    public static void runMain() throws IOException {"},{"lineNumber":107,"author":{"gitId":"candyhy"},"content":"        Duke bot \u003d start();"},{"lineNumber":108,"author":{"gitId":"candyhy"},"content":"        int count \u003d 0;"},{"lineNumber":109,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":110,"author":{"gitId":"candyhy"},"content":"        while (true) {"},{"lineNumber":111,"author":{"gitId":"candyhy"},"content":"            Command userCommand;"},{"lineNumber":112,"author":{"gitId":"candyhy"},"content":"            if (count \u003e 0) {"},{"lineNumber":113,"author":{"gitId":"candyhy"},"content":"                Ui.askForUserRequest();"},{"lineNumber":114,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"candyhy"},"content":"            String string \u003d Ui.readUserInput();"},{"lineNumber":116,"author":{"gitId":"candyhy"},"content":"            try {"},{"lineNumber":117,"author":{"gitId":"candyhy"},"content":"                userCommand \u003d Parser.processInput(string, bot);"},{"lineNumber":118,"author":{"gitId":"candyhy"},"content":"            } catch (InvalidCommandException | InvalidArgumentException ex) {"},{"lineNumber":119,"author":{"gitId":"candyhy"},"content":"                Ui.print(ex.getMessage());"},{"lineNumber":120,"author":{"gitId":"candyhy"},"content":"                continue;"},{"lineNumber":121,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":123,"author":{"gitId":"candyhy"},"content":"            if (!(userCommand instanceof ByeCommand)) {"},{"lineNumber":124,"author":{"gitId":"candyhy"},"content":"                runUserCommand(userCommand, bot);"},{"lineNumber":125,"author":{"gitId":"candyhy"},"content":"            } else {"},{"lineNumber":126,"author":{"gitId":"candyhy"},"content":"                exit();"},{"lineNumber":127,"author":{"gitId":"candyhy"},"content":"                break;"},{"lineNumber":128,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":129,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":130,"author":{"gitId":"candyhy"},"content":"            count++;"},{"lineNumber":131,"author":{"gitId":"candyhy"},"content":"            Ui.printEmptyLine();"},{"lineNumber":132,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":135,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":136,"author":{"gitId":"candyhy"},"content":"     * Prints exit message."},{"lineNumber":137,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":138,"author":{"gitId":"candyhy"},"content":"    public static void exit() {"},{"lineNumber":139,"author":{"gitId":"candyhy"},"content":"        Ui.showExitMessage();"},{"lineNumber":140,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":141}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Exits the application."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class ByeCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"    public ByeCommand() {"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"        super(\"bye\");"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":11}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Represents a user command."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public abstract class Command {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    protected final String command;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    public Command(String command) {"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"        this.command \u003d command;"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    public String getCommand() {"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"        return this.command;"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":16}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Creates a Deadline task."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    private final String description;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"    private final String deadline;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"    public DeadlineCommand(String description, String deadline) {"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"        super(\"deadline\");"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"        this.description \u003d description;"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"     * Returns description of deadline task."},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"     * @return deadline task description"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    public String getDescription() {"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"        return description;"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"     * Returns deadline of task."},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"     * @return task deadline"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    public String getDeadline() {"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"        return deadline;"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":31}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Deletes a task."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    private final String taskNumber;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    public DeleteCommand(String taskNumber) {"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"        super(\"delete\");"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"        this.taskNumber \u003d taskNumber;"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"     * Returns index of task to be deleted."},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"     * @return task index"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    public String getTaskNumber() {"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"        return taskNumber;"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":21}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Completes a task."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class DoneCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    private final String taskNumber;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    public DoneCommand(String taskNumber) {"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"        super(\"done\");"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"        this.taskNumber \u003d taskNumber;"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"     * Returns index of task to be marked as done."},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"     * @return task index"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    public String getTaskNumber() {"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"        return taskNumber;"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":21}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Creates an Event task."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class EventCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    private final String description;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"    private final String eventTime;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"    public EventCommand(String description, String eventTime) {"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"        super(\"event\");"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"        this.description \u003d description;"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"     * Returns description of event task."},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"     * @return description of event task"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    public String getDescription() {"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"        return description;"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"     * Returns event time of task."},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"     * @return event time of task"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    public String getEventTime() {"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"        return eventTime;"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":31}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"public class FindCommand extends Command{"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"    public String keyword;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"    public FindCommand(String keyword) {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"        super(\"find\");"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"    public String getKeyword() {"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"        return keyword;"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":14}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Lists the current tasks."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class ListCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"    public ListCommand() {"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"        super(\"list\");"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":11}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Creates a Todo task."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class TodoCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    private final String description;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    public TodoCommand(String description) {"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"        super(\"todo\");"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"        this.description \u003d description;"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"     * Returns description of Todo task."},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"     * @return description of Todo task"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    public String getDescription() {"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"        return description;"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":21}},{"path":"src/main/java/duke/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.duke;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import duke.tasks.Deadline;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import duke.tasks.Event;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import duke.tasks.Task;"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import duke.tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import duke.tasks.Todo;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import duke.ui.Ui;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":" * A chat bot manager for handling task list operations."},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\""},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    private final TaskList list;"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    public Duke() {"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"        this.list \u003d new TaskList();"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    public Duke(TaskList list) {"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"        this.list \u003d list;"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"     * Adds a new task to list of tasks."},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"     * @param message task description"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"     * @param type identifier of task type"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"     * @param date time of task"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"    public void addTask(String message, String type, String date) {"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"        Task task \u003d null;"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"        switch (type) {"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"        case \"todo\":"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"            task \u003d new Todo(message);"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"            break;"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"        case \"deadline\":"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"            task \u003d new Deadline(message, date);"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"            break;"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"        case \"event\":"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"            task \u003d new Event(message, date);"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"            break;"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"        list.addItem(task);"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"        Ui.showAddTaskMessage(task, list.getLst());"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"     * Removes a task from list of tasks."},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"     * @param id index of task to be removed"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"    public void removeTask(String id) {"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"        int n \u003d Integer.parseInt(id) - 1;"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"        Task task \u003d list.getLst().get(n);"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"        list.removeItem(n);"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"        Ui.showRemoveTaskMessage(task, list.getLst());"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"     * Marks a task as done."},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"     * @param id index of task to be marked as done"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"    public void markAsDone(String id) {"},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"        int n \u003d Integer.parseInt(id) - 1;"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"        list.doneTask(n);"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"        Ui.showDoneTaskMessage(list.getLst(), n);"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":76,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":"     * Shows user list of current tasks."},{"lineNumber":78,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":79,"author":{"gitId":"candyhy"},"content":"    public void showTasks() {"},{"lineNumber":80,"author":{"gitId":"candyhy"},"content":"        Ui.showTasksToUser(list.getLst());"},{"lineNumber":81,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":83,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"candyhy"},"content":"     * Returns task list."},{"lineNumber":85,"author":{"gitId":"candyhy"},"content":"     * @return task list"},{"lineNumber":86,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"candyhy"},"content":"    public TaskList getList() {"},{"lineNumber":88,"author":{"gitId":"candyhy"},"content":"        return list;"},{"lineNumber":89,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":91,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":92,"author":{"gitId":"candyhy"},"content":"     * Returns logo of chat bot."},{"lineNumber":93,"author":{"gitId":"candyhy"},"content":"     * @return logo of chat bot"},{"lineNumber":94,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":95,"author":{"gitId":"candyhy"},"content":"    public String getLogo() {"},{"lineNumber":96,"author":{"gitId":"candyhy"},"content":"        return LOGO;"},{"lineNumber":97,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":99,"author":{"gitId":"candyhy"},"content":"    public int getNumberOfTasks() {"},{"lineNumber":100,"author":{"gitId":"candyhy"},"content":"        return list.size();"},{"lineNumber":101,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":103,"author":{"gitId":"candyhy"},"content":"    public void showTasksContainingKeyword(String keyword) {"},{"lineNumber":104,"author":{"gitId":"candyhy"},"content":"        Ui.showTasksToUser(list.tasksContainingKeyword(keyword));"},{"lineNumber":105,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":107,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"candyhy":100,"-":7}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Signals errors related to Duke chat bot."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    public DukeException(String errorMessage) {"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"        super(errorMessage);"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":10}},{"path":"src/main/java/duke/exceptions/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Signals an invalid user argument."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class InvalidArgumentException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    public InvalidArgumentException(String errorMessage) {"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"        super(errorMessage);"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":10}},{"path":"src/main/java/duke/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.exceptions;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Signals an invalid user command."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class InvalidCommandException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    public InvalidCommandException(String errorMessage) {"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"        super(errorMessage);"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.parser;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import duke.command.ByeCommand;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import duke.command.Command;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import duke.command.DeadlineCommand;"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import duke.command.DoneCommand;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import duke.command.EventCommand;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import duke.command.FindCommand;"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import duke.command.ListCommand;"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import duke.command.TodoCommand;"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"import duke.duke.Duke;"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"import duke.exceptions.InvalidArgumentException;"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"import duke.exceptions.InvalidCommandException;"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"import duke.utils.DateValidator;"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"import duke.utils.DateValidatorUsingDateFormat;"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"import java.time.LocalDate;"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":" * Parses user input."},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"public class Parser {"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"     * Parses user input into a command."},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"     * @param userInput user input string"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"     * @param bot a Duke object that manages task list operations"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"     * @return user command"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"     * @throws InvalidCommandException if user input is an unrecognised command"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"     * @throws InvalidArgumentException if argument is missing from user input"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"    public static Command processInput(String userInput, Duke bot) throws InvalidCommandException,"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"            InvalidArgumentException {"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"        String[] userInputArray \u003d userInput.split(\" \", 2);"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"        Command userCommand \u003d null;"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"        if (userInputArray.length \u003d\u003d 1) {"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"            if (!(userInputArray[0].equals(\"bye\") || userInputArray[0].equals(\"list\"))) {"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"                if (userInputArray[0].equals(\"todo\") || userInputArray[0].equals(\"done\")"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"                        || userInputArray[0].equals(\"deadline\") || userInputArray[0].equals(\"event\")"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"                        || userInputArray[0].equals(\"delete\")) {"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"                    throw new InvalidCommandException(\"OOPS!!! \" + \"The description of a \""},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"                            + userInputArray[0] + \" cannot be empty.\\n\");"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"                } else {"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"                    throw new InvalidCommandException(\"OOPS!!! \""},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"                            + \"I\u0027m sorry, but I don\u0027t know what that means :-()\\n\");"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"            if (userInputArray[0].equals(\"bye\")) {"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"                userCommand \u003d new ByeCommand();"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"            } else {"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"                userCommand \u003d new ListCommand();"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"        } else {"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"            switch (userInputArray[0]) {"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"            case \"done\":"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"                try {"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"                    Integer.parseInt(userInputArray[1]);"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"                } catch (NumberFormatException ex) {"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"                    throw new InvalidArgumentException(\"Invalid command! \""},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"                            + \"Please input task number using \u0027delete (number)\u0027.\\n\");"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"                if (Integer.parseInt(userInputArray[1]) \u003e bot.getNumberOfTasks()) {"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"                    throw new InvalidArgumentException(\"Please input argument \u003c\u003d to \""},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"                            + bot.getNumberOfTasks() + \"!\\n\");"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"                userCommand \u003d new DoneCommand(userInputArray[1]);"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"                break;"},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"            case \"delete\":"},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":"                try {"},{"lineNumber":76,"author":{"gitId":"candyhy"},"content":"                    Integer.parseInt(userInputArray[1]);"},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":"                } catch (NumberFormatException ex) {"},{"lineNumber":78,"author":{"gitId":"candyhy"},"content":"                    throw new InvalidArgumentException(\"Invalid command! \""},{"lineNumber":79,"author":{"gitId":"candyhy"},"content":"                            + \"Please input task number using \u0027delete (number)\u0027.\\n\");"},{"lineNumber":80,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":81,"author":{"gitId":"candyhy"},"content":"                if (Integer.parseInt(userInputArray[1]) \u003e bot.getNumberOfTasks()) {"},{"lineNumber":82,"author":{"gitId":"candyhy"},"content":"                    throw new InvalidArgumentException(\"Please input argument \u003c\u003d to \""},{"lineNumber":83,"author":{"gitId":"candyhy"},"content":"                            + bot.getList().getLst().size() + \"!\\n\");"},{"lineNumber":84,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":85,"author":{"gitId":"candyhy"},"content":"                userCommand \u003d new DeleteCommand(userInputArray[1]);"},{"lineNumber":86,"author":{"gitId":"candyhy"},"content":"                break;"},{"lineNumber":87,"author":{"gitId":"candyhy"},"content":"            case \"todo\":"},{"lineNumber":88,"author":{"gitId":"candyhy"},"content":"                userCommand \u003d new TodoCommand(userInputArray[1]);"},{"lineNumber":89,"author":{"gitId":"candyhy"},"content":"                break;"},{"lineNumber":90,"author":{"gitId":"candyhy"},"content":"            case \"deadline\":"},{"lineNumber":91,"author":{"gitId":"candyhy"},"content":"                String[] arr \u003d userInputArray[1].split(\"/by\");"},{"lineNumber":92,"author":{"gitId":"candyhy"},"content":"                if (arr.length \u003d\u003d 1) {"},{"lineNumber":93,"author":{"gitId":"candyhy"},"content":"                    throw new InvalidArgumentException(\"Please input task due date using \u0027/by (date)\u0027!\\n\");"},{"lineNumber":94,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":95,"author":{"gitId":"candyhy"},"content":"                String[] str \u003d arr[0].split(\" \", 2);"},{"lineNumber":96,"author":{"gitId":"candyhy"},"content":"                if (str.length \u003d\u003d 1) {"},{"lineNumber":97,"author":{"gitId":"candyhy"},"content":"                    throw new InvalidArgumentException(\"Please input task description!\\n\");"},{"lineNumber":98,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":99,"author":{"gitId":"candyhy"},"content":"                String deadLine \u003d arr[1].strip();"},{"lineNumber":100,"author":{"gitId":"candyhy"},"content":"                userCommand \u003d new DeadlineCommand(arr[0], processDate(deadLine));"},{"lineNumber":101,"author":{"gitId":"candyhy"},"content":"                break;"},{"lineNumber":102,"author":{"gitId":"candyhy"},"content":"            case \"event\":"},{"lineNumber":103,"author":{"gitId":"candyhy"},"content":"                String[] a \u003d userInputArray[1].split(\"/at\");"},{"lineNumber":104,"author":{"gitId":"candyhy"},"content":"                if (a.length \u003d\u003d 1) {"},{"lineNumber":105,"author":{"gitId":"candyhy"},"content":"                    throw new InvalidArgumentException(\"Please input task due date using \u0027/at (date)\u0027!\\n\");"},{"lineNumber":106,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":107,"author":{"gitId":"candyhy"},"content":"                String[] s \u003d a[0].split(\" \", 2);"},{"lineNumber":108,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":109,"author":{"gitId":"candyhy"},"content":"                if(s.length \u003d\u003d 1) {"},{"lineNumber":110,"author":{"gitId":"candyhy"},"content":"                    throw new InvalidArgumentException(\"Please input task description!\\n\");"},{"lineNumber":111,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":112,"author":{"gitId":"candyhy"},"content":"                String eventTime \u003d a[1].strip();"},{"lineNumber":113,"author":{"gitId":"candyhy"},"content":"                userCommand \u003d new EventCommand(a[0], processDate(eventTime));"},{"lineNumber":114,"author":{"gitId":"candyhy"},"content":"                break;"},{"lineNumber":115,"author":{"gitId":"candyhy"},"content":"            case \"find\":"},{"lineNumber":116,"author":{"gitId":"candyhy"},"content":"                userCommand \u003d new FindCommand(userInputArray[1]);"},{"lineNumber":117,"author":{"gitId":"candyhy"},"content":"                break;"},{"lineNumber":118,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":119,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"candyhy"},"content":"        return userCommand;"},{"lineNumber":121,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":123,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":124,"author":{"gitId":"candyhy"},"content":"     * Parses user input date in \"yyyy-mm-dd\" or \"yyyy-mm-dd HHHH\" form as formatted string."},{"lineNumber":125,"author":{"gitId":"candyhy"},"content":"     * @param date user input date"},{"lineNumber":126,"author":{"gitId":"candyhy"},"content":"     * @return user input date in the format \"dd/mm/yyyy HHHH\""},{"lineNumber":127,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":128,"author":{"gitId":"candyhy"},"content":"    public static String processDate(String date) {"},{"lineNumber":129,"author":{"gitId":"candyhy"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d HHmm\");"},{"lineNumber":130,"author":{"gitId":"candyhy"},"content":"        DateValidator dateTimeValidator \u003d new DateValidatorUsingDateFormat(dateTimeFormatter);"},{"lineNumber":131,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":132,"author":{"gitId":"candyhy"},"content":"        if (!dateTimeValidator.isValid(date)) {"},{"lineNumber":133,"author":{"gitId":"candyhy"},"content":"            DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d\");"},{"lineNumber":134,"author":{"gitId":"candyhy"},"content":"            DateValidator dateValidator \u003d new DateValidatorUsingDateFormat(dateFormatter);"},{"lineNumber":135,"author":{"gitId":"candyhy"},"content":"            if (!dateValidator.isValid(date)) {"},{"lineNumber":136,"author":{"gitId":"candyhy"},"content":"                return date;"},{"lineNumber":137,"author":{"gitId":"candyhy"},"content":"            } else {"},{"lineNumber":138,"author":{"gitId":"candyhy"},"content":"                LocalDate d1 \u003d LocalDate.parse(date);"},{"lineNumber":139,"author":{"gitId":"candyhy"},"content":"                String day \u003d d1.getDayOfWeek().toString();"},{"lineNumber":140,"author":{"gitId":"candyhy"},"content":"                String month \u003d d1.getMonth().toString();"},{"lineNumber":141,"author":{"gitId":"candyhy"},"content":"                int year \u003d d1.getYear();"},{"lineNumber":142,"author":{"gitId":"candyhy"},"content":"                return String.format(\"%s %s %d\", day, month, year);"},{"lineNumber":143,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":144,"author":{"gitId":"candyhy"},"content":"        } else {"},{"lineNumber":145,"author":{"gitId":"candyhy"},"content":"            String[] deadLineArray \u003d date.split(\" \");"},{"lineNumber":146,"author":{"gitId":"candyhy"},"content":"            LocalDate d1 \u003d LocalDate.parse(deadLineArray[0]);"},{"lineNumber":147,"author":{"gitId":"candyhy"},"content":"            String day \u003d d1.getDayOfWeek().toString();"},{"lineNumber":148,"author":{"gitId":"candyhy"},"content":"            String month \u003d d1.getMonth().toString();"},{"lineNumber":149,"author":{"gitId":"candyhy"},"content":"            int year \u003d d1.getYear();"},{"lineNumber":150,"author":{"gitId":"candyhy"},"content":"            return String.format(\"%s %s %d %s\", day, month, year, deadLineArray[1]);"},{"lineNumber":151,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":152,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":153}},{"path":"src/main/java/duke/storage/FileReading.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import duke.tasks.Deadline;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import duke.tasks.Event;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import duke.tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import duke.tasks.Todo;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import java.io.BufferedReader;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import java.io.FileReader;"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"public class FileReading {"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"     * Retrieves and loads list of task stored into task list."},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"     * @param file the file that task information retrieved from"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"     * @return task retrieved task list"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"     * @throws IOException"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    public static TaskList loadTask(File file) throws IOException {"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"        FileReader fr \u003d new FileReader(file);"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"        BufferedReader bufferedReader \u003d new BufferedReader(fr);"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"        String input \u003d bufferedReader.readLine();"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"        while (input !\u003d null) {"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"            String[] starr \u003d input.split(\"\\\\s\\\\|\\\\s\");"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"            if (starr.length \u003d\u003d 3) {"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"                Todo curr \u003d new Todo(starr[2]);"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"                if (starr[1].equals(\"1\")) {"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"                    curr.markAsDone();"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"                taskList.addItem(curr);"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"            } else {"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"                if (starr[0].equals(\"D\")) {"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"                    Deadline curr \u003d new Deadline(starr[2], starr[3]);"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"                    if (starr[1].equals(\"1\")) {"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"                        curr.markAsDone();"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"                    }"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"                    taskList.addItem(curr);"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"                } else if (starr[0].equals(\"E\")) {"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"                    Event curr \u003d new Event(starr[2], starr[3]);"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"                    if (starr[1].equals(\"1\")) {"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"                        curr.markAsDone();"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"                    }"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"                    taskList.addItem(curr);"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"            input \u003d bufferedReader.readLine();"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"        return taskList;"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":54}},{"path":"src/main/java/duke/storage/FileWriting.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import duke.duke.Duke;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import duke.tasks.Deadline;"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import duke.tasks.Event;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import duke.tasks.Task;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import duke.tasks.Todo;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import java.io.FileWriter;"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"import java.util.List;"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":" * Used to write to a file."},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"public class FileWriting {"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"     * Saves list of tasks by writing into the file whenever a command updates the task list."},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"     * @param file the file that is written to"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"     * @param duke a Duke object that manages task list operations"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"     * @throws IOException if error occurs while writing to the file"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"    public static void writeToFile(File file, Duke duke) throws IOException {"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"        FileWriter fw \u003d new FileWriter(file);"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"        List\u003cTask\u003e taskList \u003d duke.getList().getLst();"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"        StringBuilder textToAdd \u003d new StringBuilder();"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"        for (Task curr : taskList) {"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"            if (curr.getStatus()) {"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"                if (curr instanceof Todo) {"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"                    textToAdd.append(String.format(\"T | 1 | %s%n\", curr.getDescription()));"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"                } else if (curr instanceof Deadline) {"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"                    textToAdd.append(String.format(\"D | 1 | %s | %s%n\", curr.getDescription(),"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"                            ((Deadline) curr).getDeadline()));"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"                } else if (curr instanceof Event) {"},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"                    textToAdd.append(String.format(\"E | 1 | %s | %s%n\", curr.getDescription(),"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"                            ((Event) curr).getEventTime()));"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"            } else {"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"                if (curr instanceof Todo) {"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"                    textToAdd.append(String.format(\"T | 0 | %s%n\", curr.getDescription()));"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"                } else if (curr instanceof Deadline) {"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"                    textToAdd.append(String.format(\"D | 0 | %s | %s%n\", curr.getDescription(),"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"                            ((Deadline) curr).getDeadline()));"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"                } else if (curr instanceof Event) {"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"                    textToAdd.append(String.format(\"E | 0 | %s | %s%n\", curr.getDescription(),"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"                            ((Event) curr).getEventTime()));"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"                }"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"        fw.write(textToAdd.toString());"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"        fw.close();"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":59}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.storage;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import duke.duke.Duke;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import duke.tasks.TaskList;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":" * Used to read and write to a file."},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"public class Storage {"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"     * Retrieves and loads list of task stored into task list."},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"     * @param file the file that task information retrieved from"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"     * @return task retrieved task list"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"     * @throws IOException"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    public static TaskList runFile(File file) throws IOException {"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"        return FileReading.loadTask(file);"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"     * Saves list of tasks by writing into the file whenever a command updates the task list."},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"     * @param file the file that is written to"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"     * @param duke a Duke object that manages task list operations"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"     * @throws IOException if error occurs while writing to the file"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"    public static void saveFile(File file, Duke duke) throws IOException {"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"        FileWriting.writeToFile(file, duke);"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":33}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Represents task with a deadline."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    private final String deadline;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    public Deadline(String description, String deadline) {"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"        super(description, \"[D]\");"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"     * Returns deadline of task."},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"     * @return task deadline"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    public String getDeadline() {"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"        return deadline;"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"        String str \u003d deadline.strip();"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"        return super.toString() + \"(by: \" + str + \")\";"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":27}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Represents a task with an event time."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    private final String eventTime;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    public Event(String description, String eventTime) {"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"        super(description, \"[E]\");"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"     * Returns time of the event."},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"     * @return event time"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    public String getEventTime() {"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"        return eventTime;"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"        String str \u003d eventTime.strip();"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"        return super.toString() + \"(at: \" + str + \")\";"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":27}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Represents a task."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public abstract class Task {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    protected final String description;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"    protected final String type;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"    protected boolean isDone;"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"    public Task(String description, String type) {"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"        this.description \u003d description;"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"        this.type \u003d type;"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"        isDone \u003d false;"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"     * Marks task as done."},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    public void markAsDone() {"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"        isDone \u003d true;"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"     * Gets task status icon."},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"     * @return task status icon"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    public String getStatusIcon() {"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"        return isDone ? \"[X]\" : \"[ ]\";"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"     * Returns identifier of type of task."},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"     * @return identifier of task type"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"    public String getType() {"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"        return type;"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"     * Returns description of task."},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"     * @return task description"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"    public String getDescription() {"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"        return description;"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"     * Checks if task is completed."},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"     * @return true if task is completed, false otherwise"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"    public boolean getStatus() {"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"        return isDone;"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"    public boolean contains(String keyword) {"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"        String[] descriptionArray \u003d this.description.split(\" \");"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"        for (String s : descriptionArray) {"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"            if (keyword.equals(s)) {"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"                return true;"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"        return false;"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"    public String toString() {"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"        return getType() + getStatusIcon() + \" \" + description;"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":70}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":" * Represents a list of {@code Task}"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"    private final List\u003cTask\u003e lst;"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"    public TaskList() {"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"        lst \u003d new ArrayList\u003c\u003e();"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"     * Adds a task to the list of tasks."},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"     * @param task task to be added"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    public void addItem(Task task) {"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"        lst.add(task);"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"     * Removes a task from the list of tasks."},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"     * @param id index of task to be removed"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    public void removeItem(int id) {"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"        lst.remove(id);"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"     * Marks a task as done."},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"     * @param id index of task to be marked as done"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"    public void doneTask(int id) {"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"        lst.get(id).markAsDone();"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"     * Returns list of tasks."},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"     * @return list of tasks"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"    public List\u003cTask\u003e getLst() {"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"        return lst;"},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"    public List\u003cTask\u003e tasksContainingKeyword(String keyword) {"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"        List\u003cTask\u003e tasksWithKeyword \u003d new ArrayList\u003c\u003e();"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"        for (Task task : lst) {"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"            if (task.contains(keyword)) {"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"                tasksWithKeyword.add(task);"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"        return  tasksWithKeyword;"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"    public int size() {"},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"        return lst.size();"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":61}},{"path":"src/main/java/duke/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":" * Represents task without time attribute."},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"    public Todo(String description) {"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"        super(description, \"[T]\");"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"        return super.toString();"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":16}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.ui;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import duke.duke.Duke;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import duke.tasks.Task;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"import java.io.BufferedReader;"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"import java.io.BufferedWriter;"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"import java.io.InputStreamReader;"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"import java.io.OutputStreamWriter;"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"import java.io.PrintWriter;"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":" * Handles input/output of the application."},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":" * Acquires user input and prints messages to the console."},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":" */"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"public class Ui {"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"    public static final BufferedReader IN \u003d new BufferedReader(new InputStreamReader(System.in));"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    public static final PrintWriter OUT \u003d new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"     * Prints welcome message."},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"     * @param bot a Duke object that manages task list operations"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    public static void showWelcomeMessage(Duke bot) {"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":"        OUT.printf(\"Hello from%n%s%n\", bot.getLogo());"},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"        OUT.println(\"Hello! I\u0027m Duke\");"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"        OUT.println(\"What can I do for you?\");"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"        for (int i \u003d 0; i \u003c 50; i++) {"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"            OUT.print(\u0027\\u2500\u0027);"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"        OUT.println();"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"        OUT.flush();"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":"     * Prints message that requests for user input."},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"    public static void askForUserRequest() {"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"        OUT.println(\"Anything else?\");"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"        OUT.flush();"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"     * Prints list of task for the user."},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"     * @param list list of task to be printed"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"    public static void showTasksToUser(List\u003cTask\u003e list) {"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {"},{"lineNumber":52,"author":{"gitId":"candyhy"},"content":"            OUT.printf(\"%d.%s%n\", i + 1, list.get(i));"},{"lineNumber":53,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"candyhy"},"content":"        OUT.flush();"},{"lineNumber":55,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":57,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"candyhy"},"content":"     * Prints an empty line."},{"lineNumber":59,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"candyhy"},"content":"    public static void printEmptyLine() {"},{"lineNumber":61,"author":{"gitId":"candyhy"},"content":"        OUT.println();"},{"lineNumber":62,"author":{"gitId":"candyhy"},"content":"        OUT.flush();"},{"lineNumber":63,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":65,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"candyhy"},"content":"     * Prints message when a new task is added."},{"lineNumber":67,"author":{"gitId":"candyhy"},"content":"     * @param task the new task added"},{"lineNumber":68,"author":{"gitId":"candyhy"},"content":"     * @param list list of tasks"},{"lineNumber":69,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"candyhy"},"content":"    public static void showAddTaskMessage(Task task, List\u003cTask\u003e list) {"},{"lineNumber":71,"author":{"gitId":"candyhy"},"content":"        OUT.println(\"Got it. I\u0027ve added this task:\");"},{"lineNumber":72,"author":{"gitId":"candyhy"},"content":"        OUT.printf(\" %s%n\", task);"},{"lineNumber":73,"author":{"gitId":"candyhy"},"content":"        OUT.printf(\"Now you have %d tasks in the list.%n\", list.size());"},{"lineNumber":74,"author":{"gitId":"candyhy"},"content":"        OUT.flush();"},{"lineNumber":75,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":77,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":78,"author":{"gitId":"candyhy"},"content":"     * Prints message when a task is removed."},{"lineNumber":79,"author":{"gitId":"candyhy"},"content":"     * @param task the task to be removed"},{"lineNumber":80,"author":{"gitId":"candyhy"},"content":"     * @param list list of tasks"},{"lineNumber":81,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"candyhy"},"content":"    public static void showRemoveTaskMessage(Task task, List\u003cTask\u003e list) {"},{"lineNumber":83,"author":{"gitId":"candyhy"},"content":"        OUT.println(\"Noted. I\u0027ve removed this task:\");"},{"lineNumber":84,"author":{"gitId":"candyhy"},"content":"        OUT.printf(\" %s%n\", task);"},{"lineNumber":85,"author":{"gitId":"candyhy"},"content":"        OUT.printf(\"Now you have %d tasks in the list.%n\", list.size());"},{"lineNumber":86,"author":{"gitId":"candyhy"},"content":"        OUT.flush();"},{"lineNumber":87,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":88,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":89,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":90,"author":{"gitId":"candyhy"},"content":"     * Prints message when task is marked as done."},{"lineNumber":91,"author":{"gitId":"candyhy"},"content":"     * @param list list of tasks"},{"lineNumber":92,"author":{"gitId":"candyhy"},"content":"     * @param id index of task to be marked as done"},{"lineNumber":93,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"candyhy"},"content":"    public static void showDoneTaskMessage(List\u003cTask\u003e list, int id) {"},{"lineNumber":95,"author":{"gitId":"candyhy"},"content":"        OUT.println(\"Nice! I\u0027ve marked this task as done:\");"},{"lineNumber":96,"author":{"gitId":"candyhy"},"content":"        OUT.printf(\" %s%n\", list.get(id));"},{"lineNumber":97,"author":{"gitId":"candyhy"},"content":"        OUT.flush();"},{"lineNumber":98,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":100,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"candyhy"},"content":"     * Prints message upon exit of the application"},{"lineNumber":102,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"candyhy"},"content":"    public static void showExitMessage() {"},{"lineNumber":104,"author":{"gitId":"candyhy"},"content":"        OUT.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":105,"author":{"gitId":"candyhy"},"content":"        OUT.flush();"},{"lineNumber":106,"author":{"gitId":"candyhy"},"content":"        OUT.close();"},{"lineNumber":107,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":109,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":110,"author":{"gitId":"candyhy"},"content":"     * Prints a message to the console."},{"lineNumber":111,"author":{"gitId":"candyhy"},"content":"     * @param message message to be shown to the user"},{"lineNumber":112,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":113,"author":{"gitId":"candyhy"},"content":"    public static void print(String message) {"},{"lineNumber":114,"author":{"gitId":"candyhy"},"content":"        OUT.println(message);"},{"lineNumber":115,"author":{"gitId":"candyhy"},"content":"        OUT.flush();"},{"lineNumber":116,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":118,"author":{"gitId":"candyhy"},"content":"    /**"},{"lineNumber":119,"author":{"gitId":"candyhy"},"content":"     * Reads the user input."},{"lineNumber":120,"author":{"gitId":"candyhy"},"content":"     * @return user input as string"},{"lineNumber":121,"author":{"gitId":"candyhy"},"content":"     * @throws IOException if an IO error occurs"},{"lineNumber":122,"author":{"gitId":"candyhy"},"content":"     */"},{"lineNumber":123,"author":{"gitId":"candyhy"},"content":"    public static String readUserInput() throws IOException {"},{"lineNumber":124,"author":{"gitId":"candyhy"},"content":"        return IN.readLine();"},{"lineNumber":125,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":126,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":126}},{"path":"src/main/java/duke/utils/DateValidator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.utils;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"public interface DateValidator {"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"    boolean isValid(String date);"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":5}},{"path":"src/main/java/duke/utils/DateValidatorUsingDateFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.utils;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"public class DateValidatorUsingDateFormat implements DateValidator {"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"    private final DateTimeFormatter dateFormatter;"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"    public DateValidatorUsingDateFormat(DateTimeFormatter dateFormatter) {"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"        this.dateFormatter \u003d dateFormatter;"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"    public boolean isValid(String date) {"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"            LocalDate.parse(date, dateFormatter);"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":"            return false;"},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"        return true;"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":23}},{"path":"src/test/java/duke/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class DeadlineTest {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"    public void testIsDone() {"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"        Deadline test \u003d new Deadline(\"test\", \"test\");"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"        Assertions.assertFalse(test.isDone);"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    public void testMarkAsDone() {"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"        Deadline test \u003d new Deadline(\"test\", \"test\");"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"        test.markAsDone();"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"        Assertions.assertTrue(test.isDone);"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    public void testGetStatusIcon() {"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"        Deadline test \u003d new Deadline(\"test\", \"test\");"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"[ ]\", test.getStatusIcon());"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"        test.markAsDone();"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"[X]\", test.getStatusIcon());"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    public void testGetType() {"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"        Deadline test \u003d new Deadline(\"test\", \"test\");"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"[D]\", test.getType());"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    public void testGetDescription() {"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"        Deadline test \u003d new Deadline(\"test\", \"test\");"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"test\", test.getDescription());"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"    public void testGetStatus() {"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"        Deadline test \u003d new Deadline(\"test\", \"test\");"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"        Assertions.assertFalse(test.getStatus());"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"    public void testGetDeadline() {"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"        Deadline test \u003d new Deadline(\"test\", \"test\");"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"test\", test.getDeadline());"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":51}},{"path":"src/test/java/duke/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class EventTest {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"    public void testIsDone() {"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"        Event test \u003d new Event(\"test\", \"test\");"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"        Assertions.assertFalse(test.isDone);"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    public void testMarkAsDone() {"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"        Event test \u003d new Event(\"test\", \"test\");"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"        test.markAsDone();"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"        Assertions.assertTrue(test.isDone);"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    public void testGetStatusIcon() {"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"        Event test \u003d new Event(\"test\", \"test\");"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"[ ]\", test.getStatusIcon());"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"        test.markAsDone();"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"[X]\", test.getStatusIcon());"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    public void testGetType() {"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"        Event test \u003d new Event(\"test\", \"test\");"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"[E]\", test.getType());"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    public void testGetDescription() {"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"        Event test \u003d new Event(\"test\", \"test\");"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"test\", test.getDescription());"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"    public void testGetStatus() {"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"        Event test \u003d new Event(\"test\", \"test\");"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"        Assertions.assertFalse(test.getStatus());"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":46,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":47,"author":{"gitId":"candyhy"},"content":"    public void testGetEventTime() {"},{"lineNumber":48,"author":{"gitId":"candyhy"},"content":"        Event test \u003d new Event(\"test\", \"test\");"},{"lineNumber":49,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"test\", test.getEventTime());"},{"lineNumber":50,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":51}},{"path":"src/test/java/duke/tasks/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"package duke.tasks;"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"import org.junit.jupiter.api.Assertions;"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"public class TodoTest {"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"    public void testIsDone() {"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"        Todo test \u003d new Todo(\"test\");"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"        Assertions.assertFalse(test.isDone);"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":13,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"candyhy"},"content":"    public void testMarkAsDone() {"},{"lineNumber":15,"author":{"gitId":"candyhy"},"content":"        Todo test \u003d new Todo((\"test\"));"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"        test.markAsDone();"},{"lineNumber":17,"author":{"gitId":"candyhy"},"content":"        Assertions.assertTrue(test.isDone);"},{"lineNumber":18,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":20,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"candyhy"},"content":"    public void testGetStatusIcon() {"},{"lineNumber":22,"author":{"gitId":"candyhy"},"content":"        Todo test \u003d new Todo(\"test\");"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"[ ]\", test.getStatusIcon());"},{"lineNumber":24,"author":{"gitId":"candyhy"},"content":"        test.markAsDone();"},{"lineNumber":25,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"[X]\", test.getStatusIcon());"},{"lineNumber":26,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":28,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"candyhy"},"content":"    public void testGetType() {"},{"lineNumber":30,"author":{"gitId":"candyhy"},"content":"        Todo test \u003d new Todo(\"test\");"},{"lineNumber":31,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"[T]\", test.getType());"},{"lineNumber":32,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":34,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"candyhy"},"content":"    public void testGetDescription() {"},{"lineNumber":36,"author":{"gitId":"candyhy"},"content":"        Todo test \u003d new Todo(\"test\");"},{"lineNumber":37,"author":{"gitId":"candyhy"},"content":"        Assertions.assertEquals(\"test\", test.getDescription());"},{"lineNumber":38,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"candyhy"},"content":""},{"lineNumber":40,"author":{"gitId":"candyhy"},"content":"    @Test"},{"lineNumber":41,"author":{"gitId":"candyhy"},"content":"    public void testGetStatus() {"},{"lineNumber":42,"author":{"gitId":"candyhy"},"content":"        Todo test \u003d new Todo(\"test\");"},{"lineNumber":43,"author":{"gitId":"candyhy"},"content":"        Assertions.assertFalse(test.getStatus());"},{"lineNumber":44,"author":{"gitId":"candyhy"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"candyhy"},"content":"}"}],"authorContributionMap":{"candyhy":45}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"candyhy"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"candyhy"},"content":"deadline return book /by Sunday"},{"lineNumber":3,"author":{"gitId":"candyhy"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":4,"author":{"gitId":"candyhy"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":5,"author":{"gitId":"candyhy"},"content":"list"},{"lineNumber":6,"author":{"gitId":"candyhy"},"content":"done 2"},{"lineNumber":7,"author":{"gitId":"candyhy"},"content":"list"},{"lineNumber":8,"author":{"gitId":"candyhy"},"content":"delete 2"},{"lineNumber":9,"author":{"gitId":"candyhy"},"content":"list"},{"lineNumber":10,"author":{"gitId":"candyhy"},"content":"blah"},{"lineNumber":11,"author":{"gitId":"candyhy"},"content":"bye"}],"authorContributionMap":{"candyhy":11}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"candyhy"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"candyhy"},"content":"java -classpath ../bin duke.Main \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"candyhy":2,"-":36}}]
