[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"Stratostorm"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Stratostorm":16,"-":45}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"# Duke User Guide"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":"Welcome to Duke, Task List Extraordinaire, below you will find a guide to the features of Duke and"},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"how to use them.\\"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"Fields denoted by curly brackets `{}` are optional."},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"### Tracking of tasks of 3 types"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"Duke allows tracking of tasks of the todo, deadline and event types."},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"See `todo`, `deadline`, `event`"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"### Tagging"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"You can add customised tags to every task you add to Duke. See `todo`, `deadline`, `event`"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"### View your task list"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"Duke can display your task list for you. See `list`"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"### Mark tasks as done"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"Duke can mark your completed tasks as done. See `done`"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"### Delete tasks"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"Duke can delete tasks from your list. See `delete`"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"### Searching for tasks by name"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"You can filter for particular tasks by name."},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"See `find`"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"### Save and Load"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"Duke automatically saves and loads your task list as you use it."},{"lineNumber":23,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"### `todo` - Adds a todo task to your task list."},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"Format :\\"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":"`todo [NAME] {#TAG}...` "},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":"Any number of tags (including 0) can be added."},{"lineNumber":30,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":"Example of usage:\\"},{"lineNumber":32,"author":{"gitId":"Stratostorm"},"content":"`todo Buy groceries #urgent`"},{"lineNumber":33,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":34,"author":{"gitId":"Stratostorm"},"content":"Expected outcome:"},{"lineNumber":35,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":36,"author":{"gitId":"Stratostorm"},"content":"`Added to to-do list:"},{"lineNumber":37,"author":{"gitId":"Stratostorm"},"content":"[T][] Buy groceries #urgent`"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"Stratostorm"},"content":"`[T]` identifies this as a todo task, `[]`signifies the task is not yet done."},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"Stratostorm"},"content":"### `deadline` - Adds a deadline task to your task list."},{"lineNumber":42,"author":{"gitId":"Stratostorm"},"content":"Format :\\"},{"lineNumber":43,"author":{"gitId":"Stratostorm"},"content":"`deadline [NAME] /by [DATE] {TIME} {#TAG}...`"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"Stratostorm"},"content":"The date should be in the format `yyyy-mm-dd`, the time field is optional."},{"lineNumber":46,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":47,"author":{"gitId":"Stratostorm"},"content":"Example of usage:"},{"lineNumber":48,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":49,"author":{"gitId":"Stratostorm"},"content":"`deadline Assignment /by 2021-02-21 1800`"},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"Stratostorm"},"content":"`Added to to-do list:"},{"lineNumber":54,"author":{"gitId":"Stratostorm"},"content":"[D][] Assignment (By:21 Feb 2021 1800)`"},{"lineNumber":55,"author":{"gitId":"Stratostorm"},"content":"### `event` - Adds an event task to your task list"},{"lineNumber":56,"author":{"gitId":"Stratostorm"},"content":"Format :\\"},{"lineNumber":57,"author":{"gitId":"Stratostorm"},"content":"`event [NAME]  /at [DATE/TIME] {#TAG}...`"},{"lineNumber":58,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":59,"author":{"gitId":"Stratostorm"},"content":"The date and/or time can be in any format and will be saved as such."},{"lineNumber":60,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":61,"author":{"gitId":"Stratostorm"},"content":"Example of usage:"},{"lineNumber":62,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":63,"author":{"gitId":"Stratostorm"},"content":"`event Concert /at Feb 19 1900 #esplanade`"},{"lineNumber":64,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":65,"author":{"gitId":"Stratostorm"},"content":"Expected outcome:"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"Stratostorm"},"content":"`Added to to-do list:"},{"lineNumber":68,"author":{"gitId":"Stratostorm"},"content":"[E][] Concert #esplanade (At:Feb 19 1900)`"},{"lineNumber":69,"author":{"gitId":"Stratostorm"},"content":"### `list` - Lists all the tasks currently in your list"},{"lineNumber":70,"author":{"gitId":"Stratostorm"},"content":"Format :\\"},{"lineNumber":71,"author":{"gitId":"Stratostorm"},"content":"`list`"},{"lineNumber":72,"author":{"gitId":"-"},"content":""},{"lineNumber":73,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":74,"author":{"gitId":"-"},"content":""},{"lineNumber":75,"author":{"gitId":"Stratostorm"},"content":"`list`"},{"lineNumber":76,"author":{"gitId":"-"},"content":""},{"lineNumber":77,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":78,"author":{"gitId":"-"},"content":""},{"lineNumber":79,"author":{"gitId":"Stratostorm"},"content":"A list of all the current tasks in your task list will be displayed, "},{"lineNumber":80,"author":{"gitId":"Stratostorm"},"content":"along with the index for each task."},{"lineNumber":81,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":82,"author":{"gitId":"Stratostorm"},"content":"### `done` - Marks a task as done on your list"},{"lineNumber":83,"author":{"gitId":"Stratostorm"},"content":"Format :\\"},{"lineNumber":84,"author":{"gitId":"Stratostorm"},"content":"`done [INDEX]`"},{"lineNumber":85,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":86,"author":{"gitId":"Stratostorm"},"content":"Index should be provided as an integer. Use `list` to see which task is at which index."},{"lineNumber":87,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":88,"author":{"gitId":"Stratostorm"},"content":"Example of usage:"},{"lineNumber":89,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":90,"author":{"gitId":"Stratostorm"},"content":"`done 1`"},{"lineNumber":91,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":92,"author":{"gitId":"Stratostorm"},"content":"Expected outcome:"},{"lineNumber":93,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":94,"author":{"gitId":"Stratostorm"},"content":"The task located at index 1 on the list will be marked as done."},{"lineNumber":95,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":96,"author":{"gitId":"Stratostorm"},"content":"### `delete` - Deletes a task from your list"},{"lineNumber":97,"author":{"gitId":"Stratostorm"},"content":"Format :\\"},{"lineNumber":98,"author":{"gitId":"Stratostorm"},"content":"`delete [INDEX]`"},{"lineNumber":99,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":100,"author":{"gitId":"Stratostorm"},"content":"Index should be provided as an integer. Use `list` to see which task is at which index."},{"lineNumber":101,"author":{"gitId":"Stratostorm"},"content":"Note that this process is irreversible."},{"lineNumber":102,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":103,"author":{"gitId":"Stratostorm"},"content":"Example of usage:"},{"lineNumber":104,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":105,"author":{"gitId":"Stratostorm"},"content":"`delete 1`"},{"lineNumber":106,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":107,"author":{"gitId":"Stratostorm"},"content":"Expected outcome:"},{"lineNumber":108,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":109,"author":{"gitId":"Stratostorm"},"content":"The task located at index 1 on the list will be deleted."},{"lineNumber":110,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":111,"author":{"gitId":"Stratostorm"},"content":"### `find` - Finds tasks from the task list that matches the provided text"},{"lineNumber":112,"author":{"gitId":"Stratostorm"},"content":"Format :\\"},{"lineNumber":113,"author":{"gitId":"Stratostorm"},"content":"`find [TEXT]`"},{"lineNumber":114,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":115,"author":{"gitId":"Stratostorm"},"content":"The `[TEXT]` field is case-sensitive. "},{"lineNumber":116,"author":{"gitId":"Stratostorm"},"content":"It will return all tasks that contain the given text in any part of its name."},{"lineNumber":117,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":118,"author":{"gitId":"Stratostorm"},"content":"Example of usage:"},{"lineNumber":119,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":120,"author":{"gitId":"Stratostorm"},"content":"`find gro`"},{"lineNumber":121,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":122,"author":{"gitId":"Stratostorm"},"content":"Expected outcome:"},{"lineNumber":123,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":124,"author":{"gitId":"Stratostorm"},"content":"Any tasks with a name that contains the text `gro` will be returned in a list. "},{"lineNumber":125,"author":{"gitId":"Stratostorm"},"content":"For example a task with a name `Buy groceries` will be displayed if it is in the task list."},{"lineNumber":126,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":127,"author":{"gitId":"Stratostorm"},"content":"### `bye` - Exits the program"},{"lineNumber":128,"author":{"gitId":"Stratostorm"},"content":"Format :\\"},{"lineNumber":129,"author":{"gitId":"Stratostorm"},"content":"`bye`"},{"lineNumber":130,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":131,"author":{"gitId":"Stratostorm"},"content":"Your task list is saved after each command and will be reloaded when you restart Duke."},{"lineNumber":132,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":133,"author":{"gitId":"Stratostorm"},"content":"Example of usage:"},{"lineNumber":134,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":135,"author":{"gitId":"Stratostorm"},"content":"`bye`"},{"lineNumber":136,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":137,"author":{"gitId":"Stratostorm"},"content":"Expected outcome:"},{"lineNumber":138,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":139,"author":{"gitId":"Stratostorm"},"content":"A goodbye message will be displayed and the program will close after a short time."},{"lineNumber":140,"author":{"gitId":"Stratostorm"},"content":""}],"authorContributionMap":{"Stratostorm":123,"-":17}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import javafx.geometry.Insets;"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"import javafx.geometry.Pos;"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"import javafx.scene.Node;"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"import javafx.scene.control.Label;"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"public class DialogBox extends HBox {"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"    private Label text;"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"    private ImageView displayPicture;"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"    public DialogBox(Label l, ImageView iv) {"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"        text \u003d l;"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"        displayPicture \u003d iv;"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"        text.setWrapText(true);"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"        displayPicture.setFitWidth(100.0);"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"        displayPicture.setFitHeight(100.0);"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":"        this.setAlignment(Pos.TOP_RIGHT);"},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":"        this.getChildren().addAll(text, displayPicture);"},{"lineNumber":30,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":32,"author":{"gitId":"Stratostorm"},"content":"    private void flip() {"},{"lineNumber":33,"author":{"gitId":"Stratostorm"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":34,"author":{"gitId":"Stratostorm"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":35,"author":{"gitId":"Stratostorm"},"content":"        FXCollections.reverse(tmp);"},{"lineNumber":36,"author":{"gitId":"Stratostorm"},"content":"        this.getChildren().setAll(tmp);"},{"lineNumber":37,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":39,"author":{"gitId":"Stratostorm"},"content":"    //Solution adapted from https://github.com/TeoHoeKeat/ip/blob/master/src/main/java/fakebot/ui/DialogBox.java"},{"lineNumber":40,"author":{"gitId":"Stratostorm"},"content":"    private void style() {"},{"lineNumber":41,"author":{"gitId":"Stratostorm"},"content":"        CornerRadii rad \u003d new CornerRadii(5);"},{"lineNumber":42,"author":{"gitId":"Stratostorm"},"content":"        Color color \u003d Color.rgb(98,  125,  168);"},{"lineNumber":43,"author":{"gitId":"Stratostorm"},"content":"        BackgroundFill backgroundFill \u003d new BackgroundFill(color, rad, new Insets(-2, -2, -2 , -2));"},{"lineNumber":44,"author":{"gitId":"Stratostorm"},"content":"        Background background \u003d new Background(backgroundFill);"},{"lineNumber":45,"author":{"gitId":"Stratostorm"},"content":"        text.setBackground(background);"},{"lineNumber":46,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":48,"author":{"gitId":"Stratostorm"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {"},{"lineNumber":49,"author":{"gitId":"Stratostorm"},"content":"        DialogBox result \u003d new DialogBox(l, iv);"},{"lineNumber":50,"author":{"gitId":"Stratostorm"},"content":"        result.style();"},{"lineNumber":51,"author":{"gitId":"Stratostorm"},"content":"        return result;"},{"lineNumber":52,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":54,"author":{"gitId":"Stratostorm"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {"},{"lineNumber":55,"author":{"gitId":"Stratostorm"},"content":"        DialogBox result \u003d new DialogBox(l, iv);"},{"lineNumber":56,"author":{"gitId":"Stratostorm"},"content":"        result.style();"},{"lineNumber":57,"author":{"gitId":"Stratostorm"},"content":"        result.flip();"},{"lineNumber":58,"author":{"gitId":"Stratostorm"},"content":"        return result;"},{"lineNumber":59,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Stratostorm"},"content":"}"}],"authorContributionMap":{"Stratostorm":60}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import duke.command.Command;"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"import duke.util.Tuple;"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":" * Duke is a basic to-do list application."},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"public class Duke {"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"    private Storage storage;"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"    private Ui ui;"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"    private TaskList taskList;"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"     * Constructs a Duke object with the given filePath as the file to load the task list from."},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"     * @param filePath path to the of the task list."},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"    public Duke(String filePath) {"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"        ui \u003d new Ui();"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"            taskList \u003d new TaskList();"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"            storage.loadData(taskList);"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"            ui.showLoadSuccess();"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":"        } catch (IOException e) {"},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":"            taskList \u003d new TaskList();"},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":32,"author":{"gitId":"Stratostorm"},"content":"    public Ui getUi() {"},{"lineNumber":33,"author":{"gitId":"Stratostorm"},"content":"        return this.ui;"},{"lineNumber":34,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":36,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"Stratostorm"},"content":"     * Parses and subsequently executes the given command input String."},{"lineNumber":38,"author":{"gitId":"Stratostorm"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"Stratostorm"},"content":"     * @return Tuple containing output to be displayed and a boolean representing if it is an exit command."},{"lineNumber":40,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"Stratostorm"},"content":"    Tuple\u003cString, Boolean\u003e getResponse(String input) {"},{"lineNumber":42,"author":{"gitId":"Stratostorm"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"Stratostorm"},"content":"            Command parsedCmd \u003d Parser.parse(input);"},{"lineNumber":44,"author":{"gitId":"Stratostorm"},"content":"            return new Tuple\u003c\u003e(parsedCmd.execute(storage, ui, taskList), parsedCmd.isExit());"},{"lineNumber":45,"author":{"gitId":"Stratostorm"},"content":"        } catch (DukeException e) {"},{"lineNumber":46,"author":{"gitId":"Stratostorm"},"content":"            return new Tuple\u003c\u003e(ui.toErrorString(e), false);"},{"lineNumber":47,"author":{"gitId":"Stratostorm"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Stratostorm":48,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":" * DukeException class represents exceptions that are specific to the Duke application."},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"public class DukeException extends Throwable {"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"    private String msg;"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"    public DukeException(String msg) {"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"        this.msg \u003d msg;"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"    public String toString() {"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"        return msg;"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"}"}],"authorContributionMap":{"Stratostorm":17}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"    /** Main method which initializes and runs Duke."},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"     * @param args Unused."},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"    public static void main(String[] args) {"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"}"}],"authorContributionMap":{"Stratostorm":16}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":" * A GUI for Duke using FXML."},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":" */"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"    private static final String DEFAULT_FILE_PATH \u003d \"data/duke.txt\";"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"    private static final String TITLE \u003d \"Duke, Task Tracker Extraordinaire\";"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"    private Duke duke \u003d new Duke(DEFAULT_FILE_PATH);"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"    public void start(Stage stage) {"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"            stage.setScene(scene);"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":"            stage.setTitle(TITLE);"},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":"            stage.show();"},{"lineNumber":30,"author":{"gitId":"Stratostorm"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().displayWelcome();"},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":"        } catch (IOException e) {"},{"lineNumber":32,"author":{"gitId":"Stratostorm"},"content":"            e.printStackTrace();"},{"lineNumber":33,"author":{"gitId":"Stratostorm"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Stratostorm"},"content":"}"}],"authorContributionMap":{"Stratostorm":35}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import duke.util.Tuple;"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"import javafx.animation.PauseTransition;"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import javafx.application.Platform;"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"import javafx.fxml.FXML;"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"import javafx.scene.control.Button;"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"import javafx.scene.control.Label;"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"import javafx.util.Duration;"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":" */"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"    private VBox dialogContainer;"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"    private TextField userInput;"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":"    private Button sendButton;"},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":30,"author":{"gitId":"Stratostorm"},"content":"    private Duke duke;"},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":32,"author":{"gitId":"Stratostorm"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"},{"lineNumber":33,"author":{"gitId":"Stratostorm"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));"},{"lineNumber":34,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":35,"author":{"gitId":"Stratostorm"},"content":"    @FXML"},{"lineNumber":36,"author":{"gitId":"Stratostorm"},"content":"    public void initialize() {"},{"lineNumber":37,"author":{"gitId":"Stratostorm"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":38,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":40,"author":{"gitId":"Stratostorm"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":41,"author":{"gitId":"Stratostorm"},"content":"        duke \u003d d;"},{"lineNumber":42,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":44,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"Stratostorm"},"content":"     * Displays the welcome message to the GUI."},{"lineNumber":46,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"Stratostorm"},"content":"    public void displayWelcome() {"},{"lineNumber":48,"author":{"gitId":"Stratostorm"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":49,"author":{"gitId":"Stratostorm"},"content":"                DialogBox.getDukeDialog(new Label(duke.getUi().getWelcome()), new ImageView(dukeImage))"},{"lineNumber":50,"author":{"gitId":"Stratostorm"},"content":"        );"},{"lineNumber":51,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":53,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"Stratostorm"},"content":"     * Exits the application after waiting 1 second after the UI updates."},{"lineNumber":55,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"Stratostorm"},"content":"    public void exit() {"},{"lineNumber":57,"author":{"gitId":"Stratostorm"},"content":"        PauseTransition pause \u003d new PauseTransition(Duration.seconds(1));"},{"lineNumber":58,"author":{"gitId":"Stratostorm"},"content":"        pause.setOnFinished(event -\u003e Platform.exit());"},{"lineNumber":59,"author":{"gitId":"Stratostorm"},"content":"        pause.play();"},{"lineNumber":60,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":62,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"Stratostorm"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":64,"author":{"gitId":"Stratostorm"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":65,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"Stratostorm"},"content":"    @FXML"},{"lineNumber":67,"author":{"gitId":"Stratostorm"},"content":"    private void handleUserInput() {"},{"lineNumber":68,"author":{"gitId":"Stratostorm"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":69,"author":{"gitId":"Stratostorm"},"content":"        Tuple\u003cString, Boolean\u003e response \u003d duke.getResponse(input);"},{"lineNumber":70,"author":{"gitId":"Stratostorm"},"content":"        String output \u003d response.getFirst();"},{"lineNumber":71,"author":{"gitId":"Stratostorm"},"content":"        Boolean isExit \u003d response.getSecond();"},{"lineNumber":72,"author":{"gitId":"Stratostorm"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":73,"author":{"gitId":"Stratostorm"},"content":"                DialogBox.getUserDialog(new Label(input), new ImageView(userImage)),"},{"lineNumber":74,"author":{"gitId":"Stratostorm"},"content":"                DialogBox.getDukeDialog(new Label(output), new ImageView(dukeImage))"},{"lineNumber":75,"author":{"gitId":"Stratostorm"},"content":"        );"},{"lineNumber":76,"author":{"gitId":"Stratostorm"},"content":"        userInput.clear();"},{"lineNumber":77,"author":{"gitId":"Stratostorm"},"content":"        if (isExit) {"},{"lineNumber":78,"author":{"gitId":"Stratostorm"},"content":"            exit();"},{"lineNumber":79,"author":{"gitId":"Stratostorm"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"Stratostorm"},"content":"}"}],"authorContributionMap":{"Stratostorm":81}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import duke.command.ByeCommand;"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"import duke.command.Command;"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import duke.command.DeadlineCommand;"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"import duke.command.DoneCommand;"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"import duke.command.EventCommand;"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"import duke.command.FindCommand;"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"import duke.command.ListCommand;"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"import duke.command.TodoCommand;"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":" * Parser class allows program to parse user commands."},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":" */"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"public class Parser {"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"    Parser() {}"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"     * Primary parse method that takes in a String command and returns a Command object that represents it."},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"     * @param command User command to be parsed"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"     * @return Command object representing the given command"},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"     * @throws DukeException if command given is not supported"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"    public static Command parse(String command) throws DukeException {"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":"        String strippedCmd \u003d command.strip();"},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":"        Command result;"},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":"        if (strippedCmd.startsWith(\"bye\")) {"},{"lineNumber":30,"author":{"gitId":"Stratostorm"},"content":"            result \u003d new ByeCommand(\"\");"},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":"        } else if (strippedCmd.startsWith(\"list\")) {"},{"lineNumber":32,"author":{"gitId":"Stratostorm"},"content":"            result \u003d new ListCommand(\"\");"},{"lineNumber":33,"author":{"gitId":"Stratostorm"},"content":"        } else if (strippedCmd.startsWith(\"done\")) {"},{"lineNumber":34,"author":{"gitId":"Stratostorm"},"content":"            String args \u003d strippedCmd.substring(4).strip();"},{"lineNumber":35,"author":{"gitId":"Stratostorm"},"content":"            result \u003d new DoneCommand(args);"},{"lineNumber":36,"author":{"gitId":"Stratostorm"},"content":"        } else if (strippedCmd.startsWith(\"delete\")) {"},{"lineNumber":37,"author":{"gitId":"Stratostorm"},"content":"            String args \u003d strippedCmd.substring(6).strip();"},{"lineNumber":38,"author":{"gitId":"Stratostorm"},"content":"            result \u003d new DeleteCommand(args);"},{"lineNumber":39,"author":{"gitId":"Stratostorm"},"content":"        } else if (strippedCmd.startsWith(\"todo\")) {"},{"lineNumber":40,"author":{"gitId":"Stratostorm"},"content":"            String args \u003d strippedCmd.substring(4).strip();"},{"lineNumber":41,"author":{"gitId":"Stratostorm"},"content":"            result \u003d new TodoCommand(args);"},{"lineNumber":42,"author":{"gitId":"Stratostorm"},"content":"        } else if (strippedCmd.startsWith(\"deadline\")) {"},{"lineNumber":43,"author":{"gitId":"Stratostorm"},"content":"            String args \u003d strippedCmd.substring(8).strip();"},{"lineNumber":44,"author":{"gitId":"Stratostorm"},"content":"            result \u003d new DeadlineCommand(args);"},{"lineNumber":45,"author":{"gitId":"Stratostorm"},"content":"        } else if (strippedCmd.startsWith(\"event\")) {"},{"lineNumber":46,"author":{"gitId":"Stratostorm"},"content":"            String args \u003d strippedCmd.substring(5).strip();"},{"lineNumber":47,"author":{"gitId":"Stratostorm"},"content":"            result \u003d new EventCommand(args);"},{"lineNumber":48,"author":{"gitId":"Stratostorm"},"content":"        } else if (strippedCmd.startsWith(\"find\")) {"},{"lineNumber":49,"author":{"gitId":"Stratostorm"},"content":"            String args \u003d strippedCmd.substring(4).strip();"},{"lineNumber":50,"author":{"gitId":"Stratostorm"},"content":"            result \u003d new FindCommand(args);"},{"lineNumber":51,"author":{"gitId":"Stratostorm"},"content":"        } else {"},{"lineNumber":52,"author":{"gitId":"Stratostorm"},"content":"            throw new DukeException(\"I apologize, I do not comprehend your command.\");"},{"lineNumber":53,"author":{"gitId":"Stratostorm"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"Stratostorm"},"content":"        return result;"},{"lineNumber":55,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Stratostorm"},"content":"}"}],"authorContributionMap":{"Stratostorm":56}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"import java.util.Scanner;"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"import duke.tag.Tag;"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"import duke.task.Deadline;"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"import duke.task.Event;"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"import duke.task.Task;"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"import duke.task.Todo;"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":" * Storage class handles any operations by Duke that involves writing or reading from a file."},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":" */"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"public class Storage {"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"    private static final String TEMP_FILE_PATH \u003d \"./data/temp.txt\";"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"    private String filePath;"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"    Storage(String filePath) {"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"     * Appends a Duke readable String representation of a Task to the end of the file designated by filePath."},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":"     * @param task the Task to be added."},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"Stratostorm"},"content":"    public void addToFile(Task task) {"},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":"        assert !this.filePath.isEmpty();"},{"lineNumber":32,"author":{"gitId":"Stratostorm"},"content":"        File save \u003d new File(this.filePath);"},{"lineNumber":33,"author":{"gitId":"Stratostorm"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"Stratostorm"},"content":"            FileWriter fw \u003d new FileWriter(save, true);"},{"lineNumber":35,"author":{"gitId":"Stratostorm"},"content":"            fw.write(task.toFileString() + System.lineSeparator());"},{"lineNumber":36,"author":{"gitId":"Stratostorm"},"content":"            fw.close();"},{"lineNumber":37,"author":{"gitId":"Stratostorm"},"content":"        } catch (IOException e) {"},{"lineNumber":38,"author":{"gitId":"Stratostorm"},"content":"            e.printStackTrace();"},{"lineNumber":39,"author":{"gitId":"Stratostorm"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":42,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"Stratostorm"},"content":"     * Deletes a Task specified by its index (line number) from the file designated by filePath."},{"lineNumber":44,"author":{"gitId":"Stratostorm"},"content":"     * @param index the index of the Task to be deleted."},{"lineNumber":45,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"Stratostorm"},"content":"    public void deleteFromFile(int index) {"},{"lineNumber":47,"author":{"gitId":"Stratostorm"},"content":"        assert !this.filePath.isEmpty();"},{"lineNumber":48,"author":{"gitId":"Stratostorm"},"content":"        File save \u003d new File(this.filePath);"},{"lineNumber":49,"author":{"gitId":"Stratostorm"},"content":"        File temp \u003d new File(TEMP_FILE_PATH);"},{"lineNumber":50,"author":{"gitId":"Stratostorm"},"content":"        int ctr \u003d 0;"},{"lineNumber":51,"author":{"gitId":"Stratostorm"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"Stratostorm"},"content":"            //create temp file"},{"lineNumber":53,"author":{"gitId":"Stratostorm"},"content":"            temp.createNewFile();"},{"lineNumber":54,"author":{"gitId":"Stratostorm"},"content":"            Scanner sc \u003d new Scanner(save);"},{"lineNumber":55,"author":{"gitId":"Stratostorm"},"content":"            FileWriter fw \u003d new FileWriter(temp);"},{"lineNumber":56,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":57,"author":{"gitId":"Stratostorm"},"content":"            //copy all lines except line to be deleted to temp"},{"lineNumber":58,"author":{"gitId":"Stratostorm"},"content":"            while (sc.hasNextLine()) {"},{"lineNumber":59,"author":{"gitId":"Stratostorm"},"content":"                //skip the line to be deleted"},{"lineNumber":60,"author":{"gitId":"Stratostorm"},"content":"                if (ctr !\u003d index) {"},{"lineNumber":61,"author":{"gitId":"Stratostorm"},"content":"                    fw.write(sc.nextLine() + System.lineSeparator());"},{"lineNumber":62,"author":{"gitId":"Stratostorm"},"content":"                } else {"},{"lineNumber":63,"author":{"gitId":"Stratostorm"},"content":"                    sc.nextLine();"},{"lineNumber":64,"author":{"gitId":"Stratostorm"},"content":"                }"},{"lineNumber":65,"author":{"gitId":"Stratostorm"},"content":"                ctr++;"},{"lineNumber":66,"author":{"gitId":"Stratostorm"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"Stratostorm"},"content":"            fw.close();"},{"lineNumber":68,"author":{"gitId":"Stratostorm"},"content":"            sc.close();"},{"lineNumber":69,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":70,"author":{"gitId":"Stratostorm"},"content":"            //delete original save and rename temp to save"},{"lineNumber":71,"author":{"gitId":"Stratostorm"},"content":"            save.delete();"},{"lineNumber":72,"author":{"gitId":"Stratostorm"},"content":"            temp.renameTo(save);"},{"lineNumber":73,"author":{"gitId":"Stratostorm"},"content":"        } catch (IOException e) {"},{"lineNumber":74,"author":{"gitId":"Stratostorm"},"content":"            e.printStackTrace();"},{"lineNumber":75,"author":{"gitId":"Stratostorm"},"content":"        }"},{"lineNumber":76,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":78,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"Stratostorm"},"content":"     * Marks a Task specified by its index (line number) as done from the file designated by filePath."},{"lineNumber":80,"author":{"gitId":"Stratostorm"},"content":"     * @param index the index of the Task to be marked as done."},{"lineNumber":81,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":82,"author":{"gitId":"Stratostorm"},"content":"    public void markDoneInFile(int index) {"},{"lineNumber":83,"author":{"gitId":"Stratostorm"},"content":"        assert !this.filePath.isEmpty();"},{"lineNumber":84,"author":{"gitId":"Stratostorm"},"content":"        File save \u003d new File(this.filePath);"},{"lineNumber":85,"author":{"gitId":"Stratostorm"},"content":"        File temp \u003d new File(TEMP_FILE_PATH);"},{"lineNumber":86,"author":{"gitId":"Stratostorm"},"content":"        int ctr \u003d 0;"},{"lineNumber":87,"author":{"gitId":"Stratostorm"},"content":"        try {"},{"lineNumber":88,"author":{"gitId":"Stratostorm"},"content":"            //create temp file"},{"lineNumber":89,"author":{"gitId":"Stratostorm"},"content":"            temp.createNewFile();"},{"lineNumber":90,"author":{"gitId":"Stratostorm"},"content":"            Scanner sc \u003d new Scanner(save);"},{"lineNumber":91,"author":{"gitId":"Stratostorm"},"content":"            FileWriter fw \u003d new FileWriter(temp);"},{"lineNumber":92,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":93,"author":{"gitId":"Stratostorm"},"content":"            //copy all lines except line to be edited to temp"},{"lineNumber":94,"author":{"gitId":"Stratostorm"},"content":"            while (sc.hasNextLine()) {"},{"lineNumber":95,"author":{"gitId":"Stratostorm"},"content":"                //change line to be edited"},{"lineNumber":96,"author":{"gitId":"Stratostorm"},"content":"                if (ctr !\u003d index) {"},{"lineNumber":97,"author":{"gitId":"Stratostorm"},"content":"                    fw.write(sc.nextLine() + System.lineSeparator());"},{"lineNumber":98,"author":{"gitId":"Stratostorm"},"content":"                } else {"},{"lineNumber":99,"author":{"gitId":"Stratostorm"},"content":"                    fw.write(sc.nextLine().replaceFirst(\"false\", \"true\") + System.lineSeparator());"},{"lineNumber":100,"author":{"gitId":"Stratostorm"},"content":"                }"},{"lineNumber":101,"author":{"gitId":"Stratostorm"},"content":"                ctr++;"},{"lineNumber":102,"author":{"gitId":"Stratostorm"},"content":"            }"},{"lineNumber":103,"author":{"gitId":"Stratostorm"},"content":"            fw.close();"},{"lineNumber":104,"author":{"gitId":"Stratostorm"},"content":"            sc.close();"},{"lineNumber":105,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":106,"author":{"gitId":"Stratostorm"},"content":"            //delete original save and rename temp to save"},{"lineNumber":107,"author":{"gitId":"Stratostorm"},"content":"            save.delete();"},{"lineNumber":108,"author":{"gitId":"Stratostorm"},"content":"            temp.renameTo(save);"},{"lineNumber":109,"author":{"gitId":"Stratostorm"},"content":"        } catch (IOException e) {"},{"lineNumber":110,"author":{"gitId":"Stratostorm"},"content":"            e.printStackTrace();"},{"lineNumber":111,"author":{"gitId":"Stratostorm"},"content":"        }"},{"lineNumber":112,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":113,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":114,"author":{"gitId":"Stratostorm"},"content":"    private Task fileStringToTask(String fileString) {"},{"lineNumber":115,"author":{"gitId":"Stratostorm"},"content":"        String[] taskArgsArray \u003d fileString.split(\" [|] \", -1);"},{"lineNumber":116,"author":{"gitId":"Stratostorm"},"content":"        if (taskArgsArray[0].equals(\"T\")) {"},{"lineNumber":117,"author":{"gitId":"Stratostorm"},"content":"            return new Todo(Boolean.parseBoolean(taskArgsArray[1]), taskArgsArray[2],"},{"lineNumber":118,"author":{"gitId":"Stratostorm"},"content":"                    Tag.processTags(taskArgsArray[3]));"},{"lineNumber":119,"author":{"gitId":"Stratostorm"},"content":"        } else if (taskArgsArray[0].equals(\"D\")) {"},{"lineNumber":120,"author":{"gitId":"Stratostorm"},"content":"            return new Deadline(Boolean.parseBoolean(taskArgsArray[1]), taskArgsArray[2], taskArgsArray[3],"},{"lineNumber":121,"author":{"gitId":"Stratostorm"},"content":"                    Tag.processTags(taskArgsArray[4]));"},{"lineNumber":122,"author":{"gitId":"Stratostorm"},"content":"        } else {"},{"lineNumber":123,"author":{"gitId":"Stratostorm"},"content":"            return new Event(Boolean.parseBoolean(taskArgsArray[1]), taskArgsArray[2], taskArgsArray[3],"},{"lineNumber":124,"author":{"gitId":"Stratostorm"},"content":"                    Tag.processTags(taskArgsArray[4]));"},{"lineNumber":125,"author":{"gitId":"Stratostorm"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":127,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":128,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":129,"author":{"gitId":"Stratostorm"},"content":"     * Loads the current Tasks from the file specified by filePath to Duke."},{"lineNumber":130,"author":{"gitId":"Stratostorm"},"content":"     * If the file does not exist it is created."},{"lineNumber":131,"author":{"gitId":"Stratostorm"},"content":"     * @param taskList The TaskList for the Tasks to be stored in."},{"lineNumber":132,"author":{"gitId":"Stratostorm"},"content":"     * @throws IOException"},{"lineNumber":133,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":134,"author":{"gitId":"Stratostorm"},"content":"    public void loadData(TaskList taskList) throws IOException {"},{"lineNumber":135,"author":{"gitId":"Stratostorm"},"content":"        assert !this.filePath.isEmpty();"},{"lineNumber":136,"author":{"gitId":"Stratostorm"},"content":"        File save \u003d new File(this.filePath);"},{"lineNumber":137,"author":{"gitId":"Stratostorm"},"content":"        if (save.getParentFile() !\u003d null) {"},{"lineNumber":138,"author":{"gitId":"Stratostorm"},"content":"            save.getParentFile().mkdirs();"},{"lineNumber":139,"author":{"gitId":"Stratostorm"},"content":"        }"},{"lineNumber":140,"author":{"gitId":"Stratostorm"},"content":"        save.createNewFile();"},{"lineNumber":141,"author":{"gitId":"Stratostorm"},"content":"        Scanner sc \u003d new Scanner(save);"},{"lineNumber":142,"author":{"gitId":"Stratostorm"},"content":"        while (sc.hasNext()) {"},{"lineNumber":143,"author":{"gitId":"Stratostorm"},"content":"            String taskString \u003d sc.nextLine();"},{"lineNumber":144,"author":{"gitId":"Stratostorm"},"content":"            Task task \u003d fileStringToTask(taskString);"},{"lineNumber":145,"author":{"gitId":"Stratostorm"},"content":"            taskList.add(task);"},{"lineNumber":146,"author":{"gitId":"Stratostorm"},"content":"        }"},{"lineNumber":147,"author":{"gitId":"Stratostorm"},"content":"        sc.close();"},{"lineNumber":148,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":149,"author":{"gitId":"Stratostorm"},"content":"}"}],"authorContributionMap":{"Stratostorm":149}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":" * Representation of the TaskList used by Duke stored in the form of an ArrayList."},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"public class TaskList {"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"    private static ArrayList\u003cTask\u003e taskList;"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"    public TaskList() {"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"     * Returns the Task located at the specified index."},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"     * @param index Index of Task to be retrieved."},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"     * @return Task at the specified index."},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"    public Task get(int index) {"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"        assert index \u003e\u003d 0;"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"        return taskList.get(index);"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Stratostorm"},"content":"     * Adds the given Task to the end of the list."},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"Stratostorm"},"content":"     * @param task Task to be added."},{"lineNumber":33,"author":{"gitId":"Stratostorm"},"content":"     * @return true if operation was successful, false otherwise."},{"lineNumber":34,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"Stratostorm"},"content":"    public boolean add(Task task) {"},{"lineNumber":36,"author":{"gitId":"Stratostorm"},"content":"        return taskList.add(task);"},{"lineNumber":37,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":39,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"Stratostorm"},"content":"     * Removes the Task located at the given index."},{"lineNumber":41,"author":{"gitId":"Stratostorm"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"Stratostorm"},"content":"     * @param index Index of Task to be removed."},{"lineNumber":43,"author":{"gitId":"Stratostorm"},"content":"     * @return the Task that was removed."},{"lineNumber":44,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"Stratostorm"},"content":"    public Task remove(int index) {"},{"lineNumber":46,"author":{"gitId":"Stratostorm"},"content":"        assert index \u003e\u003d 0;"},{"lineNumber":47,"author":{"gitId":"Stratostorm"},"content":"        return taskList.remove(index);"},{"lineNumber":48,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":50,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"Stratostorm"},"content":"     * Returns the size (number of elements) in the TaskList."},{"lineNumber":52,"author":{"gitId":"Stratostorm"},"content":"     *"},{"lineNumber":53,"author":{"gitId":"Stratostorm"},"content":"     * @return  size of the TaskList."},{"lineNumber":54,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"Stratostorm"},"content":"    public int size() {"},{"lineNumber":56,"author":{"gitId":"Stratostorm"},"content":"        return taskList.size();"},{"lineNumber":57,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Stratostorm"},"content":"}"}],"authorContributionMap":{"Stratostorm":58}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":" * Representation of the UI of Duke"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"public class Ui {"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"    private static final String EXIT_MESSAGE \u003d \"I hope I have been of assistance. Goodbye. C:\";"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"    private static final String LOAD_SUCCESS \u003d \"Saved data found and successfully loaded.\";"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"    private static final String WELCOME_MESSAGE \u003d \"Greetings. My name is I-01B, but you may call me DUKE. \\n\""},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"            + \"What can I assist you with?\";"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"    private static final String ERROR_HEADER \u003d \"Error: \";"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"    public Ui() {"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"     * Prints the LoadSuccess message to output."},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"    public void showLoadSuccess() {"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"        System.out.println(LOAD_SUCCESS);"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"     * Returns the Welcome message as a string"},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"    public String getWelcome() {"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"        return WELCOME_MESSAGE;"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"Stratostorm"},"content":"     * Prints the Exit message to output."},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"Stratostorm"},"content":"    public void showExit() {"},{"lineNumber":33,"author":{"gitId":"Stratostorm"},"content":"        System.out.println(EXIT_MESSAGE);"},{"lineNumber":34,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":36,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"Stratostorm"},"content":"     * Returns the error as a string."},{"lineNumber":38,"author":{"gitId":"Stratostorm"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"Stratostorm"},"content":"     * @param e error to be printed."},{"lineNumber":40,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"Stratostorm"},"content":"    public String toErrorString(Throwable e) {"},{"lineNumber":42,"author":{"gitId":"Stratostorm"},"content":"        return ERROR_HEADER + e.toString();"},{"lineNumber":43,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":45,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"Stratostorm"},"content":"     * Returns the given message."},{"lineNumber":47,"author":{"gitId":"Stratostorm"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"Stratostorm"},"content":"     * @param message String to be printed."},{"lineNumber":49,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"Stratostorm"},"content":"    public String print(String message) {"},{"lineNumber":51,"author":{"gitId":"Stratostorm"},"content":"        return message;"},{"lineNumber":52,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Stratostorm"},"content":"}"}],"authorContributionMap":{"Stratostorm":53}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":" * Represents a \u0027bye\u0027 command."},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":" * Exits Duke."},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"public class ByeCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"    public ByeCommand(String arguments) {"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"        super(arguments);"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"        setIsExit(true);"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"    public String execute(Storage storage, Ui ui, TaskList taskList) {"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"        ui.showExit();"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"        return \"I hope I have been of assistance. Goodbye. C:\";"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"}"}],"authorContributionMap":{"Stratostorm":23}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"import duke.Ui;"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":" * Parent abstract class to represent a command."},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"public abstract class Command {"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"    private String arguments;"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"    private boolean isExit;"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"    protected Command(String arguments) {"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"        this.arguments \u003d arguments;"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"        this.isExit \u003d false;"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"    public void setIsExit(boolean isExit) {"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"        this.isExit \u003d isExit;"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"    public String getArguments() {"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"        return this.arguments;"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":30,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":"     * Executes the current command."},{"lineNumber":32,"author":{"gitId":"Stratostorm"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"Stratostorm"},"content":"     * @param storage Storage to be used."},{"lineNumber":34,"author":{"gitId":"Stratostorm"},"content":"     * @param ui Ui to be used."},{"lineNumber":35,"author":{"gitId":"Stratostorm"},"content":"     * @param taskList taskList to be used."},{"lineNumber":36,"author":{"gitId":"Stratostorm"},"content":"     * @throws DukeException if there is an issue with the command."},{"lineNumber":37,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"Stratostorm"},"content":"    public abstract String execute(Storage storage, Ui ui, TaskList taskList) throws DukeException;"},{"lineNumber":39,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":40,"author":{"gitId":"Stratostorm"},"content":"    public boolean isExit() {"},{"lineNumber":41,"author":{"gitId":"Stratostorm"},"content":"        return isExit;"},{"lineNumber":42,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Stratostorm"},"content":"}"}],"authorContributionMap":{"Stratostorm":43}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import duke.DukeException;"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"import duke.Storage;"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"import duke.TaskList;"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"import duke.Ui;"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"import duke.tag.Tag;"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"import duke.task.Deadline;"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"import duke.task.Task;"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"import duke.util.Tuple;"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":" * Represents a \u0027deadline\u0027 command."},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":" * Adds a new deadline to the task list."},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":" */"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"    public DeadlineCommand(String arguments) {"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"        super(arguments);"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"    public String execute(Storage storage, Ui ui, TaskList taskList) throws DukeException {"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"        if (getArguments().isBlank()) {"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"            throw new DukeException(\"I apologize, please input description and time for \u0027deadline\u0027.\");"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":"        } else {"},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":"            Tuple\u003cString, ArrayList\u003cTag\u003e\u003e argsAndTags \u003d Tag.retrieveTags(getArguments());"},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":"            String[] splitByDate \u003d argsAndTags.getFirst().split(\"/by\");"},{"lineNumber":30,"author":{"gitId":"Stratostorm"},"content":"            if (getArguments().equals(splitByDate[0])) {"},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":"                throw new DukeException(\"I apologize, please use \u0027/by\u0027 argument \""},{"lineNumber":32,"author":{"gitId":"Stratostorm"},"content":"                        + \"to specify date (format: yyyy-MM-dd) and optionally time for \u0027deadline\u0027.\");"},{"lineNumber":33,"author":{"gitId":"Stratostorm"},"content":"            } else {"},{"lineNumber":34,"author":{"gitId":"Stratostorm"},"content":"                Task newTask \u003d new Deadline(splitByDate[0].strip(), splitByDate[1].strip(), argsAndTags.getSecond());"},{"lineNumber":35,"author":{"gitId":"Stratostorm"},"content":"                taskList.add(newTask);"},{"lineNumber":36,"author":{"gitId":"Stratostorm"},"content":"                storage.addToFile(newTask);"},{"lineNumber":37,"author":{"gitId":"Stratostorm"},"content":"                return \"Added to to-do list: \\n\" + newTask;"},{"lineNumber":38,"author":{"gitId":"Stratostorm"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"Stratostorm"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Stratostorm"},"content":"}"}],"authorContributionMap":{"Stratostorm":41}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":" * Represents a \u0027delete\u0027 command."},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":" * Deletes a specified task from the task list."},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":" */"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"    public DeleteCommand(String arguments) {"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"        super(arguments);"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"    public String execute(Storage storage, Ui ui, TaskList taskList) {"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"        int delIndex \u003d Integer.parseInt(getArguments()) - 1;"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"        Task taskToDelete \u003d taskList.get(Integer.parseInt(getArguments()) - 1);"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"        taskList.remove(delIndex);"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"        storage.deleteFromFile(delIndex);"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"        return \"Affirmative. The following task has been removed: \\n\" + taskToDelete;"},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"}"}],"authorContributionMap":{"Stratostorm":25}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":" * Represents a \u0027done\u0027 command."},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":" * Marks the specified task as done."},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":" */"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"public class DoneCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"    public DoneCommand(String arguments) {"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"        super(arguments);"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"    public String execute(Storage storage, Ui ui, TaskList taskList) {"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"        int doneIndex \u003d Integer.parseInt(getArguments()) - 1;"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"        Task toDo \u003d taskList.get(doneIndex);"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"        toDo.doTask();"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"        storage.markDoneInFile(doneIndex);"},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"        return \"Affirmative. The following task has been marked as done: \\n\" + toDo;"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"}"}],"authorContributionMap":{"Stratostorm":26}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"import duke.Ui;"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"import duke.tag.Tag;"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"import duke.task.Event;"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"import duke.task.Task;"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"import duke.util.Tuple;"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":" * Represents an \u0027event\u0027 command."},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":" * Adds a new event to the task list."},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":" */"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"public class EventCommand extends Command {"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"    public EventCommand(String arguments) {"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"        super(arguments);"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"    public String execute(Storage storage, Ui ui, TaskList taskList) throws DukeException {"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"        if (getArguments().isBlank()) {"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":"            throw new DukeException(\"I apologize, please input description and time for \u0027event\u0027.\");"},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":"        } else {"},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":"            Tuple\u003cString, ArrayList\u003cTag\u003e\u003e argsAndTags \u003d Tag.retrieveTags(getArguments());"},{"lineNumber":30,"author":{"gitId":"Stratostorm"},"content":"            String[] splitByDate \u003d argsAndTags.getFirst().split(\"/at\", -1);"},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":"            if (getArguments().equals(splitByDate[0])) {"},{"lineNumber":32,"author":{"gitId":"Stratostorm"},"content":"                throw new DukeException(\"I apologize, please use \u0027/at\u0027 argument to specify time for \u0027event\u0027.\");"},{"lineNumber":33,"author":{"gitId":"Stratostorm"},"content":"            } else {"},{"lineNumber":34,"author":{"gitId":"Stratostorm"},"content":"                Task newTask \u003d new Event(splitByDate[0].strip(), splitByDate[1].strip(), argsAndTags.getSecond());"},{"lineNumber":35,"author":{"gitId":"Stratostorm"},"content":"                taskList.add(newTask);"},{"lineNumber":36,"author":{"gitId":"Stratostorm"},"content":"                storage.addToFile(newTask);"},{"lineNumber":37,"author":{"gitId":"Stratostorm"},"content":"                return \"Added to to-do list: \\n\" + newTask;"},{"lineNumber":38,"author":{"gitId":"Stratostorm"},"content":"            }"},{"lineNumber":39,"author":{"gitId":"Stratostorm"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Stratostorm"},"content":"}"}],"authorContributionMap":{"Stratostorm":41}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"import duke.Ui;"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"public class FindCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"    public FindCommand(String arguments) {"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"        super(arguments);"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"    public String execute(Storage storage, Ui ui, TaskList taskList) throws DukeException {"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"        String result \u003d \"Here\u0027s what I found:\";"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"            if (taskList.get(i).getTask().contains(getArguments())) {"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"                result \u003d result + \"\\n\" + (i + 1) + \". \" + taskList.get(i);"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"            }"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"        return result;"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"}"}],"authorContributionMap":{"Stratostorm":23}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"import duke.TaskList;"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":" * Represents a \u0027list\u0027 command."},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":" * Lists out all the tasks currently in the task list."},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"public class ListCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"    public ListCommand(String arguments) {"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"        super(arguments);"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"    public String execute(Storage storage, Ui ui, TaskList taskList) {"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"        String result \u003d \"This is your to-do list:\";"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"            result \u003d result + \"\\n\" + ui.print((i + 1) + \". \" + taskList.get(i));"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"        return result;"},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"}"}],"authorContributionMap":{"Stratostorm":25}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import duke.DukeException;"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"import duke.Storage;"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import duke.TaskList;"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"import duke.Ui;"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"import duke.tag.Tag;"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"import duke.task.Task;"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"import duke.task.Todo;"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"import duke.util.Tuple;"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":" * Represents a \u0027todo\u0027 command."},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":" * Adds a new todo to the task list."},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":" */"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"public class TodoCommand extends Command {"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"    public TodoCommand(String arguments) {"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"        super(arguments);"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"    public String execute(Storage storage, Ui ui, TaskList taskList) throws DukeException {"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"        if (getArguments().isBlank()) {"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":"            throw new DukeException(\"I apologize, please input description for \u0027todo\u0027.\");"},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":"        } else {"},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":"            Tuple\u003cString, ArrayList\u003cTag\u003e\u003e argsAndTags \u003d Tag.retrieveTags(getArguments());"},{"lineNumber":30,"author":{"gitId":"Stratostorm"},"content":"            Task newTask \u003d new Todo(argsAndTags.getFirst(), argsAndTags.getSecond());"},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":"            taskList.add(newTask);"},{"lineNumber":32,"author":{"gitId":"Stratostorm"},"content":"            storage.addToFile(newTask);"},{"lineNumber":33,"author":{"gitId":"Stratostorm"},"content":"            return \"Added to to-do list: \\n\" + newTask;"},{"lineNumber":34,"author":{"gitId":"Stratostorm"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Stratostorm"},"content":"}"}],"authorContributionMap":{"Stratostorm":36}},{"path":"src/main/java/duke/tag/Tag.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke.tag;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"import java.util.Iterator;"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"import duke.util.Tuple;"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"public class Tag {"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"    private String title;"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"    public Tag(String title) {"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"        this.title \u003d title;"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"    public String getTitle() {"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"        return this.title;"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"     * Splits an argument into an array of 2 elements, with the 1st element containing arguments"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"     * and 2nd element containing tags. If the argument contains no tags, it will return an array"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"     * with only one element."},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"     * @param arguments the arguments to be split"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"     * @return String[] of 2 elements if there are tags or 1 element without."},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":"    public static String[] splitTag(String arguments) {"},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":"        return arguments.split(\"(?\u003d#)\", 2);"},{"lineNumber":30,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":32,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"Stratostorm"},"content":"     * Converts a String containing any number of tags into an ArrayList of Tag objects."},{"lineNumber":34,"author":{"gitId":"Stratostorm"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"Stratostorm"},"content":"     * @param tagString the String to be processed"},{"lineNumber":36,"author":{"gitId":"Stratostorm"},"content":"     * @return ArrayList containing all the Tags in the String."},{"lineNumber":37,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"Stratostorm"},"content":"    public static ArrayList\u003cTag\u003e processTags(String tagString) {"},{"lineNumber":39,"author":{"gitId":"Stratostorm"},"content":"        String[] tagArray \u003d tagString.split(\"#\");"},{"lineNumber":40,"author":{"gitId":"Stratostorm"},"content":"        ArrayList\u003cTag\u003e tags \u003d new ArrayList\u003c\u003e();"},{"lineNumber":41,"author":{"gitId":"Stratostorm"},"content":"        for (int i \u003d 1; i \u003c tagArray.length; i++) {"},{"lineNumber":42,"author":{"gitId":"Stratostorm"},"content":"            tags.add(new Tag(tagArray[i].strip()));"},{"lineNumber":43,"author":{"gitId":"Stratostorm"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"Stratostorm"},"content":"        return tags;"},{"lineNumber":45,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":47,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"Stratostorm"},"content":"     * Isolates and processes the tags from the given arguments."},{"lineNumber":49,"author":{"gitId":"Stratostorm"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"Stratostorm"},"content":"     * @param arguments the String to be processed."},{"lineNumber":51,"author":{"gitId":"Stratostorm"},"content":"     * @return Tuple containing the remaining arguments as a String and any Tags in an ArrayList."},{"lineNumber":52,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"Stratostorm"},"content":"    public static Tuple\u003cString, ArrayList\u003cTag\u003e\u003e retrieveTags(String arguments) {"},{"lineNumber":54,"author":{"gitId":"Stratostorm"},"content":"        String[] splitByTag \u003d splitTag(arguments);"},{"lineNumber":55,"author":{"gitId":"Stratostorm"},"content":"        ArrayList\u003cTag\u003e tags;"},{"lineNumber":56,"author":{"gitId":"Stratostorm"},"content":"        if (splitByTag.length \u003e 1) {"},{"lineNumber":57,"author":{"gitId":"Stratostorm"},"content":"            assert splitByTag.length \u003d\u003d 2;"},{"lineNumber":58,"author":{"gitId":"Stratostorm"},"content":"            tags \u003d processTags(splitByTag[1]);"},{"lineNumber":59,"author":{"gitId":"Stratostorm"},"content":"        } else {"},{"lineNumber":60,"author":{"gitId":"Stratostorm"},"content":"            tags \u003d new ArrayList\u003c\u003e();"},{"lineNumber":61,"author":{"gitId":"Stratostorm"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"Stratostorm"},"content":"        return new Tuple\u003c\u003e(splitByTag[0], tags);"},{"lineNumber":63,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":65,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"Stratostorm"},"content":"     * Converts an ArrayList of Tags into a string format for storage to a file"},{"lineNumber":67,"author":{"gitId":"Stratostorm"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"Stratostorm"},"content":"     * @param tags the ArrayList to be converted"},{"lineNumber":69,"author":{"gitId":"Stratostorm"},"content":"     * @return a String representing the ArrayList of Tags"},{"lineNumber":70,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"Stratostorm"},"content":"    public static String tagListToString(ArrayList\u003cTag\u003e tags) {"},{"lineNumber":72,"author":{"gitId":"Stratostorm"},"content":"        String result \u003d \"\";"},{"lineNumber":73,"author":{"gitId":"Stratostorm"},"content":"        Iterator\u003cTag\u003e iterator \u003d tags.iterator();"},{"lineNumber":74,"author":{"gitId":"Stratostorm"},"content":"        while (iterator.hasNext()) {"},{"lineNumber":75,"author":{"gitId":"Stratostorm"},"content":"            result \u003d result + \"#\" + iterator.next().getTitle() + \" \";"},{"lineNumber":76,"author":{"gitId":"Stratostorm"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"Stratostorm"},"content":"        return result;"},{"lineNumber":78,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"Stratostorm"},"content":"}"}],"authorContributionMap":{"Stratostorm":79}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import duke.tag.Tag;"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":" * Represents a task with a specified deadline."},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":" */"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"public class Deadline extends Task {"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"    private static final int DATE_LENGTH \u003d 10;"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"    private static final String DATE_FORMAT \u003d \"d MMM yyyy\";"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"    protected LocalDate date;"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"    protected String time;"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"    public Deadline(String task, String by, ArrayList\u003cTag\u003e tags) {"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"        super(task, tags);"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"        this.date \u003d LocalDate.parse(by.substring(0, DATE_LENGTH));"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"        this.time \u003d by.substring(DATE_LENGTH);"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"    public Deadline(boolean done, String task, String by, ArrayList\u003cTag\u003e tags) {"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"        super(task, tags);"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"        this.isDone \u003d done;"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":"        this.date \u003d LocalDate.parse(by.substring(0, DATE_LENGTH));"},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":"        this.time \u003d by.substring(DATE_LENGTH);"},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"Stratostorm"},"content":"     * Returns a String representation of this Deadline for storage to a file."},{"lineNumber":33,"author":{"gitId":"Stratostorm"},"content":"     * @return String representation"},{"lineNumber":34,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"Stratostorm"},"content":"    public String toFileString() {"},{"lineNumber":36,"author":{"gitId":"Stratostorm"},"content":"        return \"D | \" + this.isDone + \" | \" + this.task + \" | \" + this.date + this.time"},{"lineNumber":37,"author":{"gitId":"Stratostorm"},"content":"                + \" | \" + Tag.tagListToString(this.tags);"},{"lineNumber":38,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":40,"author":{"gitId":"Stratostorm"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"Stratostorm"},"content":"    public String toString() {"},{"lineNumber":42,"author":{"gitId":"Stratostorm"},"content":"        return \"[D]\" + super.toString() + \" (By: \" + this.date.format(DateTimeFormatter.ofPattern(DATE_FORMAT)) + \" \""},{"lineNumber":43,"author":{"gitId":"Stratostorm"},"content":"                + this.time + \")\";"},{"lineNumber":44,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Stratostorm"},"content":"}"}],"authorContributionMap":{"Stratostorm":45}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import duke.tag.Tag;"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":" * Represents an event task with a date"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"public class Event extends Task {"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"    protected String at;"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"    public Event(String task, String at, ArrayList\u003cTag\u003e tags) {"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"        super(task, tags);"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"        this.at \u003d at;"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"    public Event(boolean done, String task, String at, ArrayList\u003cTag\u003e tags) {"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"        super(task, tags);"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"        this.at \u003d at;"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"        this.isDone \u003d done;"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"     * Returns a String representation of this Event for storage to a file."},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"     * @return String representation"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":"    public String toFileString() {"},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":"        return \"E | \" + this.isDone + \" | \" + this.task + \" | \" + this.at"},{"lineNumber":30,"author":{"gitId":"Stratostorm"},"content":"                + \" | \" + Tag.tagListToString(this.tags);"},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":33,"author":{"gitId":"Stratostorm"},"content":"    @Override"},{"lineNumber":34,"author":{"gitId":"Stratostorm"},"content":"    public String toString() {"},{"lineNumber":35,"author":{"gitId":"Stratostorm"},"content":"        return \"[E]\" + super.toString() + \" (At: \" + this.at + \")\";"},{"lineNumber":36,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Stratostorm"},"content":"}"}],"authorContributionMap":{"Stratostorm":37}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import duke.tag.Tag;"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"public abstract class Task {"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"    protected String task;"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"    protected boolean isDone;"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"    protected ArrayList\u003cTag\u003e tags;"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"    Task(String task, ArrayList\u003cTag\u003e tags) {"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"        this.task \u003d task;"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"        this.isDone \u003d false;"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"        this.tags \u003d tags;"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"    public void doTask() {"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"        this.isDone \u003d true;"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"    public String getTask() {"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"        return this.task;"},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"    public abstract String toFileString();"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"Stratostorm"},"content":"        if (this.isDone) {"},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":"            return \"[X] \" + this.task + \" \" + Tag.tagListToString(tags);"},{"lineNumber":32,"author":{"gitId":"Stratostorm"},"content":"        } else {"},{"lineNumber":33,"author":{"gitId":"Stratostorm"},"content":"            return \"[ ] \" + this.task + \" \" + Tag.tagListToString(tags);"},{"lineNumber":34,"author":{"gitId":"Stratostorm"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Stratostorm"},"content":"}"}],"authorContributionMap":{"Stratostorm":36}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import duke.tag.Tag;"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":" * Representation of most basic task with just a task description"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"public class Todo extends Task {"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"    public Todo(String task, ArrayList\u003cTag\u003e tags) {"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"        super(task, tags);"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"    public Todo(boolean done, String task, ArrayList\u003cTag\u003e tags) {"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"        super(task, tags);"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"        this.isDone \u003d done;"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"     * Returns a String representation of this Todo for storage to a file."},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"     * @return String representation"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"    public String toFileString() {"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"        return \"T | \" + this.isDone + \" | \" + this.task"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"                + \" | \" + Tag.tagListToString(this.tags);"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":29,"author":{"gitId":"Stratostorm"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"Stratostorm"},"content":"    public String toString() {"},{"lineNumber":31,"author":{"gitId":"Stratostorm"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":32,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Stratostorm"},"content":"}"}],"authorContributionMap":{"Stratostorm":33}},{"path":"src/main/java/duke/util/Tuple.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke.util;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":" * Utility class to represent and contain a pair of any 2 objects."},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"public class Tuple\u003cS, T\u003e {"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"    private final S first;"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"    private final T second;"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"     * Constructs a tuple with the 2 given objects."},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"     * @param first an object of type S"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"     * @param second an object of type T"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"    public Tuple(S first, T second) {"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"        this.first \u003d first;"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"        this.second \u003d second;"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"    public S getFirst() {"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"        return this.first;"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"    public T getSecond() {"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"        return this.second;"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":"}"}],"authorContributionMap":{"Stratostorm":27}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@darktheme.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"  \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"    \u003cLabel fx:id\u003d\"dialog\" stylesheets\u003d\"@darktheme.css\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"  \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"  \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"  \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"Stratostorm":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@darktheme.css\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"  \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@darktheme.css\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"      \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" stylesheets\u003d\"@darktheme.css\" /\u003e"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"      \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"  \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"Stratostorm":19}},{"path":"src/test/java/duke/Tag/TagTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke.Tag;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import static duke.tag.Tag.splitTag;"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"import duke.tag.Tag;"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"public class TagTest {"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"    public void splitTag_simpleInput_stringArrayReturned() {"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"        String[] result \u003d splitTag(\"buy books #important #ohno\");"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"        assertEquals(\"buy books \", result[0]);"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"        assertEquals(\"#important #ohno\", result[1]);"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"    public void processTags_simpleInput_correctListReturned() {"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"        ArrayList\u003cTag\u003e expectedResult \u003d new ArrayList\u003c\u003e();"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"        expectedResult.add(new Tag(\"nice\"));"},{"lineNumber":23,"author":{"gitId":"Stratostorm"},"content":"        expectedResult.add(new Tag(\"sweet\"));"},{"lineNumber":24,"author":{"gitId":"Stratostorm"},"content":"        assertEquals(expectedResult.get(0).getTitle(), Tag.processTags(\"#nice #sweet\").get(0).getTitle());"},{"lineNumber":25,"author":{"gitId":"Stratostorm"},"content":"        assertEquals(expectedResult.get(1).getTitle(), Tag.processTags(\"#nice #sweet\").get(1).getTitle());"},{"lineNumber":26,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Stratostorm"},"content":"}"}],"authorContributionMap":{"Stratostorm":27}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import duke.tag.Tag;"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"public class DeadlineTest {"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"    /*"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"    public void fileString_correctDateNoTime_outputCorrectly() {"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"        assertEquals(\"D | false | test | 2020-01-27 |\", new Deadline(\"test\", \"2020-01-27\", new ArrayList\u003cTag\u003e()).toFileString());"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"    public void fileString_correctDateWithTime_outputCorrectly() {"},{"lineNumber":19,"author":{"gitId":"Stratostorm"},"content":"        assertEquals(\"D | false | test | 2020-01-27 0800 | \", new Deadline(\"test\", \"2020-01-27 0800\", new ArrayList\u003cTag\u003e()).toFileString());"},{"lineNumber":20,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Stratostorm"},"content":"    */"},{"lineNumber":22,"author":{"gitId":"Stratostorm"},"content":"}"}],"authorContributionMap":{"Stratostorm":22}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"public class TodoTest {"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"    /*"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"    public void fileString_simpleInput_stringReturned() {"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"        assertEquals(\"T | false | buy books\", new Todo(\"buy books\").toFileString());"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"    */"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":""},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"}"}],"authorContributionMap":{"Stratostorm":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Stratostorm"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"Stratostorm"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"Stratostorm"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"Stratostorm"},"content":"list"},{"lineNumber":5,"author":{"gitId":"Stratostorm"},"content":"todo join sports club"},{"lineNumber":6,"author":{"gitId":"Stratostorm"},"content":"todo borrow book"},{"lineNumber":7,"author":{"gitId":"Stratostorm"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"Stratostorm"},"content":"list"},{"lineNumber":9,"author":{"gitId":"Stratostorm"},"content":"done 4"},{"lineNumber":10,"author":{"gitId":"Stratostorm"},"content":"deadline return book /by Sunday"},{"lineNumber":11,"author":{"gitId":"Stratostorm"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":12,"author":{"gitId":"Stratostorm"},"content":"list"},{"lineNumber":13,"author":{"gitId":"Stratostorm"},"content":"todo"},{"lineNumber":14,"author":{"gitId":"Stratostorm"},"content":"event"},{"lineNumber":15,"author":{"gitId":"Stratostorm"},"content":"deadline"},{"lineNumber":16,"author":{"gitId":"Stratostorm"},"content":"deadline notime"},{"lineNumber":17,"author":{"gitId":"Stratostorm"},"content":"event notime"},{"lineNumber":18,"author":{"gitId":"Stratostorm"},"content":"bye"}],"authorContributionMap":{"Stratostorm":18}}]
