[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"public class Deadline extends Task{"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"    private String info;"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"    public Deadline(String[] taskDetails) throws ArrayIndexOutOfBoundsException,IllegalArgumentException{"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"        super(taskDetails);"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"        checkTask();"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"        buildInfo();"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":""},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"    private void buildInfo(){"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"        String output \u003d \"\";"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":"        int i \u003d 1;"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":"        while(!taskDetails[i].equals(\"/by\")) {"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":"            output +\u003d taskDetails[i] + \" \";"},{"lineNumber":14,"author":{"gitId":"IanCKW"},"content":"            i++;"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"        i++;"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"        output \u003d  output + \"(at: \" ;"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"        while(i \u003c taskDetails.length){"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"            output +\u003d taskDetails[i] + \" \";"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"            i++;"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"        info \u003d output + \")\";"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"    private void checkTask() throws  ArrayIndexOutOfBoundsException, IllegalArgumentException{"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":"        if (taskDetails.length \u003c 2) throw new ArrayIndexOutOfBoundsException(\"☹ OOPS!!! The description of a Deadline cannot be empty.\");"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"        else{"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"            for(String s: taskDetails){"},{"lineNumber":28,"author":{"gitId":"IanCKW"},"content":"                if (s.equals(\"/by\")) return;"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"IanCKW"},"content":"            throw new IllegalArgumentException(\"☹ OOPS!!! The Deadline needs an \u0027/by\u0027 time.\");"},{"lineNumber":31,"author":{"gitId":"IanCKW"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"IanCKW"},"content":""},{"lineNumber":34,"author":{"gitId":"IanCKW"},"content":"    public String printNew(){"},{"lineNumber":35,"author":{"gitId":"IanCKW"},"content":"        return \"[D][ ] \" + info;"},{"lineNumber":36,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"IanCKW"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"IanCKW"},"content":"    public String toString(){"},{"lineNumber":39,"author":{"gitId":"IanCKW"},"content":"        return info;"},{"lineNumber":40,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"IanCKW"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"IanCKW"},"content":"    public String type(){"},{"lineNumber":43,"author":{"gitId":"IanCKW"},"content":"        return \"D\";"},{"lineNumber":44,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"IanCKW"},"content":"}"}],"authorContributionMap":{"IanCKW":45}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"import java.util.*;"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"    public List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"    public static String line \u003d \"____________________________________________________________\";"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"    public Duke(){"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":""},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"    public void doTask (int taskNum){"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"        if(list.size()\u003c1 ) throw new ArrayIndexOutOfBoundsException(\"You have no tasks to do!\");"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":"        if(taskNum \u003c 1 || taskNum \u003e list.size() ) throw new ArrayIndexOutOfBoundsException(\"That task does not exist\");"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":"        Task curr \u003d list.get(taskNum - 1);"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":"        curr.done \u003d true;"},{"lineNumber":14,"author":{"gitId":"IanCKW"},"content":"        System.out.format(Duke.line + \"\\n Nice! I\u0027ve marked this task as done: \" +"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"                \"\\n [%s] [%s] %s\" +"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"                \"\\n\" + Duke.line,curr.type(),curr.status(),curr.toString());"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":""},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"    public void delete(int num) throws ArrayIndexOutOfBoundsException{"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"        if(list.size()\u003c1) throw new ArrayIndexOutOfBoundsException(\"You have no tasks to delete!\");"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"        if(num \u003c 1 || num \u003e list.size() ) throw new ArrayIndexOutOfBoundsException(\"That task does not exist\");"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"        Task curr \u003d list.get(num-1);"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"        list.remove(num-1);"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"        String deleted \u003d \"[\"+ curr.type() +\"]\"+\"[\" + curr.status() +\"] \"+curr.toString();"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":"        System.out.format(\"%s\\nNoted. I\u0027ve removed this task: \\n %s\\nNow you have %d tasks in the list\\n%s\", line, deleted ,list.size(),line);"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":""},{"lineNumber":28,"author":{"gitId":"IanCKW"},"content":"    public void printTasks() throws ArrayIndexOutOfBoundsException {"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":"        if(list.size()\u003c1) throw new ArrayIndexOutOfBoundsException(\"You have no tasks!\");"},{"lineNumber":30,"author":{"gitId":"IanCKW"},"content":"        System.out.println(line);"},{"lineNumber":31,"author":{"gitId":"IanCKW"},"content":"        int i \u003d 1;"},{"lineNumber":32,"author":{"gitId":"IanCKW"},"content":"        for(Task s: this.list){"},{"lineNumber":33,"author":{"gitId":"IanCKW"},"content":"            System.out.format(\"%d. [%s] [%s] %s \\n\", i, s.type(), s.status() ,s.toString());"},{"lineNumber":34,"author":{"gitId":"IanCKW"},"content":"            i++;"},{"lineNumber":35,"author":{"gitId":"IanCKW"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"IanCKW"},"content":"        System.out.println(line);"},{"lineNumber":37,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"IanCKW"},"content":""},{"lineNumber":39,"author":{"gitId":"IanCKW"},"content":"    public void addTask(Task t){"},{"lineNumber":40,"author":{"gitId":"IanCKW"},"content":"        list.add(t);"},{"lineNumber":41,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"IanCKW"},"content":""},{"lineNumber":43,"author":{"gitId":"IanCKW"},"content":"    public void handleTask(String[] currLine) throws Exception {"},{"lineNumber":44,"author":{"gitId":"IanCKW"},"content":"        String command \u003d currLine[0];"},{"lineNumber":45,"author":{"gitId":"IanCKW"},"content":"        if (command.equals(\"list\")) this.printTasks();"},{"lineNumber":46,"author":{"gitId":"IanCKW"},"content":"        else if (command.equals(\"delete\")) this.delete(Integer.parseInt(currLine[1]));"},{"lineNumber":47,"author":{"gitId":"IanCKW"},"content":"        else if(command.equals(\"done\")) this.doTask(Integer.parseInt(currLine[1]));"},{"lineNumber":48,"author":{"gitId":"IanCKW"},"content":"        else{"},{"lineNumber":49,"author":{"gitId":"IanCKW"},"content":"            String output \u003d \"\";"},{"lineNumber":50,"author":{"gitId":"IanCKW"},"content":"            output +\u003d line + \"\\n\" + \" Got it. I\u0027ve added this task: \\n\";"},{"lineNumber":51,"author":{"gitId":"IanCKW"},"content":"            Task t;"},{"lineNumber":52,"author":{"gitId":"IanCKW"},"content":"            if (command.equals(\"todo\")) t \u003d new Todo(currLine);"},{"lineNumber":53,"author":{"gitId":"IanCKW"},"content":"            else if (command.equals(\"deadline\")) t \u003d new Deadline(currLine);"},{"lineNumber":54,"author":{"gitId":"IanCKW"},"content":"            else if(command.equals(\"event\"))t \u003d new Event(currLine);"},{"lineNumber":55,"author":{"gitId":"IanCKW"},"content":"            else{"},{"lineNumber":56,"author":{"gitId":"IanCKW"},"content":"                throw new Exception(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":57,"author":{"gitId":"IanCKW"},"content":"            }"},{"lineNumber":58,"author":{"gitId":"IanCKW"},"content":"            list.add(t);"},{"lineNumber":59,"author":{"gitId":"IanCKW"},"content":"            output +\u003d \"  \"+t.printNew();"},{"lineNumber":60,"author":{"gitId":"IanCKW"},"content":"            output +\u003d \"\\n Now you have \"+list.size() + \" tasks in the list\" + \"\\n\" + line;"},{"lineNumber":61,"author":{"gitId":"IanCKW"},"content":"            System.out.println(output);"},{"lineNumber":62,"author":{"gitId":"IanCKW"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"IanCKW"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {"},{"lineNumber":66,"author":{"gitId":"IanCKW"},"content":"        System.out.println(Duke.line + \"\\n\""},{"lineNumber":67,"author":{"gitId":"IanCKW"},"content":"                +\"Hello! I\u0027m Duke\\n\""},{"lineNumber":68,"author":{"gitId":"IanCKW"},"content":"                +\"What can I do for you?\\n\""},{"lineNumber":69,"author":{"gitId":"IanCKW"},"content":"                + Duke.line);"},{"lineNumber":70,"author":{"gitId":"IanCKW"},"content":"        Duke D \u003d new Duke();"},{"lineNumber":71,"author":{"gitId":"IanCKW"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":72,"author":{"gitId":"IanCKW"},"content":"        String scannedLine \u003d sc.nextLine();"},{"lineNumber":73,"author":{"gitId":"IanCKW"},"content":"        String[] lineList \u003d scannedLine.split(\" \");"},{"lineNumber":74,"author":{"gitId":"IanCKW"},"content":"        String currString \u003d lineList[0];"},{"lineNumber":75,"author":{"gitId":"IanCKW"},"content":"        while (!currString.equals(\"bye\")) {"},{"lineNumber":76,"author":{"gitId":"IanCKW"},"content":"            try{"},{"lineNumber":77,"author":{"gitId":"IanCKW"},"content":"                D.handleTask(lineList);"},{"lineNumber":78,"author":{"gitId":"IanCKW"},"content":"            }"},{"lineNumber":79,"author":{"gitId":"IanCKW"},"content":"            catch (Exception e){"},{"lineNumber":80,"author":{"gitId":"IanCKW"},"content":"                    System.out.format(\"%s\\n☹ %s\\n%s\",Duke.line,e.getMessage(),Duke.line);"},{"lineNumber":81,"author":{"gitId":"IanCKW"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"IanCKW"},"content":"            finally{"},{"lineNumber":83,"author":{"gitId":"IanCKW"},"content":"                scannedLine \u003d sc.nextLine();"},{"lineNumber":84,"author":{"gitId":"IanCKW"},"content":"                lineList \u003d scannedLine.split(\" \");"},{"lineNumber":85,"author":{"gitId":"IanCKW"},"content":"                currString \u003d lineList[0];"},{"lineNumber":86,"author":{"gitId":"IanCKW"},"content":"            }"},{"lineNumber":87,"author":{"gitId":"IanCKW"},"content":"        }"},{"lineNumber":88,"author":{"gitId":"IanCKW"},"content":"        System.out.println(line + \"\\n\" + \" Bye. Hope to see you again soon!\"+\"\\n\" + line);"},{"lineNumber":89,"author":{"gitId":"IanCKW"},"content":""},{"lineNumber":90,"author":{"gitId":"IanCKW"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":4,"IanCKW":88}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"public class Event extends Task{"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"    private String info;"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"    public Event(String[] taskDetails) throws ArrayIndexOutOfBoundsException, IllegalArgumentException {"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"        super(taskDetails);"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"        checkTask();"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"        buildInfo();"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"    private void buildInfo(){"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"        String output \u003d \"\";"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"        int i \u003d 1;"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":"        while(!taskDetails[i].equals(\"/at\")) {"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":"            output +\u003d taskDetails[i] + \" \";"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":"            i++;"},{"lineNumber":14,"author":{"gitId":"IanCKW"},"content":"        }"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"        i++;"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"        output \u003d  output + \"(at: \" ;"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"        while(i \u003c taskDetails.length){"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"            output +\u003d taskDetails[i] + \" \";"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"            i++;"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"        info \u003d output + \")\";"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"    private void checkTask() throws  ArrayIndexOutOfBoundsException, IllegalArgumentException{"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"        if (taskDetails.length \u003c 2) throw new ArrayIndexOutOfBoundsException(\"☹ OOPS!!! The description of a Event cannot be empty.\");"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":"        else{"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"            for(String s: taskDetails){"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"                if (s.equals(\"/at\")) return;"},{"lineNumber":28,"author":{"gitId":"IanCKW"},"content":"            }"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":"            throw new IllegalArgumentException(\"☹ OOPS!!! The Event needs an \u0027/at\u0027 time.\");"},{"lineNumber":30,"author":{"gitId":"IanCKW"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"IanCKW"},"content":"    public String printNew(){"},{"lineNumber":33,"author":{"gitId":"IanCKW"},"content":"        return \"[E][ ] \" + info;"},{"lineNumber":34,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"IanCKW"},"content":"    public String toString(){"},{"lineNumber":36,"author":{"gitId":"IanCKW"},"content":"        return info;"},{"lineNumber":37,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"IanCKW"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"IanCKW"},"content":"    public String type(){"},{"lineNumber":40,"author":{"gitId":"IanCKW"},"content":"        return \"E\";"},{"lineNumber":41,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"IanCKW"},"content":"}"}],"authorContributionMap":{"IanCKW":42}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"    public String type \u003d \"\";"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"    boolean done \u003d false;"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"    String[] taskDetails;"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"    public Task(String[] taskDetails){"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"        this.taskDetails \u003d taskDetails;"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"    public String status(){"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"        String status \u003d done ?  \"X\":  \" \";"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"        return status;"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":"    public String printNew(){"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":"        return toString();"},{"lineNumber":14,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":""},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"    public String type(){"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"        return \"task\";"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"}"}],"authorContributionMap":{"IanCKW":19}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"public class Todo extends Task{"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"    private String info;"},{"lineNumber":3,"author":{"gitId":"IanCKW"},"content":"    public Todo(String[] taskDetails) throws ArrayIndexOutOfBoundsException{"},{"lineNumber":4,"author":{"gitId":"IanCKW"},"content":"        super(taskDetails);"},{"lineNumber":5,"author":{"gitId":"IanCKW"},"content":"        checkTask();"},{"lineNumber":6,"author":{"gitId":"IanCKW"},"content":"        buildInfo();"},{"lineNumber":7,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"IanCKW"},"content":"    private void checkTask() throws  ArrayIndexOutOfBoundsException{"},{"lineNumber":9,"author":{"gitId":"IanCKW"},"content":"        if (this.taskDetails.length \u003c 2) throw new ArrayIndexOutOfBoundsException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":10,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"IanCKW"},"content":"    private void buildInfo(){"},{"lineNumber":12,"author":{"gitId":"IanCKW"},"content":"        String output \u003d \"\";"},{"lineNumber":13,"author":{"gitId":"IanCKW"},"content":"        for(String s: taskDetails ){"},{"lineNumber":14,"author":{"gitId":"IanCKW"},"content":"            output +\u003d s + \" \";"},{"lineNumber":15,"author":{"gitId":"IanCKW"},"content":"        }"},{"lineNumber":16,"author":{"gitId":"IanCKW"},"content":"        info \u003d output;"},{"lineNumber":17,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"IanCKW"},"content":"    public String printNew(){"},{"lineNumber":19,"author":{"gitId":"IanCKW"},"content":"        return \"[T][ ] \" + info;"},{"lineNumber":20,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"IanCKW"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"IanCKW"},"content":"    public String toString(){"},{"lineNumber":23,"author":{"gitId":"IanCKW"},"content":"        return info;"},{"lineNumber":24,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"IanCKW"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"IanCKW"},"content":"    public String type(){"},{"lineNumber":27,"author":{"gitId":"IanCKW"},"content":"        return \"T\";"},{"lineNumber":28,"author":{"gitId":"IanCKW"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"IanCKW"},"content":""},{"lineNumber":30,"author":{"gitId":"IanCKW"},"content":"}"}],"authorContributionMap":{"IanCKW":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"IanCKW"},"content":"deadline do homework /by no idea :-p"},{"lineNumber":2,"author":{"gitId":"IanCKW"},"content":"bye"}],"authorContributionMap":{"IanCKW":2}}]
