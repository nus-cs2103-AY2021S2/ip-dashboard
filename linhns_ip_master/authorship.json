[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linhns"},"content":"public class Deadline extends Task{"},{"lineNumber":2,"author":{"gitId":"linhns"},"content":"    private String dueDates;"},{"lineNumber":3,"author":{"gitId":"linhns"},"content":"    public Deadline(String task, String dueDates) {"},{"lineNumber":4,"author":{"gitId":"linhns"},"content":"        super(task);"},{"lineNumber":5,"author":{"gitId":"linhns"},"content":"        this.dueDates \u003d dueDates;"},{"lineNumber":6,"author":{"gitId":"linhns"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"linhns"},"content":""},{"lineNumber":8,"author":{"gitId":"linhns"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"linhns"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"linhns"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + dueDates + \")\";"},{"lineNumber":11,"author":{"gitId":"linhns"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"linhns"},"content":"}"}],"authorContributionMap":{"linhns":12}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linhns"},"content":"import java.util.*;"},{"lineNumber":2,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":3,"author":{"gitId":"linhns"},"content":"    public static void main(String[] args) throws DukeException{"},{"lineNumber":4,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":5,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":6,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":7,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":10,"author":{"gitId":"linhns"},"content":"        String sep \u003d \"****************************\\n\";"},{"lineNumber":11,"author":{"gitId":"linhns"},"content":"        System.out.println(sep);"},{"lineNumber":12,"author":{"gitId":"linhns"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":13,"author":{"gitId":"linhns"},"content":"        ArrayList\u003cTask\u003e taskLst \u003d new ArrayList\u003c\u003e();"},{"lineNumber":14,"author":{"gitId":"linhns"},"content":"        while(true) {"},{"lineNumber":15,"author":{"gitId":"linhns"},"content":"            try {"},{"lineNumber":16,"author":{"gitId":"linhns"},"content":"                String str \u003d sc.nextLine();"},{"lineNumber":17,"author":{"gitId":"linhns"},"content":"                Task task \u003d null;"},{"lineNumber":18,"author":{"gitId":"linhns"},"content":"                String[] components \u003d str.split(\" \");"},{"lineNumber":19,"author":{"gitId":"linhns"},"content":"                if(str.equals(\"bye\")) {"},{"lineNumber":20,"author":{"gitId":"linhns"},"content":"                    System.out.println(\"Bye. Hope to see you again soon!\");"},{"lineNumber":21,"author":{"gitId":"linhns"},"content":"                    break;"},{"lineNumber":22,"author":{"gitId":"linhns"},"content":"                }"},{"lineNumber":23,"author":{"gitId":"linhns"},"content":"                else if(str.equals(\"list\")) {"},{"lineNumber":24,"author":{"gitId":"linhns"},"content":"                    int counter \u003d 1;"},{"lineNumber":25,"author":{"gitId":"linhns"},"content":"                    for(Task t: taskLst) {"},{"lineNumber":26,"author":{"gitId":"linhns"},"content":"                        System.out.println(counter + \".\" + t.toString());"},{"lineNumber":27,"author":{"gitId":"linhns"},"content":"                        counter++;"},{"lineNumber":28,"author":{"gitId":"linhns"},"content":"                    }"},{"lineNumber":29,"author":{"gitId":"linhns"},"content":"                }"},{"lineNumber":30,"author":{"gitId":"linhns"},"content":"                else if (components[0].equals(\"done\")) {"},{"lineNumber":31,"author":{"gitId":"linhns"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done: \");"},{"lineNumber":32,"author":{"gitId":"linhns"},"content":"                    int index \u003d Integer.parseInt(components[1]) - 1;"},{"lineNumber":33,"author":{"gitId":"linhns"},"content":"                    taskLst.get(index).markDone();"},{"lineNumber":34,"author":{"gitId":"linhns"},"content":"                    System.out.println(\"  \" + taskLst.get(index).toString());"},{"lineNumber":35,"author":{"gitId":"linhns"},"content":"                }"},{"lineNumber":36,"author":{"gitId":"linhns"},"content":"                else {"},{"lineNumber":37,"author":{"gitId":"linhns"},"content":"                    if(components[0].equals(\"deadline\")) {"},{"lineNumber":38,"author":{"gitId":"linhns"},"content":"                        StringBuilder desc \u003d new StringBuilder(), time \u003d new StringBuilder();"},{"lineNumber":39,"author":{"gitId":"linhns"},"content":"                        int i \u003d 1;"},{"lineNumber":40,"author":{"gitId":"linhns"},"content":"                        while(!components[i].equals(\"/by\")) {"},{"lineNumber":41,"author":{"gitId":"linhns"},"content":"                            desc.append(components[i] + \" \");"},{"lineNumber":42,"author":{"gitId":"linhns"},"content":"                            i++;"},{"lineNumber":43,"author":{"gitId":"linhns"},"content":"                        }"},{"lineNumber":44,"author":{"gitId":"linhns"},"content":"                        i++;"},{"lineNumber":45,"author":{"gitId":"linhns"},"content":"                        while(i \u003c components.length) {"},{"lineNumber":46,"author":{"gitId":"linhns"},"content":"                            time.append(components[i] + \" \");"},{"lineNumber":47,"author":{"gitId":"linhns"},"content":"                            i++;"},{"lineNumber":48,"author":{"gitId":"linhns"},"content":"                        }"},{"lineNumber":49,"author":{"gitId":"linhns"},"content":"                        time.deleteCharAt(time.length() - 1);"},{"lineNumber":50,"author":{"gitId":"linhns"},"content":"                        task \u003d new Deadline(desc.toString(), time.toString());"},{"lineNumber":51,"author":{"gitId":"linhns"},"content":"                        taskLst.add(task);"},{"lineNumber":52,"author":{"gitId":"linhns"},"content":"                    }"},{"lineNumber":53,"author":{"gitId":"linhns"},"content":"                    else if (components[0].equals(\"todo\")) {"},{"lineNumber":54,"author":{"gitId":"linhns"},"content":"                        StringBuilder desc \u003d new StringBuilder();"},{"lineNumber":55,"author":{"gitId":"linhns"},"content":"                        if(components.length \u003c\u003d 1) throw new DukeException(\"The description of a todo cannot be empty.\");"},{"lineNumber":56,"author":{"gitId":"linhns"},"content":"                        int i \u003d 1;"},{"lineNumber":57,"author":{"gitId":"linhns"},"content":"                        while(i \u003c components.length) {"},{"lineNumber":58,"author":{"gitId":"linhns"},"content":"                            desc.append(components[i] + \" \");"},{"lineNumber":59,"author":{"gitId":"linhns"},"content":"                            i++;"},{"lineNumber":60,"author":{"gitId":"linhns"},"content":"                        }"},{"lineNumber":61,"author":{"gitId":"linhns"},"content":"                        task \u003d new ToDo(desc.toString());"},{"lineNumber":62,"author":{"gitId":"linhns"},"content":"                        taskLst.add(task);"},{"lineNumber":63,"author":{"gitId":"linhns"},"content":"                    }"},{"lineNumber":64,"author":{"gitId":"linhns"},"content":"                    else if (components[0].equals(\"event\")) {"},{"lineNumber":65,"author":{"gitId":"linhns"},"content":"                        StringBuilder desc \u003d new StringBuilder(), time \u003d new StringBuilder();"},{"lineNumber":66,"author":{"gitId":"linhns"},"content":"                        int i \u003d 1;"},{"lineNumber":67,"author":{"gitId":"linhns"},"content":"                        while(!components[i].equals(\"/at\")) {"},{"lineNumber":68,"author":{"gitId":"linhns"},"content":"                            desc.append(components[i] + \" \");"},{"lineNumber":69,"author":{"gitId":"linhns"},"content":"                            i++;"},{"lineNumber":70,"author":{"gitId":"linhns"},"content":"                        }"},{"lineNumber":71,"author":{"gitId":"linhns"},"content":"                        i++;"},{"lineNumber":72,"author":{"gitId":"linhns"},"content":"                        while(i \u003c components.length) {"},{"lineNumber":73,"author":{"gitId":"linhns"},"content":"                            time.append(components[i] + \" \");"},{"lineNumber":74,"author":{"gitId":"linhns"},"content":"                            i++;"},{"lineNumber":75,"author":{"gitId":"linhns"},"content":"                        }"},{"lineNumber":76,"author":{"gitId":"linhns"},"content":"                        time.deleteCharAt(time.length() - 1);"},{"lineNumber":77,"author":{"gitId":"linhns"},"content":"                        task \u003d new Event(desc.toString(), time.toString());"},{"lineNumber":78,"author":{"gitId":"linhns"},"content":"                        taskLst.add(task);"},{"lineNumber":79,"author":{"gitId":"linhns"},"content":"                    }"},{"lineNumber":80,"author":{"gitId":"linhns"},"content":"                    else if (components[0].equals(\"delete\")) {"},{"lineNumber":81,"author":{"gitId":"linhns"},"content":"                        if (components.length \u003d\u003d 1) throw new DukeException(\"Please insert an index!\");"},{"lineNumber":82,"author":{"gitId":"linhns"},"content":"                        int index \u003d Integer.parseInt(components[1]);"},{"lineNumber":83,"author":{"gitId":"linhns"},"content":"                        if (index \u003e taskLst.size()) throw new DukeException(\"Index out of bounds!\");"},{"lineNumber":84,"author":{"gitId":"linhns"},"content":"                        Task removedTask \u003d taskLst.remove(index);"},{"lineNumber":85,"author":{"gitId":"linhns"},"content":"                        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" +"},{"lineNumber":86,"author":{"gitId":"linhns"},"content":"                                removedTask.toString() + \"\\nNow you have \" + (taskLst.size())"},{"lineNumber":87,"author":{"gitId":"linhns"},"content":"                                + (taskLst.size() \u003e 1 ? \" tasks\" : \" task\")"},{"lineNumber":88,"author":{"gitId":"linhns"},"content":"                                + \" in the list.\");"},{"lineNumber":89,"author":{"gitId":"linhns"},"content":"                        System.out.println(sep);"},{"lineNumber":90,"author":{"gitId":"linhns"},"content":"                        continue;"},{"lineNumber":91,"author":{"gitId":"linhns"},"content":"                    }"},{"lineNumber":92,"author":{"gitId":"linhns"},"content":"                    else {"},{"lineNumber":93,"author":{"gitId":"linhns"},"content":"                        throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":94,"author":{"gitId":"linhns"},"content":"                    }"},{"lineNumber":95,"author":{"gitId":"linhns"},"content":"                    System.out.println(\"Got it. Now I have added this \" +"},{"lineNumber":96,"author":{"gitId":"linhns"},"content":"                            \"task:\\n\" + \"  \" + task.toString() + \"\\n\" +"},{"lineNumber":97,"author":{"gitId":"linhns"},"content":"                            \"Now you have \" + taskLst.size() + \" tasks in the list.\");"},{"lineNumber":98,"author":{"gitId":"linhns"},"content":"                }"},{"lineNumber":99,"author":{"gitId":"linhns"},"content":"                System.out.println(sep);"},{"lineNumber":100,"author":{"gitId":"linhns"},"content":"            } catch (DukeException err) {"},{"lineNumber":101,"author":{"gitId":"linhns"},"content":"                System.out.println(err.getMessage());"},{"lineNumber":102,"author":{"gitId":"linhns"},"content":"                System.out.println(sep);"},{"lineNumber":103,"author":{"gitId":"linhns"},"content":"            }"},{"lineNumber":104,"author":{"gitId":"linhns"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"linhns":97,"-":9}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linhns"},"content":"public class DukeException extends Exception{"},{"lineNumber":2,"author":{"gitId":"linhns"},"content":"    public DukeException(String message) {"},{"lineNumber":3,"author":{"gitId":"linhns"},"content":"        super(\"OOPS!!! \" + message);"},{"lineNumber":4,"author":{"gitId":"linhns"},"content":"    }"},{"lineNumber":5,"author":{"gitId":"linhns"},"content":"}"}],"authorContributionMap":{"linhns":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linhns"},"content":"public class Event extends Task{"},{"lineNumber":2,"author":{"gitId":"linhns"},"content":"    private String time;"},{"lineNumber":3,"author":{"gitId":"linhns"},"content":"    public Event(String task, String time) {"},{"lineNumber":4,"author":{"gitId":"linhns"},"content":"        super(task);"},{"lineNumber":5,"author":{"gitId":"linhns"},"content":"        this.time \u003d time;"},{"lineNumber":6,"author":{"gitId":"linhns"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"linhns"},"content":""},{"lineNumber":8,"author":{"gitId":"linhns"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"linhns"},"content":"    public String toString() {"},{"lineNumber":10,"author":{"gitId":"linhns"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + time + \")\";"},{"lineNumber":11,"author":{"gitId":"linhns"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"linhns"},"content":"}"}],"authorContributionMap":{"linhns":12}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linhns"},"content":"public class Task {"},{"lineNumber":2,"author":{"gitId":"linhns"},"content":"    private String task;"},{"lineNumber":3,"author":{"gitId":"linhns"},"content":"    private boolean done;"},{"lineNumber":4,"author":{"gitId":"linhns"},"content":""},{"lineNumber":5,"author":{"gitId":"linhns"},"content":"    public Task(String task) {"},{"lineNumber":6,"author":{"gitId":"linhns"},"content":"        this.task \u003d task;"},{"lineNumber":7,"author":{"gitId":"linhns"},"content":"        this.done \u003d false;"},{"lineNumber":8,"author":{"gitId":"linhns"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"linhns"},"content":""},{"lineNumber":10,"author":{"gitId":"linhns"},"content":"    public void markDone() {"},{"lineNumber":11,"author":{"gitId":"linhns"},"content":"        this.done \u003d true;"},{"lineNumber":12,"author":{"gitId":"linhns"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"linhns"},"content":""},{"lineNumber":14,"author":{"gitId":"linhns"},"content":"    public String getTask() {"},{"lineNumber":15,"author":{"gitId":"linhns"},"content":"        return this.task;"},{"lineNumber":16,"author":{"gitId":"linhns"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"linhns"},"content":""},{"lineNumber":18,"author":{"gitId":"linhns"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"linhns"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"linhns"},"content":"        return \"[\" + (this.done ? \"X\" : \" \") + \"] \" + this.getTask();"},{"lineNumber":21,"author":{"gitId":"linhns"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"linhns"},"content":"}"}],"authorContributionMap":{"linhns":22}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"linhns"},"content":"public class ToDo extends Task{"},{"lineNumber":2,"author":{"gitId":"linhns"},"content":""},{"lineNumber":3,"author":{"gitId":"linhns"},"content":"    public ToDo(String task) {"},{"lineNumber":4,"author":{"gitId":"linhns"},"content":"        super(task);"},{"lineNumber":5,"author":{"gitId":"linhns"},"content":"    }"},{"lineNumber":6,"author":{"gitId":"linhns"},"content":""},{"lineNumber":7,"author":{"gitId":"linhns"},"content":"    @Override"},{"lineNumber":8,"author":{"gitId":"linhns"},"content":"    public String toString() {"},{"lineNumber":9,"author":{"gitId":"linhns"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":10,"author":{"gitId":"linhns"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"linhns"},"content":"}"}],"authorContributionMap":{"linhns":11}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"linhns"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"linhns"},"content":"deadline return book /by June 6th"},{"lineNumber":3,"author":{"gitId":"linhns"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":4,"author":{"gitId":"linhns"},"content":"todo join sports club"},{"lineNumber":5,"author":{"gitId":"linhns"},"content":"todo borrow book"},{"lineNumber":6,"author":{"gitId":"linhns"},"content":"done 1"},{"lineNumber":7,"author":{"gitId":"linhns"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"linhns"},"content":"done 4"},{"lineNumber":9,"author":{"gitId":"linhns"},"content":"list"},{"lineNumber":10,"author":{"gitId":"linhns"},"content":"todo"},{"lineNumber":11,"author":{"gitId":"linhns"},"content":"blah"},{"lineNumber":12,"author":{"gitId":"linhns"},"content":"delete 3"},{"lineNumber":13,"author":{"gitId":"linhns"},"content":"bye"}],"authorContributionMap":{"linhns":13}}]
