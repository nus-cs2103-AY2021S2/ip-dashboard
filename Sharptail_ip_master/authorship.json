[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"# Snom User Guide"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"Snom is a Personal Assistant Chatbot that helps a person to keep track of various things."},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"## Quick Start"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"1. Ensure you have Java 11 or above installed on your Computer"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"2. Download the latest Snom.jar from [here](https://github.com/Sharptail/ip/releases)."},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"3. Copy Snom.jar to the folder you want to use as home folder for your Snom."},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"4. Double-click on Snom.jar to start the application. \u003cbr\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"   ![Ui](docs/Ui.png)"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"5. Type in the command in the command box and press Enter to execute it."},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"## Command summary"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"Action | Format"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"--------|------------------"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"**todo** | `todo DESCRIPTION`"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"**deadline** | `deadline DESCRIPTION /by DATE [TIME]`"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"**event** | `event DESCRIPTION /at DATE [TIME]`"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"**list** | `list`"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"**find** | `find KEYWORD`"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"**finish** | `finish ...`"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"**delete** | `delete ...`"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"**bye** | `bye`"}],"authorContributionMap":{"Sharptail":20,"-":4}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    String javaFxVersion \u003d \u002711.0.1\u0027"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"java {"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"    sourceCompatibility \u003d JavaVersion.VERSION_11"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"    targetCompatibility \u003d JavaVersion.VERSION_11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}"},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"    mainClassName \u003d \"snom.Launcher\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"    archiveBaseName \u003d \"Snom\""},{"lineNumber":46,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"    configFile file(\"config/checkstyle/checkstyle.xml\")"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"}"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"checkstyleMain {"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"    source \u003d\u0027src/main/java/snom\u0027"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"}"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"checkstyleTest {"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"    source \u003d\u0027src/test/java/snom\u0027"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Sharptail":26,"-":36}},{"path":"data/snom.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"T,true,Borrow book"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"D,false, return book , 2021-09-27 15:00"}],"authorContributionMap":{"Sharptail":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"# Snom User Guide"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"Snom is a Personal Assistant Chatbot that helps a person to keep track of various things."},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"## Quick Start"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"1. Ensure you have Java 11 or above installed on your Computer"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"2. Download the latest Snom.jar from [here](https://github.com/Sharptail/ip/releases)."},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"3. Copy Snom.jar to the folder you want to use as home folder for your Snom."},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"4. Double-click on Snom.jar to start the application. \u003cbr\u003e"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"   ![Ui](Ui.png)"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"5. Type in the command in the command box and press Enter to execute it."},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"6. Refer to the features below for details of each command."},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"  e.g. in `todo DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as `todo Borrow Book`."},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"* Items in square brackets are optional.\u003cbr\u003e"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"  e.g `deadline DESCRIPTION /at DATE [TIME]` can be used as "},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"  `deadline Return Book /at 2021-09-27 15:00` or as "},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"  `deadline Return Book /at 2021-09-27`."},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"* Items with `…`​ after them can be used multiple time.\u003cbr\u003e"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"  e.g. `delete …​` can be used as `delete 1 2 3` etc."},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"* Extraneous parameters for commands that do not take in parameters "},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"  (such as `list` and `bye`) will be ignored.\u003cbr\u003e"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"  e.g. if the command specifies `list 123`, it will be interpreted as `list`."},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"\u003c/div\u003e"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"### Help : `help`"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"Shows a list of commands with description.\u003cbr\u003e"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"Use `help COMMAND` for more information on specific command."},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"Format: `help` or `help COMMAND` \u003cbr\u003e"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"Example: `help deadline`"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"### Adding a task: `todo` `deadline` `event`"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"Adds a task into task list."},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"Format: "},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"- `todo DESCRIPTION`"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"- `deadline DESCRIPTION /by DATE [TIME]`"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"- `event DESCRIPTION /at DATE [TIME]`"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"Examples:"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"- `todo Borrow Book`"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"- `deadline Return Book /by 2021-09-27`"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"- `event Meeting /at 2021-05-07 15:00`"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"### Listing all persons : `list`"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"Shows a list of all task in the task list."},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"Format: `list`"},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":68,"author":{"gitId":"Sharptail"},"content":"### Search for task(s) in the task list: `find`"},{"lineNumber":69,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":70,"author":{"gitId":"Sharptail"},"content":"Find tasks contain any of the given keywords."},{"lineNumber":71,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":72,"author":{"gitId":"Sharptail"},"content":"Format: `find KEYWORD`\u003cbr\u003e"},{"lineNumber":73,"author":{"gitId":"Sharptail"},"content":"Example: `find book"},{"lineNumber":74,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":75,"author":{"gitId":"Sharptail"},"content":"### Mark a task as finished : `finish`"},{"lineNumber":76,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":77,"author":{"gitId":"Sharptail"},"content":"Marks one or more tasks as finished."},{"lineNumber":78,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":79,"author":{"gitId":"Sharptail"},"content":"Format: `finish ...`"},{"lineNumber":80,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":81,"author":{"gitId":"Sharptail"},"content":"Example: `finish 1 2 3`"},{"lineNumber":82,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":83,"author":{"gitId":"Sharptail"},"content":"### Deleting a task : `delete`"},{"lineNumber":84,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":85,"author":{"gitId":"Sharptail"},"content":"Deletes one or more tasks from the task list."},{"lineNumber":86,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":87,"author":{"gitId":"Sharptail"},"content":"Format: `delete ...`"},{"lineNumber":88,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":89,"author":{"gitId":"Sharptail"},"content":"Examples: `delete 1 2 3`"},{"lineNumber":90,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":91,"author":{"gitId":"Sharptail"},"content":"### Exiting the program : `bye`"},{"lineNumber":92,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":93,"author":{"gitId":"Sharptail"},"content":"Exits the program."},{"lineNumber":94,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":95,"author":{"gitId":"Sharptail"},"content":"Format: `bye`"},{"lineNumber":96,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":97,"author":{"gitId":"Sharptail"},"content":"### Saving the data"},{"lineNumber":98,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":99,"author":{"gitId":"Sharptail"},"content":"Snom data are saved in the hard disk automatically after any command that changes the data. "},{"lineNumber":100,"author":{"gitId":"Sharptail"},"content":"There is no need to save manually."},{"lineNumber":101,"author":{"gitId":"-"},"content":""},{"lineNumber":102,"author":{"gitId":"Sharptail"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":103,"author":{"gitId":"-"},"content":""},{"lineNumber":104,"author":{"gitId":"Sharptail"},"content":"## FAQ"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"Sharptail"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e"},{"lineNumber":107,"author":{"gitId":"Sharptail"},"content":"**A**: Install the app in the other computer and overwrite the empty data file "},{"lineNumber":108,"author":{"gitId":"Sharptail"},"content":"it creates with the file that contains the data of your previous Snom home folder."},{"lineNumber":109,"author":{"gitId":"-"},"content":""},{"lineNumber":110,"author":{"gitId":"Sharptail"},"content":"--------------------------------------------------------------------------------------------------------------------"},{"lineNumber":111,"author":{"gitId":"-"},"content":""},{"lineNumber":112,"author":{"gitId":"Sharptail"},"content":"## Command summary"},{"lineNumber":113,"author":{"gitId":"-"},"content":""},{"lineNumber":114,"author":{"gitId":"Sharptail"},"content":"Action | Format"},{"lineNumber":115,"author":{"gitId":"Sharptail"},"content":"--------|------------------"},{"lineNumber":116,"author":{"gitId":"Sharptail"},"content":"**todo** | `todo DESCRIPTION`"},{"lineNumber":117,"author":{"gitId":"Sharptail"},"content":"**deadline** | `deadline DESCRIPTION /by DATE [TIME]`"},{"lineNumber":118,"author":{"gitId":"Sharptail"},"content":"**event** | `event DESCRIPTION /at DATE [TIME]`"},{"lineNumber":119,"author":{"gitId":"Sharptail"},"content":"**list** | `list`"},{"lineNumber":120,"author":{"gitId":"Sharptail"},"content":"**find** | `find KEYWORD`"},{"lineNumber":121,"author":{"gitId":"Sharptail"},"content":"**finish** | `finish ...`"},{"lineNumber":122,"author":{"gitId":"Sharptail"},"content":"**delete** | `delete ...`"},{"lineNumber":123,"author":{"gitId":"Sharptail"},"content":"**bye** | `bye`"}],"authorContributionMap":{"Sharptail":107,"-":16}},{"path":"src/main/java/snom/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":" * Launches to the main application."},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":12}},{"path":"src/main/java/snom/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import java.nio.file.Paths;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import snom.model.Snom;"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import snom.ui.MainWindow;"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":" * Runs the Application."},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"public class Main extends Application {"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    private Snom snom \u003d new Snom(Paths.get(\"data\", \"snom.txt\"));"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    public void start(Stage stage) {"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"            stage.setResizable(false);"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"            stage.setScene(scene);"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setSnom(snom);"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"            stage.show();"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"        } catch (IOException e) {"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"            e.printStackTrace();"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":35}},{"path":"src/main/java/snom/common/core/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.common.core;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":" * Container for user visible messages."},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"public class Messages {"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"    public static final String SYMBOL_TICK \u003d \"\\u2713\";"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"    public static final String SYMBOL_BLANK \u003d \"\\u2007\";"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_WELCOME \u003d \"Bonjour! I\u0027m Snom! *squish*\\n\""},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"            + \"Try giving me some commands, I might be able to do something!\\n\""},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"            + \"[type \u0027bye\u0027 to exit program]\";"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_EMPTY_TASK_LIST \u003d \"You have no task in your list right now, \""},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"            + \"try adding some and try again :D\";"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_NO_MATCHING_TASK \u003d \"No matching task found.\";"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_TASK_LIST \u003d \"Here are the task(s) in your list:\\n\";"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_MATCHING_TASK_LIST \u003d \"Here are the matching tasks in your list:\\n\";"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_TASK_ADDED \u003d \"Got it. I\u0027ve added this task:\\n\\t%1$s\\n\""},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"            + \"Now you have %2$d tasks in the list.\";"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_TASK_FINISHED \u003d \"Great Job! I\u0027ve marked this task(s) as finish:\\n\";"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_TASK_DELETED \u003d \"Noted, I\u0027ve deleted this task(s)\\n\";"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    public static final String MESSAGE_EXIT \u003d \"Ciao! Hope to see you again soon!\";"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    public static final String ERROR_INVALID_TASK_NUM \u003d \"Oops! You have entered a task number: \""},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"            + \"%1$d, which is invalid! Please try again!\";"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    public static final String ERROR_INVALID_MIN_TASK_NUM \u003d \"Oops! Please at least give one task number\";"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    public static final String ERROR_INVALID_MIN_TASK_NUM_TYPE \u003d \"Oops! Only integers are valid task numbers!\";"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    public static final String ERROR_INVALID_DATE_TIME \u003d \"Oops! Please enter a valid date time format \""},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"            + \"[YYYY-MM-DD HH:MM]\";"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    public static final String ERROR_INVALID_COMMAND \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what %1$s means :-(\";"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"    public static final String ERROR_INVALID_ADD_COMMAND \u003d \"Error: Something magical happened while \""},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"            + \"Snom trying to create a task!\";"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"    public static final String ERROR_INVALID_MIN_DATE_TIME \u003d \"Please enter at least one date!\";"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"    public static final String ERROR_INVALID_MAX_DATE_TIME \u003d \"Oops! You have entered more than ONE date, \""},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"            + \"please try again!\";"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"    public static final String ERROR_INVALID_INT_INPUT \u003d \"Oops! You have entered a non Integer value!\";"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"    public static final String ERROR_INVALID_DOUBLE_INPUT \u003d \"Oops! You have entered a non Double value!\";"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":36}},{"path":"src/main/java/snom/common/core/Style.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.common.core;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"public class Style {"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"    public static final String STYLE_DIALOG_ERROR \u003d \"-fx-text-background-color: Red;\""},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"            + \"-fx-background-color: White;\""},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"            + \"-fx-background-radius: 1em;\""},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"            + \"-fx-border-color: #bffffa;\""},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"            + \"-fx-border-radius: 1em;\";"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":9}},{"path":"src/main/java/snom/common/exceptions/SnomException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.common.exceptions;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"public class SnomException extends Exception {"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"    public SnomException(String message) {"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":8}},{"path":"src/main/java/snom/common/util/SnomioUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.common.util;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import java.util.StringTokenizer;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":" * Helper methods used to validate and format inputs for Snomio."},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"public class SnomioUtil {"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"     * Returns true if tokenizer is null or it has no more tokens left."},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"     * @param tokenizer tokenizer that stores string input"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"    public static boolean hasNoTokens(StringTokenizer tokenizer) {"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"        return tokenizer \u003d\u003d null || !tokenizer.hasMoreTokens();"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"     * Returns true if given String is able to be converted to Integer."},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"     * @param string  A string"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    public static boolean isValidInteger(String string) {"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"            Integer.parseInt(string);"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"            return true;"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"            return false;"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"     * Returns true if given String is able to be converted to Double."},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"     * @param string  A string"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"    public static boolean isValidDouble(String string) {"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"        try {"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"            Double.parseDouble(string);"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"            return true;"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"            return false;"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":46}},{"path":"src/main/java/snom/common/util/TaskUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.common.util;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import java.time.format.DateTimeFormatterBuilder;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import java.time.temporal.ChronoField;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":" * Container for date time formatter."},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"public class TaskUtil {"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"    public static final DateTimeFormatter DATE_TIME_INPUT_FORMAT \u003d new DateTimeFormatterBuilder()"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"            .appendPattern(\"yyyy-MM-dd[ HH:mm]\")"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"            .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"            .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"            .toFormatter();"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    public static final DateTimeFormatter DATE_TIME_OUTPUT_FORMAT \u003d new DateTimeFormatterBuilder()"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"            .appendPattern(\"E dd MMM yyyy hh:mma\")"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"            .toFormatter();"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    public static final DateTimeFormatter DATE_TIME_SAVE_FORMAT \u003d new DateTimeFormatterBuilder()"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"            .appendPattern(\"yyyy-MM-dd[ HH:mm]\")"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"            .toFormatter();"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":22}},{"path":"src/main/java/snom/logic/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.logic;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import java.util.Arrays;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import snom.common.core.Messages;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import snom.common.exceptions.SnomException;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import snom.logic.commands.AddCommand;"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import snom.logic.commands.Command;"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import snom.logic.commands.CommandEnum;"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import snom.logic.commands.DeleteCommand;"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import snom.logic.commands.ExitCommand;"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import snom.logic.commands.FindCommand;"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import snom.logic.commands.FinishCommand;"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"import snom.logic.commands.HelpCommand;"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"import snom.logic.commands.ListCommand;"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":" * Represents a Parser to parse user input into {@code Command}"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"public class Parser {"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"     * Returns a {@code Command} child object based on the given string of command."},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"     * @param userInput     string of user input"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"     * @return               Command child classes"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException if command is unknown"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"    public static Command parse(String userInput) throws SnomException {"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"        String commandStr \u003d parseCommandStr(userInput);"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"        String commandContent \u003d parseCommandContent(userInput);"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"        CommandEnum commandEnum \u003d CommandEnum.getCommand(commandStr);"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"        switch(commandEnum) {"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"        case LIST:"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"            return new ListCommand(CommandEnum.LIST, commandContent);"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"        case FINISH:"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"            return new FinishCommand(CommandEnum.FINISH, commandContent);"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"        case DELETE:"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"            return new DeleteCommand(CommandEnum.DELETE, commandContent);"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"        case BYE:"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"            return new ExitCommand(CommandEnum.BYE, commandContent);"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"        case TODO:"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"            return new AddCommand(CommandEnum.TODO, commandContent);"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"        case DEADLINE:"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"            return new AddCommand(CommandEnum.DEADLINE, commandContent);"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"        case EVENT:"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"            return new AddCommand(CommandEnum.EVENT, commandContent);"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"        case FIND:"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"            return new FindCommand(CommandEnum.FIND, commandContent);"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"        case HELP:"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"            return new HelpCommand(CommandEnum.HELP, commandContent);"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"        default:"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"            throw new SnomException(String.format(Messages.ERROR_INVALID_COMMAND, commandStr));"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"     * Returns the command string from user input"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"     * @param userInput user input"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"     * @return          command as string"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"    public static String parseCommandStr(String userInput) {"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"        return userInput.split(\" \")[0];"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"Sharptail"},"content":"     * Returns the content of the command from user input"},{"lineNumber":69,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"Sharptail"},"content":"     * @param userInput user input"},{"lineNumber":71,"author":{"gitId":"Sharptail"},"content":"     * @return          content of the command"},{"lineNumber":72,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"Sharptail"},"content":"    public static String parseCommandContent(String userInput) {"},{"lineNumber":74,"author":{"gitId":"Sharptail"},"content":"        String[] splitInputs \u003d userInput.split(\" \", 2);"},{"lineNumber":75,"author":{"gitId":"Sharptail"},"content":"        if (splitInputs.length \u003e\u003d 2) {"},{"lineNumber":76,"author":{"gitId":"Sharptail"},"content":"            return splitInputs[1];"},{"lineNumber":77,"author":{"gitId":"Sharptail"},"content":"        } else {"},{"lineNumber":78,"author":{"gitId":"Sharptail"},"content":"            return \"\";"},{"lineNumber":79,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":82,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"Sharptail"},"content":"     * Returns an array of task numbers to be finished/deleted"},{"lineNumber":84,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"Sharptail"},"content":"     * @param taskNumString  string containing all the task numbers"},{"lineNumber":86,"author":{"gitId":"Sharptail"},"content":"     * @return               array of task numbers"},{"lineNumber":87,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException if no numbers was given"},{"lineNumber":88,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"Sharptail"},"content":"    public static int[] parseTaskNumbers(String taskNumString) throws SnomException {"},{"lineNumber":90,"author":{"gitId":"Sharptail"},"content":"        if (taskNumString.isBlank()) {"},{"lineNumber":91,"author":{"gitId":"Sharptail"},"content":"            throw new SnomException(Messages.ERROR_INVALID_MIN_TASK_NUM);"},{"lineNumber":92,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":94,"author":{"gitId":"Sharptail"},"content":"        try {"},{"lineNumber":95,"author":{"gitId":"Sharptail"},"content":"            int[] taskNumbers \u003d Arrays.stream(taskNumString.split(\" \"))"},{"lineNumber":96,"author":{"gitId":"Sharptail"},"content":"                    .mapToInt(Integer::parseInt)"},{"lineNumber":97,"author":{"gitId":"Sharptail"},"content":"                    .toArray();"},{"lineNumber":98,"author":{"gitId":"Sharptail"},"content":"            return taskNumbers;"},{"lineNumber":99,"author":{"gitId":"Sharptail"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":100,"author":{"gitId":"Sharptail"},"content":"            throw new SnomException(Messages.ERROR_INVALID_MIN_TASK_NUM_TYPE);"},{"lineNumber":101,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":103,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":103}},{"path":"src/main/java/snom/logic/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.logic.commands;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import snom.common.core.Messages;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import snom.common.exceptions.SnomException;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import snom.model.task.Deadline;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import snom.model.task.Event;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import snom.model.task.Task;"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import snom.model.task.TaskList;"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import snom.model.task.Todo;"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import snom.storage.StorageManager;"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import snom.ui.Snomio;"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":" * Adds a {@code Task} into {@code TaskList}"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"public class AddCommand extends Command {"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"    public AddCommand(CommandEnum commandType, String content) {"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"        super(commandType, content);"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"     * Executes todo, deadline, event command."},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"     * @param taskList         list of task"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"     * @param snomio           I/O of Snom"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"     * @param storage          files handler of snom"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"     * @return                 {@code CommandResponse} after command execution"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException   if command execution failed"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"    public CommandResponse execute(TaskList taskList, Snomio snomio, StorageManager storage) throws SnomException {"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"        Task task \u003d null;"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"        if (commandType \u003d\u003d CommandEnum.TODO) {"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"            task \u003d new Todo(this.content);"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"        } else if (commandType \u003d\u003d CommandEnum.DEADLINE) {"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"            String[] dlArr \u003d splitContentWithDate(\"/by\");"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"            task \u003d new Deadline(dlArr[0], dlArr[1]);"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"        } else if (commandType \u003d\u003d CommandEnum.EVENT) {"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"            String[] dlArr \u003d splitContentWithDate(\"/at\");"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"            task \u003d new Event(dlArr[0], dlArr[1]);"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"        } else {"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"            throw new SnomException(Messages.ERROR_INVALID_ADD_COMMAND);"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"        taskList.add(task);"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"        storage.saveFile(taskList);"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"        return new CommandResponse(snomio.getTaskAdded(task, taskList.size()), false);"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"     * Returns a string array of size 2"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"     * first string contains the content of the task"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"     * second string contains the date of the task"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"     * @param delim             delimiter for string splitting"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"     * @return                  string array of content and date"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException    if no date was given or more than one date is given"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"    private String[] splitContentWithDate(String delim) throws SnomException {"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"        String[] splitContent \u003d this.content.split(delim);"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"        if (splitContent.length \u003c 2) {"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"            throw new SnomException(Messages.ERROR_INVALID_MIN_DATE_TIME);"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"        if (splitContent.length \u003e 2) {"},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"            throw new SnomException(Messages.ERROR_INVALID_MAX_DATE_TIME);"},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":69,"author":{"gitId":"Sharptail"},"content":"        return splitContent;"},{"lineNumber":70,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":71}},{"path":"src/main/java/snom/logic/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.logic.commands;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import snom.common.exceptions.SnomException;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import snom.model.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import snom.storage.StorageManager;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import snom.ui.Snomio;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":" * Represents a command with the ability to be executed."},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"public abstract class Command {"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"    protected CommandEnum commandType;"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"    protected String content;"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"     * Constructs a {@code Command}"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"     * @param commandType   command type"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"     * @param content       content of the command"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    public Command(CommandEnum commandType, String content) {"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"        this.commandType \u003d commandType;"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"        this.content \u003d content;"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    public abstract CommandResponse execute(TaskList taskList, Snomio snomio, StorageManager storage)"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"            throws SnomException;"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":28}},{"path":"src/main/java/snom/logic/commands/CommandEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.logic.commands;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"public enum CommandEnum {"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"    LIST,"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"    FINISH,"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"    DELETE,"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"    BYE,"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"    TODO,"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"    DEADLINE,"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"    EVENT,"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"    FIND,"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"    HELP,"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"    NONE;"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"     * Returns {@code CommandEnum} based of given string of command."},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"     * @param command string of command"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"     * @return        enum of command"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    public static CommandEnum getCommand(String command) {"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"        for (CommandEnum cEnum: CommandEnum.values()) {"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"            if (command.equalsIgnoreCase(String.valueOf(cEnum))) {"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"                return cEnum;"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"            }"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"        return CommandEnum.NONE;"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":29}},{"path":"src/main/java/snom/logic/commands/CommandResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.logic.commands;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":" * Represents the response after {@code Command} being executed."},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"public class CommandResponse {"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"    private String responseMsg;"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"    private boolean isExit;"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"    private boolean isError;"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"     * Constructs a {@code CommandResponse} with default error set to false"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"     * @param responseMsg   response message"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"     * @param isExit        indicator to exit the app"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"    public CommandResponse(String responseMsg, boolean isExit) {"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"        this.responseMsg \u003d responseMsg;"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"        this.isExit \u003d isExit;"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"        this.isError \u003d false;"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"     * Constructs a {@code CommandResponse}"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"     * @param responseMsg   response message"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"     * @param isExit        indicator to exit the app"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"     * @param isError       indicator for error response"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    public CommandResponse(String responseMsg, boolean isExit, boolean isError) {"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"        this.responseMsg \u003d responseMsg;"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"        this.isExit \u003d isExit;"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"        this.isError \u003d isError;"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"    public String getResponseMsg() {"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"        return responseMsg;"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"    public void setResponseMsg(String responseMsg) {"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"        this.responseMsg \u003d responseMsg;"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"    public boolean isExit() {"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"        return isExit;"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"    public void setExit(boolean exit) {"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"        isExit \u003d exit;"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"    public boolean isError() {"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"        return isError;"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":55}},{"path":"src/main/java/snom/logic/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.logic.commands;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import snom.common.exceptions.SnomException;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import snom.logic.Parser;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import snom.model.task.Task;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import snom.model.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import snom.storage.StorageManager;"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import snom.ui.Snomio;"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":" * Deletes {@code Task} from {@code TaskList}"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"    public DeleteCommand(CommandEnum commandType, String content) {"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"        super(commandType, content);"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"     * Executes delete command."},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"     * @param taskList         list of task"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"     * @param snomio           I/O of Snom"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"     * @param storage          files handler of Snom"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"     * @return                 {@code CommandResponse} after command execution"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException   if command execution failed"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    public CommandResponse execute(TaskList taskList, Snomio snomio, StorageManager storage) throws SnomException {"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"        int[] deleteList \u003d Parser.parseTaskNumbers(this.content);"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"        Task[] deletedTasks \u003d taskList.deleteTask(deleteList);"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"        storage.saveFile(taskList);"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"        return new CommandResponse(snomio.getDeletedTasks(deletedTasks), false);"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":34}},{"path":"src/main/java/snom/logic/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.logic.commands;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import snom.common.exceptions.SnomException;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import snom.model.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import snom.storage.StorageManager;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import snom.ui.Snomio;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":" * Closes Application."},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"public class ExitCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"    public ExitCommand(CommandEnum commandType, String content) {"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"        super(commandType, content);"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"     * Executes exit command."},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"     * @param taskList         list of task"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"     * @param snomio           I/O of Snom"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"     * @param storage          files handler of snom"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"     * @return                 {@code CommandResponse} after command execution"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException   if command execution failed"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    public CommandResponse execute(TaskList taskList, Snomio snomio, StorageManager storage) throws SnomException {"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"        return new CommandResponse(snomio.getExitMessage(), true);"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":29}},{"path":"src/main/java/snom/logic/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.logic.commands;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import snom.common.exceptions.SnomException;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import snom.model.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import snom.storage.StorageManager;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import snom.ui.Snomio;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":" * Searches for specific {@code Task} in the {@code TaskList}"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"public class FindCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"    public FindCommand(CommandEnum commandType, String content) {"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"        super(commandType, content);"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"     * Executes find command."},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"     * @param taskList         list of task"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"     * @param snomio           I/O of Snom"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"     * @param storage          files handler of snom"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"     * @return                 {@code CommandResponse} after command execution"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException   if command execution failed"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    public CommandResponse execute(TaskList taskList, Snomio snomio, StorageManager storage) throws SnomException {"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"        TaskList foundTaskList \u003d taskList.findTask(this.content);"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"        return new CommandResponse(snomio.getMatchingTaskList(foundTaskList), false);"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":30}},{"path":"src/main/java/snom/logic/commands/FinishCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.logic.commands;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import snom.common.exceptions.SnomException;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import snom.logic.Parser;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import snom.model.task.Task;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import snom.model.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import snom.storage.StorageManager;"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import snom.ui.Snomio;"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":" * Marks specific {@code Task} as finished"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"public class FinishCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"    public FinishCommand(CommandEnum commandType, String content) {"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"        super(commandType, content);"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"     * Executes finish command."},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"     * @param taskList         list of task"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"     * @param snomio           I/O of Snom"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"     * @param storage          files handler of snom"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"     * @return                 {@code CommandResponse} after command execution"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException   if command execution failed"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    public CommandResponse execute(TaskList taskList, Snomio snomio, StorageManager storage) throws SnomException {"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"        int[] finishList \u003d Parser.parseTaskNumbers(this.content);"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"        Task[] finishedTasks \u003d taskList.finishTask(finishList);"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"        storage.saveFile(taskList);"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"        return new CommandResponse(snomio.getFinishedTasks(finishedTasks), false);"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":34}},{"path":"src/main/java/snom/logic/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.logic.commands;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import java.nio.file.Paths;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import snom.common.exceptions.SnomException;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import snom.model.task.TaskList;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import snom.storage.FileManager;"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import snom.storage.StorageManager;"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import snom.ui.Snomio;"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":" * Displays help page."},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"public class HelpCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"    private FileManager helpFile;"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    public HelpCommand(CommandEnum commandType, String content) {"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"        super(commandType, content);"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"     * Executes help command."},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"     * @param taskList         list of task"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"     * @param snomio           I/O of Snom"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"     * @param storage          files handler of snom"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"     * @return                 {@code CommandResponse} after command execution"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException   if command execution failed"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    public CommandResponse execute(TaskList taskList, Snomio snomio, StorageManager storage) throws SnomException {"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"        String helpText \u003d \"\";"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"        switch(this.content) {"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"        case \"todo\":"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"            helpFile \u003d new FileManager(Paths.get(\"/help/todo.txt\"));"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"            helpText \u003d helpFile.readResourcesText();"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"            break;"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"        case \"deadline\":"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"            helpFile \u003d new FileManager(Paths.get(\"/help/deadline.txt\"));"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"            helpText \u003d helpFile.readResourcesText();"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"            break;"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"        case \"event\":"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"            helpFile \u003d new FileManager(Paths.get(\"/help/event.txt\"));"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"            helpText \u003d helpFile.readResourcesText();"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"            break;"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"        case \"list\":"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"            helpFile \u003d new FileManager(Paths.get(\"/help/list.txt\"));"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"            helpText \u003d helpFile.readResourcesText();"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"            break;"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"        case \"finish\":"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"            helpFile \u003d new FileManager(Paths.get(\"/help/finish.txt\"));"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"            helpText \u003d helpFile.readResourcesText();"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"            break;"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"        case \"delete\":"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"            helpFile \u003d new FileManager(Paths.get(\"/help/delete.txt\"));"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"            helpText \u003d helpFile.readResourcesText();"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"            break;"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"        case \"find\":"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"            helpFile \u003d new FileManager(Paths.get(\"/help/find.txt\"));"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"            helpText \u003d helpFile.readResourcesText();"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"            break;"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"        default:"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"            helpFile \u003d new FileManager(Paths.get(\"/help/commands.txt\"));"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"            helpText \u003d helpFile.readResourcesText();"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"        return new CommandResponse(helpText, false);"},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":68}},{"path":"src/main/java/snom/logic/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.logic.commands;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import snom.common.exceptions.SnomException;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import snom.model.task.TaskList;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import snom.storage.StorageManager;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import snom.ui.Snomio;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":" * Display {@code Task} in the {@code TaskList}"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"public class ListCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"    public ListCommand(CommandEnum commandType, String content) {"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"        super(commandType, content);"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"     * Executes list command."},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"     * @param taskList         list of task"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"     * @param snomio           I/O of Snom"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"     * @param storage          files handler of snom"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"     * @return                 {@code CommandResponse} after command execution"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException   if command execution failed"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    public CommandResponse execute(TaskList taskList, Snomio snomio, StorageManager storage) throws SnomException {"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"        return new CommandResponse(snomio.getTaskList(taskList), false);"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":29}},{"path":"src/main/java/snom/model/Snom.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.model;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import java.nio.file.Path;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import snom.common.exceptions.SnomException;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import snom.logic.Parser;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import snom.logic.commands.Command;"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import snom.logic.commands.CommandResponse;"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import snom.model.task.TaskList;"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import snom.storage.StorageManager;"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import snom.ui.Snomio;"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":" * Snom is a Personal Assistant Chatbot that helps"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":" * a person to keep track of various things."},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"public class Snom {"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"    private StorageManager storage;"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    private TaskList taskList;"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    private Snomio snomio;"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"     * Constructs a {@code Snom}"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"     * @param filePath file path to store task list"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"    public Snom(Path filePath) {"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"        snomio \u003d new Snomio();"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"        storage \u003d new StorageManager(filePath);"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"            taskList \u003d storage.importTask();"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"        } catch (SnomException e) {"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"     * Returns {@code CommandResponse} with the response message and whether to exit after command"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"     * @param userInput String of user input"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"     * @return          CommandResponse"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"    public CommandResponse getResponse(String userInput) {"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"            Command command \u003d Parser.parse(userInput);"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"            CommandResponse response \u003d command.execute(taskList, snomio, storage);"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"            return response;"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"        } catch (SnomException e) {"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"            return new CommandResponse(e.getMessage(), false, true);"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":53}},{"path":"src/main/java/snom/model/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.model.task;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import snom.common.exceptions.SnomException;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":" * Stores Deadline {@code TaskWithDate}\u0027s information"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"public class Deadline extends TaskWithDate {"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"    public Deadline(String description, String dateTime) throws SnomException {"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"        super(description, dateTime);"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"    public String getSaveString() {"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"        return \"D,\" + super.getSaveString();"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + getDateTimeString() + \")\";"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":22}},{"path":"src/main/java/snom/model/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.model.task;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import snom.common.exceptions.SnomException;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":" * Stores Event {@code TaskWithDate}\u0027s information"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"public class Event extends TaskWithDate {"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"    public Event(String description, String dateTime) throws SnomException {"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"        super(description, dateTime);"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"    public String getSaveString() {"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"        return \"E,\" + super.getSaveString();"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + getDateTimeString() + \")\";"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":22}},{"path":"src/main/java/snom/model/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.model.task;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import snom.common.core.Messages;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":" * Stores task\u0027s information."},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"public class Task {"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"    private String description;"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"    private boolean isFinished;"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"     * Constructs a {@code Task}"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"     * @param description description of task"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"    public Task(String description) {"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"        this.description \u003d description;"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"        this.isFinished \u003d false;"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    public String getDescription() {"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"        return this.description;"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    public boolean hasFinished() {"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"        return isFinished;"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    public String getStatusSymbol() {"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"        return isFinished ? Messages.SYMBOL_TICK : Messages.SYMBOL_BLANK;"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"    public void setDescription(String description) {"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"        this.description \u003d description;"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"    public void setStatus(boolean isFinished) {"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"        this.isFinished \u003d isFinished;"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"     * Returns a string for saving purposes"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"     * @return formatted string"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"    public String getSaveString() {"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"        return (isFinished ? \"true\" : \"false\") + \",\" + this.description;"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"    public String toString() {"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"        return \"[\" + this.getStatusSymbol() + \"] \" + this.description;"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":55}},{"path":"src/main/java/snom/model/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.model.task;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import snom.common.core.Messages;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import snom.common.exceptions.SnomException;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"     * Returns a new task list with task description containing the given keyword"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"     * @param keyword keyword to be searched"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"     * @return        new task list"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    public TaskList findTask(String keyword) {"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"        TaskList newList \u003d new TaskList();"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"        for (Task task: this) {"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"            if (task.getDescription().contains(keyword)) {"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"                newList.add(task);"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"            }"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"        return newList;"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"     * Set the task status by the given task numbers as finished."},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"     * Then prints out the complete messages."},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"     * @param taskNums       task number list that needs to mark as finish"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"     * @return               a list of finished snom.tasks"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException If the task number is not available in the task list."},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"    public Task[] finishTask(int[] taskNums) throws SnomException {"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"        Task[] finishedTasks \u003d new Task[taskNums.length];"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"        for (int i \u003d 0; i \u003c taskNums.length; i++) {"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"            int taskNo \u003d taskNums[i] - 1;"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"            try {"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"                Task task \u003d this.get(taskNo);"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"                task.setStatus(true);"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"                assert task.hasFinished() \u003d\u003d true : \"Task status should be set to true\";"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"                finishedTasks[i] \u003d task;"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"                throw new SnomException(String.format(Messages.ERROR_INVALID_TASK_NUM, taskNums[i]));"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"        return finishedTasks;"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"     * Removes the given task numbers from the task list."},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"     * Then prints out the deleted messages."},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"     * @param  taskNums      task number list that needs to be removed"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"     * @return               a list of deleted snom.tasks"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException If the task number is not available in the task list."},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"    public Task[] deleteTask(int[] taskNums) throws SnomException {"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"        Task[] deletedTasks \u003d new Task[taskNums.length];"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"        for (int i \u003d 0; i \u003c taskNums.length; i++) {"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"            int taskNo \u003d taskNums[i] - 1 - i;"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"            try {"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"                Task task \u003d this.get(taskNo);"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"                this.remove(task);"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"                deletedTasks[i] \u003d task;"},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"            } catch (IndexOutOfBoundsException e) {"},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"                throw new SnomException(String.format(Messages.ERROR_INVALID_TASK_NUM, taskNums[i]));"},{"lineNumber":68,"author":{"gitId":"Sharptail"},"content":"            }"},{"lineNumber":69,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"Sharptail"},"content":"        return deletedTasks;"},{"lineNumber":71,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":72}},{"path":"src/main/java/snom/model/task/TaskWithDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.model.task;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import snom.common.core.Messages;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import snom.common.exceptions.SnomException;"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import snom.common.util.TaskUtil;"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":" * Stores extra date information for {@code Task}"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"public class TaskWithDate extends Task {"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"    private LocalDateTime dateTime;"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"     * Constructs a {@code TaskWithDate}"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"     * @param description    description of task"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"     * @param dateTime       date time of task"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException if invalid date time is given"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"    public TaskWithDate(String description, String dateTime) throws SnomException {"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"        super(description);"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"        this.dateTime \u003d convertDateTime(dateTime);"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"     * Returns a formatted date time."},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"     * Eg. Tue 26 Jan 2021 03:33pm"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"     * @return formatted date time"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"    public String getDateTimeString() {"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"        return this.dateTime.format(TaskUtil.DATE_TIME_OUTPUT_FORMAT);"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"    public void setDateTime(LocalDateTime dateTime) {"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"     * Returns a LocalDateTime by converting from a given string."},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"     * @param dateTime          string representing date and time"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"     * @return                  converted/formatted LocalDateTime"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException    if the given string is an invalid date time format"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"    public LocalDateTime convertDateTime(String dateTime) throws SnomException {"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"        dateTime \u003d dateTime.replaceFirst(\" \", \"\");"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"        try {"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"            LocalDateTime formattedDateTime \u003d LocalDateTime.parse(dateTime, TaskUtil.DATE_TIME_INPUT_FORMAT);"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"            return formattedDateTime;"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"            throw new SnomException(Messages.ERROR_INVALID_DATE_TIME);"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"    public String getSaveString() {"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"        return super.getSaveString() + \", \" + this.dateTime.format(TaskUtil.DATE_TIME_SAVE_FORMAT);"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":63}},{"path":"src/main/java/snom/model/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.model.task;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":" * Stores todo {@code Task}\u0027s information"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"    public Todo(String description) {"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"    public String getSaveString() {"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"        return \"T,\" + super.getSaveString();"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"    public String toString() {"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":20}},{"path":"src/main/java/snom/storage/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.storage;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import java.io.InputStream;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import java.io.InputStreamReader;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import java.nio.charset.StandardCharsets;"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import java.nio.file.FileAlreadyExistsException;"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import java.nio.file.Files;"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import java.nio.file.Path;"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import java.util.List;"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import java.util.stream.Collectors;"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"import snom.common.exceptions.SnomException;"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":" * Manages folder/file creation and read file for Snom"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"public class FileManager {"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    protected Path path;"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"    public FileManager(Path filePath) {"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"        this.path \u003d filePath;"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"     * Creates directory with the given path"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    public void createFolder() {"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"            Files.createDirectories(path.getParent());"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"        } catch (FileAlreadyExistsException e) {"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"            System.out.println(\"File exist. Nothing needs to be done here\");"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"        } catch (IOException e) {"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"     * Creates file with the given path"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"    public void createFile() {"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"        try {"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"            Files.createFile(path);"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"        } catch (FileAlreadyExistsException e) {"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"            System.out.println(\"File exist. Nothing needs to be done here\");"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"        } catch (IOException e) {"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"     * Returns an array list of strings after reading from a file."},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"     * @return array list of strings"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"    public List\u003cString\u003e readFile() throws SnomException {"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"        try {"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(path);"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"            return lines;"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"        } catch (IOException e) {"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"            throw new SnomException(e.getMessage());"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"Sharptail"},"content":"     * Returns string of given text file"},{"lineNumber":69,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":70,"author":{"gitId":"Sharptail"},"content":"     * @return"},{"lineNumber":71,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"Sharptail"},"content":"    public String readResourcesText() {"},{"lineNumber":73,"author":{"gitId":"Sharptail"},"content":"        InputStream is \u003d this.getClass().getResourceAsStream(path.getParent() + \"/\" + path.getFileName());"},{"lineNumber":74,"author":{"gitId":"Sharptail"},"content":"        String text \u003d new BufferedReader(new InputStreamReader(is, StandardCharsets.UTF_8))"},{"lineNumber":75,"author":{"gitId":"Sharptail"},"content":"                .lines()"},{"lineNumber":76,"author":{"gitId":"Sharptail"},"content":"                .collect(Collectors.joining(\"\\n\"));"},{"lineNumber":77,"author":{"gitId":"Sharptail"},"content":"        return text;"},{"lineNumber":78,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":79}},{"path":"src/main/java/snom/storage/StorageManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.storage;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import java.nio.file.Files;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import java.nio.file.Path;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import java.nio.file.StandardOpenOption;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import snom.common.exceptions.SnomException;"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import snom.model.task.Deadline;"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import snom.model.task.Event;"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import snom.model.task.Task;"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import snom.model.task.TaskList;"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"import snom.model.task.Todo;"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":" * Manages storage related process for Snom"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":" * Eg. Import task, save task"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"public class StorageManager extends FileManager {"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"     * Constructs a {@code StorageManager}"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"     * @param filePath file path to save task list"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"    public StorageManager(Path filePath) {"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"        super(filePath);"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"        super.createFolder();"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"        super.createFile();"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"     * Returns an array list of {@code Task} from input list of strings"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"     * @return               array list of {@code Task}"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException if invalid date for deadline or event"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"    public TaskList importTask() throws SnomException {"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"        List\u003cString\u003e lines \u003d super.readFile();"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"        for (String line: lines) {"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"            String[] attr \u003d line.split(\",\");"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"            switch (attr[0]) {"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"            case \"T\":"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"                Todo todo \u003d new Todo(attr[2]);"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"                todo.setStatus(Boolean.parseBoolean(attr[1]));"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"                taskList.add(todo);"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"                break;"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"            case \"D\":"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"                Deadline deadline \u003d new Deadline(attr[2], attr[3]);"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"                deadline.setStatus(Boolean.parseBoolean(attr[1]));"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"                taskList.add(deadline);"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"                break;"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"            case \"E\":"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"                Event event \u003d new Event(attr[2], attr[3]);"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"                event.setStatus(Boolean.parseBoolean(attr[1]));"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"                taskList.add(event);"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"                break;"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"            default:"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"            }"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"        return taskList;"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"     * Writes the given {@code TaskList} into the save file"},{"lineNumber":68,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"Sharptail"},"content":"     * @param taskList list of {@code Task}"},{"lineNumber":70,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"Sharptail"},"content":"    public void saveFile(TaskList taskList) {"},{"lineNumber":72,"author":{"gitId":"Sharptail"},"content":"        try {"},{"lineNumber":73,"author":{"gitId":"Sharptail"},"content":"            Files.writeString(path, \"\");"},{"lineNumber":74,"author":{"gitId":"Sharptail"},"content":"            for (Task task: taskList) {"},{"lineNumber":75,"author":{"gitId":"Sharptail"},"content":"                Files.writeString(path, task.getSaveString() + \"\\n\", StandardOpenOption.APPEND);"},{"lineNumber":76,"author":{"gitId":"Sharptail"},"content":"            }"},{"lineNumber":77,"author":{"gitId":"Sharptail"},"content":"        } catch (IOException e) {"},{"lineNumber":78,"author":{"gitId":"Sharptail"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":79,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":81}},{"path":"src/main/java/snom/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.ui;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"import snom.common.core.Style;"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":" * Controller for DialogBox."},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"public class DialogBox extends HBox {"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"    private Label dialog;"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    private ImageView displayPicture;"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"    private DialogBox(String text, Image img, boolean isError) {"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"            fxmlLoader.load();"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"            e.printStackTrace();"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"        displayPicture.setImage(img);"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"        if (isError) {"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"            dialog.setStyle(Style.STYLE_DIALOG_ERROR);"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"        dialog.setText(text);"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"    private void flip() {"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"        Collections.reverse(tmp);"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"        setAlignment(Pos.CENTER_LEFT);"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"        return new DialogBox(text, img, false);"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"    public static DialogBox getSnomDialog(String text, Image img, boolean isError) {"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"        var db \u003d new DialogBox(text, img, isError);"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"        db.flip();"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"        return db;"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":63}},{"path":"src/main/java/snom/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.ui;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import javafx.animation.PauseTransition;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import javafx.application.Platform;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import javafx.util.Duration;"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import snom.logic.commands.CommandResponse;"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"import snom.model.Snom;"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"    private VBox dialogContainer;"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    private TextField userInput;"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"    private Button sendButton;"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"    private Snom snom;"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    private Snomio snomio \u003d new Snomio();"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/User.png\"));"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"    private Image snomImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Snom.png\"));"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"     * Initializes Main Window by setting the windows height and display welcome message."},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"    @FXML"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"    public void initialize() {"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"                DialogBox.getSnomDialog(snomio.getWelcomeMsg(), snomImage, false)"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"        );"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"    public void setSnom(Snom snom) {"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"        this.snom \u003d snom;"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Snom\u0027s reply and then appends them to"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"    @FXML"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"    private void handleUserInput() {"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"        CommandResponse response \u003d snom.getResponse(input);"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"        DialogBox userDialog \u003d DialogBox.getUserDialog(input, userImage);"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"        DialogBox snomDialog \u003d DialogBox.getSnomDialog(response.getResponseMsg(), snomImage, response.isError());"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"        dialogContainer.getChildren().addAll(userDialog, snomDialog);"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"        if (response.isExit()) {"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"            delay.setOnFinished(event -\u003e {"},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"                Platform.exit();"},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"            });"},{"lineNumber":68,"author":{"gitId":"Sharptail"},"content":"            delay.play();"},{"lineNumber":69,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":70,"author":{"gitId":"Sharptail"},"content":"        userInput.clear();"},{"lineNumber":71,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":72}},{"path":"src/main/java/snom/ui/Snomio.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.ui;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import java.io.BufferedOutputStream;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import java.io.BufferedReader;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import java.io.InputStreamReader;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import java.io.PrintWriter;"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import java.util.StringTokenizer;"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import snom.common.core.Messages;"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import snom.common.exceptions.SnomException;"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import snom.common.util.SnomioUtil;"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import snom.model.task.Task;"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"import snom.model.task.TaskList;"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":" * Deals with interactions with the user."},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":" * Snomio simply compile both BufferedReader and BufferedWriter"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":" * for easier I/O usages. For eg. read commands, contents, numbers"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":" * from user\u0027s input."},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":" *"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":" * Solution below adapted from https://github.com/Kattis/kattio/blob/master/Kattio.java"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"public class Snomio extends PrintWriter {"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    private BufferedReader reader;"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    private StringTokenizer tokenizer;"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"     * Constructs a {@code Snomio}"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"    public Snomio() {"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"        super(new BufferedOutputStream(System.out));"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"        reader \u003d new BufferedReader(new InputStreamReader(System.in));"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"     * Returns the welcome message of Snom on startup."},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"     * @return welcome message"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"    public String getWelcomeMsg() {"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"        return Messages.MESSAGE_WELCOME;"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"     * Returns a message containing the entire {@code TaskList}."},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"     * @return               string of entire task List"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException if there is content after the command or there isn\u0027t any task in the task list"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"    public String getTaskList(TaskList taskList) throws SnomException {"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"        if (taskList.isEmpty()) {"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"            throw new SnomException(Messages.MESSAGE_EMPTY_TASK_LIST);"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"        String message \u003d Messages.MESSAGE_TASK_LIST;"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"            message +\u003d (i + 1) + \". \" + taskList.get(i).toString() + \"\\n\";"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"        return message;"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"     * Returns out the list from searching the keyword."},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"     * @return               string of matching task list"},{"lineNumber":68,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException if there is content after the command or there isn\u0027t any task in the task list"},{"lineNumber":69,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"Sharptail"},"content":"    public String getMatchingTaskList(TaskList taskList) throws SnomException {"},{"lineNumber":71,"author":{"gitId":"Sharptail"},"content":"        if (taskList.isEmpty()) {"},{"lineNumber":72,"author":{"gitId":"Sharptail"},"content":"            throw new SnomException(Messages.MESSAGE_NO_MATCHING_TASK);"},{"lineNumber":73,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":74,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":75,"author":{"gitId":"Sharptail"},"content":"        String message \u003d Messages.MESSAGE_MATCHING_TASK_LIST;"},{"lineNumber":76,"author":{"gitId":"Sharptail"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":77,"author":{"gitId":"Sharptail"},"content":"            message +\u003d (i + 1) + \". \" + taskList.get(i).toString() + \"\\n\";"},{"lineNumber":78,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":80,"author":{"gitId":"Sharptail"},"content":"        return message;"},{"lineNumber":81,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":83,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":84,"author":{"gitId":"Sharptail"},"content":"     * Returns the {@code Task} added into the {@code TaskList} and size of current taskList."},{"lineNumber":85,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":86,"author":{"gitId":"Sharptail"},"content":"     * @param task     task added"},{"lineNumber":87,"author":{"gitId":"Sharptail"},"content":"     * @param listSize task list size"},{"lineNumber":88,"author":{"gitId":"Sharptail"},"content":"     * @return         task added into taskList"},{"lineNumber":89,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"Sharptail"},"content":"    public String getTaskAdded(Task task, int listSize) {"},{"lineNumber":91,"author":{"gitId":"Sharptail"},"content":"        return String.format(Messages.MESSAGE_TASK_ADDED, task.toString(), listSize);"},{"lineNumber":92,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":94,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":95,"author":{"gitId":"Sharptail"},"content":"     * Returns the list of recent finished {@code Task}."},{"lineNumber":96,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":97,"author":{"gitId":"Sharptail"},"content":"     * @param finishedTasks list of finished {@code Task}"},{"lineNumber":98,"author":{"gitId":"Sharptail"},"content":"     * @return              recent finished {@code Task}"},{"lineNumber":99,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":100,"author":{"gitId":"Sharptail"},"content":"    public String getFinishedTasks(Task[] finishedTasks) {"},{"lineNumber":101,"author":{"gitId":"Sharptail"},"content":"        String message \u003d Messages.MESSAGE_TASK_FINISHED;"},{"lineNumber":102,"author":{"gitId":"Sharptail"},"content":"        for (Task task: finishedTasks) {"},{"lineNumber":103,"author":{"gitId":"Sharptail"},"content":"            message +\u003d \"\\t\" + task.toString() + \"\\n\";"},{"lineNumber":104,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":105,"author":{"gitId":"Sharptail"},"content":"        return message;"},{"lineNumber":106,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":108,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":109,"author":{"gitId":"Sharptail"},"content":"     * Returns the list of recently deleted {@code Task}."},{"lineNumber":110,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":111,"author":{"gitId":"Sharptail"},"content":"     * @param deletedTasks list of deleted {@code Task}"},{"lineNumber":112,"author":{"gitId":"Sharptail"},"content":"     * @return             recent deleted {@code Task}"},{"lineNumber":113,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"Sharptail"},"content":"    public String getDeletedTasks(Task[] deletedTasks) {"},{"lineNumber":115,"author":{"gitId":"Sharptail"},"content":"        String message \u003d Messages.MESSAGE_TASK_DELETED;"},{"lineNumber":116,"author":{"gitId":"Sharptail"},"content":"        for (Task task: deletedTasks) {"},{"lineNumber":117,"author":{"gitId":"Sharptail"},"content":"            message +\u003d \"\\t\" + task.toString() + \"\\n\";"},{"lineNumber":118,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":119,"author":{"gitId":"Sharptail"},"content":"        return message;"},{"lineNumber":120,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":122,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":123,"author":{"gitId":"Sharptail"},"content":"     * Returns exit message."},{"lineNumber":124,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":125,"author":{"gitId":"Sharptail"},"content":"     * @return String exit message"},{"lineNumber":126,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"Sharptail"},"content":"    public String getExitMessage() {"},{"lineNumber":128,"author":{"gitId":"Sharptail"},"content":"        return Messages.MESSAGE_EXIT;"},{"lineNumber":129,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":131,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":132,"author":{"gitId":"Sharptail"},"content":"     * Returns the first word from next input line."},{"lineNumber":133,"author":{"gitId":"Sharptail"},"content":"     * If there are already words/tokens in the tokenizer, it will return the next first token instead."},{"lineNumber":134,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":135,"author":{"gitId":"Sharptail"},"content":"     * @return  the first word that extracted from the tokenizer"},{"lineNumber":136,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":137,"author":{"gitId":"Sharptail"},"content":"    public String readWord() {"},{"lineNumber":138,"author":{"gitId":"Sharptail"},"content":"        String input \u003d null;"},{"lineNumber":139,"author":{"gitId":"Sharptail"},"content":"        String token;"},{"lineNumber":140,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":141,"author":{"gitId":"Sharptail"},"content":"        while (SnomioUtil.hasNoTokens(tokenizer)) {"},{"lineNumber":142,"author":{"gitId":"Sharptail"},"content":"            try {"},{"lineNumber":143,"author":{"gitId":"Sharptail"},"content":"                input \u003d reader.readLine();"},{"lineNumber":144,"author":{"gitId":"Sharptail"},"content":"            } catch (IOException e) {"},{"lineNumber":145,"author":{"gitId":"Sharptail"},"content":"                e.printStackTrace();"},{"lineNumber":146,"author":{"gitId":"Sharptail"},"content":"            }"},{"lineNumber":147,"author":{"gitId":"Sharptail"},"content":"            tokenizer \u003d new StringTokenizer(input);"},{"lineNumber":148,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"Sharptail"},"content":"        token \u003d tokenizer.nextToken();"},{"lineNumber":150,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":151,"author":{"gitId":"Sharptail"},"content":"        return token;"},{"lineNumber":152,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":154,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":155,"author":{"gitId":"Sharptail"},"content":"     * Returns remaining words/tokens in the tokenizer as a string."},{"lineNumber":156,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":157,"author":{"gitId":"Sharptail"},"content":"     *  @return the whole line of input or the rest of the sentence from the previous read line"},{"lineNumber":158,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":159,"author":{"gitId":"Sharptail"},"content":"    public String readRemainingLine() {"},{"lineNumber":160,"author":{"gitId":"Sharptail"},"content":"        String line \u003d \"\";"},{"lineNumber":161,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":162,"author":{"gitId":"Sharptail"},"content":"        if (SnomioUtil.hasNoTokens(tokenizer)) {"},{"lineNumber":163,"author":{"gitId":"Sharptail"},"content":"            try {"},{"lineNumber":164,"author":{"gitId":"Sharptail"},"content":"                line \u003d reader.readLine();"},{"lineNumber":165,"author":{"gitId":"Sharptail"},"content":"            } catch (IOException e) {"},{"lineNumber":166,"author":{"gitId":"Sharptail"},"content":"                e.printStackTrace();"},{"lineNumber":167,"author":{"gitId":"Sharptail"},"content":"            }"},{"lineNumber":168,"author":{"gitId":"Sharptail"},"content":"        } else {"},{"lineNumber":169,"author":{"gitId":"Sharptail"},"content":"            line +\u003d tokenizer.nextToken(\"\");"},{"lineNumber":170,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":171,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":172,"author":{"gitId":"Sharptail"},"content":"        return line;"},{"lineNumber":173,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":175,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":176,"author":{"gitId":"Sharptail"},"content":"     * Returns the first integer input."},{"lineNumber":177,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":178,"author":{"gitId":"Sharptail"},"content":"     * @return  single integer input"},{"lineNumber":179,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":180,"author":{"gitId":"Sharptail"},"content":"    public int readInt() throws SnomException {"},{"lineNumber":181,"author":{"gitId":"Sharptail"},"content":"        String nextWord \u003d readWord();"},{"lineNumber":182,"author":{"gitId":"Sharptail"},"content":"        if (SnomioUtil.isValidInteger(nextWord)) {"},{"lineNumber":183,"author":{"gitId":"Sharptail"},"content":"            return Integer.parseInt(nextWord);"},{"lineNumber":184,"author":{"gitId":"Sharptail"},"content":"        } else {"},{"lineNumber":185,"author":{"gitId":"Sharptail"},"content":"            throw new SnomException(Messages.ERROR_INVALID_INT_INPUT);"},{"lineNumber":186,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":187,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":188,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":189,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":190,"author":{"gitId":"Sharptail"},"content":"     * Returns first double input."},{"lineNumber":191,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":192,"author":{"gitId":"Sharptail"},"content":"     * @return  single double input"},{"lineNumber":193,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":194,"author":{"gitId":"Sharptail"},"content":"    public double readDouble() throws SnomException {"},{"lineNumber":195,"author":{"gitId":"Sharptail"},"content":"        String nextWord \u003d readWord();"},{"lineNumber":196,"author":{"gitId":"Sharptail"},"content":"        if (SnomioUtil.isValidDouble(nextWord)) {"},{"lineNumber":197,"author":{"gitId":"Sharptail"},"content":"            return Double.parseDouble(nextWord);"},{"lineNumber":198,"author":{"gitId":"Sharptail"},"content":"        } else {"},{"lineNumber":199,"author":{"gitId":"Sharptail"},"content":"            throw new SnomException(Messages.ERROR_INVALID_INT_INPUT);"},{"lineNumber":200,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":201,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":202,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":202}},{"path":"src/main/resources/help/commands.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"These are snom.common Snom commands used in various situations:"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"todo            Add a todo task to task list"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"deadline        Add a task with deadline to task list"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"event           Add a event task to task list"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"list            List all the snom.model.task added to task list"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"finish          Mark task(s) as finished"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"delete          Remove task(s) from task list"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"find            Search for task(s) with given key word"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"help            Display help page"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"See \u0027help \u003ccommand\u003e for more info on specific command\u0027."},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":""}],"authorContributionMap":{"Sharptail":13}},{"path":"src/main/resources/help/deadline.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"DEADLINE Help Page"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"Description:"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"    Add a task with deadline to task list"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"Usage:"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"    deadline [description] /by [YYYY-MM-DD HH:MM | YYYY-MM-DD]"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"Example:"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"    deadline return book /by 2020-09-27"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"    deadline assignment submission /by 2020-12-25 23:59"}],"authorContributionMap":{"Sharptail":11}},{"path":"src/main/resources/help/delete.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"DELETE Help Page"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"Description:"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"    Remove task(s) from task list"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"Usage:"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"    delete [task numbers]"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"Example:"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"    delete 2"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"    delete 2 3 4"}],"authorContributionMap":{"Sharptail":11}},{"path":"src/main/resources/help/event.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"EVENT Help Page"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"Description:"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"    Add a event task to task list"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"Usage:"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"    event [description] /at [YYYY-MM-DD HH:MM | YYYY-MM-DD]"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"Example:"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"    event party /at 2020-02-28"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"    event meeting /at 2020-05-07 12:30"}],"authorContributionMap":{"Sharptail":11}},{"path":"src/main/resources/help/find.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"FIND Help Page"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"Description:"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"    Search for task(s) with given key word"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"Usage:"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"    find [keyword]"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"Example:"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"    find book"}],"authorContributionMap":{"Sharptail":10}},{"path":"src/main/resources/help/finish.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"FINISH Help Page"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"Description:"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"    Mark task(s) as finished"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"Usage:"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"    finish [task numbers]"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"Example:"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"    finish 2"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"    finish 2 3 4"}],"authorContributionMap":{"Sharptail":11}},{"path":"src/main/resources/help/list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"LIST Help Page"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"Description:"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"    List all the task added to task list"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"Usage:"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"    list"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"Example:"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"    list"}],"authorContributionMap":{"Sharptail":10}},{"path":"src/main/resources/help/todo.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"TODO Help Page"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"Description:"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"    Add a todo task to task list"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"Usage:"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"    todo [description]"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"Example:"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"    todo borrow book"}],"authorContributionMap":{"Sharptail":10}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.geometry.*?\u003e"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.scene.control.*?\u003e"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.scene.image.*?\u003e"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.scene.layout.*?\u003e"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"\u003cfx:root alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxHeight\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: white; -fx-background-radius: 1em; -fx-border-color: #bffffa; -fx-border-radius: 1em;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"         \u003cHBox.margin\u003e"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"         \u003c/HBox.margin\u003e"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"         \u003cpadding\u003e"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"            \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"         \u003c/padding\u003e"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"        \u003c/Label\u003e"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    \u003c/children\u003e"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    \u003cpadding\u003e"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    \u003c/padding\u003e"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"Sharptail":23}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.scene.control.*?\u003e"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.scene.layout.*?\u003e"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\" prefWidth\u003d\"600.0\" style\u003d\"-fx-background-color: #d7fcf9;\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"snom.ui.MainWindow\"\u003e"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"    \u003cchildren\u003e"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"656.0\" prefWidth\u003d\"600.0\" style\u003d\"-fx-background: #d7fcf9; -fx-border-color: #d7fcf9;\" stylesheets\u003d\"@../css/scroll.css\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"            \u003ccontent\u003e"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"650.0\" prefWidth\u003d\"580.0\" style\u003d\"-fx-background-color: #d7fcf9;\" /\u003e"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"            \u003c/content\u003e"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"        \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"524.0\" style\u003d\"-fx-background-radius: 5em;\" AnchorPane.bottomAnchor\u003d\"0.0\" /\u003e"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"        \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-radius: 5em; -fx-background-color: white; -fx-border-radius: 5em; -fx-border-color: #a3a3a3;\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"    \u003c/children\u003e"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"Sharptail":16}},{"path":"src/test/java/snom/SnomTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import java.nio.file.Paths;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import snom.common.exceptions.SnomException;"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import snom.logic.commands.CommandEnum;"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import snom.model.task.TaskList;"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import snom.storage.StorageManager;"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"public class SnomTest {"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"    @Test"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    public void getCommandTest() {"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"        CommandEnum expectedCommand \u003d CommandEnum.TODO;"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"        assertEquals(CommandEnum.getCommand(\"TODO\"), expectedCommand);"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"        expectedCommand \u003d CommandEnum.NONE;"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"        assertEquals(CommandEnum.getCommand(\"DUMMY\"), expectedCommand);"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    public void storageTest() throws SnomException {"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"        StorageManager storage \u003d new StorageManager(Paths.get(\"data\", \"snom_test.txt\"));"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"        TaskList taskList \u003d storage.importTask();"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"        assertEquals(storage.readFile().size(), taskList.size());"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":31}},{"path":"src/test/java/snom/common/util/SnomioUtilTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.common.util;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import java.util.StringTokenizer;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"public class SnomioUtilTest {"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"    public void hasNoTokens() {"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"        StringTokenizer tokenizer \u003d new StringTokenizer(\"Sample\");"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"        // has token"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"        assertFalse(SnomioUtil.hasNoTokens(tokenizer));"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"        // remove next token"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"        tokenizer.nextToken();"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"        // no token"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"        assertTrue(SnomioUtil.hasNoTokens(tokenizer));"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    public void isValidInteger() {"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"        assertTrue(SnomioUtil.isValidInteger(\"123\"));"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    @Test"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"    public void isValidDouble() {"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"        assertTrue(SnomioUtil.isValidDouble(\"23.321\"));"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":34}},{"path":"src/test/java/snom/common/util/TaskUtilTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.common.util;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"public class TaskUtilTest {"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"    private LocalDateTime inputDateTime \u003d LocalDateTime.parse(\"2021-09-27 15:00\", TaskUtil.DATE_TIME_INPUT_FORMAT);"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"    public void dateTimeInputFormat() {"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"        assertEquals(inputDateTime.getYear(), 2021);"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"        assertEquals(inputDateTime.getMonthValue(), 9);"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"        assertEquals(inputDateTime.getDayOfMonth(), 27);"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"        assertEquals(inputDateTime.getHour(), 15);"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"        assertEquals(inputDateTime.getMinute(), 0);"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    public void dateTimeSaveFormat() {"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"        String saveDateTime \u003d inputDateTime.format(TaskUtil.DATE_TIME_SAVE_FORMAT);"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"        assertEquals(saveDateTime, \"2021-09-27 15:00\");"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":25}},{"path":"src/test/java/snom/logic/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.logic;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import java.nio.file.Paths;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import snom.common.exceptions.SnomException;"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import snom.logic.commands.AddCommand;"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import snom.logic.commands.CommandEnum;"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import snom.logic.commands.DeleteCommand;"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import snom.logic.commands.FinishCommand;"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"import snom.model.task.TaskList;"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"import snom.storage.StorageManager;"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"import snom.ui.Snomio;"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"public class CommandTest {"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    private TaskList taskList \u003d new TaskList();"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    private Snomio snomio \u003d new Snomio();"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    private StorageManager storage \u003d new StorageManager(Paths.get(\"data\", \"snom_test.txt\"));"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    public void addFinishDeleteCommand() {"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"            // Add command"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"            String content \u003d \"read book\";"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"            AddCommand addCommand \u003d new AddCommand(CommandEnum.TODO, content);"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"            addCommand.execute(taskList, snomio, storage);"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"            assertEquals(taskList.get(0).getDescription(), content);"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"            // Finish Command"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"            content \u003d \"1\";"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"            FinishCommand finishCommand \u003d new FinishCommand(CommandEnum.FINISH, content);"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"            finishCommand.execute(taskList, snomio, storage);"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"            assertEquals(taskList.get(0).hasFinished(), true);"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"            // Delete Command"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"            DeleteCommand deleteCommand \u003d new DeleteCommand(CommandEnum.DELETE, content);"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"            deleteCommand.execute(taskList, snomio, storage);"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"            assertEquals(taskList.size(), 0);"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"        } catch (SnomException e) {"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"            assert false;"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":47}},{"path":"src/test/java/snom/logic/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package snom.logic;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"public class ParserTest {"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"    private String userInput \u003d \"deadline return book /by 2021-09-27 15:00\";"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"    public void getCommandStr() {"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"        String commandStr \u003d Parser.parseCommandStr(userInput);"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"        assertEquals(commandStr, \"deadline\");"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"    public void getCommandContent() {"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"        String commandStr \u003d Parser.parseCommandContent(userInput);"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"        assertEquals(commandStr, \"return book /by 2021-09-27 15:00\");"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"todo read book"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"event meeting /at Monday"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"deadline return book /by 2021-01-25"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"event meeting /at 2021-01-30 19:00"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"list"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"todo"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"deadline"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"@@ -16,9 +16,9 @@ delete 3"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"list"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"delete 1 3"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"list"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"todo borrow book"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"todo"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"deadline return book /by Sunday"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"event meeting /at Monday"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"finish 2 4"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"event meeting /at 2021-01-30 19:00 asd"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"delete 1"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"list"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"bye"}],"authorContributionMap":{"Sharptail":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"REM run the program, feed snom.snom.logic.commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"java -classpath ..\\bin snom.model.Snom \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"Sharptail":2,"-":19}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"# run the program, feed snom.snom.logic.commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"java -classpath ../bin Snom \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"diff ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"Sharptail":3,"-":31}}]
