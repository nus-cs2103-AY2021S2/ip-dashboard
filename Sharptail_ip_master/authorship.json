[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"# Snom project template"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version."},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Set up the correct JDK version, as follows:"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. Click `OK`"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Import the project into Intellij as follows:"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   1. Click `Open or Import`."},{"lineNumber":16,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults."},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"1. After the importing is complete, locate the `src/main/java/Snom.java` file, right-click it, and choose `Run Snom.main()`. If the setup is correct, you should see something like the below:"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   ```"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   Hello from"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ____        _        "},{"lineNumber":22,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ "},{"lineNumber":23,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ```"}],"authorContributionMap":{"Sharptail":2,"-":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"    mainClassName \u003d \"Snom\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"}"},{"lineNumber":38,"author":{"gitId":"-"},"content":""},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"    archiveBaseName \u003d \"Snom\""},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}"},{"lineNumber":43,"author":{"gitId":"-"},"content":""},{"lineNumber":44,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"    configFile file(\"config/checkstyle/checkstyle.xml\")"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"}"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"checkstyleMain {"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"    source \u003d\u0027src/main/java\u0027"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"}"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"checkstyleTest {"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"    source \u003d\u0027src/test/java\u0027"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"Sharptail":23,"-":34}},{"path":"data/snom.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"T,true, read book"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"D,false, return book , 2021-09-21 08:00"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"E,false, attend meeting , 2021-05-07 12:00"}],"authorContributionMap":{"Sharptail":3}},{"path":"src/main/data/snom.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"T,true, read books"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"D,true, return book , 2021-01-25 19:00"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"E,true, go meeting , 2021-01-28 21:00"}],"authorContributionMap":{"Sharptail":3}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import javafx.geometry.Pos;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.Node;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.control.Button;"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.control.Label;"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import java.io.IOException;"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"import java.util.Collections;"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"public class DialogBox extends HBox {"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"    @FXML"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"    private Label dialog;"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    @FXML"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    private ImageView displayPicture;"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    private HBox hBox;"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"            fxmlLoader.load();"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"        } catch (IOException e) {"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"            e.printStackTrace();"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"        dialog.setText(text);"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"        displayPicture.setImage(img);"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"    private void flip() {"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(hBox.getChildren());"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"        Collections.reverse(tmp);"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"        setAlignment(Pos.CENTER_LEFT);"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"        return new DialogBox(text, img);"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"    public static DialogBox getSnomDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"        db.flip();"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"        return db;"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":57}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"public class Launcher {"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"    public static void main(String[] args){"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":7}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import javafx.stage.Stage;"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":" * A GUI for Snom using FXML."},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"public class Main extends Application {"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"    private Snom snom \u003d new Snom(\"data\", \"snom.txt\");"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"    public void start(Stage stage) {"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"        try {"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"            stage.setScene(scene);"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setSnom(snom);"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"            stage.show();"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"        } catch (IOException e) {"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"            e.printStackTrace();"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":29}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"import commands.CommandResponse;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"import javafx.application.Platform;"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"import ui.Snomio;"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    private VBox dialogContainer;"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    private TextField userInput;"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"    private Button sendButton;"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    private Snom snom;"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    private Snomio snomio \u003d new Snomio();"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"images/DaUser.png\"));"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"    private Image snomImage \u003d new Image(this.getClass().getResourceAsStream(\"images/DaSnom.png\"));"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"    @FXML"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"    public void initialize() {"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"                DialogBox.getSnomDialog(snomio.showWelcomeMsg(), snomImage)"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"        );"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"    public void setSnom(Snom snom) {"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"        this.snom \u003d snom;"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Snom\u0027s reply and then appends them to"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"    @FXML"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"    private void handleUserInput() {"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"        CommandResponse response \u003d snom.getResponse(input);"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"                DialogBox.getSnomDialog(response.getResponseMsg(), snomImage)"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"        );"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"        userInput.clear();"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"        if(response.isExit()){"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"            Platform.exit();"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":60}},{"path":"src/main/java/Snom.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"import commands.Command;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"import commands.CommandResponse;"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import exceptions.SnomException;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import parser.Parser;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import storage.Storage;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import ui.Snomio;"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":" * Snom is a Personal Assistant Chatbot that helps"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":" * a person to keep track of various things."},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":" *"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":" * @author: Sharptail"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"public class Snom {"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    private Storage storage;"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"    private TaskList taskList;"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"    private Snomio snomio;"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    public Snom(String dirPath, String filePath){"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"        snomio \u003d new Snomio(System.in, System.out);"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"        storage \u003d new Storage(dirPath, filePath);"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"        try{"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"            taskList \u003d new TaskList(storage.readFile());"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"        }catch(SnomException e){"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"            snomio.showLoadingError();"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"     * Returns {@code CommandResponse} with the response message and whether to exit after command"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"     * @param userInput String of user input"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"     * @return          CommandResponse"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"    public CommandResponse getResponse(String userInput) {"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"            Command command \u003d Parser.parse(userInput);"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"            CommandResponse response \u003d command.execute(taskList, snomio, storage);"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"            return response;"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"        } catch (SnomException e) {"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"            return new CommandResponse(e.getMessage(), false);"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":46}},{"path":"src/main/java/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import exceptions.SnomException;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import storage.Storage;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import tasks.*;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import ui.Snomio;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"public class AddCommand extends Command{"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"    public AddCommand(CommandEnum commandType, String content) {"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"        super(commandType, content);"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"     * Executes todo, deadline, event command."},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"     * @param taskList         list of task"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"     * @param snomio           I/O of Snom"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"     * @param storage          files handler of snom"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"     * @return CommandResponse response after command execution"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException   if command execution failed"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"    public CommandResponse execute(TaskList taskList, Snomio snomio, Storage storage) throws SnomException {"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"        Task task;"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"        if(commandType \u003d\u003d CommandEnum.TODO){"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"            task \u003d new Todo(this.content);"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"        }else if(commandType \u003d\u003d CommandEnum.DEADLINE){"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"            String[] dlArr \u003d splitContentWithDate(\"/by\");"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"            task \u003d new Deadline(dlArr[0], dlArr[1]);"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"        }else{"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"            String[] dlArr \u003d splitContentWithDate(\"/at\");"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"            task \u003d new Event(dlArr[0], dlArr[1]);"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"        taskList.addTask(task);"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"        storage.saveFile(taskList);"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"        return new CommandResponse(snomio.showTaskAdded(task, taskList.getSize()), false);"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"     * Returns a string array of size 2"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"     * first string contains the content of the task"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"     * second string contains the date of the task"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"     * @param delim             delimiter for string splitting"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"     * @return                  string array of content and date"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException    if no date was given or more than one date is given"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"    private String[] splitContentWithDate(String delim) throws SnomException {"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"        String[] splittedContent \u003d this.content.split(delim);"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"        if(splittedContent.length \u003d\u003d 2){"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"            return splittedContent;"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"        }else if(splittedContent.length \u003c 2){"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"            throw new SnomException(\"Please enter at least one date!\");"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"        }else{"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"            throw new SnomException(\"Oops! You have entered more than ONE date, please try again!\");"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":58}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import exceptions.SnomException;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import storage.Storage;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import ui.Snomio;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"public abstract class Command {"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"    CommandEnum commandType;"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"    String content;"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"    public Command(CommandEnum commandType, String content){"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"        this.commandType \u003d commandType;"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"        this.content \u003d content;"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"    public abstract CommandResponse execute(TaskList taskList, Snomio snomio, Storage storage) throws SnomException;"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":18}},{"path":"src/main/java/commands/CommandEnum.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"public enum CommandEnum {"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"    LIST,"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"    FINISH,"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"    DELETE,"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"    BYE,"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"    TODO,"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"    DEADLINE,"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"    EVENT,"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"    FIND,"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"    NONE;"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"     * Returns enum based of given string of command."},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"     * @param command string of command"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"     * @return        enum of command"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    public static CommandEnum getCommand(String command){"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"        for(CommandEnum cEnum: CommandEnum.values()){"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"            if(command.equalsIgnoreCase(String.valueOf(cEnum))){"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"                return cEnum;"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"            }"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"        return CommandEnum.NONE;"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":28}},{"path":"src/main/java/commands/CommandResponse.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"public class CommandResponse {"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"    private String responseMsg;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"    private boolean isExit;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"    public CommandResponse(String responseMsg, boolean isExit){"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"        this.responseMsg \u003d responseMsg;"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"        this.isExit \u003d isExit;"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"    public String getResponseMsg() {"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"        return responseMsg;"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    public void setResponseMsg(String responseMsg) {"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"        this.responseMsg \u003d responseMsg;"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    public boolean isExit() {"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"        return isExit;"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    public void setExit(boolean exit) {"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"        isExit \u003d exit;"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":27}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import exceptions.SnomException;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import parser.Parser;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import storage.Storage;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import tasks.Task;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import tasks.TaskList;"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import ui.Snomio;"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"public class DeleteCommand extends Command{"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"    public DeleteCommand(CommandEnum commandType, String content) {"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"        super(commandType, content);"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"     * Executes delete commmand"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"     * @param taskList         list of task"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"     * @param snomio           I/O of Snom"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"     * @param storage          files handler of snom"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"     * @return CommandResponse response after command execution"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException   if command execution failed"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    public CommandResponse execute(TaskList taskList, Snomio snomio, Storage storage) throws SnomException {"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"        int[] deleteList \u003d Parser.parseTaskNumbers(this.content);"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"        Task[] deletedTasks \u003d taskList.deleteTask(deleteList);"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"        storage.saveFile(taskList);"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"        return new CommandResponse(snomio.showDeletedTasks(deletedTasks), false);"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":31}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import exceptions.SnomException;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import storage.Storage;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import ui.Snomio;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"public class ExitCommand extends Command{"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"    public ExitCommand(CommandEnum commandType, String content) {"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"        super(commandType, content);"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"     * Executes exit command"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"     * @param taskList         list of task"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"     * @param snomio           I/O of Snom"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"     * @param storage          files handler of snom"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException   if command execution failed"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"     * @return CommandResponse response after command execution"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"    public CommandResponse execute(TaskList taskList, Snomio snomio, Storage storage) throws SnomException {"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"        return new CommandResponse(snomio.showExitMessage(), true);"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":26}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import exceptions.SnomException;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import storage.Storage;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import ui.Snomio;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"public class FindCommand extends Command{"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"    public FindCommand(CommandEnum commandType, String content) {"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"        super(commandType, content);"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"    public CommandResponse execute(TaskList taskList, Snomio snomio, Storage storage) throws SnomException {"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"        String content \u003d snomio.readContent(commandType.name());"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"        TaskList foundTaskList \u003d new TaskList(taskList.findTask(content));"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"        return new CommandResponse(snomio.showTaskList(foundTaskList), false);"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":19}},{"path":"src/main/java/commands/FinishCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import exceptions.SnomException;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import parser.Parser;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import storage.Storage;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import tasks.Task;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import tasks.TaskList;"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import ui.Snomio;"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"public class FinishCommand extends Command{"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"    public FinishCommand(CommandEnum commandType, String content) {"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"        super(commandType, content);"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"     * Executes finish command."},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"     * @param taskList         list of task"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"     * @param snomio           I/O of Snom"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"     * @param storage          files handler of snom"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"     * @return CommandResponse response after command execution"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException   if command execution failed"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    public CommandResponse execute(TaskList taskList, Snomio snomio, Storage storage) throws SnomException {"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"        int[] finishList \u003d Parser.parseTaskNumbers(this.content);"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"        Task[] finishedTasks \u003d taskList.finishTask(finishList);"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"        storage.saveFile(taskList);"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"        return new CommandResponse(snomio.showFinishedTasks(finishedTasks), false);"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":31}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import exceptions.SnomException;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import storage.Storage;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import ui.Snomio;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"public class ListCommand extends Command{"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"    public ListCommand(CommandEnum commandType, String content) {"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"        super(commandType, content);"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"     * Executes list command."},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"     * @param taskList         list of task"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"     * @param snomio           I/O of Snom"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"     * @param storage          files handler of snom"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"     * @return CommandResponse response after command execution"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException   if command execution failed"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"    public CommandResponse execute(TaskList taskList, Snomio snomio, Storage storage) throws SnomException {"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"        return new CommandResponse(snomio.showTaskList(taskList), false);"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":26}},{"path":"src/main/java/exceptions/SnomException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"public class SnomException extends Exception{"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"    public SnomException(String message){"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"        super(message);"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":8}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package parser;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import commands.*;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import exceptions.SnomException;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import java.util.Arrays;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"public class Parser {"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"     * Returns a command child class based on the given string of command."},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"     * @param userInput     string of user input"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"     * @return               Command child classes"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException if command is unknown"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"    public static Command parse(String userInput) throws SnomException {"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"        String commandStr \u003d parseCommandStr(userInput);"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"        String commandContent \u003d parseCommandContent(userInput);"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"        CommandEnum commandEnum \u003d CommandEnum.getCommand(commandStr);"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"        switch(commandEnum){"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"        case LIST:"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"            return new ListCommand(CommandEnum.LIST, commandContent);"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"        case FINISH:"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"            return new FinishCommand(CommandEnum.FINISH, commandContent);"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"        case DELETE:"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"            return new DeleteCommand(CommandEnum.DELETE, commandContent);"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"        case BYE:"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"            return new ExitCommand(CommandEnum.BYE, commandContent);"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"        case TODO:"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"            return new AddCommand(CommandEnum.TODO, commandContent);"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"        case DEADLINE:"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"            return new AddCommand(CommandEnum.DEADLINE, commandContent);"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"        case EVENT:"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"            return new AddCommand(CommandEnum.EVENT, commandContent);"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"        default:"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"            throw new SnomException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what \\\u0027\" + commandStr + \"\\\u0027 means :-(\");"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"     * Returns the command string from user input"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"     * @param userInput user input"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"     * @return          command as string"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"    public static String parseCommandStr(String userInput){"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"        return userInput.split(\" \")[0];"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"     * Returns the content of the command from user input"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"     * @param userInput user input"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"     * @return          content of the command"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"    public static String parseCommandContent(String userInput) {"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"        String[] splittedInputs \u003d userInput.split(\" \", 2);"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"        if(splittedInputs.length \u003e\u003d 2){"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"            return splittedInputs[1];"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"        }else{"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"            return \"\";"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"     * Returns an array of task numbers to be finished/deleted"},{"lineNumber":68,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"Sharptail"},"content":"     * @param taskNumString  string containing all the task numbers"},{"lineNumber":70,"author":{"gitId":"Sharptail"},"content":"     * @return               array of task numbers"},{"lineNumber":71,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException if no numbers was given"},{"lineNumber":72,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"Sharptail"},"content":"    public static int[] parseTaskNumbers(String taskNumString) throws SnomException {"},{"lineNumber":74,"author":{"gitId":"Sharptail"},"content":"        int[] taskNumbers \u003d Arrays.stream(taskNumString.split(\" \"))"},{"lineNumber":75,"author":{"gitId":"Sharptail"},"content":"                .mapToInt(Integer::parseInt)"},{"lineNumber":76,"author":{"gitId":"Sharptail"},"content":"                .toArray();"},{"lineNumber":77,"author":{"gitId":"Sharptail"},"content":"        if(taskNumbers.length \u003e\u003d 1){"},{"lineNumber":78,"author":{"gitId":"Sharptail"},"content":"            return taskNumbers;"},{"lineNumber":79,"author":{"gitId":"Sharptail"},"content":"        }else{"},{"lineNumber":80,"author":{"gitId":"Sharptail"},"content":"            throw new SnomException(\"Oops! Please at least give one task number\");"},{"lineNumber":81,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":83}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package storage; /**"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":" * This class handles any files related process for Snom"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":" * Eg. Create, Write, Delete save files."},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":" *"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":" * @author Sharptail"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import exceptions.SnomException;"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import tasks.*;"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import java.io.IOException;"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import java.nio.file.*;"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import java.util.ArrayList;"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"import java.util.List;"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"public class Storage {"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"    private Path path;"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    public Storage(String directory, String filename){"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"        this.path \u003d Paths.get(directory, filename);"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"        createFolder();"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"        createFile();"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"     * Creates directory with the given path"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    public void createFolder(){"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"        try{"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"            Files.createDirectories(path.getParent());"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"        }catch(FileAlreadyExistsException e){"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"            // Ignored"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"        }catch(IOException e){"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"     * Creates file with the given path"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"    public void createFile(){"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"        try{"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"            Files.createFile(path);"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"        }catch(FileAlreadyExistsException e){"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"            // Ignored"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"        }catch(IOException e){"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"     * Returns an array list of tasks after reading from a save file."},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"     * @return array list of tasks"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"    public ArrayList\u003cTask\u003e readFile() throws SnomException {"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"        try {"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(path);"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"            for(String line: lines){"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"                String attr[] \u003d line.split(\",\");"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"                switch(attr[0]){"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"                    case \"T\":"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"                        Todo todo \u003d new Todo(attr[2]);"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"                        todo.setStatus(Boolean.parseBoolean(attr[1]));"},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"                        taskList.add(todo);"},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"                        break;"},{"lineNumber":68,"author":{"gitId":"Sharptail"},"content":"                    case \"D\":"},{"lineNumber":69,"author":{"gitId":"Sharptail"},"content":"                        Deadline deadline \u003d new Deadline(attr[2], attr[3]);"},{"lineNumber":70,"author":{"gitId":"Sharptail"},"content":"                        deadline.setStatus(Boolean.parseBoolean(attr[1]));"},{"lineNumber":71,"author":{"gitId":"Sharptail"},"content":"                        taskList.add(deadline);"},{"lineNumber":72,"author":{"gitId":"Sharptail"},"content":"                        break;"},{"lineNumber":73,"author":{"gitId":"Sharptail"},"content":"                    case \"E\":"},{"lineNumber":74,"author":{"gitId":"Sharptail"},"content":"                        Event event \u003d new Event(attr[2], attr[3]);"},{"lineNumber":75,"author":{"gitId":"Sharptail"},"content":"                        event.setStatus(Boolean.parseBoolean(attr[1]));"},{"lineNumber":76,"author":{"gitId":"Sharptail"},"content":"                        taskList.add(event);"},{"lineNumber":77,"author":{"gitId":"Sharptail"},"content":"                        break;"},{"lineNumber":78,"author":{"gitId":"Sharptail"},"content":"                    default:"},{"lineNumber":79,"author":{"gitId":"Sharptail"},"content":"                }"},{"lineNumber":80,"author":{"gitId":"Sharptail"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"Sharptail"},"content":"        } catch (IOException e) {"},{"lineNumber":82,"author":{"gitId":"Sharptail"},"content":"            throw new SnomException(e.getMessage());"},{"lineNumber":83,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"Sharptail"},"content":"        return taskList;"},{"lineNumber":85,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":87,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"Sharptail"},"content":"     * Writes the given task list into the save file"},{"lineNumber":89,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":90,"author":{"gitId":"Sharptail"},"content":"     * @param taskList list of tasks"},{"lineNumber":91,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":92,"author":{"gitId":"Sharptail"},"content":"    public void saveFile(TaskList taskList){"},{"lineNumber":93,"author":{"gitId":"Sharptail"},"content":"        try {"},{"lineNumber":94,"author":{"gitId":"Sharptail"},"content":"            Files.writeString(path, \"\");"},{"lineNumber":95,"author":{"gitId":"Sharptail"},"content":"            for(Task task: taskList.getList()){"},{"lineNumber":96,"author":{"gitId":"Sharptail"},"content":"                Files.writeString(path, task.toSaveString() + \"\\n\", StandardOpenOption.APPEND);"},{"lineNumber":97,"author":{"gitId":"Sharptail"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"Sharptail"},"content":"        } catch (IOException e) {"},{"lineNumber":99,"author":{"gitId":"Sharptail"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":100,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":101,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":102}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import exceptions.SnomException;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"public class Deadline extends TaskWithDate {"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"    public Deadline(String description, String dateTime) throws SnomException {"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"        super(description, dateTime);"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"    public String toSaveString(){"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"        return \"D,\" + super.toSaveString();"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    public String toString(){"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + getDateTimeString() + \")\";"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":19}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import exceptions.SnomException;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"public class Event extends TaskWithDate{"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"    public Event(String description, String dateTime) throws SnomException {"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"        super(description, dateTime);"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"    public String toSaveString(){"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"        return \"E,\" + super.toSaveString();"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    public String toString(){"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"        return \"[E]\" + super.toString() + \"(at: \" + getDateTimeString() + \")\";"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":19}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":" * This class is to store task\u0027s information"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":" *"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":" * @author Sharptail"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"public class Task {"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"    private String description;"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"    private boolean status;"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"    public Task(String description){"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"        this.description \u003d description;"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"        this.status \u003d false;"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"    public String getDescription(){"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"        return this.description;"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    public boolean getStatus(){"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"        return status;"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    public String getStatusSymbol(){"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"        return status ? \"\\u2713\" : \" \";"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"    public void setDescription(String description){"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"        this.description \u003d description;"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"    public void setStatus(boolean status){"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"        this.status \u003d status;"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"     * Returns a string for saving purposes"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"     * @return formatted string"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"    public String toSaveString(){"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"        return (status ? \"true\" : \"false\") + \",\" + this.description;"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"    public String toString(){"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"        return \"[\" + this.getStatusSymbol() + \"]\" + this.description;"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":50}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import exceptions.SnomException;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"public class TaskList {"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"    private ArrayList\u003cTask\u003e list;"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"    public TaskList(ArrayList\u003cTask\u003e list){"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"        this.list \u003d list;"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"    public ArrayList\u003cTask\u003e getList(){"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"        return this.list;"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"     * Returns the size of the task list"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"     * @return size of task list"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"    public int getSize(){"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"        return list.size();"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"     * Returns a single task [todo, deadline, event] with the given index"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"     * @param i index"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"     * @return  task"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"    public Task getTask(int i){"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"        return list.get(i);"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"     * Returns a new task list with task description containing the given keyword"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"     * @param keyword keyword to be searched"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"     * @return        new task list"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"    public ArrayList\u003cTask\u003e findTask(String keyword){"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"        ArrayList\u003cTask\u003e newList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"        for(Task task: list){"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"            if(task.getDescription().contains(keyword)){"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"                newList.add(task);"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"        return newList;"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"     * Adds the given task to task list, can be a todo, deadline or event task."},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"     * Then prints out respective messages."},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"     * @param task either tasks.Todo, tasks.Deadline, tasks.Event"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"    public void addTask(Task task){"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"        list.add(task);"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"     * Set the task status by the given task numbers as finished."},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"     * Then prints out the complete messages."},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"Sharptail"},"content":"     * @param taskNums       task number list that needs to mark as finish"},{"lineNumber":69,"author":{"gitId":"Sharptail"},"content":"     * @return               a list of finished tasks"},{"lineNumber":70,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException If the task number is not available in the task list."},{"lineNumber":71,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"Sharptail"},"content":"    public Task[] finishTask(int[] taskNums) throws SnomException{"},{"lineNumber":73,"author":{"gitId":"Sharptail"},"content":"        Task[] finishedTasks \u003d new Task[taskNums.length];"},{"lineNumber":74,"author":{"gitId":"Sharptail"},"content":"        for(int i \u003d 0; i \u003c taskNums.length; i++){"},{"lineNumber":75,"author":{"gitId":"Sharptail"},"content":"            int taskNo \u003d taskNums[i] - 1;"},{"lineNumber":76,"author":{"gitId":"Sharptail"},"content":"            try{"},{"lineNumber":77,"author":{"gitId":"Sharptail"},"content":"                Task task \u003d list.get(taskNo);"},{"lineNumber":78,"author":{"gitId":"Sharptail"},"content":"                task.setStatus(true);"},{"lineNumber":79,"author":{"gitId":"Sharptail"},"content":"                finishedTasks[i] \u003d task;"},{"lineNumber":80,"author":{"gitId":"Sharptail"},"content":"            }catch(IndexOutOfBoundsException e){"},{"lineNumber":81,"author":{"gitId":"Sharptail"},"content":"                throw new SnomException(\"Oops! You have entered a task number: \""},{"lineNumber":82,"author":{"gitId":"Sharptail"},"content":"                        + taskNums[i] + \" which is invalid! Please try again!\");"},{"lineNumber":83,"author":{"gitId":"Sharptail"},"content":"            }"},{"lineNumber":84,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"Sharptail"},"content":"        return finishedTasks;"},{"lineNumber":86,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":88,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"Sharptail"},"content":"     * Removes the given task numbers from the task list."},{"lineNumber":90,"author":{"gitId":"Sharptail"},"content":"     * Then prints out the deleted messages."},{"lineNumber":91,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":92,"author":{"gitId":"Sharptail"},"content":"     * @param  taskNums      task number list that needs to be removed"},{"lineNumber":93,"author":{"gitId":"Sharptail"},"content":"     * @return               a list of deleted tasks"},{"lineNumber":94,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException If the task number is not available in the task list."},{"lineNumber":95,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"Sharptail"},"content":"    public Task[] deleteTask(int[] taskNums) throws SnomException{"},{"lineNumber":97,"author":{"gitId":"Sharptail"},"content":"        Task[] deletedTasks \u003d new Task[taskNums.length];"},{"lineNumber":98,"author":{"gitId":"Sharptail"},"content":"        for(int i \u003d 0; i \u003c taskNums.length; i++){"},{"lineNumber":99,"author":{"gitId":"Sharptail"},"content":"            int taskNo \u003d taskNums[i] - 1 - i;"},{"lineNumber":100,"author":{"gitId":"Sharptail"},"content":"            try{"},{"lineNumber":101,"author":{"gitId":"Sharptail"},"content":"                Task task \u003d list.get(taskNo);"},{"lineNumber":102,"author":{"gitId":"Sharptail"},"content":"                list.remove(task);"},{"lineNumber":103,"author":{"gitId":"Sharptail"},"content":"                deletedTasks[i] \u003d task;"},{"lineNumber":104,"author":{"gitId":"Sharptail"},"content":"            }catch(IndexOutOfBoundsException e){"},{"lineNumber":105,"author":{"gitId":"Sharptail"},"content":"                throw new SnomException(\"Oops! You have entered a task number: \""},{"lineNumber":106,"author":{"gitId":"Sharptail"},"content":"                        + taskNums[i] + \" which is invalid! Please try again!\");"},{"lineNumber":107,"author":{"gitId":"Sharptail"},"content":"            }"},{"lineNumber":108,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"Sharptail"},"content":"        return deletedTasks;"},{"lineNumber":110,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":111}},{"path":"src/main/java/tasks/TaskWithDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import exceptions.SnomException;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import java.time.LocalDateTime;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import java.time.format.DateTimeFormatterBuilder;"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import java.time.temporal.ChronoField;"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"public class TaskWithDate extends Task{"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"    private LocalDateTime dateTime;"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"    public TaskWithDate(String description, LocalDateTime dateTime){"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"        super(description);"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    public TaskWithDate(String description, String dateTime) throws SnomException {"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"        super(description);"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"        this.dateTime \u003d convertDateTime(dateTime);"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    public LocalDateTime getDateTime() {"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"        return dateTime;"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"     * Returns a formatted date time."},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"     * Eg. Tue 26 Jan 2021 03:33pm"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"     * @return formatted date time"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"    public String getDateTimeString(){"},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"        DateTimeFormatter formatter \u003d new DateTimeFormatterBuilder()"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"                .appendPattern(\"E dd MMM yyyy hh:mma\")"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"                .toFormatter();"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"        return this.dateTime.format(formatter);"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"    public void setDateTime(LocalDateTime dateTime) {"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"        this.dateTime \u003d dateTime;"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"     * Returns a LocalDateTime by converting from a given string."},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"     * @param dateTime          string representing date and time"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"     * @return                  converted/formatted LocalDateTime"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException    if the given string is an invalid date time format"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"    public LocalDateTime convertDateTime(String dateTime) throws SnomException {"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"        dateTime \u003d dateTime.replaceFirst(\" \", \"\");"},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"        try{"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"            DateTimeFormatter formatter \u003d new DateTimeFormatterBuilder()"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"                    .appendPattern(\"yyyy-MM-dd[ HH:mm]\")"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"                    .parseDefaulting(ChronoField.HOUR_OF_DAY, 0)"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":"                    .parseDefaulting(ChronoField.MINUTE_OF_HOUR, 0)"},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"                    .toFormatter();"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"            LocalDateTime formattedDateTime \u003d LocalDateTime.parse(dateTime, formatter);"},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"            return formattedDateTime;"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"        }catch(DateTimeParseException e){"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"            throw new SnomException(\"Oops! Please enter a valid date time format [YYYY-MM-DD HH:MM]\");"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":68,"author":{"gitId":"Sharptail"},"content":"    public String toSaveString(){"},{"lineNumber":69,"author":{"gitId":"Sharptail"},"content":"        DateTimeFormatter formatter \u003d new DateTimeFormatterBuilder()"},{"lineNumber":70,"author":{"gitId":"Sharptail"},"content":"                .appendPattern(\"yyyy-MM-dd[ HH:mm]\")"},{"lineNumber":71,"author":{"gitId":"Sharptail"},"content":"                .toFormatter();"},{"lineNumber":72,"author":{"gitId":"Sharptail"},"content":"        return super.toSaveString() + \", \" + this.dateTime.format(formatter);"},{"lineNumber":73,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":74}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"public class Todo extends Task{"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"    public Todo(String description){"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"        super(description);"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"    public String toSaveString(){"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"        return \"T,\" + super.toSaveString();"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"    @Override"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"    public String toString(){"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":17}},{"path":"src/main/java/ui/Snomio.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"package ui; /**"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":" * Deals with interactions with the user."},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":" * This ui.Snomio simply compile both BufferedReader and BufferedWriter"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":" * for easier I/O usages. For eg. read commands, contents, numbers"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":" * from user\u0027s input."},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":" *"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":" * Solution below adapted from https://github.com/Kattis/kattio/blob/master/Kattio.java"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":" *"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":" * @author: Sharptail"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":" */"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import exceptions.SnomException;"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"import tasks.Task;"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"import tasks.TaskList;"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"import java.io.*;"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"import java.util.StringTokenizer;"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"public class Snomio extends PrintWriter {"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"    private BufferedReader reader;"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    private StringTokenizer tokenizer;"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"    public Snomio(){"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"        super(new BufferedOutputStream(System.out));"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"        reader \u003d new BufferedReader(new InputStreamReader(System.in));"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":"    public Snomio(InputStream is, OutputStream os){"},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"        super(new BufferedOutputStream(os));"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"        reader \u003d new BufferedReader(new InputStreamReader(is));"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":32,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"Sharptail"},"content":"     * Prints a horizontal line."},{"lineNumber":34,"author":{"gitId":"Sharptail"},"content":"     * Note that the output is not flushed. Remember to flush after calling the method."},{"lineNumber":35,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"Sharptail"},"content":"    public void showLine(){"},{"lineNumber":37,"author":{"gitId":"Sharptail"},"content":"        println(\"--------------------------------\");"},{"lineNumber":38,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":40,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"Sharptail"},"content":"     * Prints given message as an error"},{"lineNumber":42,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"Sharptail"},"content":"     * @param errMsg error message"},{"lineNumber":44,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"Sharptail"},"content":"    public void showError(String errMsg){"},{"lineNumber":46,"author":{"gitId":"Sharptail"},"content":"        showLine();"},{"lineNumber":47,"author":{"gitId":"Sharptail"},"content":"        println(\"Error: \" + errMsg);"},{"lineNumber":48,"author":{"gitId":"Sharptail"},"content":"        showLine();"},{"lineNumber":49,"author":{"gitId":"Sharptail"},"content":"        flush();"},{"lineNumber":50,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":52,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"Sharptail"},"content":"     * Prints an error of unable to load save file and prompt user a new save file will be created."},{"lineNumber":54,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"Sharptail"},"content":"    public void showLoadingError(){"},{"lineNumber":56,"author":{"gitId":"Sharptail"},"content":"        showError(\"Failed to load file. A new save file will be created.\");"},{"lineNumber":57,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":59,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"Sharptail"},"content":"     * Returns the welcome message of Snom on startup."},{"lineNumber":61,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"Sharptail"},"content":"     * @return String welcome message"},{"lineNumber":63,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"Sharptail"},"content":"    public String showWelcomeMsg(){"},{"lineNumber":65,"author":{"gitId":"Sharptail"},"content":"        return \"Bonjour! I\u0027m Snom! *squish*\\n\""},{"lineNumber":66,"author":{"gitId":"Sharptail"},"content":"                + \"Try giving me some commands, I might be able to do something!\\n\""},{"lineNumber":67,"author":{"gitId":"Sharptail"},"content":"                + \"[type \u0027bye\u0027 to exit program]\";"},{"lineNumber":68,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":70,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"Sharptail"},"content":"     * Returns a message containing the entire task list."},{"lineNumber":72,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":73,"author":{"gitId":"Sharptail"},"content":"     * @return String        string of entire task List"},{"lineNumber":74,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException if there is content after the command or there isn\u0027t any task in the task list"},{"lineNumber":75,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":76,"author":{"gitId":"Sharptail"},"content":"    public String showTaskList(TaskList taskList) throws SnomException{"},{"lineNumber":77,"author":{"gitId":"Sharptail"},"content":"        if(taskList.getSize() \u003e 0){"},{"lineNumber":78,"author":{"gitId":"Sharptail"},"content":"            String message \u003d \"Here are the tasks in your list:\\n\";"},{"lineNumber":79,"author":{"gitId":"Sharptail"},"content":"            for(int i \u003d 0; i \u003c taskList.getSize(); i++){"},{"lineNumber":80,"author":{"gitId":"Sharptail"},"content":"                message +\u003d (i+1) + \". \" + taskList.getTask(i).toString() + \"\\n\";"},{"lineNumber":81,"author":{"gitId":"Sharptail"},"content":"            }"},{"lineNumber":82,"author":{"gitId":"Sharptail"},"content":"            return message;"},{"lineNumber":83,"author":{"gitId":"Sharptail"},"content":"        }else{"},{"lineNumber":84,"author":{"gitId":"Sharptail"},"content":"            throw new SnomException(\"You have no task in your list right now, try adding some and try again :D\");"},{"lineNumber":85,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":86,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":88,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":89,"author":{"gitId":"Sharptail"},"content":"     * Prints out the list from searching the keyword."},{"lineNumber":90,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":91,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException if there is content after the command or there isn\u0027t any task in the task list"},{"lineNumber":92,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":93,"author":{"gitId":"Sharptail"},"content":"    public void showMatchingTaskList(TaskList taskList) throws SnomException{"},{"lineNumber":94,"author":{"gitId":"Sharptail"},"content":"        showLine();"},{"lineNumber":95,"author":{"gitId":"Sharptail"},"content":"        if(taskList.getSize() \u003e 0){"},{"lineNumber":96,"author":{"gitId":"Sharptail"},"content":"            println(\"Here are the matching tasks in your list:\");"},{"lineNumber":97,"author":{"gitId":"Sharptail"},"content":"            for(int i \u003d 0; i \u003c taskList.getSize(); i++){"},{"lineNumber":98,"author":{"gitId":"Sharptail"},"content":"                println((i+1) + \". \" + taskList.getTask(i).toString());"},{"lineNumber":99,"author":{"gitId":"Sharptail"},"content":"            }"},{"lineNumber":100,"author":{"gitId":"Sharptail"},"content":"        }else{"},{"lineNumber":101,"author":{"gitId":"Sharptail"},"content":"            throw new SnomException(\"No matching task found.\");"},{"lineNumber":102,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"Sharptail"},"content":"        showLine();"},{"lineNumber":104,"author":{"gitId":"Sharptail"},"content":"        flush();"},{"lineNumber":105,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":106,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":107,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":108,"author":{"gitId":"Sharptail"},"content":"     * Returns the task added into the taskList and size of current taskList."},{"lineNumber":109,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":110,"author":{"gitId":"Sharptail"},"content":"     * @param task     task added"},{"lineNumber":111,"author":{"gitId":"Sharptail"},"content":"     * @param listSize task list size"},{"lineNumber":112,"author":{"gitId":"Sharptail"},"content":"     * @return String  task added into taskList"},{"lineNumber":113,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":114,"author":{"gitId":"Sharptail"},"content":"    public String showTaskAdded(Task task, int listSize){"},{"lineNumber":115,"author":{"gitId":"Sharptail"},"content":"        return \"Got it. I\u0027ve added this task:\\n\""},{"lineNumber":116,"author":{"gitId":"Sharptail"},"content":"                + \"\\t\" + task.toString() + \"\\n\""},{"lineNumber":117,"author":{"gitId":"Sharptail"},"content":"                + \"Now you have \" + listSize + \" tasks in the list.\";"},{"lineNumber":118,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":120,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":121,"author":{"gitId":"Sharptail"},"content":"     * Returns the list of recent finished tasks."},{"lineNumber":122,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":123,"author":{"gitId":"Sharptail"},"content":"     * @param finishedTasks list of finished tasks"},{"lineNumber":124,"author":{"gitId":"Sharptail"},"content":"     * @return String       recent finished tasks"},{"lineNumber":125,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"Sharptail"},"content":"    public String showFinishedTasks(Task[] finishedTasks) {"},{"lineNumber":127,"author":{"gitId":"Sharptail"},"content":"        String message \u003d \"Great Job! I\u0027ve marked this task(s) as finish:\\n\";"},{"lineNumber":128,"author":{"gitId":"Sharptail"},"content":"        for(Task task: finishedTasks){"},{"lineNumber":129,"author":{"gitId":"Sharptail"},"content":"            message +\u003d \"\\t\" + task.toString() + \"\\n\";"},{"lineNumber":130,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"Sharptail"},"content":"        return message;"},{"lineNumber":132,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":133,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":134,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":135,"author":{"gitId":"Sharptail"},"content":"     * Returns the list of recently deleted tasks."},{"lineNumber":136,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":137,"author":{"gitId":"Sharptail"},"content":"     * @param deletedTasks list of deleted tasks"},{"lineNumber":138,"author":{"gitId":"Sharptail"},"content":"     * @return String      recent deleted tasks"},{"lineNumber":139,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":140,"author":{"gitId":"Sharptail"},"content":"    public String showDeletedTasks(Task[] deletedTasks) {"},{"lineNumber":141,"author":{"gitId":"Sharptail"},"content":"        String message \u003d \"Noted, I\u0027ve removed this task(s)\\n\";"},{"lineNumber":142,"author":{"gitId":"Sharptail"},"content":"        for(Task task: deletedTasks){"},{"lineNumber":143,"author":{"gitId":"Sharptail"},"content":"            message +\u003d \"\\t\" + task.toString() + \"\\n\";"},{"lineNumber":144,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":145,"author":{"gitId":"Sharptail"},"content":"        return message;"},{"lineNumber":146,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":148,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":149,"author":{"gitId":"Sharptail"},"content":"     * Returns exit message."},{"lineNumber":150,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":151,"author":{"gitId":"Sharptail"},"content":"     * @return String exit message"},{"lineNumber":152,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":153,"author":{"gitId":"Sharptail"},"content":"    public String showExitMessage(){"},{"lineNumber":154,"author":{"gitId":"Sharptail"},"content":"        return \"Ciao! Hope to see you again soon!\";"},{"lineNumber":155,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":156,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":157,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":158,"author":{"gitId":"Sharptail"},"content":"     * This method will read in the whole line and split each word into tokens."},{"lineNumber":159,"author":{"gitId":"Sharptail"},"content":"     * Then it will extract out the first token and return it."},{"lineNumber":160,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":161,"author":{"gitId":"Sharptail"},"content":"     * If there are already words/tokens in the tokenizer, it will return the next first token instead."},{"lineNumber":162,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":163,"author":{"gitId":"Sharptail"},"content":"     * @return  the first word that extracted from the tokenizer"},{"lineNumber":164,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":165,"author":{"gitId":"Sharptail"},"content":"    public String readWord() {"},{"lineNumber":166,"author":{"gitId":"Sharptail"},"content":"        String input \u003d null;"},{"lineNumber":167,"author":{"gitId":"Sharptail"},"content":"        String token;"},{"lineNumber":168,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":169,"author":{"gitId":"Sharptail"},"content":"        while(tokenizer \u003d\u003d null || !tokenizer.hasMoreTokens()){"},{"lineNumber":170,"author":{"gitId":"Sharptail"},"content":"            try {"},{"lineNumber":171,"author":{"gitId":"Sharptail"},"content":"                input \u003d reader.readLine();"},{"lineNumber":172,"author":{"gitId":"Sharptail"},"content":"            } catch (IOException e) {"},{"lineNumber":173,"author":{"gitId":"Sharptail"},"content":"                e.printStackTrace();"},{"lineNumber":174,"author":{"gitId":"Sharptail"},"content":"            }"},{"lineNumber":175,"author":{"gitId":"Sharptail"},"content":"            tokenizer \u003d new StringTokenizer(input);"},{"lineNumber":176,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":177,"author":{"gitId":"Sharptail"},"content":"        token \u003d tokenizer.nextToken();"},{"lineNumber":178,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":179,"author":{"gitId":"Sharptail"},"content":"        return token;"},{"lineNumber":180,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":181,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":182,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":183,"author":{"gitId":"Sharptail"},"content":"     * This method is exclusive to read the content of the commands (todo, deadline, event)"},{"lineNumber":184,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":185,"author":{"gitId":"Sharptail"},"content":"     * @param command        command to be executed"},{"lineNumber":186,"author":{"gitId":"Sharptail"},"content":"     * @return               the content of a task"},{"lineNumber":187,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException throws exception if the content is empty"},{"lineNumber":188,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":189,"author":{"gitId":"Sharptail"},"content":"    public String readContent(String command) throws SnomException {"},{"lineNumber":190,"author":{"gitId":"Sharptail"},"content":"        if(tokenizer.hasMoreTokens()){"},{"lineNumber":191,"author":{"gitId":"Sharptail"},"content":"            return tokenizer.nextToken(\"\");"},{"lineNumber":192,"author":{"gitId":"Sharptail"},"content":"        }else{"},{"lineNumber":193,"author":{"gitId":"Sharptail"},"content":"            throw new SnomException(\"OOPS!!! The description of a \" + command + \" cannot be empty.\");"},{"lineNumber":194,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":195,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":196,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":197,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":198,"author":{"gitId":"Sharptail"},"content":"     * This method is exclusive to read the content of the commands with Delimiters (deadline, event)"},{"lineNumber":199,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":200,"author":{"gitId":"Sharptail"},"content":"     * @param command        command to be executed"},{"lineNumber":201,"author":{"gitId":"Sharptail"},"content":"     * @param delim          delimiter to split the date from content"},{"lineNumber":202,"author":{"gitId":"Sharptail"},"content":"     * @return               the content of a task"},{"lineNumber":203,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException throws exception if the content is empty"},{"lineNumber":204,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":205,"author":{"gitId":"Sharptail"},"content":"    public String[] readContentWithDate(String command, String delim) throws SnomException {"},{"lineNumber":206,"author":{"gitId":"Sharptail"},"content":"        String content \u003d this.readContent(command);"},{"lineNumber":207,"author":{"gitId":"Sharptail"},"content":"        String[] array \u003d content.split(delim);"},{"lineNumber":208,"author":{"gitId":"Sharptail"},"content":"        if(array.length \u003d\u003d 2){"},{"lineNumber":209,"author":{"gitId":"Sharptail"},"content":"            return array;"},{"lineNumber":210,"author":{"gitId":"Sharptail"},"content":"        }else if(array.length \u003c 2){"},{"lineNumber":211,"author":{"gitId":"Sharptail"},"content":"            throw new SnomException(\"Please enter at least one date for your \" + command + \"!\");"},{"lineNumber":212,"author":{"gitId":"Sharptail"},"content":"        }else{"},{"lineNumber":213,"author":{"gitId":"Sharptail"},"content":"            throw new SnomException(\"Oops! You have entered more than ONE date, please try again!\");"},{"lineNumber":214,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":215,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":217,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":218,"author":{"gitId":"Sharptail"},"content":"     * This method is exclusive to read the content of the commands with number list (finish, delete)"},{"lineNumber":219,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":220,"author":{"gitId":"Sharptail"},"content":"     * @param command        command to be executed"},{"lineNumber":221,"author":{"gitId":"Sharptail"},"content":"     * @return               a number list for command to be executed"},{"lineNumber":222,"author":{"gitId":"Sharptail"},"content":"     * @throws SnomException throws exception if the number is invalid"},{"lineNumber":223,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":224,"author":{"gitId":"Sharptail"},"content":"    public int[] readContentWithNumbers(String command) throws SnomException{"},{"lineNumber":225,"author":{"gitId":"Sharptail"},"content":"        int[] nums \u003d new int[tokenizer.countTokens()];"},{"lineNumber":226,"author":{"gitId":"Sharptail"},"content":"        if(nums.length \u003e 0){"},{"lineNumber":227,"author":{"gitId":"Sharptail"},"content":"            for(int i \u003d 0; i \u003c nums.length; i++){"},{"lineNumber":228,"author":{"gitId":"Sharptail"},"content":"                nums[i] \u003d this.readInt();"},{"lineNumber":229,"author":{"gitId":"Sharptail"},"content":"            }"},{"lineNumber":230,"author":{"gitId":"Sharptail"},"content":"            return nums;"},{"lineNumber":231,"author":{"gitId":"Sharptail"},"content":"        }else{"},{"lineNumber":232,"author":{"gitId":"Sharptail"},"content":"            throw new SnomException(\"Oops! Please at least give one task number to \" + command + \" a task\");"},{"lineNumber":233,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":234,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":235,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":236,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":237,"author":{"gitId":"Sharptail"},"content":"     * This method is similar to BufferedReader.readLine() except it will read from the tokenizer"},{"lineNumber":238,"author":{"gitId":"Sharptail"},"content":"     * if there are remaining tokens in it. It will return everything in the tokenizer as a whole sentence."},{"lineNumber":239,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":240,"author":{"gitId":"Sharptail"},"content":"     * @return the whole line of input or the rest of the sentence from the previous read line"},{"lineNumber":241,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":242,"author":{"gitId":"Sharptail"},"content":"    public String readLine(){"},{"lineNumber":243,"author":{"gitId":"Sharptail"},"content":"        String line \u003d \"\";"},{"lineNumber":244,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":245,"author":{"gitId":"Sharptail"},"content":"        if(tokenizer \u003d\u003d null || !tokenizer.hasMoreTokens()){"},{"lineNumber":246,"author":{"gitId":"Sharptail"},"content":"            try {"},{"lineNumber":247,"author":{"gitId":"Sharptail"},"content":"                line \u003d reader.readLine();"},{"lineNumber":248,"author":{"gitId":"Sharptail"},"content":"            } catch (IOException e) {"},{"lineNumber":249,"author":{"gitId":"Sharptail"},"content":"                e.printStackTrace();"},{"lineNumber":250,"author":{"gitId":"Sharptail"},"content":"            }"},{"lineNumber":251,"author":{"gitId":"Sharptail"},"content":"        }else{"},{"lineNumber":252,"author":{"gitId":"Sharptail"},"content":"            line +\u003d tokenizer.nextToken(\"\");"},{"lineNumber":253,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":254,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":255,"author":{"gitId":"Sharptail"},"content":"        return line;"},{"lineNumber":256,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":257,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":258,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":259,"author":{"gitId":"Sharptail"},"content":"     * This method only reads the first integer input and returns it."},{"lineNumber":260,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":261,"author":{"gitId":"Sharptail"},"content":"     * @return  single integer input"},{"lineNumber":262,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":263,"author":{"gitId":"Sharptail"},"content":"    public int readInt() throws SnomException{"},{"lineNumber":264,"author":{"gitId":"Sharptail"},"content":"        try{"},{"lineNumber":265,"author":{"gitId":"Sharptail"},"content":"            return Integer.parseInt(readWord());"},{"lineNumber":266,"author":{"gitId":"Sharptail"},"content":"        }catch(NumberFormatException e){"},{"lineNumber":267,"author":{"gitId":"Sharptail"},"content":"            throw new SnomException(\"Oops! You have entered invalid task numbers, please try again!\");"},{"lineNumber":268,"author":{"gitId":"Sharptail"},"content":"        }"},{"lineNumber":269,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":270,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":271,"author":{"gitId":"Sharptail"},"content":"    /**"},{"lineNumber":272,"author":{"gitId":"Sharptail"},"content":"     * This method only reads the first double input and returns it."},{"lineNumber":273,"author":{"gitId":"Sharptail"},"content":"     *"},{"lineNumber":274,"author":{"gitId":"Sharptail"},"content":"     * @return  single double input"},{"lineNumber":275,"author":{"gitId":"Sharptail"},"content":"     */"},{"lineNumber":276,"author":{"gitId":"Sharptail"},"content":"    public double readDouble(){"},{"lineNumber":277,"author":{"gitId":"Sharptail"},"content":"        return Double.parseDouble(readWord());"},{"lineNumber":278,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":279,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":279}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"438.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/15.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"      \u003cHBox fx:id\u003d\"hBox\" alignment\u003d\"CENTER_RIGHT\" HBox.hgrow\u003d\"ALWAYS\"\u003e"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"         \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"              \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"               \u003cHBox.margin\u003e"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"               \u003c/HBox.margin\u003e"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"            \u003c/Label\u003e"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"              \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" style\u003d\"-fx-background-radius: 100;\" /\u003e"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"         \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"      \u003c/HBox\u003e"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"    \u003c/children\u003e"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    \u003cpadding\u003e"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"    \u003c/padding\u003e"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"Sharptail":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"Sharptail":19}},{"path":"src/test/java/SnomTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"import commands.AddCommand;"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"import commands.Command;"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"import commands.CommandEnum;"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"import commands.ExitCommand;"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"import exceptions.SnomException;"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"import parser.Parser;"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"import storage.Storage;"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"import tasks.TaskList;"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"public class SnomTest {"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"    @Test"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"    public void getCommandTest(){"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"        CommandEnum expectedCommand \u003d CommandEnum.TODO;"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"        assertEquals(CommandEnum.getCommand(\"TODO\"), expectedCommand);"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"        expectedCommand \u003d CommandEnum.NONE;"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"        assertEquals(CommandEnum.getCommand(\"DUMMY\"), expectedCommand);"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"Sharptail"},"content":"    public void storageTest() throws SnomException {"},{"lineNumber":25,"author":{"gitId":"Sharptail"},"content":"        Storage storage \u003d new Storage(\"./src/main/data\", \"snom.txt\");"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"        TaskList taskList \u003d new TaskList(storage.readFile());"},{"lineNumber":27,"author":{"gitId":"Sharptail"},"content":""},{"lineNumber":28,"author":{"gitId":"Sharptail"},"content":"        assertEquals(storage.readFile().size(), taskList.getSize());"},{"lineNumber":29,"author":{"gitId":"Sharptail"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Sharptail"},"content":"}"}],"authorContributionMap":{"Sharptail":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Sharptail"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"Sharptail"},"content":"todo read book"},{"lineNumber":3,"author":{"gitId":"Sharptail"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"Sharptail"},"content":"event meeting /at Monday"},{"lineNumber":5,"author":{"gitId":"Sharptail"},"content":"deadline return book /by 2021-01-25"},{"lineNumber":6,"author":{"gitId":"Sharptail"},"content":"event meeting /at 2021-01-30 19:00"},{"lineNumber":7,"author":{"gitId":"Sharptail"},"content":"list"},{"lineNumber":8,"author":{"gitId":"Sharptail"},"content":"todo"},{"lineNumber":9,"author":{"gitId":"Sharptail"},"content":"deadline"},{"lineNumber":10,"author":{"gitId":"Sharptail"},"content":"@@ -16,9 +16,9 @@ delete 3"},{"lineNumber":11,"author":{"gitId":"Sharptail"},"content":"list"},{"lineNumber":12,"author":{"gitId":"Sharptail"},"content":"delete 1 3"},{"lineNumber":13,"author":{"gitId":"Sharptail"},"content":"list"},{"lineNumber":14,"author":{"gitId":"Sharptail"},"content":"todo borrow book"},{"lineNumber":15,"author":{"gitId":"Sharptail"},"content":"todo"},{"lineNumber":16,"author":{"gitId":"Sharptail"},"content":"deadline return book /by Sunday"},{"lineNumber":17,"author":{"gitId":"Sharptail"},"content":"event meeting /at Monday"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"finish 2 4"},{"lineNumber":19,"author":{"gitId":"Sharptail"},"content":"event meeting /at 2021-01-30 19:00 asd"},{"lineNumber":20,"author":{"gitId":"Sharptail"},"content":"delete 1"},{"lineNumber":21,"author":{"gitId":"Sharptail"},"content":"list"},{"lineNumber":22,"author":{"gitId":"Sharptail"},"content":"bye"}],"authorContributionMap":{"Sharptail":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"Sharptail"},"content":"java -classpath ..\\bin Snom \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"Sharptail":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"Sharptail"},"content":"java -classpath ../bin Snom \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":26,"author":{"gitId":"Sharptail"},"content":"diff ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"Sharptail":2,"-":32}}]
