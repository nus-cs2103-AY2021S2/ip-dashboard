[{"path":"duckie.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"T | done | eat"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":"E | not done | event conference  | Fri Mar 12 12:00:00 SGT 2021"}],"authorContributionMap":{"wei-yutong":2}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":"@rem"},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"@rem"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"@rem"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"@rem"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"@rem limitations under the License."},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"@rem"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"@rem ##########################################################################"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"@rem"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"@rem"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"@rem ##########################################################################"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"@rem Find java.exe"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"echo."},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"echo location of your Java installation."},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"goto fail"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":":findJavaFromJavaHome"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":56,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":"echo."},{"lineNumber":58,"author":{"gitId":"wei-yutong"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":59,"author":{"gitId":"wei-yutong"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":61,"author":{"gitId":"wei-yutong"},"content":"echo location of your Java installation."},{"lineNumber":62,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":63,"author":{"gitId":"wei-yutong"},"content":"goto fail"},{"lineNumber":64,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":65,"author":{"gitId":"wei-yutong"},"content":":init"},{"lineNumber":66,"author":{"gitId":"wei-yutong"},"content":"@rem Get command-line arguments, handling Windows variants"},{"lineNumber":67,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":68,"author":{"gitId":"wei-yutong"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":69,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":70,"author":{"gitId":"wei-yutong"},"content":":win9xME_args"},{"lineNumber":71,"author":{"gitId":"wei-yutong"},"content":"@rem Slurp the command line arguments."},{"lineNumber":72,"author":{"gitId":"wei-yutong"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":73,"author":{"gitId":"wei-yutong"},"content":"set _SKIP\u003d2"},{"lineNumber":74,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":75,"author":{"gitId":"wei-yutong"},"content":":win9xME_args_slurp"},{"lineNumber":76,"author":{"gitId":"wei-yutong"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":77,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":78,"author":{"gitId":"wei-yutong"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":79,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":80,"author":{"gitId":"wei-yutong"},"content":":execute"},{"lineNumber":81,"author":{"gitId":"wei-yutong"},"content":"@rem Setup the command line"},{"lineNumber":82,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":83,"author":{"gitId":"wei-yutong"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":84,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":85,"author":{"gitId":"wei-yutong"},"content":"@rem Execute Gradle"},{"lineNumber":86,"author":{"gitId":"wei-yutong"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"},{"lineNumber":87,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":88,"author":{"gitId":"wei-yutong"},"content":":end"},{"lineNumber":89,"author":{"gitId":"wei-yutong"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":90,"author":{"gitId":"wei-yutong"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":91,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":92,"author":{"gitId":"wei-yutong"},"content":":fail"},{"lineNumber":93,"author":{"gitId":"wei-yutong"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":94,"author":{"gitId":"wei-yutong"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":95,"author":{"gitId":"wei-yutong"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":96,"author":{"gitId":"wei-yutong"},"content":"exit /b 1"},{"lineNumber":97,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":98,"author":{"gitId":"wei-yutong"},"content":":mainEnd"},{"lineNumber":99,"author":{"gitId":"wei-yutong"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":100,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":101,"author":{"gitId":"wei-yutong"},"content":":omega"},{"lineNumber":102,"author":{"gitId":"wei-yutong"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":103,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":104,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":105,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":106,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":107,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":108,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":109,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":110,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":111,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":112,"author":{"gitId":"-"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":113,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":115,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":116,"author":{"gitId":"-"},"content":"@rem limitations under the License."},{"lineNumber":117,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":120,"author":{"gitId":"-"},"content":"@rem ##########################################################################"},{"lineNumber":121,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":122,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":123,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":124,"author":{"gitId":"-"},"content":"@rem ##########################################################################"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":127,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":130,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":131,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":132,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":135,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":138,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"@rem Find java.exe"},{"lineNumber":141,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":144,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":145,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":148,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":149,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":150,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":151,"author":{"gitId":"-"},"content":"echo location of your Java installation."},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"goto fail"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":":findJavaFromJavaHome"},{"lineNumber":156,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":157,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":162,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":163,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":164,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":165,"author":{"gitId":"-"},"content":"echo location of your Java installation."},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"goto fail"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":":init"},{"lineNumber":170,"author":{"gitId":"-"},"content":"@rem Get command-line arguments, handling Windows variants"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":":win9xME_args"},{"lineNumber":175,"author":{"gitId":"-"},"content":"@rem Slurp the command line arguments."},{"lineNumber":176,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":177,"author":{"gitId":"-"},"content":"set _SKIP\u003d2"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":":win9xME_args_slurp"},{"lineNumber":180,"author":{"gitId":"-"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":":execute"},{"lineNumber":185,"author":{"gitId":"-"},"content":"@rem Setup the command line"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"@rem Execute Gradle"},{"lineNumber":190,"author":{"gitId":"-"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":":end"},{"lineNumber":193,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":194,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":":fail"},{"lineNumber":197,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":198,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":199,"author":{"gitId":"-"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":200,"author":{"gitId":"-"},"content":"exit /b 1"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":":mainEnd"},{"lineNumber":203,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":":omega"},{"lineNumber":206,"author":{"gitId":"wei-yutong"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e a75fceeb74708da6ac524c08ef526d38e60ee56b"}],"authorContributionMap":{"wei-yutong":103,"-":103}},{"path":"src/main/java/classes/DuckieException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package main.java.classes;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":" * DuckieException inherits from Exception class."},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"public class DuckieException extends Exception {"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"     * @param message Error message."},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"    public DuckieException(String message) {"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"        super(message);"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":14}},{"path":"src/main/java/classes/Keyword.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package main.java.classes;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":" * Enumerates the only commands accepted by Duckie."},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"public enum Keyword {"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"    todo,"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"    list,"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"    deadline,"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"    event,"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"    done,"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"    delete,"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"    find,"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"    bye;"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":15}},{"path":"src/main/java/classes/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package main.java.classes;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import main.java.command.ByeCmd;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import main.java.command.Command;"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import main.java.command.DeadlineCmd;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import main.java.command.DeleteCmd;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"import main.java.command.DoneCmd;"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import main.java.command.EventCmd;"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"import main.java.command.ListCmd;"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"import main.java.command.ToDoCmd;"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"import main.java.command.FindCmd;"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":" * Parser class to deal with making sense of the user command."},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"public class Parser {"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"    private TaskList taskList;"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"    private Ui ui;"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"    private Storage storage;"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"    private static String[] command \u003d {\"list\", \"bye\", \"todo\", \"deadline\", \"event\", \"done\", \"delete\", \"find\"};"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"     * @param taskList TaskList object storing list of tasks"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"     * @param ui a Ui object"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"     * @param storage a Storage object"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"    public Parser(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"        this.ui \u003d ui;"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"        this.storage \u003d storage;"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"     * Parse method makes sense of the user input."},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"     * Returns a command class from user\u0027s String input."},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"     * @param cmd user input"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"     * @return command class corresponding to user input cmd"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"     * @throws DuckieException if commands other than the enumerated keywords are entered"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"    public static Command parse(String cmd) throws DuckieException {"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"        String[] commandArr \u003d cmd.trim().split(\" \");"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"        cmd \u003d cmd.trim();"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"        switch(commandArr[0]) {"},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"            case \"list\":"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"                return new ListCmd(cmd);"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"                // Fallthrough"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"            case \"todo\":"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"                return new ToDoCmd(cmd);"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"                // Fallthrough"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"            case \"event\":"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"                return new EventCmd(cmd);"},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"                // Fallthrough"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"            case \"deadline\":"},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"                return new DeadlineCmd(cmd);"},{"lineNumber":56,"author":{"gitId":"wei-yutong"},"content":"                // Fallthrough"},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":"            case \"done\":"},{"lineNumber":58,"author":{"gitId":"wei-yutong"},"content":"                return new DoneCmd(cmd);"},{"lineNumber":59,"author":{"gitId":"wei-yutong"},"content":"                // Fallthrough"},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":"            case \"delete\":"},{"lineNumber":61,"author":{"gitId":"wei-yutong"},"content":"                return new DeleteCmd(cmd);"},{"lineNumber":62,"author":{"gitId":"wei-yutong"},"content":"                // Fallthrough"},{"lineNumber":63,"author":{"gitId":"wei-yutong"},"content":"            case \"find\":"},{"lineNumber":64,"author":{"gitId":"wei-yutong"},"content":"                return new FindCmd(cmd);"},{"lineNumber":65,"author":{"gitId":"wei-yutong"},"content":"                // Fallthrough"},{"lineNumber":66,"author":{"gitId":"wei-yutong"},"content":"            case \"bye\":"},{"lineNumber":67,"author":{"gitId":"wei-yutong"},"content":"                return new ByeCmd(cmd);"},{"lineNumber":68,"author":{"gitId":"wei-yutong"},"content":"                // Fallthrough"},{"lineNumber":69,"author":{"gitId":"wei-yutong"},"content":"            default:"},{"lineNumber":70,"author":{"gitId":"wei-yutong"},"content":"                throw new DuckieException(\"please start with \u0027list\u0027, \u0027todo\u0027, \u0027event\u0027, deadline\u0027, \u0027delete\u0027, \u0027done\u0027 or \u0027bye\u0027\");"},{"lineNumber":71,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":72,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":73}},{"path":"src/main/java/classes/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package main.java.classes;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import main.java.command.Deadline;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import main.java.command.Event;"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import main.java.command.ToDo;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"import java.io.File;"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import java.io.FileWriter;"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"import java.io.IOException;"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"import java.text.ParseException;"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"import java.util.ArrayList;"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"import java.util.Date;"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"import java.util.Locale;"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"import java.util.Scanner;"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":" * Storage class to deal with loading tasks from the file and saving tasks in the file."},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"public class Storage {"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"    private File file;"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"     * @param filePath path to the saved file"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"     * @throws IOException if user IO is incorrect"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"    public Storage(String filePath) throws IOException {"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"        this.file \u003d new File(filePath);"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"        if (file.createNewFile()) {"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"            System.out.println(\"file created!\");"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"        } else {"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"            System.out.println(\"file loaded!\");"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"     * Method to save Task in saved file, converts Task objects to Strings in file"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"     * @param AL ArrayList of Task objects from user input"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"     * @throws IOException if user IO is incorrect"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e AL) throws IOException {"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"        FileWriter fw \u003d new FileWriter(this.file);"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"        for (Task temp : AL) {"},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"            if (temp instanceof Deadline) {"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"                fw.write(String.format(\"D | %s | %s | %s\","},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"                        temp.getIsDone(), temp.getDescription(), ((Deadline) temp).getBy()) + \"\\n\");"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"            } else if (temp instanceof Event) {"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"                fw.write(String.format(\"E | %s | %s | %s\","},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"                        temp.getIsDone(), temp.getDescription(), ((Event) temp).getAt()) + \"\\n\");"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"            } else {"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"                fw.write(String.format(\"T | %s | %s\","},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"                        temp.getIsDone(), temp.getDescription()) + \"\\n\");"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"            }"},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"wei-yutong"},"content":"        fw.close();"},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":59,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":"     * Method to load Tasks from saved file, converts Strings in saved file to Task objects."},{"lineNumber":61,"author":{"gitId":"wei-yutong"},"content":"     * @return an ArrayList AL of Task objects"},{"lineNumber":62,"author":{"gitId":"wei-yutong"},"content":"     * @throws IOException if user IO is incorrect"},{"lineNumber":63,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"wei-yutong"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException {"},{"lineNumber":65,"author":{"gitId":"wei-yutong"},"content":"        ArrayList\u003cTask\u003e AL \u003d new ArrayList\u003c\u003e();"},{"lineNumber":66,"author":{"gitId":"wei-yutong"},"content":"        Scanner sc \u003d new Scanner(this.file);"},{"lineNumber":67,"author":{"gitId":"wei-yutong"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":68,"author":{"gitId":"wei-yutong"},"content":"            String s \u003d sc.nextLine();"},{"lineNumber":69,"author":{"gitId":"wei-yutong"},"content":"            s \u003d s.trim();"},{"lineNumber":70,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":71,"author":{"gitId":"wei-yutong"},"content":"            String[] sArr \u003d s.split(\"\\\\|\", 4);"},{"lineNumber":72,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":73,"author":{"gitId":"wei-yutong"},"content":"            if (sArr[0].trim().equals(\"D\")) {"},{"lineNumber":74,"author":{"gitId":"wei-yutong"},"content":"                SimpleDateFormat format \u003d new SimpleDateFormat(\"EEE MMM dd HH:mm:ss Z yyyy\", Locale.ENGLISH);"},{"lineNumber":75,"author":{"gitId":"wei-yutong"},"content":"                Date date \u003d null;"},{"lineNumber":76,"author":{"gitId":"wei-yutong"},"content":"                try {"},{"lineNumber":77,"author":{"gitId":"wei-yutong"},"content":"                    date \u003d format.parse(sArr[3].trim());"},{"lineNumber":78,"author":{"gitId":"wei-yutong"},"content":"                } catch (ParseException e) {"},{"lineNumber":79,"author":{"gitId":"wei-yutong"},"content":"                    e.printStackTrace();"},{"lineNumber":80,"author":{"gitId":"wei-yutong"},"content":"                }"},{"lineNumber":81,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":82,"author":{"gitId":"wei-yutong"},"content":"                Deadline tempD \u003d new Deadline(sArr[2].trim(), date);"},{"lineNumber":83,"author":{"gitId":"wei-yutong"},"content":"                if (sArr[1].trim().equals(\"done\")) {"},{"lineNumber":84,"author":{"gitId":"wei-yutong"},"content":"                    tempD.isDone \u003d true;"},{"lineNumber":85,"author":{"gitId":"wei-yutong"},"content":"                } else if (sArr[1].trim().equals(\"not done\")){"},{"lineNumber":86,"author":{"gitId":"wei-yutong"},"content":"                    tempD.isDone \u003d false;"},{"lineNumber":87,"author":{"gitId":"wei-yutong"},"content":"                }"},{"lineNumber":88,"author":{"gitId":"wei-yutong"},"content":"                AL.add(tempD);"},{"lineNumber":89,"author":{"gitId":"wei-yutong"},"content":"            } else if (sArr[0].trim().equals(\"E\")) {"},{"lineNumber":90,"author":{"gitId":"wei-yutong"},"content":"                SimpleDateFormat format \u003d new SimpleDateFormat(\"EEE MMM dd HH:mm:ss Z yyyy\", Locale.ENGLISH);"},{"lineNumber":91,"author":{"gitId":"wei-yutong"},"content":"                Date date \u003d null;"},{"lineNumber":92,"author":{"gitId":"wei-yutong"},"content":"                try {"},{"lineNumber":93,"author":{"gitId":"wei-yutong"},"content":"                    date \u003d format.parse(sArr[3].trim());"},{"lineNumber":94,"author":{"gitId":"wei-yutong"},"content":"                } catch (ParseException e) {"},{"lineNumber":95,"author":{"gitId":"wei-yutong"},"content":"                    e.printStackTrace();"},{"lineNumber":96,"author":{"gitId":"wei-yutong"},"content":"                }"},{"lineNumber":97,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":98,"author":{"gitId":"wei-yutong"},"content":"                Event tempE \u003d new Event(sArr[2].trim(), date);"},{"lineNumber":99,"author":{"gitId":"wei-yutong"},"content":"                if (sArr[1].trim().equals(\"done\")) {"},{"lineNumber":100,"author":{"gitId":"wei-yutong"},"content":"                    tempE.isDone \u003d true;"},{"lineNumber":101,"author":{"gitId":"wei-yutong"},"content":"                } else if (sArr[1].trim().equals(\"not done\")) {"},{"lineNumber":102,"author":{"gitId":"wei-yutong"},"content":"                    tempE.isDone \u003d false;"},{"lineNumber":103,"author":{"gitId":"wei-yutong"},"content":"                }"},{"lineNumber":104,"author":{"gitId":"wei-yutong"},"content":"                AL.add(tempE);"},{"lineNumber":105,"author":{"gitId":"wei-yutong"},"content":"            } else {"},{"lineNumber":106,"author":{"gitId":"wei-yutong"},"content":"                ToDo tempT \u003d new ToDo(sArr[2].trim());"},{"lineNumber":107,"author":{"gitId":"wei-yutong"},"content":"                if (sArr[1].trim().equals(\"done\")) {"},{"lineNumber":108,"author":{"gitId":"wei-yutong"},"content":"                    tempT.isDone \u003d true;"},{"lineNumber":109,"author":{"gitId":"wei-yutong"},"content":"                } else if (sArr[1].trim().equals(\"not done\")) {"},{"lineNumber":110,"author":{"gitId":"wei-yutong"},"content":"                    tempT.isDone \u003d false;"},{"lineNumber":111,"author":{"gitId":"wei-yutong"},"content":"                }"},{"lineNumber":112,"author":{"gitId":"wei-yutong"},"content":"                AL.add(tempT);"},{"lineNumber":113,"author":{"gitId":"wei-yutong"},"content":"            }"},{"lineNumber":114,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"wei-yutong"},"content":"        return AL;"},{"lineNumber":116,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":117,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":117}},{"path":"src/main/java/classes/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package main.java.classes;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":" * Task encapsulates a task with String description and boolean isDone."},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":" * It supports getting the status of the task and marking it as done."},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"public class Task {"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"    protected String description;"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"    protected boolean isDone;"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"     * Construct a Task object with a given description and isDone set to false."},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"     * @param description The description of this task."},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"    public Task(String description) {"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"        this.description \u003d description;"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"        this.isDone \u003d false;"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"     * Get the current status of the task."},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"     * @return Returns a cross if done, otherwise whitespace."},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"    public String getStatus() {"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"        return (isDone ? \"\\u2718\" : \" \");"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"     * Method to get the isDone status of a Task as a String"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"     * @return Returns String \"done\" if isDone is true, \"not done\" otherwise."},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"    public String getIsDone() {"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"        if (this.isDone) {"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"            return \"done\";"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"        } else {"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"            return \"not done\";"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"    public String getDescription() {"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"        return this.description;"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"     * Sets the status of the task to true."},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"    public void markDone() {"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"        isDone \u003d true;"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"    public String toString() {"},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"        return \"[\" + getStatus() + \"] \" + description;"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":55}},{"path":"src/main/java/classes/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package main.java.classes;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":" * TaskList class with specific methods."},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"    private ArrayList\u003cTask\u003e lst;"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"    public TaskList() {"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"        this.lst \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"     * Overloaded constructor method."},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"     * @param lst an ArrayList containing Task objects."},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"    public TaskList(ArrayList\u003cTask\u003e lst) {"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"        this.lst \u003d lst;"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"     * Method to get TaskList."},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"     * @return Returns an ArrayList of Task objects."},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"        return lst;"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"     * Method to add Task to TaskList."},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"     * @param task standard Task object."},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"    public void addTask(Task task) {"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"        lst.add(task);"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"     * Method to delete Task from TaskList."},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"     * @param index index of Task to be deleted."},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"    public void deleteTask(int index) {"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"        lst.remove(index);"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"     * Method to get size of TaskList."},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"     * @return Returns an integer which is the size of Tasklist."},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"    public int getListSize() {"},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"        return this.lst.size();"},{"lineNumber":56,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":58,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"wei-yutong"},"content":"     * Method to get Task at a specific index."},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":"     * @param index index of Task to be retrieved."},{"lineNumber":61,"author":{"gitId":"wei-yutong"},"content":"     * @return Returns the specified Task object."},{"lineNumber":62,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"wei-yutong"},"content":"    public Task getTask(int index) {"},{"lineNumber":64,"author":{"gitId":"wei-yutong"},"content":"        return this.lst.get(index);"},{"lineNumber":65,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":66}},{"path":"src/main/java/classes/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package main.java.classes;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":" * Ui (User Interface) class to deal with interactions with the user."},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"    String line \u003d \":) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :)\";"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"     * Print welcome message when user opens Duckie."},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"    public void startMessage() {"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"        System.out.println(\"yo im Duckie! quack quack\");"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"        System.out.println(\"what can i do for ya ;)\");"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"        System.out.println(line);"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"     * Print end message when user enters \u0027bye\u0027 to stop Duckie."},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"    public void endMessage() {"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"        System.out.println(line);"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"        System.out.println(\"goodbye! c ya soon ;)\");"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"        System.out.println(line);"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"     * Print custom line of smileys as a separator line."},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"    public void customLine() {"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"        System.out.println(line);"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"     * Method to read the user\u0027s input."},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"     * @return String user input."},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"    public String readInput() {"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"        return sc.nextLine();"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"    public void findMessage() {"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"        System.out.println(\"found it! here\u0027s your task(s):\");"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":49}},{"path":"src/main/java/command/ByeCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package main.java.command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.DuckieException;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.Storage;"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.TaskList;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.Ui;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"public class ByeCmd extends Command {"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"    private String cmd;"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"     * @param cmd User input command."},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"    public ByeCmd (String cmd) {"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"        this.cmd \u003d cmd;"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"     * Execute method."},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"     * @param lst a TaskList object containing Task Objects."},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"     * @param ui a Ui object."},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"     * @param storage a storage object."},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"     * @throws DuckieException if user enters commands besides accepted ones."},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"    public void execute(TaskList lst, Ui ui, Storage storage) throws DuckieException {"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"        return;"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"     * Method to determine whether to exit program."},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"     * @return Returns true to exit program upon \u0027Bye\u0027 command."},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"    public boolean isEnd() {"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"        return true;"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":40}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package main.java.command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.DuckieException;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.Storage;"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.TaskList;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.Ui;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":" * Abstract Command class with methods execute and isEnd. Inherited by all keyword classes."},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"public abstract class Command {"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"     * Execute method."},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"     * @param lst a TaskList object containing Task Objects."},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"     * @param ui a Ui object."},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"     * @param storage a storage object."},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"     * @throws DuckieException if user enters commands besides accepted ones."},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"    public abstract void execute(TaskList lst, Ui ui, Storage storage) throws DuckieException;"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"     * Method to determine whether to exit program."},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"     * @return Returns true or false."},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"    public abstract boolean isEnd();"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":27}},{"path":"src/main/java/command/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package main.java.command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.Task;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import java.util.Date;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":" * Deadline inherits from Task. It encapsulates a deadline with an additional String by."},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":" * Deadline is specified by [D]."},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"public class Deadline extends Task {"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"    protected Date by;"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"     * @param description User input description of deadline."},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"     * @param by Date and time by which the deadline is to take place."},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"    public Deadline(String description, Date by) {"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"        super(description);"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"        this.by \u003d by;"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"     * Method to retrieve the date of the deadline."},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"     * @return a Date object of the deadline."},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"    public Date getBy() {"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"        return this.by;"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"     * Method to return a formatted version of user\u0027s input."},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"     * @return Formatted String of user\u0027s input."},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":41}},{"path":"src/main/java/command/DeadlineCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package main.java.command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.DuckieException;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.Storage;"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.TaskList;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.Ui;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"import java.util.Date;"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"import java.util.Locale;"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"public class DeadlineCmd extends Command {"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"    private String cmd;"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"     * @param cmd User input command."},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"    public DeadlineCmd(String cmd){"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"        this.cmd \u003d cmd;"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"     * Execute method."},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"     * @param lst a TaskList object containing Task Objects."},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"     * @param ui a Ui object."},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"     * @param storage a storage object."},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"     * @throws DuckieException if user enters commands besides accepted ones."},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"    public void execute(TaskList lst, Ui ui, Storage storage) throws DuckieException {"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"        //String[] cmdArr \u003d cmd.trim().split(\" \");"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"        if (!cmd.contains(\"/by\")) {"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"            throw new DuckieException(\"oops! please specify deadline using \u0027/by\u0027\");"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"        //ui.customLine();"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"        //System.out.println(line);"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"        String[] strD \u003d cmd.trim().split(\"/by\", 2);"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"        String inputDate \u003d strD[1].trim();"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd-MM-yyyy HHmm\", Locale.ENGLISH);"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"        Date date;"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"            date \u003d format.parse(inputDate);"},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"        } catch (Exception e) {"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"            throw new DuckieException(\"please enter date in the format dd-mm-yyyy HHmm\");"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"        Deadline tempD \u003d new Deadline(strD[0], date);"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"        lst.addTask(tempD);"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"        System.out.println(\"ok! i\u0027ve added this task:\");"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"        System.out.println(tempD.toString());"},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"        if (lst.getListSize() \u003d\u003d 0) {"},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"            System.out.println(\"there are no tasks in your list!\");"},{"lineNumber":56,"author":{"gitId":"wei-yutong"},"content":"        } else if (lst.getListSize() \u003d\u003d 1) {"},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":"            System.out.println(\"you have \" + lst.getListSize() + \" task in your list! keep working!\");"},{"lineNumber":58,"author":{"gitId":"wei-yutong"},"content":"        } else {"},{"lineNumber":59,"author":{"gitId":"wei-yutong"},"content":"            System.out.println(\"you have \" + lst.getListSize() + \" tasks in your list! keep working!\");"},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":61,"author":{"gitId":"wei-yutong"},"content":"        //ui.customLine();"},{"lineNumber":62,"author":{"gitId":"wei-yutong"},"content":"       // System.out.println(line);"},{"lineNumber":63,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":65,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":66,"author":{"gitId":"wei-yutong"},"content":"     * Method to determine whether to exit program."},{"lineNumber":67,"author":{"gitId":"wei-yutong"},"content":"     * @return Returns false, program continues."},{"lineNumber":68,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":70,"author":{"gitId":"wei-yutong"},"content":"    public boolean isEnd() {"},{"lineNumber":71,"author":{"gitId":"wei-yutong"},"content":"        return false;"},{"lineNumber":72,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":73}},{"path":"src/main/java/command/DeleteCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package main.java.command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.DuckieException;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.Storage;"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.TaskList;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.Ui;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"public class DeleteCmd extends Command {"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"    private String cmd;"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"     * @param cmd User input command."},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"    public DeleteCmd (String cmd) {"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"        this.cmd \u003d cmd;"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"     * Execute method."},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"     * @param lst a TaskList object containing Task Objects."},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"     * @param ui a Ui object."},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"     * @param storage a storage object."},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"     * @throws DuckieException if user enters commands besides accepted ones."},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"    public void execute(TaskList lst, Ui ui, Storage storage) throws DuckieException {"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"        //System.out.println(line);"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"        String[] cmdArr \u003d cmd.trim().split(\" \");"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"        ui.customLine();"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"        System.out.println(\"ok! i\u0027ve deleted this task: \");"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"        int deleteNum \u003d Integer.parseInt(cmdArr[1]);"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"        System.out.println(lst.getTask(deleteNum - 1).toString());"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"        lst.deleteTask(deleteNum - 1);"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"        if (lst.getListSize() \u003d\u003d 0) {"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"            System.out.println(\"yay! you are done!\");"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"        } else if (lst.getListSize() \u003d\u003d 1) {"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"            System.out.println(\"yay! you have \" + lst.getListSize() + \" task left to do!\");"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"        } else {"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"            System.out.println(\"yay! you have \" + lst.getListSize() + \" tasks left to do!\");"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"     * Method to determine whether to exit program."},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"     * @return Returns false, program continues."},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"    public boolean isEnd() {"},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"        return false;"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":55}},{"path":"src/main/java/command/DoneCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package main.java.command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.DuckieException;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.Storage;"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.Task;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.TaskList;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.Ui;"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"public class DoneCmd extends Command {"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"    private String cmd;"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"     * @param cmd User input command."},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"    public DoneCmd (String cmd) {"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"        this.cmd \u003d cmd;"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"     * Execute method."},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"     * @param lst a TaskList object containing Task Objects."},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"     * @param ui a Ui object."},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"     * @param storage a storage object."},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"     * @throws DuckieException if user enters commands besides accepted ones."},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"    public void execute(TaskList lst, Ui ui, Storage storage) throws DuckieException {"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"        String[] cmdArr \u003d cmd.trim().split(\" \");"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"        //System.out.println(line);"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"        ui.customLine();"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"        int taskNum \u003d Integer.parseInt(cmdArr[1]);"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"        Task temp \u003d lst.getTask(taskNum - 1);"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"        temp.markDone();"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"        System.out.println(\"cool! this task is marked as done:\");"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"        System.out.println(temp.toString());"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"        //System.out.println(line);"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"        ui.customLine();"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"     * Method to determine whether to exit program."},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"     * @return Returns false, program continues."},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"    public boolean isEnd() {"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"        return false;"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":51}},{"path":"src/main/java/command/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package main.java.command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.Task;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import java.util.Date;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":" * Event inherits from Task. It encapsulates an event with an additional String at."},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":" * Event is specified by [E]."},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"public class Event extends Task {"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"    protected Date at;"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"     * @param description User input description of event."},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"     * @param at Date and time at which the event is to take place."},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"    public Event (String description, Date at) {"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"        super(description);"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"        this.at \u003d at;"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"     * Method to retrieve the date of the event."},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"     * @return a Date object of the event."},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"    public Date getAt() {"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"        return this.at;"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"     * Method to return a formatted version of user\u0027s input."},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"     * @return Formatted String of user\u0027s input."},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"    public String toString() {"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":40}},{"path":"src/main/java/command/EventCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package main.java.command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.DuckieException;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.Storage;"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.TaskList;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.Ui;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"import java.util.Date;"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"import java.util.Locale;"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"public class EventCmd extends Command {"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"    private String cmd;"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"     * @param cmd User input command."},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"    public EventCmd(String cmd){"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"        this.cmd \u003d cmd;"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"     * Execute method."},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"     * @param lst a TaskList object containing Task Objects."},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"     * @param ui a Ui object."},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"     * @param storage a storage object."},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"     * @throws DuckieException if user enters commands besides accepted ones."},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"    public void execute(TaskList lst, Ui ui, Storage storage) throws DuckieException {"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"        //String[] cmdArr \u003d cmd.trim().split(\" \");"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"        if (!cmd.contains(\"/at\")) {"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"            throw new DuckieException(\"oops! please specify the time of your event using \u0027/at\u0027\");"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"        //System.out.println(line);"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"        //ui.customLine();"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"        //String[] cmdArr \u003d cmd.trim().split(\" \");"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"        String[] strE \u003d cmd.trim().split(\"/at\", 2);"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"        String inputDate \u003d strE[1].trim();"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd-MM-yyyy HHmm\", Locale.ENGLISH);"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"        Date date;"},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"        try {"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"            date \u003d format.parse(inputDate);"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"        } catch (Exception e) {"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"            throw new DuckieException(\"please enter date in the format dd-mm-yyyy HHmm\");"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"        Event tempE \u003d new Event(strE[0], date);"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"        lst.addTask(tempE);"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"        System.out.println(\"ok! i\u0027ve added this task:\");"},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"        System.out.println(tempE.toString());"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"        if (lst.getListSize() \u003d\u003d 0) {"},{"lineNumber":56,"author":{"gitId":"wei-yutong"},"content":"            System.out.println(\"there are no tasks in your list!\");"},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":"        } else if (lst.getListSize() \u003d\u003d 1) {"},{"lineNumber":58,"author":{"gitId":"wei-yutong"},"content":"            System.out.println(\"you have \" + lst.getListSize() + \" task in your list! keep working!\");"},{"lineNumber":59,"author":{"gitId":"wei-yutong"},"content":"        } else {"},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":"            System.out.println(\"you have \" + lst.getListSize() + \" tasks in your list! keep working!\");"},{"lineNumber":61,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"wei-yutong"},"content":"        //System.out.println(line);"},{"lineNumber":63,"author":{"gitId":"wei-yutong"},"content":"        //ui.customLine();"},{"lineNumber":64,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":66,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"wei-yutong"},"content":"     * Method to determine whether to exit program."},{"lineNumber":68,"author":{"gitId":"wei-yutong"},"content":"     * @return Returns false, program continues."},{"lineNumber":69,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":71,"author":{"gitId":"wei-yutong"},"content":"    public boolean isEnd() {"},{"lineNumber":72,"author":{"gitId":"wei-yutong"},"content":"        return false;"},{"lineNumber":73,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":74}},{"path":"src/main/java/command/FindCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package main.java.command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.*;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"public class FindCmd extends Command {"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"    private String cmd;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"    public FindCmd(String cmd) {"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"        this.cmd \u003d cmd;"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"    public void execute(TaskList lst, Ui ui, Storage storage) throws DuckieException {"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"        String[] cmdArr \u003d cmd.trim().split(\" \");"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"        //System.out.println(line);"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"        ui.findMessage();"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"        int taskSize \u003d lst.getListSize();"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"        for (int i \u003d 1; i \u003c taskSize + 1; i++) {"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"            if (lst.getTask(i - 1).getDescription().contains(cmdArr[1])) {"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"                String output \u003d String.format(\"%s. %s\", i, lst.getTask(i - 1).toString());"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"                System.out.println(output);"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"            }"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"            //System.out.println(line);"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"        ui.customLine();"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"    public boolean isEnd() {"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"        return false;"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":33}},{"path":"src/main/java/command/ListCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package main.java.command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.DuckieException;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.Storage;"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.TaskList;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.Ui;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"public class ListCmd extends Command {"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"    private String cmd;"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"     * @param cmd User input command."},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"    public ListCmd (String cmd) {"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"        this.cmd \u003d cmd;"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"     * Execute method."},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"     * @param lst a TaskList object containing Task Objects."},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"     * @param ui a Ui object."},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"     * @param storage a storage object."},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"     * @throws DuckieException if user enters commands besides accepted ones."},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"    public void execute(TaskList lst, Ui ui, Storage storage) throws DuckieException {"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"        //System.out.println(line);"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"        ui.customLine();"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"        if (lst.getListSize() \u003d\u003d 0) {"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"            System.out.println(\"there are no tasks in your list!\");"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"        } else if (lst.getListSize() \u003d\u003d 1) {"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"            System.out.println(\"get to work! this is the task in your list: \");"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"        } else {"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"            System.out.println(\"get to work! these are the tasks in your list: \");"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"        for (int i \u003d 0; i \u003c lst.getListSize(); i++) {"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"            System.out.println(i + 1 + \".\" + lst.getTask(i).toString());"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"        "},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"        ui.customLine();"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"     * Method to determine whether to exit program."},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"     * @return Returns false, program continues."},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"    public boolean isEnd() {"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"        return false;"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":53}},{"path":"src/main/java/command/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package main.java.command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.Task;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":" * ToDo inherits from Task."},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":" * ToDo is specified by [T]."},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"public class ToDo extends Task {"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"     * @param description User input description of task."},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"    public ToDo(String description) {"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"        super(description);"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"     * Method to return a formatted version of user\u0027s input."},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"     * @return Formatted String of user\u0027s input."},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":27}},{"path":"src/main/java/command/ToDoCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package main.java.command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.DuckieException;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.Storage;"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.TaskList;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.Ui;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"public class ToDoCmd extends Command {"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"    private String cmd;"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"     * @param cmd User input command."},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"    public ToDoCmd (String cmd) {"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"        this.cmd \u003d cmd;"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"     * Execute method."},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"     * @param lst a TaskList object containing Task Objects."},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"     * @param ui a Ui object."},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"     * @param storage a storage object."},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"     * @throws DuckieException if user enters commands besides accepted ones."},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"    public void execute(TaskList lst, Ui ui, Storage storage) throws DuckieException {"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"        String[] cmdArr \u003d cmd.trim().split(\" \");"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"        //System.out.println(line);"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"        ui.customLine();"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"        ToDo tempT \u003d new ToDo(cmdArr[1]);"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"        lst.addTask(tempT);"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"        System.out.println(\"ok! i\u0027ve added this task:\");"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"        System.out.println(tempT.toString());"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"        if (lst.getListSize() \u003d\u003d 0) {"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"            System.out.println(\"there are no tasks in your list!\");"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"        } else if (lst.getListSize() \u003d\u003d 1) {"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"            System.out.println(\"you have \" + lst.getListSize() + \" task in your list! keep working!\");"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"        } else {"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"            System.out.println(\"you have \" + lst.getListSize() + \" tasks in your list! keep working!\");"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"        //System.out.println(line);"},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"        ui.customLine();"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"     * Method to determine whether to exit program."},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"     * @return Returns false, program continues."},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"    public boolean isEnd() {"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"        return false;"},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":56}},{"path":"src/main/java/main/java/Duckie.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.DuckieException;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.Parser;"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.Storage;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.TaskList;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"import main.java.classes.Ui;"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import main.java.command.Command;"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"import java.io.IOException;"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":" * Main class."},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"public class Duckie {"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"    private Storage storage;"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"    private TaskList lst;"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"    private Ui ui;"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"     * @param filePath to the saved file"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"     * @throws IOException if user IO is incorrect"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"    public Duckie(String filePath) throws IOException {"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"        ui \u003d new Ui();"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"            lst \u003d new TaskList(storage.loadTasks());"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"        } catch (IOException e) {"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"            //ui.showLoadingError();"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"            lst \u003d new TaskList();"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"     * Run method to run Duckie."},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"     * @throws IOException if user IO is incorrect"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"    public void run() throws IOException {"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"        storage.loadTasks();"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"        ui.startMessage();"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"        boolean isEnd \u003d false;"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"        while (!isEnd) {"},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"            try {"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"                String fullInput \u003d ui.readInput();"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"                ui.customLine();"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"                Command cmd \u003d Parser.parse(fullInput);"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"                cmd.execute(lst, ui, storage);"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"                isEnd \u003d cmd.isEnd();"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"            } catch (DuckieException e) {"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"                e.printStackTrace();"},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"        storage.saveTasks(lst.getTaskList());"},{"lineNumber":56,"author":{"gitId":"wei-yutong"},"content":"        ui.endMessage();"},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":59,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":"     * Main method to drive Duckie."},{"lineNumber":61,"author":{"gitId":"wei-yutong"},"content":"     * @param args command line arguments"},{"lineNumber":62,"author":{"gitId":"wei-yutong"},"content":"     * @throws IOException if user IO is incorrect"},{"lineNumber":63,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"wei-yutong"},"content":"    public static void main(String[] args) throws IOException {"},{"lineNumber":65,"author":{"gitId":"wei-yutong"},"content":"        new Duckie(\"duckie.txt\").run();"},{"lineNumber":66,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":67}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"import main.java.command.Deadline;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import java.text.ParseException;"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import java.util.Date;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"import java.util.Locale;"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"public class DeadlineTest {"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"    @Test"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"    public void testGetBy() {"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd-MM-yyyy HHmm\", Locale.ENGLISH);"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"        Date date \u003d null;"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"        try {"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"            date \u003d format.parse(\"12-12-2020 1330\");"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"        } catch (ParseException e) {"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"            e.printStackTrace();"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"        Deadline test \u003d new Deadline(\"lunch\", date);"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"        assertEquals(date, test.getBy());"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"    public void testToString() {"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd-MM-yyyy HHmm\", Locale.ENGLISH);"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"        Date date \u003d null;"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"        try {"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"            date \u003d format.parse(\"12-12-2020 1330\");"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"        } catch (ParseException e) {"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"            e.printStackTrace();"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"        Deadline test \u003d new Deadline(\"lunch\", date);"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"        assertEquals(\"[D][ ] lunch (by: Sat Dec 12 13:30:00 SGT 2020)\", test.toString());"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":36}},{"path":"src/test/java/DuckieTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"public class DuckieTest {"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"    public void dummyTest(){"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"        assertEquals(2, 2);"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":10}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"import main.java.command.Event;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import java.text.ParseException;"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import java.util.Date;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"import java.util.Locale;"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"public class EventTest {"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"    public void testGetAt() {"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd-MM-yyyy HHmm\", Locale.ENGLISH);"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"        Date date \u003d null;"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"        try {"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"            date \u003d format.parse(\"12-12-2020 1330\");"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"        } catch (ParseException e) {"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"            e.printStackTrace();"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"        Event test \u003d new Event(\"lunch\", date);"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"        assertEquals(date, test.getAt());"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"    public void testToString() {"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd-MM-yyyy HHmm\", Locale.ENGLISH);"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"        Date date \u003d null;"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"            date \u003d format.parse(\"12-12-2020 1330\");"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"        } catch (ParseException e) {"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"            e.printStackTrace();"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"        Event test \u003d new Event(\"lunch\", date);"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"        assertEquals(\"[E][ ] lunch (at: Sat Dec 12 13:30:00 SGT 2020)\", test.toString());"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":37}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"todo eat lunch"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":"deadline project /by 12-12-2020 2356"},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"event conference /at 12-03-2021 1200"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"list"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"delete 2"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"list"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"bye"}],"authorContributionMap":{"wei-yutong":8}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"java -classpath ../bin Duckie.main.java \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"wei-yutong":1,"-":37}}]
