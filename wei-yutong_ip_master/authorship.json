[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"    mainClassName \u003d \"gui.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"    archiveBaseName \u003d \"duckie\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"wei-yutong":17,"-":44}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"Hello! You are using Duckie, an interactive chatbot that helps you manage your daily tasks."},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"This user guide teaches you how to use Duckie."},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"## Summary "},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"These are the commands you can use on Duckie. Specific usage examples are given after the summary."},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"Note: words in \u003c \u003e are customizable user input."},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"Adding tasks:"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"1. `todo` \u003ctask\u003e - adds a simple todo task."},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"2. `deadline` \u003ctask\u003e /by \u003cdate\u003e - adds a deadline task with a date to be completed by."},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"3. `event` \u003ctask\u003e /at \u003cdate\u003e - adds an event task with a date to be held at."},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"4. `doWithin` \u003ctask\u003e /from \u003cdate\u003e /to \u003cdate\u003e - adds a doWithin task with a beginning date to an end date."},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"Managing tasks:"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"1. `list` - shows all tasks in the list in the added order."},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"2. `done` \u003ctask number\u003e - marks the specified task as done."},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"3. `delete` \u003ctask number\u003e - deletes the specified task."},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"4. `find` \u003ctask\u003e  - finds tasks matching user input."},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"Ending session:"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"1. `bye` - shows end message."},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":26,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"These are Duckie\u0027s features."},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"### Feature 1: todo"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"Adds a simple todo task."},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"## Usage"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"### `todo eat`"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"Adds a todo task with description \"eat\" into the list"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"Expected outcome:"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"```"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"ok! i\u0027ve added this task:"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"[T][ ] eat"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"you have 1 task in your list! keep working!"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":":) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :)"},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"```"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"### Feature 2: deadline"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"Adds a deadline task with a date to be completed by."},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"## Usage"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"### `deadline project /by 12-12-2020 2356`"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"Adds a deadline task with description \"project\" and date to be completed \"12-12-2020 2356\" into the list."},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"Expected outcome:"},{"lineNumber":56,"author":{"gitId":"wei-yutong"},"content":"```"},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":"ok! i\u0027ve added this task:"},{"lineNumber":58,"author":{"gitId":"wei-yutong"},"content":"[D][ ] deadline project  (by: Sat Dec 12 23:56:00 SGT 2020)"},{"lineNumber":59,"author":{"gitId":"wei-yutong"},"content":"you have 2 tasks in your list! keep working!"},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":":) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :)"},{"lineNumber":61,"author":{"gitId":"wei-yutong"},"content":"```"},{"lineNumber":62,"author":{"gitId":"wei-yutong"},"content":"### Feature 3: event"},{"lineNumber":63,"author":{"gitId":"wei-yutong"},"content":"Adds an event task with a date to be held at."},{"lineNumber":64,"author":{"gitId":"-"},"content":""},{"lineNumber":65,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":66,"author":{"gitId":"-"},"content":""},{"lineNumber":67,"author":{"gitId":"wei-yutong"},"content":"### `event project /by 12-03-2021 1200`"},{"lineNumber":68,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":69,"author":{"gitId":"wei-yutong"},"content":"Adds an event task with description \"conference\" and date to be held \"12-03-2021 1200\" into the list."},{"lineNumber":70,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":71,"author":{"gitId":"wei-yutong"},"content":"Expected outcome:"},{"lineNumber":72,"author":{"gitId":"wei-yutong"},"content":"```"},{"lineNumber":73,"author":{"gitId":"wei-yutong"},"content":"ok! i\u0027ve added this task:"},{"lineNumber":74,"author":{"gitId":"wei-yutong"},"content":"[E][ ] event conference  (at: Fri Mar 12 12:00:00 SGT 2021)"},{"lineNumber":75,"author":{"gitId":"wei-yutong"},"content":"you have 3 tasks in your list! keep working!"},{"lineNumber":76,"author":{"gitId":"wei-yutong"},"content":":) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :)"},{"lineNumber":77,"author":{"gitId":"wei-yutong"},"content":"```"},{"lineNumber":78,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":79,"author":{"gitId":"wei-yutong"},"content":"### Feature 4: doWithin"},{"lineNumber":80,"author":{"gitId":"wei-yutong"},"content":"Adds a doWithin task with a beginning date to an end date."},{"lineNumber":81,"author":{"gitId":"-"},"content":""},{"lineNumber":82,"author":{"gitId":"wei-yutong"},"content":"## Usage"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"wei-yutong"},"content":"### `doWithin buy present /from 12-12-2020 2356 /to 12-03-2021 1200`"},{"lineNumber":85,"author":{"gitId":"-"},"content":""},{"lineNumber":86,"author":{"gitId":"wei-yutong"},"content":"Adds a doWithin task with description \"buy present\" and date to be completed from \"12-12-2020 2356\" "},{"lineNumber":87,"author":{"gitId":"wei-yutong"},"content":"to \"12-03-2021 1200\" into the list."},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":90,"author":{"gitId":"wei-yutong"},"content":"```"},{"lineNumber":91,"author":{"gitId":"wei-yutong"},"content":"ok! i\u0027ve added this task:"},{"lineNumber":92,"author":{"gitId":"wei-yutong"},"content":"[DW][ ] doWithin buy present  (from: Sat Dec 12 23:56:00 SGT 2020 to: Fri Mar 12 12:00:00 SGT 2021)"},{"lineNumber":93,"author":{"gitId":"wei-yutong"},"content":"you have 4 tasks in your list! keep working!"},{"lineNumber":94,"author":{"gitId":"wei-yutong"},"content":":) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :)"},{"lineNumber":95,"author":{"gitId":"wei-yutong"},"content":"```"},{"lineNumber":96,"author":{"gitId":"wei-yutong"},"content":"### Feature 5: list"},{"lineNumber":97,"author":{"gitId":"wei-yutong"},"content":"Shows all tasks in the list in the added order."},{"lineNumber":98,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":99,"author":{"gitId":"wei-yutong"},"content":"## Usage"},{"lineNumber":100,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":101,"author":{"gitId":"wei-yutong"},"content":"### `list`"},{"lineNumber":102,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":103,"author":{"gitId":"wei-yutong"},"content":"Shows all items currently in the list."},{"lineNumber":104,"author":{"gitId":"-"},"content":""},{"lineNumber":105,"author":{"gitId":"wei-yutong"},"content":"Expected outcome:"},{"lineNumber":106,"author":{"gitId":"wei-yutong"},"content":"```"},{"lineNumber":107,"author":{"gitId":"wei-yutong"},"content":"get to work! these are the tasks in your list:"},{"lineNumber":108,"author":{"gitId":"wei-yutong"},"content":"1.[T][ ] eat"},{"lineNumber":109,"author":{"gitId":"wei-yutong"},"content":"2.[D][ ] deadline project  (by: Sat Dec 12 23:56:00 SGT 2020)"},{"lineNumber":110,"author":{"gitId":"wei-yutong"},"content":"3.[E][ ] event conference  (at: Fri Mar 12 12:00:00 SGT 2021)"},{"lineNumber":111,"author":{"gitId":"wei-yutong"},"content":":) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :)"},{"lineNumber":112,"author":{"gitId":"wei-yutong"},"content":"```"},{"lineNumber":113,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":114,"author":{"gitId":"wei-yutong"},"content":"### Feature 6: done"},{"lineNumber":115,"author":{"gitId":"wei-yutong"},"content":"Marks the specified task as done."},{"lineNumber":116,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":117,"author":{"gitId":"wei-yutong"},"content":"## Usage"},{"lineNumber":118,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":119,"author":{"gitId":"wei-yutong"},"content":"### `done 1`"},{"lineNumber":120,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":121,"author":{"gitId":"wei-yutong"},"content":"Marks the task numbered 1 as done with a cross."},{"lineNumber":122,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":123,"author":{"gitId":"wei-yutong"},"content":"Expected outcome:"},{"lineNumber":124,"author":{"gitId":"wei-yutong"},"content":"```"},{"lineNumber":125,"author":{"gitId":"wei-yutong"},"content":"cool! this task is marked as done:"},{"lineNumber":126,"author":{"gitId":"wei-yutong"},"content":"[T][✘] eat"},{"lineNumber":127,"author":{"gitId":"wei-yutong"},"content":":) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :)"},{"lineNumber":128,"author":{"gitId":"wei-yutong"},"content":"```"},{"lineNumber":129,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":130,"author":{"gitId":"wei-yutong"},"content":"### Feature 7: delete"},{"lineNumber":131,"author":{"gitId":"wei-yutong"},"content":"Deletes the specified task."},{"lineNumber":132,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":133,"author":{"gitId":"wei-yutong"},"content":"## Usage"},{"lineNumber":134,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":135,"author":{"gitId":"wei-yutong"},"content":"### `delete 2`"},{"lineNumber":136,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":137,"author":{"gitId":"wei-yutong"},"content":"Removes the task from the list."},{"lineNumber":138,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":139,"author":{"gitId":"wei-yutong"},"content":"Expected outcome:"},{"lineNumber":140,"author":{"gitId":"wei-yutong"},"content":"```"},{"lineNumber":141,"author":{"gitId":"wei-yutong"},"content":"ok! i\u0027ve deleted this task:"},{"lineNumber":142,"author":{"gitId":"wei-yutong"},"content":"[D][ ] deadline project  (by: Sat Dec 12 23:56:00 SGT 2020)"},{"lineNumber":143,"author":{"gitId":"wei-yutong"},"content":"yay! you have 2 tasks left to do!"},{"lineNumber":144,"author":{"gitId":"wei-yutong"},"content":":) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :)"},{"lineNumber":145,"author":{"gitId":"wei-yutong"},"content":"```"},{"lineNumber":146,"author":{"gitId":"wei-yutong"},"content":"### Feature 8: find"},{"lineNumber":147,"author":{"gitId":"wei-yutong"},"content":"Finds tasks matching user input."},{"lineNumber":148,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":149,"author":{"gitId":"wei-yutong"},"content":"## Usage"},{"lineNumber":150,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":151,"author":{"gitId":"wei-yutong"},"content":"### `find eat`"},{"lineNumber":152,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":153,"author":{"gitId":"wei-yutong"},"content":"Returns tasks matching user input."},{"lineNumber":154,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":155,"author":{"gitId":"wei-yutong"},"content":"Expected outcome:"},{"lineNumber":156,"author":{"gitId":"wei-yutong"},"content":"```"},{"lineNumber":157,"author":{"gitId":"wei-yutong"},"content":"found it! here\u0027s your task(s):"},{"lineNumber":158,"author":{"gitId":"wei-yutong"},"content":"[T][✘] eat"},{"lineNumber":159,"author":{"gitId":"wei-yutong"},"content":":) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :)"},{"lineNumber":160,"author":{"gitId":"wei-yutong"},"content":"```"},{"lineNumber":161,"author":{"gitId":"wei-yutong"},"content":"### Feature 9: bye"},{"lineNumber":162,"author":{"gitId":"wei-yutong"},"content":"Shows end message"},{"lineNumber":163,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":164,"author":{"gitId":"wei-yutong"},"content":"## Usage"},{"lineNumber":165,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":166,"author":{"gitId":"wei-yutong"},"content":"### `Bye`"},{"lineNumber":167,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":168,"author":{"gitId":"wei-yutong"},"content":"Shows end message."},{"lineNumber":169,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":170,"author":{"gitId":"wei-yutong"},"content":"Expected outcome:"},{"lineNumber":171,"author":{"gitId":"wei-yutong"},"content":"```"},{"lineNumber":172,"author":{"gitId":"wei-yutong"},"content":"goodbye! c ya soon ;)"},{"lineNumber":173,"author":{"gitId":"wei-yutong"},"content":":) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :)"},{"lineNumber":174,"author":{"gitId":"wei-yutong"},"content":"```"}],"authorContributionMap":{"wei-yutong":161,"-":13}},{"path":"duckie.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"T | not done | tell mom i love her"}],"authorContributionMap":{"wei-yutong":1}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":"@rem"},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"@rem"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"@rem"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"@rem"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"@rem limitations under the License."},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"@rem"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"@rem ##########################################################################"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"@rem"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"@rem"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"@rem ##########################################################################"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"@rem Find java.exe"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"echo."},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"echo."},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"echo location of your Java installation."},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"goto fail"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":":findJavaFromJavaHome"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":56,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":"echo."},{"lineNumber":58,"author":{"gitId":"wei-yutong"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":59,"author":{"gitId":"wei-yutong"},"content":"echo."},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":61,"author":{"gitId":"wei-yutong"},"content":"echo location of your Java installation."},{"lineNumber":62,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":63,"author":{"gitId":"wei-yutong"},"content":"goto fail"},{"lineNumber":64,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":65,"author":{"gitId":"wei-yutong"},"content":":init"},{"lineNumber":66,"author":{"gitId":"wei-yutong"},"content":"@rem Get command-line arguments, handling Windows variants"},{"lineNumber":67,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":68,"author":{"gitId":"wei-yutong"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":69,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":70,"author":{"gitId":"wei-yutong"},"content":":win9xME_args"},{"lineNumber":71,"author":{"gitId":"wei-yutong"},"content":"@rem Slurp the command line arguments."},{"lineNumber":72,"author":{"gitId":"wei-yutong"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":73,"author":{"gitId":"wei-yutong"},"content":"set _SKIP\u003d2"},{"lineNumber":74,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":75,"author":{"gitId":"wei-yutong"},"content":":win9xME_args_slurp"},{"lineNumber":76,"author":{"gitId":"wei-yutong"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":77,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":78,"author":{"gitId":"wei-yutong"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":79,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":80,"author":{"gitId":"wei-yutong"},"content":":execute"},{"lineNumber":81,"author":{"gitId":"wei-yutong"},"content":"@rem Setup the command line"},{"lineNumber":82,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":83,"author":{"gitId":"wei-yutong"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":84,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":85,"author":{"gitId":"wei-yutong"},"content":"@rem Execute Gradle"},{"lineNumber":86,"author":{"gitId":"wei-yutong"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"},{"lineNumber":87,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":88,"author":{"gitId":"wei-yutong"},"content":":end"},{"lineNumber":89,"author":{"gitId":"wei-yutong"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":90,"author":{"gitId":"wei-yutong"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":91,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":92,"author":{"gitId":"wei-yutong"},"content":":fail"},{"lineNumber":93,"author":{"gitId":"wei-yutong"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":94,"author":{"gitId":"wei-yutong"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":95,"author":{"gitId":"wei-yutong"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":96,"author":{"gitId":"wei-yutong"},"content":"exit /b 1"},{"lineNumber":97,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":98,"author":{"gitId":"wei-yutong"},"content":":mainEnd"},{"lineNumber":99,"author":{"gitId":"wei-yutong"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":100,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":101,"author":{"gitId":"wei-yutong"},"content":":omega"},{"lineNumber":102,"author":{"gitId":"wei-yutong"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d"},{"lineNumber":103,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":104,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":105,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":106,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":107,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":108,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":109,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":110,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":111,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":112,"author":{"gitId":"-"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":113,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":114,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":115,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":116,"author":{"gitId":"-"},"content":"@rem limitations under the License."},{"lineNumber":117,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":118,"author":{"gitId":"-"},"content":""},{"lineNumber":119,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":120,"author":{"gitId":"-"},"content":"@rem ##########################################################################"},{"lineNumber":121,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":122,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":123,"author":{"gitId":"-"},"content":"@rem"},{"lineNumber":124,"author":{"gitId":"-"},"content":"@rem ##########################################################################"},{"lineNumber":125,"author":{"gitId":"-"},"content":""},{"lineNumber":126,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":127,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":128,"author":{"gitId":"-"},"content":""},{"lineNumber":129,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":130,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":131,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":132,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":133,"author":{"gitId":"-"},"content":""},{"lineNumber":134,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."},{"lineNumber":135,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"},{"lineNumber":136,"author":{"gitId":"-"},"content":""},{"lineNumber":137,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":138,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":139,"author":{"gitId":"-"},"content":""},{"lineNumber":140,"author":{"gitId":"-"},"content":"@rem Find java.exe"},{"lineNumber":141,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":144,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":145,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":146,"author":{"gitId":"-"},"content":""},{"lineNumber":147,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":148,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":149,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":150,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":151,"author":{"gitId":"-"},"content":"echo location of your Java installation."},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":"goto fail"},{"lineNumber":154,"author":{"gitId":"-"},"content":""},{"lineNumber":155,"author":{"gitId":"-"},"content":":findJavaFromJavaHome"},{"lineNumber":156,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":157,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":158,"author":{"gitId":"-"},"content":""},{"lineNumber":159,"author":{"gitId":"-"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":160,"author":{"gitId":"-"},"content":""},{"lineNumber":161,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":162,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":163,"author":{"gitId":"-"},"content":"echo."},{"lineNumber":164,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":165,"author":{"gitId":"-"},"content":"echo location of your Java installation."},{"lineNumber":166,"author":{"gitId":"-"},"content":""},{"lineNumber":167,"author":{"gitId":"-"},"content":"goto fail"},{"lineNumber":168,"author":{"gitId":"-"},"content":""},{"lineNumber":169,"author":{"gitId":"-"},"content":":init"},{"lineNumber":170,"author":{"gitId":"-"},"content":"@rem Get command-line arguments, handling Windows variants"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":173,"author":{"gitId":"-"},"content":""},{"lineNumber":174,"author":{"gitId":"-"},"content":":win9xME_args"},{"lineNumber":175,"author":{"gitId":"-"},"content":"@rem Slurp the command line arguments."},{"lineNumber":176,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":177,"author":{"gitId":"-"},"content":"set _SKIP\u003d2"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"-"},"content":":win9xME_args_slurp"},{"lineNumber":180,"author":{"gitId":"-"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":181,"author":{"gitId":"-"},"content":""},{"lineNumber":182,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":183,"author":{"gitId":"-"},"content":""},{"lineNumber":184,"author":{"gitId":"-"},"content":":execute"},{"lineNumber":185,"author":{"gitId":"-"},"content":"@rem Setup the command line"},{"lineNumber":186,"author":{"gitId":"-"},"content":""},{"lineNumber":187,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":188,"author":{"gitId":"-"},"content":""},{"lineNumber":189,"author":{"gitId":"-"},"content":"@rem Execute Gradle"},{"lineNumber":190,"author":{"gitId":"-"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"},{"lineNumber":191,"author":{"gitId":"-"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":":end"},{"lineNumber":193,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":194,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":195,"author":{"gitId":"-"},"content":""},{"lineNumber":196,"author":{"gitId":"-"},"content":":fail"},{"lineNumber":197,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":198,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":199,"author":{"gitId":"-"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":200,"author":{"gitId":"-"},"content":"exit /b 1"},{"lineNumber":201,"author":{"gitId":"-"},"content":""},{"lineNumber":202,"author":{"gitId":"-"},"content":":mainEnd"},{"lineNumber":203,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":204,"author":{"gitId":"-"},"content":""},{"lineNumber":205,"author":{"gitId":"-"},"content":":omega"},{"lineNumber":206,"author":{"gitId":"wei-yutong"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e a75fceeb74708da6ac524c08ef526d38e60ee56b"}],"authorContributionMap":{"wei-yutong":103,"-":103}},{"path":"src/main/java/classes/DuckieException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package classes;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":" * DuckieException inherits from Exception class."},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"public class DuckieException extends Exception {"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"     * @param message Error message."},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"    public DuckieException(String message) {"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"        super(message);"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"     * Overriding method to obtain custom error message."},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"     * @return specified error message."},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"    public String toString() {"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"        return super.getMessage();"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":23}},{"path":"src/main/java/classes/Keyword.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package classes;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":" * Enumerates the only commands accepted by Duckie."},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"public enum Keyword {"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"    TODO,"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"    LIST,"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"    DEADLINE,"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"    EVENT,"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"    DONE,"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"    DELETE,"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"    FIND,"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"    BYE;"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":15}},{"path":"src/main/java/classes/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package classes;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import command.ByeCmd;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import command.Command;"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import command.DeadlineCmd;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import command.DeleteCmd;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"import command.DoWithinCmd;"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import command.DoneCmd;"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"import command.EventCmd;"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"import command.FindCmd;"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"import command.ListCmd;"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"import command.ToDoCmd;"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":" * Parser class to deal with making sense of the user command."},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"public class Parser {"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"    private TaskList taskList;"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"    private Ui ui;"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"    private Storage storage;"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"     * @param taskList TaskList object storing list of tasks"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"     * @param ui       a Ui object"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"     * @param storage  a Storage object"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"    public Parser(TaskList taskList, Ui ui, Storage storage) {"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"        this.ui \u003d ui;"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"        this.storage \u003d storage;"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"     * Parse method makes sense of the user input."},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"     * Returns a command class from user\u0027s String input."},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"     * @param cmd user input"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"     * @return command class corresponding to user input cmd"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"     * @throws DuckieException if commands other than the enumerated keywords are entered"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"    public static Command parse(String cmd) throws DuckieException {"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"        assert(cmd !\u003d null);"},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"        String[] commandArr \u003d cmd.trim().split(\" \");"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"        cmd \u003d cmd.trim();"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"        assert commandArr[0].length() \u003d\u003d 1;"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"        switch (commandArr[0]) {"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"        case \"list\":"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"            return new ListCmd(cmd);"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"        // Fallthrough"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"        case \"todo\":"},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"            return new ToDoCmd(cmd);"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"        // Fallthrough"},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"        case \"event\":"},{"lineNumber":56,"author":{"gitId":"wei-yutong"},"content":"            return new EventCmd(cmd);"},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":"        // Fallthrough"},{"lineNumber":58,"author":{"gitId":"wei-yutong"},"content":"        case \"deadline\":"},{"lineNumber":59,"author":{"gitId":"wei-yutong"},"content":"            return new DeadlineCmd(cmd);"},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":"        // Fallthrough"},{"lineNumber":61,"author":{"gitId":"wei-yutong"},"content":"        case \"done\":"},{"lineNumber":62,"author":{"gitId":"wei-yutong"},"content":"            return new DoneCmd(cmd);"},{"lineNumber":63,"author":{"gitId":"wei-yutong"},"content":"        // Fallthrough"},{"lineNumber":64,"author":{"gitId":"wei-yutong"},"content":"        case \"delete\":"},{"lineNumber":65,"author":{"gitId":"wei-yutong"},"content":"            return new DeleteCmd(cmd);"},{"lineNumber":66,"author":{"gitId":"wei-yutong"},"content":"        // Fallthrough"},{"lineNumber":67,"author":{"gitId":"wei-yutong"},"content":"        case \"find\":"},{"lineNumber":68,"author":{"gitId":"wei-yutong"},"content":"            return new FindCmd(cmd);"},{"lineNumber":69,"author":{"gitId":"wei-yutong"},"content":"        // Fallthrough"},{"lineNumber":70,"author":{"gitId":"wei-yutong"},"content":"        case \"bye\":"},{"lineNumber":71,"author":{"gitId":"wei-yutong"},"content":"            return new ByeCmd(cmd);"},{"lineNumber":72,"author":{"gitId":"wei-yutong"},"content":"        // Fallthrough"},{"lineNumber":73,"author":{"gitId":"wei-yutong"},"content":"        case \"doWithin\":"},{"lineNumber":74,"author":{"gitId":"wei-yutong"},"content":"            return new DoWithinCmd(cmd);"},{"lineNumber":75,"author":{"gitId":"wei-yutong"},"content":"        // Fallthrough"},{"lineNumber":76,"author":{"gitId":"wei-yutong"},"content":"        default:"},{"lineNumber":77,"author":{"gitId":"wei-yutong"},"content":"            throw new DuckieException(\"command not recognized! \""},{"lineNumber":78,"author":{"gitId":"wei-yutong"},"content":"                    + \"please start with \u0027list\u0027, \u0027todo\u0027, \u0027event\u0027, \u0027doWithin\u0027, deadline\u0027, \u0027delete\u0027, \u0027done\u0027 or \u0027bye\u0027\");"},{"lineNumber":79,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":81}},{"path":"src/main/java/classes/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package classes;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import java.io.FileWriter;"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import java.io.IOException;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import java.text.ParseException;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"import java.util.Date;"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"import java.util.Locale;"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"import java.util.Scanner;"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"import command.Deadline;"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"import command.Event;"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"import command.ToDo;"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":" * Storage class to deal with loading tasks from the file and saving tasks in the file."},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"public class Storage {"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"    private File file;"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"     * @param filePath path to the saved file"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"     * @throws IOException if user IO is incorrect"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"    public Storage(String filePath) throws IOException {"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"        this.file \u003d new File(filePath);"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"        if (file.createNewFile()) {"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"            System.out.println(\"file created!\");"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"        } else {"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"            System.out.println(\"file loaded!\");"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"     * Method to save Task in saved file, converts Task objects to Strings in file"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"     * @param lst ArrayList of Task objects from user input"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"     * @throws IOException if user IO is incorrect"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e lst) throws IOException {"},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"        FileWriter fw \u003d new FileWriter(this.file);"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"        for (Task temp : lst) {"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"            if (temp instanceof Deadline) {"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"                fw.write(String.format(\"D | %s | %s | %s\","},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"                        temp.getIsDone(), temp.getDescription(), ((Deadline) temp).getBy()) + \"\\n\");"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"            } else if (temp instanceof Event) {"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"                fw.write(String.format(\"E | %s | %s | %s\","},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"                        temp.getIsDone(), temp.getDescription(), ((Event) temp).getAt()) + \"\\n\");"},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"            } else {"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"                fw.write(String.format(\"T | %s | %s\","},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"                        temp.getIsDone(), temp.getDescription()) + \"\\n\");"},{"lineNumber":56,"author":{"gitId":"wei-yutong"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"wei-yutong"},"content":"        fw.close();"},{"lineNumber":59,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":61,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"wei-yutong"},"content":"     * Method to load Tasks from saved file, converts Strings in saved file to Task objects."},{"lineNumber":63,"author":{"gitId":"wei-yutong"},"content":"     * @return an ArrayList AL of Task objects"},{"lineNumber":64,"author":{"gitId":"wei-yutong"},"content":"     * @throws IOException if user IO is incorrect"},{"lineNumber":65,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"wei-yutong"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws IOException {"},{"lineNumber":67,"author":{"gitId":"wei-yutong"},"content":"        ArrayList\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e();"},{"lineNumber":68,"author":{"gitId":"wei-yutong"},"content":"        Scanner sc \u003d new Scanner(this.file);"},{"lineNumber":69,"author":{"gitId":"wei-yutong"},"content":"        while (sc.hasNextLine()) {"},{"lineNumber":70,"author":{"gitId":"wei-yutong"},"content":"            String s \u003d sc.nextLine();"},{"lineNumber":71,"author":{"gitId":"wei-yutong"},"content":"            s \u003d s.trim();"},{"lineNumber":72,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":73,"author":{"gitId":"wei-yutong"},"content":"            String[] sArr \u003d s.split(\"\\\\|\", 4);"},{"lineNumber":74,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":75,"author":{"gitId":"wei-yutong"},"content":"            if (sArr[0].trim().equals(\"D\")) {"},{"lineNumber":76,"author":{"gitId":"wei-yutong"},"content":"                SimpleDateFormat format \u003d new SimpleDateFormat(\"EEE MMM dd HH:mm:ss Z yyyy\", Locale.ENGLISH);"},{"lineNumber":77,"author":{"gitId":"wei-yutong"},"content":"                Date date \u003d null;"},{"lineNumber":78,"author":{"gitId":"wei-yutong"},"content":"                try {"},{"lineNumber":79,"author":{"gitId":"wei-yutong"},"content":"                    date \u003d format.parse(sArr[3].trim());"},{"lineNumber":80,"author":{"gitId":"wei-yutong"},"content":"                } catch (ParseException e) {"},{"lineNumber":81,"author":{"gitId":"wei-yutong"},"content":"                    e.printStackTrace();"},{"lineNumber":82,"author":{"gitId":"wei-yutong"},"content":"                }"},{"lineNumber":83,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":84,"author":{"gitId":"wei-yutong"},"content":"                Deadline tempD \u003d new Deadline(sArr[2].trim(), date);"},{"lineNumber":85,"author":{"gitId":"wei-yutong"},"content":"                if (sArr[1].trim().equals(\"done\")) {"},{"lineNumber":86,"author":{"gitId":"wei-yutong"},"content":"                    tempD.isDone \u003d true;"},{"lineNumber":87,"author":{"gitId":"wei-yutong"},"content":"                } else if (sArr[1].trim().equals(\"not done\")) {"},{"lineNumber":88,"author":{"gitId":"wei-yutong"},"content":"                    tempD.isDone \u003d false;"},{"lineNumber":89,"author":{"gitId":"wei-yutong"},"content":"                }"},{"lineNumber":90,"author":{"gitId":"wei-yutong"},"content":"                lst.add(tempD);"},{"lineNumber":91,"author":{"gitId":"wei-yutong"},"content":"            } else if (sArr[0].trim().equals(\"E\")) {"},{"lineNumber":92,"author":{"gitId":"wei-yutong"},"content":"                SimpleDateFormat format \u003d new SimpleDateFormat(\"EEE MMM dd HH:mm:ss Z yyyy\", Locale.ENGLISH);"},{"lineNumber":93,"author":{"gitId":"wei-yutong"},"content":"                Date date \u003d null;"},{"lineNumber":94,"author":{"gitId":"wei-yutong"},"content":"                try {"},{"lineNumber":95,"author":{"gitId":"wei-yutong"},"content":"                    date \u003d format.parse(sArr[3].trim());"},{"lineNumber":96,"author":{"gitId":"wei-yutong"},"content":"                } catch (ParseException e) {"},{"lineNumber":97,"author":{"gitId":"wei-yutong"},"content":"                    e.printStackTrace();"},{"lineNumber":98,"author":{"gitId":"wei-yutong"},"content":"                }"},{"lineNumber":99,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":100,"author":{"gitId":"wei-yutong"},"content":"                Event tempE \u003d new Event(sArr[2].trim(), date);"},{"lineNumber":101,"author":{"gitId":"wei-yutong"},"content":"                if (sArr[1].trim().equals(\"done\")) {"},{"lineNumber":102,"author":{"gitId":"wei-yutong"},"content":"                    tempE.isDone \u003d true;"},{"lineNumber":103,"author":{"gitId":"wei-yutong"},"content":"                } else if (sArr[1].trim().equals(\"not done\")) {"},{"lineNumber":104,"author":{"gitId":"wei-yutong"},"content":"                    tempE.isDone \u003d false;"},{"lineNumber":105,"author":{"gitId":"wei-yutong"},"content":"                }"},{"lineNumber":106,"author":{"gitId":"wei-yutong"},"content":"                lst.add(tempE);"},{"lineNumber":107,"author":{"gitId":"wei-yutong"},"content":"            } else {"},{"lineNumber":108,"author":{"gitId":"wei-yutong"},"content":"                ToDo tempT \u003d new ToDo(sArr[2].trim());"},{"lineNumber":109,"author":{"gitId":"wei-yutong"},"content":"                if (sArr[1].trim().equals(\"done\")) {"},{"lineNumber":110,"author":{"gitId":"wei-yutong"},"content":"                    tempT.isDone \u003d true;"},{"lineNumber":111,"author":{"gitId":"wei-yutong"},"content":"                } else if (sArr[1].trim().equals(\"not done\")) {"},{"lineNumber":112,"author":{"gitId":"wei-yutong"},"content":"                    tempT.isDone \u003d false;"},{"lineNumber":113,"author":{"gitId":"wei-yutong"},"content":"                }"},{"lineNumber":114,"author":{"gitId":"wei-yutong"},"content":"                lst.add(tempT);"},{"lineNumber":115,"author":{"gitId":"wei-yutong"},"content":"            }"},{"lineNumber":116,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"wei-yutong"},"content":"        return lst;"},{"lineNumber":118,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":119,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":119}},{"path":"src/main/java/classes/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package classes;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":" * Task encapsulates a task with String description and boolean isDone."},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":" * It supports getting the status of the task and marking it as done."},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"public class Task {"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"    protected String description;"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"    protected boolean isDone;"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"     * Construct a Task object with a given description and isDone set to false."},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"     * @param description The description of this task."},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"    public Task(String description) {"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"        this.description \u003d description;"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"        this.isDone \u003d false;"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"     * Get the current status of the task."},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"     * @return Returns a cross if done, otherwise whitespace."},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"    public String getStatus() {"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"        return (isDone ? \"\\u2718\" : \" \");"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"     * Method to get the isDone status of a Task as a String"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"     * @return Returns String \"done\" if isDone is true, \"not done\" otherwise."},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"    public String getIsDone() {"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"        if (this.isDone) {"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"            return \"done\";"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"        } else {"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"            return \"not done\";"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"    public String getDescription() {"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"        return this.description;"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"     * Sets the status of the task to true."},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"    public void markDone() {"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"        isDone \u003d true;"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"    public String toString() {"},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"        return \"[\" + getStatus() + \"] \" + description;"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":55}},{"path":"src/main/java/classes/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package classes;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":" * TaskList class with specific methods."},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"    private ArrayList\u003cTask\u003e lst;"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"    public TaskList() {"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"        this.lst \u003d new ArrayList\u003cTask\u003e();"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"     * Overloaded constructor method."},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"     * @param lst an ArrayList containing Task objects."},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"    public TaskList(ArrayList\u003cTask\u003e lst) {"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"        this.lst \u003d lst;"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"     * Method to get TaskList."},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"     * @return Returns an ArrayList of Task objects."},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"        return lst;"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"     * Method to add Task to TaskList."},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"     * @param task standard Task object."},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"    public void addTask(Task task) {"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"        lst.add(task);"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"     * Method to delete Task from TaskList."},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"     * @param index index of Task to be deleted."},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"    public void deleteTask(int index) {"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"        lst.remove(index);"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"     * Method to get size of TaskList."},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"     * @return Returns an integer which is the size of Tasklist."},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"    public int getListSize() {"},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"        return this.lst.size();"},{"lineNumber":56,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":58,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"wei-yutong"},"content":"     * Method to get Task at a specific index."},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":"     * @param index index of Task to be retrieved."},{"lineNumber":61,"author":{"gitId":"wei-yutong"},"content":"     * @return Returns the specified Task object."},{"lineNumber":62,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"wei-yutong"},"content":"    public Task getTask(int index) {"},{"lineNumber":64,"author":{"gitId":"wei-yutong"},"content":"        return this.lst.get(index);"},{"lineNumber":65,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":66}},{"path":"src/main/java/classes/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package classes;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":" * Ui (User Interface) class to deal with interactions with the user."},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"    private String line \u003d \":) :) :) :) :) :) :) :) :) :) :) :) :) :) :) :)\";"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"     * Print welcome message when user opens Duckie."},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"     * @return"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"    public String startMessage() {"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"        return \"yo im Duckie! quack quack! what can i do for ya ;)\" + \"\\n\" + line;"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"     * Print end message when user enters \u0027bye\u0027 to stop Duckie."},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"    public String endMessage() {"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"        return \"goodbye! c ya soon ;)\" + \"\\n\" + line;"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"     * Print custom line of smileys as a separator line."},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"     * @return"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"    public String customLine() {"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"        return line;"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"     * Method to read the user\u0027s input."},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"     * @return String user input."},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"    public String readInput() {"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"        Scanner sc \u003d new Scanner(System.in);"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"        return sc.nextLine();"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"    public String showErrorMessage(Exception e) {"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"        return e.getMessage();"},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"    public String findMessage() {"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"        return \"found it! here\u0027s your task(s):\";"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":51}},{"path":"src/main/java/command/ByeCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import classes.DuckieException;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import classes.Storage;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"import classes.TaskList;"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import classes.Ui;"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"public class ByeCmd extends Command {"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"    private String cmd;"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"     * @param cmd User input command."},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"    public ByeCmd (String cmd) {"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"        this.cmd \u003d cmd;"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"     * Execute method."},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"     * @param lst a TaskList object containing Task Objects."},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"     * @param ui a Ui object."},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"     * @param storage a storage object."},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"     * @return System response to user input."},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"     * @throws DuckieException if user enters commands besides accepted ones."},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"    public String execute(TaskList lst, Ui ui, Storage storage) throws DuckieException {"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"        cmd \u003d cmd.trim();"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"        if (!cmd.equals(\"bye\")) {"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"            throw new DuckieException(\"please enter \u0027bye\u0027 only!\");"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"            storage.saveTasks(lst.getTaskList());"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"        } catch (IOException e) {"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"            e.printStackTrace();"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"        return ui.endMessage();"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"     * Method to determine whether to exit program."},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"     * @return Returns true to exit program upon \u0027Bye\u0027 command."},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"    public boolean isEnd() {"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"        return true;"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":52}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import classes.DuckieException;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import classes.Storage;"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import classes.TaskList;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import classes.Ui;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":" * Abstract Command class with methods execute and isEnd. Inherited by all keyword classes."},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"public abstract class Command {"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"     * Execute method."},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"     * @param lst a TaskList object containing Task Objects."},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"     * @param ui a Ui object."},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"     * @param storage a storage object."},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"     * @return a String handled by the respective command."},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"     * @throws DuckieException if user enters commands besides accepted ones."},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"    public abstract String execute(TaskList lst, Ui ui, Storage storage) throws DuckieException;"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"     * Method to determine whether to exit program."},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"     * @return Returns true or false."},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"    public abstract boolean isEnd();"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":28}},{"path":"src/main/java/command/DateParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import java.util.Date;"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import java.util.Locale;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"import classes.DuckieException;"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":" * DateParser class to handle conversion of dates."},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"public class DateParser {"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"     * Method to convert String user input to a Date object"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"     * to be stored in the Task object."},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"     * @param userInput the user date input in String format."},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"     * @return the Date object version of userInput."},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"     * @throws DuckieException if date is entered in incorrect format."},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"    public static Date parse(String userInput) throws DuckieException {"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"        String inputDate \u003d userInput.trim();"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd-MM-yyyy HHmm\", Locale.ENGLISH);"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"        Date date;"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"            date \u003d format.parse(inputDate);"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"        } catch (Exception e) {"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"            throw new DuckieException(\"please enter date in the format dd-mm-yyyy HHmm\");"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"        return date;"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":31}},{"path":"src/main/java/command/DateParserDw.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import java.util.Date;"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import java.util.Locale;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"import classes.DuckieException;"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":" * DateParserDw class to handle conversion of dates for DoWithin commands."},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"public class DateParserDw {"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"     * Method to convert String user input to a Date object"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"     * to be stored in the Task object."},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"     * @param userInput the user date input in String format."},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"     * @return the Date object version of userInput."},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"     * @throws DuckieException if date is entered in incorrect format."},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"    public static Date parse(String userInput) throws DuckieException {"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"        String inputDate \u003d userInput.trim();"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd-MM-yyyy\", Locale.ENGLISH);"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"        Date date;"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"        try {"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"            date \u003d format.parse(inputDate);"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"        } catch (Exception e) {"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"            throw new DuckieException(\"please enter date in the format dd-mm-yyyy\");"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"        return date;"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":31}},{"path":"src/main/java/command/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import java.util.Date;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import classes.Task;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":" * Deadline inherits from Task. It encapsulates a deadline with an additional String by."},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":" * Deadline is specified by [D]."},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"public class Deadline extends Task {"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"    protected Date by;"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"     * @param description User input description of deadline."},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"     * @param by Date and time by which the deadline is to take place."},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"    public Deadline(String description, Date by) {"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"        super(description);"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"        this.by \u003d by;"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"     * Method to retrieve the date of the deadline."},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"     * @return a Date object of the deadline."},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"    public Date getBy() {"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"        return this.by;"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"     * Method to return a formatted version of user\u0027s input."},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"     * @return Formatted String of user\u0027s input."},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":41}},{"path":"src/main/java/command/DeadlineCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import java.util.Date;"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import classes.DuckieException;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"import classes.Storage;"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import classes.TaskList;"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"import classes.Ui;"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"public class DeadlineCmd extends Command {"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"    private String cmd;"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"     * @param cmd User input command."},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"    public DeadlineCmd(String cmd) {"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"        this.cmd \u003d cmd;"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"     * Execute method."},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"     * @param lst a TaskList object containing Task Objects."},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"     * @param ui a Ui object."},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"     * @param storage a storage object."},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"     * @return System response to user input."},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"     * @throws DuckieException if user enters commands besides accepted ones."},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"    public String execute(TaskList lst, Ui ui, Storage storage) throws DuckieException {"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"        cmd \u003d cmd.trim();"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"        if (cmd.equals(\"deadline\")) {"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"            throw new DuckieException(\"oops! deadline cannot be empty!\");"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"        } else if (!cmd.contains(\"/by\")) {"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"            throw new DuckieException(\"oops! please specify deadline using \u0027/by\u0027\");"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"        String[] strD \u003d cmd.split(\"/by\", 2);"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"        String[] description \u003d strD[0].split(\" \", 2);"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"        DateParser dateParser \u003d new DateParser();"},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"        Date date \u003d dateParser.parse(strD[1]);"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"        Deadline tempD \u003d new Deadline(description[1], date);"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"        lst.addTask(tempD);"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"        try {"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"            storage.saveTasks(lst.getTaskList());"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"        } catch (IOException e) {"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"            e.printStackTrace();"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"        if (lst.getListSize() \u003d\u003d 0) {"},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"            return \"there are no tasks in your list!\";"},{"lineNumber":56,"author":{"gitId":"wei-yutong"},"content":"        } else if (lst.getListSize() \u003d\u003d 1) {"},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":"            return \"ok! i\u0027ve added this task: \" + tempD.toString()"},{"lineNumber":58,"author":{"gitId":"wei-yutong"},"content":"                    + \"\\n\" + \"you have \" + lst.getListSize() + \" task in your list! keep working!\""},{"lineNumber":59,"author":{"gitId":"wei-yutong"},"content":"                    + \"\\n\" + ui.customLine();"},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":"        } else {"},{"lineNumber":61,"author":{"gitId":"wei-yutong"},"content":"            return \"ok! i\u0027ve added this task: \" + tempD.toString()"},{"lineNumber":62,"author":{"gitId":"wei-yutong"},"content":"                    + \"\\n\" + \"you have \" + lst.getListSize() + \" tasks in your list! keep working!\""},{"lineNumber":63,"author":{"gitId":"wei-yutong"},"content":"                    + \"\\n\" + ui.customLine();"},{"lineNumber":64,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":67,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"wei-yutong"},"content":"     * Method to determine whether to exit program."},{"lineNumber":69,"author":{"gitId":"wei-yutong"},"content":"     * @return Returns false, program continues."},{"lineNumber":70,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":72,"author":{"gitId":"wei-yutong"},"content":"    public boolean isEnd() {"},{"lineNumber":73,"author":{"gitId":"wei-yutong"},"content":"        return false;"},{"lineNumber":74,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":75,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":75}},{"path":"src/main/java/command/DeleteCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import classes.DuckieException;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import classes.Storage;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"import classes.TaskList;"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import classes.Ui;"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"public class DeleteCmd extends Command {"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"    private String cmd;"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"     * @param cmd User input command."},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"    public DeleteCmd (String cmd) {"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"        this.cmd \u003d cmd;"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"     * Execute method."},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"     * @param lst a TaskList object containing Task Objects."},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"     * @param ui a Ui object."},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"     * @param storage a storage object."},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"     * @throws DuckieException if user enters commands besides accepted ones."},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"     * @return"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"    public String execute(TaskList lst, Ui ui, Storage storage) throws DuckieException {"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"        cmd \u003d cmd.trim();"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"        if (cmd.equals(\"delete\")) {"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"            throw new DuckieException(\"oops! please specify the task number after \u0027delete\u0027!\");"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"        String[] cmdArr \u003d cmd.split(\" \");"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"        assert !cmdArr[1].contains(\" \");"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"        int deleteNum \u003d Integer.parseInt(cmdArr[1]);"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"        String output \u003d lst.getTask(deleteNum - 1).toString();"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"        lst.deleteTask(deleteNum - 1);"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"            storage.saveTasks(lst.getTaskList());"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"        } catch (IOException e) {"},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"            e.printStackTrace();"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"        if (lst.getListSize() \u003d\u003d 0) {"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"            return \"yay! you are done!\";"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"        } else if (lst.getListSize() \u003d\u003d 1) {"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"            return \"ok! i\u0027ve deleted this task: \" + output"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"                    + \"\\n\" + \"yay! you have \" + lst.getListSize() + \" task left to do!\""},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"                    + \"\\n\" + ui.customLine();"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"        } else {"},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"            return \"ok! i\u0027ve deleted this task: \" + output"},{"lineNumber":56,"author":{"gitId":"wei-yutong"},"content":"                    + \"\\n\" + \"yay! you have \" + lst.getListSize() + \" tasks left to do!\""},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":"                    + \"\\n\" + ui.customLine();"},{"lineNumber":58,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":61,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"wei-yutong"},"content":"     * Method to determine whether to exit program."},{"lineNumber":63,"author":{"gitId":"wei-yutong"},"content":"     * @return Returns false, program continues."},{"lineNumber":64,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":66,"author":{"gitId":"wei-yutong"},"content":"    public boolean isEnd() {"},{"lineNumber":67,"author":{"gitId":"wei-yutong"},"content":"        return false;"},{"lineNumber":68,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":69}},{"path":"src/main/java/command/DoWithin.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import java.util.Date;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import classes.Task;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"public class DoWithin extends Task {"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"    protected Date from;"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"    protected Date to;"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"     * Construct a Task object with a given description and isDone set to false."},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"     * @param description The description of this task."},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"    public DoWithin(String description, Date from, Date to) {"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"        super(description);"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"        this.from \u003d from;"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"        this.to \u003d to;"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"    public Date getFrom() {"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"        return this.from;"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"    public Date getTo() {"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"        return this.to;"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"    public String toString() {"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"        return \"[DW]\" + super.toString() + \" (from: \" + from + \" to: \" + to + \")\";"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":33}},{"path":"src/main/java/command/DoWithinCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import java.util.Date;"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import classes.DuckieException;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"import classes.Storage;"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import classes.TaskList;"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"import classes.Ui;"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"public class DoWithinCmd extends Command {"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"    private String cmd;"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"    public DoWithinCmd(String cmd) {"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"        this.cmd \u003d cmd;"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"    public String execute(TaskList lst, Ui ui, Storage storage) throws DuckieException {"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"        cmd \u003d cmd.trim();"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"        if (cmd.equals(\"doWithin\")) {"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"            throw new DuckieException(\"oops! doWithin cannot be empty!\");"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"        } else if (!cmd.contains(\"/from\") || !cmd.contains(\"/to\")) {"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"            throw new DuckieException(\"oops! please specify the time of your \""},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"                   + \"do within task using \u0027/from\u0027 and \u0027/to\u0027\");"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"        String[] strFrom \u003d cmd.split(\"/from\", 2);"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"        String[] dateStr1 \u003d strFrom[1].trim().split(\" \");"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"        Date date1 \u003d DateParserDw.parse(dateStr1[0]);"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"        String[] strTo \u003d cmd.split(\"/to\", 2);"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"        Date date2 \u003d DateParserDw.parse(strTo[1]);"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"        String[] description \u003d strFrom[0].split(\" \", 2);"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"        DoWithin tempDW \u003d new DoWithin(description[1], date1, date2);"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"        lst.addTask(tempDW);"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"            storage.saveTasks(lst.getTaskList());"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"        } catch (IOException e) {"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"            e.printStackTrace();"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"        if (lst.getListSize() \u003d\u003d 0) {"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"            return \"there are no tasks in your list!\";"},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"        } else if (lst.getListSize() \u003d\u003d 1) {"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"            return \"ok! i\u0027ve added this task: \" + tempDW.toString()"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"                    + \"\\n\" + \"you have \" + lst.getListSize() + \" task in your list! keep working!\""},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"                    + \"\\n\" + ui.customLine();"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"        } else {"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"            return \"ok! i\u0027ve added this task: \" + tempDW.toString()"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"                    + \"\\n\" + \"you have \" + lst.getListSize() + \" tasks in your list! keep working!\""},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"                    + \"\\n\" + ui.customLine();"},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":56,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":"    public boolean isEnd() {"},{"lineNumber":58,"author":{"gitId":"wei-yutong"},"content":"        return false;"},{"lineNumber":59,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":"}"},{"lineNumber":61,"author":{"gitId":"wei-yutong"},"content":""}],"authorContributionMap":{"wei-yutong":61}},{"path":"src/main/java/command/DoneCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import classes.DuckieException;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import classes.Storage;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"import classes.Task;"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import classes.TaskList;"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"import classes.Ui;"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"public class DoneCmd extends Command {"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"    private String cmd;"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"     * @param cmd User input command."},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"    public DoneCmd (String cmd) {"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"        this.cmd \u003d cmd;"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"     * Execute method."},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"     * @param lst a TaskList object containing Task Objects."},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"     * @param ui a Ui object."},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"     * @param storage a storage object."},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"     * @return System response to user input."},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"     * @throws DuckieException if user enters commands besides accepted ones."},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"    public String execute(TaskList lst, Ui ui, Storage storage) throws DuckieException {"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"        cmd \u003d cmd.trim();"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"        if (cmd.equals(\"done\")) {"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"            throw new DuckieException(\"oops! please specify the task number after \u0027done\u0027!\");"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"        String[] cmdArr \u003d cmd.split(\" \");"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"        assert !cmdArr[1].contains(\" \");"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"        int taskNum \u003d Integer.parseInt(cmdArr[1]);"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"        Task temp \u003d lst.getTask(taskNum - 1);"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"        temp.markDone();"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"            storage.saveTasks(lst.getTaskList());"},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"        } catch (IOException e) {"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"            e.printStackTrace();"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"        return \"cool! this task is marked as done: \" + temp.toString() + ui.customLine();"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"     * Method to determine whether to exit program."},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"     * @return Returns false, program continues."},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":"    public boolean isEnd() {"},{"lineNumber":58,"author":{"gitId":"wei-yutong"},"content":"        return false;"},{"lineNumber":59,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":60}},{"path":"src/main/java/command/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import java.util.Date;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import classes.Task;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":" * Event inherits from Task. It encapsulates an event with an additional String at."},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":" * Event is specified by [E]."},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"public class Event extends Task {"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"    protected Date at;"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"     * @param description User input description of event."},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"     * @param at Date and time at which the event is to take place."},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"    public Event (String description, Date at) {"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"        super(description);"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"        this.at \u003d at;"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"     * Method to retrieve the date of the event."},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"     * @return a Date object of the event."},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"    public Date getAt() {"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"        return this.at;"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"     * Method to return a formatted version of user\u0027s input."},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"     * @return Formatted String of user\u0027s input."},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"    public String toString() {"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":40}},{"path":"src/main/java/command/EventCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import java.util.Date;"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import classes.DuckieException;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"import classes.Storage;"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import classes.TaskList;"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"import classes.Ui;"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"public class EventCmd extends Command {"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"    private String cmd;"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"     * @param cmd User input command."},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"    public EventCmd(String cmd) {"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"        this.cmd \u003d cmd;"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"     * Execute method."},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"     * @param lst a TaskList object containing Task Objects."},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"     * @param ui a Ui object."},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"     * @param storage a storage object."},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"     * @return System response to user input."},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"     * @throws DuckieException if user enters commands besides accepted ones."},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"    public String execute(TaskList lst, Ui ui, Storage storage) throws DuckieException {"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"        cmd \u003d cmd.trim();"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"        if (cmd.equals(\"event\")) {"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"            throw new DuckieException(\"oops! event cannot be empty!\");"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"        } else if (!cmd.contains(\"/at\")) {"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"            throw new DuckieException(\"oops! please specify the time of your event using \u0027/at\u0027\");"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"        String[] strE \u003d cmd.split(\"/at\", 2);"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"        String[] description \u003d strE[0].split(\" \", 2);"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"        DateParser dateParser \u003d new DateParser();"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"        Date date \u003d dateParser.parse(strE[1]);"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"        Event tempE \u003d new Event(description[1], date);"},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"        lst.addTask(tempE);"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"            storage.saveTasks(lst.getTaskList());"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"        } catch (IOException e) {"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"            e.printStackTrace();"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"        if (lst.getListSize() \u003d\u003d 0) {"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"            return \"there are no tasks in your list!\";"},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"        } else if (lst.getListSize() \u003d\u003d 1) {"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"            return \"ok! i\u0027ve added this task: \" + tempE.toString()"},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"                    + \"\\n\" + \"you have \" + lst.getListSize() + \" task in your list! keep working!\""},{"lineNumber":56,"author":{"gitId":"wei-yutong"},"content":"                    + \"\\n\" + ui.customLine();"},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":"        } else {"},{"lineNumber":58,"author":{"gitId":"wei-yutong"},"content":"            return \"ok! i\u0027ve added this task: \" + tempE.toString()"},{"lineNumber":59,"author":{"gitId":"wei-yutong"},"content":"                    + \"\\n\" + \"you have \" + lst.getListSize() + \" tasks in your list! keep working!\""},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":"                    + \"\\n\" + ui.customLine();"},{"lineNumber":61,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":64,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"wei-yutong"},"content":"     * Method to determine whether to exit program."},{"lineNumber":66,"author":{"gitId":"wei-yutong"},"content":"     * @return Returns false, program continues."},{"lineNumber":67,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":68,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":69,"author":{"gitId":"wei-yutong"},"content":"    public boolean isEnd() {"},{"lineNumber":70,"author":{"gitId":"wei-yutong"},"content":"        return false;"},{"lineNumber":71,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":72}},{"path":"src/main/java/command/FindCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import classes.DuckieException;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import classes.Storage;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"import classes.TaskList;"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import classes.Ui;"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"public class FindCmd extends Command {"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"    private String cmd;"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"    public FindCmd(String cmd) {"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"        this.cmd \u003d cmd;"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"    public String execute(TaskList lst, Ui ui, Storage storage) throws DuckieException {"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"        cmd \u003d cmd.trim();"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"        if (cmd.equals(\"find\")) {"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"            throw new DuckieException(\"oops! find cannot be empty!\");"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"        String[] cmdArr \u003d cmd.split(\" \");"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"        String output \u003d \"\";"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"        int taskSize \u003d lst.getListSize();"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"        for (int i \u003d 1; i \u003c taskSize + 1; i++) {"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"            if (lst.getTask(i - 1).getDescription().contains(cmdArr[1])) {"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"                output \u003d output + \"\\n\" + String.format(\"%s. %s\", i, lst.getTask(i - 1).toString());"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"            }"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"            storage.saveTasks(lst.getTaskList());"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"        } catch (IOException e) {"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"            e.printStackTrace();"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"        return ui.findMessage() + output + \"\\n\" + ui.customLine();"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"    public boolean isEnd() {"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"        return false;"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":43}},{"path":"src/main/java/command/ListCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import classes.DuckieException;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import classes.Storage;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"import classes.TaskList;"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import classes.Ui;"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"public class ListCmd extends Command {"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"    private String cmd;"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"     * @param cmd User input command."},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"    public ListCmd (String cmd) {"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"        this.cmd \u003d cmd;"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"     * Execute method."},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"     * @param lst a TaskList object containing Task Objects."},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"     * @param ui a Ui object."},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"     * @param storage a storage object."},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"     * @throws DuckieException if user enters commands besides accepted ones."},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"     * @return"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"    public String execute(TaskList lst, Ui ui, Storage storage) throws DuckieException {"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"        cmd \u003d cmd.trim();"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"        if (!cmd.equals(\"list\")) {"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"            throw new DuckieException(\"please enter \u0027list\u0027 only!\");"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"        String output \u003d \"\";"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"        for (int i \u003d 0; i \u003c lst.getListSize(); i++) {"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"            int count \u003d i + 1;"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"            String cur \u003d count + \".\" + lst.getTask(i).toString();"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"            output \u003d output + \"\\n\" + cur;"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"            storage.saveTasks(lst.getTaskList());"},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"        } catch (IOException e) {"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"            e.printStackTrace();"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"        if (lst.getListSize() \u003d\u003d 0) {"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"            return \"there are no tasks in your list!\""},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"                    + \"\\n\" + ui.customLine();"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"        } else if (lst.getListSize() \u003d\u003d 1) {"},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"            return \"get to work! this is the task in your list: \" + output"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"                    + \"\\n\" + ui.customLine();"},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"        } else {"},{"lineNumber":56,"author":{"gitId":"wei-yutong"},"content":"            return \"get to work! these are the tasks in your list: \" + output"},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":"                    + \"\\n\" + ui.customLine();"},{"lineNumber":58,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":61,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"wei-yutong"},"content":"     * Method to determine whether to exit program."},{"lineNumber":63,"author":{"gitId":"wei-yutong"},"content":"     * @return Returns false, program continues."},{"lineNumber":64,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":65,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":66,"author":{"gitId":"wei-yutong"},"content":"    public boolean isEnd() {"},{"lineNumber":67,"author":{"gitId":"wei-yutong"},"content":"        return false;"},{"lineNumber":68,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":69}},{"path":"src/main/java/command/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import classes.Task;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":" * ToDo inherits from Task."},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":" * ToDo is specified by [T]."},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"public class ToDo extends Task {"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"     * @param description User input description of task."},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"    public ToDo(String description) {"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"        super(description);"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"     * Method to return a formatted version of user\u0027s input."},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"     * @return Formatted String of user\u0027s input."},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"    public String toString() {"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":27}},{"path":"src/main/java/command/ToDoCmd.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package command;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import classes.DuckieException;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import classes.Storage;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"import classes.TaskList;"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import classes.Ui;"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"public class ToDoCmd extends Command {"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"    private String cmd;"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"     * @param cmd User input command."},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"    public ToDoCmd (String cmd) {"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"        this.cmd \u003d cmd;"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"     * Execute method."},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"     * @param lst a TaskList object containing Task Objects."},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"     * @param ui a Ui object."},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"     * @param storage a storage object."},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"     * @return System response to user input."},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"     * @throws DuckieException if user enters commands besides accepted ones."},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"    public String execute(TaskList lst, Ui ui, Storage storage) throws DuckieException {"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"        cmd \u003d cmd.trim();"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"        if (cmd.equals(\"todo\")) {"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"            throw new DuckieException(\"oops! todo cannot be empty!\");"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"        String[] cmdArr \u003d cmd.split(\" \", 2);"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"        ToDo tempT \u003d new ToDo(cmdArr[1]);"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"        lst.addTask(tempT);"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"        try {"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"            storage.saveTasks(lst.getTaskList());"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"        } catch (IOException e) {"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"            e.printStackTrace();"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"        if (lst.getListSize() \u003d\u003d 0) {"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"            return \"there are no tasks in your list!\" + \"\\n\" + ui.customLine();"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"        } else if (lst.getListSize() \u003d\u003d 1) {"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"            return \"ok! i\u0027ve added this task: \" + tempT.toString() + \"\\n\" + \"you have \" + lst.getListSize()"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"                    + \" task in your list! keep working!\" + \"\\n\" + ui.customLine();"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"        } else {"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"            return \"ok! i\u0027ve added this task: \" + tempT.toString() + \"\\n\" + \"you have \" + lst.getListSize()"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"                    + \" tasks in your list! keep working!\" + \"\\n\" + ui.customLine();"},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":56,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":"     * Method to determine whether to exit program."},{"lineNumber":58,"author":{"gitId":"wei-yutong"},"content":"     * @return Returns false, program continues."},{"lineNumber":59,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":61,"author":{"gitId":"wei-yutong"},"content":"    public boolean isEnd() {"},{"lineNumber":62,"author":{"gitId":"wei-yutong"},"content":"        return false;"},{"lineNumber":63,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":64}},{"path":"src/main/java/duckie/Duckie.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package duckie;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import classes.DuckieException;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import classes.Parser;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"import classes.Storage;"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import classes.TaskList;"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"import classes.Ui;"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"import command.Command;"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":" * Main class."},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"public class Duckie {"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"    private Storage storage;"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"    private TaskList lst;"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"    private Ui ui;"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"     * Constructor method."},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"     * @throws IOException if user IO is incorrect"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"    public Duckie() throws IOException {"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"        ui \u003d new Ui();"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"        storage \u003d new Storage(\"duckie.txt\");"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"            lst \u003d new TaskList(storage.loadTasks());"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"        } catch (IOException e) {"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"            lst \u003d new TaskList();"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"     * Method for systemt to respond to user input for GUI."},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"     * @param input user input as a String"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"     * @return either command executed or error message"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"    public String getResponse(String input) {"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"        try {"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"            Command cmd \u003d Parser.parse(input);"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"            return cmd.execute(lst, ui, storage);"},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"        } catch (DuckieException e) {"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"            return ui.showErrorMessage(e);"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":49}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package gui;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":56,"author":{"gitId":"wei-yutong"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"wei-yutong"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"wei-yutong"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":61}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package gui;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":12}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package gui;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import duckie.Duckie;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":" * A GUI for Duke using FXML."},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"    private Duckie duck;"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"    {"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"        try {"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"            duck \u003d new Duckie();"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"        } catch (IOException e) {"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"            e.printStackTrace();"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"    //private Duckie duck \u003d new Duckie();"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"    public void start(Stage stage) {"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"        try {"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"            stage.setScene(scene);"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duck);"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"            stage.show();"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"        } catch (IOException e) {"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":"            e.printStackTrace();"},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":43}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"package gui;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import classes.Ui;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import duckie.Duckie;"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":" */"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"    private VBox dialogContainer;"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"    private TextField userInput;"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"    private Button sendButton;"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":"    private Duckie duck;"},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/daUser.png\"));"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/daDuke.png\"));"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"     * Method to initialize MainWindow."},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"    @FXML"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"    public void initialize() {"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"        String startMessage \u003d ui.startMessage();"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(startMessage, dukeImage));"},{"lineNumber":39,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":41,"author":{"gitId":"wei-yutong"},"content":"    public void setDuke(Duckie d) {"},{"lineNumber":42,"author":{"gitId":"wei-yutong"},"content":"        duck \u003d d;"},{"lineNumber":43,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":45,"author":{"gitId":"wei-yutong"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"wei-yutong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":47,"author":{"gitId":"wei-yutong"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":48,"author":{"gitId":"wei-yutong"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"wei-yutong"},"content":"    @FXML"},{"lineNumber":50,"author":{"gitId":"wei-yutong"},"content":"    private void handleUserInput() {"},{"lineNumber":51,"author":{"gitId":"wei-yutong"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":52,"author":{"gitId":"wei-yutong"},"content":"        String response \u003d duck.getResponse(input);"},{"lineNumber":53,"author":{"gitId":"wei-yutong"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":54,"author":{"gitId":"wei-yutong"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":55,"author":{"gitId":"wei-yutong"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":56,"author":{"gitId":"wei-yutong"},"content":"        );"},{"lineNumber":57,"author":{"gitId":"wei-yutong"},"content":"        userInput.clear();"},{"lineNumber":58,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":59}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" /\u003e"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"wei-yutong":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"\u003c/AnchorPane\u003e"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":""}],"authorContributionMap":{"wei-yutong":20}},{"path":"src/test/java/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import java.text.ParseException;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import java.util.Date;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import java.util.Locale;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"import command.Deadline;"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"public class DeadlineTest {"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"    public void testGetBy() {"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd-MM-yyyy HHmm\", Locale.ENGLISH);"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"        Date date \u003d null;"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"            date \u003d format.parse(\"12-12-2020 1330\");"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"        } catch (ParseException e) {"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"            e.printStackTrace();"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"        Deadline test \u003d new Deadline(\"lunch\", date);"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"        assertEquals(date, test.getBy());"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"    public void testToString() {"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd-MM-yyyy HHmm\", Locale.ENGLISH);"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"        Date date \u003d null;"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"            date \u003d format.parse(\"12-12-2020 1330\");"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"        } catch (ParseException e) {"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"        Deadline test \u003d new Deadline(\"lunch\", date);"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"        assertEquals(\"[D][ ] lunch (by: Sat Dec 12 13:30:00 SGT 2020)\", test.toString());"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":38}},{"path":"src/test/java/DuckieTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"public class DuckieTest {"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"    @Test"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"    public void dummyTest() {"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"        assertEquals(2, 2);"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":10}},{"path":"src/test/java/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"import java.text.ParseException;"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"import java.text.SimpleDateFormat;"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"import java.util.Date;"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"import java.util.Locale;"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":9,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":10,"author":{"gitId":"wei-yutong"},"content":"import command.Event;"},{"lineNumber":11,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":12,"author":{"gitId":"wei-yutong"},"content":"public class EventTest {"},{"lineNumber":13,"author":{"gitId":"wei-yutong"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"wei-yutong"},"content":"    public void testGetAt() {"},{"lineNumber":15,"author":{"gitId":"wei-yutong"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd-MM-yyyy HHmm\", Locale.ENGLISH);"},{"lineNumber":16,"author":{"gitId":"wei-yutong"},"content":"        Date date \u003d null;"},{"lineNumber":17,"author":{"gitId":"wei-yutong"},"content":"        try {"},{"lineNumber":18,"author":{"gitId":"wei-yutong"},"content":"            date \u003d format.parse(\"12-12-2020 1330\");"},{"lineNumber":19,"author":{"gitId":"wei-yutong"},"content":"        } catch (ParseException e) {"},{"lineNumber":20,"author":{"gitId":"wei-yutong"},"content":"            e.printStackTrace();"},{"lineNumber":21,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"wei-yutong"},"content":"        Event test \u003d new Event(\"lunch\", date);"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"        assertEquals(date, test.getAt());"},{"lineNumber":24,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"wei-yutong"},"content":""},{"lineNumber":26,"author":{"gitId":"wei-yutong"},"content":"    @Test"},{"lineNumber":27,"author":{"gitId":"wei-yutong"},"content":"    public void testToString() {"},{"lineNumber":28,"author":{"gitId":"wei-yutong"},"content":"        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd-MM-yyyy HHmm\", Locale.ENGLISH);"},{"lineNumber":29,"author":{"gitId":"wei-yutong"},"content":"        Date date \u003d null;"},{"lineNumber":30,"author":{"gitId":"wei-yutong"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"wei-yutong"},"content":"            date \u003d format.parse(\"12-12-2020 1330\");"},{"lineNumber":32,"author":{"gitId":"wei-yutong"},"content":"        } catch (ParseException e) {"},{"lineNumber":33,"author":{"gitId":"wei-yutong"},"content":"            e.printStackTrace();"},{"lineNumber":34,"author":{"gitId":"wei-yutong"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"wei-yutong"},"content":"        Event test \u003d new Event(\"lunch\", date);"},{"lineNumber":36,"author":{"gitId":"wei-yutong"},"content":"        assertEquals(\"[E][ ] lunch (at: Sat Dec 12 13:30:00 SGT 2020)\", test.toString());"},{"lineNumber":37,"author":{"gitId":"wei-yutong"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"wei-yutong"},"content":"}"}],"authorContributionMap":{"wei-yutong":38}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"wei-yutong"},"content":"todo eat lunch"},{"lineNumber":2,"author":{"gitId":"wei-yutong"},"content":"deadline project /by 12-12-2020 2356"},{"lineNumber":3,"author":{"gitId":"wei-yutong"},"content":"event conference /at 12-03-2021 1200"},{"lineNumber":4,"author":{"gitId":"wei-yutong"},"content":"list"},{"lineNumber":5,"author":{"gitId":"wei-yutong"},"content":"done 1"},{"lineNumber":6,"author":{"gitId":"wei-yutong"},"content":"delete 2"},{"lineNumber":7,"author":{"gitId":"wei-yutong"},"content":"list"},{"lineNumber":8,"author":{"gitId":"wei-yutong"},"content":"bye"}],"authorContributionMap":{"wei-yutong":8}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"wei-yutong"},"content":"java -classpath ../bin Duckie.main.java \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"wei-yutong":1,"-":37}}]
