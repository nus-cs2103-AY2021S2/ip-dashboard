[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"# Popo"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"## Personal Task Manager"},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"A personal task list manager that keeps track of multiple types of task."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"### Types of Tasks"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"1. Todo (only description)"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"2. Deadline (with additional deadline date and time)"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"3. Event (with additional string describing the location)"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"4. Duration (with additional duration of task)"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"5. Period (with additional starting and ending date)"},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"## Example"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"![ui.png](docs/Ui.png)"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"## User Guide"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"Read the user guide [here](https://w2vgd.github.io/ip/)."},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"## Remarks"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"A Java greenfield project for NUS software engineering students."},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"## Credits"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"Images by [omatian](https://omatian.sg/)."}],"authorContributionMap":{"w2vgd":19,"-":4}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"    mainClassName \u003d \"popo.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"    archiveBaseName \u003d \"popo\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"    enableAssertions \u003d true"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":44,"w2vgd":18}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"Popo is a desktop application for managing multiple types of task, and optimized for"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"use via a Command Line Interface (CLI) while still having the benefits of a"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"Graphical User Interface (GUI)."},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"If you can type fast and need a personal assistant to keep track of lots of tasks,"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"Popo task manager is here to help you!"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"- [Quick Start](#quick-start)"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"- [Types of Tasks](#types-of-tasks)"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"- [Features](#features)"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"- [FAQ](#faq)"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"- [Command Summary](#command-summary)"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"## Quick Start"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"1. Ensure you have Java 11 or above installed."},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"2. Download the latest `popo.jar` [here](https://github.com/w2vgd/ip/releases)."},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"3. Copy the file to the folder you want to use as the home folder for Popo Task Manager."},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"4. Double-click the jar file to start the app. The GUI similar to the below should appear in a few seconds. \\"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"   (You may also specify your own data source file. Learn how to do so [here](#faq).)"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"   "},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"![ui.png](Ui.png)"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"## Types of Tasks"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"### Todo "},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"A normal task with only a name"},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"![todo.png](images/todo.png)"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"### Deadline"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"A task with a name and a deadline date component \\"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"(and an optional deadline time component)"},{"lineNumber":35,"author":{"gitId":"-"},"content":""},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"![deadline.png](images/deadline.png)"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"### Event"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"A task with a name and a location description"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"![event.png](images/event.png)"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"### Duration"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"A task with a name and a time period"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"![duration.png](images/duration.png)"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"### Period"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"A task with a name and a starting and ending date"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"![period.png](images/period.png)"},{"lineNumber":52,"author":{"gitId":"-"},"content":""},{"lineNumber":53,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"**Notes about the command format:**"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"- Words in between `\u003c\u003e` are the parameters to be supplied by the user. \\"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"  E.g. In `todo \u003ctask_description`, `\u003ctask_description\u003e` is a parameter which can"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"  be used as \\"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"  `todo read book`."},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"- Items in square brackets are optional. \\"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"  E.g. `deadline \u003ctask_description\u003e /by dd/mm/yyyy [HHMM]` can be"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"  used as \\"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"  `deadline assignment /by 1/3/2021 2359` or simply as "},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"  `deadline assignment /by 1/3/2021`."},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"- Extraneous parameters for commands will be ignored. \\"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"  E.g. `list 123` will be interpreted as `list`."},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"### Adding a ToDo task: `todo`"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"Adds a ToDo task to the task list."},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"**Format:** `todo \u003ctask_description\u003e` \\"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"**Examples**:"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"- `todo Go CNY shopping`"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"### Adding a Deadline task: `deadline`"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"Adds a Deadline task to the task list."},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"**Format:** `deadline \u003ctask_description\u003e /by dd/mm/yyyy [HHMM]` \\"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"**Examples**:"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"- `deadline Assignment 1 /by 31/1/2021`"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"- `deadline Assignment 1 /by 31/1/2021 1800`"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"- `deadline Assignment 2 /by 28/10/2021, 2359`"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"### Adding a Event task: `event`"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":"Adds an Event task to the task list."},{"lineNumber":85,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":86,"author":{"gitId":"w2vgd"},"content":"**Format:** `event \u003ctask_description\u003e /at \u003cevent_time\u003e` \\"},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":"**Examples**:"},{"lineNumber":88,"author":{"gitId":"w2vgd"},"content":"- `event Project Meeting /at NUS SoC COM1-0210`"},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":"### Adding a Duration task: `duration`"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"Adds a Duration task to the task list."},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":93,"author":{"gitId":"w2vgd"},"content":"**Format 1:** `duration \u003ctask_description\u003e /days \u003cnumber\u003e`    \\"},{"lineNumber":94,"author":{"gitId":"w2vgd"},"content":"**Format 2:** `duration \u003ctask_description\u003e /hours \u003cnumber\u003e`   \\"},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":"**Format 3:** `duration \u003ctask_description\u003e /minutes \u003cnumber\u003e` \\"},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"**Examples:**"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"- `duration Read report /days 3`"},{"lineNumber":98,"author":{"gitId":"w2vgd"},"content":"- `duration Practice exam /hours 2`"},{"lineNumber":99,"author":{"gitId":"w2vgd"},"content":"- `duration Eat lunch /minutes 30`"},{"lineNumber":100,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":101,"author":{"gitId":"w2vgd"},"content":"### Adding a Period task: `period`"},{"lineNumber":102,"author":{"gitId":"w2vgd"},"content":"Adds a Period task to the task list."},{"lineNumber":103,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":104,"author":{"gitId":"w2vgd"},"content":"**Format:** `period \u003ctask_description\u003e /start dd/mm/yyyy /end dd/mm/yyyy` \\"},{"lineNumber":105,"author":{"gitId":"w2vgd"},"content":"**Examples:**"},{"lineNumber":106,"author":{"gitId":"w2vgd"},"content":"- `period Collect certificate at NUS /start 1/3/2021 /end 31/3/2021`"},{"lineNumber":107,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":108,"author":{"gitId":"w2vgd"},"content":"### Listing all tasks: `list`"},{"lineNumber":109,"author":{"gitId":"w2vgd"},"content":"Shows the full list of tasks."},{"lineNumber":110,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":111,"author":{"gitId":"w2vgd"},"content":"**Format:** `list`"},{"lineNumber":112,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":113,"author":{"gitId":"w2vgd"},"content":"### Marking a task as completed: `done`"},{"lineNumber":114,"author":{"gitId":"w2vgd"},"content":"Marks the specified task in the task list as completed."},{"lineNumber":115,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":116,"author":{"gitId":"w2vgd"},"content":"**Format:** `done \u003ctask_number\u003e`"},{"lineNumber":117,"author":{"gitId":"w2vgd"},"content":"- Marks the task at the specified index as completed."},{"lineNumber":118,"author":{"gitId":"w2vgd"},"content":"- The index refers to the index number of the task shown by the `list` command."},{"lineNumber":119,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":120,"author":{"gitId":"w2vgd"},"content":"**Examples:**"},{"lineNumber":121,"author":{"gitId":"w2vgd"},"content":"- `done 2`"},{"lineNumber":122,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":123,"author":{"gitId":"w2vgd"},"content":"### Deleting a task: `delete`"},{"lineNumber":124,"author":{"gitId":"w2vgd"},"content":"Deletes the specified task from the task list."},{"lineNumber":125,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":126,"author":{"gitId":"w2vgd"},"content":"**Format:** `delete \u003ctask_number\u003e`"},{"lineNumber":127,"author":{"gitId":"w2vgd"},"content":"- Deletes the task at the specified index."},{"lineNumber":128,"author":{"gitId":"w2vgd"},"content":"- The index refers to the index number of the task shown by the `list` command."},{"lineNumber":129,"author":{"gitId":"-"},"content":""},{"lineNumber":130,"author":{"gitId":"w2vgd"},"content":"**Examples:**"},{"lineNumber":131,"author":{"gitId":"w2vgd"},"content":"- `delete 2`"},{"lineNumber":132,"author":{"gitId":"-"},"content":""},{"lineNumber":133,"author":{"gitId":"w2vgd"},"content":"### Finding a task by keyword: `find`"},{"lineNumber":134,"author":{"gitId":"w2vgd"},"content":"Finds all tasks whose names contain the given keyword(s)."},{"lineNumber":135,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":136,"author":{"gitId":"w2vgd"},"content":"**Format:** `find \u003ckeyword\u003e`"},{"lineNumber":137,"author":{"gitId":"w2vgd"},"content":"- Only tasks with names containing the exact keyword(s) are returned."},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"w2vgd"},"content":"**Examples:**"},{"lineNumber":140,"author":{"gitId":"w2vgd"},"content":"- `find book`"},{"lineNumber":141,"author":{"gitId":"w2vgd"},"content":"- `find read book`"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"w2vgd"},"content":"### Viewing help: `help`"},{"lineNumber":144,"author":{"gitId":"w2vgd"},"content":"Displays all available commands and their usages."},{"lineNumber":145,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":146,"author":{"gitId":"w2vgd"},"content":"**Format:** `help`"},{"lineNumber":147,"author":{"gitId":"-"},"content":""},{"lineNumber":148,"author":{"gitId":"w2vgd"},"content":"### Exiting the program: `bye`"},{"lineNumber":149,"author":{"gitId":"w2vgd"},"content":"Exits the program."},{"lineNumber":150,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":151,"author":{"gitId":"w2vgd"},"content":"**Format:** `bye`"},{"lineNumber":152,"author":{"gitId":"-"},"content":""},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"w2vgd"},"content":"## FAQ"},{"lineNumber":155,"author":{"gitId":"w2vgd"},"content":"**Q**: What is the default data source file? \\"},{"lineNumber":156,"author":{"gitId":"w2vgd"},"content":"**A**: From the base folder where you store the `popo.jar` file, the"},{"lineNumber":157,"author":{"gitId":"w2vgd"},"content":"default data source file can be found at `./data/popo.txt`."},{"lineNumber":158,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":159,"author":{"gitId":"w2vgd"},"content":"**Q**: Is it possible to specify my own data source file? How do I specify my own data source file? \\"},{"lineNumber":160,"author":{"gitId":"w2vgd"},"content":"**A**: Yes. To specify your own data source file, you have to run the jar file in your terminal or"},{"lineNumber":161,"author":{"gitId":"w2vgd"},"content":"command prompt with an additional argument indicating the file path of your own data"},{"lineNumber":162,"author":{"gitId":"w2vgd"},"content":"source file. The easiest way is to `cd` into the base directory containing the `popo.jar` file, and"},{"lineNumber":163,"author":{"gitId":"w2vgd"},"content":"run \\"},{"lineNumber":164,"author":{"gitId":"w2vgd"},"content":"`java -jar popo.jar ./path/to/data/file/datasource.txt`. \\"},{"lineNumber":165,"author":{"gitId":"w2vgd"},"content":"E.g. `java -jar popo.jar ./mydata/mytasks.txt`"},{"lineNumber":166,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":167,"author":{"gitId":"w2vgd"},"content":"**Q**: Do I have to pass in a specific date format? Which date formats are acceptable? \\"},{"lineNumber":168,"author":{"gitId":"w2vgd"},"content":"**A**: Yes. We only accept the date format `dd/mm/yyyy` currently."},{"lineNumber":169,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":170,"author":{"gitId":"w2vgd"},"content":"**Q**: Why is an error showing when I try to open the program? \\"},{"lineNumber":171,"author":{"gitId":"w2vgd"},"content":"**A**: If an error message box similar to the below is showing when you try to boot up"},{"lineNumber":172,"author":{"gitId":"w2vgd"},"content":"the program, the data source file may have been corrupted and the data cannot be parsed "},{"lineNumber":173,"author":{"gitId":"w2vgd"},"content":"into the required format for the tasks. "},{"lineNumber":174,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":175,"author":{"gitId":"w2vgd"},"content":"![error.png](images/error.png)"},{"lineNumber":176,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":177,"author":{"gitId":"w2vgd"},"content":"## Command Summary"},{"lineNumber":178,"author":{"gitId":"-"},"content":""},{"lineNumber":179,"author":{"gitId":"w2vgd"},"content":"Action | Format \u0026 Examples"},{"lineNumber":180,"author":{"gitId":"w2vgd"},"content":"--------|------------------"},{"lineNumber":181,"author":{"gitId":"w2vgd"},"content":"**Todo** | `todo \u003ctask_description\u003e` \u003cbr\u003e E.g. `todo Go CNY shopping`"},{"lineNumber":182,"author":{"gitId":"w2vgd"},"content":"**Deadline** | `deadline \u003ctask_description\u003e /by dd/mm/yyyy [HHMM]` \u003cbr\u003e E.g. `deadline Assignment 1 /by 31/1/2021 1800`"},{"lineNumber":183,"author":{"gitId":"w2vgd"},"content":"**Event** | `event \u003ctask_description\u003e /at \u003cevent_time\u003e` \u003cbr\u003e E.g. `event Project Meeting /at NUS SoC COM1-0210`"},{"lineNumber":184,"author":{"gitId":"w2vgd"},"content":"**Duration** | `duration \u003ctask_description\u003e /days \u003cnumber\u003e` \u003cbr\u003e `duration \u003ctask_description\u003e /hours \u003cnumber\u003e` \u003cbr\u003e `duration \u003ctask_description\u003e /minutes \u003cnumber\u003e` \u003cbr\u003e E.g.`duration Practice exam /hours 2`"},{"lineNumber":185,"author":{"gitId":"w2vgd"},"content":"**Period** | `period \u003ctask_description\u003e /start dd/mm/yyyy /end dd/mm/yyyy`\u003cbr\u003e E.g. `period Collect certificate at NUS /start 1/3/2021 /end 31/3/2021`"},{"lineNumber":186,"author":{"gitId":"w2vgd"},"content":"**List** | `list`"},{"lineNumber":187,"author":{"gitId":"w2vgd"},"content":"**Done** | `done \u003ctask_number\u003e`\u003cbr\u003e E.g. `done 2`"},{"lineNumber":188,"author":{"gitId":"w2vgd"},"content":"**Delete** | `delete \u003ctask_number\u003e`\u003cbr\u003e E.g. `delete 2`"},{"lineNumber":189,"author":{"gitId":"w2vgd"},"content":"**Find** | `find \u003ckeyword\u003e`\u003cbr\u003e E.g. `find book`"},{"lineNumber":190,"author":{"gitId":"w2vgd"},"content":"**Help** | `help`"},{"lineNumber":191,"author":{"gitId":"w2vgd"},"content":"**Exit** | `bye`"}],"authorContributionMap":{"-":20,"w2vgd":171}},{"path":"src/main/java/popo/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":" * The main entry point to the application."},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"     * Entry point of the application."},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"     * @param args An optional user-specified filepath used to initialize the storage."},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    public static void main(String[] args) {"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":17}},{"path":"src/main/java/popo/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import javax.swing.JOptionPane;"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import javafx.application.Application;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import popo.storage.Storage;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import popo.storage.exceptions.InvalidStorageFilePathException;"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import popo.storage.exceptions.StorageException;"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.TaskList;"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"import popo.ui.Ui;"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":" * The main entry point to the chatbot application."},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":" * Initializes the application and starts user interaction."},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"public class Main extends Application {"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    private static final String MESSAGE_TERMINATE \u003d \"Press OK to terminate the programme.\";"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"    private static final String ERROR_BOX_TITLE \u003d \"Error\";"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    private Storage storage;"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    private Ui ui;"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    private TaskList taskList;"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    public void init() throws Exception {"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"        super.init();"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"        Application.Parameters applicationParameters \u003d getParameters();"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"        List\u003cString\u003e parameters \u003d applicationParameters.getUnnamed();"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"        String[] args \u003d parameters.toArray(new String[0]);"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"        initialize(args);"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    public void start(Stage primaryStage) {"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"        ui.start(primaryStage);"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"     * Initializes the required components and prints the welcome greeting."},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"     * @param args An optional user-specified filepath used to initialize the storage."},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"    private void initialize(String[] args) {"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"            storage \u003d initializeStorage(args);"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"            taskList \u003d storage.loadTasks();"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"            ui \u003d new Ui(storage, taskList);"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"        } catch (InvalidStorageFilePathException | IOException | StorageException ex) {"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"            JOptionPane.showMessageDialog(null,"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"                    ex.getMessage() + \"\\n\" + MESSAGE_TERMINATE,"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"                    ERROR_BOX_TITLE,"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"                    JOptionPane.ERROR_MESSAGE);"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"            System.exit(0);"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"     * Initializes the storage using the specified filepath. If user did not specify a filepath,"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"     * then the default filepath will be used."},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"     * @param args An optional user-specified filepath used to initialize the storage."},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"     * @return A {@code Storage} object that is used to read and write to a file."},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"     * @throws InvalidStorageFilePathException If the specified filepath is invalid."},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"    private Storage initializeStorage(String[] args) throws InvalidStorageFilePathException {"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"        if (args.length \u003e 0) {"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"            // User has specified a file path for the storage"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"            return new Storage(args[0]);"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"        } else {"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"            // Using the default file path as user did not specify a file path"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"            return new Storage();"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":78}},{"path":"src/main/java/popo/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":" * Exits the application."},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"public class ByeCommand extends Command {"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command Word: \" + COMMAND_WORD + \"\\n\""},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"            + \"Description: Exit the program\\n\""},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"            + \"Usage: bye\";"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    public CommandResult execute() {"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"        return new CommandResult(true);"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":16}},{"path":"src/main/java/popo/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.TaskList;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":" * Represents a user command."},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"public abstract class Command {"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    protected TaskList taskList;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"     * Sets the current instance of task list that the command will operate on."},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"     * @param taskList The current instance of task list."},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    public void setTaskList(TaskList taskList) {"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"     * Executes the command."},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"     * @return Result command."},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    public abstract CommandResult execute();"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":26}},{"path":"src/main/java/popo/commands/CommandResult.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.TaskList;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":" * Represents the result of a command after execution."},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"public class CommandResult {"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    private final TaskList updatedTaskList;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    private final boolean isExiting;"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    private final String messageForUser;"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code CommandResult} object with a message for the user, without an updated task list,"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"     * and sets whether the application will be exiting after the command."},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"     * @param isExiting Boolean that sets whether the application is exiting."},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"     * @param messages  Arguments that represent the messages to show to user."},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    public CommandResult(boolean isExiting, String... messages) {"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"        updatedTaskList \u003d null;"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"        this.isExiting \u003d isExiting;"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"        StringBuilder fullMessage \u003d new StringBuilder();"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"        for (String msg : messages) {"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"            fullMessage.append(msg);"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"        messageForUser \u003d fullMessage.toString();"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code CommandResult} object with a message for the user and an updated task list,"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"     * and sets whether the application will be exiting after the command."},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"     * @param updatedTaskList Updated task list after execution of a command."},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"     * @param isExiting       Boolean that sets whether the application is exiting."},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"     * @param messages        Arguments that represent the messages to show to user."},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    public CommandResult(TaskList updatedTaskList, boolean isExiting, String... messages) {"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"        this.updatedTaskList \u003d updatedTaskList;"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"        this.isExiting \u003d isExiting;"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        StringBuilder fullMessage \u003d new StringBuilder();"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"        for (String msg : messages) {"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"            fullMessage.append(msg);"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"        messageForUser \u003d fullMessage.toString();"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"     * Returns the message to be printed to the user."},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"     * @return Message for the user."},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"    public String getMessageForUser() {"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"        return messageForUser;"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"     * Returns the updated task list after the execution of a command."},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"     * @return The updated task list."},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"    public TaskList getUpdatedTaskList() {"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"        return updatedTaskList;"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"     * Returns whether the application is exiting after the command."},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"     * @return True if application is exiting after command, otherwise false."},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"    public boolean isExitingProgram() {"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"        return isExiting;"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":74}},{"path":"src/main/java/popo/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_ADDED_TASK;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_TASKLIST_SIZE_FORMAT;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalTime;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.DeadlineTask;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":" * Creates a Deadline task."},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"public class DeadlineCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command Word: \" + COMMAND_WORD + \"\\n\""},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"            + \"Description: Add a deadline task with a date component and an optional time component\\n\""},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"            + \"Usage 1: deadline \u003ctask_description\u003e /by dd/mm/yyyy\\n\""},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"            + \"Example: deadline Assignment 1 /by 31/1/2021\\n\""},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"            + \"Usage 2: deadline \u003ctask_description\u003e /by dd/mm/yyyy HHMM\\n\""},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"            + \"Example: deadline Assignment 1 /by 31/1/2021 1800\\n\""},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"            + \"Example: deadline Assignment 2 /by 28/10/2021, 2359\";"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    private final String taskName;"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    private final LocalDate deadlineDate;"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    private final LocalTime deadlineTime;"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code DeadlineCommand} object with a deadline date component only."},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"     * @param taskName     Name of the task."},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"     * @param deadlineDate Date component of deadline."},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"    public DeadlineCommand(String taskName, LocalDate deadlineDate) {"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"        deadlineTime \u003d null;"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code DeadlineCommand} object with the given task name, deadline date and time components."},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"     * @param taskName     Name of the task."},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"     * @param deadlineDate Date component of deadline."},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"     * @param deadlineTime Time component of deadline."},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"    public DeadlineCommand(String taskName, LocalDate deadlineDate, LocalTime deadlineTime) {"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"        this.deadlineTime \u003d deadlineTime;"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"    public CommandResult execute() {"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"        assert taskList !\u003d null;"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"        DeadlineTask task \u003d new DeadlineTask(taskName, deadlineDate, deadlineTime);"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"        taskList.addTask(task);"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"        return new CommandResult(taskList, false,"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"                MESSAGE_ADDED_TASK + \"\\n\","},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"                task.toString() + \"\\n\","},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"                String.format(MESSAGE_TASKLIST_SIZE_FORMAT, taskList.size()));"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":63}},{"path":"src/main/java/popo/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_DELETED_TASK;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_TASKLIST_SIZE_FORMAT;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.Task;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":" * Deletes a task."},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command Word: \" + COMMAND_WORD + \"\\n\""},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"            + \"Description: Delete a task\\n\""},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"            + \"Usage: delete \u003ctask_number\u003e\\n\""},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"            + \"Example: delete 2\";"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    private final int index;"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code DeleteCommand} object with the index of the task in the task list to be deleted."},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"     * @param index Index of the task to be deleted."},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    public DeleteCommand(int index) {"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"        this.index \u003d index;"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    public CommandResult execute() {"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"        assert taskList !\u003d null;"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"        Task task \u003d taskList.getTask(index);"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"        taskList.deleteTask(index);"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"        return new CommandResult(taskList, false,"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"                MESSAGE_DELETED_TASK + \"\\n\","},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"                task.toString() + \"\\n\","},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"                String.format(MESSAGE_TASKLIST_SIZE_FORMAT, taskList.size()));"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":39}},{"path":"src/main/java/popo/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_DONE_TASK;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_TASK_ALREADY_COMPLETED;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":" * Completes a task."},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"public class DoneCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    public static final String COMMAND_WORD \u003d \"done\";"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command Word: \" + COMMAND_WORD + \"\\n\""},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"            + \"Description: Mark a task as completed\\n\""},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"            + \"Usage: done \u003ctask_number\u003e\""},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"            + \"Example: done 2\";"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    private final int index;"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code DoneCommand} object with the index of the task in the task list to be marked as done."},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"     * @param index Index of the task to be marked as done."},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    public DoneCommand(int index) {"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"        this.index \u003d index;"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    public CommandResult execute() {"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"        assert taskList !\u003d null;"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"        if (taskList.isTaskDone(index)) {"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"            return new CommandResult(false, MESSAGE_TASK_ALREADY_COMPLETED);"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"        taskList.completeTask(index);"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"        return new CommandResult(taskList, false,"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"                MESSAGE_DONE_TASK + \"\\n\","},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"                taskList.getTask(index).toString());"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":38}},{"path":"src/main/java/popo/commands/DurationCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_ADDED_TASK;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_TASKLIST_SIZE_FORMAT;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import java.time.Duration;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.DurationTask;"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":" * Creates a Duration task."},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"public class DurationCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    public static final String COMMAND_WORD \u003d \"duration\";"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command Word: \" + COMMAND_WORD + \"\\n\""},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"            + \"Description: Add a task with a specified duration\\n\""},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"            + \"Usage 1: duration \u003ctask_description\u003e /days \u003cnumber\u003e\\n\""},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"            + \"Example: duration Read report /days 3\\n\""},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"            + \"Usage 2: duration \u003ctask_description\u003e /hours \u003cnumber\u003e\\n\""},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"            + \"Example: duration Practice exam /hours 2\\n\""},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"            + \"Usage 3: duration \u003ctask_description\u003e /minutes \u003cnumber\u003e\\n\""},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"            + \"Example: duration Eat lunch /minutes 30\";"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    private final String taskName;"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    private final Duration duration;"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code DurationCommand} object with the given task name and duration."},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"     * @param taskName Name of the task."},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"     * @param duration Duration of the task."},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"    public DurationCommand(String taskName, Duration duration) {"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"        this.duration \u003d duration;"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    public CommandResult execute() {"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"        assert taskList !\u003d null;"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        DurationTask task \u003d new DurationTask(taskName, duration);"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"        taskList.addTask(task);"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"        return new CommandResult(taskList, false,"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"                MESSAGE_ADDED_TASK + \"\\n\","},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"                task.toString() + \"\\n\","},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"                String.format(MESSAGE_TASKLIST_SIZE_FORMAT, taskList.size()));"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":48}},{"path":"src/main/java/popo/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_ADDED_TASK;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_TASKLIST_SIZE_FORMAT;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.EventTask;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":" * Creates an Event task."},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"public class EventCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    public static final String COMMAND_WORD \u003d \"event\";"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command Word: \" + COMMAND_WORD + \"\\n\""},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"            + \"Description: Add an event task\\n\""},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"            + \"Usage: event \u003ctask_description\u003e /at \u003cevent_time\u003e\\n\""},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"            + \"Example: event Project Meeting /at NUS SoC COM1-0210\";"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    private final String taskName;"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    private final String eventTime;"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     * Creates an {@code EventCommand} object with the given task name and description of the event time."},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"     * @param taskName  Name of the task."},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"     * @param eventTime Description of the event time."},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    public EventCommand(String taskName, String eventTime) {"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"    public CommandResult execute() {"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"        assert taskList !\u003d null;"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"        EventTask task \u003d new EventTask(taskName, eventTime);"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"        taskList.addTask(task);"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"        return new CommandResult(taskList, false,"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"                MESSAGE_ADDED_TASK + \"\\n\","},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"                task.toString() + \"\\n\","},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"                String.format(MESSAGE_TASKLIST_SIZE_FORMAT, taskList.size()));"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":42}},{"path":"src/main/java/popo/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_FOUND_TASKS;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_INDEX_TASK_FORMAT;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_NO_MATCHES;"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.Task;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":" * Finds tasks that contains specific keywords or phrases."},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"public class FindCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    public static final String COMMAND_WORD \u003d \"find\";"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command Word: \" + COMMAND_WORD + \"\\n\""},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"            + \"Description: Find tasks that contains specific keywords or phrases\\n\""},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"            + \"Usage: find \u003ckeyword_or_phrase\u003e\""},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"            + \"Example: find book\";"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    private final String searchWord;"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code FindCommand} object with the given search word or phrase."},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"     * @param searchWord Keyword or phrase to be used for filtering."},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    public FindCommand(String searchWord) {"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"        this.searchWord \u003d searchWord;"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"    public CommandResult execute() {"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"        String tasksWithSearchWord \u003d findTasks();"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"        String trimmedTasksString \u003d tasksWithSearchWord.trim();"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"        if (trimmedTasksString.length() \u003d\u003d 0) {"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"            return new CommandResult(false, MESSAGE_NO_MATCHES);"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"        return new CommandResult(false,"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"                MESSAGE_FOUND_TASKS + \"\\n\","},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"                trimmedTasksString);"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"    private String findTasks() {"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"        assert taskList !\u003d null;"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"        StringBuilder tasksWithSearchWord \u003d new StringBuilder();"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"            Task task \u003d taskList.getTask(i - 1);"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"            if (task.getName().contains(searchWord)) {"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"                tasksWithSearchWord.append(String.format(MESSAGE_INDEX_TASK_FORMAT, i, task.toString()));"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"                tasksWithSearchWord.append(\"\\n\");"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"            }"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"        return tasksWithSearchWord.toString();"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":55}},{"path":"src/main/java/popo/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_HELP;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":" * Show help menu to user."},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"public class HelpCommand extends Command {"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    public static final String COMMAND_WORD \u003d \"help\";"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command Word: \" + COMMAND_WORD + \"\\n\""},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"            + \"Description: Print available commands\\n\""},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"            + \"Usage: help\";"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    public CommandResult execute() {"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"        return new CommandResult(false,"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"                MESSAGE_HELP + \"\\n\","},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"                HelpCommand.MESSAGE_USAGE + \"\\n\\n\","},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"                ByeCommand.MESSAGE_USAGE + \"\\n\\n\","},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"                ListCommand.MESSAGE_USAGE + \"\\n\\n\","},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"                ToDoCommand.MESSAGE_USAGE + \"\\n\\n\","},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"                DeadlineCommand.MESSAGE_USAGE + \"\\n\\n\","},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"                EventCommand.MESSAGE_USAGE + \"\\n\\n\","},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"                DurationCommand.MESSAGE_USAGE + \"\\n\\n\","},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"                PeriodCommand.MESSAGE_USAGE + \"\\n\\n\","},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"                DoneCommand.MESSAGE_USAGE + \"\\n\\n\","},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"                DeleteCommand.MESSAGE_USAGE + \"\\n\\n\","},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"                FindCommand.MESSAGE_USAGE);"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":30}},{"path":"src/main/java/popo/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_EMPTY_TASKLIST;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_INDEX_TASK_FORMAT;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_SHOW_TASKLIST;"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":" * Lists the current tasks."},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"public class ListCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    public static final String COMMAND_WORD \u003d \"list\";"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command Word: \" + COMMAND_WORD + \"\\n\""},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"            + \"Description: Print the list of current tasks\\n\""},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"            + \"Usage: list\";"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    public CommandResult execute() {"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"        assert taskList !\u003d null;"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"        if (taskList.isEmpty()) {"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"            return new CommandResult(false, MESSAGE_EMPTY_TASKLIST);"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"        String taskListAsString \u003d getTaskListAsString();"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"        String trimmedTaskListDescription \u003d taskListAsString.trim();"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"        return new CommandResult(false,"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"                MESSAGE_SHOW_TASKLIST + \"\\n\","},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"                trimmedTaskListDescription);"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    private String getTaskListAsString() {"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"        StringBuilder taskListAsString \u003d new StringBuilder();"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"            taskListAsString.append(String.format(MESSAGE_INDEX_TASK_FORMAT, i, taskList.getTask(i - 1)));"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"            taskListAsString.append(\"\\n\");"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"        return taskListAsString.toString();"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":37}},{"path":"src/main/java/popo/commands/PeriodCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_ADDED_TASK;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_TASKLIST_SIZE_FORMAT;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalDate;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.PeriodTask;"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":" * Creates a Period task."},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"public class PeriodCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    public static final String COMMAND_WORD \u003d \"period\";"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command Word: \" + COMMAND_WORD + \"\\n\""},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"            + \"Description: Add a period task with a starting date and an ending date\\n\""},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"            + \"Usage: period \u003ctask_description\u003e /start dd/mm/yyyy /end dd/mm/yyyy\\n\""},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"            + \"Example: period Collect certificate at NUS /start 1/3/2021 /end 31/3/2021\";"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    private final String taskName;"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    private final LocalDate startDate;"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"    private final LocalDate endDate;"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code PeriodCommand} object with the given task name, starting date and ending date."},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"     * @param taskName  Name of the task."},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"     * @param startDate Starting date of the task."},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"     * @param endDate   Ending date of the task."},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"    public PeriodCommand(String taskName, LocalDate startDate, LocalDate endDate) {"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"        this.startDate \u003d startDate;"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"        this.endDate \u003d endDate;"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    public CommandResult execute() {"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"        assert taskList !\u003d null;"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"        PeriodTask task \u003d new PeriodTask(taskName, startDate, endDate);"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        taskList.addTask(task);"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"        return new CommandResult(taskList, false,"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"                MESSAGE_ADDED_TASK + \"\\n\","},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"                task.toString() + \"\\n\","},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"                String.format(MESSAGE_TASKLIST_SIZE_FORMAT, taskList.size()));"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":47}},{"path":"src/main/java/popo/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_ADDED_TASK;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_TASKLIST_SIZE_FORMAT;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.ToDoTask;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":" * Creates a ToDo task."},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"public class ToDoCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_USAGE \u003d \"Command Word: \" + COMMAND_WORD + \"\\n\""},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"            + \"Description: Add a todo task\\n\""},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"            + \"Usage: todo \u003ctask_description\u003e\\n\""},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"            + \"Example: todo Go CNY shopping\";"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    private final String taskName;"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code ToDoCommand} with the given task name."},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"     * @param taskName Name of the task."},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    public ToDoCommand(String taskName) {"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"        this.taskName \u003d taskName;"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    public CommandResult execute() {"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"        assert taskList !\u003d null;"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"        ToDoTask task \u003d new ToDoTask(taskName);"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"        taskList.addTask(task);"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"        return new CommandResult(taskList, false,"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"                MESSAGE_ADDED_TASK + \"\\n\","},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"                task.toString() + \"\\n\","},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"                String.format(MESSAGE_TASKLIST_SIZE_FORMAT, taskList.size()));"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":39}},{"path":"src/main/java/popo/commands/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands.exceptions;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":" * Signals an invalid user command."},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"public class InvalidCommandException extends Exception {"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"    public InvalidCommandException(String errorMessage) {"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"        super(errorMessage);"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":11}},{"path":"src/main/java/popo/commands/exceptions/InvalidDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands.exceptions;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":" * Signals an invalid description for the command."},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"public class InvalidDescriptionException extends Exception {"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"    public InvalidDescriptionException(String errorMessage) {"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"        super(errorMessage);"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":11}},{"path":"src/main/java/popo/commands/exceptions/NoDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands.exceptions;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":" * Signals an empty description."},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"public class NoDescriptionException extends Exception {"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"    public NoDescriptionException(String errorMessage) {"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"        super(errorMessage);"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":11}},{"path":"src/main/java/popo/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.parser;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_EMPTY_DESCRIPTION;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_ENTER_COMMAND;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_ENTER_POSITIVE_DURATION;"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_FOLLOW_USAGE;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_INDICATE_TASK;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_INVALID_COMMAND;"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_INVALID_DURATION;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_INVALID_SYNTAX;"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_INVALID_TASK_INDEX;"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_MISSING_SEARCH_WORD;"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"import java.time.Duration;"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalDate;"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalTime;"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"import java.time.temporal.TemporalUnit;"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"import java.util.regex.Matcher;"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"import java.util.regex.Pattern;"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"import popo.commands.ByeCommand;"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"import popo.commands.Command;"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"import popo.commands.DeadlineCommand;"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"import popo.commands.DeleteCommand;"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"import popo.commands.DoneCommand;"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"import popo.commands.DurationCommand;"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"import popo.commands.EventCommand;"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"import popo.commands.FindCommand;"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"import popo.commands.HelpCommand;"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"import popo.commands.ListCommand;"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"import popo.commands.PeriodCommand;"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"import popo.commands.ToDoCommand;"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"import popo.commands.exceptions.InvalidCommandException;"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"import popo.commands.exceptions.InvalidDescriptionException;"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"import popo.commands.exceptions.NoDescriptionException;"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":" * Parses user input."},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"public class Parser {"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"     * Regex to separate the command word and arguments."},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    public static final Pattern USER_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommand\u003e\\\\S+)(?\u003carguments\u003e.*)\");"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"     * Parses user input into a command."},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"     * @param userInput Full user input string."},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"     * @return A user command."},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"     * @throws InvalidCommandException     If the user pass in an unrecognized command."},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"     * @throws InvalidDescriptionException If the format of the arguments do not match the command."},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"     * @throws NoDescriptionException      If the arguments is empty when further information is required."},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"    public Command parseCommand(String userInput) throws InvalidCommandException,"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"            InvalidDescriptionException, NoDescriptionException {"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"        Matcher matcher \u003d USER_COMMAND_FORMAT.matcher(userInput.strip());"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"        if (!matcher.matches()) {"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidCommandException(MESSAGE_ENTER_COMMAND);"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"        // Get the command word as captured by the named-capturing group"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"        String command \u003d matcher.group(\"command\");"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"        // Get the arguments as captured by the named-capturing group"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"        String arguments \u003d matcher.group(\"arguments\").strip();"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"        assert !command.isEmpty() : \"The command word should not be empty at this point\";"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"        switch (command) {"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"        case ToDoCommand.COMMAND_WORD:"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"            return parseArgumentsForToDo(arguments);"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"        case DeadlineCommand.COMMAND_WORD:"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"            return parseArgumentsForDeadline(arguments);"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"        case EventCommand.COMMAND_WORD:"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"            return parseArgumentsForEvent(arguments);"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"        case DurationCommand.COMMAND_WORD:"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"            return parseArgumentsForDuration(arguments);"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"        case PeriodCommand.COMMAND_WORD:"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"            return parseArgumentsForPeriod(arguments);"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"        case DoneCommand.COMMAND_WORD:"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"            return parseArgumentsForDone(arguments);"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":"        case DeleteCommand.COMMAND_WORD:"},{"lineNumber":85,"author":{"gitId":"w2vgd"},"content":"            return parseArgumentsForDelete(arguments);"},{"lineNumber":86,"author":{"gitId":"w2vgd"},"content":"        case FindCommand.COMMAND_WORD:"},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":"            return parseArgumentsForFind(arguments);"},{"lineNumber":88,"author":{"gitId":"w2vgd"},"content":"        case ListCommand.COMMAND_WORD:"},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":"            return new ListCommand();"},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":"        case HelpCommand.COMMAND_WORD:"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"            return new HelpCommand();"},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":"        case ByeCommand.COMMAND_WORD:"},{"lineNumber":93,"author":{"gitId":"w2vgd"},"content":"            return new ByeCommand();"},{"lineNumber":94,"author":{"gitId":"w2vgd"},"content":"        default:"},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidCommandException(MESSAGE_INVALID_COMMAND);"},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":99,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":100,"author":{"gitId":"w2vgd"},"content":"     * Parses the arguments for the todo command."},{"lineNumber":101,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":102,"author":{"gitId":"w2vgd"},"content":"     * @param arguments User input arguments string."},{"lineNumber":103,"author":{"gitId":"w2vgd"},"content":"     * @return {@code ToDoCommand}."},{"lineNumber":104,"author":{"gitId":"w2vgd"},"content":"     * @throws NoDescriptionException If the description of the task is empty."},{"lineNumber":105,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"w2vgd"},"content":"    private Command parseArgumentsForToDo(String arguments) throws NoDescriptionException {"},{"lineNumber":107,"author":{"gitId":"w2vgd"},"content":"        if (arguments.isBlank()) {"},{"lineNumber":108,"author":{"gitId":"w2vgd"},"content":"            throw new NoDescriptionException(MESSAGE_EMPTY_DESCRIPTION);"},{"lineNumber":109,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":110,"author":{"gitId":"w2vgd"},"content":"        return new ToDoCommand(arguments);"},{"lineNumber":111,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":113,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"w2vgd"},"content":"     * Parses the arguments for the deadline command."},{"lineNumber":115,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":116,"author":{"gitId":"w2vgd"},"content":"     * @param arguments User input arguments string."},{"lineNumber":117,"author":{"gitId":"w2vgd"},"content":"     * @return {@code DeadlineCommand}."},{"lineNumber":118,"author":{"gitId":"w2vgd"},"content":"     * @throws NoDescriptionException      If the description of the task is empty."},{"lineNumber":119,"author":{"gitId":"w2vgd"},"content":"     * @throws InvalidDescriptionException If the format of the deadline is invalid."},{"lineNumber":120,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":121,"author":{"gitId":"w2vgd"},"content":"    private Command parseArgumentsForDeadline(String arguments) throws NoDescriptionException,"},{"lineNumber":122,"author":{"gitId":"w2vgd"},"content":"            InvalidDescriptionException {"},{"lineNumber":123,"author":{"gitId":"w2vgd"},"content":"        if (arguments.isBlank()) {"},{"lineNumber":124,"author":{"gitId":"w2vgd"},"content":"            throw new NoDescriptionException(MESSAGE_EMPTY_DESCRIPTION);"},{"lineNumber":125,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":126,"author":{"gitId":"w2vgd"},"content":"        if (!arguments.contains(\"/by\")) {"},{"lineNumber":127,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidDescriptionException(MESSAGE_INVALID_SYNTAX + \"\\n\""},{"lineNumber":128,"author":{"gitId":"w2vgd"},"content":"                    + MESSAGE_FOLLOW_USAGE + \"\\n\""},{"lineNumber":129,"author":{"gitId":"w2vgd"},"content":"                    + DeadlineCommand.MESSAGE_USAGE);"},{"lineNumber":130,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"w2vgd"},"content":"        String[] deadlineInputArr \u003d arguments.split(\"/by\", 2);"},{"lineNumber":132,"author":{"gitId":"w2vgd"},"content":"        assert deadlineInputArr.length \u003d\u003d 2;"},{"lineNumber":133,"author":{"gitId":"w2vgd"},"content":"        String deadlineTaskName \u003d deadlineInputArr[0].strip();"},{"lineNumber":134,"author":{"gitId":"w2vgd"},"content":"        String userInputDateTime \u003d deadlineInputArr[1].strip();"},{"lineNumber":135,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":136,"author":{"gitId":"w2vgd"},"content":"        String[] userInputDateTimeArr \u003d userInputDateTime.split(\"\\\\s*,*\\\\s+|\\\\s*,\\\\s*\", 2);"},{"lineNumber":137,"author":{"gitId":"w2vgd"},"content":"        String userInputDate \u003d userInputDateTimeArr[0].strip();"},{"lineNumber":138,"author":{"gitId":"w2vgd"},"content":"        LocalDate deadlineDate \u003d ParserUtil.parseDate(userInputDate);"},{"lineNumber":139,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":140,"author":{"gitId":"w2vgd"},"content":"        if (userInputDateTimeArr.length \u003d\u003d 1) {"},{"lineNumber":141,"author":{"gitId":"w2vgd"},"content":"            // User did not enter a time string"},{"lineNumber":142,"author":{"gitId":"w2vgd"},"content":"            return new DeadlineCommand(deadlineTaskName, deadlineDate);"},{"lineNumber":143,"author":{"gitId":"w2vgd"},"content":"        } else {"},{"lineNumber":144,"author":{"gitId":"w2vgd"},"content":"            assert userInputDateTimeArr.length \u003d\u003d 2 : \"There should be a time component string in the array\";"},{"lineNumber":145,"author":{"gitId":"w2vgd"},"content":"            // User entered a time string"},{"lineNumber":146,"author":{"gitId":"w2vgd"},"content":"            String userInputTime \u003d userInputDateTimeArr[1].strip();"},{"lineNumber":147,"author":{"gitId":"w2vgd"},"content":"            LocalTime deadlineTime \u003d ParserUtil.parseTime(userInputTime);"},{"lineNumber":148,"author":{"gitId":"w2vgd"},"content":"            return new DeadlineCommand(deadlineTaskName, deadlineDate, deadlineTime);"},{"lineNumber":149,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":150,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":151,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":152,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":153,"author":{"gitId":"w2vgd"},"content":"     * Parses the arguments for the event command."},{"lineNumber":154,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":155,"author":{"gitId":"w2vgd"},"content":"     * @param arguments User input arguments string."},{"lineNumber":156,"author":{"gitId":"w2vgd"},"content":"     * @return {@code EventCommand}."},{"lineNumber":157,"author":{"gitId":"w2vgd"},"content":"     * @throws NoDescriptionException      If the description of the task is empty."},{"lineNumber":158,"author":{"gitId":"w2vgd"},"content":"     * @throws InvalidDescriptionException If the format of the event time is invalid."},{"lineNumber":159,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":160,"author":{"gitId":"w2vgd"},"content":"    private Command parseArgumentsForEvent(String arguments) throws NoDescriptionException,"},{"lineNumber":161,"author":{"gitId":"w2vgd"},"content":"            InvalidDescriptionException {"},{"lineNumber":162,"author":{"gitId":"w2vgd"},"content":"        if (arguments.isBlank()) {"},{"lineNumber":163,"author":{"gitId":"w2vgd"},"content":"            throw new NoDescriptionException(MESSAGE_EMPTY_DESCRIPTION);"},{"lineNumber":164,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"w2vgd"},"content":"        if (!arguments.contains(\"/at\")) {"},{"lineNumber":166,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidDescriptionException(MESSAGE_INVALID_SYNTAX + \"\\n\""},{"lineNumber":167,"author":{"gitId":"w2vgd"},"content":"                    + MESSAGE_FOLLOW_USAGE + \"\\n\""},{"lineNumber":168,"author":{"gitId":"w2vgd"},"content":"                    + EventCommand.MESSAGE_USAGE);"},{"lineNumber":169,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":170,"author":{"gitId":"w2vgd"},"content":"        String[] eventInputArr \u003d arguments.split(\"/at\", 2);"},{"lineNumber":171,"author":{"gitId":"w2vgd"},"content":"        assert eventInputArr.length \u003d\u003d 2;"},{"lineNumber":172,"author":{"gitId":"w2vgd"},"content":"        String eventTaskName \u003d eventInputArr[0].strip();"},{"lineNumber":173,"author":{"gitId":"w2vgd"},"content":"        String eventTime \u003d eventInputArr[1].strip();"},{"lineNumber":174,"author":{"gitId":"w2vgd"},"content":"        return new EventCommand(eventTaskName, eventTime);"},{"lineNumber":175,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":176,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":177,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":178,"author":{"gitId":"w2vgd"},"content":"     * Parses the arguments for the duration command."},{"lineNumber":179,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":180,"author":{"gitId":"w2vgd"},"content":"     * @param arguments User input arguments string."},{"lineNumber":181,"author":{"gitId":"w2vgd"},"content":"     * @return {@code DurationCommand}."},{"lineNumber":182,"author":{"gitId":"w2vgd"},"content":"     * @throws NoDescriptionException      If the description of the task is empty."},{"lineNumber":183,"author":{"gitId":"w2vgd"},"content":"     * @throws InvalidDescriptionException If the format of the duration is invalid."},{"lineNumber":184,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":185,"author":{"gitId":"w2vgd"},"content":"    private Command parseArgumentsForDuration(String arguments) throws NoDescriptionException,"},{"lineNumber":186,"author":{"gitId":"w2vgd"},"content":"            InvalidDescriptionException {"},{"lineNumber":187,"author":{"gitId":"w2vgd"},"content":"        if (arguments.isBlank()) {"},{"lineNumber":188,"author":{"gitId":"w2vgd"},"content":"            throw new NoDescriptionException(MESSAGE_EMPTY_DESCRIPTION);"},{"lineNumber":189,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":190,"author":{"gitId":"w2vgd"},"content":"        if (!arguments.contains(\"/days\") \u0026\u0026 !arguments.contains(\"/hours\") \u0026\u0026 !arguments.contains(\"/minutes\")) {"},{"lineNumber":191,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidDescriptionException(MESSAGE_INVALID_SYNTAX + \"\\n\""},{"lineNumber":192,"author":{"gitId":"w2vgd"},"content":"                    + MESSAGE_FOLLOW_USAGE + \"\\n\""},{"lineNumber":193,"author":{"gitId":"w2vgd"},"content":"                    + DurationCommand.MESSAGE_USAGE);"},{"lineNumber":194,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":195,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":196,"author":{"gitId":"w2vgd"},"content":"            String[] durationInputArr;"},{"lineNumber":197,"author":{"gitId":"w2vgd"},"content":"            TemporalUnit unit;"},{"lineNumber":198,"author":{"gitId":"w2vgd"},"content":"            if (arguments.contains(\"/days\")) {"},{"lineNumber":199,"author":{"gitId":"w2vgd"},"content":"                durationInputArr \u003d arguments.split(\"/days\", 2);"},{"lineNumber":200,"author":{"gitId":"w2vgd"},"content":"                unit \u003d ChronoUnit.DAYS;"},{"lineNumber":201,"author":{"gitId":"w2vgd"},"content":"            } else if (arguments.contains(\"/hours\")) {"},{"lineNumber":202,"author":{"gitId":"w2vgd"},"content":"                durationInputArr \u003d arguments.split(\"/hours\", 2);"},{"lineNumber":203,"author":{"gitId":"w2vgd"},"content":"                unit \u003d ChronoUnit.HOURS;"},{"lineNumber":204,"author":{"gitId":"w2vgd"},"content":"            } else {"},{"lineNumber":205,"author":{"gitId":"w2vgd"},"content":"                assert arguments.contains(\"/minutes\");"},{"lineNumber":206,"author":{"gitId":"w2vgd"},"content":"                durationInputArr \u003d arguments.split(\"/minutes\", 2);"},{"lineNumber":207,"author":{"gitId":"w2vgd"},"content":"                unit \u003d ChronoUnit.MINUTES;"},{"lineNumber":208,"author":{"gitId":"w2vgd"},"content":"            }"},{"lineNumber":209,"author":{"gitId":"w2vgd"},"content":"            assert durationInputArr !\u003d null;"},{"lineNumber":210,"author":{"gitId":"w2vgd"},"content":"            assert durationInputArr.length \u003d\u003d 2;"},{"lineNumber":211,"author":{"gitId":"w2vgd"},"content":"            assert unit !\u003d null;"},{"lineNumber":212,"author":{"gitId":"w2vgd"},"content":"            String durationTaskName \u003d durationInputArr[0].strip();"},{"lineNumber":213,"author":{"gitId":"w2vgd"},"content":"            String durationString \u003d durationInputArr[1].strip();"},{"lineNumber":214,"author":{"gitId":"w2vgd"},"content":"            long amount \u003d Long.parseLong(durationString);"},{"lineNumber":215,"author":{"gitId":"w2vgd"},"content":"            if (amount \u003c 0) {"},{"lineNumber":216,"author":{"gitId":"w2vgd"},"content":"                throw new InvalidDescriptionException(MESSAGE_ENTER_POSITIVE_DURATION);"},{"lineNumber":217,"author":{"gitId":"w2vgd"},"content":"            }"},{"lineNumber":218,"author":{"gitId":"w2vgd"},"content":"            Duration duration \u003d Duration.of(amount, unit);"},{"lineNumber":219,"author":{"gitId":"w2vgd"},"content":"            return new DurationCommand(durationTaskName, duration);"},{"lineNumber":220,"author":{"gitId":"w2vgd"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":221,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidDescriptionException(MESSAGE_INVALID_DURATION);"},{"lineNumber":222,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":223,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":224,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":225,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":226,"author":{"gitId":"w2vgd"},"content":"     * Parses the arguments for the period command."},{"lineNumber":227,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":228,"author":{"gitId":"w2vgd"},"content":"     * @param arguments User input arguments string."},{"lineNumber":229,"author":{"gitId":"w2vgd"},"content":"     * @return {@code PeriodCommand}."},{"lineNumber":230,"author":{"gitId":"w2vgd"},"content":"     * @throws NoDescriptionException      If the description of the task is empty."},{"lineNumber":231,"author":{"gitId":"w2vgd"},"content":"     * @throws InvalidDescriptionException If the formats of the dates are invalid."},{"lineNumber":232,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":233,"author":{"gitId":"w2vgd"},"content":"    private Command parseArgumentsForPeriod(String arguments) throws NoDescriptionException,"},{"lineNumber":234,"author":{"gitId":"w2vgd"},"content":"            InvalidDescriptionException {"},{"lineNumber":235,"author":{"gitId":"w2vgd"},"content":"        if (arguments.isBlank()) {"},{"lineNumber":236,"author":{"gitId":"w2vgd"},"content":"            throw new NoDescriptionException(MESSAGE_EMPTY_DESCRIPTION);"},{"lineNumber":237,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":238,"author":{"gitId":"w2vgd"},"content":"        if (!arguments.contains(\"/start\") || !arguments.contains(\"/end\")) {"},{"lineNumber":239,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidDescriptionException(MESSAGE_INVALID_SYNTAX + \"\\n\""},{"lineNumber":240,"author":{"gitId":"w2vgd"},"content":"                    + MESSAGE_FOLLOW_USAGE + \"\\n\""},{"lineNumber":241,"author":{"gitId":"w2vgd"},"content":"                    + PeriodCommand.MESSAGE_USAGE);"},{"lineNumber":242,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":243,"author":{"gitId":"w2vgd"},"content":"        String[] periodInputArr \u003d arguments.split(\"/start\", 2);"},{"lineNumber":244,"author":{"gitId":"w2vgd"},"content":"        assert periodInputArr.length \u003d\u003d 2;"},{"lineNumber":245,"author":{"gitId":"w2vgd"},"content":"        String periodTaskName \u003d periodInputArr[0].strip();"},{"lineNumber":246,"author":{"gitId":"w2vgd"},"content":"        String dates \u003d periodInputArr[1].strip();"},{"lineNumber":247,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":248,"author":{"gitId":"w2vgd"},"content":"        String[] datesArr \u003d dates.split(\"/end\", 2);"},{"lineNumber":249,"author":{"gitId":"w2vgd"},"content":"        assert datesArr.length \u003d\u003d 2;"},{"lineNumber":250,"author":{"gitId":"w2vgd"},"content":"        String startDateString \u003d datesArr[0].strip();"},{"lineNumber":251,"author":{"gitId":"w2vgd"},"content":"        String endDateString \u003d datesArr[1].strip();"},{"lineNumber":252,"author":{"gitId":"w2vgd"},"content":"        LocalDate startDate \u003d ParserUtil.parseDate(startDateString);"},{"lineNumber":253,"author":{"gitId":"w2vgd"},"content":"        LocalDate endDate \u003d ParserUtil.parseDate(endDateString);"},{"lineNumber":254,"author":{"gitId":"w2vgd"},"content":"        return new PeriodCommand(periodTaskName, startDate, endDate);"},{"lineNumber":255,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":256,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":257,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":258,"author":{"gitId":"w2vgd"},"content":"     * Parses the arguments for the done command."},{"lineNumber":259,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":260,"author":{"gitId":"w2vgd"},"content":"     * @param arguments User input arguments string."},{"lineNumber":261,"author":{"gitId":"w2vgd"},"content":"     * @return {@code DoneCommand}."},{"lineNumber":262,"author":{"gitId":"w2vgd"},"content":"     * @throws InvalidDescriptionException If the description is not a valid index."},{"lineNumber":263,"author":{"gitId":"w2vgd"},"content":"     * @throws NoDescriptionException      If the task number is missing."},{"lineNumber":264,"author":{"gitId":"w2vgd"},"content":"     * @throws IndexOutOfBoundsException   If the specified task number is outside of range."},{"lineNumber":265,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":266,"author":{"gitId":"w2vgd"},"content":"    private Command parseArgumentsForDone(String arguments) throws InvalidDescriptionException,"},{"lineNumber":267,"author":{"gitId":"w2vgd"},"content":"            NoDescriptionException, IndexOutOfBoundsException {"},{"lineNumber":268,"author":{"gitId":"w2vgd"},"content":"        if (arguments.isBlank()) {"},{"lineNumber":269,"author":{"gitId":"w2vgd"},"content":"            throw new NoDescriptionException(MESSAGE_INDICATE_TASK);"},{"lineNumber":270,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":271,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":272,"author":{"gitId":"w2vgd"},"content":"            int index \u003d Integer.parseInt(arguments.strip()) - 1; // Account for 0-based indexing"},{"lineNumber":273,"author":{"gitId":"w2vgd"},"content":"            return new DoneCommand(index);"},{"lineNumber":274,"author":{"gitId":"w2vgd"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":275,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidDescriptionException(MESSAGE_INVALID_TASK_INDEX);"},{"lineNumber":276,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":277,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":278,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":279,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":280,"author":{"gitId":"w2vgd"},"content":"     * Parses the arguments for the delete command."},{"lineNumber":281,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":282,"author":{"gitId":"w2vgd"},"content":"     * @param arguments User input arguments string."},{"lineNumber":283,"author":{"gitId":"w2vgd"},"content":"     * @return {@code DeleteCommand}."},{"lineNumber":284,"author":{"gitId":"w2vgd"},"content":"     * @throws InvalidDescriptionException If the description is not a valid index."},{"lineNumber":285,"author":{"gitId":"w2vgd"},"content":"     * @throws NoDescriptionException      If the task number is missing."},{"lineNumber":286,"author":{"gitId":"w2vgd"},"content":"     * @throws IndexOutOfBoundsException   If the specified task number is outside of range."},{"lineNumber":287,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":288,"author":{"gitId":"w2vgd"},"content":"    private Command parseArgumentsForDelete(String arguments) throws InvalidDescriptionException,"},{"lineNumber":289,"author":{"gitId":"w2vgd"},"content":"            NoDescriptionException, IndexOutOfBoundsException {"},{"lineNumber":290,"author":{"gitId":"w2vgd"},"content":"        if (arguments.isBlank()) {"},{"lineNumber":291,"author":{"gitId":"w2vgd"},"content":"            throw new NoDescriptionException(MESSAGE_INDICATE_TASK);"},{"lineNumber":292,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":293,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":294,"author":{"gitId":"w2vgd"},"content":"            int index \u003d Integer.parseInt(arguments.strip()) - 1; // Account for 0-based indexing"},{"lineNumber":295,"author":{"gitId":"w2vgd"},"content":"            return new DeleteCommand(index);"},{"lineNumber":296,"author":{"gitId":"w2vgd"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":297,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidDescriptionException(MESSAGE_INVALID_TASK_INDEX);"},{"lineNumber":298,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":299,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":300,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":301,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":302,"author":{"gitId":"w2vgd"},"content":"     * Parses the arguments for the find command."},{"lineNumber":303,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":304,"author":{"gitId":"w2vgd"},"content":"     * @param arguments User input arguments string."},{"lineNumber":305,"author":{"gitId":"w2vgd"},"content":"     * @return {@code FindCommand}."},{"lineNumber":306,"author":{"gitId":"w2vgd"},"content":"     * @throws NoDescriptionException If the search word is missing."},{"lineNumber":307,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":308,"author":{"gitId":"w2vgd"},"content":"    private Command parseArgumentsForFind(String arguments) throws NoDescriptionException {"},{"lineNumber":309,"author":{"gitId":"w2vgd"},"content":"        if (arguments.isBlank()) {"},{"lineNumber":310,"author":{"gitId":"w2vgd"},"content":"            throw new NoDescriptionException(MESSAGE_MISSING_SEARCH_WORD);"},{"lineNumber":311,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":312,"author":{"gitId":"w2vgd"},"content":"        return new FindCommand(arguments);"},{"lineNumber":313,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":314,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":314}},{"path":"src/main/java/popo/parser/ParserUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.parser;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_FOLLOW_USAGE;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalTime;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import popo.commands.exceptions.InvalidDescriptionException;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import popo.utils.InputDateTimeFormat;"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":" * Contains utility methods used for parsing dates and time in the Parser class."},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"public class ParserUtil {"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    private static final String MESSAGE_INVALID_DATE_FORMAT \u003d \"Unable to parse date.\";"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    private static final String MESSAGE_INVALID_TIME_FORMAT \u003d \"Unable to parse time.\";"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    private static final String MESSAGE_DATE_FORMAT \u003d \"Date format: dd/mm/yyyy\";"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    private static final String MESSAGE_TIME_FORMAT \u003d \"Time format (24-hour clock): HHMM\";"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     * Parses the input date string format into a {@code LocalDate} object."},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"     * @param dateString User input date string."},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"     * @return {@code LocalDate} object representing the date."},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"     * @throws InvalidDescriptionException If the format of the date is invalid."},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    public static LocalDate parseDate(String dateString) throws InvalidDescriptionException {"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"            return LocalDate.parse(dateString, InputDateTimeFormat.INPUT_DATE_FORMAT);"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"        } catch (DateTimeParseException ex) {"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidDescriptionException(MESSAGE_INVALID_DATE_FORMAT + \"\\n\""},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"                    + MESSAGE_FOLLOW_USAGE + \"\\n\""},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"                    + MESSAGE_DATE_FORMAT);"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"     * Parses the input time string format into a {@code LocalTime} object."},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"     * @param timeString User input time string."},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"     * @return {@code LocalTime} object representing the time."},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"     * @throws InvalidDescriptionException If the format of the time is invalid."},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    public static LocalTime parseTime(String timeString) throws InvalidDescriptionException {"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"            return LocalTime.parse(timeString, InputDateTimeFormat.INPUT_TIME_FORMAT);"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"        } catch (DateTimeParseException ex) {"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidDescriptionException(MESSAGE_INVALID_TIME_FORMAT + \"\\n\""},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"                    + MESSAGE_FOLLOW_USAGE + \"\\n\""},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"                    + MESSAGE_TIME_FORMAT);"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":54}},{"path":"src/main/java/popo/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.storage;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import java.nio.file.Files;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import java.nio.file.InvalidPathException;"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import java.nio.file.Path;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import popo.storage.exceptions.InvalidStorageFilePathException;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import popo.storage.exceptions.StorageException;"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.Task;"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.TaskList;"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":" * Used to read and write to a file."},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"public class Storage {"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    private static final String DEFAULT_FILEPATH \u003d \"./data/popo.txt\";"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    private static final String MESSAGE_INVALID_FILEPATH \u003d \"The file path of a storage file should end with \u0027.txt\u0027\";"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    private static final String MESSAGE_FAILED_INITIALIZATION \u003d \"Failed to initialize storage.\" + \"\\n\""},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"            + \"This error could be due to an invalid file path.\" + \"\\n\""},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"            + \"Exiting...\";"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    private static final String MESSAGE_ERROR_WRITING_TO_FILE \u003d \"Error writing data to file...\";"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    private final Path path;"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code Storage} object with the default file path."},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"     * @throws InvalidStorageFilePathException If the default file path is invalid."},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"    public Storage() throws InvalidStorageFilePathException {"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"        this(DEFAULT_FILEPATH);"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code Storage} object with the given file path."},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"     * @param filePath File path to read or write to."},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"     * @throws InvalidStorageFilePathException If the file path is invalid."},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"    public Storage(String filePath) throws InvalidStorageFilePathException {"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"        if (!StorageUtil.isValidFilePath(filePath)) {"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidStorageFilePathException(MESSAGE_INVALID_FILEPATH);"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"            path \u003d Path.of(filePath);"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"        } catch (InvalidPathException ex) {"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidStorageFilePathException(MESSAGE_FAILED_INITIALIZATION);"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"     * Loads the list of tasks found in the file and parses the tasks into an operational format."},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"     * @return {@code TaskList} that represents the current list of tasks in the file."},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"     * @throws IOException      If an error occurs while reading from the file."},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"     * @throws StorageException If an error occurs while parsing the data from the file."},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"    public TaskList loadTasks() throws IOException, StorageException {"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"        TaskList taskList \u003d new TaskList();"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"        if (!Files.exists(path) || !Files.isRegularFile(path)) {"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"            return taskList;"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"        List\u003cString\u003e taskStrings \u003d Files.readAllLines(path);"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"        for (String taskString : taskStrings) {"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"            Task task \u003d StorageUtil.convertStringToTask(taskString);"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"            taskList.addTask(task);"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"        return taskList;"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"     * Saves the list of tasks by writing into the file if the list if updated by the previous command."},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"     * @param taskList Updated task list."},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"     * @throws StorageException If an error occurs while writing to the file."},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"    public void saveTasksIfPresent(TaskList taskList) throws StorageException {"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"        if (taskList \u003d\u003d null) {"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"            return;"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":85,"author":{"gitId":"w2vgd"},"content":"            // Create directories in the file path that do not exist yet"},{"lineNumber":86,"author":{"gitId":"w2vgd"},"content":"            Path pathToParentDirectory \u003d path.getParent();"},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":"            if (pathToParentDirectory !\u003d null) {"},{"lineNumber":88,"author":{"gitId":"w2vgd"},"content":"                Files.createDirectories(pathToParentDirectory);"},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":"            }"},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"            List\u003cString\u003e taskStrings \u003d StorageUtil.convertAllTasksToString(taskList);"},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":"            assert taskStrings !\u003d null;"},{"lineNumber":93,"author":{"gitId":"w2vgd"},"content":"            Files.write(path, taskStrings);"},{"lineNumber":94,"author":{"gitId":"w2vgd"},"content":"        } catch (IOException ex) {"},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":"            throw new StorageException(MESSAGE_ERROR_WRITING_TO_FILE + path);"},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":98}},{"path":"src/main/java/popo/storage/StorageUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.storage;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import java.time.Duration;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalTime;"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import java.time.temporal.ChronoUnit;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import java.time.temporal.TemporalUnit;"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"import popo.storage.exceptions.StorageException;"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.DeadlineTask;"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.DurationTask;"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.EventTask;"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.PeriodTask;"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.Task;"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.TaskList;"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.ToDoTask;"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"import popo.utils.OutputDateTimeFormat;"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":" * Contains utility methods for Storage class."},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"public class StorageUtil {"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    private static final String MESSAGE_ERROR_READING_FROM_FILE \u003d \"Error parsing data from file...\" + \"\\n\""},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"            + \"The file may have been corrupted or is in the wrong format.\";"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    private static final int TASK_NOT_COMPLETED \u003d 0;"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    private static final int TASK_COMPLETED \u003d 1;"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    private static final String UNIT_DAYS \u003d \"day(s)\";"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"    private static final String UNIT_HOURS \u003d \"hour(s)\";"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"    private static final String UNIT_MINUTES \u003d \"minute(s)\";"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"     * Checks if a file indicated by the given file path is text file."},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"     * @param filePath File path to be checked."},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"     * @return True if the file path ends with \u0027.txt\u0027, else false."},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"    public static boolean isValidFilePath(String filePath) {"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"        return filePath.endsWith(\".txt\");"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"     * Converts a task string into a {@code Task} object."},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"     * @param taskString Task string to be converted."},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"     * @return {@code Task}."},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"     * @throws StorageException If an error occurs while parsing the data from the file."},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"    public static Task convertStringToTask(String taskString) throws StorageException {"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"        String[] arr \u003d taskString.split(\"\\\\|\", 5);"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"        String taskType \u003d arr[0].strip();"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"        String taskStatus \u003d arr[1].strip();"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"        String taskName \u003d arr[2].strip();"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"        boolean isTaskCompleted \u003d isTaskCompleted(taskStatus);"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"            switch (taskType) {"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"            case ToDoTask.IDENTIFIER:"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"                return createToDoTaskFromString(taskName, isTaskCompleted);"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"            case DeadlineTask.IDENTIFIER:"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"                String deadlineTaskDescription \u003d arr[3].strip();"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"                return createDeadlineTaskFromString(taskName, isTaskCompleted, deadlineTaskDescription);"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"            case EventTask.IDENTIFIER:"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"                String eventTaskDescription \u003d arr[3].strip();"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"                return createEventTaskFromString(taskName, isTaskCompleted, eventTaskDescription);"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"            case PeriodTask.IDENTIFIER:"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"                String periodTaskStartDateString \u003d arr[3].strip();"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"                String periodTaskEndDateString \u003d arr[4].strip();"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"                return createPeriodTaskFromString(taskName, isTaskCompleted,"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"                        periodTaskStartDateString, periodTaskEndDateString);"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"            case DurationTask.IDENTIFIER:"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"                String durationTaskDescription \u003d arr[3].strip();"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"                return createDurationTaskFromString(taskName, isTaskCompleted, durationTaskDescription);"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"            default:"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"                throw new StorageException(MESSAGE_ERROR_READING_FROM_FILE);"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"        } catch (IndexOutOfBoundsException ex) {"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"            throw new StorageException(MESSAGE_ERROR_READING_FROM_FILE);"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":85,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"w2vgd"},"content":"     * Converts a list of tasks into a list of strings formatted to be stored in a file."},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":88,"author":{"gitId":"w2vgd"},"content":"     * @param taskList Task list to be converted."},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":"     * @return A list of formatted task strings."},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"    public static List\u003cString\u003e convertAllTasksToString(TaskList taskList) {"},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":"        List\u003cString\u003e taskStrings \u003d new ArrayList\u003c\u003e();"},{"lineNumber":93,"author":{"gitId":"w2vgd"},"content":"        taskList.unmodifiableList()"},{"lineNumber":94,"author":{"gitId":"w2vgd"},"content":"                .stream()"},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":"                .map(task -\u003e convertTaskToString(task))"},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"                .forEach(taskString -\u003e taskStrings.add(taskString));"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"        return taskStrings;"},{"lineNumber":98,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":100,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"w2vgd"},"content":"     * Converts a {@code Task} into a formatted task string depending on the type of the task."},{"lineNumber":102,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":103,"author":{"gitId":"w2vgd"},"content":"     * @param task Task object to be converted."},{"lineNumber":104,"author":{"gitId":"w2vgd"},"content":"     * @return Formatted string describing the task."},{"lineNumber":105,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"w2vgd"},"content":"    public static String convertTaskToString(Task task) {"},{"lineNumber":107,"author":{"gitId":"w2vgd"},"content":"        StringBuilder encodedTaskString \u003d new StringBuilder();"},{"lineNumber":108,"author":{"gitId":"w2vgd"},"content":"        encodedTaskString.append(task.getTaskType());"},{"lineNumber":109,"author":{"gitId":"w2vgd"},"content":"        encodedTaskString.append(\" | \").append(task.isDone() ? \"1\" : \"0\");"},{"lineNumber":110,"author":{"gitId":"w2vgd"},"content":"        encodedTaskString.append(\" | \").append(task.getName());"},{"lineNumber":111,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":112,"author":{"gitId":"w2vgd"},"content":"        String taskType \u003d task.getTaskType();"},{"lineNumber":113,"author":{"gitId":"w2vgd"},"content":"        switch (taskType) {"},{"lineNumber":114,"author":{"gitId":"w2vgd"},"content":"        case ToDoTask.IDENTIFIER:"},{"lineNumber":115,"author":{"gitId":"w2vgd"},"content":"            break;"},{"lineNumber":116,"author":{"gitId":"w2vgd"},"content":"        case DeadlineTask.IDENTIFIER:"},{"lineNumber":117,"author":{"gitId":"w2vgd"},"content":"            DeadlineTask deadlineTask \u003d (DeadlineTask) task;"},{"lineNumber":118,"author":{"gitId":"w2vgd"},"content":"            encodedTaskString.append(\" | \").append(deadlineTask.getDeadline());"},{"lineNumber":119,"author":{"gitId":"w2vgd"},"content":"            break;"},{"lineNumber":120,"author":{"gitId":"w2vgd"},"content":"        case EventTask.IDENTIFIER:"},{"lineNumber":121,"author":{"gitId":"w2vgd"},"content":"            EventTask eventTask \u003d (EventTask) task;"},{"lineNumber":122,"author":{"gitId":"w2vgd"},"content":"            encodedTaskString.append(\" | \").append(eventTask.getEventTime());"},{"lineNumber":123,"author":{"gitId":"w2vgd"},"content":"            break;"},{"lineNumber":124,"author":{"gitId":"w2vgd"},"content":"        case PeriodTask.IDENTIFIER:"},{"lineNumber":125,"author":{"gitId":"w2vgd"},"content":"            PeriodTask periodTask \u003d (PeriodTask) task;"},{"lineNumber":126,"author":{"gitId":"w2vgd"},"content":"            encodedTaskString.append(\" | \").append(periodTask.getStartDate());"},{"lineNumber":127,"author":{"gitId":"w2vgd"},"content":"            encodedTaskString.append(\" | \").append(periodTask.getEndDate());"},{"lineNumber":128,"author":{"gitId":"w2vgd"},"content":"            break;"},{"lineNumber":129,"author":{"gitId":"w2vgd"},"content":"        case DurationTask.IDENTIFIER:"},{"lineNumber":130,"author":{"gitId":"w2vgd"},"content":"            DurationTask durationTask \u003d (DurationTask) task;"},{"lineNumber":131,"author":{"gitId":"w2vgd"},"content":"            encodedTaskString.append(\" | \").append(durationTask.getDuration());"},{"lineNumber":132,"author":{"gitId":"w2vgd"},"content":"            break;"},{"lineNumber":133,"author":{"gitId":"w2vgd"},"content":"        default:"},{"lineNumber":134,"author":{"gitId":"w2vgd"},"content":"            throw new AssertionError(taskType);"},{"lineNumber":135,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":136,"author":{"gitId":"w2vgd"},"content":"        return encodedTaskString.toString();"},{"lineNumber":137,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":139,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":140,"author":{"gitId":"w2vgd"},"content":"     * Checks if a task is completed based on the status string."},{"lineNumber":141,"author":{"gitId":"w2vgd"},"content":"     * If the status code is 0, the task is to be marked as not completed."},{"lineNumber":142,"author":{"gitId":"w2vgd"},"content":"     * If the status code is 1, the task is to be marked as completed."},{"lineNumber":143,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":144,"author":{"gitId":"w2vgd"},"content":"     * @param status Status string representing if the task is completed."},{"lineNumber":145,"author":{"gitId":"w2vgd"},"content":"     * @return True if the status code is 1, false if the status code is 0."},{"lineNumber":146,"author":{"gitId":"w2vgd"},"content":"     * @throws StorageException If the status code is not 0 or 1."},{"lineNumber":147,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":148,"author":{"gitId":"w2vgd"},"content":"    public static boolean isTaskCompleted(String status) throws StorageException {"},{"lineNumber":149,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":150,"author":{"gitId":"w2vgd"},"content":"            int taskStatus \u003d Integer.parseInt(status);"},{"lineNumber":151,"author":{"gitId":"w2vgd"},"content":"            switch (taskStatus) {"},{"lineNumber":152,"author":{"gitId":"w2vgd"},"content":"            case TASK_NOT_COMPLETED:"},{"lineNumber":153,"author":{"gitId":"w2vgd"},"content":"                return false;"},{"lineNumber":154,"author":{"gitId":"w2vgd"},"content":"            case TASK_COMPLETED:"},{"lineNumber":155,"author":{"gitId":"w2vgd"},"content":"                return true;"},{"lineNumber":156,"author":{"gitId":"w2vgd"},"content":"            default:"},{"lineNumber":157,"author":{"gitId":"w2vgd"},"content":"                throw new StorageException(MESSAGE_ERROR_READING_FROM_FILE);"},{"lineNumber":158,"author":{"gitId":"w2vgd"},"content":"            }"},{"lineNumber":159,"author":{"gitId":"w2vgd"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":160,"author":{"gitId":"w2vgd"},"content":"            throw new StorageException(MESSAGE_ERROR_READING_FROM_FILE);"},{"lineNumber":161,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":162,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":163,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":164,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":165,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code ToDoTask} object from the given task name and task completion status."},{"lineNumber":166,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":167,"author":{"gitId":"w2vgd"},"content":"     * @param name            Name of the task."},{"lineNumber":168,"author":{"gitId":"w2vgd"},"content":"     * @param isTaskCompleted Boolean indicating whether the task has been completed."},{"lineNumber":169,"author":{"gitId":"w2vgd"},"content":"     * @return {@code ToDoTask}."},{"lineNumber":170,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":171,"author":{"gitId":"w2vgd"},"content":"    public static Task createToDoTaskFromString(String name, boolean isTaskCompleted) {"},{"lineNumber":172,"author":{"gitId":"w2vgd"},"content":"        return new ToDoTask(name, isTaskCompleted);"},{"lineNumber":173,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":175,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":176,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code DeadlineTask} object from the given task name, task completion status, and deadline."},{"lineNumber":177,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":178,"author":{"gitId":"w2vgd"},"content":"     * @param name            Name of the task."},{"lineNumber":179,"author":{"gitId":"w2vgd"},"content":"     * @param isTaskCompleted Boolean indicating whether the task has been completed."},{"lineNumber":180,"author":{"gitId":"w2vgd"},"content":"     * @param deadline        Deadline of the task."},{"lineNumber":181,"author":{"gitId":"w2vgd"},"content":"     * @return {@code DeadlineTask}."},{"lineNumber":182,"author":{"gitId":"w2vgd"},"content":"     * @throws StorageException If an error occurs while parsing the data from the file."},{"lineNumber":183,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":184,"author":{"gitId":"w2vgd"},"content":"    public static Task createDeadlineTaskFromString(String name, boolean isTaskCompleted, String deadline)"},{"lineNumber":185,"author":{"gitId":"w2vgd"},"content":"            throws StorageException {"},{"lineNumber":186,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":187,"author":{"gitId":"w2vgd"},"content":"            String[] deadlineArr \u003d deadline.split(\",\", 2);"},{"lineNumber":188,"author":{"gitId":"w2vgd"},"content":"            String deadlineDateString \u003d deadlineArr[0].strip();"},{"lineNumber":189,"author":{"gitId":"w2vgd"},"content":"            LocalDate deadlineDate \u003d LocalDate.parse(deadlineDateString, OutputDateTimeFormat.OUTPUT_DATE_FORMAT);"},{"lineNumber":190,"author":{"gitId":"w2vgd"},"content":"            if (deadlineArr.length \u003d\u003d 1) {"},{"lineNumber":191,"author":{"gitId":"w2vgd"},"content":"                // There is no time component"},{"lineNumber":192,"author":{"gitId":"w2vgd"},"content":"                return new DeadlineTask(name, isTaskCompleted, deadlineDate);"},{"lineNumber":193,"author":{"gitId":"w2vgd"},"content":"            } else {"},{"lineNumber":194,"author":{"gitId":"w2vgd"},"content":"                // There is a time component"},{"lineNumber":195,"author":{"gitId":"w2vgd"},"content":"                assert deadlineArr.length \u003d\u003d 2;"},{"lineNumber":196,"author":{"gitId":"w2vgd"},"content":"                String deadlineTimeString \u003d deadlineArr[1].strip();"},{"lineNumber":197,"author":{"gitId":"w2vgd"},"content":"                LocalTime deadlineTime \u003d LocalTime.parse(deadlineTimeString, OutputDateTimeFormat.OUTPUT_TIME_FORMAT);"},{"lineNumber":198,"author":{"gitId":"w2vgd"},"content":"                return new DeadlineTask(name, isTaskCompleted, deadlineDate, deadlineTime);"},{"lineNumber":199,"author":{"gitId":"w2vgd"},"content":"            }"},{"lineNumber":200,"author":{"gitId":"w2vgd"},"content":"        } catch (DateTimeParseException ex) {"},{"lineNumber":201,"author":{"gitId":"w2vgd"},"content":"            throw new StorageException(MESSAGE_ERROR_READING_FROM_FILE);"},{"lineNumber":202,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":203,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":204,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":205,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":206,"author":{"gitId":"w2vgd"},"content":"     * Creates an {@code EventTask} object from the given task name, task completion status, and event time."},{"lineNumber":207,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":208,"author":{"gitId":"w2vgd"},"content":"     * @param name            Name of the task."},{"lineNumber":209,"author":{"gitId":"w2vgd"},"content":"     * @param isTaskCompleted Boolean indicating whether the task has been completed."},{"lineNumber":210,"author":{"gitId":"w2vgd"},"content":"     * @param eventTime       Event time of the task."},{"lineNumber":211,"author":{"gitId":"w2vgd"},"content":"     * @return {@code EventTask}."},{"lineNumber":212,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":213,"author":{"gitId":"w2vgd"},"content":"    public static Task createEventTaskFromString(String name, boolean isTaskCompleted, String eventTime) {"},{"lineNumber":214,"author":{"gitId":"w2vgd"},"content":"        return new EventTask(name, isTaskCompleted, eventTime);"},{"lineNumber":215,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":216,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":217,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":218,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code PeriodTask} object from the given task name, task completion status,"},{"lineNumber":219,"author":{"gitId":"w2vgd"},"content":"     * starting date and ending date."},{"lineNumber":220,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":221,"author":{"gitId":"w2vgd"},"content":"     * @param name            Name of the task."},{"lineNumber":222,"author":{"gitId":"w2vgd"},"content":"     * @param isTaskCompleted Boolean indicating whether the task has been completed."},{"lineNumber":223,"author":{"gitId":"w2vgd"},"content":"     * @param startDateString Starting date of the task."},{"lineNumber":224,"author":{"gitId":"w2vgd"},"content":"     * @param endDateString   Ending date of the task."},{"lineNumber":225,"author":{"gitId":"w2vgd"},"content":"     * @return {@code PeriodTask}."},{"lineNumber":226,"author":{"gitId":"w2vgd"},"content":"     * @throws StorageException If an error occurs while parsing the data from the file."},{"lineNumber":227,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":228,"author":{"gitId":"w2vgd"},"content":"    public static Task createPeriodTaskFromString(String name, boolean isTaskCompleted, String startDateString,"},{"lineNumber":229,"author":{"gitId":"w2vgd"},"content":"                                                  String endDateString) throws StorageException {"},{"lineNumber":230,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":231,"author":{"gitId":"w2vgd"},"content":"            LocalDate startDate \u003d LocalDate.parse(startDateString, OutputDateTimeFormat.OUTPUT_DATE_FORMAT);"},{"lineNumber":232,"author":{"gitId":"w2vgd"},"content":"            LocalDate endDate \u003d LocalDate.parse(endDateString, OutputDateTimeFormat.OUTPUT_DATE_FORMAT);"},{"lineNumber":233,"author":{"gitId":"w2vgd"},"content":"            return new PeriodTask(name, isTaskCompleted, startDate, endDate);"},{"lineNumber":234,"author":{"gitId":"w2vgd"},"content":"        } catch (DateTimeParseException ex) {"},{"lineNumber":235,"author":{"gitId":"w2vgd"},"content":"            throw new StorageException(MESSAGE_ERROR_READING_FROM_FILE);"},{"lineNumber":236,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":237,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":238,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":239,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":240,"author":{"gitId":"w2vgd"},"content":"     * Creates an {@code DurationTask} object from the given task name, task completion status, and duration."},{"lineNumber":241,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":242,"author":{"gitId":"w2vgd"},"content":"     * @param name            Name of the task."},{"lineNumber":243,"author":{"gitId":"w2vgd"},"content":"     * @param isTaskCompleted Boolean indicating whether the task has been completed."},{"lineNumber":244,"author":{"gitId":"w2vgd"},"content":"     * @param durationString  Duration of the task."},{"lineNumber":245,"author":{"gitId":"w2vgd"},"content":"     * @return {@code DurationTask}."},{"lineNumber":246,"author":{"gitId":"w2vgd"},"content":"     * @throws StorageException If an error occurs while parsing the data from the file."},{"lineNumber":247,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":248,"author":{"gitId":"w2vgd"},"content":"    public static Task createDurationTaskFromString(String name, boolean isTaskCompleted, String durationString)"},{"lineNumber":249,"author":{"gitId":"w2vgd"},"content":"            throws StorageException {"},{"lineNumber":250,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":251,"author":{"gitId":"w2vgd"},"content":"            String[] durationArr \u003d durationString.split(\"\\\\s\", 2);"},{"lineNumber":252,"author":{"gitId":"w2vgd"},"content":"            String amountString \u003d durationArr[0].strip();"},{"lineNumber":253,"author":{"gitId":"w2vgd"},"content":"            String unitString \u003d durationArr[1].strip();"},{"lineNumber":254,"author":{"gitId":"w2vgd"},"content":"            long amount \u003d Long.parseLong(amountString);"},{"lineNumber":255,"author":{"gitId":"w2vgd"},"content":"            TemporalUnit unit;"},{"lineNumber":256,"author":{"gitId":"w2vgd"},"content":"            switch (unitString) {"},{"lineNumber":257,"author":{"gitId":"w2vgd"},"content":"            case UNIT_DAYS:"},{"lineNumber":258,"author":{"gitId":"w2vgd"},"content":"                unit \u003d ChronoUnit.DAYS;"},{"lineNumber":259,"author":{"gitId":"w2vgd"},"content":"                break;"},{"lineNumber":260,"author":{"gitId":"w2vgd"},"content":"            case UNIT_HOURS:"},{"lineNumber":261,"author":{"gitId":"w2vgd"},"content":"                unit \u003d ChronoUnit.HOURS;"},{"lineNumber":262,"author":{"gitId":"w2vgd"},"content":"                break;"},{"lineNumber":263,"author":{"gitId":"w2vgd"},"content":"            case UNIT_MINUTES:"},{"lineNumber":264,"author":{"gitId":"w2vgd"},"content":"                unit \u003d ChronoUnit.MINUTES;"},{"lineNumber":265,"author":{"gitId":"w2vgd"},"content":"                break;"},{"lineNumber":266,"author":{"gitId":"w2vgd"},"content":"            default:"},{"lineNumber":267,"author":{"gitId":"w2vgd"},"content":"                throw new StorageException(MESSAGE_ERROR_READING_FROM_FILE);"},{"lineNumber":268,"author":{"gitId":"w2vgd"},"content":"            }"},{"lineNumber":269,"author":{"gitId":"w2vgd"},"content":"            assert unit !\u003d null;"},{"lineNumber":270,"author":{"gitId":"w2vgd"},"content":"            Duration duration \u003d Duration.of(amount, unit);"},{"lineNumber":271,"author":{"gitId":"w2vgd"},"content":"            return new DurationTask(name, isTaskCompleted, duration);"},{"lineNumber":272,"author":{"gitId":"w2vgd"},"content":"        } catch (IndexOutOfBoundsException | NumberFormatException ex) {"},{"lineNumber":273,"author":{"gitId":"w2vgd"},"content":"            throw new StorageException(MESSAGE_ERROR_READING_FROM_FILE);"},{"lineNumber":274,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":275,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":276,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":276}},{"path":"src/main/java/popo/storage/exceptions/InvalidStorageFilePathException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.storage.exceptions;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":" * Signals an invalid file path for storage."},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"public class InvalidStorageFilePathException extends Exception {"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"    public InvalidStorageFilePathException(String errorMessage) {"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"        super(errorMessage);"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":10}},{"path":"src/main/java/popo/storage/exceptions/StorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.storage.exceptions;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":" * Signals an error writing to file."},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"public class StorageException extends Exception {"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"    public StorageException(String errorMessage) {"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"        super(errorMessage);"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":10}},{"path":"src/main/java/popo/tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.tasks;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalTime;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import popo.utils.OutputDateTimeFormat;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":" * Represents a task with a deadline."},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"public class DeadlineTask extends Task {"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    public static final String IDENTIFIER \u003d \"D\";"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    private final LocalDate deadlineDate;"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    private final LocalTime deadlineTime;"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code DeadlineTask} object with the given task name and deadline date component,"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"     * with the task set to initially not completed."},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"     * @param name         Name of the task."},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     * @param deadlineDate Date component of deadline."},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    public DeadlineTask(String name, LocalDate deadlineDate) {"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"        super(IDENTIFIER, name);"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"        deadlineTime \u003d null;"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code DeadlineTask} object with the given task name and deadline date and time components,"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"     * with the task set to initially not completed."},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"     * @param name         Name of the task."},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"     * @param deadlineDate Date component of deadline."},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"     * @param deadlineTime Time component of deadline."},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    public DeadlineTask(String name, LocalDate deadlineDate, LocalTime deadlineTime) {"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"        super(IDENTIFIER, name);"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        this.deadlineTime \u003d deadlineTime;"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code DeadlineTask} object with the given task name and deadline date component,"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"     * with the task set to the boolean isCompleted."},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"     * @param name         Name of the task."},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"     * @param isCompleted  Boolean indicating whether the task has been completed."},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"     * @param deadlineDate Date component of deadline."},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"    public DeadlineTask(String name, boolean isCompleted, LocalDate deadlineDate) {"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"        super(IDENTIFIER, name, isCompleted);"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"        deadlineTime \u003d null;"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code DeadlineTask} object with the given task name and deadline date and time components,"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"     * with the task set to the boolean isCompleted."},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"     * @param name         Name of the task."},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"     * @param isCompleted  Boolean indicating whether the task has been completed."},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"     * @param deadlineDate Date component of deadline."},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"     * @param deadlineTime Time component of deadline."},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"    public DeadlineTask(String name, boolean isCompleted, LocalDate deadlineDate, LocalTime deadlineTime) {"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"        super(IDENTIFIER, name, isCompleted);"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"        this.deadlineDate \u003d deadlineDate;"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"        this.deadlineTime \u003d deadlineTime;"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"     * Returns the deadline in a nicely formatted string."},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"     * @return Formatted deadline string."},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"    public String getDeadline() {"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"        StringBuilder deadline \u003d new StringBuilder();"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"        deadline.append(deadlineDate.format(OutputDateTimeFormat.OUTPUT_DATE_FORMAT));"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"        if (deadlineTime !\u003d null) {"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"            deadline.append(\", \");"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"            deadline.append(deadlineTime.format(OutputDateTimeFormat.OUTPUT_TIME_FORMAT));"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":85,"author":{"gitId":"w2vgd"},"content":"        return deadline.toString();"},{"lineNumber":86,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":88,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":"    public String getTaskType() {"},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":"        return taskType;"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":93,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":94,"author":{"gitId":"w2vgd"},"content":"    public String toString() {"},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getDeadline() + \")\";"},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":97}},{"path":"src/main/java/popo/tasks/DurationTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.tasks;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import java.time.Duration;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":" * Represents a task with a starting date and an ending date."},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"public class DurationTask extends Task {"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    public static final String IDENTIFIER \u003d \"DU\";"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    private static final long ONE_DAY_IN_SECONDS \u003d 86400;"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    private static final long ONE_HOUR_IN_SECONDS \u003d 3600;"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    private final Duration duration;"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code DurationTask} object with the given task name and duration,"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"     * with the task set to initially not completed."},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"     * @param name     Name of the task."},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"     * @param duration Duration of the task."},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    public DurationTask(String name, Duration duration) {"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"        super(IDENTIFIER, name);"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"        this.duration \u003d duration;"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code DurationTask} object with the given task name, starting date and ending date,"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"     * with the task set to the boolean isCompleted."},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"     * @param name        Name of the task."},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"     * @param isCompleted Boolean indicating whether the task has been completed."},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"     * @param duration    Duration of the task."},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    public DurationTask(String name, boolean isCompleted, Duration duration) {"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"        super(IDENTIFIER, name, isCompleted);"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"        this.duration \u003d duration;"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"     * Returns the duration of the task."},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"     * @return Duration of the task."},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"    public String getDuration() {"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"        long seconds \u003d duration.getSeconds();"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"        if (seconds \u003e\u003d ONE_DAY_IN_SECONDS) {"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"            return String.format(\"%d day(s)\", duration.toDays());"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"        } else if (seconds \u003e\u003d ONE_HOUR_IN_SECONDS) {"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"            return String.format(\"%d hour(s)\", duration.toHours());"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"        } else {"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"            return String.format(\"%d minute(s)\", duration.toMinutes());"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"    public String getTaskType() {"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"        return taskType;"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"    public String toString() {"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"        return \"[DU]\" + super.toString() + \" (duration: \" + getDuration() + \")\";"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":66}},{"path":"src/main/java/popo/tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.tasks;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":" * Represents a task with an event time."},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"public class EventTask extends Task {"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"    public static final String IDENTIFIER \u003d \"E\";"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    private final String eventTime;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"     * Creates an {@code EventTask} object with the given task name and event time,"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"     * with the task set to initially not completed."},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"     * @param name      Name of the task."},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"     * @param eventTime String denoting the event time."},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    public EventTask(String name, String eventTime) {"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"        super(IDENTIFIER, name);"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"     * Creates an {@code EventTask} object with the given task name and event time,"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"     * with the task set to the boolean isCompleted."},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"     * @param name        Name of the task."},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"     * @param isCompleted Boolean indicating whether the task has been completed."},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"     * @param eventTime   String denoting the event time."},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"    public EventTask(String name, boolean isCompleted, String eventTime) {"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"        super(IDENTIFIER, name, isCompleted);"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"        this.eventTime \u003d eventTime;"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"     * Returns the event time."},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"     * @return Event time."},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"    public String getEventTime() {"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"        return eventTime;"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"    public String getTaskType() {"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"        return taskType;"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"    public String toString() {"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + eventTime + \")\";"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":54}},{"path":"src/main/java/popo/tasks/PeriodTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.tasks;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import popo.utils.OutputDateTimeFormat;"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":" * Represents a task with a starting date and an ending date."},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"public class PeriodTask extends Task {"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    public static final String IDENTIFIER \u003d \"P\";"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    private final LocalDate startDate;"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    private final LocalDate endDate;"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code PeriodTask} object with the given task name, starting date and ending date,"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"     * with the task set to initially not completed."},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"     * @param name      Name of the task."},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"     * @param startDate Starting date of the task."},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     * @param endDate   Ending date of the task."},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    public PeriodTask(String name, LocalDate startDate, LocalDate endDate) {"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"        super(IDENTIFIER, name);"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"        this.startDate \u003d startDate;"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"        this.endDate \u003d endDate;"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code PeriodTask} object with the given task name, starting date and ending date,"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"     * with the task set to the boolean isCompleted."},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"     * @param name        Name of the task."},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"     * @param isCompleted Boolean indicating whether the task has been completed."},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"     * @param startDate   Starting date of the task."},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"     * @param endDate     Ending date of the task."},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    public PeriodTask(String name, boolean isCompleted, LocalDate startDate, LocalDate endDate) {"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"        super(IDENTIFIER, name, isCompleted);"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        this.startDate \u003d startDate;"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"        this.endDate \u003d endDate;"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"     * Returns the starting date in a nicely formatted string."},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"     * @return Formatted starting date string."},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"    public String getStartDate() {"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"        return startDate.format(OutputDateTimeFormat.OUTPUT_DATE_FORMAT);"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"     * Returns the ending date in a nicely formatted string."},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"     * @return Formatted ending date string."},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"    public String getEndDate() {"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"        return endDate.format(OutputDateTimeFormat.OUTPUT_DATE_FORMAT);"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"    public String getTaskType() {"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"        return taskType;"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"    public String toString() {"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"        return \"[P]\" + super.toString() + \" (period: \" + getStartDate() + \" - \" + getEndDate() + \")\";"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":72}},{"path":"src/main/java/popo/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.tasks;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":" * Represents a task."},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"public abstract class Task {"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"    protected final String taskType;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"    protected final String name;"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    protected boolean isCompleted;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"     * Constructor to create a {@code Task} object with the given task type and task name,"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"     * with the task set to initially not completed."},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"     * @param taskType Identifier of the task type."},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"     * @param name     Name of the task."},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    public Task(String taskType, String name) {"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"        this.name \u003d name;"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"        isCompleted \u003d false;"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"     * Constructor to create a {@code Task} object with the given task type and task name,"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"     * with the task set to the boolean isCompleted."},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"     * @param taskType    Identifier of the task type."},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"     * @param name        Name of the task."},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"     * @param isCompleted Boolean indicating whether the task has been completed."},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    public Task(String taskType, String name, boolean isCompleted) {"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"        this.name \u003d name;"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"        this.isCompleted \u003d isCompleted;"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"     * Returns the name of the task."},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"     * @return Name of the task."},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"    public String getName() {"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"        return name;"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"     * Returns the identifier of the type of task."},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"     * @return Identifier of task type."},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"    public abstract String getTaskType();"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"     * Checks if the task is already completed."},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"     * @return True if task is completed, else false."},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"    public boolean isDone() {"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"        return isCompleted;"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"     * Marks a task as completed."},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"    public void completeTask() {"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"        isCompleted \u003d true;"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"    public String toString() {"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"        return String.format(\"[%s] %s\", (isCompleted ? \"X\" : \" \"), name);"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":74}},{"path":"src/main/java/popo/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.tasks;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":" * Represents a list of {@code Task}."},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    private final List\u003cTask\u003e taskList;"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    public TaskList() {"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"     * Checks if the list of tasks is empty."},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"     * @return True if there are no tasks in the list, else false."},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"    public boolean isEmpty() {"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"        return taskList.isEmpty();"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"     * Returns the number of tasks in the list of tasks."},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"     * @return Number of tasks in task list."},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"    public int size() {"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"        return taskList.size();"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"     * Adds a task to the list of tasks."},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"     * @param task task to be added."},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"    public void addTask(Task task) {"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        taskList.add(task);"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"     * Deletes a task from the list of tasks."},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"     * @param index Index of the task to be removed in the list."},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"    public void deleteTask(int index) {"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"        taskList.remove(index);"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"     * Returns a task from the list of tasks according to the index specified."},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"     * @param index Index of the task to be retrieved."},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"     * @return {@code Task}."},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"    public Task getTask(int index) {"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"        return taskList.get(index);"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"     * Checks if the specified task is completed."},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"     * @param index Index of the task."},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"     * @return True if the task if completed, otherwise false."},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"    public boolean isTaskDone(int index) {"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"        return taskList.get(index).isDone();"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"     * Marks a task in the list of tasks as completed."},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"     * @param index Index of the task to be marked as completed."},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"    public void completeTask(int index) {"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"        taskList.get(index).completeTask();"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"     * Returns an unmodifiable view of the task list."},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"w2vgd"},"content":"     * @return An unmodifiable {@code List} of tasks."},{"lineNumber":86,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":"    public List\u003cTask\u003e unmodifiableList() {"},{"lineNumber":88,"author":{"gitId":"w2vgd"},"content":"        return Collections.unmodifiableList(taskList);"},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":90}},{"path":"src/main/java/popo/tasks/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.tasks;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":" * Represents a normal task."},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"public class ToDoTask extends Task {"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"    public static final String IDENTIFIER \u003d \"T\";"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code ToDoTask} object with the given task name,"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"     * with the task set to initially not completed."},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"     * @param name Name of the task."},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    public ToDoTask(String name) {"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"        super(IDENTIFIER, name);"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code ToDoTask} object with the given task name,"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"     * with the task set to the boolean isCompleted."},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"     * @param name        Name of the task."},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"     * @param isCompleted Boolean indicating whether the task has been completed."},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    public ToDoTask(String name, boolean isCompleted) {"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"        super(IDENTIFIER, name, isCompleted);"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"    public String getTaskType() {"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"        return taskType;"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    @Override"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    public String toString() {"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":39}},{"path":"src/main/java/popo/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.ui;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import javafx.geometry.Insets;"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import javafx.geometry.Pos;"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.Node;"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.control.Label;"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.image.Image;"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":" * Represents a dialogue box containing an avatar icon and the text message."},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"public class DialogBox extends HBox {"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    private static final Color COLOR_USER_DIALOG \u003d Color.rgb(100, 252, 200, 0.9);"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    private static final Color COLOR_POPO_DIALOG \u003d Color.rgb(150, 252, 150, 0.9);"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    private static final Color COLOR_ERROR_DIALOG \u003d Color.PINK;"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"    private Label dialog;"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"    private ImageView displayPicture;"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    private DialogBox() {"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"            fxmlLoader.load();"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        } catch (IOException ex) {"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"            ex.printStackTrace();"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"    private void setUpComponents(String text, Image img, Color backgroundColor) {"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"        setUpText(text);"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"        setUpAvatar(img);"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"        setUpBackground(backgroundColor);"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"    private void setUpText(String text) {"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"        dialog.setText(text);"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"    private void setUpAvatar(Image img) {"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"        displayPicture.setImage(img);"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"    private void setUpBackground(Color backgroundColor) {"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"        CornerRadii cornerRadii \u003d new CornerRadii(5);"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"        Insets insets \u003d new Insets(-4);"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"        BackgroundFill backgroundFill \u003d new BackgroundFill(backgroundColor, cornerRadii, insets);"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"        Background background \u003d new Background(backgroundFill);"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"        dialog.setBackground(background);"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"     * Creates a user dialogue box with the given user message text and the avatar icon."},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"     * @param text Text message."},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"     * @param img  Avatar icon image."},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":"     * @return {@code DialogBox} representing a user command."},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"        var db \u003d new DialogBox();"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"        db.setUpComponents(text, img, COLOR_USER_DIALOG);"},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"        return db;"},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"     * Creates a dialogue box with the given message text, the avatar icon,"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"     * and sets the background color according to whether the message is an error message."},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":85,"author":{"gitId":"w2vgd"},"content":"     * @param text       Text message."},{"lineNumber":86,"author":{"gitId":"w2vgd"},"content":"     * @param img        Avatar icon image."},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":"     * @param isErrorMsg Boolean indicating whether the message text is an error message."},{"lineNumber":88,"author":{"gitId":"w2vgd"},"content":"     * @return {@code DialogBox} representing a reply."},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":"    public static DialogBox getPopoDialog(String text, Image img, boolean isErrorMsg) {"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"        var db \u003d new DialogBox();"},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":"        if (isErrorMsg) {"},{"lineNumber":93,"author":{"gitId":"w2vgd"},"content":"            db.setUpComponents(text, img, COLOR_ERROR_DIALOG);"},{"lineNumber":94,"author":{"gitId":"w2vgd"},"content":"        } else {"},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":"            db.setUpComponents(text, img, COLOR_POPO_DIALOG);"},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"        db.flip();"},{"lineNumber":98,"author":{"gitId":"w2vgd"},"content":"        return db;"},{"lineNumber":99,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":100,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":101,"author":{"gitId":"w2vgd"},"content":"    private void flip() {"},{"lineNumber":102,"author":{"gitId":"w2vgd"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(getChildren());"},{"lineNumber":103,"author":{"gitId":"w2vgd"},"content":"        Collections.reverse(tmp);"},{"lineNumber":104,"author":{"gitId":"w2vgd"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":105,"author":{"gitId":"w2vgd"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":106,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":107,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":107}},{"path":"src/main/java/popo/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.ui;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static popo.utils.Messages.MESSAGE_INVALID_INDEX;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import javafx.geometry.Insets;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.control.Button;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.image.Image;"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.layout.Background;"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.layout.BackgroundFill;"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.layout.CornerRadii;"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.paint.Color;"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"import javafx.stage.Stage;"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"import popo.commands.Command;"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"import popo.commands.CommandResult;"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"import popo.commands.exceptions.InvalidCommandException;"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"import popo.commands.exceptions.InvalidDescriptionException;"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"import popo.commands.exceptions.NoDescriptionException;"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"import popo.parser.Parser;"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"import popo.storage.Storage;"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"import popo.storage.exceptions.StorageException;"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.TaskList;"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":" * The Main Window. Provides the basic application layout."},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"public class MainWindow extends VBox {"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"    @FXML"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    private VBox dialogContainer;"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    @FXML"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"    private TextField userInput;"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    @FXML"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    private Button sendButton;"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"    @FXML"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"    private HBox bottomContainer;"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"    private Storage storage;"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    private TaskList taskList;"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    private Stage primaryStage;"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"    private Image userImage;"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"    private Image popoImage;"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"     * Initializes the required components and sets up the avatar icons."},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"    @FXML"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"    public void initialize() {"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"        setUpAvatarIcons();"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"        automateScrolling();"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"        setUpContainerBackground();"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"    private void setUpAvatarIcons() {"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"        userImage \u003d new Image(getClass().getResourceAsStream(\"/images/user.png\"));"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"        popoImage \u003d new Image(getClass().getResourceAsStream(\"/images/popo.png\"));"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"    private void automateScrolling() {"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"    private void setUpContainerBackground() {"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"        BackgroundFill backgroundFill \u003d new BackgroundFill(Color.LIGHTPINK, CornerRadii.EMPTY, Insets.EMPTY);"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"        Background background \u003d new Background(backgroundFill);"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"        bottomContainer.setBackground(background);"},{"lineNumber":72,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":74,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"w2vgd"},"content":"     * Sets up the required components for the MainWindow."},{"lineNumber":76,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":77,"author":{"gitId":"w2vgd"},"content":"     * @param storage      {@code Storage} object that handles file operations."},{"lineNumber":78,"author":{"gitId":"w2vgd"},"content":"     * @param taskList     The loaded task list from storage."},{"lineNumber":79,"author":{"gitId":"w2vgd"},"content":"     * @param primaryStage The primary stage of the application."},{"lineNumber":80,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":81,"author":{"gitId":"w2vgd"},"content":"    public void setComponents(Storage storage, TaskList taskList, Stage primaryStage) {"},{"lineNumber":82,"author":{"gitId":"w2vgd"},"content":"        this.storage \u003d storage;"},{"lineNumber":83,"author":{"gitId":"w2vgd"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":84,"author":{"gitId":"w2vgd"},"content":"        this.primaryStage \u003d primaryStage;"},{"lineNumber":85,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":87,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"w2vgd"},"content":"     * Adds the welcome message label."},{"lineNumber":89,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":90,"author":{"gitId":"w2vgd"},"content":"    public void addWelcomeMessage() {"},{"lineNumber":91,"author":{"gitId":"w2vgd"},"content":"        String welcomeMsg \u003d \"Hello! I\u0027m Popo, a personal assistant for managing task.\\nWhat can I do for you?\";"},{"lineNumber":92,"author":{"gitId":"w2vgd"},"content":"        DialogBox greetingDialog \u003d DialogBox.getPopoDialog(welcomeMsg, popoImage, false);"},{"lineNumber":93,"author":{"gitId":"w2vgd"},"content":"        dialogContainer.getChildren().add(greetingDialog);"},{"lineNumber":94,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":96,"author":{"gitId":"w2vgd"},"content":"    @FXML"},{"lineNumber":97,"author":{"gitId":"w2vgd"},"content":"    private void handleUserInput() {"},{"lineNumber":98,"author":{"gitId":"w2vgd"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":99,"author":{"gitId":"w2vgd"},"content":"        String response;"},{"lineNumber":100,"author":{"gitId":"w2vgd"},"content":"        boolean isErrorMsg \u003d false;"},{"lineNumber":101,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":102,"author":{"gitId":"w2vgd"},"content":"            Command command \u003d new Parser().parseCommand(input);"},{"lineNumber":103,"author":{"gitId":"w2vgd"},"content":"            CommandResult commandResult \u003d executeCommand(command);"},{"lineNumber":104,"author":{"gitId":"w2vgd"},"content":"            if (commandResult.isExitingProgram()) {"},{"lineNumber":105,"author":{"gitId":"w2vgd"},"content":"                exit();"},{"lineNumber":106,"author":{"gitId":"w2vgd"},"content":"            }"},{"lineNumber":107,"author":{"gitId":"w2vgd"},"content":"            storage.saveTasksIfPresent(commandResult.getUpdatedTaskList());"},{"lineNumber":108,"author":{"gitId":"w2vgd"},"content":"            updateTaskListIfPresent(commandResult.getUpdatedTaskList());"},{"lineNumber":109,"author":{"gitId":"w2vgd"},"content":"            response \u003d commandResult.getMessageForUser();"},{"lineNumber":110,"author":{"gitId":"w2vgd"},"content":"        } catch (InvalidCommandException | StorageException | InvalidDescriptionException"},{"lineNumber":111,"author":{"gitId":"w2vgd"},"content":"                | NoDescriptionException ex) {"},{"lineNumber":112,"author":{"gitId":"w2vgd"},"content":"            response \u003d ex.getMessage();"},{"lineNumber":113,"author":{"gitId":"w2vgd"},"content":"            isErrorMsg \u003d true;"},{"lineNumber":114,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":115,"author":{"gitId":"w2vgd"},"content":"        DialogBox userDialog \u003d DialogBox.getUserDialog(input, userImage);"},{"lineNumber":116,"author":{"gitId":"w2vgd"},"content":"        DialogBox popoDialog \u003d DialogBox.getPopoDialog(response, popoImage, isErrorMsg);"},{"lineNumber":117,"author":{"gitId":"w2vgd"},"content":"        dialogContainer.getChildren().addAll(userDialog, popoDialog);"},{"lineNumber":118,"author":{"gitId":"w2vgd"},"content":"        userInput.clear();"},{"lineNumber":119,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":120,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":121,"author":{"gitId":"w2vgd"},"content":"    private CommandResult executeCommand(Command command) throws InvalidDescriptionException {"},{"lineNumber":122,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":123,"author":{"gitId":"w2vgd"},"content":"            command.setTaskList(taskList);"},{"lineNumber":124,"author":{"gitId":"w2vgd"},"content":"            return command.execute();"},{"lineNumber":125,"author":{"gitId":"w2vgd"},"content":"        } catch (IndexOutOfBoundsException ex) {"},{"lineNumber":126,"author":{"gitId":"w2vgd"},"content":"            throw new InvalidDescriptionException(MESSAGE_INVALID_INDEX);"},{"lineNumber":127,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":130,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":131,"author":{"gitId":"w2vgd"},"content":"     * Updates the cached task list if it was modified by the previous command."},{"lineNumber":132,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":133,"author":{"gitId":"w2vgd"},"content":"     * @param taskList Updated task list."},{"lineNumber":134,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":135,"author":{"gitId":"w2vgd"},"content":"    private void updateTaskListIfPresent(TaskList taskList) {"},{"lineNumber":136,"author":{"gitId":"w2vgd"},"content":"        if (taskList !\u003d null) {"},{"lineNumber":137,"author":{"gitId":"w2vgd"},"content":"            this.taskList \u003d taskList;"},{"lineNumber":138,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":140,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":141,"author":{"gitId":"w2vgd"},"content":"    private void exit() {"},{"lineNumber":142,"author":{"gitId":"w2vgd"},"content":"        primaryStage.hide();"},{"lineNumber":143,"author":{"gitId":"w2vgd"},"content":"        System.exit(0);"},{"lineNumber":144,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":145}},{"path":"src/main/java/popo/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.ui;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.Scene;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import popo.Main;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"import popo.storage.Storage;"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.TaskList;"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":" * Manages the UI component of the application."},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"public class Ui {"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    private final Storage storage;"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    private final TaskList taskList;"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"     * Creates a {@code Ui} object that handles the GUI."},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"     * @param storage  {@code Storage} object that handles file operations."},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"     * @param taskList The loaded task list from storage."},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    public Ui(Storage storage, TaskList taskList) {"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"        this.storage \u003d storage;"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"     * Starts the GUI."},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"     * @param primaryStage The primary stage of the application."},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    public void start(Stage primaryStage) {"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"            VBox mainWindow \u003d fxmlLoader.load();"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setComponents(storage, taskList, primaryStage);"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().addWelcomeMessage();"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"            Scene scene \u003d new Scene(mainWindow);"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"            scene.getStylesheets().add(Main.class.getResource(\"/view/Styles.css\").toExternalForm());"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"            setStageTitleAndSize(primaryStage);"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"            primaryStage.setScene(scene);"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"            primaryStage.show();"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"        } catch (IOException ex) {"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"            ex.printStackTrace();"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"    private void setStageTitleAndSize(Stage primaryStage) {"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"        primaryStage.setTitle(\"Popo\");"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"        primaryStage.setMinWidth(500.0);"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"        primaryStage.setMinHeight(400.0);"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":59}},{"path":"src/main/java/popo/utils/InputDateTimeFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.utils;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":" * Specify the date time formats used as input."},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"public class InputDateTimeFormat {"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"     * User input date format, e.g. 23/1/2021."},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    public static final DateTimeFormatter INPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/y\");"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"     * User input time format in 24-hour clock, e.g. 1800."},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    public static final DateTimeFormatter INPUT_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"HHmm\");"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":18}},{"path":"src/main/java/popo/utils/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.utils;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":" * Container for messages to be shown to user."},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"public class Messages {"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"    // Messages to show to user upon a parse error."},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_EMPTY_DESCRIPTION \u003d \"The description of a task cannot be empty.\";"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_ENTER_COMMAND \u003d \"Please enter a command.\";"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_ENTER_POSITIVE_DURATION \u003d \"Please enter a positive duration!\";"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_FOLLOW_USAGE \u003d \"Please follow the usage as shown below:\";"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_INDICATE_TASK \u003d \"Please indicate a task number.\";"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_INVALID_COMMAND \u003d \"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_INVALID_DURATION \u003d \"Please enter a valid number for the duration.\";"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_INVALID_SYNTAX \u003d \"Invalid description syntax.\";"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_INVALID_TASK_INDEX \u003d \"Please enter a valid task number\";"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_MISSING_SEARCH_WORD \u003d \"Please enter a search word or phrase!\";"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    // Messages to show to user upon successful execution of a command."},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_ADDED_TASK \u003d \"Got it. I\u0027ve added this task:\";"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_DELETED_TASK \u003d \"Noted. I\u0027ve removed this task:\";"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_DONE_TASK \u003d \"Nice! I\u0027ve marked this task as done:\";"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_EMPTY_TASKLIST \u003d \"You do not have anything to do at the moment!\";"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_FOUND_TASKS \u003d \"Here are the matching tasks in your list:\";"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_HELP \u003d \"Here is the list of available commands:\";"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_INDEX_TASK_FORMAT \u003d \"%d.%s\";"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_NO_MATCHES \u003d \"Sorry, there are no matching tasks in your list\";"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_SHOW_TASKLIST \u003d \"Here are the tasks in your list:\";"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_TASK_ALREADY_COMPLETED \u003d \"This task is already completed!\";"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_TASKLIST_SIZE_FORMAT \u003d \"Now you have %d tasks in your list.\";"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    // Message to show to user upon failed execution of a command."},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Please enter a valid index!\";"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":34}},{"path":"src/main/java/popo/utils/OutputDateTimeFormat.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.utils;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":" * Specify the date time formats used as output."},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":" */"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"public class OutputDateTimeFormat {"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"     * Output date format, e.g. Jan 23 2021."},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    public static final DateTimeFormatter OUTPUT_DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM d y\");"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"     * Output time format, e.g. 7:33PM."},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    public static final DateTimeFormatter OUTPUT_TIME_FORMAT \u003d DateTimeFormatter.ofPattern(\"h:mma\");"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":18}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" spacing\u003d\"10.0\""},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"15.0\"/\u003e"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"w2vgd":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"popo.ui.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" vbarPolicy\u003d\"ALWAYS\" vvalue\u003d\"1.0\" VBox.vgrow\u003d\"ALWAYS\""},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"                fitToWidth\u003d\"true\"\u003e"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"        \u003ccontent\u003e"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"            \u003cVBox fx:id\u003d\"dialogContainer\" VBox.vgrow\u003d\"ALWAYS\"/\u003e"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"        \u003c/content\u003e"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    \u003c/ScrollPane\u003e"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"    \u003cHBox fx:id\u003d\"bottomContainer\" minHeight\u003d\"40.0\" prefHeight\u003d\"40.0\" spacing\u003d\"2\" VBox.vgrow\u003d\"NEVER\"\u003e"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"        \u003cpadding\u003e"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"            \u003cInsets top\u003d\"2\" right\u003d\"2\" bottom\u003d\"2\" left\u003d\"2\"/\u003e"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"        \u003c/padding\u003e"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"        \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\" promptText\u003d\"Enter a command\""},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"                   HBox.hgrow\u003d\"ALWAYS\"/\u003e"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"        \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"40.0\""},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"                prefWidth\u003d\"70.0\" text\u003d\"Send\" HBox.hgrow\u003d\"ALWAYS\"/\u003e"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    \u003c/HBox\u003e"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"\u003c/VBox\u003e"}],"authorContributionMap":{"w2vgd":25}},{"path":"src/test/java/popo/commands/CommandResultTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.commands;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.Task;"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"import popo.tasks.TaskList;"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"public class CommandResultTest {"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"    public void getMessageForUser_emptyMessage_success() {"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"\", new CommandResult(false).getMessageForUser());"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    public void getMessageForUser_nonEmptyMessage_success() {"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"Good\", new CommandResult(false, \"Good\").getMessageForUser());"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    public void getUpdatedTaskList_nullTaskList_nullReturned() {"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"        assertNull(new CommandResult(false).getUpdatedTaskList());"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"    public void getUpdatedTaskList_emptyTaskList_success() {"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"        TaskListStub taskListStub \u003d new TaskListStub();"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"        assertEquals(taskListStub, new CommandResult(taskListStub, false).getUpdatedTaskList());"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    public void isExitingProgram_exiting_true() {"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"        assertTrue(new CommandResult(true).isExitingProgram());"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    public void isExitingProgram_notExiting_false() {"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"        assertFalse(new CommandResult(false).isExitingProgram());"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"    private static class TaskListStub extends TaskList {"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"        private final List\u003cTask\u003e taskList;"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"        public TaskListStub() {"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"            taskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":55}},{"path":"src/test/java/popo/tasks/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.tasks;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalDate;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"import java.time.LocalTime;"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"public class DeadlineTaskTest {"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    private static final String TASK_NAME \u003d \"Return Book\";"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"    private static final LocalDate DEADLINE_DATE \u003d LocalDate.parse(\"24/1/2021\","},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"            DateTimeFormatter.ofPattern(\"d/M/y\"));"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    private static final LocalTime DEADLINE_TIME \u003d LocalTime.parse(\"1800\","},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"            DateTimeFormatter.ofPattern(\"HHmm\"));"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    public void testStringConversion() {"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"[D][ ] Return Book (by: Jan 24 2021, 6:00PM)\","},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"                new DeadlineTask(TASK_NAME, DEADLINE_DATE, DEADLINE_TIME).toString());"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"[D][ ] Return Book (by: Jan 24 2021)\","},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"                new DeadlineTask(TASK_NAME, DEADLINE_DATE).toString());"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"[D][ ] Return Book (by: Jan 24 2021, 6:00PM)\","},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"                new DeadlineTask(TASK_NAME, false, DEADLINE_DATE, DEADLINE_TIME).toString());"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"[D][X] Return Book (by: Jan 24 2021, 6:00PM)\","},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"                new DeadlineTask(TASK_NAME, true, DEADLINE_DATE, DEADLINE_TIME).toString());"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"    public void getName_emptyString_success() {"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"\", new DeadlineTask(\"\", DEADLINE_DATE, DEADLINE_TIME).getName());"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    public void getName_nonEmptyString_success() {"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"        assertEquals(TASK_NAME, new DeadlineTask(TASK_NAME, DEADLINE_DATE, DEADLINE_TIME).getName());"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"    public void getTaskType_deadlineTask_success() {"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"D\", new DeadlineTask(\"\", DEADLINE_DATE, DEADLINE_TIME).getTaskType());"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"    public void isDone_completedTask_true() {"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"        assertTrue(new DeadlineTask(TASK_NAME, true, DEADLINE_DATE).isDone());"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"        assertTrue(new DeadlineTask(TASK_NAME, true, DEADLINE_DATE, DEADLINE_TIME).isDone());"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":"    public void isDone_notCompletedTask_false() {"},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"        assertFalse(new DeadlineTask(TASK_NAME, false, DEADLINE_DATE).isDone());"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"        assertFalse(new DeadlineTask(TASK_NAME, false, DEADLINE_DATE, DEADLINE_TIME).isDone());"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":60,"author":{"gitId":"w2vgd"},"content":"    public void completeTask_notCompletedTask_success() {"},{"lineNumber":61,"author":{"gitId":"w2vgd"},"content":"        DeadlineTask deadlineTask \u003d new DeadlineTask(TASK_NAME, false, DEADLINE_DATE, DEADLINE_TIME);"},{"lineNumber":62,"author":{"gitId":"w2vgd"},"content":"        deadlineTask.completeTask();"},{"lineNumber":63,"author":{"gitId":"w2vgd"},"content":"        assertTrue(deadlineTask.isDone());"},{"lineNumber":64,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":66,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":67,"author":{"gitId":"w2vgd"},"content":"    public void getDeadline_deadlineTask_success() {"},{"lineNumber":68,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"Jan 24 2021\", new DeadlineTask(TASK_NAME, DEADLINE_DATE).getDeadline());"},{"lineNumber":69,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"Jan 24 2021, 6:00PM\", new DeadlineTask(TASK_NAME, DEADLINE_DATE, DEADLINE_TIME).getDeadline());"},{"lineNumber":70,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":71}},{"path":"src/test/java/popo/tasks/EventTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.tasks;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"public class EventTaskTest {"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    private static final String TASK_NAME \u003d \"Project Meeting\";"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"    private static final String EVENT_TIME \u003d \"Friday 2-4pm\";"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"    public void testStringConversion() {"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"[E][ ] Project Meeting (at: Friday 2-4pm)\","},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"                new EventTask(TASK_NAME, EVENT_TIME).toString());"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"[E][ ] Project Meeting (at: Friday 2-4pm)\","},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"                new EventTask(TASK_NAME, false, EVENT_TIME).toString());"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"[E][X] Project Meeting (at: Friday 2-4pm)\","},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"                new EventTask(TASK_NAME, true, EVENT_TIME).toString());"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    public void getName_emptyString_success() {"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"\", new EventTask(\"\", EVENT_TIME).getName());"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    public void getName_nonEmptyString_success() {"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"Project Meeting\", new EventTask(TASK_NAME, EVENT_TIME).getName());"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"    public void getTaskType_eventTask_success() {"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"E\", new EventTask(\"\", EVENT_TIME).getTaskType());"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    public void isDone_completedTask_true() {"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"        assertTrue(new EventTask(TASK_NAME, true, EVENT_TIME).isDone());"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    public void isDone_notCompletedTask_false() {"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"        assertFalse(new EventTask(TASK_NAME, false, EVENT_TIME).isDone());"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"    public void completeTask_notCompletedTask_success() {"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"        EventTask eventTask \u003d new EventTask(TASK_NAME, false, EVENT_TIME);"},{"lineNumber":51,"author":{"gitId":"w2vgd"},"content":"        eventTask.completeTask();"},{"lineNumber":52,"author":{"gitId":"w2vgd"},"content":"        assertTrue(eventTask.isDone());"},{"lineNumber":53,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":55,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":56,"author":{"gitId":"w2vgd"},"content":"    public void getEventTime_eventTask_success() {"},{"lineNumber":57,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"Friday 2-4pm\", new EventTask(TASK_NAME, EVENT_TIME).getEventTime());"},{"lineNumber":58,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":59}},{"path":"src/test/java/popo/tasks/ToDoTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"package popo.tasks;"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"public class ToDoTaskTest {"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"    private static final String TASK_NAME \u003d \"Read Book\";"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"    public void testStringConversion() {"},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"[T][ ] Read Book\", new ToDoTask(TASK_NAME).toString());"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"[T][ ] Read Book\", new ToDoTask(TASK_NAME, false).toString());"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"[T][X] Read Book\", new ToDoTask(TASK_NAME, true).toString());"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"    public void getName_emptyString_success() {"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"\", new ToDoTask(\"\").getName());"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"    public void getName_nonEmptyString_success() {"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"        assertEquals(TASK_NAME, new ToDoTask(TASK_NAME).getName());"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":29,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"w2vgd"},"content":"    public void getTaskType_toDoTask_success() {"},{"lineNumber":31,"author":{"gitId":"w2vgd"},"content":"        assertEquals(\"T\", new ToDoTask(\"\").getTaskType());"},{"lineNumber":32,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":34,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":35,"author":{"gitId":"w2vgd"},"content":"    public void isDone_completedTask_true() {"},{"lineNumber":36,"author":{"gitId":"w2vgd"},"content":"        assertTrue(new ToDoTask(TASK_NAME, true).isDone());"},{"lineNumber":37,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":39,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":40,"author":{"gitId":"w2vgd"},"content":"    public void isDone_notCompletedTask_false() {"},{"lineNumber":41,"author":{"gitId":"w2vgd"},"content":"        assertFalse(new ToDoTask(TASK_NAME, false).isDone());"},{"lineNumber":42,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"w2vgd"},"content":""},{"lineNumber":44,"author":{"gitId":"w2vgd"},"content":"    @Test"},{"lineNumber":45,"author":{"gitId":"w2vgd"},"content":"    public void completeTask_notCompletedTask_success() {"},{"lineNumber":46,"author":{"gitId":"w2vgd"},"content":"        ToDoTask toDoTask \u003d new ToDoTask(TASK_NAME, false);"},{"lineNumber":47,"author":{"gitId":"w2vgd"},"content":"        toDoTask.completeTask();"},{"lineNumber":48,"author":{"gitId":"w2vgd"},"content":"        assertTrue(toDoTask.isDone());"},{"lineNumber":49,"author":{"gitId":"w2vgd"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"w2vgd"},"content":"}"}],"authorContributionMap":{"w2vgd":50}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"w2vgd"},"content":"list"},{"lineNumber":2,"author":{"gitId":"w2vgd"},"content":"help"},{"lineNumber":3,"author":{"gitId":"w2vgd"},"content":"todo read book"},{"lineNumber":4,"author":{"gitId":"w2vgd"},"content":"deadline return book /by 24/1/2021 1800"},{"lineNumber":5,"author":{"gitId":"w2vgd"},"content":"event project meeting for cs2103t /at next friday 2-4pm"},{"lineNumber":6,"author":{"gitId":"w2vgd"},"content":"list"},{"lineNumber":7,"author":{"gitId":"w2vgd"},"content":"done 2"},{"lineNumber":8,"author":{"gitId":"w2vgd"},"content":"deadline"},{"lineNumber":9,"author":{"gitId":"w2vgd"},"content":"deadline CS2103T luminus quiz 2"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"deadline CS2103T luminus quiz 2 /by 22/1"},{"lineNumber":11,"author":{"gitId":"w2vgd"},"content":"deadline CS2103T luminus quiz 2 /by 22/1/2021,2401"},{"lineNumber":12,"author":{"gitId":"w2vgd"},"content":"deadline CS2103T luminus quiz 2 /by 22/1/2021,1400"},{"lineNumber":13,"author":{"gitId":"w2vgd"},"content":"done "},{"lineNumber":14,"author":{"gitId":"w2vgd"},"content":"done read book"},{"lineNumber":15,"author":{"gitId":"w2vgd"},"content":"done 100"},{"lineNumber":16,"author":{"gitId":"w2vgd"},"content":"done 4"},{"lineNumber":17,"author":{"gitId":"w2vgd"},"content":"list"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"blah"},{"lineNumber":19,"author":{"gitId":"w2vgd"},"content":"delete"},{"lineNumber":20,"author":{"gitId":"w2vgd"},"content":"delete 2"},{"lineNumber":21,"author":{"gitId":"w2vgd"},"content":"delete 3"},{"lineNumber":22,"author":{"gitId":"w2vgd"},"content":"list"},{"lineNumber":23,"author":{"gitId":"w2vgd"},"content":"deadline book review /by 31/1/2021, 2359"},{"lineNumber":24,"author":{"gitId":"w2vgd"},"content":"find book"},{"lineNumber":25,"author":{"gitId":"w2vgd"},"content":"find read book"},{"lineNumber":26,"author":{"gitId":"w2vgd"},"content":"find random"},{"lineNumber":27,"author":{"gitId":"w2vgd"},"content":"bye"}],"authorContributionMap":{"w2vgd":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"w2vgd"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\popo\\*.java"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":14,"author":{"gitId":"-"},"content":")"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":16,"author":{"gitId":"-"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":18,"author":{"gitId":"w2vgd"},"content":"java -classpath ..\\bin popo.Main \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"-":19,"w2vgd":2}}]
